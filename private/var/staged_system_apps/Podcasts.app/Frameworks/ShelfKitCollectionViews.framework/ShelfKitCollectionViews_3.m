uint64_t sub_1A81C8(__int16 a1, void *a2)
{
  double v3;
  double v4;
  uint64_t v5;
  char v6;
  __int16 v7;
  unsigned __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  id v20;
  id v21;
  double v22;
  char v23;
  __int16 v24;
  unsigned __int16 v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  char v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  char v40;
  __int16 v41;
  unsigned __int16 v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  unsigned __int16 v72;

  v3 = 0.0;
  v4 = 0.0;
  if ((a1 & 1) != 0)
  {
    v5 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
    v6 = static UITraitCollection.interfaceIdiomIsMac.getter(v5);
    if (qword_3CF5A8 != -1)
      swift_once(&qword_3CF5A8, sub_140B78);
    if (HIBYTE(word_3FC028))
      v7 = 256;
    else
      v7 = 0;
    v8 = v7 | word_3FC028 | 0x8000;
    v9 = 0x403C000000000000;
    if ((v6 & 1) != 0)
      v9 = 0x4030000000000000;
    v62 = v9;
    v63 = 0;
    LOBYTE(v64) = 0;
    *((_QWORD *)&v64 + 1) = qword_3FBFD0;
    v65 = *(_QWORD *)algn_3FBFD8;
    v66 = xmmword_3FBFE0;
    v67 = qword_3FBFF0;
    v68 = xmmword_3FBFF8;
    v69 = qword_3FC008;
    v70 = xmmword_3FC010;
    v71 = qword_3FC020;
    v72 = v8;
    sub_DDA0((void *)qword_3FBFD0, *(uint64_t *)algn_3FBFD8, xmmword_3FBFE0, *((uint64_t *)&xmmword_3FBFE0 + 1), qword_3FBFF0, xmmword_3FBFF8, *((void **)&xmmword_3FBFF8 + 1), qword_3FC008, xmmword_3FC010, *((uint64_t *)&xmmword_3FC010 + 1), qword_3FC020, word_3FC028, SHIBYTE(word_3FC028));
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v10 = type metadata accessor for FloatingPointRoundingRule(0);
    v11 = __swift_project_value_buffer(v10, (uint64_t)qword_3FCFB0);
    sub_1DD06C((uint64_t)a2, v11, 0);
    v4 = v12;
    sub_14788(*((id *)&v64 + 1), v65, v66, *((uint64_t *)&v66 + 1), v67, v68, *((void **)&v68 + 1), v69, v70, *((uint64_t *)&v70 + 1), v71, v72);
  }
  v13 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v14 = static UITraitCollection.interfaceIdiomIsMac.getter(v13);
  if ((v14 & 1) != 0)
  {
    if (qword_3CF598 != -1)
      swift_once(&qword_3CF598, sub_140AA0);
    v15 = xmmword_3FBF38;
    v16 = xmmword_3FBF50;
    v17 = qword_3FBF60;
    v18 = word_3FBF68;
    v19 = HIBYTE(word_3FBF68);
    v62 = qword_3FBF10;
    v63 = *(_QWORD *)algn_3FBF18;
    v48 = (void *)qword_3FBF10;
    v49 = qword_3FBF48;
    v56 = xmmword_3FBF20;
    v58 = *(_QWORD *)algn_3FBF18;
    v64 = xmmword_3FBF20;
    v52 = qword_3FBF30;
    v54 = *((_QWORD *)&xmmword_3FBF20 + 1);
    v65 = qword_3FBF30;
    v50 = (void *)*((_QWORD *)&xmmword_3FBF38 + 1);
    v66 = xmmword_3FBF38;
    v67 = qword_3FBF48;
    v68 = xmmword_3FBF50;
    v69 = qword_3FBF60;
    LOWORD(v70) = word_3FBF68;
    sub_DDA0((void *)qword_3FBF10, *(uint64_t *)algn_3FBF18, xmmword_3FBF20, *((uint64_t *)&xmmword_3FBF20 + 1), qword_3FBF30, xmmword_3FBF38, *((void **)&xmmword_3FBF38 + 1), qword_3FBF48, xmmword_3FBF50, *((uint64_t *)&xmmword_3FBF50 + 1), qword_3FBF60, word_3FBF68, SHIBYTE(word_3FBF68));
    v20 = sub_1D5728((uint64_t)&v62, a2);
    v21 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v20, 0.0);

    sub_DCC8(v48, v58, v56, v54, v52, v15, v50, v49, v16, *((uint64_t *)&v16 + 1), v17, v18, v19);
    objc_msgSend(v21, "lineHeight");
    v3 = v22;

  }
  v23 = static UITraitCollection.interfaceIdiomIsMac.getter(v14);
  if (qword_3CF598 != -1)
    swift_once(&qword_3CF598, sub_140AA0);
  if (HIBYTE(word_3FBF68))
    v24 = 256;
  else
    v24 = 0;
  v25 = v24 | word_3FBF68 | 0x8000;
  v26 = 0x4034000000000000;
  if ((v23 & 1) != 0)
    v26 = 0x4030000000000000;
  v62 = v26;
  v63 = 0;
  LOBYTE(v64) = 0;
  *((_QWORD *)&v64 + 1) = qword_3FBF10;
  v65 = *(_QWORD *)algn_3FBF18;
  v66 = xmmword_3FBF20;
  v67 = qword_3FBF30;
  v68 = xmmword_3FBF38;
  v69 = qword_3FBF48;
  v70 = xmmword_3FBF50;
  v71 = qword_3FBF60;
  v72 = v25;
  sub_DDA0((void *)qword_3FBF10, *(uint64_t *)algn_3FBF18, xmmword_3FBF20, *((uint64_t *)&xmmword_3FBF20 + 1), qword_3FBF30, xmmword_3FBF38, *((void **)&xmmword_3FBF38 + 1), qword_3FBF48, xmmword_3FBF50, *((uint64_t *)&xmmword_3FBF50 + 1), qword_3FBF60, word_3FBF68, SHIBYTE(word_3FBF68));
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v27 = type metadata accessor for FloatingPointRoundingRule(0);
  v60 = __swift_project_value_buffer(v27, (uint64_t)qword_3FCFB0);
  sub_1DD06C((uint64_t)a2, v60, 0);
  v29 = v28;
  sub_14788(*((id *)&v64 + 1), v65, v66, *((uint64_t *)&v66 + 1), v67, v68, *((void **)&v68 + 1), v69, v70, *((uint64_t *)&v70 + 1), v71, v72);
  v31 = static UITraitCollection.interfaceIdiomIsMac.getter(v30);
  v32 = v3 + v4 + v29;
  v59 = (uint64_t)a2;
  if (qword_3CF5A0 != -1)
    swift_once(&qword_3CF5A0, sub_140B0C);
  v33 = *((_QWORD *)&xmmword_3FBF80 + 1);
  v34 = qword_3FBF90;
  v35 = xmmword_3FBF98;
  v36 = (void *)*((_QWORD *)&xmmword_3FBF98 + 1);
  v37 = xmmword_3FBFB0;
  v38 = qword_3FBFC0;
  v39 = word_3FBFC8;
  v40 = HIBYTE(word_3FBFC8);
  if (HIBYTE(word_3FBFC8))
    v41 = 256;
  else
    v41 = 0;
  v42 = v41 | word_3FBFC8 | 0x8000;
  v43 = 0x4034000000000000;
  if ((v31 & 1) != 0)
    v43 = 0x4030000000000000;
  v62 = v43;
  v63 = 0;
  LOBYTE(v64) = 0;
  v55 = *(_QWORD *)algn_3FBF78;
  v57 = (void *)qword_3FBF70;
  *((_QWORD *)&v64 + 1) = qword_3FBF70;
  v65 = *(_QWORD *)algn_3FBF78;
  v51 = qword_3FBFA8;
  v53 = xmmword_3FBF80;
  v66 = xmmword_3FBF80;
  v67 = qword_3FBF90;
  v68 = xmmword_3FBF98;
  v69 = qword_3FBFA8;
  v70 = xmmword_3FBFB0;
  v71 = qword_3FBFC0;
  v72 = v42;
  sub_DDA0((void *)qword_3FBF70, *(uint64_t *)algn_3FBF78, xmmword_3FBF80, *((uint64_t *)&xmmword_3FBF80 + 1), qword_3FBF90, xmmword_3FBF98, *((void **)&xmmword_3FBF98 + 1), qword_3FBFA8, xmmword_3FBFB0, *((uint64_t *)&xmmword_3FBFB0 + 1), qword_3FBFC0, word_3FBFC8, SHIBYTE(word_3FBFC8));
  sub_1DD06C(v59, v60, 0);
  v45 = v44;
  sub_DCC8(v57, v55, v53, v33, v34, v35, v36, v51, v37, *((uint64_t *)&v37 + 1), v38, v39, v40);
  v46 = v32 + v45 + sub_1AADCC();
  if ((a1 & 0x100) != 0)
  {
    if (qword_3CF888 != -1)
      swift_once(&qword_3CF888, sub_1A8C50);
    v46 = v46 + *(double *)&qword_3FCC08;
  }
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(1.0, v46);
}

double sub_1A8770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(uint64_t *);
  _QWORD *v15;
  char *v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_model);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_model) = 0;
  *(_QWORD *)&v3 = swift_release(v2).n128_u64[0];
  v4 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_titleAccessibilityLabel);
  if (v4)
    objc_msgSend(v4, "setAccessibilityLabel:", 0, v3);
  v5 = sub_1A8A0C();
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setText:", 0);

  }
  v7 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  objc_msgSend(v7, "setText:", 0);

  v8 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  objc_msgSend(v8, "setText:", 0);

  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_subtitleAction;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_subtitleAction);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_subtitleAction) = 0;
  swift_release(v10);
  sub_1A8C60();
  v11 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  objc_msgSend(v11, "setUserInteractionEnabled:", *(_QWORD *)(v1 + v9) != 0);

  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView;
  v13 = *(_QWORD **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView);
  v21 = 0;
  v22 = 0;
  v14 = *(void (**)(uint64_t *))&stru_388.segname[(swift_isaMask & *v13) + 8];
  v15 = v13;
  v14(&v21);

  v16 = *(char **)(v1 + v12);
  v17 = *(void **)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
  v18 = v16;
  v19 = objc_msgSend(v17, "layer", v21, v22);
  objc_msgSend(v19, "removeAllAnimations");

  objc_msgSend(v17, "setImage:", 0);
  objc_msgSend(v18, "invalidateIntrinsicContentSize");

  return sub_1AB2A4(0);
}

char *sub_1A8950()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int16 v18;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___artworkContainer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___artworkContainer);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___artworkContainer);
  }
  else
  {
    v4 = v0;
    v5 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView);
    v11 = 1;
    v12 = 0u;
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    v16 = 0u;
    v17 = 0u;
    v18 = 0;
    v6 = objc_allocWithZone((Class)type metadata accessor for ArtworkContainer(0));
    v7 = sub_2633EC(0, (char *)v5, &v11);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void *sub_1A8A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v8[11];
  __int16 v9;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___ordinalLabel;
  v3 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___ordinalLabel);
  v4 = v3;
  if (v3 == (_BYTE *)&dword_0 + 1)
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_style) == 1)
    {
      type metadata accessor for DynamicTypeLabel();
      if (qword_3CF5A8 != -1)
        swift_once(&qword_3CF5A8, sub_140B78);
      v8[0] = qword_3FBFD0;
      v8[1] = *(_QWORD *)algn_3FBFD8;
      v8[2] = qword_3FBFE0;
      v8[3] = qword_3FBFE8;
      v8[4] = qword_3FBFF0;
      v8[5] = *(_QWORD *)byte_3FBFF8;
      v8[6] = qword_3FC000;
      v8[7] = qword_3FC008;
      v8[8] = qword_3FC010;
      v8[9] = qword_3FC018;
      v8[10] = qword_3FC020;
      v9 = word_3FC028;
      sub_DDA0((void *)qword_3FBFD0, *(uint64_t *)algn_3FBFD8, qword_3FBFE0, qword_3FBFE8, qword_3FBFF0, byte_3FBFF8[0], (void *)qword_3FC000, qword_3FC008, qword_3FC010, qword_3FC018, qword_3FC020, word_3FC028, SHIBYTE(word_3FC028));
      v4 = sub_A96AC((uint64_t)v8, 1, 0, 1);
      v5 = *(void **)(v1 + v2);
    }
    else
    {
      v4 = 0;
      v5 = &dword_0 + 1;
    }
    *(_QWORD *)(v1 + v2) = v4;
    v6 = v4;
    sub_1AB148(v5);
  }
  sub_1AB158(v3);
  return v4;
}

id sub_1A8B40()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v2 = (void *)static UIFont.subhead.getter(v1);
  v3 = (void *)static UIFont.callout.getter();
  v4 = (void *)static UIFont.preferredFont(iOS:mac:)(v2, v3);

  objc_msgSend(v0, "setFont:", v4);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v0, "setNumberOfLines:", 1);
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v5);

  return v0;
}

void sub_1A8C50()
{
  qword_3FCC08 = 0x4024000000000000;
}

void sub_1A8C60()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  id v2;
  char v3;
  id v4;
  id v5;
  uint64_t inited;
  NSString *v7;
  NSString *v8;
  id v9;
  unint64_t v10;
  id v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  NSString v17;
  Class isa;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  NSString *v23;
  NSString *v24;
  id v25;
  unint64_t v26;
  id v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  NSString v33;
  Class v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  void *v39;
  char v40[112];
  char v41[120];

  v1 = v0;
  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.supportsPointerDevice.getter() & 1) == 0)
    return;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v3 & 1) == 0)
    return;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_subtitleAction])
  {
    v38 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle];
    if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle] & 1) == 0)
    {
LABEL_25:
      v5 = objc_msgSend(v1, "backgroundColor");
      if (v5)
        goto LABEL_11;
      goto LABEL_10;
    }
  }
  else
  {
    if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle] & 1) == 0
      && v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle] != 1)
    {
      v38 = 0;
      goto LABEL_25;
    }
    v38 = 1;
  }
  v4 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  v5 = objc_msgSend(v4, "textColor");

  if (!v5)
LABEL_10:
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
LABEL_11:
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
  inited = swift_initStackObject(v37, v41);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  *(_QWORD *)(inited + 32) = NSUnderlineStyleAttributeName;
  *(_QWORD *)(inited + 40) = 1;
  *(_QWORD *)(inited + 64) = &type metadata for Int;
  *(_QWORD *)(inited + 72) = NSUnderlineColorAttributeName;
  v36 = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  *(_QWORD *)(inited + 104) = v36;
  *(_QWORD *)(inited + 80) = v5;
  v7 = NSUnderlineStyleAttributeName;
  v8 = NSUnderlineColorAttributeName;
  v9 = v5;
  v10 = sub_D4784(inited);
  v11 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  v12 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  v13 = objc_msgSend(v12, "text");

  v39 = v9;
  if (v13)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;

  }
  else
  {
    v15 = 0xE000000000000000;
  }
  v16 = objc_allocWithZone((Class)NSMutableAttributedString);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  type metadata accessor for Key(0);
  sub_239FC((unint64_t *)&qword_3D0150, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v16, "initWithString:attributes:", v17, isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  objc_msgSend(v11, "setAttributedText:", v19);
  if (v38)
  {
    v20 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
    v21 = objc_msgSend(v20, "textColor");

  }
  else
  {
    v21 = objc_msgSend(v1, "backgroundColor");
  }
  if (!v21)
    v21 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v22 = swift_initStackObject(v37, v40);
  *(_OWORD *)(v22 + 16) = xmmword_2EFA20;
  *(_QWORD *)(v22 + 32) = v7;
  *(_QWORD *)(v22 + 40) = 1;
  *(_QWORD *)(v22 + 64) = &type metadata for Int;
  *(_QWORD *)(v22 + 72) = v8;
  *(_QWORD *)(v22 + 104) = v36;
  *(_QWORD *)(v22 + 80) = v21;
  v23 = v7;
  v24 = v8;
  v25 = v21;
  v26 = sub_D4784(v22);
  v27 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  v28 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  v29 = objc_msgSend(v28, "text");

  if (v29)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v31 = v30;

  }
  else
  {
    v31 = 0xE000000000000000;
  }
  v32 = objc_allocWithZone((Class)NSMutableAttributedString);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  v34 = Dictionary._bridgeToObjectiveC()().super.isa;
  v35 = objc_msgSend(v32, "initWithString:attributes:", v33, v34, swift_bridgeObjectRelease(v26).n128_f64[0]);

  objc_msgSend(v27, "setAttributedText:", v35);
}

char *sub_1A9198(__int16 a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  void *v19;
  void *v20;
  char *v21;
  id v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  objc_super v28;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView;
  v6 = v2;
  sub_1BFEF4();
  *(_QWORD *)&v2[v5] = v7;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_model] = 0;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isPresentedInSearch] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___artworkContainer] = 0;
  v8 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_preferredArtworkSize];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___ordinalLabel] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_titleAccessibilityLabel] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_explicitLabel] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_subtitleAction] = 0;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isHovering] = 0;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle] = 0;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_objectGraph] = 0;
  v9 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_style];
  *v9 = a1 & 1;
  v9[1] = HIBYTE(a1) & 1;

  v28.receiver = v6;
  v28.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = objc_allocWithZone((Class)UIAccessibilityElement);
  v12 = (char *)v10;
  v13 = objc_msgSend(v11, "initWithAccessibilityContainer:", v12);
  v14 = *(void **)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_titleAccessibilityLabel];
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_titleAccessibilityLabel] = v13;

  v15 = sub_1A8950();
  v16 = &v15[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_delegate];
  *((_QWORD *)v16 + 1) = &off_387F10;
  swift_unknownObjectWeakAssign(v16, v12);

  v17 = v12;
  v18 = sub_1A8950();
  objc_msgSend(v17, "addSubview:", v18);

  v19 = sub_1A8A0C();
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v17, "addSubview:", v19);

  }
  v21 = v17;
  v22 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  objc_msgSend(v21, "addSubview:", v22);

  v23 = v21;
  v24 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  objc_msgSend(v23, "addSubview:", v24);

  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.supportsPointerDevice.getter() & 1) != 0)
  {
    sub_B10CC();
    v25 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
    v26 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v23, "subtitleTapped");
    objc_msgSend(v25, "addGestureRecognizer:", v26);

  }
  objc_msgSend(v23, "setIsAccessibilityElement:", 1);
  objc_msgSend(v23, "setAccessibilityTraits:", UIAccessibilityTraitButton);

  return v23;
}

void sub_1A9504(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSString v14;
  void *v15;
  id v16;
  _BYTE v17[24];

  v2 = LegacyLockup.title.getter(a1);
  if (!v3)
    goto LABEL_9;
  v4 = v2;
  v5 = v3;
  v6 = swift_bridgeObjectRelease(v3);
  v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (v7 && (LegacyLockup.isExplicit.getter(v6) & 1) != 0)
  {
    swift_beginAccess(&off_3D3FF8, v17, 0, 0);
    if (off_3D3FF8)
    {
      v8 = *(_QWORD *)&stru_20.segname[(_QWORD)off_3D3FF8 + 8];
      v9 = *(_QWORD *)&stru_20.segname[(_QWORD)off_3D3FF8 + 16];
      __swift_project_boxed_opaque_existential_1((_QWORD *)off_3D3FF8 + 3, v8);
      dispatch thunk of StoreDataProvider.explicitSymbol.getter(v8, v9);
      v11 = v10;
      sub_1A9680();
      v12 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_explicitLabel);
      if (v12)
      {
        v13 = v12;
        v14 = String._bridgeToObjectiveC()();
        objc_msgSend(v13, "setText:", v14, swift_bridgeObjectRelease(v11).n128_f64[0]);

        objc_msgSend(v13, "setHidden:", 0);
      }
      else
      {
        swift_bridgeObjectRelease(v11);
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
LABEL_9:
    v15 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_explicitLabel);
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v16, "setText:", 0);
      objc_msgSend(v16, "setHidden:", 1);

    }
  }
}

void sub_1A9680()
{
  char *v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_explicitLabel;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_explicitLabel])
  {
    v2 = v0;
    v3 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v3, "setTextAlignment:", 1);
    v4 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v5 = (void *)static UIFont.subhead.getter(v4);
    v6 = (void *)static UIFont.callout.getter();
    v7 = (void *)static UIFont.preferredFont(iOS:mac:)(v5, v6);

    objc_msgSend(v3, "setFont:", v7);
    objc_msgSend(v3, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v3, "setNumberOfLines:", 1);
    v8 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    objc_msgSend(v3, "setTextColor:", v8);

    objc_msgSend(v3, "setHidden:", 1);
    objc_msgSend(v2, "addSubview:", v3);
    objc_msgSend(v2, "setNeedsLayout");
    v9 = *(void **)&v2[v1];
    *(_QWORD *)&v2[v1] = v3;

  }
}

double sub_1A980C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _QWORD v8[4];
  _QWORD v9[5];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_subtitleAction);
  if (v1)
  {
    ObjectType = swift_getObjectType();
    v9[3] = type metadata accessor for Action(0);
    v9[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v9[0] = v1;
    swift_retain_n(v1, 2);
    v3 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
    v8[3] = sub_E710(0, &qword_3DA868, UILabel_ptr);
    v8[0] = v3;
    v5 = sub_239FC(&qword_3DA870, v4, (uint64_t (*)(uint64_t))type metadata accessor for LargeLockupView, (uint64_t)&unk_2FC350);
    v6 = DependencyBindableView.perform(_:from:in:)(v9, v8, v0, ObjectType, v5);
    swift_release(v6);
    sub_1FE78((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_0(v9);
    sub_1A991C();
    *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  }
  return result;
}

void sub_1A991C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isPresentedInSearch) == 1)
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_model);
    if (v1)
    {
      v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_objectGraph);
      if (v2)
      {
        v3 = type metadata accessor for RecentlySearchedStorage(0);
        swift_retain(v1);
        swift_retain(v2);
        BaseObjectGraph.inject<A>(_:)(&v5, v3, v3);
        swift_release(v2);
        v4 = v5;
        RecentlySearchedStorage.add(_:)(v1);
        swift_release(v4);
        swift_release(v1);
      }
    }
  }
}

void sub_1A99FC()
{
  void *v0;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v5;
  double v6;
  double v7;
  double MinY;
  char *v9;
  double v10;
  double v11;
  id v12;
  char *v13;
  id v14;
  char *v15;
  id v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int16 v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int16 v54;
  int v55;
  unint64_t v56;
  unint64_t v57;
  double v58;
  double v59;
  uint64_t v60;
  _QWORD *v61;
  __int16 v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  __int16 v66;
  uint64_t v67;
  __int16 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  double MinX;
  double v87;
  char *v88;
  double v89;
  double v90;
  double MaxY;
  void *v92;
  _BYTE v93[7];
  _BYTE v94[7];
  objc_super v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;

  v95.receiver = v0;
  v95.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v95, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  x = v96.origin.x;
  y = v96.origin.y;
  width = v96.size.width;
  height = v96.size.height;
  v5 = CGRectGetWidth(v96);
  v97.origin.x = x;
  v97.origin.y = y;
  v97.size.width = width;
  v97.size.height = height;
  v6 = CGRectGetWidth(v97);
  v98.origin.x = x;
  v98.origin.y = y;
  v98.size.width = width;
  v98.size.height = height;
  v7 = CGRectGetMidX(v98) - v5 * 0.5;
  v99.origin.x = x;
  v99.origin.y = y;
  v99.size.width = width;
  v99.size.height = height;
  MinY = CGRectGetMinY(v99);
  v9 = sub_1A8950();
  objc_msgSend(v9, "setFrame:", v7, MinY, v5, v6);

  sub_1AA1F4();
  v89 = v11;
  v90 = v10;
  v12 = objc_msgSend(v0, "traitCollection");
  v88 = (char *)objc_msgSend(v12, "layoutDirection");

  v100.origin.x = v7;
  v100.origin.y = MinY;
  v100.size.width = v5;
  v100.size.height = v6;
  MaxY = CGRectGetMaxY(v100);
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_style + 1) == 1)
  {
    if (qword_3CF888 != -1)
      swift_once(&qword_3CF888, sub_1A8C50);
    MaxY = MaxY + *(double *)&qword_3FCC08;
    v13 = sub_1A8950();
    v14 = objc_msgSend(v13, "layer");

    objc_msgSend(v14, "setMasksToBounds:", 1);
    v15 = sub_1A8950();
    v16 = objc_msgSend(v15, "layer");

    objc_msgSend(v16, "setCornerRadius:", v5 * 0.5);
  }
  v101.origin.x = x;
  v101.origin.y = y;
  v101.size.width = width;
  v101.size.height = height;
  MinX = CGRectGetMinX(v101);
  v102.origin.x = x;
  v102.origin.y = y;
  v102.size.width = width;
  v102.size.height = height;
  v87 = CGRectGetWidth(v102);
  v103.origin.x = x;
  v103.origin.y = y;
  v103.size.width = width;
  v103.size.height = height;
  v17 = CGRectGetHeight(v103);
  v104.origin.x = v7;
  v104.origin.y = MinY;
  v104.size.width = v5;
  v104.size.height = v6;
  v18 = CGRectGetHeight(v104);
  v19 = sub_1A8A0C();
  v92 = v0;
  if (!v19)
    goto LABEL_21;
  v20 = v19;
  v21 = objc_msgSend(v19, "text");
  if (!v21)
    goto LABEL_20;
  v22 = v21;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v25 = v24;

  swift_bridgeObjectRelease(v25);
  v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v26 = v23 & 0xFFFFFFFFFFFFLL;
  if (!v26)
  {
LABEL_20:

LABEL_21:
    v35 = _swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v83 = v20;
  v27 = static UITraitCollection.interfaceIdiomIsMac.getter(v83);
  if (qword_3CF5A8 != -1)
    swift_once(&qword_3CF5A8, sub_140B78);
  v28 = qword_3FBFF0;
  v30 = xmmword_3FBFF8;
  v29 = qword_3FC008;
  v31 = xmmword_3FC010;
  v32 = qword_3FC020;
  if (HIBYTE(word_3FC028))
    v33 = 256;
  else
    v33 = 0;
  v68 = v33 | word_3FC028 | 0x8000;
  v34 = 0x403C000000000000;
  if ((v27 & 1) != 0)
    v34 = 0x4030000000000000;
  v65 = v34;
  v77 = *(_QWORD *)algn_3FBFD8;
  v80 = qword_3FBFD0;
  v71 = *((_QWORD *)&xmmword_3FBFE0 + 1);
  v74 = xmmword_3FBFE0;
  sub_DDA0((void *)qword_3FBFD0, *(uint64_t *)algn_3FBFD8, xmmword_3FBFE0, *((uint64_t *)&xmmword_3FBFE0 + 1), qword_3FBFF0, xmmword_3FBFF8, *((void **)&xmmword_3FBFF8 + 1), qword_3FC008, xmmword_3FC010, *((uint64_t *)&xmmword_3FC010 + 1), qword_3FC020, word_3FC028, SHIBYTE(word_3FC028));
  v35 = sub_20F290(0, 1, 1, _swiftEmptyArrayStorage);
  v37 = v35[2];
  v36 = v35[3];
  if (v37 >= v36 >> 1)
    v35 = sub_20F290((_QWORD *)(v36 > 1), v37 + 1, 1, v35);
  v94[0] = 0;
  v35[2] = v37 + 1;
  v38 = &v35[16 * v37];
  v38[4] = v83;
  v38[5] = v65;
  v38[6] = 0;
  *((_BYTE *)v38 + 56) = 0;
  v38[8] = v80;
  v38[9] = v77;
  v38[10] = v74;
  v38[11] = v71;
  v38[12] = v28;
  *(_OWORD *)(v38 + 13) = v30;
  v38[15] = v29;
  *((_OWORD *)v38 + 8) = v31;
  v38[18] = v32;
  *((_WORD *)v38 + 76) = v68;
  *((_WORD *)v38 + 77) = 1;

LABEL_22:
  v81 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  v84 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v39 = static UITraitCollection.interfaceIdiomIsMac.getter(v84);
  if (qword_3CF598 != -1)
    swift_once(&qword_3CF598, sub_140AA0);
  v40 = *(_QWORD *)algn_3FBF18;
  v41 = xmmword_3FBF20;
  v42 = qword_3FBF30;
  v44 = xmmword_3FBF38;
  v43 = qword_3FBF48;
  if (HIBYTE(word_3FBF68))
    v45 = 256;
  else
    v45 = 0;
  v66 = v45 | word_3FBF68 | 0x8000;
  v46 = 0x4034000000000000;
  if ((v39 & 1) != 0)
    v46 = 0x4030000000000000;
  v63 = v46;
  v69 = qword_3FBF60;
  v72 = *((_QWORD *)&xmmword_3FBF50 + 1);
  v75 = xmmword_3FBF50;
  v78 = qword_3FBF10;
  sub_DDA0((void *)qword_3FBF10, *(uint64_t *)algn_3FBF18, xmmword_3FBF20, *((uint64_t *)&xmmword_3FBF20 + 1), qword_3FBF30, xmmword_3FBF38, *((void **)&xmmword_3FBF38 + 1), qword_3FBF48, xmmword_3FBF50, *((uint64_t *)&xmmword_3FBF50 + 1), qword_3FBF60, word_3FBF68, SHIBYTE(word_3FBF68));
  if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
    v35 = sub_20F290(0, v35[2] + 1, 1, v35);
  v48 = v35[2];
  v47 = v35[3];
  if (v48 >= v47 >> 1)
    v35 = sub_20F290((_QWORD *)(v47 > 1), v48 + 1, 1, v35);
  v35[2] = v48 + 1;
  v49 = &v35[16 * v48];
  v49[4] = v81;
  v49[5] = v63;
  v49[6] = 0;
  *((_BYTE *)v49 + 56) = 0;
  *((_DWORD *)v49 + 15) = *(_DWORD *)&v94[3];
  *(_DWORD *)((char *)v49 + 57) = *(_DWORD *)v94;
  v49[8] = v78;
  v49[9] = v40;
  *((_OWORD *)v49 + 5) = v41;
  v49[12] = v42;
  *(_OWORD *)(v49 + 13) = v44;
  v49[15] = v43;
  v49[16] = v75;
  v49[17] = v72;
  v49[18] = v69;
  *((_WORD *)v49 + 76) = v66;
  *((_WORD *)v49 + 77) = 1;
  v82 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  v64 = static UITraitCollection.interfaceIdiomIsMac.getter(v82);
  if (qword_3CF5A0 != -1)
    swift_once(&qword_3CF5A0, sub_140B0C);
  v51 = *((_QWORD *)&xmmword_3FBF98 + 1);
  v50 = qword_3FBFA8;
  v52 = xmmword_3FBFB0;
  v53 = qword_3FBFC0;
  v54 = word_3FBFC8;
  v55 = HIBYTE(word_3FBFC8);
  v85 = qword_3FBF70;
  v76 = xmmword_3FBF80;
  v79 = *(_QWORD *)algn_3FBF78;
  v70 = qword_3FBF90;
  v73 = *((_QWORD *)&xmmword_3FBF80 + 1);
  v67 = xmmword_3FBF98;
  sub_DDA0((void *)qword_3FBF70, *(uint64_t *)algn_3FBF78, xmmword_3FBF80, *((uint64_t *)&xmmword_3FBF80 + 1), qword_3FBF90, xmmword_3FBF98, *((void **)&xmmword_3FBF98 + 1), qword_3FBFA8, xmmword_3FBFB0, *((uint64_t *)&xmmword_3FBFB0 + 1), qword_3FBFC0, word_3FBFC8, SHIBYTE(word_3FBFC8));
  v57 = v35[2];
  v56 = v35[3];
  if (v57 >= v56 >> 1)
    v35 = sub_20F290((_QWORD *)(v56 > 1), v57 + 1, 1, v35);
  v58 = -0.0;
  if (v88 == (_BYTE *)&dword_0 + 1)
    v58 = v90;
  v59 = MinX + v58;
  v60 = 0x4034000000000000;
  if ((v64 & 1) != 0)
    v60 = 0x4030000000000000;
  v35[2] = v57 + 1;
  v61 = &v35[16 * v57];
  v61[4] = v82;
  v61[5] = v60;
  v61[6] = 0;
  if (v55)
    v62 = 256;
  else
    v62 = 0;
  *((_BYTE *)v61 + 56) = 0;
  *((_DWORD *)v61 + 15) = *(_DWORD *)&v93[3];
  *(_DWORD *)((char *)v61 + 57) = *(_DWORD *)v93;
  v61[8] = v85;
  v61[9] = v79;
  v61[10] = v76;
  v61[11] = v73;
  v61[12] = v70;
  v61[13] = v67;
  v61[14] = v51;
  v61[15] = v50;
  *((_OWORD *)v61 + 8) = v52;
  v61[18] = v53;
  *((_WORD *)v61 + 76) = v62 | v54 | 0x8000;
  *((_WORD *)v61 + 77) = 1;
  sub_13BF4(v92, (uint64_t)v35, v59, MaxY, v87 - v90, v17 - v18);
  swift_bridgeObjectRelease(v35);
  sub_1AA3D0(v90, v89);
}

void sub_1AA1F4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  unint64_t v11;
  id v12;
  void *v13;
  char v14;
  uint64_t v15;

  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_explicitLabel];
  if (v5)
  {
    v6 = v5;
    if ((objc_msgSend(v6, "isHidden") & 1) != 0)
    {

    }
    else
    {
      objc_msgSend(v0, "bounds");
      v8 = v7;
      v10 = v9;
      v11 = (unint64_t)objc_msgSend(v6, "numberOfLines");
      v12 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
      if ((v11 & 0x8000000000000000) != 0)
      {
        v14 = 2;
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v14, 3451, 0);
        __break(1u);
      }
      else
      {
        v13 = v12;
        objc_msgSend(v12, "setMaximumNumberOfLines:", v11);
        objc_msgSend(v13, "setWrapsForTruncationMode:", v11 != 1);
        sub_21B824(v6, v13, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FloatingPointRoundingRule.awayFromZero(_:), v1);
        sub_2CDB88((int)v4, v6);

        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
    }
  }
}

void sub_1AA3D0(double a1, double a2)
{
  char *v2;
  void *v3;
  id v6;
  double v7;
  double v8;
  id v9;
  char *v10;
  double MaxX;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  id v21;
  CGRect v22;

  v3 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_explicitLabel];
  if (v3)
  {
    v21 = v3;
    if ((objc_msgSend(v21, "isHidden") & 1) == 0)
    {
      objc_msgSend(v21, "sizeToFit");
      v6 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
      objc_msgSend(v6, "frame");
      v8 = v7;

      v9 = objc_msgSend(v2, "traitCollection");
      v10 = (char *)objc_msgSend(v9, "layoutDirection");

      MaxX = 0.0;
      if (v10 != (_BYTE *)&dword_0 + 1)
      {
        v12 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
        objc_msgSend(v12, "frame");
        v14 = v13;
        v16 = v15;
        v18 = v17;
        v20 = v19;

        v22.origin.x = v14;
        v22.origin.y = v16;
        v22.size.width = v18;
        v22.size.height = v20;
        MaxX = CGRectGetMaxX(v22);
      }
      objc_msgSend(v21, "setFrame:", MaxX, v8, a1, a2);
    }

  }
}

BOOL sub_1AA580(CGFloat a1, CGFloat a2)
{
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  id v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  char *v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  id v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;

  v4 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  objc_msgSend(v4, "frame");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v41.origin.x = v6;
  v41.origin.y = v8;
  v41.size.width = v10;
  v41.size.height = v12;
  if (CGRectGetMinX(v41) >= a1)
    return 0;
  v13 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  objc_msgSend(v13, "frame");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v42.origin.x = v15;
  v42.origin.y = v17;
  v42.size.width = v19;
  v42.size.height = v21;
  if (CGRectGetMaxX(v42) <= a1)
    return 0;
  v22 = sub_1A8950();
  objc_msgSend(v22, "frame");
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  v43.origin.x = v24;
  v43.origin.y = v26;
  v43.size.width = v28;
  v43.size.height = v30;
  if (CGRectGetMaxY(v43) >= a2)
    return 0;
  v31 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  objc_msgSend(v31, "frame");
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;

  v44.origin.x = v33;
  v44.origin.y = v35;
  v44.size.width = v37;
  v44.size.height = v39;
  return CGRectGetMaxY(v44) > a2;
}

BOOL sub_1AA6FC(CGFloat a1, CGFloat a2)
{
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  id v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  id v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  id v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;

  v4 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  objc_msgSend(v4, "frame");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v41.origin.x = v6;
  v41.origin.y = v8;
  v41.size.width = v10;
  v41.size.height = v12;
  if (CGRectGetMinX(v41) >= a1)
    return 0;
  v13 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  objc_msgSend(v13, "frame");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v42.origin.x = v15;
  v42.origin.y = v17;
  v42.size.width = v19;
  v42.size.height = v21;
  if (CGRectGetMaxX(v42) <= a1)
    return 0;
  v22 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  objc_msgSend(v22, "frame");
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  v43.origin.x = v24;
  v43.origin.y = v26;
  v43.size.width = v28;
  v43.size.height = v30;
  if (CGRectGetMaxY(v43) >= a2)
    return 0;
  v31 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  objc_msgSend(v31, "frame");
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;

  v44.origin.x = v33;
  v44.origin.y = v35;
  v44.size.width = v37;
  v44.size.height = v39;
  return CGRectGetMaxY(v44) > a2;
}

uint64_t type metadata accessor for LargeLockupView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews15LargeLockupView);
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for LargeLockupView.Style(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LargeLockupView.Style(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AAB78 + 4 * byte_2FC2D5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1AABAC + 4 * byte_2FC2D0[v4]))();
}

uint64_t sub_1AABAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AABB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1AABBCLL);
  return result;
}

uint64_t sub_1AABC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1AABD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AABD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AABDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LargeLockupView.Style()
{
  return &type metadata for LargeLockupView.Style;
}

id sub_1AABF8()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView);
}

double sub_1AAC08()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_preferredArtworkSize);
}

uint64_t sub_1AAC20()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_objectGraph));
}

void sub_1AAC30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_objectGraph) = a1;
  swift_release(v3);
  swift_retain(a1);
  v4 = sub_1A8950();
  sub_262730(a1);

}

uint64_t sub_1AAC8C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isHovering);
}

uint64_t sub_1AAC9C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isHovering) = result;
  return result;
}

void sub_1AACAC(char a1, id a2)
{
  uint64_t v2;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  BOOL v8;
  int v9;
  BOOL v10;
  int v11;
  char v12;
  char v13;

  objc_msgSend(a2, "locationInView:", v2);
  if ((a1 & 1) != 0)
  {
    v6 = v4;
    v7 = v5;
    v8 = sub_1AA580(v4, v5);
    v9 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle) = v8;
    if (v8 != v9)
      sub_1A8C60();
    v10 = sub_1AA6FC(v6, v7);
    v11 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle) = v10;
    if (v10 == v11)
      return;
LABEL_9:
    sub_1A8C60();
    return;
  }
  v12 = *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle) = 0;
  if ((v12 & 1) != 0)
    sub_1A8C60();
  v13 = *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle) = 0;
  if ((v13 & 1) != 0)
    goto LABEL_9;
}

unint64_t sub_1AAD80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA860;
  if (!qword_3DA860)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA198);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_3DA860);
  }
  return result;
}

double sub_1AADCC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[11];
  char v34;
  char v35;

  if (qword_3CF5A0 != -1)
    swift_once(&qword_3CF5A0, sub_140B0C);
  v0 = (void *)qword_3FBF70;
  v1 = *(_QWORD *)algn_3FBF78;
  v2 = unk_3FBF88;
  v31 = qword_3FBF80;
  v32 = (void *)qword_3FBF70;
  v22 = qword_3FBF90;
  v3 = unk_3FBFA8;
  v29 = (void *)qword_3FBFA0;
  v30 = qword_3FBF98;
  v4 = qword_3FBFB0;
  v5 = qword_3FBFB8;
  v24 = qword_3FBFB0;
  v25 = qword_3FBFB8;
  v6 = qword_3FBFC0;
  v26 = qword_3FBFC0;
  v7 = word_3FBFC8;
  v8 = HIBYTE(word_3FBFC8);
  v27 = word_3FBFC8;
  v28 = HIBYTE(word_3FBFC8);
  v9 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  v21 = v4;
  v10 = v1;
  v23 = v1;
  sub_DDA0(v0, v1, v31, v2, v22, v30, v29, v3, v21, v5, v6, v7, v8);
  v11 = objc_msgSend(v9, "system");
  v12 = objc_msgSend(v11, "preferredContentSizeCategory");

  v13 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v12);
  v33[0] = v32;
  v33[1] = v10;
  v33[2] = v31;
  v33[3] = v2;
  v33[4] = v22;
  v33[5] = v30;
  v33[6] = v29;
  v33[7] = v3;
  v33[8] = v24;
  v33[9] = v25;
  v33[10] = v26;
  v34 = v27;
  v35 = v28;
  v14 = sub_1D5728((uint64_t)v33, v13);
  v15 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v14, 0.0);

  sub_DCC8(v32, v23, v31, v2, v22, v30, v29, v3, v24, v25, v26, v27, v28);
  objc_msgSend(v15, "descender");
  v17 = fabs(v16);
  objc_msgSend(v15, "leading");
  v19 = v18;

  return v17 + fabs(v19);
}

id sub_1AB010()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v2 = (void *)static UIFont.subhead.getter(v1);
  v3 = (void *)static UIFont.callout.getter();
  v4 = (void *)static UIFont.preferredFont(iOS:mac:)(v2, v3);

  objc_msgSend(v0, "setFont:", v4);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v5 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v5) & 1) != 0)
    v6 = 2;
  else
    v6 = 1;
  objc_msgSend(v0, "setNumberOfLines:", v6);
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v0, "setTextColor:", v7);

  return v0;
}

void sub_1AB148(id a1)
{
  if (a1 != (char *)&dword_0 + 1)

}

id sub_1AB158(id result)
{
  if (result != (char *)&dword_0 + 1)
    return result;
  return result;
}

void sub_1AB168()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView;
  sub_1BFEF4();
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_model] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isPresentedInSearch] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___artworkContainer] = 0;
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_preferredArtworkSize];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___ordinalLabel] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_titleAccessibilityLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_explicitLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_subtitleAction] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isHovering] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/LargeLockupView.swift", 45, 2, 129, 0);
  __break(1u);
}

double sub_1AB2A4(char a1)
{
  _BYTE *v1;
  id v3;
  double result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  _BYTE *v22;
  id v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;

  if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isHovering] != 1)
    return result;
  v3 = objc_msgSend(v1, "gestureRecognizers");
  if (!v3)
    return result;
  v5 = v3;
  v6 = sub_E710(0, &qword_3D9988, UIGestureRecognizer_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_5;
LABEL_12:
    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v7, 2).n128_u64[0];
    return result;
  }
LABEL_18:
  if (v7 < 0)
    v24 = v7;
  else
    v24 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v24);
  if (!v8)
    goto LABEL_12;
LABEL_5:
  v9 = 4;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v7);
    else
      v10 = *(id *)(v7 + 8 * v9);
    v11 = v10;
    v12 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    v13 = objc_opt_self(UIHoverGestureRecognizer);
    v14 = swift_dynamicCastObjCClass(v11, v13);
    if (v14)
      break;

    ++v9;
    if (v12 == v8)
      goto LABEL_12;
  }
  v15 = (void *)v14;
  swift_bridgeObjectRelease_n(v7, 2);
  v16 = swift_allocObject(&unk_388230, 40, 7);
  *(_BYTE *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = v1;
  *(_QWORD *)(v16 + 32) = v15;
  if ((a1 & 1) != 0)
  {
    v17 = (void *)objc_opt_self(UIView);
    v18 = swift_allocObject(&unk_388258, 32, 7);
    *(_QWORD *)(v18 + 16) = sub_B8C74;
    *(_QWORD *)(v18 + 24) = v16;
    v25[4] = sub_B8D30;
    v26 = v18;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 1107296256;
    v25[2] = sub_24360;
    v25[3] = &block_descriptor_29;
    v19 = _Block_copy(v25);
    v20 = v26;
    v21 = v11;
    v22 = v1;
    swift_retain(v16);
    swift_release(v20);
    objc_msgSend(v17, "animateWithDuration:delay:options:animations:completion:", 65574, v19, 0, 0.12, 0.0);
    swift_release(v16);
    _Block_release(v19);

  }
  else
  {
    v23 = v11;
    sub_B6120(0, 0, v1, v15);

    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

double sub_1AB554(char a1)
{
  _BYTE *v1;
  id v3;
  double result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  _BYTE *v22;
  id v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;

  if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_isHovering] != 1)
    return result;
  v3 = objc_msgSend(v1, "gestureRecognizers");
  if (!v3)
    return result;
  v5 = v3;
  v6 = sub_E710(0, &qword_3D9988, UIGestureRecognizer_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_5;
LABEL_12:
    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v7, 2).n128_u64[0];
    return result;
  }
LABEL_18:
  if (v7 < 0)
    v24 = v7;
  else
    v24 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v24);
  if (!v8)
    goto LABEL_12;
LABEL_5:
  v9 = 4;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v7);
    else
      v10 = *(id *)(v7 + 8 * v9);
    v11 = v10;
    v12 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    v13 = objc_opt_self(UIHoverGestureRecognizer);
    v14 = swift_dynamicCastObjCClass(v11, v13);
    if (v14)
      break;

    ++v9;
    if (v12 == v8)
      goto LABEL_12;
  }
  v15 = (void *)v14;
  swift_bridgeObjectRelease_n(v7, 2);
  v16 = swift_allocObject(&unk_3881B8, 40, 7);
  *(_BYTE *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = v1;
  *(_QWORD *)(v16 + 32) = v15;
  if ((a1 & 1) != 0)
  {
    v17 = (void *)objc_opt_self(UIView);
    v18 = swift_allocObject(&unk_3881E0, 32, 7);
    *(_QWORD *)(v18 + 16) = sub_1AC670;
    *(_QWORD *)(v18 + 24) = v16;
    v25[4] = sub_B8D30;
    v26 = v18;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 1107296256;
    v25[2] = sub_24360;
    v25[3] = &block_descriptor_19_0;
    v19 = _Block_copy(v25);
    v20 = v26;
    v21 = v11;
    v22 = v1;
    swift_retain(v16);
    swift_release(v20);
    objc_msgSend(v17, "animateWithDuration:delay:options:animations:completion:", 65574, v19, 0, 0.12, 0.0);
    swift_release(v16);
    _Block_release(v19);

  }
  else
  {
    v23 = v11;
    sub_B6B7C(0, 0, v1, v15);

    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

double sub_1AB804(char a1)
{
  _BYTE *v1;
  id v3;
  double result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  _BYTE *v22;
  id v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;

  if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_isHovering] != 1)
    return result;
  v3 = objc_msgSend(v1, "gestureRecognizers");
  if (!v3)
    return result;
  v5 = v3;
  v6 = sub_E710(0, &qword_3D9988, UIGestureRecognizer_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_5;
LABEL_12:
    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v7, 2).n128_u64[0];
    return result;
  }
LABEL_18:
  if (v7 < 0)
    v24 = v7;
  else
    v24 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v24);
  if (!v8)
    goto LABEL_12;
LABEL_5:
  v9 = 4;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v7);
    else
      v10 = *(id *)(v7 + 8 * v9);
    v11 = v10;
    v12 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    v13 = objc_opt_self(UIHoverGestureRecognizer);
    v14 = swift_dynamicCastObjCClass(v11, v13);
    if (v14)
      break;

    ++v9;
    if (v12 == v8)
      goto LABEL_12;
  }
  v15 = (void *)v14;
  swift_bridgeObjectRelease_n(v7, 2);
  v16 = swift_allocObject(&unk_388140, 40, 7);
  *(_BYTE *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = v1;
  *(_QWORD *)(v16 + 32) = v15;
  if ((a1 & 1) != 0)
  {
    v17 = (void *)objc_opt_self(UIView);
    v18 = swift_allocObject(&unk_388168, 32, 7);
    *(_QWORD *)(v18 + 16) = sub_1AC5A4;
    *(_QWORD *)(v18 + 24) = v16;
    v25[4] = sub_B8B5C;
    v26 = v18;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 1107296256;
    v25[2] = sub_24360;
    v25[3] = &block_descriptor_9_2;
    v19 = _Block_copy(v25);
    v20 = v26;
    v21 = v11;
    v22 = v1;
    swift_retain(v16);
    swift_release(v20);
    objc_msgSend(v17, "animateWithDuration:delay:options:animations:completion:", 65574, v19, 0, 0.12, 0.0);
    swift_release(v16);
    _Block_release(v19);

  }
  else
  {
    v23 = v11;
    sub_B6B88(0, 0, v1, v15);

    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

double sub_1ABAB0()
{
  double result;

  result = 41.0;
  xmmword_3FCC10 = xmmword_2FC3A0;
  qword_3FCC20 = 0;
  unk_3FCC28 = 0;
  byte_3FCC30 = 0;
  return result;
}

char *sub_1ABAD0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  char *v18;
  char *v19;
  id v20;
  id v21;
  objc_super v23;
  _OWORD v24[6];
  uint64_t v25;
  __int16 v26;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_objectGraph] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_isHovering] = 0;
  v10 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0));
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_E8C48(1, 5.0);
  v13 = qword_3CF308;
  v14 = (char *)v12;
  if (v13 != -1)
    swift_once(&qword_3CF308, sub_E9BE0);
  v15 = (void *)qword_3FAD18;
  v16 = *(void **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3FAD18;
  v17 = v15;

  sub_A2A14();
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0x3FE0000000000000;
  v18 = v14;
  sub_A2A14();

  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkView] = v18;
  v25 = 0;
  memset(v24, 0, sizeof(v24));
  v26 = 513;
  objc_allocWithZone((Class)type metadata accessor for ArtworkContainer(0));
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkContainer] = sub_2633EC(5, v18, (uint64_t *)v24);

  v23.receiver = v11;
  v23.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v20 = objc_msgSend(v19, "contentView");
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v21 = objc_msgSend(v19, "contentView");
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkContainer]);

  sub_B1108();
  objc_msgSend(v19, "setIsAccessibilityElement:", 1);
  objc_msgSend(v19, "setAccessibilityTraits:", UIAccessibilityTraitButton);

  return v19;
}

double sub_1ABD88()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkView];
  v2 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
  v3 = objc_msgSend(v2, "layer");
  objc_msgSend(v3, "removeAllAnimations");

  objc_msgSend(v2, "setImage:", 0);
  objc_msgSend(v1, "invalidateIntrinsicContentSize");
  return sub_1AB804(0);
}

uint64_t type metadata accessor for BrickCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23BrickCollectionViewCell);
}

id sub_1ABFE8()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkView);
}

double sub_1ABFF8()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;

  v1 = objc_msgSend(v0, "contentView");
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(v1, "layoutMargins");
  v11 = v10;
  v13 = v12;

  UIEdgeInsetsInsetRect(v3, v5, v7, v9, v11, v13);
  return v14;
}

id sub_1AC0B8()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkContainer);
}

uint64_t sub_1AC0C8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_isHovering);
}

uint64_t sub_1AC0D8(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_isHovering) = result;
  return result;
}

uint64_t sub_1AC0E8()
{
  double v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  char v4;
  double v5;
  double v6;
  double v7;
  BOOL v8;
  double v9;

  if (qword_3CF890 != -1)
    swift_once(&qword_3CF890, sub_1ABAB0);
  if (byte_3FCC30 == 1)
  {
    v1 = qword_3FCC20;
    v0 = unk_3FCC28;
    v2 = xmmword_3FCC10;
    v3 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
    v4 = static UITraitCollection.interfaceIdiomIsMac.getter(v3);
    if ((v4 & 1) != 0)
      v5 = *(double *)&v2;
    else
      v5 = *(double *)&v1;
    if ((v4 & 1) != 0)
      v6 = *((double *)&v2 + 1);
    else
      v6 = v0;
  }
  else
  {
    v6 = *((double *)&xmmword_3FCC10 + 1);
    v5 = *(double *)&xmmword_3FCC10;
  }
  v7 = v6 / v5;
  v8 = v5 == 0.0;
  v9 = 0.0;
  if (!v8)
    v9 = v7;
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(v9, 0.0);
}

uint64_t sub_1AC1B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (!Strong)
    return 0;
  v3 = Strong;
  v4 = Brick.accessibilityLabel.getter();
  swift_release(v3);
  return v4;
}

id sub_1AC234(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  v5 = v4;
  swift_release(v2);
  if (v5)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  return v6;
}

void sub_1AC2A0(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[5];
  uint64_t v6;

  v2 = *a1;
  v3 = swift_allocObject(&unk_3880F0, 24, 7);
  swift_weakInit(v3 + 16, v2);
  v5[4] = sub_1AC584;
  v6 = v3;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_1AC234;
  v5[3] = &block_descriptor_42;
  v4 = _Block_copy(v5);
  objc_msgSend(v1, "setAccessibilityLabelBlock:", v4, swift_release(v6).n128_f64[0]);
  _Block_release(v4);
}

uint64_t sub_1AC358()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_objectGraph));
}

void sub_1AC368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_objectGraph) = a1;
  swift_release(v3);
  swift_retain(a1);
  sub_262730(v4);
}

uint64_t sub_1AC3B0(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DA8E0, v3, (uint64_t (*)(uint64_t))type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_2FC510);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_1AC408()
{
  return sub_1AC0E8();
}

void *sub_1AC41C()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkView);
  v2 = v1;
  return v1;
}

uint64_t sub_1AC44C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DA8E0, a2, (uint64_t (*)(uint64_t))type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_2FC510);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_1AC480(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA8C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_2FC3E8);
}

uint64_t sub_1AC4AC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5D00, a2, (uint64_t (*)(uint64_t))type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_2FC470);
}

uint64_t sub_1AC4D8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA8C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_2FC448);
}

uint64_t sub_1AC504(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA8D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_2FC4A0);
}

uint64_t sub_1AC530()
{
  return sub_239FC(&qword_3DA8D8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Brick, (uint64_t)&protocol conformance descriptor for Brick);
}

uint64_t sub_1AC560()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1AC584()
{
  uint64_t v0;

  return sub_1AC1B8(v0);
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_42(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1AC5A4(char a1)
{
  uint64_t v1;

  sub_B6B88(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(void **)(v1 + 32));
}

void sub_1AC5B0()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_objectGraph] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_isHovering] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/BrickCollectionViewCell.swift", 53, 2, 46, 0);
  __break(1u);
}

uint64_t sub_1AC644()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1AC670(char a1)
{
  uint64_t v1;

  sub_B6B7C(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1AC67C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1AC6C8()
{
  qword_3DA8E8 = 0x4038000000000000;
}

void sub_1AC6D8()
{
  qword_3DA8F0 = 0x4028000000000000;
}

id sub_1AC6E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___infoStackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___infoStackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___infoStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, "setAxis:", 1);
    objc_msgSend(v4, "setBaselineRelativeArrangement:", 1);
    objc_msgSend(v4, "setLayoutMarginsRelativeArrangement:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1AC7A4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___titleLabel;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___titleLabel];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___titleLabel];
  }
  else
  {
    v4 = sub_1AC804(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1AC804(void *a1)
{
  id v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  double v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  char v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  int v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  _QWORD v76[11];
  char v77;
  char v78;

  v1 = objc_msgSend(a1, "traitCollection");
  v64 = UITraitCollection.interfaceIdiomIsMac.getter();

  if (qword_3CF478 != -1)
    swift_once(&qword_3CF478, sub_13F9C0);
  v2 = qword_3FB1B8;
  v3 = qword_3FB1D0;
  v4 = unk_3FB1D8;
  v5 = qword_3FB1E0;
  v6 = word_3FB1E8;
  v70 = HIBYTE(word_3FB1E8);
  v74 = *(_QWORD *)algn_3FB198;
  v75 = (void *)qword_3FB190;
  v72 = qword_3FB1A8;
  v73 = qword_3FB1A0;
  v69 = qword_3FB1B0;
  v71 = xmmword_3FB1C0;
  sub_DDA0((void *)qword_3FB190, *(uint64_t *)algn_3FB198, qword_3FB1A0, qword_3FB1A8, qword_3FB1B0, qword_3FB1B8, (void *)xmmword_3FB1C0, *((uint64_t *)&xmmword_3FB1C0 + 1), qword_3FB1D0, unk_3FB1D8, qword_3FB1E0, word_3FB1E8, SHIBYTE(word_3FB1E8));
  if (qword_3CF490 != -1)
    swift_once(&qword_3CF490, sub_13FAE0);
  v7 = (void *)qword_3FB2B0;
  v8 = *(_QWORD *)algn_3FB2B8;
  v9 = qword_3FB2C0;
  v10 = qword_3FB2D0;
  v11 = HIBYTE(word_3FB308);
  v67 = *((_QWORD *)&xmmword_3FB2E0 + 1);
  v68 = (void *)xmmword_3FB2E0;
  v62 = qword_3FB2C0;
  v63 = v2;
  v57 = unk_3FB2F8;
  v58 = qword_3FB2F0;
  v66 = qword_3FB300;
  v65 = word_3FB308;
  v60 = qword_3FB2D0;
  v61 = qword_3FB2C8;
  v59 = qword_3FB2D8;
  if (v70)
  {
    sub_DDA0((void *)qword_3FB2B0, *(uint64_t *)algn_3FB2B8, qword_3FB2C0, qword_3FB2C8, qword_3FB2D0, qword_3FB2D8, (void *)xmmword_3FB2E0, *((uint64_t *)&xmmword_3FB2E0 + 1), qword_3FB2F0, unk_3FB2F8, qword_3FB300, word_3FB308, SHIBYTE(word_3FB308));
    sub_DE20(v75, v74, v73, v72, v69, v2);
    sub_DE20((id)v71, *((uint64_t *)&v71 + 1), v3, v4, v5, v6);
    sub_DD48((void *)v71, *((uint64_t *)&v71 + 1), v3, v4, v5, v6);
    v12 = v69;
    if (!v11)
    {
LABEL_7:
      v45 = v5;
      v39 = v3;
      v13 = v75;
      v14 = v8;
      v15 = v74;
      v16 = v72;
      v17 = v73;
      v18 = v63;
      sub_DCC8(v75, v74, v73, v72, v12, v63, (void *)v71, *((uint64_t *)&v71 + 1), v39, v4, v45, v6, v70);
      v67 = v14;
      v68 = v7;
      v19 = v61;
      v20 = v62;
      v66 = v60;
      v65 = v59;
      goto LABEL_10;
    }
  }
  else
  {
    v48 = v6;
    v43 = v4;
    v46 = v5;
    v40 = v3;
    v21 = qword_3FB2C8;
    v55 = v6;
    v56 = HIBYTE(word_3FB308);
    v22 = qword_3FB2D8;
    v23 = v2;
    v24 = (void *)xmmword_3FB2E0;
    v53 = v3;
    v54 = v5;
    v51 = *(_QWORD *)algn_3FB2B8;
    v52 = v4;
    v25 = *((_QWORD *)&xmmword_3FB2E0 + 1);
    v50 = (void *)qword_3FB2B0;
    v26 = qword_3FB2F0;
    v27 = unk_3FB2F8;
    v28 = qword_3FB300;
    v29 = word_3FB308;
    sub_DDA0(v75, v74, v73, v72, v69, v23, (void *)v71, *((uint64_t *)&v71 + 1), v40, v43, v46, v48, SHIBYTE(v48));
    v49 = v29;
    v44 = v27;
    v47 = v28;
    v41 = v26;
    v7 = v50;
    v8 = v51;
    v30 = v21;
    v10 = v60;
    v6 = v55;
    v31 = v25;
    v4 = v52;
    v3 = v53;
    v5 = v54;
    sub_DDA0(v50, v51, v9, v30, v60, v22, v24, v31, v41, v44, v47, v49, v56);
    v12 = v69;
    if (!v56)
      goto LABEL_7;
  }
  sub_DD48(v7, v8, v62, v61, v10, v59);
  v42 = v3;
  v15 = v74;
  v13 = v75;
  v16 = v72;
  v17 = v73;
  v18 = v63;
  sub_DCC8(v75, v74, v73, v72, v12, v63, (void *)v71, *((uint64_t *)&v71 + 1), v42, v4, v5, v6, v70);
  v19 = v57;
  v20 = v58;
LABEL_10:
  if ((v64 & 1) != 0)
    v32 = 2;
  else
    v32 = 1;
  type metadata accessor for DynamicTypeLabel();
  v76[0] = v13;
  v76[1] = v15;
  v76[2] = v17;
  v76[3] = v16;
  v76[4] = v12;
  v76[5] = v18;
  v76[6] = v68;
  v76[7] = v67;
  v76[8] = v20;
  v76[9] = v19;
  v76[10] = v66;
  v77 = v65;
  v78 = 1;
  v33 = sub_A96AC((uint64_t)v76, v32, 4, 0);
  LODWORD(v34) = 1148846080;
  objc_msgSend(v33, "setContentCompressionResistancePriority:forAxis:", 1, v34);
  v35 = (void *)objc_opt_self(UIColor);
  v36 = v33;
  v37 = objc_msgSend(v35, "labelColor");
  objc_msgSend(v36, "setTextColor:", v37);

  return v36;
}

id sub_1ACC18()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = sub_1ACC74();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1ACC74()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  double v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int16 v39;
  char v40;
  unsigned __int8 v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void *v53;
  void *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  _QWORD v64[11];
  char v65;
  char v66;

  if (qword_3CF4A8 != -1)
    swift_once(&qword_3CF4A8, sub_13FC00);
  v0 = qword_3FB410;
  v1 = qword_3FB420;
  v2 = word_3FB428;
  v56 = HIBYTE(word_3FB428);
  v55 = unk_3FB418;
  v63 = (void *)qword_3FB3D0;
  v61 = qword_3FB3E0;
  v62 = *(_QWORD *)algn_3FB3D8;
  v59 = qword_3FB3F0;
  v60 = qword_3FB3E8;
  v57 = *((_QWORD *)&xmmword_3FB400 + 1);
  v58 = qword_3FB3F8;
  v54 = (void *)xmmword_3FB400;
  sub_DDA0((void *)qword_3FB3D0, *(uint64_t *)algn_3FB3D8, qword_3FB3E0, qword_3FB3E8, qword_3FB3F0, qword_3FB3F8, (void *)xmmword_3FB400, *((uint64_t *)&xmmword_3FB400 + 1), qword_3FB410, unk_3FB418, qword_3FB420, word_3FB428, SHIBYTE(word_3FB428));
  if (qword_3CF4D0 != -1)
    swift_once(&qword_3CF4D0, sub_13FDE0);
  v3 = (void *)qword_3FB5B0;
  v4 = *(_QWORD *)algn_3FB5B8;
  v5 = qword_3FB5C0;
  v7 = qword_3FB5D0;
  v6 = qword_3FB5D8;
  v8 = *((_QWORD *)&xmmword_3FB5E0 + 1);
  v52 = HIBYTE(word_3FB608);
  v50 = qword_3FB5C8;
  v51 = qword_3FB5F0;
  v45 = qword_3FB600;
  v46 = qword_3FB5F8;
  v44 = word_3FB608;
  v47 = qword_3FB5D8;
  v48 = qword_3FB5D0;
  v49 = *((_QWORD *)&xmmword_3FB5E0 + 1);
  v53 = (void *)xmmword_3FB5E0;
  if (!v56)
  {
    v39 = v2;
    v36 = v1;
    v33 = v0;
    v20 = qword_3FB5F0;
    v42 = (void *)qword_3FB5B0;
    v43 = v0;
    v21 = qword_3FB5F8;
    v41 = v2;
    v22 = v1;
    v23 = qword_3FB600;
    v24 = qword_3FB5C0;
    v25 = *(_QWORD *)algn_3FB5B8;
    v26 = word_3FB608;
    sub_DDA0(v63, v62, v61, v60, v59, v58, v54, v57, v33, v55, v36, v39, SHIBYTE(v39));
    v40 = v26;
    v4 = v25;
    v5 = v24;
    v34 = v21;
    v37 = v23;
    v1 = v22;
    v2 = v41;
    v3 = v42;
    v0 = v43;
    sub_DDA0(v42, v4, v5, v50, v7, v6, v53, v8, v20, v34, v37, v40, v52);
    if (!v52)
      goto LABEL_7;
LABEL_9:
    sub_DD48(v3, v4, v5, v50, v48, v47);
    v9 = v63;
    v11 = v61;
    v10 = v62;
    v16 = v59;
    v13 = v60;
    v15 = v58;
    sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v1, v2, v56);
    v18 = v45;
    v17 = v46;
    v19 = v44;
    goto LABEL_10;
  }
  sub_DDA0((void *)qword_3FB5B0, *(uint64_t *)algn_3FB5B8, qword_3FB5C0, qword_3FB5C8, qword_3FB5D0, qword_3FB5D8, (void *)xmmword_3FB5E0, *((uint64_t *)&xmmword_3FB5E0 + 1), qword_3FB5F0, qword_3FB5F8, qword_3FB600, word_3FB608, SHIBYTE(word_3FB608));
  sub_DE20(v63, v62, v61, v60, v59, v58);
  sub_DE20(v54, v57, v0, v55, v1, v2);
  sub_DD48(v54, v57, v0, v55, v1, v2);
  if (v52)
    goto LABEL_9;
LABEL_7:
  v38 = v2;
  v35 = v1;
  v9 = v63;
  v11 = v61;
  v10 = v62;
  v12 = v4;
  v13 = v60;
  v14 = v5;
  v15 = v58;
  v16 = v59;
  sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v35, v38, v56);
  v53 = v3;
  v49 = v12;
  v51 = v14;
  v17 = v50;
  v18 = v48;
  v19 = v47;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v64[0] = v9;
  v64[1] = v10;
  v64[2] = v11;
  v64[3] = v13;
  v64[4] = v16;
  v64[5] = v15;
  v64[6] = v53;
  v64[7] = v49;
  v64[8] = v51;
  v64[9] = v17;
  v64[10] = v18;
  v65 = v19;
  v66 = 1;
  v27 = sub_A96AC((uint64_t)v64, 1, 4, 0);
  LODWORD(v28) = 1148846080;
  objc_msgSend(v27, "setContentCompressionResistancePriority:forAxis:", 1, v28);
  v29 = (void *)objc_opt_self(UIColor);
  v30 = v27;
  v31 = objc_msgSend(v29, "secondaryLabelColor");
  objc_msgSend(v30, "setTextColor:", v31);

  return v30;
}

char *sub_1AD06C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int16 v18;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___artworkContainer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___artworkContainer);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___artworkContainer);
  }
  else
  {
    v4 = v0;
    v5 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_artworkViewWithPlayback);
    v11 = 1;
    v12 = 0u;
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    v16 = 0u;
    v17 = 0u;
    v18 = 0;
    v6 = objc_allocWithZone((Class)type metadata accessor for ArtworkContainer(0));
    v7 = sub_2633EC(2, (char *)v5, &v11);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

char *sub_1AD128(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  char *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  double v32;
  id v33;
  id v34;
  id v35;
  id v36;
  double v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  uint64_t v43;
  double v44;
  double v45;
  id v46;
  char *v47;
  id v48;
  uint64_t v49;
  double v50;
  id v51;
  char *v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  double v57;
  id v58;
  char *v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  double v64;
  id v65;
  char *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  char *v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  double v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  Class isa;
  uint64_t v96;
  uint64_t v97;
  objc_super v98;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_artworkViewWithPlayback;
  v15 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0));
  v16 = v5;
  v17 = objc_msgSend(v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
  LOBYTE(v97) = v18;
  sub_EB33C((unsigned __int8 *)&v97);
  *(_QWORD *)&v5[v14] = v17;
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___infoStackView] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___subtitleLabel] = 0;
  v19 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_highlightView;
  *(_QWORD *)&v16[v19] = objc_msgSend(objc_allocWithZone((Class)SLAttributionView), "init");
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_highlightItem] = 0;
  v16[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_isHovering] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___artworkContainer] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_objectGraph] = 0;

  v98.receiver = v16;
  v98.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v98, "initWithFrame:", a1, a2, a3, a4);
  static UIBackgroundConfiguration.clear()(v20);
  v21 = type metadata accessor for UIBackgroundConfiguration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 0, 1, v21);
  UICollectionViewCell.backgroundConfiguration.setter(v13);
  v22 = sub_1AD06C();
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v23 = sub_1AC6E8();
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v24 = objc_msgSend(v20, "contentView");
  v25 = sub_1AD06C();
  objc_msgSend(v24, "addSubview:", v25);

  v26 = objc_msgSend(v20, "contentView");
  v27 = sub_1AC6E8();
  objc_msgSend(v26, "addSubview:", v27);

  v28 = sub_1AC6E8();
  v29 = sub_1AC7A4();
  objc_msgSend(v28, "addArrangedSubview:", v29);

  v30 = sub_1AC6E8();
  v31 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v31) & 1) != 0)
    v32 = 18.0;
  else
    v32 = 20.0;
  v33 = sub_1AC7A4();
  objc_msgSend(v30, "setCustomSpacing:afterView:", v33, v32);

  v34 = sub_1AC6E8();
  v35 = sub_1ACC18();
  objc_msgSend(v34, "addArrangedSubview:", v35);

  v36 = sub_1AC6E8();
  if (qword_3CF8A0 != -1)
    swift_once(&qword_3CF8A0, sub_1AC6D8);
  v37 = *(double *)&qword_3DA8F0;
  v38 = sub_1ACC18();
  objc_msgSend(v36, "setCustomSpacing:afterView:", v38, v37);

  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v40 = swift_allocObject(v39, 104, 7);
  *(_OWORD *)(v40 + 16) = xmmword_2F2740;
  v41 = sub_1AD06C();
  v42 = objc_msgSend(v41, "widthAnchor");

  v44 = 102.0;
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v43) & 1) != 0)
    v45 = 97.0;
  else
    v45 = 102.0;
  v46 = objc_msgSend(v42, "constraintEqualToConstant:", v45);

  *(_QWORD *)(v40 + 32) = v46;
  v47 = sub_1AD06C();
  v48 = objc_msgSend(v47, "heightAnchor");

  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v49) & 1) != 0)
    v50 = 97.0;
  else
    v50 = 102.0;
  v51 = objc_msgSend(v48, "constraintEqualToConstant:", v50);

  *(_QWORD *)(v40 + 40) = v51;
  v52 = sub_1AD06C();
  v53 = objc_msgSend(v52, "topAnchor");

  v54 = objc_msgSend(v20, "contentView");
  v55 = objc_msgSend(v54, "topAnchor");

  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v56) & 1) != 0)
    v57 = 12.0;
  else
    v57 = 8.0;
  v58 = objc_msgSend(v53, "constraintEqualToAnchor:constant:", v55, v57);

  *(_QWORD *)(v40 + 48) = v58;
  v59 = sub_1AD06C();
  v60 = objc_msgSend(v59, "bottomAnchor");

  v61 = objc_msgSend(v20, "contentView");
  v62 = objc_msgSend(v61, "bottomAnchor");

  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v63) & 1) != 0)
    v64 = 12.0;
  else
    v64 = 8.0;
  v65 = objc_msgSend(v60, "constraintEqualToAnchor:constant:", v62, -v64);

  *(_QWORD *)(v40 + 56) = v65;
  v66 = sub_1AD06C();
  v67 = objc_msgSend(v66, "leadingAnchor");

  v68 = objc_msgSend(v20, "contentView");
  v69 = objc_msgSend(v68, "leadingAnchor");

  v70 = objc_msgSend(v67, "constraintEqualToAnchor:", v69);
  *(_QWORD *)(v40 + 64) = v70;
  v71 = sub_1AD06C();
  v72 = objc_msgSend(v71, "trailingAnchor");

  v73 = sub_1AC6E8();
  v74 = objc_msgSend(v73, "leadingAnchor");

  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v75) & 1) != 0)
    v76 = 20.0;
  else
    v76 = 12.0;
  v77 = objc_msgSend(v72, "constraintEqualToAnchor:constant:", v74, -v76);

  *(_QWORD *)(v40 + 72) = v77;
  v78 = sub_1AC6E8();
  v79 = objc_msgSend(v78, "centerYAnchor");

  v80 = objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_artworkViewWithPlayback], "centerYAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

  *(_QWORD *)(v40 + 80) = v81;
  v82 = sub_1AC6E8();
  v83 = objc_msgSend(v82, "heightAnchor");

  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v84) & 1) != 0)
    v44 = 97.0;
  v85 = (void *)objc_opt_self(NSLayoutConstraint);
  v86 = objc_msgSend(v83, "constraintLessThanOrEqualToConstant:", v44);

  *(_QWORD *)(v40 + 88) = v86;
  v87 = sub_1AC6E8();
  v88 = objc_msgSend(v87, "trailingAnchor");

  v89 = objc_msgSend(v20, "contentView");
  v90 = objc_msgSend(v89, "trailingAnchor");

  v91 = objc_msgSend(v88, "constraintEqualToAnchor:", v90);
  *(_QWORD *)(v40 + 96) = v91;
  v97 = v40;
  specialized Array._endMutation()(v92);
  v93 = v97;
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v85, "activateConstraints:", isa, swift_bridgeObjectRelease(v93).n128_f64[0]);

  sub_B111C();
  return v20;
}

void sub_1ADA44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *v34;
  uint64_t v35;
  double v36;
  double v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  void (*v57)(char *, uint64_t, __n128);
  uint64_t v58;
  char v59;
  __n128 v60;
  void (*v61)(char *, uint64_t, __n128);
  char v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  NSString v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  NSString v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v2 = v1;
  v4 = type metadata accessor for HighlightType(0);
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  __chkstk_darwin(v4);
  v86 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v87 = (char *)&v80 - v7;
  v8 = type metadata accessor for Logger(0);
  v82 = *(_QWORD *)(v8 - 8);
  v83 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v11);
  v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArtworkRequest(0);
  v84 = *(_QWORD *)(v14 - 8);
  v85 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v17);
  v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ArtworkModel(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v80 - v26;
  v91 = a1;
  HighlightItem.artwork.getter(v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_44C28((uint64_t)v19);
    return;
  }
  sub_2376C((uint64_t)v19, (uint64_t)v27);
  v90 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_objectGraph);
  if (!v90)
  {
    v58 = (uint64_t)v27;
LABEL_21:
    sub_239C0(v58);
    return;
  }
  v28 = v2;
  v29 = (uint64_t)v27;
  v30 = *(_QWORD *)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_highlightItem);
  v31 = v90;
  v32 = v91;
  *(_QWORD *)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_highlightItem) = v91;
  swift_retain(v31);
  swift_release(v30);
  swift_retain(v32);
  v33 = sub_1AD06C();
  sub_262F3C();

  v34 = *(void **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_artworkViewWithPlayback);
  v35 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v36 = 102.0;
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v35) & 1) != 0)
    v37 = 97.0;
  else
    v37 = 102.0;
  sub_E7A0(v29, v37, v37);
  v81 = v29;
  sub_27E84(v29, (uint64_t)v23);
  v38 = v34;
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v38) & 1) != 0)
    v36 = 97.0;
  v39 = type metadata accessor for CropCode(0);
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v13, 1, 1, v39);
  v41 = static Logger.artwork.getter(v40);
  v42 = static os_log_type_t.info.getter(v41);
  SignpostAndLogTrace(domain:level:)(&v94, v10, v42);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v10, v83);
  v43 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v43, "scale");
  v45 = v44;

  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v23, 1, 0, v13, 0, _swiftEmptyArrayStorage, &v94, v36, v36, v45);
  v46 = type metadata accessor for ArtworkView(0);
  v47 = sub_239FC((unint64_t *)&qword_3D22B8, 255, type metadata accessor for ArtworkView, (uint64_t)&unk_2F56E0);
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v16, v90, 0, v46, v47);

  v48 = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v16, v85);
  v49 = v87;
  HighlightItem.type.getter(v48);
  v51 = v88;
  v50 = v89;
  v52 = v86;
  (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v86, enum case for HighlightType.channel(_:), v89);
  v53 = sub_239FC(&qword_3DA988, 255, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightType, (uint64_t)&protocol conformance descriptor for HighlightType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v94, v50, v53);
  dispatch thunk of RawRepresentable.rawValue.getter(&v92, v50, v53);
  v54 = v95;
  v55 = v93;
  if (v94 == v92 && v95 == v93)
  {
    v56 = swift_bridgeObjectRelease_n(v95, 2);
    v57 = *(void (**)(char *, uint64_t, __n128))(v51 + 8);
    v57(v52, v50, v56);
    ((void (*)(char *, uint64_t))v57)(v49, v50);
LABEL_14:
    v62 = *((_BYTE *)v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style);
    *((_BYTE *)v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style) = 1;
    goto LABEL_16;
  }
  v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v94, v95, v92, v93, 0);
  swift_bridgeObjectRelease(v54);
  v60 = swift_bridgeObjectRelease(v55);
  v61 = *(void (**)(char *, uint64_t, __n128))(v51 + 8);
  v61(v52, v50, v60);
  ((void (*)(char *, uint64_t))v61)(v49, v50);
  if ((v59 & 1) != 0)
    goto LABEL_14;
  v62 = *((_BYTE *)v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style);
  *((_BYTE *)v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style) = 0;
LABEL_16:
  LOBYTE(v94) = v62;
  sub_EB33C((unsigned __int8 *)&v94);
  v63 = sub_1AC7A4();
  HighlightItem.title.getter();
  v65 = v64;
  v66 = String._bridgeToObjectiveC()();
  objc_msgSend(v63, "setText:", v66, swift_bridgeObjectRelease(v65).n128_f64[0]);

  v67 = sub_1ACC18();
  HighlightItem.subtitle.getter();
  v69 = v68;
  v70 = String._bridgeToObjectiveC()();
  objc_msgSend(v67, "setText:", v70, swift_bridgeObjectRelease(v69).n128_f64[0]);

  v71 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_highlightView;
  v72 = HighlightItem.highlight.getter(objc_msgSend(*(id *)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_highlightView), "removeFromSuperview"));
  if (!v72)
  {
    swift_release(v90);
    v58 = v81;
    goto LABEL_21;
  }
  v73 = v72;
  v74 = (void *)Highlight.sLHighlight.getter(v72);
  swift_release(v73);
  v75 = objc_msgSend(objc_allocWithZone((Class)SLAttributionView), "initWithHighlight:", v74);
  objc_msgSend(v75, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v76 = sub_1AC6E8();
  objc_msgSend(v76, "addArrangedSubview:", v75);

  v77 = objc_msgSend(v75, "heightAnchor");
  if (qword_3CF898 != -1)
    swift_once(&qword_3CF898, sub_1AC6C8);
  v78 = objc_msgSend(v77, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_3DA8E8);

  objc_msgSend(v78, "setActive:", 1);
  objc_msgSend(v75, "updateAlignment:", 0);

  swift_release(v90);
  sub_239C0(v81);
  v79 = *(void **)(v28 + v71);
  *(_QWORD *)(v28 + v71) = v75;

}

id sub_1AE18C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  void *object;
  NSString v27;
  Swift::String v28;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_highlightView), "contextMenuItems");
  if (v1)
  {
    v2 = v1;
    v3 = sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    if (!((unint64_t)v4 >> 62))
      goto LABEL_3;
  }
  else
  {
    v4 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_3:
      v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v4);
      if (v5)
        goto LABEL_4;
LABEL_15:
      swift_bridgeObjectRelease(v4);
      return (id)v4;
    }
  }
  if (v4 < 0)
    v20 = v4;
  else
    v20 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v5)
    goto LABEL_15;
LABEL_4:
  v6 = SLHideContextMenuIdentifier;
  v7 = 4;
  while (1)
  {
    result = (v4 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v4)
           : *(id *)(v4 + 8 * v7);
    v9 = result;
    v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
      break;
    v11 = objc_msgSend(result, "identifier");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    if (v12 == v15 && v14 == v16)
    {
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v14);
LABEL_24:
      swift_bridgeObjectRelease(v14);
      v21 = (void *)objc_opt_self(NSBundle);
      v22 = v9;
      v23 = objc_msgSend(v21, "mainBundle");
      v28._object = (void *)0xE600000000000000;
      v24._countAndFlagsBits = 0x535F45564F4D4552;
      v24._object = (void *)0xEF52414C55474E49;
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      v28._countAndFlagsBits = 0x65766F6D6552;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v28)._object;

      v27 = String._bridgeToObjectiveC()();
      objc_msgSend(v22, "setTitle:", v27, swift_bridgeObjectRelease(object).n128_f64[0]);

      return (id)v4;
    }
    v18 = v16;
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v18);
    if ((v19 & 1) != 0)
    {
      v14 = v4;
      goto LABEL_24;
    }

    ++v7;
    if (v10 == v5)
      goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HighlightItemCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17HighlightItemCell);
}

void sub_1AE4E8(uint64_t *a1)
{
  sub_1ADA44(*a1);
}

double sub_1AE4F0()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  char v3;
  double v4;

  v0 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v1 = static UITraitCollection.interfaceIdiomIsMac.getter(v0);
  if ((v1 & 1) != 0)
    v2 = 97.0;
  else
    v2 = 102.0;
  v3 = static UITraitCollection.interfaceIdiomIsMac.getter(v1);
  v4 = 12.0;
  if ((v3 & 1) != 0)
    v4 = 20.0;
  return v2 + v4;
}

uint64_t sub_1AE568@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v3 = static UITraitCollection.interfaceIdiomIsMac.getter(v2);
  if ((v3 & 1) != 0)
    v4 = 12.0;
  else
    v4 = 8.0;
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v3) & 1) != 0)
    v5 = 12.0;
  else
    v5 = 8.0;
  *(double *)a1 = v4;
  *(_QWORD *)(a1 + 8) = 0;
  *(double *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = 0;
  v6 = enum case for ContextMenuPreviewMargins.provideRemovingOriginals(_:);
  v7 = type metadata accessor for ContextMenuPreviewMargins(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a1, v6, v7);
}

uint64_t sub_1AE608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for ContextMenuPreviewBackgroundColor.provide(_:);
  v3 = type metadata accessor for ContextMenuPreviewBackgroundColor(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1AE650()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_objectGraph));
}

void sub_1AE660(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_objectGraph) = a1;
  swift_release(v3);
  swift_retain(a1);
  v4 = sub_1AD06C();
  sub_262730(a1);

}

uint64_t sub_1AE6BC(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DA990, v3, (uint64_t (*)(uint64_t))type metadata accessor for HighlightItemCell, (uint64_t)&unk_2FC78C);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_1AE718()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_isHovering);
}

uint64_t sub_1AE728(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_isHovering) = result;
  return result;
}

uint64_t sub_1AE738()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  char v3;
  double v4;

  v0 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v1 = static UITraitCollection.interfaceIdiomIsMac.getter(v0);
  if ((v1 & 1) != 0)
    v2 = 97.0;
  else
    v2 = 102.0;
  v3 = static UITraitCollection.interfaceIdiomIsMac.getter(v1);
  v4 = 16.0;
  if ((v3 & 1) != 0)
    v4 = 24.0;
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v2 + v4);
}

uint64_t sub_1AE7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DA990, a2, (uint64_t (*)(uint64_t))type metadata accessor for HighlightItemCell, (uint64_t)&unk_2FC78C);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_1AE7F0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA968, a2, (uint64_t (*)(uint64_t))type metadata accessor for HighlightItemCell, (uint64_t)&unk_2FC5D4);
}

uint64_t sub_1AE81C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5CB8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HighlightItemCell, (uint64_t)&unk_2FC65C);
}

uint64_t sub_1AE848(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA970, a2, (uint64_t (*)(uint64_t))type metadata accessor for HighlightItemCell, (uint64_t)&unk_2FC634);
}

uint64_t sub_1AE874(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA978, a2, (uint64_t (*)(uint64_t))type metadata accessor for HighlightItemCell, (uint64_t)&unk_2FC69C);
}

uint64_t sub_1AE8A0()
{
  return sub_239FC(&qword_3DA980, 255, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightItem, (uint64_t)&protocol conformance descriptor for HighlightItem);
}

void sub_1AE8D0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_artworkViewWithPlayback;
  v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
  LOBYTE(v6) = v4;
  sub_EB33C((unsigned __int8 *)&v6);
  *(_QWORD *)&v1[v2] = v3;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___infoStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___subtitleLabel] = 0;
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_highlightView;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)SLAttributionView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_highlightItem] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_isHovering] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell____lazy_storage___artworkContainer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_objectGraph] = 0;

  v6 = 0;
  v7 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v7);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/HighlightItemCell.swift", 47, 2, 141, 0);
  __break(1u);
}

id sub_1AEA24()
{
  __int16 v0;

  if (qword_3CF648 != -1)
    swift_once(&qword_3CF648, sub_14259C);
  if (HIBYTE(word_3FC7A8))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3FCC40 = xmmword_2FC7D0;
  byte_3FCC50 = 0;
  qword_3FCC58 = qword_3FC750;
  unk_3FCC60 = *(_QWORD *)algn_3FC758;
  qword_3FCC68 = qword_3FC760;
  unk_3FCC70 = qword_3FC768;
  qword_3FCC78 = qword_3FC770;
  unk_3FCC80 = *(_QWORD *)byte_3FC778;
  qword_3FCC88 = qword_3FC780;
  unk_3FCC90 = qword_3FC788;
  qword_3FCC98 = qword_3FC790;
  unk_3FCCA0 = qword_3FC798;
  qword_3FCCA8 = qword_3FC7A0;
  word_3FCCB0 = v0 | word_3FC7A8 | 0x8000;
  return sub_DDA0((void *)qword_3FC750, *(uint64_t *)algn_3FC758, qword_3FC760, qword_3FC768, qword_3FC770, byte_3FC778[0], (void *)qword_3FC780, qword_3FC788, qword_3FC790, qword_3FC798, qword_3FC7A0, word_3FC7A8, SHIBYTE(word_3FC7A8));
}

void sub_1AEAE8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char *v19;
  char *v20;
  char *v21;
  id v22;
  uint64_t v23;
  id v24;
  char *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  double v32;
  id v33;
  char v34;
  id v35;
  char v36;
  char *v37;
  id v38;
  char v39;
  double v40;
  double v41;
  char *v42;
  id v43;
  char v44;
  double v45;
  double v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t ObjCClassFromMetadata;
  void *v51;
  id v52;
  id v53;
  NSString v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  objc_class *ObjectType;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  objc_super v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int16 v88;

  ObjectType = (objc_class *)swift_getObjectType();
  v75 = type metadata accessor for Glyph(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_objectGraph] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewAction] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportAction] = 0;
  type metadata accessor for DynamicTypeButton();
  v10 = qword_3CF648;
  v71 = v4;
  if (v10 != -1)
    swift_once(&qword_3CF648, sub_14259C);
  v11 = qword_3FC760;
  v12 = qword_3FC768;
  v13 = qword_3FC770;
  v15 = qword_3FC790;
  v14 = qword_3FC798;
  v16 = qword_3FC7A0;
  v17 = word_3FC7A8;
  v18 = HIBYTE(word_3FC7A8);
  v70 = (void *)qword_3FC750;
  v77 = qword_3FC750;
  v78 = *(_QWORD *)algn_3FC758;
  v69 = *(_QWORD *)algn_3FC758;
  v79 = qword_3FC760;
  v80 = qword_3FC768;
  v81 = qword_3FC770;
  v82 = *(_QWORD *)byte_3FC778;
  v68 = *(_QWORD *)byte_3FC778;
  v67 = (void *)qword_3FC780;
  v83 = qword_3FC780;
  v84 = qword_3FC788;
  v66 = qword_3FC788;
  v85 = qword_3FC790;
  v86 = qword_3FC798;
  v87 = qword_3FC7A0;
  v88 = word_3FC7A8;
  sub_DDA0((void *)qword_3FC750, *(uint64_t *)algn_3FC758, qword_3FC760, qword_3FC768, qword_3FC770, byte_3FC778[0], (void *)qword_3FC780, qword_3FC788, qword_3FC790, qword_3FC798, qword_3FC7A0, word_3FC7A8, SHIBYTE(word_3FC7A8));
  v19 = sub_2D5CD4((uint64_t)&v77);
  v20 = v71;
  *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewButton] = v19;
  v77 = (uint64_t)v70;
  v78 = v69;
  v79 = v11;
  v80 = v12;
  v81 = v13;
  v82 = v68;
  v83 = (uint64_t)v67;
  v84 = v66;
  v85 = v15;
  v86 = v14;
  v87 = v16;
  LOBYTE(v88) = v17;
  HIBYTE(v88) = v18;
  sub_DDA0(v70, v69, v11, v12, v13, v68, v67, v66, v15, v14, v16, v17, v18);
  *(_QWORD *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportButton] = sub_2D5CD4((uint64_t)&v77);

  v76.receiver = v20;
  v76.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v76, "initWithFrame:", a1, a2, a3, a4);
  v22 = objc_msgSend(v21, "contentView");
  objc_msgSend(v22, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewButton;
  v24 = *(id *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewButton];
  LOBYTE(v64) = 0;
  v25 = v73;
  v26 = Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(0xD000000000000011, 0x8000000000312C10, 0x402E000000000000, 0, 4, -1, 0, 0, v64);
  v27 = (void *)Glyph.image.getter(v26);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v25, v75);
  objc_msgSend(v24, "setImage:forState:", v27, 0);

  v28 = *(void **)&v21[v23];
  objc_msgSend(v28, "addTarget:action:forControlEvents:", v21, "writeReviewWithSender:", 64);
  v29 = v28;
  v30 = objc_msgSend(v21, "tintColor");
  objc_msgSend(v29, "setTitleColor:forState:", v30, 0);

  v31 = 0.0;
  v32 = 0.0;
  if (objc_msgSend(v21, "effectiveUserInterfaceLayoutDirection") != (char *)&dword_0 + 1)
  {
    v33 = objc_msgSend(v21, "traitCollection");
    v34 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v34 & 1) != 0)
      v32 = 4.0;
    else
      v32 = 9.0;
  }
  if (objc_msgSend(v21, "effectiveUserInterfaceLayoutDirection") == (char *)&dword_0 + 1)
  {
    v35 = objc_msgSend(v21, "traitCollection");
    v36 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v36 & 1) != 0)
      v31 = 4.0;
    else
      v31 = 9.0;
  }
  objc_msgSend(*(id *)&v21[v23], "setContentEdgeInsets:", 0.0, v32, 0.0, v31);
  v37 = (char *)objc_msgSend(v21, "effectiveUserInterfaceLayoutDirection");
  v38 = objc_msgSend(v21, "traitCollection");
  v39 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v39 & 1) != 0)
    v40 = 4.0;
  else
    v40 = 9.0;
  if (v37 == (_BYTE *)&dword_0 + 1)
    v41 = v40;
  else
    v41 = -v40;
  v42 = (char *)objc_msgSend(v21, "effectiveUserInterfaceLayoutDirection");
  v43 = objc_msgSend(v21, "traitCollection");
  v44 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v44 & 1) != 0)
    v45 = 4.0;
  else
    v45 = 9.0;
  if (v42 == (_BYTE *)&dword_0 + 1)
    v46 = -v45;
  else
    v46 = v45;
  objc_msgSend(*(id *)&v21[v23], "setImageEdgeInsets:", 0.0, v41, 0.0, v46);
  v47 = OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportButton;
  v48 = *(void **)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportButton];
  v49 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v49);
  v51 = (void *)objc_opt_self(NSBundle);
  v52 = v48;
  v53 = objc_msgSend(v51, "bundleForClass:", ObjCClassFromMetadata);
  v54 = String._bridgeToObjectiveC()();
  v55 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v54, v53);

  if (v55)
  {
    v56 = objc_msgSend(v55, "imageWithRenderingMode:", 2);

    objc_msgSend(v52, "setImage:forState:", v56, 0);
    v57 = *(void **)&v21[v47];
    objc_msgSend(v57, "addTarget:action:forControlEvents:", v21, "supportWithSender:", 64);
    v58 = v57;
    v59 = objc_msgSend(v21, "tintColor");
    objc_msgSend(v58, "setTitleColor:forState:", v59, 0);

    v60 = *(void **)&v21[v47];
    objc_msgSend(v60, "setContentEdgeInsets:", 0.0, v32, 0.0, v31);
    objc_msgSend(v60, "setImageEdgeInsets:", 0.0, v41, 0.0, v46);
    v61 = objc_msgSend(v21, "contentView");
    objc_msgSend(v61, "addSubview:", *(_QWORD *)&v21[v23]);

    v62 = objc_msgSend(v21, "contentView");
    v63 = *(id *)&v21[v47];
    objc_msgSend(v62, "addSubview:", v63);

  }
  else
  {
    __break(1u);
  }
}

void sub_1AF314(uint64_t a1)
{
  sub_1AF338(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewAction);
}

void sub_1AF32C(uint64_t a1)
{
  sub_1AF338(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportAction);
}

void sub_1AF338(uint64_t a1, _QWORD *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[4];
  _QWORD v10[5];

  v3 = *(_QWORD *)&v2[*a2];
  if (v3)
  {
    ObjectType = swift_getObjectType();
    v10[3] = type metadata accessor for Action(0);
    v10[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v9[3] = ObjectType;
    v10[0] = v3;
    v9[0] = v2;
    v6 = sub_239FC(&qword_3DA9F8, v5, (uint64_t (*)(uint64_t))type metadata accessor for ProductReviewActionsCell, (uint64_t)&unk_2FC8E4);
    swift_retain_n(v3, 2);
    v7 = v2;
    v8 = ShelfUIKitCell.perform(_:from:in:)(v10, v9, v2, ObjectType, v6);
    swift_release(v8);
    swift_release(v3);
    sub_1FE78((uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_0(v10);
  }
}

uint64_t sub_1AF428(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v7;
  __n128 v8;
  uint64_t v9;
  id v10;
  _OWORD v12[2];

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v12, v9, v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    v10 = a1;
  }
  sub_1AF338((uint64_t)v10, a4);

  return sub_1FE78((uint64_t)v12);
}

void sub_1AF4A0()
{
  char *v0;
  objc_class *ObjectType;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int16 v35;
  id v36;
  id v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double MinY;
  id v48;
  void *v49;
  id v50;
  char *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  CGFloat v56;
  CGFloat v57;
  double MinX;
  void *v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double Width;
  char *v66;
  CGFloat v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  double v71;
  double v72;
  double v73;
  CGFloat v74;
  CGFloat v75;
  double v76;
  double v77;
  uint64_t v78;
  char *v79;
  void *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  CGFloat v90;
  CGFloat v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  CGFloat v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int16 v106;
  objc_super v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;

  ObjectType = (objc_class *)swift_getObjectType();
  v84 = type metadata accessor for FloatingPointRoundingRule(0);
  v91 = *(double *)(v84 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v84).n128_u64[0];
  v4 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107.receiver = v0;
  v107.super_class = ObjectType;
  objc_msgSendSuper2(&v107, "layoutSubviews", v2);
  v5 = objc_msgSend(v0, "contentView");
  objc_msgSend(v5, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  objc_msgSend(v5, "layoutMargins");
  v15 = v14;
  v17 = v16;

  v18 = UIEdgeInsetsInsetRect(v7, v9, v11, v13, v15, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  if (qword_3CF8A8 != -1)
    swift_once(&qword_3CF8A8, sub_1AEA24);
  v83 = *((_QWORD *)&xmmword_3FCC40 + 1);
  v25 = xmmword_3FCC40;
  v82 = byte_3FCC50;
  v26 = qword_3FCC78;
  v79 = v0;
  v85 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewButton];
  v86 = (unsigned __int16)word_3FCCB0;
  v87 = qword_3FCCA8;
  v88 = qword_3FCCA0;
  v89 = qword_3FCC98;
  v27 = (void *)qword_3FCC58;
  v28 = qword_3FCC60;
  v29 = qword_3FCC68;
  v30 = qword_3FCC70;
  v31 = *(_QWORD *)byte_3FCC80;
  v32 = (void *)qword_3FCC88;
  v90 = dbl_3FCC90;
  sub_1472C((id)qword_3FCC58, qword_3FCC60, qword_3FCC68, qword_3FCC70, qword_3FCC78, byte_3FCC80[0], (void *)qword_3FCC88, *(uint64_t *)&dbl_3FCC90, qword_3FCC98, qword_3FCCA0, qword_3FCCA8, word_3FCCB0);
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v33 = v84;
  v34 = __swift_project_value_buffer(v84, (uint64_t)qword_3FCFB0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)&v91 + 16))(v4, v34, v33);
  v92 = v25;
  v93 = v83;
  v94 = v82;
  v95 = v27;
  v96 = v28;
  v97 = v29;
  v98 = v30;
  v99 = v26;
  v81 = v31;
  v100 = v31;
  v101 = v32;
  v80 = v32;
  v102 = v90;
  v103 = v89;
  v104 = v88;
  v105 = v87;
  v35 = v86;
  v106 = v86;
  v36 = v85;
  v37 = objc_msgSend(v85, "traitCollection");
  v83 = v26;
  v38 = v36;
  sub_1DD06C((uint64_t)v37, (uint64_t)v4, 0);
  v40 = v39;

  objc_msgSend(v36, "firstBaselineFromTop");
  v42 = v41;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)&v91 + 8))(v4, v33);
  sub_14788(v27, v28, v29, v30, v83, v81, v80, *(uint64_t *)&v90, v89, v88, v87, v35);
  objc_msgSend(v36, "sizeThatFits:", v22, v24);
  v44 = v43;
  v46 = v45;
  v90 = v18;
  v108.origin.x = v18;
  v91 = v20;
  v108.origin.y = v20;
  v108.size.width = v22;
  v108.size.height = v24;
  MinY = CGRectGetMinY(v108);
  v48 = objc_msgSend(v36, "titleLabel");
  if (!v48)
  {
    __break(1u);
    goto LABEL_20;
  }
  v49 = v48;
  v50 = objc_msgSend(v48, "font");

  v51 = v79;
  if (!v50)
  {
LABEL_20:
    __break(1u);
    return;
  }
  v52 = v40 - v42 + MinY;
  objc_msgSend(v50, "descender");
  v54 = v53;

  v55 = floor(v52 + v54);
  if (objc_msgSend(v51, "effectiveUserInterfaceLayoutDirection") == (char *)&dword_0 + 1)
  {
    v56 = v90;
    v109.origin.x = v90;
    v57 = v91;
    v109.origin.y = v91;
    v109.size.width = v22;
    v109.size.height = v24;
    MinX = CGRectGetMaxX(v109) - v44;
  }
  else
  {
    v56 = v90;
    v110.origin.x = v90;
    v57 = v91;
    v110.origin.y = v91;
    v110.size.width = v22;
    v110.size.height = v24;
    MinX = CGRectGetMinX(v110);
  }
  objc_msgSend(v38, "setFrame:", MinX, v55, v44, v46);
  v59 = *(void **)&v51[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportButton];
  objc_msgSend(v59, "sizeThatFits:", v22, v24);
  v61 = v60;
  v63 = v62;
  v64 = v44 + v60;
  v111.origin.x = v56;
  v111.origin.y = v57;
  v111.size.width = v22;
  v111.size.height = v24;
  Width = CGRectGetWidth(v111);
  v66 = (char *)objc_msgSend(v51, "effectiveUserInterfaceLayoutDirection");
  if (Width >= v64)
  {
    v74 = v90;
    v75 = v91;
    v76 = v22;
    v77 = v24;
    if (v66 == (_BYTE *)&dword_0 + 1)
      v73 = CGRectGetMinX(*(CGRect *)&v74);
    else
      v73 = CGRectGetMaxX(*(CGRect *)&v74) - v61;
  }
  else
  {
    v67 = v90;
    v68 = v90;
    v69 = v91;
    v70 = v91;
    v71 = v22;
    v72 = v24;
    if (v66 == (_BYTE *)&dword_0 + 1)
      v73 = CGRectGetMaxX(*(CGRect *)&v68) - v61;
    else
      v73 = CGRectGetMinX(*(CGRect *)&v68);
    v112.origin.x = v67;
    v112.origin.y = v69;
    v112.size.width = v22;
    v112.size.height = v24;
    v55 = v55 + CGRectGetMidY(v112);
  }
  objc_msgSend(v59, "setFrame:", v73, v55, v61, v63);
}

uint64_t type metadata accessor for ProductReviewActionsCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24ProductReviewActionsCell);
}

id sub_1AFBB8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;

  v1 = v0;
  v2 = ReviewActions.writeReview.getter();
  if (v2)
  {
    v3 = v2;
    v4 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewButton];
    Action.title.getter();
    if (v5)
    {
      v7 = v5;
      v8 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(v7).n128_u64[0];
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v4, "setTitle:forState:", v8, 0, v6);

    objc_msgSend(v4, "setHidden:", 0);
    v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewAction];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewAction] = v3;
    v9 = (id)swift_release(v10);
  }
  else
  {
    v9 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewButton], "setHidden:", 1);
  }
  v11 = ReviewActions.support.getter(v9);
  if (v11)
  {
    v12 = v11;
    v13 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportButton];
    Action.title.getter();
    if (v14)
    {
      v16 = v14;
      v17 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v15 = swift_bridgeObjectRelease(v16).n128_u64[0];
    }
    else
    {
      v17 = 0;
    }
    objc_msgSend(v13, "setTitle:forState:", v17, 0, v15);

    objc_msgSend(v13, "setHidden:", 0);
    v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportAction];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportAction] = v12;
    swift_release(v18);
  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportButton], "setHidden:", 1);
  }
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_1AFD34()
{
  return sub_1AFBB8();
}

uint64_t sub_1AFD3C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_objectGraph));
}

uint64_t sub_1AFD4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_1AFD80(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DAA08, v3, (uint64_t (*)(uint64_t))type metadata accessor for ProductReviewActionsCell, (uint64_t)&unk_2FC954);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_1AFDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  unsigned __int16 v18;

  if (qword_3CF8A8 != -1)
    swift_once(&qword_3CF8A8, sub_1AEA24);
  v8 = (void *)qword_3FCC58;
  v9 = qword_3FCC60;
  v10 = qword_3FCC68;
  v11 = qword_3FCC70;
  v12 = qword_3FCC78;
  v13 = byte_3FCC80[0];
  v14 = (void *)qword_3FCC88;
  v15 = *(_QWORD *)&dbl_3FCC90;
  v16 = xmmword_3FCC98;
  v17 = qword_3FCCA8;
  v18 = word_3FCCB0;
  sub_1472C((id)qword_3FCC58, qword_3FCC60, qword_3FCC68, qword_3FCC70, qword_3FCC78, byte_3FCC80[0], (void *)qword_3FCC88, *(uint64_t *)&dbl_3FCC90, xmmword_3FCC98, *((uint64_t *)&xmmword_3FCC98 + 1), qword_3FCCA8, word_3FCCB0);
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_3FCFB0);
  sub_1DD06C(a2, v4, 0);
  v6 = v5;
  sub_14788(v8, v9, v10, v11, v12, v13, v14, v15, v16, *((uint64_t *)&v16 + 1), v17, v18);
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v6);
}

uint64_t sub_1AFF24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DAA08, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductReviewActionsCell, (uint64_t)&unk_2FC954);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_1AFF58(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA9E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductReviewActionsCell, (uint64_t)&unk_2FC82C);
}

uint64_t sub_1AFF84(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C28, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductReviewActionsCell, (uint64_t)&unk_2FC8B4);
}

uint64_t sub_1AFFB0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA9F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductReviewActionsCell, (uint64_t)&unk_2FC88C);
}

uint64_t sub_1AFFDC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA9F8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductReviewActionsCell, (uint64_t)&unk_2FC8E4);
}

uint64_t sub_1B0008()
{
  return sub_239FC(&qword_3DAA00, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewActions, (uint64_t)&protocol conformance descriptor for ReviewActions);
}

void sub_1B0038()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_objectGraph] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_writeReviewAction] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24ProductReviewActionsCell_supportAction] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ProductReviewActionsCell.swift", 54, 2, 80, 0);
  __break(1u);
}

unint64_t sub_1B00DC()
{
  unint64_t result;

  result = qword_3DAA10;
  if (!qword_3DAA10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ModelViewLayoutAxis, &type metadata for ModelViewLayoutAxis);
    atomic_store(result, (unint64_t *)&qword_3DAA10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ModelViewLayoutAxis(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B016C + 4 * byte_2FC9A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B01A0 + 4 * byte_2FC9A0[v4]))();
}

uint64_t sub_1B01A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B01A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B01B0);
  return result;
}

uint64_t sub_1B01BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B01C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B01C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B01D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelViewLayoutAxis()
{
  return &type metadata for ModelViewLayoutAxis;
}

void sub_1B01EC()
{
  qword_3FCCB8 = 0x402E000000000000;
}

void sub_1B01FC()
{
  qword_3FCCC0 = 0x4028000000000000;
}

uint64_t sub_1B020C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v0 = type metadata accessor for RoundedRectangle(0);
  __swift_allocate_value_buffer(v0, qword_3FCCC8);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_3FCCC8);
  if (qword_3CF8B0 != -1)
    swift_once(&qword_3CF8B0, sub_1B01EC);
  v2 = qword_3FCCB8;
  v3 = (char *)v1 + *(int *)(v0 + 20);
  v4 = enum case for RoundedCornerStyle.continuous(_:);
  v5 = type metadata accessor for RoundedCornerStyle(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  *v1 = v2;
  v1[1] = v2;
  return result;
}

uint64_t sub_1B02C8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v7;

  v0 = type metadata accessor for Color.RGBColorSpace(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = enum case for Color.RGBColorSpace.sRGB(_:);
  v5 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v5(v2, enum case for Color.RGBColorSpace.sRGB(_:), v0);
  qword_3FCCE0 = Color.init(_:red:green:blue:opacity:)(v2, 0.274509804, 0.0, 0.658823529, 1.0);
  v5(v2, v3, v0);
  result = Color.init(_:red:green:blue:opacity:)(v2, 0.729411765, 0.28627451, 0.901960784, 1.0);
  qword_3FCCE8 = result;
  return result;
}

uint64_t sub_1B03B0()
{
  uint64_t result;

  if (qword_3CEFD8 != -1)
    swift_once(&qword_3CEFD8, sub_DE78);
  result = Color.init(uiColor:)((id)qword_3D0880);
  qword_3FCCF0 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for LegacyArtworkPlaybackStatusStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B044C + 4 * byte_2FCA95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B0480 + 4 * byte_2FCA90[v4]))();
}

uint64_t sub_1B0480(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0488(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0490);
  return result;
}

uint64_t sub_1B049C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B04A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B04A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B04B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyArtworkPlaybackStatusStyle()
{
  return &type metadata for LegacyArtworkPlaybackStatusStyle;
}

unint64_t sub_1B04D0()
{
  unint64_t result;

  result = qword_3DAA18;
  if (!qword_3DAA18)
  {
    result = swift_getWitnessTable(&unk_2FCB54, &type metadata for LegacyArtworkPlaybackStatusStyle);
    atomic_store(result, (unint64_t *)&qword_3DAA18);
  }
  return result;
}

char *sub_1B0514(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  double leading;
  double bottom;
  double trailing;
  id v20;
  id v21;
  id v22;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_showPageHeader;
  v11 = type metadata accessor for ShowHeaderView();
  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11));
  v13 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v12, "init");
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_episodePlayStateController] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_showHeader] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_objectGraph] = 0;
  v13[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_sizeClass] = 8;

  v24.receiver = v13;
  v24.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v14, "setPreservesSuperviewLayoutMargins:", 1);
  v15 = objc_msgSend(v14, "contentView");
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_showPageHeader;
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v20 = *(id *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_showPageHeader];
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v20, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  v21 = objc_msgSend(v14, "contentView");
  objc_msgSend(v21, "setPreservesSuperviewLayoutMargins:", 1);

  v22 = *(id *)&v14[v16];
  objc_msgSend(v22, "setPreservesSuperviewLayoutMargins:", 1);

  return v14;
}

void sub_1B0708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;

  v1 = v0;
  v2 = ShelfAttributes.sizeClass.getter();
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_sizeClass;
  v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_sizeClass);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_sizeClass) = v2;
  if ((_DWORD)v4 != 8)
  {
    v5 = SizeClass.rawValue.getter(v4);
    if (v5 == SizeClass.rawValue.getter(v2))
      return;
    LOBYTE(v2) = *(_BYTE *)(v1 + v3);
  }
  v6 = *(_BYTE **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_showPageHeader)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_upsellBanner);
  v7 = v6[qword_3D96C0];
  v6[qword_3D96C0] = v2;
  v8 = v6;
  sub_17D3E4(v7);

}

double sub_1B07E0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_showHeader;
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_showHeader];
  if (!v5)
    goto LABEL_3;
  v13 = a1;
  v14 = v5;
  v6 = type metadata accessor for ShowHeader(0);
  v7 = sub_239FC(&qword_3DAA90, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ShowHeader, (uint64_t)&protocol conformance descriptor for ShowHeader);
  swift_retain_n(v5, 2);
  LOBYTE(v6) = dispatch thunk of static Equatable.== infix(_:_:)(&v14, &v13, v6, v7);
  v8 = v14;
  swift_release(v5);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  if ((v6 & 1) == 0)
  {
LABEL_3:
    v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_objectGraph];
    if (v10)
    {
      v11 = *(_QWORD *)&v2[v4];
      *(_QWORD *)&v2[v4] = a1;
      swift_retain(v10);
      swift_release(v11);
      swift_retain(a1);
      sub_447DC(v12, v10, v2);
      sub_1CD72C(a1);
      *(_QWORD *)&result = swift_release(v10).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1B08F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_episodePlayStateController));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_showHeader));
  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_objectGraph));
}

uint64_t type metadata accessor for ShowUberCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell);
}

double sub_1B09B4(uint64_t *a1)
{
  return sub_1B07E0(*a1);
}

uint64_t sub_1B09BC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_objectGraph));
}

void sub_1B09D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_objectGraph) = a1;
  swift_release(v3);
  swift_retain(a1);
  ShowHeaderView.bind(to:)(v4);
}

uint64_t sub_1B0A18(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DAA98, v3, (uint64_t (*)(uint64_t))type metadata accessor for ShowUberCollectionViewCell, (uint64_t)&unk_2FCD3C);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_1B0A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DAA98, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowUberCollectionViewCell, (uint64_t)&unk_2FCD3C);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

void sub_1B0AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  char v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _BYTE v26[40];

  sub_1D5D4(a3, (uint64_t)v26);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
  v4 = type metadata accessor for ShowHeader(0);
  v5 = swift_dynamicCast(&v25, v26, v3, v4, 6);
  if ((v5 & 1) != 0)
  {
    v6 = v25;
    v7 = ShowHeader.secondaryButtonAction.getter(v5);
    v8 = swift_release(v7);
    if (v7)
    {
      v9 = 498.0;
LABEL_13:
      ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v9);
      swift_release(v6);
      return;
    }
    v10 = ShowHeader.upsellBanner.getter(v8);
    v12 = swift_release(v10);
    if (v10)
    {
      v9 = 541.0;
      goto LABEL_13;
    }
    if ((ShowHeader.entitlementBadge.getter(v11, v12) & 1) != 0)
    {
      v9 = 483.0;
      goto LABEL_13;
    }
    v14 = ShowHeader.primaryArtwork.getter(v13);
    v15 = HeaderModel.PrimaryArtwork.artworkType.getter();
    v16 = swift_release(v14);
    v17 = HeaderModel.PrimaryArtwork.ArtworkType.rawValue.getter(v15 & 1, v16);
    v19 = v18;
    v22 = HeaderModel.PrimaryArtwork.ArtworkType.rawValue.getter(1, v20);
    v23 = v21;
    if (v17 == v22 && v19 == v21)
    {
      swift_bridgeObjectRelease_n(v19, 2);
LABEL_12:
      v9 = 450.0;
      goto LABEL_13;
    }
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v22, v21, 0);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v23);
    if ((v24 & 1) != 0)
      goto LABEL_12;
    swift_release(v6);
  }
  ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 456.0);
}

void sub_1B0C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B0AA4(a1, a2, a3);
}

uint64_t sub_1B0C54(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DAA70, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowUberCollectionViewCell, (uint64_t)&unk_2FCC14);
}

uint64_t sub_1B0C80(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C68, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowUberCollectionViewCell, (uint64_t)&unk_2FCC9C);
}

uint64_t sub_1B0CAC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DAA78, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowUberCollectionViewCell, (uint64_t)&unk_2FCC74);
}

uint64_t sub_1B0CD8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DAA80, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowUberCollectionViewCell, (uint64_t)&unk_2FCCCC);
}

uint64_t sub_1B0D04()
{
  return sub_239FC(&qword_3DAA88, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ShowHeader, (uint64_t)&protocol conformance descriptor for ShowHeader);
}

void sub_1B0D34()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_showPageHeader;
  v2 = type metadata accessor for ShowHeaderView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_episodePlayStateController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_showHeader] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_objectGraph] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowUberCollectionViewCell_sizeClass] = 8;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ShowUberCollectionViewCell.swift", 56, 2, 78, 0);
  __break(1u);
}

uint64_t ShelfKitCollectionViewsBootstrap.init(process:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ShelfKitCollectionViewsBootstrap.buildForegroundDependencies(basedOn:)(uint64_t a1)
{
  id *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_signpost_type_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint8_t *v27;
  uint64_t v28;
  uint8_t *v29;
  os_signpost_id_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v47 = a1;
  v48 = type metadata accessor for ShelfKitBootstrap(0);
  v46 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OSSignposter(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - v9;
  v11 = type metadata accessor for OSSignpostID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v42 - v16;
  v44 = *v1;
  v19 = static OSSignposter.bootstrap.getter(v18);
  v20 = OSSignposter.logHandle.getter(v19);
  OSSignpostID.init(log:)(v20);
  v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v45 = v4;
  v43 = v21;
  v22 = ((uint64_t (*)(char *, uint64_t))v21)(v10, v4);
  v23 = static OSSignposter.bootstrap.getter(v22);
  v24 = OSSignposter.logHandle.getter(v23);
  v25 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v26(v14, v17, v11);
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    v42 = v12;
    v28 = v11;
    v29 = v27;
    *(_WORD *)v27 = 0;
    v30 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v24, v25, v30, "ShelfKitCollectionViewsBootstrap.foreground", "", v29, 2u);
    v31 = v29;
    v11 = v28;
    v12 = v42;
    swift_slowDealloc(v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {

    v26 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  }
  v26(v14, v17, v11);
  v32 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v33 = OSSignpostIntervalState.init(id:isOpen:)(v14, 1);
  v43(v7, v45);
  ShelfKitBootstrap.init(process:)(v44);
  v34 = ShelfKitBootstrap.buildForegroundDependencies(basedOn:)(v47);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v3, v48);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAAA0);
  v36 = v11;
  v37 = BaseObjectGraph.satisfying<A>(_:with:)(v35, sub_1B114C, 0, v35);
  v38 = swift_release(v34);
  v39 = BaseObjectGraph.withName(_:)(0xD000000000000024, 0x8000000000312D10, v38);
  swift_release(v37);
  sub_1B149C("ShelfKitCollectionViewsBootstrap.foreground", 43, 2, v33);
  v40 = swift_release(v33);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v17, v36, v40);
  return v39;
}

uint64_t sub_1B114C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = type metadata accessor for NowPlayingArtworkProvider(0);
  v5 = swift_retain(a1);
  result = NowPlayingArtworkProvider.__allocating_init(asPartOf:)(v5);
  a2[3] = v4;
  a2[4] = (uint64_t)&protocol witness table for NowPlayingArtworkProvider;
  *a2 = result;
  return result;
}

uint64_t ShelfKitCollectionViewsBootstrap.buildBackgroundDependencies()()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_signpost_type_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint8_t *v28;
  os_signpost_id_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = type metadata accessor for ShelfKitBootstrap(0);
  v44 = *(_QWORD *)(v1 - 8);
  v45 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OSSignposter(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - v9;
  v11 = type metadata accessor for OSSignpostID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v40 - v16;
  v42 = *v0;
  v19 = static OSSignposter.bootstrap.getter(v18);
  v20 = OSSignposter.logHandle.getter(v19);
  OSSignpostID.init(log:)(v20);
  v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v43 = v4;
  v41 = v21;
  v22 = ((uint64_t (*)(char *, uint64_t))v21)(v10, v4);
  v23 = static OSSignposter.bootstrap.getter(v22);
  v24 = OSSignposter.logHandle.getter(v23);
  v25 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v40 = v11;
    v26 = v12;
    v27 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v27(v14, v17, v40);
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    v29 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v24, v25, v29, "ShelfKitCollectionViewsBootstrap.background", "", v28, 2u);
    swift_slowDealloc(v28, -1, -1);

    v30 = v26;
    v31 = *(void (**)(char *, uint64_t))(v26 + 8);
    v11 = v40;
    v31(v14, v40);
  }
  else
  {

    v30 = v12;
    v27 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  }
  v27(v14, v17, v11);
  v32 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v33 = OSSignpostIntervalState.init(id:isOpen:)(v14, 1);
  v41(v7, v43);
  v34 = ShelfKitBootstrap.init(process:)(v42);
  v35 = ShelfKitBootstrap.buildBackgroundDependencies()(v34);
  v36.n128_f64[0] = (*(double (**)(char *, uint64_t))(v44 + 8))(v3, v45);
  v37 = BaseObjectGraph.withName(_:)(0xD00000000000002FLL, 0x8000000000312D70, v36);
  swift_release(v35);
  sub_1B149C("ShelfKitCollectionViewsBootstrap.background", 43, 2, v33);
  v38 = swift_release(v33);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v17, v11, v38);
  return v37;
}

uint64_t sub_1B149C(const char *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  char *v29;
  uint8_t *v30;
  os_signpost_id_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  int v38;
  char *v39;
  char v40;

  v38 = a3;
  v39 = (char *)a1;
  v5 = type metadata accessor for OSSignpostError(0);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSSignpostID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v37 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - v12;
  v14 = type metadata accessor for OSSignposter(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = static OSSignposter.bootstrap.getter(v16);
  v20 = OSSignposter.logHandle.getter(v19);
  v21 = OSSignpostIntervalState.signpostID.getter();
  v34 = static os_signpost_type_t.end.getter(v21);
  result = OS_os_log.signpostsEnabled.getter();
  if ((result & 1) == 0)
    goto LABEL_5;
  v33 = v15;
  v23 = v9;
  if ((v38 & 1) == 0)
  {
    if (!v39)
    {
      __break(1u);
LABEL_5:

      (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v39 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v39 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v39 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v39 = &v40;
LABEL_10:
  v24 = swift_retain(a4);
  checkForErrorAndConsumeState(state:)(v24);
  swift_release(a4);
  v26 = v35;
  v25 = v36;
  if ((*(unsigned int (**)(char *, uint64_t))(v35 + 88))(v7, v36) == enum case for OSSignpostError.doubleEnd(_:))
  {
    v27 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
    v27 = "";
  }
  v28 = v14;
  v29 = v37;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v37, v13, v8);
  v30 = (uint8_t *)swift_slowAlloc(2, -1);
  *(_WORD *)v30 = 0;
  v31 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl(&dword_0, v20, (os_signpost_type_t)v34, v31, v39, v27, v30, 2u);
  swift_slowDealloc(v30, -1, -1);

  v32 = *(void (**)(char *, uint64_t))(v23 + 8);
  v32(v13, v8);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v28);
  return ((uint64_t (*)(char *, uint64_t))v32)(v29, v8);
}

ValueMetadata *type metadata accessor for ShelfKitCollectionViewsBootstrap()
{
  return &type metadata for ShelfKitCollectionViewsBootstrap;
}

_QWORD *sub_1B178C(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_F356C(0, v1, 0);
    v3 = *(_QWORD *)(type metadata accessor for ActionButton(0) - 8);
    v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    do
    {
      v6 = ActionButton.title.getter();
      v8 = v7;
      v10 = _swiftEmptyArrayStorage[2];
      v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1)
        sub_F356C(v9 > 1, v10 + 1, 1);
      _swiftEmptyArrayStorage[2] = v10 + 1;
      v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void sub_1B1888()
{
  off_3DAAA8 = (int *)&_swiftEmptyDictionarySingleton;
}

void sub_1B189C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  const char *v33;
  uint64_t v34;
  _BYTE v35[24];
  char v36[24];

  v1 = v0;
  v2 = type metadata accessor for ActionButton(0);
  v34 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_buttons];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_buttons], v36, 1, 0);
  v6 = *v5;
  v7 = (unint64_t)*v5 >> 62;
  v30 = v2;
  if (v7)
  {
    if (v6 < 0)
      v12 = v6;
    else
      v12 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v6, 2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (!v8)
      goto LABEL_13;
  }
  else
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(v6, 2);
    if (!v8)
      goto LABEL_13;
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  v9 = 0;
  do
  {
    if ((v6 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v6);
    else
      v10 = *(id *)(v6 + 8 * v9 + 32);
    v11 = v10;
    ++v9;
    objc_msgSend(v10, "removeFromSuperview");
    objc_msgSend(v11, "removeTarget:action:forControlEvents:", v1, "buttonTappedFrom:", 64);

  }
  while (v8 != v9);
LABEL_13:
  swift_bridgeObjectRelease_n(v6, 2);
  v13 = *v5;
  *v5 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_actionButtons];
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v33 = "buttonTappedFrom:";
    v32 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_style];
    v16 = v14 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
    v31 = *(_QWORD *)(v34 + 72);
    v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v34 + 16);
    v29 = v14;
    v18 = swift_bridgeObjectRetain(v14);
    v19 = v30;
    do
    {
      v17(v4, v16, v19, v18);
      v35[0] = v32;
      v20 = sub_1B1BEC();
      ActionButton.title.getter();
      v22 = v21;
      v23 = String._bridgeToObjectiveC()();
      objc_msgSend(v20, "setTitle:forState:", v23, 0, swift_bridgeObjectRelease(v22).n128_f64[0]);

      objc_msgSend(v20, "addTarget:action:forControlEvents:", v1, v33, 64);
      objc_msgSend(v1, "addSubview:", v20);
      v24 = objc_msgSend(v1, "tintColor");
      objc_msgSend(v20, "setTitleColor:forState:", v24, 0);

      swift_beginAccess(v5, v35, 33, 0);
      v25 = v20;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
      v27 = *(_QWORD *)((char *)&dword_10 + (*v5 & 0xFFFFFFFFFFFFFF8));
      v26 = *(_QWORD *)((char *)&dword_18 + (*v5 & 0xFFFFFFFFFFFFFF8));
      if (v27 >= v26 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
      v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
      specialized Array._endMutation()(v28);
      swift_endAccess(v35);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v19);
      v16 += v31;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease(v29);
  }
}

char *sub_1B1BEC()
{
  _BYTE *v0;
  unint64_t v1;
  char *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  char *v22;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  void *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  _QWORD v41[11];
  char v42;
  char v43;

  if (*v0 == 1)
  {
    v1 = sub_1FEB8();
    if ((static UITraitCollection.interfaceIdiomIsMac.getter(v1) & 1) != 0)
      return (char *)objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 126);
  }
  v3 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HeaderButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = objc_msgSend(v3, "titleLabel");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setNumberOfLines:", 0);

  }
  v6 = objc_msgSend(v3, "titleLabel");
  if (v6)
  {
    v40 = v6;
    if (qword_3CF618 != -1)
      swift_once(&qword_3CF618, sub_141CA0);
    v8 = qword_3FC520;
    v7 = qword_3FC528;
    v9 = qword_3FC530;
    v10 = qword_3FC538;
    v11 = qword_3FC540;
    v12 = qword_3FC548;
    v28 = qword_3FC550;
    v29 = qword_3FC558;
    v30 = qword_3FC560;
    v31 = word_3FC568;
    v32 = HIBYTE(word_3FC568);
    v13 = qword_3FC510;
    v38 = *(_QWORD *)algn_3FC518;
    v39 = (void *)qword_3FC510;
    v14 = *(_QWORD *)algn_3FC518;
    v36 = qword_3FC530;
    v37 = qword_3FC528;
    v34 = (void *)qword_3FC540;
    v35 = qword_3FC538;
    v33 = qword_3FC548;
    sub_DDA0((void *)qword_3FC510, *(uint64_t *)algn_3FC518, qword_3FC520, qword_3FC528, qword_3FC530, qword_3FC538, (void *)qword_3FC540, qword_3FC548, qword_3FC550, qword_3FC558, qword_3FC560, word_3FC568, SHIBYTE(word_3FC568));
    v15 = objc_msgSend(v3, "traitCollection");
    v41[0] = v13;
    v41[1] = v14;
    v41[2] = v8;
    v41[3] = v7;
    v41[4] = v9;
    v41[5] = v10;
    v41[6] = v11;
    v41[7] = v12;
    v41[8] = v28;
    v41[9] = v29;
    v41[10] = v30;
    v42 = v31;
    v43 = v32;
    v16 = sub_1D5728((uint64_t)v41, v15);
    v17 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v16, 0.0);

    sub_DCC8(v39, v38, v8, v37, v36, v35, v34, v33, v28, v29, v30, v31, v32);
    objc_msgSend(v40, "setFont:", v17);

  }
  if (qword_3CF048 != -1)
    swift_once(&qword_3CF048, sub_E358);
  objc_msgSend(v3, "setTitleColor:forState:", qword_3FA8A8, 2);
  v18 = objc_msgSend(v3, "titleLabel");
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "setLineBreakMode:", 0);

  }
  v20 = objc_msgSend(v3, "titleLabel");
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, "setTextAlignment:", 1);

  }
  v22 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews12HeaderButton_touchOutsideMargin];
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)v22 = _Q0;
  *((_OWORD *)v22 + 1) = _Q0;
  return v3;
}

void sub_1B1F3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t, __n128);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  __n128 v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  Swift::String v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *boxed_opaque_existential_0;
  Swift::String v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  _QWORD v53[4];
  char v54[24];

  v3 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v3);
  v47 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSLogger(0);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  __chkstk_darwin(v5);
  v48 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionMetricsBehavior(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionButton(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_buttons);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_buttons, v54, 0, 0);
  v16 = *v15;
  swift_bridgeObjectRetain(v16);
  sub_9002C(a1, v16);
  v18 = v17;
  v20 = v19;
  v21 = swift_bridgeObjectRelease(v16);
  if ((v20 & 1) != 0)
    return;
  if ((v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_actionButtons);
  if (v18 >= *(_QWORD *)(v22 + 16))
  {
LABEL_10:
    __break(1u);
    return;
  }
  v23 = v22
      + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
      + *(_QWORD *)(v12 + 72) * v18;
  v24 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v12 + 16);
  v46 = v11;
  v24(v14, v23, v11, v21);
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_objectGraph);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v27 = BaseObjectGraph.injectIfAvailable<A>(_:)(v51, v26, v26);
  v28 = v51[0];
  if (v51[0])
  {
    v29 = v51[1];
    ObjectType = swift_getObjectType();
    ActionButton.action.getter(v51);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for ActionMetricsBehavior.fromAction(_:), v7);
    v31 = ActionRunner.perform(_:withMetrics:asPartOf:)(v51, v10, v25, ObjectType, v29);
    swift_unknownObjectRelease(v28);
    v32 = swift_release(v31);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v32);
    __swift_destroy_boxed_opaque_existential_0(v51);
  }
  else
  {
    v33 = v48;
    static OSLogger.actions.getter(v27);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
    v35 = type metadata accessor for LogMessage(0);
    v36 = swift_allocObject(v34, ((*(unsigned __int8 *)(*(_QWORD *)(v35 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v35 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v35 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v35 - 8) + 80) | 7);
    *(_OWORD *)(v36 + 16) = xmmword_2F03C0;
    v37 = v47;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(44, 1);
    v38._object = (void *)0x800000000030A650;
    v38._countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    ActionButton.action.getter(v51);
    v39 = v52;
    v40 = __swift_project_boxed_opaque_existential_1(v51, v52);
    v53[3] = v39;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v53);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(boxed_opaque_existential_0, v40, v39);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v53);
    sub_1FE78((uint64_t)v53);
    __swift_destroy_boxed_opaque_existential_0(v51);
    v42._countAndFlagsBits = 0xD00000000000001ALL;
    v42._object = (void *)0x8000000000312E70;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    LogMessage.init(stringInterpolation:)(v37);
    v43 = v50;
    Logger.error(_:)(v36, v50, &protocol witness table for OSLogger);
    v44 = swift_bridgeObjectRelease(v36);
    (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v33, v43, v44);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v46);
}

char *InformationView.__allocating_init(asPartOf:withStyle:)(uint64_t a1, char *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return InformationView.init(asPartOf:withStyle:)(a1, a2);
}

char *InformationView.init(asPartOf:withStyle:)(uint64_t a1, char *a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  char v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  double left;
  double bottom;
  double right;
  char *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  objc_super v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = *a2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_buttons] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_objectGraph] = a1;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_style] = v6;
  v7 = objc_allocWithZone((Class)UIImageView);
  v8 = v2;
  v9 = objc_msgSend(v7, "init", swift_retain(a1).n128_f64[0]);
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_imageView;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_imageView] = v9;
  objc_msgSend(v9, "setContentMode:", 1);
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v9;
  v13 = objc_msgSend(v11, "secondaryLabelColor");
  objc_msgSend(v12, "setTintColor:", v13);

  v14 = *(void **)&v8[v10];
  v15 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v16 = v14;
  v17 = objc_msgSend(v15, "configurationWithPointSize:", 63.0);
  objc_msgSend(v16, "setPreferredSymbolConfiguration:", v17);

  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF678 != -1)
    swift_once(&qword_3CF678, sub_142EF8);
  v29 = qword_3FC990;
  v30 = *(_QWORD *)algn_3FC998;
  v31 = qword_3FC9A0;
  v32 = qword_3FC9A8;
  v33 = qword_3FC9B0;
  v34 = *(_QWORD *)byte_3FC9B8;
  v35 = qword_3FC9C0;
  v36 = qword_3FC9C8;
  v37 = qword_3FC9D0;
  v38 = qword_3FC9D8;
  v39 = qword_3FC9E0;
  v40 = word_3FC9E8;
  sub_DDA0((void *)qword_3FC990, *(uint64_t *)algn_3FC998, qword_3FC9A0, qword_3FC9A8, qword_3FC9B0, byte_3FC9B8[0], (void *)qword_3FC9C0, qword_3FC9C8, qword_3FC9D0, qword_3FC9D8, qword_3FC9E0, word_3FC9E8, SHIBYTE(word_3FC9E8));
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_titleLabel] = sub_A96AC((uint64_t)&v29, 2, 0, 1);
  if (qword_3CF680 != -1)
    swift_once(&qword_3CF680, sub_142FA4);
  v29 = qword_3FC9F0;
  v30 = *(_QWORD *)algn_3FC9F8;
  v31 = qword_3FCA00;
  v32 = qword_3FCA08;
  v33 = qword_3FCA10;
  v34 = qword_3FCA18;
  v35 = qword_3FCA20;
  v36 = qword_3FCA28;
  v37 = qword_3FCA30;
  v38 = qword_3FCA38;
  v39 = qword_3FCA40;
  v40 = word_3FCA48;
  sub_DDA0((void *)qword_3FC9F0, *(uint64_t *)algn_3FC9F8, qword_3FCA00, qword_3FCA08, qword_3FCA10, qword_3FCA18, (void *)qword_3FCA20, qword_3FCA28, qword_3FCA30, qword_3FCA38, qword_3FCA40, word_3FCA48, SHIBYTE(word_3FCA48));
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_subtitleLabel] = sub_A96AC((uint64_t)&v29, 2, 0, 1);
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_actionButtons] = _swiftEmptyArrayStorage;

  v28.receiver = v8;
  v28.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v22 = (char *)v18;
  objc_msgSend(v22, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_imageView]);
  v23 = *(void **)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_titleLabel];
  objc_msgSend(v22, "addSubview:", v23);
  v24 = *(void **)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_subtitleLabel];
  objc_msgSend(v22, "addSubview:", v24);
  objc_msgSend(v23, "setNumberOfLines:", 0);
  objc_msgSend(v23, "setTextAlignment:", 1);
  objc_msgSend(v24, "setNumberOfLines:", 0);
  objc_msgSend(v24, "setTextAlignment:", 1);
  v25 = qword_3CEFF0;
  v26 = v22;
  if (v25 != -1)
    swift_once(&qword_3CEFF0, sub_DFAC);
  objc_msgSend(v26, "setBackgroundColor:", qword_3D0898);

  swift_release(a1);
  return v26;
}

void InformationView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_buttons] = &_swiftEmptyArrayStorage;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/InformationView.swift", 45, 2, 112, 0);
  __break(1u);
}

void sub_1B2914()
{
  _BYTE *v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD v30[11];
  char v31;
  char v32;

  if (*v0 != 1 || (v1 = sub_1FEB8(), (static UITraitCollection.interfaceIdiomIsMac.getter(v1) & 1) == 0))
  {
    if (qword_3CF680 != -1)
      swift_once(&qword_3CF680, sub_142FA4);
    v2 = (void *)qword_3FC9F0;
    v3 = *(_QWORD *)algn_3FC9F8;
    v4 = qword_3FCA08;
    v28 = qword_3FCA00;
    v29 = (void *)qword_3FC9F0;
    v19 = qword_3FCA10;
    v5 = qword_3FCA28;
    v26 = (void *)qword_3FCA20;
    v27 = qword_3FCA18;
    v6 = qword_3FCA30;
    v7 = qword_3FCA38;
    v21 = qword_3FCA30;
    v22 = qword_3FCA38;
    v8 = qword_3FCA40;
    v23 = qword_3FCA40;
    v9 = word_3FCA48;
    v10 = HIBYTE(word_3FCA48);
    v24 = word_3FCA48;
    v25 = HIBYTE(word_3FCA48);
    v11 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
    v18 = v6;
    v12 = v3;
    v20 = v3;
    sub_DDA0(v2, v3, v28, v4, v19, v27, v26, v5, v18, v7, v8, v9, v10);
    v13 = objc_msgSend(v11, "system");
    v14 = objc_msgSend(v13, "preferredContentSizeCategory");

    v15 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v14);
    v30[0] = v29;
    v30[1] = v12;
    v30[2] = v28;
    v30[3] = v4;
    v30[4] = v19;
    v30[5] = v27;
    v30[6] = v26;
    v30[7] = v5;
    v30[8] = v21;
    v30[9] = v22;
    v30[10] = v23;
    v31 = v24;
    v32 = v25;
    v16 = sub_1D5728((uint64_t)v30, v15);
    v17 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v16, 0.0);

    sub_DCC8(v29, v20, v28, v4, v19, v27, v26, v5, v21, v22, v23, v24, v25);
    objc_msgSend(v17, "readableWidth");

  }
}

double InformationView.sizeThatFits(_:)(double a1, double a2)
{
  char *v2;
  objc_class *ObjectType;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  double v35;
  double v36;
  double v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  _QWORD v51[11];
  char v52;
  char v53;
  objc_super v54;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_titleLabel], "text");
  if (!v6)
    goto LABEL_9;
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v10 = v9;

  v11 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_subtitleLabel], "text");
  if (!v11)
  {
    swift_bridgeObjectRelease(v10);
LABEL_9:
    v54.receiver = v2;
    v54.super_class = ObjectType;
    objc_msgSendSuper2(&v54, "sizeThatFits:", a1, a2);
    return v37;
  }
  v12 = v11;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v15 = v14;

  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_actionButtons];
  LOBYTE(v51[0]) = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_style];
  v17 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_imageView], "image", swift_bridgeObjectRetain(v16).n128_f64[0]);
  v18 = v17;
  if (v17)

  _s23ShelfKitCollectionViews15InformationViewC6height5width5title8subtitle13actionButtons5style9showImage10pageTraits12CoreGraphics7CGFloatVAN_S2SSay0aB012ActionButtonVGAC5StyleOSbAA20PageTraitEnvironment_pSgtFZ_0(v8, v10, v13, v15, v16, v51, v18 != 0, a1);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v16);
  if (qword_3CF618 != -1)
    swift_once(&qword_3CF618, sub_141CA0);
  v19 = (void *)qword_3FC510;
  v20 = *(_QWORD *)algn_3FC518;
  v21 = qword_3FC528;
  v49 = qword_3FC520;
  v50 = (void *)qword_3FC510;
  v40 = qword_3FC530;
  v22 = qword_3FC548;
  v47 = (void *)qword_3FC540;
  v48 = qword_3FC538;
  v23 = qword_3FC550;
  v24 = qword_3FC558;
  v42 = qword_3FC550;
  v43 = qword_3FC558;
  v25 = qword_3FC560;
  v44 = qword_3FC560;
  v26 = word_3FC568;
  v27 = HIBYTE(word_3FC568);
  v45 = word_3FC568;
  v46 = HIBYTE(word_3FC568);
  v28 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  v39 = v23;
  v29 = v20;
  v41 = v20;
  sub_DDA0(v19, v20, v49, v21, v40, v48, v47, v22, v39, v24, v25, v26, v27);
  v30 = objc_msgSend(v28, "system");
  v31 = objc_msgSend(v30, "preferredContentSizeCategory");

  v32 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v31);
  v51[0] = v50;
  v51[1] = v29;
  v51[2] = v49;
  v51[3] = v21;
  v51[4] = v40;
  v51[5] = v48;
  v51[6] = v47;
  v51[7] = v22;
  v51[8] = v42;
  v51[9] = v43;
  v51[10] = v44;
  v52 = v45;
  v53 = v46;
  v33 = sub_1D5728((uint64_t)v51, v32);
  v34 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v33, 0.0);

  sub_DCC8(v50, v41, v49, v21, v40, v48, v47, v22, v42, v43, v44, v45, v46);
  objc_msgSend(v34, "readableWidth");
  v36 = v35;

  return v36;
}

Swift::Void __swiftcall InformationView.layoutSubviews()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  unint64_t v20;
  id v21;
  void *v22;
  id v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  double v33;
  CGFloat v34;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  void *v39;
  id v40;
  double v41;
  id v42;
  double v43;
  double v44;
  id v45;
  double v46;
  double v47;
  unint64_t v48;
  uint64_t v49;
  double v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t *v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t inited;
  uint64_t v60;
  NSString *v61;
  id v62;
  NSString *v63;
  void *v64;
  id v65;
  unint64_t v66;
  id v67;
  CGFloat v68;
  double v69;
  double v70;
  void *v71;
  double v72;
  id v73;
  void *v74;
  double v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSString *v85;
  id v86;
  NSString *v87;
  void *v88;
  id v89;
  unint64_t v90;
  id v91;
  CGFloat v92;
  double v93;
  double v94;
  char **p_name;
  double MaxY;
  uint64_t *v97;
  uint64_t v98;
  CGFloat v99;
  uint64_t v100;
  CGFloat v101;
  CGFloat v102;
  double v103;
  double v104;
  double v105;
  CGFloat MinX;
  id v107;
  void *v108;
  unint64_t v109;
  double v110;
  double v111;
  double v112;
  double v113;
  id v114;
  void *v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  id v127;
  double v128;
  double v129;
  id v130;
  double v131;
  id v132;
  double v133;
  double v134;
  id v135;
  double v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  unint64_t v141;
  double v142;
  CGFloat v143;
  CGFloat v144;
  int v145;
  char v146[24];
  char v147[64];
  char v148[64];
  objc_super v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;
  CGRect v162;
  CGRect v163;
  CGRect v164;
  CGRect v165;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149.receiver = v0;
  v149.super_class = ObjectType;
  objc_msgSendSuper2(&v149, "layoutSubviews", v5);
  v8 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_titleLabel];
  v9 = objc_msgSend(v8, "text");
  if (v9)
  {
    v10 = v9;
    v143 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(v9));
    v12 = v11;

    v13 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_subtitleLabel];
    v14 = objc_msgSend(v13, "text");
    if (!v14)
      goto LABEL_65;
    v15 = v14;
    v140 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v141 = v16;

    v145 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_style];
    if (v145 == 1 && (v17 = sub_1FEB8(), (static UITraitCollection.interfaceIdiomIsMac.getter(v17) & 1) != 0))
    {
      v18 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    }
    else
    {
      if (qword_3CF040 != -1)
        swift_once(&qword_3CF040, sub_E344);
      v18 = (id)qword_3FA8A0;
    }
    v19 = v18;
    objc_msgSend(v8, "setTextColor:", v18);

    if ((v145 & 1) != 0 && (v20 = sub_1FEB8(), (static UITraitCollection.interfaceIdiomIsMac.getter(v20) & 1) != 0))
    {
      v21 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    }
    else
    {
      if (qword_3CF048 != -1)
        swift_once(&qword_3CF048, sub_E358);
      v21 = (id)qword_3FA8A8;
    }
    v22 = v21;
    objc_msgSend(v13, "setTextColor:", v21);

    v23 = objc_msgSend(v1, "safeAreaLayoutGuide");
    objc_msgSend(v23, "layoutFrame");
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;

    v150.origin.x = v25;
    v150.origin.y = v27;
    v150.size.width = v29;
    v150.size.height = v31;
    v32 = CGRectGetWidth(v150) + -80.0;
    v146[0] = v145;
    sub_1B2914();
    if (v33 >= v32)
      v33 = v32;
    v34 = ceil(v33);
    v151.origin.x = v25;
    v151.origin.y = v27;
    v151.size.width = v29;
    v151.size.height = v31;
    v152.origin.x = CGRectGetMidX(v151) - ceil(v34 * 0.5);
    v152.origin.y = v27;
    v144 = v34;
    v152.size.width = v34;
    v152.size.height = v31;
    v153 = CGRectIntegral(v152);
    x = v153.origin.x;
    y = v153.origin.y;
    width = v153.size.width;
    height = v153.size.height;
    v39 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_imageView];
    v40 = objc_msgSend(v39, "image");

    v142 = *(double *)&v13;
    if (v40)
    {
      v154.origin.x = x;
      v154.origin.y = y;
      v154.size.width = width;
      v154.size.height = height;
      v41 = CGRectGetMidX(v154) + -31.5;
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v3);
      v42 = objc_msgSend(v1, "traitCollection");
      objc_msgSend(v42, "displayScale");
      v44 = v43;
      if (v43 < COERCE_DOUBLE(1))
      {
        v45 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        objc_msgSend(v45, "scale");
        v44 = v46;

      }
      v47 = CGFloat.rounded(_:toScale:)((uint64_t)v7, v44, v41);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      objc_msgSend(v39, "setFrame:", v47, 30.0, 63.0, 63.0);
      if (v145 && (v48 = sub_1FEB8(), (static UITraitCollection.interfaceIdiomIsMac.getter(v48) & 1) != 0))
        *(double *)&v49 = 113.0;
      else
        *(double *)&v49 = 98.0;
      v50 = *(double *)&v49;
    }
    else
    {
      v50 = 30.0;
    }
    v51 = objc_msgSend(v8, "font");
    if (!v51)
    {
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      return;
    }
    v52 = v51;
    v139 = v8;
    v53 = objc_msgSend(v8, "numberOfLines");
    v54 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v54 = *(_QWORD *)&v143 & 0xFFFFFFFFFFFFLL;
    v55 = &qword_3CF000;
    if (v54)
    {
      v56 = v53;
      v57 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
      objc_msgSend(v57, "setMaximumNumberOfLines:", v56);
      v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
      inited = swift_initStackObject(v58, v148);
      *(_OWORD *)(inited + 16) = xmmword_2EFA20;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      *(_QWORD *)(inited + 40) = v52;
      *(_QWORD *)(inited + 48) = NSParagraphStyleAttributeName;
      v60 = qword_3CF0D8;
      v61 = NSFontAttributeName;
      v62 = v52;
      v63 = NSParagraphStyleAttributeName;
      if (v60 != -1)
        swift_once(&qword_3CF0D8, sub_28A30);
      v64 = (void *)qword_3FA958;
      *(_QWORD *)(inited + 56) = qword_3FA958;
      v65 = v64;
      v66 = sub_D47A0(inited);
      v67 = v57;
      v68 = v144;
      v155.origin.x = sub_21A7CC(*(uint64_t *)&v143, v12, 1uLL, v66, v57, v144, 1.79769313e308);
      v69 = CGRectGetHeight(v155);

      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v66);

      v55 = &qword_3CF000;
    }
    else
    {

      swift_bridgeObjectRelease(v12);
      v69 = 0.0;
      v68 = v144;
    }
    v70 = v142;
    v71 = v139;
    v72 = ceil(v69);
    v156.origin.x = x;
    v156.origin.y = y;
    v156.size.width = width;
    v156.size.height = height;
    v157.origin.x = CGRectGetMinX(v156);
    v157.origin.y = v50;
    v157.size.width = v68;
    v157.size.height = v72;
    v158 = CGRectIntegral(v157);
    objc_msgSend(v71, "setFrame:", v158.origin.x, v158.origin.y, v158.size.width, v158.size.height);
    v73 = objc_msgSend(*(id *)&v70, "font");
    if (!v73)
      goto LABEL_69;
    v74 = v73;
    v75 = v50 + v72 + 5.0;
    v76 = objc_msgSend(*(id *)&v70, "numberOfLines");
    v77 = v141;
    v78 = HIBYTE(v141) & 0xF;
    v79 = v140;
    if ((v141 & 0x2000000000000000) == 0)
      v78 = v140 & 0xFFFFFFFFFFFFLL;
    if (v78)
    {
      v80 = v76;
      v81 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
      objc_msgSend(v81, "setMaximumNumberOfLines:", v80);
      v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
      v83 = swift_initStackObject(v82, v147);
      *(_OWORD *)(v83 + 16) = xmmword_2EFA20;
      *(_QWORD *)(v83 + 32) = NSFontAttributeName;
      *(_QWORD *)(v83 + 40) = v74;
      *(_QWORD *)(v83 + 48) = NSParagraphStyleAttributeName;
      v84 = v55[27];
      v85 = NSFontAttributeName;
      v86 = v74;
      v87 = NSParagraphStyleAttributeName;
      if (v84 != -1)
        swift_once(&qword_3CF0D8, sub_28A30);
      v88 = (void *)qword_3FA958;
      *(_QWORD *)(v83 + 56) = qword_3FA958;
      v89 = v88;
      v90 = sub_D47A0(v83);
      v91 = v81;
      v92 = v144;
      v159.origin.x = sub_21A7CC(v79, v77, 1uLL, v90, v81, v144, 1.79769313e308);
      v93 = CGRectGetHeight(v159);

      swift_bridgeObjectRelease(v77);
      swift_bridgeObjectRelease(v90);

    }
    else
    {

      swift_bridgeObjectRelease(v77);
      v93 = 0.0;
      v92 = v144;
    }
    v94 = v142;
    v160.origin.x = x;
    v160.origin.y = y;
    v160.size.width = width;
    v160.size.height = height;
    v161.origin.x = CGRectGetMinX(v160);
    v161.origin.y = v75;
    v161.size.width = v92;
    v161.size.height = ceil(v93);
    v162 = CGRectIntegral(v161);
    objc_msgSend(*(id *)&v94, "setFrame:", v162.origin.x, v162.origin.y, v162.size.width, v162.size.height);
    p_name = (char **)(&stru_3B7FF8 + 8);
    if (*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_actionButtons] + 16))
    {
      objc_msgSend(*(id *)&v94, "frame");
      MaxY = CGRectGetMaxY(v163);
      v97 = (uint64_t *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_buttons];
      swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_buttons], v146, 0, 0);
      v12 = *v97;
      if ((unint64_t)v12 >> 62)
      {
        if (v12 < 0)
          v137 = v12;
        else
          v137 = v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v12);
        v98 = _CocoaArrayWrapper.endIndex.getter(v137);
        if (v98)
          goto LABEL_45;
      }
      else
      {
        v98 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(v12);
        if (v98)
        {
LABEL_45:
          v143 = height;
          if (v98 >= 1)
          {
            v99 = width;
            v100 = 0;
            v142 = 1.79769313e308;
            v101 = x;
            v102 = y;
            v103 = v144;
            do
            {
              if ((v12 & 0xC000000000000001) != 0)
                v107 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v100, v12);
              else
                v107 = *(id *)(v12 + 8 * v100 + 32);
              v108 = v107;
              if (v145 && (v109 = sub_1FEB8(), (static UITraitCollection.interfaceIdiomIsMac.getter(v109) & 1) != 0))
              {
                objc_msgSend(v108, "sizeThatFits:", v103, v142);
                v111 = v110;
                v113 = v112;
              }
              else
              {
                v114 = objc_msgSend(v108, "titleLabel");
                if (v114)
                {
                  v115 = v114;
                  objc_msgSend(v114, "sizeThatFits:", v103, v142);
                  v117 = v116;
                  v119 = v118;
                  objc_msgSend(v108, "titleEdgeInsets");
                  v121 = v117 + v120;
                  objc_msgSend(v108, "titleEdgeInsets");
                  v111 = v121 + v122;
                  objc_msgSend(v108, "titleEdgeInsets");
                  v124 = v119 + v123;
                  objc_msgSend(v108, "titleEdgeInsets");
                  v126 = v125;

                  v113 = v124 + v126;
                }
                else
                {
                  v111 = 0.0;
                  v113 = 0.0;
                }
              }
              v127 = objc_msgSend(v108, p_name[302]);
              objc_msgSend(v127, "displayScale");
              v129 = v128;
              if (v128 < COERCE_DOUBLE(1))
              {
                v130 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
                objc_msgSend(v130, "scale");
                v129 = v131;

                v127 = v130;
                p_name = &stru_3B7FF8.name;
              }

              v132 = objc_msgSend(v108, p_name[302]);
              objc_msgSend(v132, "displayScale");
              v134 = v133;
              if (v133 < COERCE_DOUBLE(1))
              {
                v135 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
                objc_msgSend(v135, "scale");
                v134 = v136;

                v132 = v135;
                p_name = (char **)(&stru_3B7FF8 + 8);
              }
              ++v100;

              v104 = ceil(v111 * v129) / v129;
              v105 = ceil(v113 * v134) / v134;
              v164.origin.x = v101;
              v164.origin.y = v102;
              v164.size.width = v99;
              v164.size.height = v143;
              MinX = CGRectGetMinX(v164);
              v103 = v144;
              objc_msgSend(v108, "setFrame:", ceil((v144 - v104) * 0.5) + MinX, MaxY + 20.0, v104, v105);
              objc_msgSend(v108, "frame");
              MaxY = CGRectGetMaxY(v165);

            }
            while (v98 != v100);
            goto LABEL_65;
          }
          __break(1u);
          goto LABEL_68;
        }
      }
LABEL_65:
      swift_bridgeObjectRelease(v12);
    }
  }
}

void InformationView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.InformationView", 39, "init(frame:)", 12, 0);
  __break(1u);
}

Swift::Void __swiftcall InformationView.apply(title:subtitle:actionButtons:symbolName:)(Swift::String title, Swift::String subtitle, Swift::OpaquePointer actionButtons, Swift::String_optional symbolName)
{
  uint64_t v4;
  void *object;
  void *v7;
  NSString v8;
  void *v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  void *v13;
  NSString v14;
  id v15;

  object = symbolName.value._object;
  v7 = *(void **)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_titleLabel);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setText:", v8);

  v9 = *(void **)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_subtitleLabel);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v10);

  v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_actionButtons);
  *(Swift::OpaquePointer *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_actionButtons) = actionButtons;
  swift_bridgeObjectRetain(actionButtons._rawValue);
  swift_bridgeObjectRelease(v11);
  sub_1B189C();
  v12 = *(void **)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationView_imageView);
  if (object)
  {
    v13 = (void *)objc_opt_self(UIImage);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v13, "__systemImageNamedSwift:", v14);

  }
  else
  {
    v15 = 0;
  }
  objc_msgSend(v12, "setImage:", v15);

}

double InformationView.apply(_:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::OpaquePointer v6;
  Swift::String_optional v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  double result;

  v0 = InformationViewCoordinator.title.getter();
  v2 = v1;
  v3 = InformationViewCoordinator.subtitle.getter();
  v5 = v4;
  v6._rawValue = (void *)InformationViewCoordinator.buttons.getter();
  v7.value._countAndFlagsBits = InformationViewCoordinator.symbolName.getter();
  v9 = v8;
  v10._countAndFlagsBits = v0;
  v10._object = v2;
  v11._countAndFlagsBits = v3;
  v11._object = v5;
  v7.value._object = v9;
  InformationView.apply(title:subtitle:actionButtons:symbolName:)(v10, v11, v6, v7);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6._rawValue);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

double _s23ShelfKitCollectionViews15InformationViewC6height5width5title8subtitle13actionButtons5style9showImage10pageTraits12CoreGraphics7CGFloatVAN_S2SSay0aB012ActionButtonVGAC5StyleOSbAA20PageTraitEnvironment_pSgtFZ_0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, _BYTE *a6, char a7, double a8)
{
  int v13;
  double v14;
  double v15;
  double v16;
  unint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  double Height;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t inited;
  uint64_t v39;
  NSString *v40;
  id v41;
  NSString *v42;
  void *v43;
  id v44;
  unint64_t v45;
  id v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  id v54;
  id v55;
  id v56;
  id v57;
  double v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSString *v64;
  id v65;
  NSString *v66;
  void *v67;
  id v68;
  unint64_t v69;
  id v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  unint64_t v80;
  char v81;
  void *v82;
  char *v83;
  char *v84;
  char isUniquelyReferenced_nonNull_native;
  int *v86;
  NSString v87;
  unint64_t v88;
  double v89;
  double v90;
  id v91;
  void *v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  id v99;
  double v100;
  id v101;
  id v102;
  double v103;
  double v104;
  id v105;
  double v106;
  unint64_t v107;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  char v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  id v128;
  id v129;
  id v130;
  void *v131;
  char v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int *v139;
  char v140[64];
  char v141[64];
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  char v154;
  CGRect v155;
  CGRect v156;

  v13 = *a6;
  v14 = a8 + -80.0;
  LOBYTE(v142) = *a6;
  sub_1B2914();
  if (v15 < v14)
    v14 = v15;
  v16 = 30.0;
  if ((a7 & 1) != 0)
  {
    if (v13 && (v17 = sub_1FEB8(), (static UITraitCollection.interfaceIdiomIsMac.getter(v17) & 1) != 0))
      *(double *)&v18 = 113.0;
    else
      *(double *)&v18 = 98.0;
    v16 = *(double *)&v18;
  }
  v132 = v13;
  v121 = a1;
  v123 = a2;
  v125 = a3;
  v126 = a4;
  if (qword_3CF678 != -1)
    swift_once(&qword_3CF678, sub_142EF8);
  v19 = ceil(v14);
  v20 = *(_QWORD *)algn_3FC998;
  v21 = qword_3FC9A0;
  v109 = (void *)qword_3FC990;
  v110 = qword_3FC9A8;
  v22 = qword_3FC9B0;
  v23 = qword_3FC9C8;
  v134 = (void *)qword_3FC9C0;
  v136 = *(_QWORD *)byte_3FC9B8;
  v24 = qword_3FC9D0;
  v25 = qword_3FC9D8;
  v111 = qword_3FC9D0;
  v112 = qword_3FC9D8;
  v26 = qword_3FC9E0;
  v113 = qword_3FC9E0;
  v27 = word_3FC9E8;
  v115 = word_3FC9E8;
  v28 = HIBYTE(word_3FC9E8);
  v117 = HIBYTE(word_3FC9E8);
  v29 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  sub_DDA0(v109, v20, v21, v110, v22, v136, v134, v23, v24, v25, v26, v27, v28);
  v128 = v29;
  v30 = objc_msgSend(v29, "system");
  v31 = objc_msgSend(v30, "preferredContentSizeCategory");

  v120 = (id)objc_opt_self(UITraitCollection);
  v32 = objc_msgSend(v120, "traitCollectionWithPreferredContentSizeCategory:", v31);

  v142 = v109;
  v143 = v20;
  v144 = v21;
  v145 = v110;
  v146 = v22;
  v147 = v136;
  v148 = (uint64_t)v134;
  v149 = v23;
  v150 = v111;
  v151 = v112;
  v152 = v113;
  v153 = v115;
  v154 = v117;
  v33 = sub_1D5728((uint64_t)&v142, v32);
  Height = 0.0;
  v119 = (id)objc_opt_self(UIFont);
  v130 = objc_msgSend(v119, "fontWithDescriptor:size:", v33, 0.0);

  sub_DCC8(v109, v20, v21, v110, v22, v136, v134, v23, v111, v112, v113, v115, v117);
  v35 = HIBYTE(v123) & 0xF;
  if ((v123 & 0x2000000000000000) == 0)
    v35 = v121 & 0xFFFFFFFFFFFFLL;
  if (v35)
  {
    v36 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
    objc_msgSend(v36, "setMaximumNumberOfLines:", 0);
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
    inited = swift_initStackObject(v37, v141);
    *(_OWORD *)(inited + 16) = xmmword_2EFA20;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 40) = v130;
    *(_QWORD *)(inited + 48) = NSParagraphStyleAttributeName;
    v39 = qword_3CF0D8;
    v40 = NSFontAttributeName;
    v41 = v130;
    v42 = NSParagraphStyleAttributeName;
    if (v39 != -1)
      swift_once(&qword_3CF0D8, sub_28A30);
    v43 = (void *)qword_3FA958;
    *(_QWORD *)(inited + 56) = qword_3FA958;
    v44 = v43;
    v45 = sub_D47A0(inited);
    v46 = v36;
    v155.origin.x = sub_21A7CC(v121, v123, 1uLL, v45, v36, v19, 1.79769313e308);
    Height = CGRectGetHeight(v155);

    swift_bridgeObjectRelease(v45);
  }
  else
  {

  }
  v47 = v132;
  if (qword_3CF680 != -1)
    swift_once(&qword_3CF680, sub_142FA4);
  v131 = (void *)qword_3FC9F0;
  v133 = qword_3FCA00;
  v135 = *(_QWORD *)algn_3FC9F8;
  v137 = qword_3FCA08;
  v48 = qword_3FCA10;
  v49 = qword_3FCA20;
  v116 = qword_3FCA10;
  v118 = qword_3FCA28;
  v50 = qword_3FCA30;
  v122 = qword_3FCA18;
  v124 = qword_3FCA38;
  v51 = qword_3FCA40;
  v52 = word_3FCA48;
  v53 = HIBYTE(word_3FCA48);
  v114 = (void *)qword_3FCA20;
  sub_DDA0((void *)qword_3FC9F0, *(uint64_t *)algn_3FC9F8, qword_3FCA00, qword_3FCA08, qword_3FCA10, qword_3FCA18, (void *)qword_3FCA20, qword_3FCA28, qword_3FCA30, qword_3FCA38, qword_3FCA40, word_3FCA48, SHIBYTE(word_3FCA48));
  v54 = objc_msgSend(v128, "system");
  v55 = objc_msgSend(v54, "preferredContentSizeCategory");

  v56 = objc_msgSend(v120, "traitCollectionWithPreferredContentSizeCategory:", v55);
  v142 = v131;
  v143 = v135;
  v144 = v133;
  v145 = v137;
  v146 = v48;
  v147 = v122;
  v148 = v49;
  v149 = v118;
  v150 = v50;
  v151 = v124;
  v152 = v51;
  v153 = v52;
  v154 = v53;
  v57 = sub_1D5728((uint64_t)&v142, v56);
  v58 = 0.0;
  v129 = objc_msgSend(v119, "fontWithDescriptor:size:", v57, 0.0);

  sub_DCC8(v131, v135, v133, v137, v116, v122, v114, v118, v50, v124, v51, v52, v53);
  v59 = HIBYTE(v126) & 0xF;
  if ((v126 & 0x2000000000000000) == 0)
    v59 = v125 & 0xFFFFFFFFFFFFLL;
  if (v59)
  {
    v60 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
    objc_msgSend(v60, "setMaximumNumberOfLines:", 0);
    v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
    v62 = swift_initStackObject(v61, v140);
    *(_OWORD *)(v62 + 16) = xmmword_2EFA20;
    *(_QWORD *)(v62 + 32) = NSFontAttributeName;
    *(_QWORD *)(v62 + 40) = v129;
    *(_QWORD *)(v62 + 48) = NSParagraphStyleAttributeName;
    v63 = qword_3CF0D8;
    v64 = NSFontAttributeName;
    v65 = v129;
    v66 = NSParagraphStyleAttributeName;
    if (v63 != -1)
      swift_once(&qword_3CF0D8, sub_28A30);
    v67 = (void *)qword_3FA958;
    *(_QWORD *)(v62 + 56) = qword_3FA958;
    v68 = v67;
    v69 = sub_D47A0(v62);
    v70 = v60;
    v156.origin.x = sub_21A7CC(v125, v126, 1uLL, v69, v60, v19, 1.79769313e308);
    v58 = CGRectGetHeight(v156);

    swift_bridgeObjectRelease(v69);
  }
  else
  {
    v70 = v129;
  }

  v71 = sub_1B178C(a5);
  v72 = v71[2];
  if (v72)
  {
    swift_bridgeObjectRetain(v71);
    v73 = v72 - 1;
    v138 = v74;
    v75 = (_QWORD *)(v74 + 40);
    v76 = 0.0;
    while (1)
    {
      v77 = *v75;
      v78 = qword_3CF8D8;
      swift_bridgeObjectRetain(*v75);
      if (v78 != -1)
        swift_once(&qword_3CF8D8, sub_1B1888);
      swift_beginAccess(&off_3DAAA8, &v142, 32, 0);
      v79 = off_3DAAA8;
      if (*(_QWORD *)((char *)&dword_10 + (_QWORD)off_3DAAA8) && (v80 = sub_37058(v47), (v81 & 1) != 0))
      {
        v82 = *(void **)(*(_QWORD *)&stru_20.segname[(_QWORD)v79 + 16] + 8 * v80);
        swift_endAccess(&v142);
        v83 = v82;
      }
      else
      {
        swift_endAccess(&v142);
        LOBYTE(v142) = v47;
        v84 = sub_1B1BEC();
        swift_beginAccess(&off_3DAAA8, &v142, 33, 0);
        v83 = v84;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_3DAAA8);
        v139 = off_3DAAA8;
        off_3DAAA8 = (int *)0x8000000000000000;
        sub_15F998((uint64_t)v83, v47, isUniquelyReferenced_nonNull_native);
        v86 = off_3DAAA8;
        off_3DAAA8 = v139;
        swift_bridgeObjectRelease(v86);
        swift_endAccess(&v142);
      }
      v87 = String._bridgeToObjectiveC()();
      objc_msgSend(v83, "setTitle:", v87);

      if ((v47 & 1) != 0 && (v88 = sub_1FEB8(), (static UITraitCollection.interfaceIdiomIsMac.getter(v88) & 1) != 0))
      {
        objc_msgSend(v83, "sizeThatFits:", v19, 1.79769313e308);
        v90 = v89;
      }
      else
      {
        v91 = objc_msgSend(v83, "titleLabel");
        if (v91)
        {
          v92 = v91;
          objc_msgSend(v91, "sizeThatFits:", v19, 1.79769313e308);
          v94 = v93;
          objc_msgSend(v83, "titleEdgeInsets");
          objc_msgSend(v83, "titleEdgeInsets");
          objc_msgSend(v83, "titleEdgeInsets");
          v96 = v94 + v95;
          objc_msgSend(v83, "titleEdgeInsets");
          v98 = v97;

          v90 = v96 + v98;
        }
        else
        {
          v90 = 0.0;
        }
      }
      v99 = objc_msgSend(v83, "traitCollection");
      objc_msgSend(v99, "displayScale");
      if (v100 < COERCE_DOUBLE(1))
      {
        v101 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        objc_msgSend(v101, "scale");

        v99 = v101;
      }

      v102 = objc_msgSend(v83, "traitCollection");
      objc_msgSend(v102, "displayScale");
      v104 = v103;
      if (v103 >= COERCE_DOUBLE(1))
      {
        swift_bridgeObjectRelease(v77);

      }
      else
      {
        v105 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        objc_msgSend(v105, "scale");
        v104 = v106;
        swift_bridgeObjectRelease(v77);

      }
      v76 = v76 + ceil(v90 * v104) / v104;
      if (!v73)
        break;
      v75 += 2;
      --v73;
    }
    swift_bridgeObjectRelease(v138);
    v107 = *(_QWORD *)(v138 + 16);
    swift_bridgeObjectRelease(v138);
    if (v107 >= 2)
      v76 = v76 + 30.0 + (double)(uint64_t)(v107 - 1) * 20.0;
  }
  else
  {
    swift_bridgeObjectRelease(v71);
    v76 = 0.0;
  }
  return ceil(v16 + Height + 5.0 + v58 + 30.0 + v76);
}

unint64_t sub_1B4854()
{
  unint64_t result;

  result = qword_3DAAE8;
  if (!qword_3DAAE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for InformationView.Style, &type metadata for InformationView.Style);
    atomic_store(result, (unint64_t *)&qword_3DAAE8);
  }
  return result;
}

uint64_t type metadata accessor for InformationView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews15InformationView);
}

uint64_t method lookup function for InformationView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for InformationView);
}

uint64_t storeEnumTagSinglePayload for InformationView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B4910 + 4 * byte_2FCE0D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B4944 + 4 * byte_2FCE08[v4]))();
}

uint64_t sub_1B4944(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B494C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B4954);
  return result;
}

uint64_t sub_1B4960(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B4968);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B496C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B4974(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InformationView.Style()
{
  return &type metadata for InformationView.Style;
}

uint64_t sub_1B4990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  __n128 v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = 0;
  v33 = 0xE000000000000000;
  _StringGuts.grow(_:)(52);
  v11._object = (void *)0x8000000000312E90;
  v11._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v11);
  v12._countAndFlagsBits = _typeName(_:qualified:)(a4, 0);
  object = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  v14._countAndFlagsBits = 0x7374636570786520;
  v14._object = (void *)0xE900000000000020;
  String.append(_:)(v14);
  v15._countAndFlagsBits = _typeName(_:qualified:)(a2, 0);
  v16 = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v16);
  v17._countAndFlagsBits = 0x766965636572202CLL;
  v17._object = (void *)0xEB00000000206465;
  String.append(_:)(v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E90);
  v19 = _print_unlocked<A, B>(_:_:)(a1, &v32, v18, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v21 = v32;
  v20 = v33;
  static Logger.ui.getter(v19);
  swift_bridgeObjectRetain(v20);
  v23 = Logger.logObject.getter(v22);
  v25 = static os_log_type_t.fault.getter(v24);
  if (os_log_type_enabled(v23, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v30 = v7;
    v28 = v27;
    v32 = v27;
    *(_DWORD *)v26 = 136315138;
    swift_bridgeObjectRetain(v20);
    v31 = sub_37E78(v21, v20, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    swift_bridgeObjectRelease_n(v20, 3);
    _os_log_impl(&dword_0, v23, v25, "%s", v26, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v26, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v30);
  }
  else
  {

    swift_bridgeObjectRelease_n(v20, 2);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1B4C34(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

id sub_1B4C3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_allocObject(&unk_388B38, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4738);
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_B7B54;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = v5;
  return a1;
}

uint64_t sub_1B4CB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1B4CD4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v4 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  v5 = *(void **)(a1 + 16);
  v6 = objc_msgSend(v5, "superview");
  swift_beginAccess(v4, &v8, 1, 0);
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;

  *a2 = v5;
}

void ContainerCell<>.setSeparatorHidden(hidden:)(char a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  double v5;
  id v6;

  v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 80))(a2, a3);
  if (v4)
  {
    v5 = 1.0;
    if ((a1 & 1) != 0)
      v5 = 0.0;
    v6 = v4;
    objc_msgSend(v4, "setAlpha:", v5);

  }
}

uint64_t ContainerCell.embeddedView<A>(as:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3);
  __chkstk_darwin(AssociatedTypeWitness);
  v10 = (char *)&v13 - v9;
  (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a1, a3);
  v11 = swift_dynamicCast(a4, v10, AssociatedTypeWitness, a2, 6);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a4, v11 ^ 1u, 1, a2);
}

Swift::Void __swiftcall ContainerCell.setInContextMenu(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v3 = v2;
  v4 = v1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5818);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8) + 16))(v9, v6, v6, v4);
  v7 = v10;
  if (v10)
  {
    v8 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    dispatch thunk of ContextMenuPreviewView.setInContextMenu(_:)(a1, v7, v8);
    __swift_destroy_boxed_opaque_existential_0(v9);
  }
  else
  {
    sub_D1D4((uint64_t)v9, &qword_3D5718);
  }
}

uint64_t ContainerCell.previewMargins.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void);
  char *v25;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v7 = type metadata accessor for ContextMenuPreviewMargins(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v38 = (char *)&v37 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5810);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - v17;
  v39 = v3;
  v41 = v3;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5818);
  v20 = *(_QWORD *)(a2 + 8);
  v21 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 16);
  v40 = a1;
  v21(v42, v19, v19, a1, v20);
  v22 = v43;
  if (v43)
  {
    v23 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    dispatch thunk of ContextMenuPreviewView.previewMargins.getter(v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
    __swift_destroy_boxed_opaque_existential_0(v42);
  }
  else
  {
    sub_D1D4((uint64_t)v42, &qword_3D5718);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v18, 1, 1, v7);
  }
  sub_1B5238((uint64_t)v18, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7) == 1)
  {
    sub_D1D4((uint64_t)v15, &qword_3D5810);
LABEL_8:
    v42[0] = v39;
    v29 = (*(double (**)(uint64_t, uint64_t))(v20 + 32))(v40, v20);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    sub_D1D4((uint64_t)v18, &qword_3D5810);
    *a3 = v29;
    *((_QWORD *)a3 + 1) = v31;
    *((_QWORD *)a3 + 2) = v33;
    *((_QWORD *)a3 + 3) = v35;
    return (*(uint64_t (**)(double *, _QWORD, uint64_t))(v8 + 104))(a3, enum case for ContextMenuPreviewMargins.provideRemovingOriginals(_:), v7);
  }
  v24 = *(void (**)(void))(v8 + 32);
  v25 = v38;
  v24();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for ContextMenuPreviewMargins.provide(_:), v7);
  v26 = sub_1B5280();
  v27 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v10, v7, v26);
  v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  v28(v10, v7);
  if ((v27 & 1) != 0)
  {
    v28(v25, v7);
    goto LABEL_8;
  }
  sub_D1D4((uint64_t)v18, &qword_3D5810);
  return ((uint64_t (*)(double *, char *, uint64_t))v24)(a3, v25, v7);
}

uint64_t sub_1B5238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B5280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DAB18;
  if (!qword_3DAB18)
  {
    v1 = type metadata accessor for ContextMenuPreviewMargins(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ContextMenuPreviewMargins, v1);
    atomic_store(result, (unint64_t *)&qword_3DAB18);
  }
  return result;
}

uint64_t dispatch thunk of ContainerCell.separatorInsets.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t (*v4)(_OWORD *);
  __int128 v5;
  _OWORD v7[2];
  char v8;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(uint64_t (**)(_OWORD *))(a3 + 64);
  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  v8 = v3;
  return v4(v7);
}

uint64_t dispatch thunk of ContainerCell.selectedView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of ContainerCell.useMarginsForEmbeddedView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1B530C(uint64_t a1)
{
  return sub_1B536C(a1, 0x6C69662E72617473, 0xE90000000000006CLL, &qword_3DAB20);
}

uint64_t sub_1B5330(uint64_t a1)
{
  return sub_1B536C(a1, 0xD000000000000015, 0x8000000000312F30, &qword_3DAB28);
}

uint64_t sub_1B5354(uint64_t a1)
{
  return sub_1B536C(a1, 1918989427, 0xE400000000000000, &qword_3DAB30);
}

uint64_t sub_1B536C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  uint64_t v15;

  v7 = type metadata accessor for Glyph(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v11 = Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(a2, a3, 0x403B000000000000, 0, 4, -1, 0, 0, v14);
  v12 = Glyph.image.getter(v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a4 = v12;
  return result;
}

uint64_t sub_1B542C(uint64_t a1)
{
  return sub_1B548C(a1, 0x6C69662E72617473, 0xE90000000000006CLL, &qword_3DAB38);
}

uint64_t sub_1B5450(uint64_t a1)
{
  return sub_1B548C(a1, 0xD000000000000015, 0x8000000000312F30, &qword_3DAB40);
}

uint64_t sub_1B5474(uint64_t a1)
{
  return sub_1B548C(a1, 1918989427, 0xE400000000000000, &qword_3DAB48);
}

uint64_t sub_1B548C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  uint64_t v15;

  v7 = type metadata accessor for Glyph(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v11 = Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(a2, a3, 0x4028000000000000, 0, 4, -1, 0, 0, v14);
  v12 = Glyph.image.getter(v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a4 = v12;
  return result;
}

uint64_t sub_1B554C(uint64_t a1)
{
  return sub_1B566C(a1, 0x6C69662E72617473, 0xE90000000000006CLL, &qword_3DAB50);
}

uint64_t sub_1B5570(uint64_t a1)
{
  return sub_1B566C(a1, 0xD000000000000015, 0x8000000000312F30, &qword_3DAB58);
}

uint64_t sub_1B5594(uint64_t a1)
{
  return sub_1B566C(a1, 1918989427, 0xE400000000000000, &qword_3DAB60);
}

uint64_t sub_1B55AC(uint64_t a1)
{
  return sub_1B578C(a1, 0x6C69662E72617473, 0xE90000000000006CLL, &qword_3DAB68);
}

uint64_t sub_1B55D0(uint64_t a1)
{
  return sub_1B578C(a1, 0xD000000000000015, 0x8000000000312F30, &qword_3DAB70);
}

uint64_t sub_1B55F4(uint64_t a1)
{
  return sub_1B578C(a1, 1918989427, 0xE400000000000000, &qword_3DAB78);
}

uint64_t sub_1B560C(uint64_t a1)
{
  return sub_1B566C(a1, 0x6C69662E72617473, 0xE90000000000006CLL, &qword_3DAB80);
}

uint64_t sub_1B5630(uint64_t a1)
{
  return sub_1B566C(a1, 0xD000000000000015, 0x8000000000312F30, &qword_3DAB88);
}

uint64_t sub_1B5654(uint64_t a1)
{
  return sub_1B566C(a1, 1918989427, 0xE400000000000000, &qword_3DAB90);
}

uint64_t sub_1B566C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  uint64_t v15;

  v7 = type metadata accessor for Glyph(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v11 = Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(a2, a3, 0x4024000000000000, 0, 4, -1, 0, 0, v14);
  v12 = Glyph.image.getter(v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a4 = v12;
  return result;
}

uint64_t sub_1B572C(uint64_t a1)
{
  return sub_1B578C(a1, 0x6C69662E72617473, 0xE90000000000006CLL, &qword_3DAB98);
}

uint64_t sub_1B5750(uint64_t a1)
{
  return sub_1B578C(a1, 0xD000000000000015, 0x8000000000312F30, &qword_3DABA0);
}

uint64_t sub_1B5774(uint64_t a1)
{
  return sub_1B578C(a1, 1918989427, 0xE400000000000000, &qword_3DABA8);
}

uint64_t sub_1B578C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  uint64_t v15;

  v7 = type metadata accessor for Glyph(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v11 = Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(a2, a3, 0x401C000000000000, 0, 4, -1, 0, 0, v14);
  v12 = Glyph.image.getter(v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a4 = v12;
  return result;
}

id sub_1B584C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  id v9;
  id v10;
  Class isa;
  void *v12;
  id v13;
  id v14;
  objc_super v16;

  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_hasRTLTransformSet] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_rating] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_starSize] = 1;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_showsEmptyStars] = 1;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for ReviewRatingView();
  v9 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  sub_1B68C8();
  v10 = v9;
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.99608, 0.5098, 0.027451, 1.0).super.isa;
  objc_msgSend(v10, "setTintColor:", isa);

  v12 = (void *)objc_opt_self(UIColor);
  v13 = v10;
  v14 = objc_msgSend(v12, "clearColor");
  objc_msgSend(v13, "setBackgroundColor:", v14);

  objc_msgSend(v13, "setContentMode:", 3);
  return v13;
}

void sub_1B5A78()
{
  __asm { BR              X10 }
}

id sub_1B5AA4()
{
  uint64_t v0;

  if (qword_3CF8E8 != -1)
    swift_once(&qword_3CF8E8, sub_1B5330);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_hasRTLTransformSet) & 1) != 0)
    return objc_msgSend((id)qword_3DAB28, "imageWithHorizontallyFlippedOrientation");
  else
    return (id)qword_3DAB28;
}

void sub_1B5C24(double a1, double a2, double a3, double a4)
{
  void *v4;
  char *v9;
  uint64_t v10;
  id v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  CGContext *v17;
  CGContext *v18;
  id v19;
  void *v20;
  CGColor *v21;
  CATransform3D v22;
  objc_super v23;
  CGRect v24;

  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for ReviewRatingView();
  objc_msgSendSuper2(&v23, "drawRect:", a1, a2, a3, a4);
  v9 = (char *)objc_msgSend(v4, "effectiveUserInterfaceLayoutDirection");
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_hasRTLTransformSet;
  if (v9 == (_BYTE *)&dword_0 + 1)
  {
    if ((*((_BYTE *)v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_hasRTLTransformSet) & 1) != 0)
      goto LABEL_7;
    v11 = objc_msgSend(v4, "layer");
    CATransform3DMakeScale(&v22, -1.0, 1.0, 1.0);
    objc_msgSend(v11, "setTransform:", &v22);
    v12 = 1;
  }
  else
  {
    if (!*((_BYTE *)v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_hasRTLTransformSet))
      goto LABEL_7;
    v11 = objc_msgSend(v4, "layer");
    v13 = *(_OWORD *)&CATransform3DIdentity.m13;
    *(_OWORD *)&v22.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
    *(_OWORD *)&v22.m13 = v13;
    v14 = *(_OWORD *)&CATransform3DIdentity.m23;
    *(_OWORD *)&v22.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
    *(_OWORD *)&v22.m23 = v14;
    v15 = *(_OWORD *)&CATransform3DIdentity.m33;
    *(_OWORD *)&v22.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
    *(_OWORD *)&v22.m33 = v15;
    v16 = *(_OWORD *)&CATransform3DIdentity.m43;
    *(_OWORD *)&v22.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
    *(_OWORD *)&v22.m43 = v16;
    objc_msgSend(v11, "setTransform:", &v22);
    v12 = 0;
  }

  *((_BYTE *)v4 + v10) = v12;
LABEL_7:
  v17 = UIGraphicsGetCurrentContext();
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v4, "tintColor");
    if (!v19)
    {
      __break(1u);
      JUMPOUT(0x1B6494);
    }
    v20 = v19;
    v21 = (CGColor *)objc_msgSend(v19, "CGColor");

    CGContextSetFillColorWithColor(v18, v21);
  }
  objc_msgSend(v4, "bounds");
  CGRectGetMinY(v24);
  __asm { BR              X10 }
}

id sub_1B65A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReviewRatingView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ReviewRatingView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews16ReviewRatingView);
}

uint64_t storeEnumTagSinglePayload for StarSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B6644 + 4 * byte_2FCFC5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B6678 + 4 * asc_2FCFC0[v4]))();
}

uint64_t sub_1B6678(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B6680(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B6688);
  return result;
}

uint64_t sub_1B6694(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B669CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B66A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B66A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StarSize()
{
  return &type metadata for StarSize;
}

unint64_t sub_1B66C8()
{
  unint64_t result;

  result = qword_3DABF8;
  if (!qword_3DABF8)
  {
    result = swift_getWitnessTable(&unk_2FD04C, &type metadata for StarSize);
    atomic_store(result, (unint64_t *)&qword_3DABF8);
  }
  return result;
}

void sub_1B670C()
{
  __asm { BR              X10 }
}

double sub_1B673C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;

  if (qword_3CF8F0 != -1)
    swift_once(&qword_3CF8F0, sub_1B5354);
  objc_msgSend((id)qword_3DAB30, "size");
  v3 = 5.0;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_showsEmptyStars) & 1) == 0)
    v3 = *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_rating);
  v4 = dbl_2FD078[*(char *)(v1 + v0)];
  return v3 * (v2 + v4) - v4;
}

unint64_t sub_1B68C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E1830;
  if (!qword_3E1830)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3E1830);
  }
  return result;
}

void sub_1B6904(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  id v11;
  char *v12;
  double v13;
  id v14;
  id v15;
  id v16;
  __C::UILayoutPriority v17;
  Class isa;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_fixedHeightConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_objectGraph] = 0;
  v23.receiver = v4;
  v23.super_class = ObjectType;
  v10 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v11 = objc_msgSend(v10, "traitCollection");
  v12 = (char *)objc_msgSend(v11, "horizontalSizeClass");

  if (v12 == (_BYTE *)&dword_0 + 2)
    v13 = 310.0;
  else
    v13 = 112.0;
  v14 = objc_msgSend(v10, "contentView");
  v15 = objc_msgSend(v14, "heightAnchor");

  v16 = objc_msgSend(v15, "constraintEqualToConstant:", v13);
  v17.rawValue = static UILayoutPriority.highestBreakable.getter();
  isa = NSLayoutConstraint.withPriority(priority:)(v17).super.isa;

  v19 = OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_fixedHeightConstraint;
  v20 = *(void **)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_fixedHeightConstraint];
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_fixedHeightConstraint] = isa;

  v21 = *(void **)&v10[v19];
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v22, "setActive:", 1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B6AAC()
{
  return 4;
}

void sub_1B6AD8(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  char *v6;
  double v7;
  id v8;

  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_objectGraph];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_objectGraph] = a1;
  swift_release(v3);
  v4 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_fixedHeightConstraint];
  if (v4)
  {
    swift_retain(a1);
    v8 = v4;
    v5 = objc_msgSend(v1, "traitCollection");
    v6 = (char *)objc_msgSend(v5, "horizontalSizeClass");

    v7 = 112.0;
    if (v6 == (_BYTE *)&dword_0 + 2)
      v7 = 310.0;
    objc_msgSend(v8, "setConstant:", v7);

  }
  else
  {
    __break(1u);
  }
}

void sub_1B6B9C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  char *v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t ObjectType;
  _QWORD v49[5];

  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for AnalyzedColor(0);
  v47 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v46 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ArtworkModel(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkRequest(0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_objectGraph];
  if (v21)
  {
    v44 = v17;
    v45 = v16;
    v42 = v3;
    v43 = a1 + *(int *)(type metadata accessor for RoomUber(0, v18) + 20);
    sub_27E84(v43, (uint64_t)v14);
    v22 = objc_msgSend(v1, "traitCollection", swift_retain(v21).n128_f64[0]);
    v23 = (char *)objc_msgSend(v22, "horizontalSizeClass");

    if (v23 == (_BYTE *)&dword_0 + 2)
      v24 = 310.0;
    else
      v24 = 112.0;
    objc_msgSend(v1, "bounds");
    v26 = v25;
    v27 = type metadata accessor for CropCode(0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v11, 1, 1, v27);
    v29 = static Logger.artwork.getter(v28);
    v30 = static os_log_type_t.info.getter(v29);
    SignpostAndLogTrace(domain:level:)(v49, v8, v30);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v31 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v31, "scale");
    v33 = v32;

    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v14, 2, 0, v11, 0, _swiftEmptyArrayStorage, v49, v26, v24, v33);
    v35 = sub_239FC(&qword_3DAC58, v34, (uint64_t (*)(uint64_t))type metadata accessor for RoomUberCollectionViewCell, (uint64_t)&unk_300F20);
    ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v20, v21, 0, ObjectType, v35);
    v36 = *(unsigned __int8 *)(v43 + 64);
    if ((_DWORD)v36 == 255)
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v45);
      swift_release(v21);
    }
    else
    {
      v37 = *(void **)(v43 + 56);
      sub_27F80(v37, *(_BYTE *)(v43 + 64));
      v38 = objc_msgSend(v1, "contentView");
      sub_27F80(v37, v36);
      v39 = v46;
      v40 = AnalyzedColor.init(color:)(v37, v36);
      v41 = AnalyzedColor.suggestedInterfaceStyle.getter(v40);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v42);
      objc_msgSend(v38, "setOverrideUserInterfaceStyle:", v41);

      swift_release(v21);
      sub_27F94(v37, v36);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v45);
    }
  }
}

uint64_t sub_1B6F74()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_objectGraph));
}

uint64_t type metadata accessor for RoomUberCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell);
}

uint64_t sub_1B6FFC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_objectGraph));
}

uint64_t sub_1B7010(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DAC60, v3, (uint64_t (*)(uint64_t))type metadata accessor for RoomUberCollectionViewCell, (uint64_t)&unk_2FD244);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_1B7068(int a1, id a2)
{
  char *v2;
  double v3;

  v2 = (char *)objc_msgSend(a2, "horizontalSizeClass");
  v3 = 310.0;
  if (v2 != (_BYTE *)&dword_0 + 2)
    v3 = 112.0;
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v3);
}

uint64_t sub_1B70B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DAC60, a2, (uint64_t (*)(uint64_t))type metadata accessor for RoomUberCollectionViewCell, (uint64_t)&unk_2FD244);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_1B70EC()
{
  if ((ShelfCellEnvironment.isMac.getter() & 1) != 0)
    return 0;
  else
    return 0x4020000000000000;
}

uint64_t sub_1B711C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DAC38, a2, (uint64_t (*)(uint64_t))type metadata accessor for RoomUberCollectionViewCell, (uint64_t)&unk_2FD11C);
}

uint64_t sub_1B7148(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C70, a2, (uint64_t (*)(uint64_t))type metadata accessor for RoomUberCollectionViewCell, (uint64_t)&unk_2FD1A4);
}

uint64_t sub_1B7174(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DAC40, a2, (uint64_t (*)(uint64_t))type metadata accessor for RoomUberCollectionViewCell, (uint64_t)&unk_2FD17C);
}

uint64_t sub_1B71A0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DAC48, a2, (uint64_t (*)(uint64_t))type metadata accessor for RoomUberCollectionViewCell, (uint64_t)&unk_2FD1D4);
}

uint64_t sub_1B71CC()
{
  return sub_239FC(&qword_3DAC50, 255, (uint64_t (*)(uint64_t))&type metadata accessor for RoomUber, (uint64_t)&protocol conformance descriptor for RoomUber);
}

void sub_1B71FC()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_fixedHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26RoomUberCollectionViewCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/RoomUberCollectionViewCell.swift", 56, 2, 37, 0);
  __break(1u);
}

uint64_t EpisodeInfoView.bind(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];

  v2 = v1;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph, v10, 1, 0);
  v5 = *v4;
  *v4 = a1;
  swift_release(v5);
  v6 = type metadata accessor for ExplicitContentPresenter(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v9, v6, v6);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter) = v9;
  return swift_release(v7);
}

double EpisodeInfoView.prepareForLayout(fitting:)(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id *v10;
  double v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  char v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  double v25;
  double v26;
  id v27;
  id v28;
  void *v29;
  char v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  id v42;
  id v43;
  double v44;
  double v45;
  uint64_t v46;
  char v47;
  char v48[24];
  char v49[24];

  v2 = v1;
  v4 = type metadata accessor for EpisodeInfoView.CacheKey(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v42 - v8;
  v10 = (id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel];
  swift_beginAccess(v10, v49, 0, 0);
  v11 = 0.0;
  if (*v10)
  {
    v12 = *v10;
    v13 = objc_msgSend(v12, "text");
    if (v13)
    {
      v14 = v13;
      v42 = v12;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v17 = v16;

      v18 = objc_msgSend(v2, "traitCollection");
      v19 = objc_msgSend(v18, "preferredContentSizeCategory");

      v20 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_style];
      v21 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher];
      swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher], v48, 0, 0);
      v22 = *(_QWORD *)v21;
      v23 = &v9[*(int *)(v4 + 28)];
      swift_retain(v22);
      CurrentValueSubject.value.getter(v23);
      swift_release(v22);
      *(_QWORD *)v9 = v19;
      *((_QWORD *)v9 + 1) = v15;
      *((_QWORD *)v9 + 2) = v17;
      v9[24] = v20;
      *(double *)&v9[*(int *)(v4 + 32)] = a1;
      if (qword_3CF990 != -1)
        swift_once(&qword_3CF990, sub_1B96FC);
      Cache.subscript.getter(&v44, v9);
      v24 = v42;
      if ((v47 & 1) == 0)
      {
        v11 = v44;
        sub_1B9740(v46);

        v40 = (uint64_t)v9;
        goto LABEL_16;
      }
      objc_msgSend(v42, "sizeThatFits:", a1, UIViewNoIntrinsicMetric);
      v26 = v25;
      v27 = objc_msgSend(v2, "traitCollection");
      v28 = objc_msgSend(v27, "preferredContentSizeCategory");
      v29 = v28;
      if (qword_3CFB98 != -1)
        v28 = (id)swift_once(&qword_3CFB98, sub_2145C4);
      LOBYTE(v44) = 1;
      v45 = *(double *)&v29;
      __chkstk_darwin(v28);
      *((_BYTE *)&v42 - 16) = v30;
      *(&v42 - 1) = v27;
      Cache.get(_:or:)(&v43, &v44, sub_1BC2F4);

      v31 = v43;
      objc_msgSend(v43, "lineHeight");
      v33 = v32;

      v34 = floor(v26 / v33);
      if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) != 0)
      {
        if (v34 > -9.22337204e18)
        {
          if (v34 < 9.22337204e18)
          {
            v27 = (id)(uint64_t)v34;
            sub_1B9740((uint64_t)v34);
            objc_msgSend(v2, "setNeedsLayout");
            objc_msgSend(v2, "layoutIfNeeded");
            LODWORD(v35) = 1148846080;
            LODWORD(v36) = 1112014848;
            objc_msgSend(v2, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", a1, UIViewNoIntrinsicMetric, v35, v36);
            a1 = v37;
            v26 = v38;
            if (qword_3CF988 == -1)
            {
LABEL_12:
              v11 = a1 + 0.0;
              v39 = v26 + *(double *)&qword_3DAC80;
              sub_19C4C((uint64_t)v9, (uint64_t)v7, type metadata accessor for EpisodeInfoView.CacheKey);
              v44 = v11;
              v45 = v39;
              v46 = (uint64_t)v27;
              v47 = 0;
              Cache.subscript.setter(&v44, v7);

              v40 = (uint64_t)v9;
LABEL_16:
              sub_FA4C(v40, type metadata accessor for EpisodeInfoView.CacheKey);
              return v11;
            }
LABEL_21:
            swift_once(&qword_3CF988, sub_1B7904);
            goto LABEL_12;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_20;
    }

  }
  return v11;
}

uint64_t type metadata accessor for EpisodeInfoView.CacheKey(uint64_t a1)
{
  uint64_t result;

  result = qword_3DADE0;
  if (!qword_3DADE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EpisodeInfoView.CacheKey);
  return result;
}

Swift::Void __swiftcall EpisodeInfoView.prepareForReuse()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables, v8, 1, 0);
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(*v1, 2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v2, 2);
    v7 = *v1;
    *v1 = (uint64_t)&_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v2 < 0)
    v6 = *v1;
  else
    v6 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*v1, 2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v6);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      }
      else
      {
        v5 = *(_QWORD *)(v2 + 8 * i + 32);
        swift_retain(v5);
      }
      AnyCancellable.cancel()();
      swift_release(v5);
    }
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1B78D4()
{
  qword_3DAC68 = 0x4018000000000000;
}

void sub_1B78E4()
{
  qword_3DAC70 = 0x4000000000000000;
}

void sub_1B78F4()
{
  qword_3DAC78 = 0x4008000000000000;
}

void sub_1B7904()
{
  qword_3DAC80 = 0x3FF0000000000000;
}

void *EpisodeInfoView.titleLabel.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void EpisodeInfoView.titleLabel.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*EpisodeInfoView.titleLabel.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t EpisodeInfoView.playStatePublisher.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t EpisodeInfoView.playStatePublisher.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*EpisodeInfoView.playStatePublisher.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_1B7AD0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView____lazy_storage___headerStack;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView____lazy_storage___headerStack);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView____lazy_storage___headerStack);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v4, "setAxis:", 0);
    objc_msgSend(v4, "setAlignment:", 3);
    if (qword_3CF970 != -1)
      swift_once(&qword_3CF970, sub_1B78D4);
    objc_msgSend(v4, "setSpacing:", *(double *)&qword_3DAC68);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t EpisodeInfoView.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

double EpisodeInfoView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  __n128 v6;
  double result;
  _BYTE v8[24];

  v5 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate;
  v6 = swift_beginAccess(v5, v8, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1, v6);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*EpisodeInfoView.delegate.modify(_QWORD *a1))(uint64_t a1, char a2, __n128 a3)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_10B5DC;
}

void sub_1B7CD0()
{
  _BYTE *v0;
  void **v1;
  _BYTE *v2;
  uint64_t v3;
  char **v4;
  _BYTE *v5;
  id v6;
  uint64_t v7;
  uint64_t inited;
  NSString *v9;
  NSString *v10;
  id v11;
  unint64_t v12;
  _BYTE *v13;
  id v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  NSString v19;
  Class isa;
  id v21;
  char v22[112];
  char v23[24];

  if ((sub_30E70(0, *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_capabilities]) & 1) != 0)
  {
    v1 = (void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel];
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel], v23, 0, 0);
    v2 = *v1;
    if (*v1)
    {
      if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle] == 1
        && *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleAction])
      {
        v3 = 1;
        v4 = &selRef_textColor;
        v0 = v2;
      }
      else
      {
        v3 = 0;
        v4 = &selRef_backgroundColor;
      }
      v5 = v2;
      v6 = objc_msgSend(v0, *v4);
      if (!v6)
        v6 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
      inited = swift_initStackObject(v7, v22);
      *(_OWORD *)(inited + 16) = xmmword_2EFA20;
      *(_QWORD *)(inited + 32) = NSUnderlineStyleAttributeName;
      *(_QWORD *)(inited + 40) = 1;
      *(_QWORD *)(inited + 64) = &type metadata for Int;
      *(_QWORD *)(inited + 72) = NSUnderlineColorAttributeName;
      *(_QWORD *)(inited + 104) = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
      *(_QWORD *)(inited + 80) = v6;
      v9 = NSUnderlineStyleAttributeName;
      v10 = NSUnderlineColorAttributeName;
      v11 = v6;
      v12 = sub_D4784(inited);
      v13 = v5;
      v14 = objc_msgSend(v13, "text");
      if (v14)
      {
        v15 = v14;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

      }
      else
      {
        v17 = 0xE000000000000000;
      }
      v18 = objc_allocWithZone((Class)NSAttributedString);
      v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      type metadata accessor for Key(0);
      sub_239FC((unint64_t *)&qword_3D0150, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v21 = objc_msgSend(v18, "initWithString:attributes:", v19, isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

      objc_msgSend(v13, "setAttributedText:", v21);
      objc_msgSend(v13, "setUserInteractionEnabled:", v3);

    }
  }
}

void sub_1B7F78(char a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  char **v5;
  char **v6;
  id v7;
  id v8;
  id *v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  _BYTE v17[24];

  v3 = (void *)objc_opt_self(UIColor);
  v4 = v3;
  v5 = &selRef_labelColor;
  if ((a1 & 1) != 0)
  {
    v5 = &selRef_whiteColor;
    v6 = &selRef_whiteColor;
  }
  else
  {
    v6 = &selRef_secondaryLabelColor;
  }
  v7 = objc_msgSend(v3, *v5);
  v8 = objc_msgSend(v4, *v6);
  v9 = (id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel);
  *(_QWORD *)&v10 = swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel, v17, 0, 0).n128_u64[0];
  if (*v9)
    objc_msgSend(*v9, "setTextColor:", v7, v10);
  v11 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_descriptionLabel);
  if (v11)
    objc_msgSend(v11, "setTextColor:", v8, v10);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowLabel);
  if (v12)
    objc_msgSend(v12, "setTextColor:", v8, v10);
  v13 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerLabel);
  if (v13)
    objc_msgSend(v13, "setTextColor:", v8, v10);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicator);
  if (v14)
  {
    v15 = *(id *)(v14 + 16);
    objc_msgSend(v15, "setTintColor:", v8);

    v16 = v8;
  }
  else
  {
    v16 = v7;
    v7 = v8;
  }

}

id sub_1B80D8(char *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  id v17;
  uint64_t v19;
  char v20;
  objc_super v21;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleAction] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playbackStatusObservance] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicator] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicatorHeight] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowPlayedCheckmark] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_descriptionLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerLabel] = 0;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher;
  swift_storeEnumTagMultiPayload(v9, v12, 5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5470);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = v3;
  *(_QWORD *)&v3[v11] = CurrentValueSubject.init(_:)(v9);
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView____lazy_storage___headerStack] = 0;
  v15 = &v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15, 0);
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHovering] = 0;
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle] = 0;
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isSuperviewSelected] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilder] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerBuilder] = 0;
  v16 = &v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerLockup];
  *(_QWORD *)v16 = 0;
  v16[8] = 2;
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_accessibilityIsNowPlayingIndicatorVisible] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph] = 0;
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_style] = v10;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_capabilities] = a2;
  swift_bridgeObjectRetain(a2);

  v21.receiver = v14;
  v21.super_class = (Class)ObjectType;
  v17 = objc_msgSendSuper2(&v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v17, "setAlignment:", 1);
  objc_msgSend(v17, "setAxis:", 1);
  v20 = v10;
  sub_1B8370(&v20);
  LOBYTE(ObjectType) = sub_30E70(0, a2);
  swift_bridgeObjectRelease(a2);
  if ((ObjectType & 1) != 0)
    sub_B1090();

  return v17;
}

void sub_1B8370(char *a1)
{
  uint64_t v1;
  _UNKNOWN **v2;
  uint64_t v3;
  _BYTE v4[32];

  v2 = off_389038[*a1];
  if (v2[2])
  {
    v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel;
    swift_bridgeObjectRetain(v2);
    swift_beginAccess(v3, v4, 1, 0);
    __asm { BR              X8 }
  }

}

Swift::Void __swiftcall EpisodeInfoView.willMove(toWindow:)(UIWindow_optional toWindow)
{
  void *v1;
  Class isa;
  objc_super v3;

  isa = toWindow.value.super.super.super.isa;
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "willMoveToWindow:", isa);
  if (isa)
    EpisodeInfoView.beginUpdates()();
}

Swift::Void __swiftcall EpisodeInfoView.beginUpdates()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  char v27[24];
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilder];
  if (v2)
  {
    v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher];
    swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher], v27, 0, 0);
    v4 = *(_QWORD *)v3;
    v26[0] = v4;
    swift_retain(v2);
    swift_retain(v4);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5470);
    v6 = sub_10EDC((unint64_t *)&qword_3D5478, &qword_3D5470, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    EyebrowBuilder.captionPublisher<A>(playStatePublisher:)(v28, v26, v5, v6);
    swift_release(v4);
    swift_release(v2);
    v7 = v29;
    v8 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    v9 = swift_allocObject(&unk_388D48, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16, v1);
    v10 = Publisher<>.sink(receiveValue:)(sub_1BC7CC, v9, v7, v8);
    swift_release(v9);
    v11 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables];
    swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables], v26, 33, 0);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
    v13 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v11, v12, v13);
    swift_endAccess(v26);
    swift_release(v10);
    __swift_destroy_boxed_opaque_existential_0(v28);
  }
  if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_style] == 2)
  {
    v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerBuilder];
    if (v14)
    {
      v15 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerBuilder]);
      EyebrowBuilder.captionPublisher.getter(v28, v15);
      swift_release(v14);
      v16 = v29;
      v17 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      v18 = swift_allocObject(&unk_388D48, 24, 7);
      swift_unknownObjectWeakInit(v18 + 16, v1);
      v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter];
      v20 = objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection", swift_retain(v19).n128_f64[0]);
      v21 = (_QWORD *)swift_allocObject(&unk_388D70, 40, 7);
      v21[2] = v18;
      v21[3] = v19;
      v21[4] = v20;
      v22 = Publisher<>.sink(receiveValue:)(sub_1BC800, v21, v16, v17);
      swift_release(v21);
      v23 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables];
      swift_beginAccess(v23, v26, 33, 0);
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
      v25 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
      AnyCancellable.store<A>(in:)(v23, v24, v25);
      swift_endAccess(v26);
      swift_release(v22);
      __swift_destroy_boxed_opaque_existential_0(v28);
    }
  }
}

Swift::Void __swiftcall EpisodeInfoView.didMoveToWindow()()
{
  char *v0;
  id v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "didMoveToWindow");
  v1 = objc_msgSend(v0, "window");

  if (!v1)
  {
    v2 = (uint64_t *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables];
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables], v8, 0, 0);
    v3 = *v2;
    if ((unint64_t)v3 >> 62)
    {
      if (v3 < 0)
        v7 = v3;
      else
        v7 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v3, 2);
      v4 = _CocoaArrayWrapper.endIndex.getter(v7);
      if (v4)
        goto LABEL_4;
    }
    else
    {
      v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain_n(v3, 2);
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v4; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0)
          {
            v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
          }
          else
          {
            v6 = *(_QWORD *)(v3 + 8 * i + 32);
            swift_retain(v6);
          }
          AnyCancellable.cancel()();
          swift_release(v6);
        }
      }
    }
    swift_bridgeObjectRelease_n(v3, 2);
  }
}

void sub_1B9344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  NSString v5;
  void *v6;
  id v7;
  double v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = *(_QWORD *)(a1 + 8);
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (NSString)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowLabel);
    if (v6)
    {
      v7 = v6;

      if (v2)
      {
        v9 = sub_D254();
        StringProtocol.localizedUppercase.getter(&type metadata for String, v9);
        v11 = v10;
        v5 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v8 = swift_bridgeObjectRelease(v11).n128_u64[0];
      }
      else
      {
        v5 = 0;
      }
      objc_msgSend(v7, "setText:", v5, v8);

    }
  }
}

void sub_1B940C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t Strong;
  NSString v10;
  void *v11;
  id v12;
  void *v13;
  unint64_t v14;
  unsigned __int8 *v15;
  int v16;
  Swift::Bool v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String_optional v20;
  uint64_t v21;
  void *object;
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];

  v6 = *a1;
  v7 = (void *)a1[1];
  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (NSString)Strong;
    v11 = *(void **)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerLabel);
    if (!v11)
    {
LABEL_18:

      return;
    }
    v12 = v11;

    swift_beginAccess(v8, v24, 0, 0);
    v13 = (void *)swift_unknownObjectWeakLoadStrong(v8);
    if (!v13)
      goto LABEL_16;
    if (*((_BYTE *)v13 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerLockup + 8) == 2)
    {

      goto LABEL_16;
    }

    swift_beginAccess(v8, v23, 0, 0);
    v15 = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong(v8);
    if (v15)
    {
      v16 = v15[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerLockup + 8];

      if (v16 == 2)
        v17 = 0;
      else
        v17 = v16 & 1;
      if (a3)
        goto LABEL_11;
    }
    else
    {
      v17 = 0;
      if (a3)
      {
LABEL_11:
        v18 = ExplicitContentPresenter.symbol.getter();
        a3 = v19;
        goto LABEL_14;
      }
    }
    v18 = 0;
LABEL_14:
    v20.value._countAndFlagsBits = v6;
    v20.value._object = v7;
    v21 = a3;
    object = Double.durationString(prefix:isExplicit:explicitSymbol:isRTL:abbreviated:)(v20, v17, *(Swift::String_optional *)&v18, a4 == 1, 0).value._object;
    v14 = swift_bridgeObjectRelease(a3).n128_u64[0];
    if (object)
    {
      v10 = String._bridgeToObjectiveC()();
      v14 = swift_bridgeObjectRelease(object).n128_u64[0];
LABEL_17:
      objc_msgSend(v12, "setText:", v10, *(double *)&v14);

      goto LABEL_18;
    }
LABEL_16:
    v10 = 0;
    goto LABEL_17;
  }
}

void sub_1B95B4(uint64_t a1)
{
  void **v1;
  void **v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  Swift::UInt64 v12;

  v2 = v1;
  v4 = *v1;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;
  v8 = v4;
  String.hash(into:)(a1, v5, v7);

  swift_bridgeObjectRelease(v7);
  v9 = v2[1];
  v10 = v2[2];
  swift_bridgeObjectRetain(v10);
  String.hash(into:)(a1, v9, v10);
  swift_bridgeObjectRelease(v10);
  Hasher._combine(_:)(*((unsigned __int8 *)v2 + 24));
  v11 = type metadata accessor for EpisodeInfoView.CacheKey(0);
  EpisodePlayState.hash(into:)(a1);
  if ((*(unint64_t *)((char *)v2 + *(int *)(v11 + 32)) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v12 = *(Swift::UInt64 *)((char *)v2 + *(int *)(v11 + 32));
  else
    v12 = 0;
  Hasher._combine(_:)(v12);
}

Swift::Int sub_1B9680()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1B95B4((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1B96C0(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1B95B4((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1B96FC()
{
  uint64_t v0;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAE48);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = Cache.init(invalidateOnAppBackground:)(1);
  qword_3FCCF8 = result;
  return result;
}

id sub_1B9740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;

  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_style;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_descriptionLabel;
  result = *(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_descriptionLabel);
  if (qword_2FD578[*(char *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_style)] <= a1)
  {
    if (result)
      return objc_msgSend(result, "setHidden:", 1);
  }
  else if (result)
  {
    objc_msgSend(result, "setHidden:", 0);
    result = *(id *)(v1 + v4);
    if (result)
    {
      v6 = qword_2FD578[*(char *)(v1 + v3)];
      if (__OFSUB__(v6, a1))
      {
        __break(1u);
      }
      else
      {
        objc_msgSend(result, "setNumberOfLines:", v6 - a1);
        result = *(id *)(v1 + v4);
        if (result)
          return objc_msgSend(result, "setLineBreakMode:", 4);
      }
    }
  }
  return result;
}

uint64_t EpisodeInfoView.objectGraph.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph, v3, 0, 0);
  return swift_retain(*v1);
}

void EpisodeInfoView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.EpisodeInfoView", 39, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_1B9A18()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHovering);
}

uint64_t sub_1B9A28(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHovering) = result;
  return result;
}

void sub_1B9A38(char a1, void *a2)
{
  uint64_t v2;
  void **v5;
  void *v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  int v18;
  int v19;
  char v20;
  id v21;
  _BYTE v22[24];
  CGPoint v23;
  CGRect v24;

  v5 = (void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel, v22, 0, 0);
  v6 = *v5;
  if (v6)
  {
    if ((a1 & 1) != 0)
    {
      v7 = v6;
      objc_msgSend(v7, "bounds");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;
      objc_msgSend(a2, "locationInView:", v7);
      v23.x = v16;
      v23.y = v17;
      v24.origin.x = v9;
      v24.origin.y = v11;
      v24.size.width = v13;
      v24.size.height = v15;
      v18 = CGRectContainsPoint(v24, v23);
      v19 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle);
      *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle) = v18;
      if (v18 == v19)
        goto LABEL_7;
    }
    else
    {
      v20 = *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle);
      *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle) = 0;
      v21 = v6;
      if ((v20 & 1) == 0)
      {
LABEL_7:

        return;
      }
    }
    sub_1B7CD0();
    goto LABEL_7;
  }
}

id sub_1B9BB0()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *isa;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  double v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  _QWORD v39[11];
  __int16 v40;

  v1 = v0;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CFBA0 != -1)
    swift_once(&qword_3CFBA0, sub_2149B8);
  v39[0] = qword_3FD3A8;
  v39[1] = qword_3FD3B0;
  v39[2] = qword_3FD3B8;
  v39[3] = qword_3FD3C0;
  v39[4] = qword_3FD3C8;
  v39[5] = qword_3FD3D0;
  v39[6] = qword_3FD3D8;
  v39[7] = qword_3FD3E0;
  v39[8] = qword_3FD3E8;
  v39[9] = qword_3FD3F0;
  v39[10] = qword_3FD3F8;
  v40 = word_3FD400;
  sub_DDA0((void *)qword_3FD3A8, qword_3FD3B0, qword_3FD3B8, qword_3FD3C0, qword_3FD3C8, qword_3FD3D0, (void *)qword_3FD3D8, qword_3FD3E0, qword_3FD3E8, qword_3FD3F0, qword_3FD3F8, word_3FD400, SHIBYTE(word_3FD400));
  v2 = sub_A96AC((uint64_t)v39, 1, 0, 1);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v4, "setTextColor:", v5);

  v6 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowLabel];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowLabel] = v4;
  v7 = v4;

  if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_style] >= 2u)
  {
    v9 = type metadata accessor for InlineNowPlayingIndicator(0);
    v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
    *(_BYTE *)(v10 + 24) = 0;
    *(_QWORD *)(v10 + 64) = 0;
    *(_QWORD *)(v10 + 40) = 0;
    *(_QWORD *)(v10 + 48) = 0;
    *(_QWORD *)(v10 + 32) = 0;
    swift_unknownObjectWeakInit(v10 + 56, 0);
    *(_QWORD *)(v10 + 80) = 0;
    swift_unknownObjectWeakInit(v10 + 72, 0);
    v11 = v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InlineNowPlayingIndicator_episodePlayState;
    v12 = type metadata accessor for EpisodePlayState(0);
    swift_storeEnumTagMultiPayload(v11, v12, 4);
    *(_QWORD *)(v10 + 64) = &off_388DC0;
    swift_unknownObjectWeakAssign(v10 + 56, v1);
    *(_QWORD *)(v10 + 80) = &off_388DE0;
    swift_unknownObjectWeakAssign(v10 + 72, v1);
    v13 = objc_allocWithZone((Class)UIView);
    v14 = v1;
    *(_QWORD *)(v10 + 16) = objc_msgSend(v13, "init");

    v15 = *(id *)(v10 + 16);
    v16 = objc_msgSend(v3, "secondaryLabelColor");
    objc_msgSend(v15, "setTintColor:", v16);

    v17 = *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicator];
    *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicator] = v10;
    swift_retain(v10);
    v18 = objc_msgSend(*(id *)(v10 + 16), "widthAnchor", swift_release(v17).n128_f64[0]);
    v19 = objc_msgSend(v18, "constraintEqualToConstant:", 16.5);

    LODWORD(v20) = 1144750080;
    objc_msgSend(v19, "setPriority:", v20);
    v21 = sub_1B7AD0();
    objc_msgSend(v21, "addArrangedSubview:", *(_QWORD *)(v10 + 16));

    v22 = sub_1B7AD0();
    objc_msgSend(v22, "addArrangedSubview:", v7);

    v23 = (void *)objc_opt_self(NSLayoutConstraint);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v25 = swift_allocObject(v24, 56, 7);
    *(_OWORD *)(v25 + 16) = xmmword_2EFC80;
    *(_QWORD *)(v25 + 32) = v19;
    v26 = *(void **)(v10 + 16);
    v27 = v19;
    v28 = objc_msgSend(v26, "topAnchor");
    v29 = objc_msgSend(v7, "topAnchor");
    v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

    *(_QWORD *)(v25 + 40) = v30;
    v31 = objc_msgSend(*(id *)(v10 + 16), "bottomAnchor");
    v32 = objc_msgSend(v7, "firstBaselineAnchor");
    v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

    *(_QWORD *)(v25 + 48) = v33;
    v39[0] = v25;
    specialized Array._endMutation()(v34);
    v35 = v39[0];
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v23, "activateConstraints:", isa, swift_bridgeObjectRelease(v35).n128_f64[0]);
    swift_release(v10);

  }
  else
  {
    isa = sub_1B7AD0();
    objc_msgSend(isa, "addArrangedSubview:", v7);
  }

  LODWORD(v36) = 1148846080;
  objc_msgSend(v7, "setContentHuggingPriority:forAxis:", 1, v36);
  sub_1BA0A4();
  v37 = sub_1B7AD0();

  return v37;
}

id sub_1BA0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicator;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicator);
  if (v2)
  {
    result = objc_msgSend(*(id *)(v2 + 16), "setHidden:", 1);
    v4 = *(_QWORD *)(v0 + v1);
    if (v4)
      result = objc_msgSend(*(id *)(v4 + 16), "setAlpha:", 0.0);
  }
  *(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_accessibilityIsNowPlayingIndicatorVisible) = 0;
  return result;
}

id sub_1BA108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicator;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicator);
  if (v2)
  {
    result = objc_msgSend(*(id *)(v2 + 16), "setHidden:", 0);
    v4 = *(_QWORD *)(v0 + v1);
    if (v4)
      result = objc_msgSend(*(id *)(v4 + 16), "setAlpha:", 1.0);
  }
  *(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_accessibilityIsNowPlayingIndicatorVisible) = 1;
  return result;
}

double sub_1BA170(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  _QWORD v43[5];

  v3 = v2;
  v42 = a2;
  v41 = type metadata accessor for EyebrowBuilder.Style(0);
  v5 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D81A0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAE30);
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for EyebrowBuilder.ListContext(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[3] = type metadata accessor for LegacyEpisodeLockup(0);
  v43[4] = sub_239FC((unint64_t *)&qword_3D81E8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyEpisodeLockup);
  v43[0] = a1;
  v18 = swift_retain(a1);
  LegacyEpisodeLockup.listContext.getter(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for EyebrowBuilder.ListContext.single(_:), v14);
    sub_D1D4((uint64_t)v13, &qword_3DAE30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  }
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter);
  if (v20)
  {
    v21 = swift_retain(*(_QWORD *)(v2
                                 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter));
    v22 = ExplicitContentPresenter.symbol.getter(v21);
    v24 = v23;
    v19 = swift_release(v20);
  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  v25 = v42;
  v26 = v41;
  v27 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration(0, v19);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 1, 1, v27);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for EyebrowBuilder.Style.default(_:), v26);
  v28 = type metadata accessor for EyebrowBuilder(0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v29 = EyebrowBuilder.init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)(v43, v17, v7, 1, v22, v24, v10, 1, v25 & 1);
  v30 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilder);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilder) = v29;
  v31 = swift_release(v30);
  v32 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicator);
  if (v32)
  {
    v33 = type metadata accessor for LibraryEpisodeLockup(0, v31);
    if (swift_dynamicCastClass(a1, v33))
    {
      swift_retain(a1);
      swift_retain(v32);
      sub_132194();
      swift_release(v32);
      v34 = a1;
    }
    else
    {
      v35 = swift_retain(v32);
      v36 = LegacyLockup.adamId.getter(v35);
      if ((AdamID.isEmpty.getter(v36) & 1) == 0)
      {
        v38 = LegacyLockup.adamId.getter(v37);
        sub_132374(v38);
      }
      v34 = v32;
    }
    v31.n128_u64[0] = swift_release(v34).n128_u64[0];
  }
  return v31.n128_f64[0];
}

void sub_1BA4B4()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  double v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v1 = v0;
  v2 = (id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel, v14, 0, 0);
  if (*v2)
  {
    v3 = *v2;
    v4 = LegacyLockup.title.getter();
    if (v5)
    {
      v7 = v5;
      v8 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0)
        v8 = v4 & 0xFFFFFFFFFFFFLL;
      if (v8)
      {
        v9 = v3;
        v10 = String._bridgeToObjectiveC()();
        objc_msgSend(v9, "setText:", v10, swift_bridgeObjectRelease(v7).n128_f64[0]);

        v11 = objc_msgSend(v9, "setHidden:", 0);
LABEL_9:
        v12 = dispatch thunk of LegacyEpisodeLockup.titleAction.getter(v11);

        v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleAction);
        *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleAction) = v12;
        swift_release(v13);
        return;
      }
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(v5).n128_u64[0];
    }
    objc_msgSend(v3, "setHidden:", 1, v6);
    v11 = objc_msgSend(v3, "setText:", 0);
    goto LABEL_9;
  }
}

void sub_1BA5E4()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  _QWORD v44[11];
  char v45;
  char v46;

  v1 = v0;
  v2 = type metadata accessor for NqmlConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v26 - v7;
  v9 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_descriptionLabel];
  if (v9)
  {
    v43 = v9;
    v10 = LegacyEpisodeLockup.summary.getter();
    if (!v10)
    {
LABEL_5:
      objc_msgSend(v43, "setText:", 0);
      objc_msgSend(v43, "setHidden:", 1);

      return;
    }
    v11 = (void *)v10;
    if ((dispatch thunk of LanguageAwareString.isEmpty.getter() & 1) != 0)
    {

      goto LABEL_5;
    }
    if ((sub_30E70(1, *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_capabilities]) & 1) != 0)
    {
      v12 = LanguageAwareString.string.getter();
      v35 = v13;
      v36 = v12;
      if (qword_3CFBB8 != -1)
        swift_once(&qword_3CFBB8, sub_214BEC);
      v15 = qword_3FD4D8;
      v14 = qword_3FD4E0;
      v39 = qword_3FD4E8;
      v40 = qword_3FD4F0;
      v41 = qword_3FD500;
      v42 = (void *)qword_3FD4F8;
      v37 = qword_3FD510;
      v38 = qword_3FD508;
      v28 = qword_3FD518;
      v29 = byte_3FD520;
      v30 = byte_3FD521;
      v16 = qword_3FD4C8;
      v34 = (void *)qword_3FD4C8;
      v17 = qword_3FD4D0;
      v33 = qword_3FD4D0;
      v32 = qword_3FD4D8;
      v31 = qword_3FD4E0;
      sub_DDA0((void *)qword_3FD4C8, qword_3FD4D0, qword_3FD4D8, qword_3FD4E0, qword_3FD4E8, qword_3FD4F0, (void *)qword_3FD4F8, qword_3FD500, qword_3FD508, qword_3FD510, qword_3FD518, byte_3FD520, byte_3FD521);
      v18 = objc_msgSend(v1, "traitCollection");
      v44[0] = v16;
      v44[1] = v17;
      v44[2] = v15;
      v44[3] = v14;
      v44[4] = v39;
      v44[5] = v40;
      v44[6] = v42;
      v44[7] = v41;
      v44[8] = v38;
      v44[9] = v37;
      v19 = v28;
      v44[10] = v28;
      LOBYTE(v15) = v29;
      v45 = v29;
      LOBYTE(v14) = v30;
      v46 = v30;
      v20 = sub_1D5728((uint64_t)v44, v18);
      v27 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v20, 0.0);

      sub_DCC8(v34, v33, v32, v31, v39, v40, v42, v41, v38, v37, v19, v15, v14);
      v21 = v27;
      NqmlConfiguration.init(font:)();
      sub_E710(0, (unint64_t *)&unk_3E1870, NSAttributedString_ptr);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      v22 = v43;
      v23 = (void *)NSAttributedString.init(nqml:configuration:)(v36, v35, v6);
      objc_msgSend(v22, "setAttributedText:", v23);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else
    {
      v24 = v43;
      v25 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();
      objc_msgSend(v24, "setAttributedText:", v25);

    }
    objc_msgSend(v43, "setHidden:", 0);

  }
}

void sub_1BA9D4(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  char v23;
  char *v24;
  char v25;
  double v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  void *v30;
  void *v31;
  NSString v32;
  void *v33;
  char v34;
  double v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  void *v39;
  Swift::Bool v40;
  Swift::String_optional v41;
  void *object;
  Swift::Bool v43;
  Swift::String_optional v44;
  Swift::String_optional v45;
  unint64_t v46;
  id v47;
  _QWORD v48[5];

  v2 = v1;
  v4 = type metadata accessor for EyebrowBuilder.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v48[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D81A0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerLabel];
  if (v11)
  {
    v47 = v11;
    v12 = LegacyEpisodeLockup.caption.getter();
    v14 = v13;
    v16 = LegacyEpisodeLockup.duration.getter();
    if (v14)
    {
      if ((v15 & 1) != 0)
      {
        v47 = v47;
        v32 = String._bridgeToObjectiveC()();
        v33 = v14;
        goto LABEL_20;
      }
      if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_style] == 2)
      {
        swift_bridgeObjectRelease(v14);
        type metadata accessor for EyebrowBuilder(0);
        v48[3] = type metadata accessor for LegacyEpisodeLockup(0);
        v48[4] = sub_239FC((unint64_t *)&qword_3D81E8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyEpisodeLockup);
        v48[0] = a1;
        v18 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration(0, v17);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
        (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for EyebrowBuilder.Style.default(_:), v4);
        v19 = swift_retain(a1);
        v20 = EyebrowBuilder.__allocating_init(episode:style:explicitSymbol:abbreviatedPubDateConfig:hostingViewHasLimitedSpace:)(v48, v7, 0, 0, v10, 0, v19);
        v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerBuilder];
        *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerBuilder] = v20;
        v22 = swift_release(v21);
        v23 = LegacyLockup.isExplicit.getter(v22);
        v24 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerLockup];
        *(_QWORD *)v24 = v16;
        v24[8] = v23 & 1;
        objc_msgSend(v47, "setHidden:", 0);

        return;
      }
      v47 = v47;
      v34 = ((uint64_t (*)(void))LegacyLockup.isExplicit.getter)();
      v36 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter];
      if (v36)
      {
        v37 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter]);
        v38 = ExplicitContentPresenter.symbol.getter(v37);
        v31 = v39;
        *(_QWORD *)&v35 = swift_release(v36).n128_u64[0];
      }
      else
      {
        v38 = 0;
        v31 = 0;
      }
      v43 = objc_msgSend(v2, "effectiveUserInterfaceLayoutDirection", v35) == (char *)&dword_0 + 1;
      v44.value._countAndFlagsBits = v12;
      v44.value._object = v14;
      v45.value._countAndFlagsBits = v38;
      v45.value._object = v31;
      object = Double.durationString(prefix:isExplicit:explicitSymbol:isRTL:abbreviated:)(v44, v34 & 1, v45, v43, 0).value._object;
      swift_bridgeObjectRelease(v14);
    }
    else
    {
      if ((v15 & 1) != 0)
      {
        objc_msgSend(v47, "setText:", 0);
        objc_msgSend(v47, "setHidden:", 1);
LABEL_22:

        return;
      }
      v47 = v47;
      v25 = ((uint64_t (*)(void))LegacyLockup.isExplicit.getter)();
      v27 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter];
      if (v27)
      {
        v28 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter]);
        v29 = ExplicitContentPresenter.symbol.getter(v28);
        v31 = v30;
        *(_QWORD *)&v26 = swift_release(v27).n128_u64[0];
      }
      else
      {
        v29 = 0;
        v31 = 0;
      }
      v40 = objc_msgSend(v2, "effectiveUserInterfaceLayoutDirection", v26) == (char *)&dword_0 + 1;
      v41.value._countAndFlagsBits = v29;
      v41.value._object = v31;
      object = Double.durationString(prefix:isExplicit:explicitSymbol:isRTL:abbreviated:)((Swift::String_optional)0, v25 & 1, v41, v40, 0).value._object;
    }
    v46 = swift_bridgeObjectRelease(v31).n128_u64[0];
    if (!object)
    {
      v32 = 0;
      goto LABEL_21;
    }
    v32 = String._bridgeToObjectiveC()();
    v33 = object;
LABEL_20:
    v46 = swift_bridgeObjectRelease(v33).n128_u64[0];
LABEL_21:
    objc_msgSend(v47, "setText:", v32, *(double *)&v46);

    objc_msgSend(v47, "setHidden:", 0);
    goto LABEL_22;
  }
}

void sub_1BADF4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t);
  char *v26;
  _BYTE v27[24];
  char v28[24];

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(&off_3D3FF8, v28, 0, 0);
  if (!off_3D3FF8)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = *(_QWORD *)&stru_68.sectname[(_QWORD)off_3D3FF8];
  v6 = *(_QWORD *)&stru_68.segname[(_QWORD)off_3D3FF8 - 8];
  ObjectType = swift_getObjectType();
  v8 = swift_unknownObjectRetain(v5);
  v9 = dispatch thunk of LibraryDataProviderProtocol.episodePlayStateController.getter(ObjectType, v6, v8);
  v10 = swift_unknownObjectRelease(v5);
  v11 = LibraryEpisodeLockup.uuid.getter(v10);
  v13 = v12;
  v14 = type metadata accessor for PlaybackStatusPresenter(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  swift_retain(v9);
  v15 = sub_276AA0(v11, v13, v9);
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playbackStatusObservance;
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playbackStatusObservance];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playbackStatusObservance] = v15;
  swift_release(v17);
  v18 = *(_QWORD *)&v1[v16];
  if (!v18)
  {
LABEL_8:
    __break(1u);
    return;
  }
  *(_QWORD *)(v18 + 40) = &off_388DE0;
  v19 = swift_unknownObjectWeakAssign(v18 + 32, v1);
  Strong = swift_unknownObjectWeakLoadStrong(v19);
  if (Strong)
  {
    v21 = Strong;
    v22 = *(_QWORD *)(v18 + 40);
    v23 = swift_getObjectType();
    v24 = v18 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
    swift_beginAccess(v18 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v27, 0, 0);
    sub_19C4C(v24, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    v25 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v22 + 8);
    swift_retain(v18);
    v26 = v1;
    v25(v4, v23, v22);
    swift_unknownObjectRelease(v21);
    sub_FA4C((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    swift_release(v9);
    swift_release(v18);

  }
  else
  {
    swift_release(v9);
  }
}

void sub_1BAFF4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  char *v24;
  _BYTE v25[24];
  char v26[24];

  v2 = v1;
  v4 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(&off_3D3FF8, v26, 0, 0);
  if (!off_3D3FF8)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = *(_QWORD *)&stru_68.sectname[(_QWORD)off_3D3FF8];
  v8 = *(_QWORD *)&stru_68.segname[(_QWORD)off_3D3FF8 - 8];
  ObjectType = swift_getObjectType();
  v10 = swift_unknownObjectRetain(v7);
  v11 = dispatch thunk of LibraryDataProviderProtocol.episodePlayStateController.getter(ObjectType, v8, v10);
  swift_unknownObjectRelease(v7);
  v12 = type metadata accessor for PlaybackStatusPresenter(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  swift_retain(v11);
  v13 = sub_276978(a1, v11);
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playbackStatusObservance;
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playbackStatusObservance];
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playbackStatusObservance] = v13;
  swift_release(v15);
  v16 = *(_QWORD *)&v2[v14];
  if (!v16)
  {
LABEL_8:
    __break(1u);
    return;
  }
  *(_QWORD *)(v16 + 40) = &off_388DE0;
  v17 = swift_unknownObjectWeakAssign(v16 + 32, v2);
  Strong = swift_unknownObjectWeakLoadStrong(v17);
  if (Strong)
  {
    v19 = Strong;
    v20 = *(_QWORD *)(v16 + 40);
    v21 = swift_getObjectType();
    v22 = v16 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
    swift_beginAccess(v16 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v25, 0, 0);
    sub_19C4C(v22, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 8);
    swift_retain(v16);
    v24 = v2;
    v23(v6, v21, v20);
    swift_unknownObjectRelease(v19);
    sub_FA4C((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    swift_release(v11);
    swift_release(v16);

  }
  else
  {
    swift_release(v11);
  }
}

double sub_1BB1DC()
{
  uint64_t v0;
  uint64_t ObjectType;
  double result;
  uint64_t v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  __int128 v17;
  __int128 v18;
  _QWORD v19[5];

  ObjectType = swift_getObjectType();
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleAction);
  if (v3)
  {
    v4 = ObjectType;
    v19[3] = type metadata accessor for Action(0);
    v19[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v19[0] = v3;
    v5 = (void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel);
    swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel, v16, 0, 0);
    v7 = *v5;
    if (*v5)
    {
      *((_QWORD *)&v18 + 1) = type metadata accessor for DynamicTypeLabel();
      *(_QWORD *)&v17 = v7;
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    v8 = sub_239FC(&qword_3DAE40, v6, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeInfoView, (uint64_t)&protocol conformance descriptor for EpisodeInfoView);
    swift_retain_n(v3, 2);
    v9 = v7;
    v10 = DependencyBindableView.perform(_:from:in:)(v19, &v17, v0, v4, v8);
    swift_release(v10);
    sub_D1D4((uint64_t)&v17, &qword_3D1A70);
    __swift_destroy_boxed_opaque_existential_0(v19);
    v11 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate;
    swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate, v19, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v11);
    if (Strong)
    {
      v13 = Strong;
      v14 = *(_QWORD *)(v11 + 8);
      v15 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(v0, v15, v14);
      swift_unknownObjectRelease(v13);
    }
    *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  }
  return result;
}

id sub_1BB398(uint64_t a1, char a2, char a3)
{
  id result;

  if (!a2)
  {
    if (a3)
      return sub_1BA0A4();
  }
  return result;
}

id sub_1BB3B0(uint64_t a1, char a2, char a3)
{
  void *v3;
  id result;

  if (a2 != a3)
  {
    if (a3)
      sub_1BA108();
    else
      sub_1BA0A4();
    objc_msgSend(v3, "setNeedsLayout");
    return objc_msgSend(v3, "layoutIfNeeded");
  }
  return result;
}

void sub_1BB404(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v16;

  v3 = type metadata accessor for EpisodePlayState(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (void *)objc_opt_self(UIView);
  sub_19C4C(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 24) & ~v7;
  v9 = swift_allocObject(&unk_388FD0, v8 + v5, v7 | 7);
  *(_QWORD *)(v9 + 16) = v1;
  sub_AF608((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  v10 = swift_allocObject(&unk_388FF8, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_1BD80C;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_101EC;
  v16 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_920D4;
  aBlock[3] = &block_descriptor_43;
  v11 = _Block_copy(aBlock);
  v12 = v16;
  v13 = v1;
  swift_retain(v10);
  objc_msgSend(v6, "performWithoutAnimation:", v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v10, "", 146, 782, 40, 1);
  swift_release(v9);
  swift_release(v10);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

double sub_1BB5A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  double result;
  _BYTE v7[24];

  sub_1BB61C();
  sub_1BBB6C(a2);
  v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  swift_retain(v5);
  CurrentValueSubject.send(_:)(a2);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_1BB61C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  NSString v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  double v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  Class isa;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;

  if (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_style) <= 1u)
  {
    v1 = v0;
    v2 = EpisodePlayState.isEpisodePlayed.getter();
    v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowPlayedCheckmark;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowPlayedCheckmark);
    if ((v2 & 1) != 0)
    {
      if (v4)
      {
        v5 = 0;
LABEL_7:
        objc_msgSend(v4, "setHidden:", v5);
        return;
      }
      sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
      v6 = (void *)static UIFont.caption2Emph.getter();
      v7 = String._bridgeToObjectiveC()();
      v8 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v7);

      v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v8);
      v10 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v6, 2);
      objc_msgSend(v9, "setPreferredSymbolConfiguration:", v10);

      v11 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
      objc_msgSend(v9, "setTintColor:", v11);

      v12 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      objc_msgSend(v12, "addSubview:", v9);
      if (qword_3CF988 != -1)
        swift_once(&qword_3CF988, sub_1B7904);
      v13 = *(double *)&qword_3DAC80;
      v14 = objc_msgSend(v9, "superview");
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v36 = (id)objc_opt_self(NSLayoutConstraint);
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
        v17 = swift_allocObject(v16, 64, 7);
        *(_OWORD *)(v17 + 16) = xmmword_2F0A20;
        v18 = objc_msgSend(v9, "leadingAnchor");
        v19 = objc_msgSend(v15, "leadingAnchor");
        v37 = v8;
        v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, 0.0);

        *(_QWORD *)(v17 + 32) = v20;
        v21 = objc_msgSend(v9, "trailingAnchor");
        v22 = objc_msgSend(v15, "trailingAnchor");
        v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, -0.0);

        *(_QWORD *)(v17 + 40) = v23;
        v24 = objc_msgSend(v9, "topAnchor");
        v25 = objc_msgSend(v15, "topAnchor");
        v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, 0.0);

        *(_QWORD *)(v17 + 48) = v26;
        v27 = objc_msgSend(v9, "bottomAnchor");
        v28 = objc_msgSend(v15, "bottomAnchor");
        v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, -v13);

        *(_QWORD *)(v17 + 56) = v29;
        specialized Array._endMutation()(v30);
        sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v36, "activateConstraints:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

        v8 = v37;
      }
      v32 = *(void **)(v1 + v3);
      *(_QWORD *)(v1 + v3) = v12;
      v33 = v12;

      v34 = sub_1B7AD0();
      objc_msgSend(v34, "insertArrangedSubview:atIndex:", v33, 0);

      v35 = sub_1B7AD0();
      v38 = v35;
      if (qword_3CF978 != -1)
      {
        swift_once(&qword_3CF978, sub_1B78E4);
        v35 = v38;
      }
      objc_msgSend(v35, "setCustomSpacing:afterView:", v33, *(double *)&qword_3DAC70, v36);

    }
    else if (v4)
    {
      v5 = 1;
      goto LABEL_7;
    }
  }
}

double sub_1BBB6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  double result;
  char *v8;
  _BYTE v10[32];

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 240;
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel);
  *(_QWORD *)&result = swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel, v10, 0, 0).n128_u64[0];
  if (*v6)
  {
    sub_19C4C(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    v8 = (char *)&loc_1BBC1C + dword_1BC26C[swift_getEnumCaseMultiPayload(v5, v3)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1BBF34()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  char v16;
  __int16 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;

  v2 = qword_3CFBB0;
  *(_QWORD *)(v1 - 248) = v0;
  v3 = v0;
  if (v2 != -1)
    swift_once(&qword_3CFBB0, sub_214B30);
  v4 = (void *)qword_3FD468;
  v5 = unk_3FD470;
  v6 = qword_3FD478;
  v7 = unk_3FD480;
  v8 = qword_3FD488;
  v9 = unk_3FD490;
  v10 = (void *)qword_3FD498;
  v11 = unk_3FD4A0;
  v12 = qword_3FD4A8;
  v13 = unk_3FD4B0;
  v14 = qword_3FD4B8;
  v15 = byte_3FD4C0;
  v16 = byte_3FD4C1;
  if (byte_3FD4C1)
    v17 = 256;
  else
    v17 = 0;
  v18 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  *(_QWORD *)(v1 - 256) = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v19 = *((_QWORD *)v18 + 2);
  *(_QWORD *)(v1 - 272) = *((_QWORD *)v18 + 1);
  v20 = *((_QWORD *)v18 + 3);
  v21 = *((_QWORD *)v18 + 4);
  v22 = *((_QWORD *)v18 + 5);
  v23 = (void *)*((_QWORD *)v18 + 6);
  v24 = *((_QWORD *)v18 + 7);
  *(_OWORD *)(v1 - 288) = *((_OWORD *)v18 + 4);
  v25 = *((_QWORD *)v18 + 10);
  v26 = *((_WORD *)v18 + 44);
  *(_QWORD *)v18 = v4;
  *((_QWORD *)v18 + 1) = v5;
  *((_QWORD *)v18 + 2) = v6;
  *((_QWORD *)v18 + 3) = v7;
  *((_QWORD *)v18 + 4) = v8;
  *((_QWORD *)v18 + 5) = v9;
  *((_QWORD *)v18 + 6) = v10;
  *((_QWORD *)v18 + 7) = v11;
  *((_QWORD *)v18 + 8) = v12;
  *((_QWORD *)v18 + 9) = v13;
  *((_QWORD *)v18 + 10) = v14;
  *((_WORD *)v18 + 44) = v17 | v15;
  sub_DDA0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  sub_DC94(*(void **)(v1 - 256), *(_QWORD *)(v1 - 272), v19, v20, v21, v22, v23, v24, *(_QWORD *)(v1 - 288), *(_QWORD *)(v1 - 280), v25, v26);
  v27 = *((unsigned __int16 *)v18 + 44);
  if (v27 >> 8 <= 0xFE)
  {
    v29 = *((_QWORD *)v18 + 9);
    v28 = *((_QWORD *)v18 + 10);
    *(_QWORD *)(v1 - 336) = v28;
    *(_QWORD *)(v1 - 344) = v29;
    v30 = *((_QWORD *)v18 + 8);
    *(_QWORD *)(v1 - 352) = v30;
    v32 = (void *)*((_QWORD *)v18 + 6);
    v31 = *((_QWORD *)v18 + 7);
    v34 = *((_QWORD *)v18 + 4);
    v33 = *((_QWORD *)v18 + 5);
    v36 = *((_QWORD *)v18 + 2);
    v35 = *((_QWORD *)v18 + 3);
    *(_DWORD *)(v1 - 328) = (v27 >> 8) & 1;
    v38 = *(void **)v18;
    v37 = *((_QWORD *)v18 + 1);
    *(_QWORD *)(v1 - 312) = *(_QWORD *)v18;
    *(_QWORD *)(v1 - 304) = v37;
    *(_QWORD *)(v1 - 296) = v36;
    *(_QWORD *)(v1 - 288) = v35;
    *(_QWORD *)(v1 - 272) = v34;
    *(_QWORD *)(v1 - 256) = v33;
    v39 = v31;
    *(_DWORD *)(v1 - 356) = v27;
    sub_DDA0(v38, v37, v36, v35, v34, v33, v32, v31, v30, v29, v28, v27, (unsigned __int16)(v27 & 0x1FF) >> 8);
    v40 = objc_msgSend(v3, "traitCollection");
    *(_QWORD *)(v1 - 320) = v3;
    v41 = v40;
    *(_QWORD *)(v1 - 208) = v38;
    *(_QWORD *)(v1 - 200) = v37;
    *(_QWORD *)(v1 - 192) = v36;
    *(_QWORD *)(v1 - 184) = v35;
    *(_QWORD *)(v1 - 176) = v34;
    *(_QWORD *)(v1 - 168) = v33;
    *(_QWORD *)(v1 - 160) = v32;
    *(_QWORD *)(v1 - 152) = v39;
    v42 = *(_QWORD *)(v1 - 344);
    *(_QWORD *)(v1 - 144) = *(_QWORD *)(v1 - 352);
    *(_QWORD *)(v1 - 136) = v42;
    *(_QWORD *)(v1 - 128) = *(_QWORD *)(v1 - 336);
    *(_BYTE *)(v1 - 120) = *(_DWORD *)(v1 - 356);
    *(_BYTE *)(v1 - 119) = *(_DWORD *)(v1 - 328);
    v43 = sub_1D5728(v1 - 208, v40);
    v44 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v43, 0.0);

    v45 = type metadata accessor for DynamicTypeLabel();
    *(_QWORD *)(v1 - 240) = *(_QWORD *)(v1 - 320);
    *(_QWORD *)(v1 - 232) = v45;
    objc_msgSendSuper2((objc_super *)(v1 - 240), "setFont:", v44);

    JUMPOUT(0x1BBF08);
  }
  JUMPOUT(0x1BBF10);
}

double sub_1BC288(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  sub_1BB61C();
  sub_1BBB6C(a1);
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  swift_retain(v4);
  CurrentValueSubject.send(_:)(a1);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_1BC2F4()
{
  uint64_t v0;

  sub_214788(*(_BYTE *)(v0 + 16));
}

BOOL sub_1BC300(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v4 = *a2;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)a1);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    result = 0;
    if ((v12 & 1) == 0)
      return result;
  }
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = a2[1];
  v17 = a2[2];
  if (v14 == v16 && v15 == v17
    || (v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v16, v17, 0), result = 0, (v18 & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 24) == *((unsigned __int8 *)a2 + 24)
      && (v19 = type metadata accessor for EpisodeInfoView.CacheKey(0),
          (static EpisodePlayState.== infix(_:_:)(a1 + *(int *)(v19 + 28), (char *)a2 + *(int *)(v19 + 28)) & 1) != 0))
    {
      return *(double *)(a1 + *(int *)(v19 + 32)) == *(double *)((char *)a2 + *(int *)(v19 + 32));
    }
    else
    {
      return 0;
    }
  }
  return result;
}

double _s23ShelfKitCollectionViews15EpisodeInfoViewC15estimatedHeight3for05traitC012CoreGraphics7CGFloatVAA0efG5StyleO_So07UITraitC0CtFZ_0(char *a1)
{
  _UNKNOWN **v1;
  uint64_t v3;

  v3 = *a1;
  v1 = off_389038[v3];
  if (v1[2])
  {
    swift_bridgeObjectRetain(off_389038[v3]);
    __asm { BR              X9 }
  }
  return 0.0;
}

uint64_t sub_1BC7A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1BC7CC(uint64_t a1)
{
  uint64_t v1;

  sub_1B9344(a1, v1);
}

uint64_t sub_1BC7D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1BC800(uint64_t *a1)
{
  uint64_t *v1;

  sub_1B940C(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1BC810()
{
  unint64_t result;

  result = qword_3DACD0;
  if (!qword_3DACD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EpisodeInfoViewStyle, &type metadata for EpisodeInfoViewStyle);
    atomic_store(result, (unint64_t *)&qword_3DACD0);
  }
  return result;
}

unint64_t sub_1BC858()
{
  unint64_t result;

  result = qword_3DACD8;
  if (!qword_3DACD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EpisodeInfoViewCapabilities, &type metadata for EpisodeInfoViewCapabilities);
    atomic_store(result, (unint64_t *)&qword_3DACD8);
  }
  return result;
}

uint64_t sub_1BC89C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate;
  swift_beginAccess(v3, v6, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1BC8F4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate;
  v5 = swift_beginAccess(v4, v7, 1, 0);
  *(_QWORD *)(v4 + 8) = v3;
  return swift_unknownObjectWeakAssign(v4, v2, v5);
}

uint64_t storeEnumTagSinglePayload for EpisodeInfoViewStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BC9A0 + 4 * byte_2FD295[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BC9D4 + 4 * byte_2FD290[v4]))();
}

uint64_t sub_1BC9D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC9DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC9E4);
  return result;
}

uint64_t sub_1BC9F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC9F8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BC9FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BCA04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeInfoViewStyle()
{
  return &type metadata for EpisodeInfoViewStyle;
}

uint64_t storeEnumTagSinglePayload for EpisodeInfoViewCapabilities(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BCA6C + 4 * byte_2FD29F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BCAA0 + 4 * byte_2FD29A[v4]))();
}

uint64_t sub_1BCAA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BCAA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BCAB0);
  return result;
}

uint64_t sub_1BCABC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BCAC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BCAC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BCAD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeInfoViewCapabilities()
{
  return &type metadata for EpisodeInfoViewCapabilities;
}

uint64_t type metadata accessor for EpisodeInfoView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews15EpisodeInfoView);
}

uint64_t method lookup function for EpisodeInfoView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for EpisodeInfoView);
}

uint64_t getEnumTagSinglePayload for EpisodeInfoView.FooterLockup(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeInfoView.FooterLockup(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeInfoView.FooterLockup()
{
  return &type metadata for EpisodeInfoView.FooterLockup;
}

char *sub_1BCBC0(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    a1[24] = *((_BYTE *)a2 + 24);
    v9 = *(int *)(a3 + 28);
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for EpisodePlayState(0);
    v13 = v4;
    swift_bridgeObjectRetain(v8);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 2)
    {
      v14 = type metadata accessor for Date(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v11, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
      }
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAD80);
      v10[*(int *)(v17 + 48)] = v11[*(int *)(v17 + 48)];
      swift_storeEnumTagMultiPayload(v10, v12, 2);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    *(_QWORD *)&v7[*(int *)(a3 + 32)] = *(char **)((char *)a2 + *(int *)(a3 + 32));
  }
  return v7;
}

uint64_t sub_1BCD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for EpisodePlayState(0);
  result = swift_getEnumCaseMultiPayload(v4, v5);
  if ((_DWORD)result == 2)
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
  }
  return result;
}

uint64_t sub_1BCDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v8 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v9 = *(int *)(a3 + 28);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = type metadata accessor for EpisodePlayState(0);
  v13 = v7;
  swift_bridgeObjectRetain(v8);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 2)
  {
    v14 = type metadata accessor for Date(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v10, v11, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAD80);
    *((_BYTE *)v10 + *(int *)(v17 + 48)) = *((_BYTE *)v11 + *(int *)(v17 + 48));
    swift_storeEnumTagMultiPayload(v10, v12, 2);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1BCF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 28);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_FA4C(a1 + v11, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    v14 = type metadata accessor for EpisodePlayState(0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 2)
    {
      v15 = type metadata accessor for Date(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v12, v13, v15);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAD80);
      *((_BYTE *)v12 + *(int *)(v18 + 48)) = *((_BYTE *)v13 + *(int *)(v18 + 48));
      swift_storeEnumTagMultiPayload(v12, v14, 2);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1BD0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for EpisodePlayState(0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 2)
  {
    v10 = type metadata accessor for Date(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAD80);
    *((_BYTE *)v7 + *(int *)(v13 + 48)) = *((_BYTE *)v8 + *(int *)(v13 + 48));
    swift_storeEnumTagMultiPayload(v7, v9, 2);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1BD1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 28);
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    sub_FA4C(a1 + v9, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    v12 = type metadata accessor for EpisodePlayState(0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 2)
    {
      v13 = type metadata accessor for Date(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v10, v11, v13);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAD80);
      *((_BYTE *)v10 + *(int *)(v16 + 48)) = *((_BYTE *)v11 + *(int *)(v16 + 48));
      swift_storeEnumTagMultiPayload(v10, v12, 2);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1BD36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BD378);
}

uint64_t sub_1BD378(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for EpisodePlayState(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1BD3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BD400);
}

char *sub_1BD400(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for EpisodePlayState(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BD474(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = &unk_2FD4D8;
  v4[2] = &unk_2FD4F0;
  result = type metadata accessor for EpisodePlayState(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1BD508()
{
  return sub_239FC(&qword_3DAE28, 255, type metadata accessor for EpisodeInfoView.CacheKey, (uint64_t)&unk_2FD508);
}

void sub_1BD538()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleAction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playbackStatusObservance] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_nowPlayingIndicatorHeight] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowPlayedCheckmark] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_descriptionLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerLabel] = 0;
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher;
  swift_storeEnumTagMultiPayload(v4, v6, 5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5470);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  *(_QWORD *)&v1[v5] = CurrentValueSubject.init(_:)(v4);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView____lazy_storage___headerStack] = 0;
  v8 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHovering] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isSuperviewSelected] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilder] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerBuilder] = 0;
  v9 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_footerLockup];
  *(_QWORD *)v9 = 0;
  v9[8] = 2;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_accessibilityIsNowPlayingIndicatorVisible] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph] = 0;

  v10 = 0;
  v11 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v11);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/EpisodeInfoView.swift", 45, 2, 202, 0);
  __break(1u);
}

uint64_t sub_1BD758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for EpisodePlayState(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 2)
  {
    v6 = type metadata accessor for Date(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v4, v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_1BD80C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EpisodePlayState(0) - 8) + 80);
  return sub_1BB5A8(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1BD83C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_43(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_1BD868(__n128 a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;

  v10 = a1.n128_f64[0];
  v11 = Review.title.getter(a1);
  v13 = v12;
  v14 = Review.dateText.getter(v11);
  v16 = v15;
  v17 = Review.reviewerName.getter(v14);
  v19 = v18;
  v20 = Review.contents.getter(v17);
  v22 = v21;
  v23 = Review.response.getter();
  if (v23)
  {
    v24 = v23;
    Response.contents.getter();
    v26 = v25;
    swift_release(v24);
  }
  else
  {
    v26 = 0;
  }
  v27 = sub_26188C(v20, v22, a7 & 1, a3, a4, v10);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v13);
  return v27;
}

void sub_1BD95C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char **v6;
  id v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_objectGraph) = a1;
  swift_retain(a1);
  swift_release(v2);
  v4 = ModernShelf.ItemPresentation.background.getter(v3) & 0x101FFFFFFFFLL;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = &selRef_tertiarySystemBackgroundColor;
  if (v4 != 0x100000001)
    v6 = &selRef_secondarySystemBackgroundColor;
  v7 = objc_msgSend(v5, *v6);
  sub_2617F8(v7);

}

double sub_1BDA00@<D0>(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  __n128 v20;
  unsigned int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  unsigned int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  double result;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[5];
  char v58[24];

  v2 = v1;
  v4 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E0);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_review];
  if (!v14)
    goto LABEL_24;
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_currentPresentation];
  swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_currentPresentation], v58, 0, 0);
  sub_1BE4B8(v15, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cellReloadingHandler];
    if (!v16)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      goto LABEL_24;
    }
    v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cellReloadingHandler
                       + 8];
    v18 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_more];
    swift_retain(v14);
    v56 = v17;
    sub_2C690(v16, v17);
    v19 = objc_msgSend(v18, "isHidden");
    if ((v19 & 1) != 0)
    {
      v21 = static Link.Presentation.textFollowsTintColor.getter(v20);
      v22 = Link.Presentation.init(rawValue:)(0);
      v23 = Link.Presentation.init(rawValue:)(v22);
      v24 = Link.Presentation.init(rawValue:)(v23 & v21);
      if (v24 != v21)
      {
        v24 = Link.Presentation.init(rawValue:)(v22 | v21);
        v22 = v24;
      }
      static ActionMetrics.notInstrumented.getter(v24);
      v25 = type metadata accessor for ClosureAction(0);
      swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
      v26 = ClosureAction.init(title:presentationStyle:actionMetrics:closure:)(0, 0, v22, v6, UINavigationBar.overrideBackButtonStyle.setter, 0);
      *(_QWORD *)(a1 + 24) = v25;
      *(_QWORD *)(a1 + 32) = sub_89A0((unint64_t *)&qword_3D3DB0, (uint64_t (*)(uint64_t))&type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
      v27 = v16;
LABEL_18:
      sub_1D618(v27, v56);
      v46 = v14;
      goto LABEL_19;
    }
    v55 = v16;
    v28 = ModernShelf.ItemPresentation.itemKind.getter(v19);
    v29 = ModernShelf.ItemKind.rawValue.getter(v28);
    v31 = v30;
    v33 = ModernShelf.ItemKind.rawValue.getter(37);
    v34 = v32;
    if (v29 == v33 && v31 == v32)
    {
      v35 = swift_bridgeObjectRelease_n(v31, 2);
    }
    else
    {
      v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v33, v32, 0);
      swift_bridgeObjectRelease(v31);
      v35 = swift_bridgeObjectRelease(v34);
      if ((v36 & 1) == 0)
        goto LABEL_20;
    }
    if ((Review.canToggleExpanded.getter(v35) & 1) != 0)
    {
      v37 = (_QWORD *)swift_allocObject(&unk_389118, 40, 7);
      v38 = v55;
      v39 = v56;
      v37[2] = v14;
      v37[3] = v38;
      v37[4] = v39;
      swift_retain(v14);
      sub_2C690(v38, v39);
      v41 = static Link.Presentation.textFollowsTintColor.getter(v40);
      v42 = Link.Presentation.init(rawValue:)(0);
      v43 = Link.Presentation.init(rawValue:)(v42);
      v44 = Link.Presentation.init(rawValue:)(v43 & v41);
      if (v44 != v41)
      {
        v44 = Link.Presentation.init(rawValue:)(v42 | v41);
        v42 = v44;
      }
      static ActionMetrics.notInstrumented.getter(v44);
      v45 = type metadata accessor for ClosureAction(0);
      swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
      v26 = ClosureAction.init(title:presentationStyle:actionMetrics:closure:)(0, 0, v42, v6, sub_1BE56C, v37);
      *(_QWORD *)(a1 + 24) = v45;
      *(_QWORD *)(a1 + 32) = sub_89A0((unint64_t *)&qword_3D3DB0, (uint64_t (*)(uint64_t))&type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
      v27 = v55;
      goto LABEL_18;
    }
LABEL_20:
    v49 = objc_msgSend(v2, "traitCollection", v35.n128_f64[0]);
    v50 = (char *)objc_msgSend(v49, "horizontalSizeClass");

    if (v50 != (_BYTE *)&dword_0 + 2
      || (v51 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_objectGraph]) == 0)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      swift_release(v14);
      sub_1D618(v55, v56);
      goto LABEL_24;
    }
    v57[3] = type metadata accessor for Review(0);
    v57[4] = sub_89A0((unint64_t *)&qword_3D7978, (uint64_t (*)(uint64_t))&type metadata accessor for Review, (uint64_t)&protocol conformance descriptor for Review);
    v57[0] = v14;
    v52 = type metadata accessor for ModernProductReviewCollectionViewCell(0);
    v53 = type metadata accessor for OverflowAction(0);
    swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
    swift_retain_n(v51, 2);
    v54 = swift_retain(v14);
    v26 = OverflowAction.init(model:cellType:asPartOf:)(v57, v52, v51, v54);
    *(_QWORD *)(a1 + 24) = v53;
    *(_QWORD *)(a1 + 32) = sub_89A0(&qword_3DAEB0, (uint64_t (*)(uint64_t))&type metadata accessor for OverflowAction, (uint64_t)&protocol conformance descriptor for Action);
    sub_1D618(v55, v56);
    swift_release(v14);
    v46 = v51;
LABEL_19:
    v47 = swift_release(v46);
    *(_QWORD *)a1 = v26;
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v47);
    return result;
  }
  sub_1BE500((uint64_t)v9);
LABEL_24:
  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void sub_1BDF58(uint64_t *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  char v4;
  id v5;

  v2 = v1;
  v3 = *a1;
  v4 = Review.isExpanded.getter();
  Review.isExpanded.getter();
  v5 = objc_msgSend(v2, "traitCollection");
  sub_1BE2B0(v3, v4 & 1, 0);

}

uint64_t sub_1BDFC8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_objectGraph));
}

uint64_t sub_1BDFE4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2FD740, a2);
  return TypedShelfUIKitCell.apply(model:)(a1, a2, WitnessTable);
}

uint64_t sub_1BE024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E0);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  v12 = v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_currentPresentation;
  swift_beginAccess(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_currentPresentation, v18, 33, 0);
  sub_D2C20((uint64_t)v9, v12);
  swift_endAccess(v18);
  v13 = (_QWORD *)(v3
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cellReloadingHandler);
  v14 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cellReloadingHandler);
  v15 = v13[1];
  *v13 = a2;
  v13[1] = a3;
  swift_retain(a3);
  return sub_1D618(v14, v15);
}

uint64_t sub_1BE144(uint64_t a1, void *a2)
{
  double v2;

  v2 = sub_261274(a2);
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v2);
}

uint64_t sub_1BE174(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2FD740, a1);
  return static TypedShelfUIKitCell.modelType.getter(a1, WitnessTable);
}

uint64_t sub_1BE1A8()
{
  return sub_89A0(&qword_3DAE50, type metadata accessor for ModernProductReviewCollectionViewCell, (uint64_t)&unk_2FD618);
}

uint64_t sub_1BE1D4()
{
  return sub_89A0(&qword_3D5C38, type metadata accessor for ModernProductReviewCollectionViewCell, (uint64_t)&unk_2FD6A0);
}

uint64_t sub_1BE200()
{
  return sub_89A0(&qword_3DAE58, type metadata accessor for ModernProductReviewCollectionViewCell, (uint64_t)&unk_2FD678);
}

uint64_t sub_1BE22C()
{
  return sub_89A0(&qword_3DAE60, type metadata accessor for ModernProductReviewCollectionViewCell, (uint64_t)&unk_2FD6D0);
}

uint64_t sub_1BE258()
{
  return sub_89A0(&qword_3DAE68, (uint64_t (*)(uint64_t))&type metadata accessor for Review, (uint64_t)&protocol conformance descriptor for Review);
}

uint64_t sub_1BE284()
{
  return sub_89A0((unint64_t *)&qword_3D7978, (uint64_t (*)(uint64_t))&type metadata accessor for Review, (uint64_t)&protocol conformance descriptor for Review);
}

id sub_1BE2B0(uint64_t a1, char a2, char a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v7;
  __n128 v8;
  void *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  void *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  NSString v18;
  char *v19;
  id v20;
  double v21;
  void *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  NSString v26;
  void *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  NSString v31;

  v4 = v3;
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_review];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_review] = a1;
  swift_retain(a1);
  v8 = swift_release(v7);
  v9 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_title];
  Review.title.getter(v8);
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v9, "setText:", v13, v11);

  v14 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_date];
  Review.dateText.getter();
  if (v15)
  {
    v17 = v15;
    v18 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v14, "setText:", v18, v16);

  v19 = *(char **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_rating];
  v20 = (id)Review.rating.getter();
  v21 = *(double *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_rating];
  *(double *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_rating] = (double)(unint64_t)v20;
  if (v21 != (double)(unint64_t)v20)
    v20 = objc_msgSend(v19, "setNeedsDisplay");
  v22 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_username];
  Review.reviewerName.getter(v20);
  if (v23)
  {
    v25 = v23;
    v26 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v25).n128_u64[0];
  }
  else
  {
    v26 = 0;
  }
  objc_msgSend(v22, "setText:", v26, v24);

  v27 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_body];
  Review.contents.getter();
  if (v28)
  {
    v30 = v28;
    v31 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v29 = swift_bridgeObjectRelease(v30).n128_u64[0];
  }
  else
  {
    v31 = 0;
  }
  objc_msgSend(v27, "setText:", v31, v29);

  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isInOverflowVC] = a3 & 1;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isReviewExpanded] = a2 & 1;
  sub_25F0E4();
  objc_msgSend(v4, "setNeedsLayout");
  return sub_260D58();
}

uint64_t sub_1BE4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE500(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BE540()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1BE56C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = *(uint64_t (**)(void))(v0 + 24);
  Review.toggleExpanded()();
  return v1();
}

UIFontTextStyle sub_1BE5A4()
{
  xmmword_3FCD00 = COERCE_UNSIGNED_INT64(static ShelfSpacer.b.getter());
  byte_3FCD10 = 0;
  qword_3FCD18 = (uint64_t)UIFontTextStyleBody;
  unk_3FCD20 = 0u;
  unk_3FCD30 = 0u;
  *(_OWORD *)&qword_3FCD40 = 0u;
  *(_OWORD *)&qword_3FCD50 = 0u;
  *(_OWORD *)&qword_3FCD60 = 0u;
  word_3FCD70 = 0;
  return UIFontTextStyleBody;
}

UIFontTextStyle sub_1BE5F0()
{
  xmmword_3FCD78 = COERCE_UNSIGNED_INT64(static ShelfSpacer.c.getter());
  byte_3FCD88 = 0;
  qword_3FCD90 = (uint64_t)UIFontTextStyleBody;
  unk_3FCD98 = 0u;
  unk_3FCDA8 = 0u;
  unk_3FCDB8 = 0u;
  unk_3FCDC8 = 0u;
  unk_3FCDD8 = 0u;
  word_3FCDE8 = 0;
  return UIFontTextStyleBody;
}

uint64_t sub_1BE640@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource);
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

double sub_1BE658(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  double result;

  v3 = *a1;
  v4 = a1[1];
  v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource + 8);
  *v5 = v3;
  v5[1] = v4;
  if (v4)
  {
    if (v7)
    {
      v8 = v3 == v6 && v4 == v7;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, v7, 0) & 1) != 0)
        goto LABEL_12;
    }
  }
  else if (!v7)
  {
    swift_bridgeObjectRelease(0);
    v9 = 0;
    goto LABEL_13;
  }
  if (v5[1])
    sub_1BE81C();
LABEL_12:
  v9 = v7;
LABEL_13:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

id sub_1BE710(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for LegacyCachingArtworkView(0);
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_1BE764(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, SEL *a7, SEL *a8)
{
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  objc_super v22;

  v14 = a1;
  objc_msgSend(v14, *a7);
  v16 = v15;
  v18 = v17;
  v22.receiver = v14;
  v22.super_class = (Class)type metadata accessor for LegacyCachingArtworkView(0);
  objc_msgSendSuper2(&v22, *a8, a2, a3, a4, a5);
  objc_msgSend(v14, *a7);
  if (v16 != v20 || v18 != v19)
    sub_1BF30C();

}

_QWORD *sub_1BE81C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *(*v2)(uint64_t *__return_ptr);
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  char v22[24];
  char v23[24];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;

  v1 = v0;
  v2 = *(_QWORD *(**)(uint64_t *__return_ptr))&stru_388.segname[swift_isaMask & *v0];
  v3 = v2(&v24);
  v4 = v25;
  if (!v25)
    goto LABEL_8;
  if (v24 == 0xD000000000000018 && v25 == 0x8000000000313350)
  {
    swift_bridgeObjectRelease(v25);
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, 0xD000000000000018, 0x8000000000313350, 0);
    swift_bridgeObjectRelease(v4);
    if ((v5 & 1) == 0)
      goto LABEL_8;
  }
  v6 = (uint64_t)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageDownloadObserver;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageDownloadObserver, v22, 0, 0);
  sub_1BFE6C(v6, (uint64_t)&v24);
  v7 = v26;
  v3 = (_QWORD *)sub_D1D4((uint64_t)&v24, &qword_3DAF10);
  if (v7)
  {
    sub_1BF1F4();
    return sub_1BF30C();
  }
LABEL_8:
  ((void (*)(uint64_t *__return_ptr, _QWORD *))v2)(&v24, v3);
  v8 = v25;
  if (v25)
  {
    if (v24 == 0xD000000000000018 && v25 == 0x8000000000313350)
    {
      swift_bridgeObjectRelease(v25);
      return sub_1BF30C();
    }
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, 0xD000000000000018, 0x8000000000313350, 0);
    swift_bridgeObjectRelease(v8);
    if ((v9 & 1) != 0)
      return sub_1BF30C();
  }
  v10 = (uint64_t)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageDownloadObserver;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageDownloadObserver, v23, 0, 0);
  sub_1BFE6C(v10, (uint64_t)&v24);
  v11 = v26;
  sub_D1D4((uint64_t)&v24, &qword_3DAF10);
  if (!v11)
  {
    v12 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_dataProvider);
    v13 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_dataProvider + 8);
    ObjectType = swift_getObjectType();
    v15 = swift_unknownObjectRetain(v12);
    v16 = dispatch thunk of LibraryDataProviderProtocol.fetchImageDownloadObserver()(ObjectType, v13, v15);
    swift_unknownObjectRelease(v12);
    v17 = swift_allocObject(&unk_3892E8, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v1);
    v18 = sub_1E2A0();
    v20 = static OS_dispatch_queue.main.getter(v19);
    v26 = v18;
    v27 = &protocol witness table for OS_dispatch_queue;
    v24 = v20;
    Promise.then(perform:orCatchError:on:)(sub_1BFEB4, v17, sub_1BF100, 0, &v24);
    swift_release(v16);
    swift_release(v17);
    __swift_destroy_boxed_opaque_existential_0(&v24);
  }
  return sub_1BF30C();
}

uint64_t sub_1BEAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  _QWORD *v25;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E2A0();
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_389310, 40, 7);
  v14[2] = a3;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_1BFE48;
  v25 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_44;
  v15 = _Block_copy(aBlock);
  v16 = v25;
  swift_retain(a3);
  swift_bridgeObjectRetain(a2);
  v17 = swift_release(v16);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_89A0((unint64_t *)&qword_3D2FD0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v20 = sub_CF9F8();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v6, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
}

void sub_1BECB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *Strong;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    (*(void (**)(uint64_t *__return_ptr))&stru_388.segname[swift_isaMask & *Strong])(&v10);
    v8 = v11;
    if (v11)
    {
      if (v10 == a2 && v11 == a3)
      {
        swift_bridgeObjectRelease(v11);
LABEL_7:
        sub_1BF30C();
        goto LABEL_8;
      }
      v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, a2, a3, 0);
      swift_bridgeObjectRelease(v8);
      if ((v9 & 1) != 0)
        goto LABEL_7;
    }
LABEL_8:

  }
}

uint64_t sub_1BED7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageDownloadObserver;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageDownloadObserver, v11, 33, 0);
  v5 = *(_QWORD *)(v4 + 24);
  if (v5)
  {
    v6 = *(_QWORD *)(v4 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v4, *(_QWORD *)(v4 + 24));
    dispatch thunk of ImageDownloadObserverProtocol.didFinishDownloading.setter(0, 0, v5, v6);
  }
  sub_1BFDD0(a1, v4, &qword_3DAF10);
  if (*(_QWORD *)(v4 + 24))
  {
    v7 = swift_allocObject(&unk_3892E8, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16, v2);
    v8 = *(_QWORD *)(v4 + 24);
    v9 = *(_QWORD *)(v4 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v4, v8);
    dispatch thunk of ImageDownloadObserverProtocol.didFinishDownloading.setter(sub_1BFE14, v7, v8, v9);
  }
  swift_endAccess(v11);
  return sub_D1D4(a1, &qword_3DAF10);
}

uint64_t sub_1BEE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;
  __int128 v24[2];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E2A0();
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  sub_1D5D4(a1, (uint64_t)v24);
  v13 = swift_allocObject(&unk_389360, 64, 7);
  *(_QWORD *)(v13 + 16) = a2;
  sub_1B738(v24, v13 + 24);
  aBlock[4] = sub_1BFEE8;
  v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_13_3;
  v14 = _Block_copy(aBlock);
  v15 = v23;
  swift_retain(a2);
  v16 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_89A0((unint64_t *)&qword_3D2FD0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v19 = sub_CF9F8();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v4, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1BF09C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[40];
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1D5D4(a2, (uint64_t)v6);
    sub_1BED7C((uint64_t)v6);

  }
}

double sub_1BF100(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_2F03C0;
  v10 = 0;
  v11 = 0xE000000000000000;
  _StringGuts.grow(_:)(43);
  v4._object = (void *)0x8000000000313370;
  v4._countAndFlagsBits = 0xD000000000000029;
  String.append(_:)(v4);
  v9 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6288);
  _print_unlocked<A, B>(_:_:)(&v9, &v10, v5, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v6 = v10;
  v7 = v11;
  *(_QWORD *)(v3 + 56) = &type metadata for String;
  *(_QWORD *)(v3 + 32) = v6;
  *(_QWORD *)(v3 + 40) = v7;
  debugPrint(_:separator:terminator:)(v3, 32, 0xE100000000000000, 10, 0xE100000000000000);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

uint64_t sub_1BF1F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];
  _OWORD v10[2];
  uint64_t v11;

  v1 = v0;
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  v2 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageDownloadObserver;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageDownloadObserver, v9, 33, 0);
  v3 = *(_QWORD *)(v2 + 24);
  if (v3)
  {
    v4 = *(_QWORD *)(v2 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v2, *(_QWORD *)(v2 + 24));
    dispatch thunk of ImageDownloadObserverProtocol.didFinishDownloading.setter(0, 0, v3, v4);
  }
  sub_1BFDD0((uint64_t)v10, v2, &qword_3DAF10);
  if (*(_QWORD *)(v2 + 24))
  {
    v5 = swift_allocObject(&unk_3892E8, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v1);
    v6 = *(_QWORD *)(v2 + 24);
    v7 = *(_QWORD *)(v2 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v2, v6);
    dispatch thunk of ImageDownloadObserverProtocol.didFinishDownloading.setter(sub_1BFE14, v5, v6, v7);
  }
  swift_endAccess(v9);
  return sub_D1D4((uint64_t)v10, &qword_3DAF10);
}

_QWORD *sub_1BF30C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _BYTE *v6;
  _QWORD *result;
  double v8;
  double v9;
  double v11;
  double v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for PageRenderEvent(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v0, "bounds", v4);
  if (v8 >= 1.0 && v9 >= 1.0)
  {
    v11 = v8;
    v12 = v9;
    result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD *))&stru_388.segname[swift_isaMask & *v0])(&v22, result);
    v14 = v23;
    if (v23)
    {
      v15 = v22;
      if (*(_QWORD *)((char *)v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_pageRenderController))
      {
        *v6 = 1;
        v16 = enum case for PageRenderActivity.resourceFetchStarted(_:);
        v17 = type metadata accessor for PageRenderActivity(0, v13);
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v6, v16, v17);
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for PageRenderEvent.activity(_:), v2);
        PageRenderController.handle(event:)(v6);
        (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
      }
      sub_1D5D4((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageStore, (uint64_t)&v22);
      v18 = v24;
      v19 = v25;
      __swift_project_boxed_opaque_existential_1(&v22, v24);
      v20 = swift_allocObject(&unk_3892E8, 24, 7);
      swift_unknownObjectWeakInit(v20 + 16, v1);
      swift_retain(v20);
      ImageStore.asyncLocallyDiskCachedImage(forKey:size:completionHandler:)(v15, v14, sub_1BFDC8, v20, v18, v19, v11, v12);
      swift_release_n(v20, 2);
      swift_bridgeObjectRelease(v14);
      return (_QWORD *)__swift_destroy_boxed_opaque_existential_0(&v22);
    }
  }
  return result;
}

void sub_1BF4F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *Strong;
  char *v13;
  uint64_t v14;
  __n128 v15;
  char v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[24];

  v8 = type metadata accessor for PageRenderEvent(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v34, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a4);
  if (!Strong)
    return;
  v13 = Strong;
  (*(void (**)(uint64_t *__return_ptr))&stru_388.segname[swift_isaMask & *(_QWORD *)Strong])(&v32);
  v14 = v33;
  if (!v33)
    goto LABEL_10;
  if (v32 == a2 && v33 == a3)
  {
    v15 = swift_bridgeObjectRelease(v33);
    goto LABEL_7;
  }
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, a2, a3, 0);
  v15 = swift_bridgeObjectRelease(v14);
  if ((v16 & 1) == 0)
  {
LABEL_10:

    return;
  }
LABEL_7:
  v17 = *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_pageRenderController];
  if (a1)
  {
    if (v17)
    {
      *v11 = 1;
      v18 = (unsigned int *)&enum case for PageRenderActivity.resourceFetchCompleted(_:);
LABEL_13:
      v23 = *v18;
      v24 = type metadata accessor for PageRenderActivity(0, v15);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v11, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for PageRenderEvent.activity(_:), v8);
      PageRenderController.handle(event:)(v11);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  else if (v17)
  {
    v19 = type metadata accessor for PageRenderResourceError(0, v15);
    v20 = sub_89A0(&qword_3DAF18, (uint64_t (*)(uint64_t))&type metadata accessor for PageRenderResourceError, (uint64_t)&protocol conformance descriptor for PageRenderResourceError);
    v21 = swift_allocError(v19, v20, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v22, enum case for PageRenderResourceError.notFound(_:), v19);
    *(_QWORD *)v11 = v21;
    v11[8] = 1;
    v18 = (unsigned int *)&enum case for PageRenderActivity.resourceFetchFailed(_:);
    goto LABEL_13;
  }
  v25 = *(void **)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
  if ((v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode + 8] & 1) != 0)
  {
    v26 = a1;
    v27 = v13;
    objc_msgSend(v25, "setImage:", v26);
  }
  else
  {
    v28 = *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode];
    v29 = v13;
    if (a1)
      v30 = objc_msgSend(a1, "imageWithRenderingMode:", v28);
    else
      v30 = 0;
    objc_msgSend(v25, "setImage:", v30);

  }
  objc_msgSend(v13, "invalidateIntrinsicContentSize");

}

uint64_t sub_1BF7EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource
                                      + 8));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_dataProvider));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageStore));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_pageRenderController));
  sub_D1D4(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageBlur, &qword_3D5918);
  return sub_D1D4(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageDownloadObserver, &qword_3DAF10);
}

id sub_1BF870()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LegacyCachingArtworkView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s23ShelfKitCollectionViews18CachingImageSourceO2eeoiySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1;
      if (v5 != *a2 || v3 != v4)
        return _stringCompareWithSmolCheck(_:_:expecting:)(v5, v3, *a2, v4, 0);
      return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  swift_bridgeObjectRelease_n(0, 2);
  return 1;
}

uint64_t getEnumTagSinglePayload for CachingImageSource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CachingImageSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

_QWORD *sub_1BFA3C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CachingImageSource()
{
  return &type metadata for CachingImageSource;
}

uint64_t sub_1BFA6C()
{
  return type metadata accessor for LegacyCachingArtworkView(0);
}

uint64_t type metadata accessor for LegacyCachingArtworkView(uint64_t a1)
{
  uint64_t result;

  result = qword_3DAEF8;
  if (!qword_3DAEF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LegacyCachingArtworkView);
  return result;
}

void sub_1BFAB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_2FD840;
  v4[1] = &unk_2FD858;
  v4[2] = &unk_2FD870;
  v4[3] = &unk_2FD888;
  sub_1BFB4C(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_2FD8A0;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 872);
  }
}

void sub_1BFB4C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3DAF08)
  {
    v2 = type metadata accessor for ImageBlur(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3DAF08);
  }
}

id sub_1BFBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8)
{
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  __n128 v21;
  id v22;
  objc_super v24;
  __int128 v25[2];

  v15 = &a6[OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = (uint64_t)&a6[OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageBlur];
  v17 = type metadata accessor for ImageBlur(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = &a6[OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageDownloadObserver];
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_QWORD *)v18 + 4) = 0;
  v19 = &a6[OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_dataProvider];
  *(_QWORD *)v19 = a1;
  *((_QWORD *)v19 + 1) = a2;
  v20 = a6;
  v21 = swift_unknownObjectRetain(a1);
  dispatch thunk of ImageStoreProviderProtocol.imageStore.getter(v25, a7, a8, v21);
  sub_1B738(v25, (uint64_t)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageStore]);
  *(_QWORD *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_pageRenderController] = a4;
  swift_beginAccess(v16, v25, 33, 0);
  swift_retain(a4);
  sub_1BFDD0(a5, v16, &qword_3D5918);
  swift_endAccess(v25);

  v24.receiver = v20;
  v24.super_class = (Class)type metadata accessor for LegacyCachingArtworkView(0);
  v22 = objc_msgSendSuper2(&v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_D1D4(a5, &qword_3D5918);
  return v22;
}

id sub_1BFD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v15;

  v15 = (char *)objc_allocWithZone((Class)type metadata accessor for LegacyCachingArtworkView(0));
  return sub_1BFBA0(a1, a2, a3, a4, a5, v15, a7, a8);
}

uint64_t sub_1BFDA4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1BFDC8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1BF4F4(a1, a2, a3, v3);
}

uint64_t sub_1BFDD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BEAAC(a1, a2, v2);
}

uint64_t sub_1BFE1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1BFE48()
{
  uint64_t *v0;

  sub_1BECB0(v0[2], v0[3], v0[4]);
}

uint64_t block_copy_helper_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_44(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1BFE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAF10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFEB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BEE8C(a1, v1);
}

uint64_t sub_1BFEBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1BFEE8()
{
  uint64_t v0;

  sub_1BF09C(*(_QWORD *)(v0 + 16), v0 + 24);
}

void sub_1BFEF4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  int *v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  __n128 v11;
  _BYTE *v12;
  uint64_t v13;
  char v14[24];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v0);
  v2 = &v14[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(&off_3D3FF8, v14, 0, 0);
  v3 = off_3D3FF8;
  if (off_3D3FF8)
  {
    v4 = (objc_class *)type metadata accessor for LegacyCachingArtworkView(0);
    v5 = *(_QWORD *)&stru_68.sectname[(_QWORD)v3];
    v6 = *(_QWORD *)&stru_68.segname[(_QWORD)v3 - 8];
    ObjectType = swift_getObjectType();
    v8 = type metadata accessor for ImageBlur(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
    v9 = *(_QWORD *)(v6 + 8);
    swift_unknownObjectRetain_n(v5, 2);
    v10 = sub_1BFBA0(v5, v6, v5, 0, (uint64_t)v2, (char *)objc_allocWithZone(v4), ObjectType, v9);
    swift_unknownObjectRelease_n(v5, 2, v11);
    HIBYTE(v13) = v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
    v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
    v12 = v10;
    sub_EB33C((unsigned __int8 *)&v13 + 7);

  }
  else
  {
    __break(1u);
  }
}

id sub_1C0048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *Strong;
  void *v9;
  id v10;
  id v11;
  Class isa;
  id v13;
  uint64_t v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC23ShelfKitCollectionViews30ModelViewOverflowTransitioning_presentingViewController);
  if (!Strong)
    return 0;
  v9 = Strong;
  v10 = objc_msgSend(Strong, "collectionView");
  sub_1C0C90(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews30ModelViewOverflowTransitioning_selectedIndexPath, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {

    sub_1C0CD8((uint64_t)v3);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  if (!v10)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    return 0;
  }
  v11 = v10;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(v11, "cellForItemAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

void sub_1C01EC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews30ModelViewOverflowTransitioning_presentingViewController;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1+ OBJC_IVAR____TtC23ShelfKitCollectionViews30ModelViewOverflowTransitioning_presentingViewController);
  if (!Strong
    || (v5 = Strong,
        v6 = objc_msgSend(Strong, "splitViewController"),
        v5,
        !v6))
  {
    v6 = (id)swift_unknownObjectWeakLoadStrong(v3);
    if (!v6)
      goto LABEL_8;
  }
  v7 = sub_1C0048();
  if (!v7)
  {

LABEL_8:
    v28 = 1;
    v21 = 0;
    v23 = 0;
    v25 = 0;
    v27 = 0;
    goto LABEL_9;
  }
  v8 = v7;
  v9 = objc_msgSend(v6, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v8, "frame");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v19 = objc_msgSend(v8, "superview");
    objc_msgSend(v10, "convertRect:fromView:", v19, v12, v14, v16, v18);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;

    v28 = 0;
LABEL_9:
    *(_QWORD *)a1 = v21;
    *(_QWORD *)(a1 + 8) = v23;
    *(_QWORD *)(a1 + 16) = v25;
    *(_QWORD *)(a1 + 24) = v27;
    *(_BYTE *)(a1 + 32) = v28;
    return;
  }
  __break(1u);
}

char *sub_1C0454(void *a1)
{
  void *v1;
  objc_class *v3;
  id v4;
  char *v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  id v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _BYTE v22[24];
  objc_super v23;
  _BYTE v24[40];

  sub_1C01EC((uint64_t)v24);
  v3 = (objc_class *)type metadata accessor for BouncyToRectAnimation();
  v4 = objc_allocWithZone(v3);
  sub_11045C((uint64_t)v24, (uint64_t)v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews21BouncyToRectAnimation_toRect);
  v23.receiver = v4;
  v23.super_class = v3;
  v5 = (char *)objc_msgSendSuper2(&v23, "init");
  v6 = swift_allocObject(&unk_3893D0, 24, 7);
  *(_QWORD *)(v6 + 16) = a1;
  v7 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks_tasks];
  swift_beginAccess(&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks_tasks], v22, 33, 0);
  v8 = *(_QWORD **)v7;
  v9 = a1;
  swift_retain(v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
  *(_QWORD *)v7 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_20F5B4(0, v8[2] + 1, 1, v8);
    *(_QWORD *)v7 = v8;
  }
  v12 = v8[2];
  v11 = v8[3];
  if (v12 >= v11 >> 1)
  {
    v8 = sub_20F5B4((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
    *(_QWORD *)v7 = v8;
  }
  v8[2] = v12 + 1;
  v13 = &v8[3 * v12];
  v13[4] = sub_1C0C6C;
  v13[5] = v6;
  *((_BYTE *)v13 + 48) = 1;
  swift_endAccess(v22);
  swift_release(v6);
  v14 = swift_allocObject(&unk_3893F8, 24, 7);
  *(_QWORD *)(v14 + 16) = v1;
  swift_beginAccess(v7, v22, 33, 0);
  v15 = *(_QWORD **)v7;
  v16 = v1;
  swift_retain(v14);
  v17 = swift_isUniquelyReferenced_nonNull_native(v15);
  *(_QWORD *)v7 = v15;
  if ((v17 & 1) == 0)
  {
    v15 = sub_20F5B4(0, v15[2] + 1, 1, v15);
    *(_QWORD *)v7 = v15;
  }
  v19 = v15[2];
  v18 = v15[3];
  if (v19 >= v18 >> 1)
  {
    v15 = sub_20F5B4((_QWORD *)(v18 > 1), v19 + 1, 1, v15);
    *(_QWORD *)v7 = v15;
  }
  v15[2] = v19 + 1;
  v20 = &v15[3 * v19];
  v20[4] = sub_1C0C74;
  v20[5] = v14;
  *((_BYTE *)v20 + 48) = 2;
  swift_endAccess(v22);
  swift_release(v14);
  return v5;
}

void sub_1C069C(int a1, int a2, id a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  _QWORD v18[6];
  _BYTE v19[24];

  v3 = objc_msgSend(a3, "_existingPresentationControllerImmediate:effective:", 1, 1);
  if (!v3)
    return;
  v17 = v3;
  v4 = type metadata accessor for ModelViewOverflowPresentationController();
  v5 = swift_dynamicCastClass(v17, v4);
  if (!v5)
  {

    return;
  }
  v6 = v5;
  sub_125030();
  v7 = (_QWORD *)(v6
                + OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_interactiveDismissal);
  swift_beginAccess(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_interactiveDismissal, v19, 0, 0);
  v8 = v7[3];
  if (!v8)
  {

    return;
  }
  v9 = __swift_project_boxed_opaque_existential_1(v7, v8);
  v10 = *v9;
  if ((unint64_t)*v9 >> 62)
  {
    if (v10 < 0)
      v16 = *v9;
    else
      v16 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v9);
    v11 = _CocoaArrayWrapper.endIndex.getter(v16);
    v12 = v17;
    if (v11)
      goto LABEL_6;
LABEL_14:

    swift_bridgeObjectRelease(v10);
    return;
  }
  v11 = *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(*v9);
  v12 = v17;
  if (!v11)
    goto LABEL_14;
LABEL_6:
  if (v11 >= 1)
  {
    v13 = 0;
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v10);
      else
        v14 = *(id *)(v10 + 8 * v13 + 32);
      v15 = v14;
      ++v13;
      v18[1] = 0;
      v18[2] = 0;
      v18[0] = 0x3FF0000000000000;
      v18[3] = 0x3FF0000000000000;
      v18[4] = 0;
      v18[5] = 0;
      objc_msgSend(v14, "setTransform:", v18, v17);

    }
    while (v11 != v13);
    v12 = v17;
    goto LABEL_14;
  }
  __break(1u);
}

void sub_1C0860(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *Strong;
  void *v14;
  id v15;
  id v16;
  Class isa;
  id v18;
  uint64_t v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3+ OBJC_IVAR____TtC23ShelfKitCollectionViews30ModelViewOverflowTransitioning_presentingViewController);
  if (Strong)
  {
    v14 = Strong;
    v15 = objc_msgSend(Strong, "collectionView");
    sub_1C0C90(a3 + OBJC_IVAR____TtC23ShelfKitCollectionViews30ModelViewOverflowTransitioning_selectedIndexPath, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {

      sub_1C0CD8((uint64_t)v8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      if (v15)
      {
        v16 = v15;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v18 = objc_msgSend(v16, "cellForItemAtIndexPath:", isa);

        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        if (v18)
        {
          objc_msgSend(v18, "setHidden:", a4 & 1);

        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

      }
    }
  }
}

uint64_t sub_1C0B78()
{
  return type metadata accessor for ModelViewOverflowTransitioning(0);
}

uint64_t type metadata accessor for ModelViewOverflowTransitioning(uint64_t a1)
{
  uint64_t result;

  result = qword_3DAFC0;
  if (!qword_3DAFC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ModelViewOverflowTransitioning);
  return result;
}

void sub_1C0BBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = &unk_2FD938;
  sub_E3FF0(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_2FD950;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t sub_1C0C48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1C0C6C(int a1, int a2)
{
  uint64_t v2;

  sub_1C069C(a1, a2, *(id *)(v2 + 16));
}

void sub_1C0C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C0860(a1, a2, *(_QWORD *)(v2 + 16), 0);
}

uint64_t sub_1C0C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CD8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1C0D18()
{
  void *v0;
  objc_class *v1;
  id v2;
  char *v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  id v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _BYTE v13[24];
  objc_super v14;
  _BYTE v15[40];

  sub_1C01EC((uint64_t)v15);
  v1 = (objc_class *)type metadata accessor for BouncyFromRectAnimation();
  v2 = objc_allocWithZone(v1);
  sub_11045C((uint64_t)v15, (uint64_t)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23BouncyFromRectAnimation_fromRect);
  v14.receiver = v2;
  v14.super_class = v1;
  v3 = (char *)objc_msgSendSuper2(&v14, "init");
  v4 = swift_allocObject(&unk_389420, 24, 7);
  *(_QWORD *)(v4 + 16) = v0;
  v5 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks_tasks];
  swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks_tasks], v13, 33, 0);
  v6 = *(_QWORD **)v5;
  v7 = v0;
  swift_retain(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
  *(_QWORD *)v5 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_20F5B4(0, v6[2] + 1, 1, v6);
    *(_QWORD *)v5 = v6;
  }
  v10 = v6[2];
  v9 = v6[3];
  if (v10 >= v9 >> 1)
  {
    v6 = sub_20F5B4((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
    *(_QWORD *)v5 = v6;
  }
  v6[2] = v10 + 1;
  v11 = &v6[3 * v10];
  v11[4] = sub_1C0E78;
  v11[5] = v4;
  *((_BYTE *)v11 + 48) = 0;
  swift_endAccess(v13);
  swift_release(v4);
  return v3;
}

void sub_1C0E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C0860(a1, a2, *(_QWORD *)(v2 + 16), 1);
}

uint64_t sub_1C0E9C(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = &unk_2FD9B8;
  v2[2] = &unk_2FD9D0;
  v2[3] = &unk_2FD9E8;
  return swift_initClassMetadata2(a1, 0, 4, v2, a1 + 88);
}

BOOL sub_1C0EFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static TranscriptSelectionContentType.== infix(_:_:)(*a1, *a2);
}

Swift::Int sub_1C0F08()
{
  char *v0;

  return TranscriptSelectionContentType.hashValue.getter(*v0);
}

void sub_1C0F10(uint64_t a1)
{
  char *v1;

  TranscriptSelectionContentType.hash(into:)(a1, *v1);
}

Swift::Int sub_1C0F18(uint64_t a1)
{
  char *v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  TranscriptSelectionContentType.hash(into:)((uint64_t)v3, *v1);
  return Hasher._finalize()();
}

uint64_t sub_1C0F54(uint64_t a1)
{
  unint64_t v1;

  swift_getObjCClassMetadata(a1);
  v1 = sub_1C0F78();
  return swift_getObjCClassFromMetadata(v1);
}

unint64_t sub_1C0F78()
{
  return sub_1C15C4();
}

uint64_t sub_1C0F80()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, "layer");
  v2 = objc_opt_self(CAReplicatorLayer);
  return swift_dynamicCastObjCClassUnconditional(v1, v2, 0, 0, 0);
}

id sub_1C0FD4(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  objc_class *v13;
  objc_super v15;

  v13 = (objc_class *)type metadata accessor for MirroredViewContainer.ReplicatorView(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v8)), a7, a8);
  v15.receiver = v8;
  v15.super_class = v13;
  return objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
}

id sub_1C1050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  return sub_1C0FD4(a5, a6, a7, a8, a1, a2, a3, a4);
}

id sub_1C1070(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for MirroredViewContainer.ReplicatorView(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), a3, a4);
  v9.receiver = v4;
  v9.super_class = v6;
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_1C10D8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return sub_1C1070(v3, v4, v5, v6);
}

id sub_1C10FC()
{
  return sub_1C13F8((uint64_t (*)(_QWORD, _QWORD))type metadata accessor for MirroredViewContainer.ReplicatorView);
}

uint64_t sub_1C1108()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_3DAFE8);
}

void sub_1C1120(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  sub_1C1600((uint64_t)v3, v4, v5, v6);
}

void sub_1C1144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  void *v5;
  objc_class *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  int v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  CGFloat m43;
  CGFloat m44;
  void *v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  CATransform3D v43;
  CATransform3D v44;
  objc_super v45;

  v5 = v4;
  v6 = (objc_class *)type metadata accessor for MirroredViewContainer(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), a3, a4);
  v45.receiver = v4;
  v45.super_class = v6;
  objc_msgSendSuper2(&v45, "layoutSubviews");
  v7 = *(double *)((char *)v4 + qword_3DAFE8);
  if (*((_BYTE *)v4 + qword_3DAFE8 + 8))
  {
    if (*((_BYTE *)v4 + qword_3DAFE8 + 8) == 1)
    {
      objc_msgSend(v4, "bounds");
      v9 = (1.0 - v7) * v8;
    }
    else
    {
      objc_msgSend(v4, "bounds");
      v9 = v11 - v7;
    }
  }
  else
  {
    objc_msgSend(v4, "bounds");
    v9 = v10 * v7;
  }
  v12 = *((unsigned __int8 *)v4 + qword_3DAFD8);
  v13 = 0.0;
  if ((v12 & 1) == 0)
  {
    objc_msgSend(v4, "bounds");
    v13 = v14 - v9;
  }
  v15 = *(void **)((char *)v4 + qword_3DAFD0);
  objc_msgSend(v5, "bounds");
  objc_msgSend(v15, "setFrame:", 0.0, v13);
  objc_msgSend(v5, "bounds");
  if (v16 <= v9)
  {
    v21 = (void *)sub_1C0F80();
    objc_msgSend(v21, "setInstanceCount:", 1, v22, v24, v25, v27, v28, v30, v31, v33, v34, v36, v37, v39, v40, v42);
  }
  else
  {
    v17 = v9 + -1.0;
    if (!v12)
      v17 = 1.0 - v9;
    CATransform3DMakeTranslation(&v44, 0.0, v17, 0.0);
    v38 = *(_OWORD *)&v44.m13;
    v41 = *(_OWORD *)&v44.m11;
    v32 = *(_OWORD *)&v44.m23;
    v35 = *(_OWORD *)&v44.m21;
    v26 = *(_OWORD *)&v44.m33;
    v29 = *(_OWORD *)&v44.m31;
    v23 = *(_OWORD *)&v44.m41;
    m43 = v44.m43;
    m44 = v44.m44;
    v20 = (void *)sub_1C0F80();
    *(_OWORD *)&v44.m11 = v41;
    *(_OWORD *)&v44.m13 = v38;
    *(_OWORD *)&v44.m21 = v35;
    *(_OWORD *)&v44.m23 = v32;
    *(_OWORD *)&v44.m31 = v29;
    *(_OWORD *)&v44.m33 = v26;
    *(_OWORD *)&v44.m41 = v23;
    v44.m43 = m43;
    v44.m44 = m44;
    CATransform3DScale(&v43, &v44, 1.0, -1.0, 1.0);
    v44 = v43;
    objc_msgSend(v20, "setInstanceTransform:", &v44);

    v21 = (void *)sub_1C0F80();
    objc_msgSend(v21, "setInstanceCount:", 2, v23, v26, v29, v32, v35, v38, v41);
  }

}

void sub_1C139C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_1C1144((uint64_t)v4, v1, v2, v3);

}

void sub_1C13D0()
{
  sub_1C16A0();
}

id sub_1C13EC()
{
  return sub_1C13F8((uint64_t (*)(_QWORD, _QWORD))type metadata accessor for MirroredViewContainer);
}

id sub_1C13F8(uint64_t (*a1)(_QWORD, _QWORD))
{
  _QWORD *v1;
  objc_class *v2;
  objc_super v4;

  v2 = (objc_class *)a1(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v1)));
  v4.receiver = v1;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, "dealloc");
}

void sub_1C1448(uint64_t a1)
{

}

uint64_t type metadata accessor for MirroredViewContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MirroredViewContainer);
}

uint64_t sub_1C148C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + 88);
}

uint64_t type metadata accessor for MirroredViewContainer.ReplicatorView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MirroredViewContainer.ReplicatorView);
}

uint64_t sub_1C14CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1C14D4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MirrorHeight()
{
  return &type metadata for MirrorHeight;
}

uint64_t sub_1C14EC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C1538 + 4 * byte_2FD975[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C156C + 4 * byte_2FD970[v4]))();
}

uint64_t sub_1C156C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C1574(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C157CLL);
  return result;
}

uint64_t sub_1C1588(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C1590);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C1594(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C159C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for MirroredViewContainer.Direction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MirroredViewContainer.Direction);
}

uint64_t sub_1C15B4(uint64_t a1)
{
  return swift_getWitnessTable(&unk_2FDAC8, a1);
}

unint64_t sub_1C15C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DB170;
  if (!qword_3DB170)
  {
    v1 = objc_opt_self(CAReplicatorLayer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3DB170);
  }
  return result;
}

void sub_1C1600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v5 = qword_3DAFD0;
  v6 = type metadata accessor for MirroredViewContainer.ReplicatorView(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), a3, a4);
  *(_QWORD *)((char *)v4 + v5) = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/MirroredViewContainer.swift", 51, 2, 70, 0);
  __break(1u);
}

void sub_1C16A0()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.MirroredViewContainer", 45, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t ModernTitleHeaderView.style.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for ModernTitleHeaderView.Style(0);
  __chkstk_darwin(v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style, v17, 0, 0);
  sub_19C4C(v11, (uint64_t)v10, type metadata accessor for ModernTitleHeaderView.Style);
  swift_beginAccess(v11, v16, 33, 0);
  sub_1C187C(a1, v11);
  v12 = swift_endAccess(v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v11, v4, v12);
  v13 = sub_89A0(&qword_3D4288, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v14 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v13);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  if ((v14 & 1) == 0)
    sub_1C696C();
  sub_FA4C(a1, type metadata accessor for ModernTitleHeaderView.Style);
  return sub_FA4C((uint64_t)v10, type metadata accessor for ModernTitleHeaderView.Style);
}

uint64_t type metadata accessor for ModernTitleHeaderView.Style(uint64_t a1)
{
  return sub_AE00(a1, qword_3DB2F8, (uint64_t)&nominal type descriptor for ModernTitleHeaderView.Style);
}

uint64_t sub_1C187C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModernTitleHeaderView.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id ModernTitleHeaderView.separatorOptions.setter(unsigned __int8 *a1)
{
  char *v1;
  int v2;
  char *v3;
  double v4;
  char v6[24];

  v2 = *a1;
  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions], v6, 1, 0).n128_u64[0];
  *v3 = v2;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separator], "setHidden:", v2 == 2, v4);
  return objc_msgSend(v1, "setNeedsLayout");
}

void ModernTitleHeaderView.forceHideButton.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  char shouldBe;
  id v8;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton, v11, 1, 0);
  *v3 = a1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons);
  if (v4)
  {
    if ((unint64_t)v4 >> 62)
    {
      if (v4 >= 0)
        v10 = v4 & 0xFFFFFFFFFFFFFF8;
      else
        v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons);
      swift_bridgeObjectRetain_n(v4, 2);
      v5 = _CocoaArrayWrapper.endIndex.getter(v10);
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons), 2);
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
          else
            v8 = *(id *)(v4 + 8 * i + 32);
          v9 = v8;
          if ((*v3 & 1) != 0)
            shouldBe = 1;
          else
            shouldBe = UIButton.pui_shouldBeHidden.getter();
          objc_msgSend(v9, "setHidden:", shouldBe & 1);

        }
      }
    }
    swift_bridgeObjectRelease_n(v4, 2);
  }
}

void ModernTitleHeaderView.apply(header:objectGraph:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  _QWORD *v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t (*v97)(char *, uint64_t, uint64_t);
  unsigned __int8 *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  int v109;
  void *v110;
  __n128 v111;
  _QWORD *v112;
  _QWORD *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  void **v117;
  char *i;
  id v119;
  void *v120;
  char *v121;
  double v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  __n128 v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  char v138;
  id v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  uint64_t v145;
  char *v146;
  id v147;
  double v148;
  double v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  __n128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  void *v160;
  char *v161;
  void *v162;
  __n128 v163;
  uint64_t OpaqueTypeConformance2;
  uint64_t v165;
  char v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  __n128 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  Swift::OpaquePointer v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  id v189;
  id v190;
  id v191;
  id v192;
  uint64_t v193;
  void **v194;
  id v195;
  uint64_t v196;
  char *v197;
  int v198;
  uint64_t v199;
  void (*v200)(uint64_t, uint64_t);
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  __n128 v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  NSString v217;
  char v218;
  char *v219;
  char *v220;
  void *v221;
  uint64_t v222;
  id v223;
  __n128 v224;
  void *v225;
  uint64_t v226;
  id v227;
  __n128 v228;
  void *v229;
  id v230;
  NSString v231;
  id v232;
  char *v233;
  char **v234;
  id v235;
  id v236;
  uint64_t KeyPath;
  uint64_t v238;
  unint64_t v239;
  void *v240;
  char *v241;
  char *v242;
  uint64_t v248;
  __n128 v249;
  uint64_t v250;
  uint64_t v251;
  void *v252;
  char *v253;
  char *v254;
  NSString v255;
  char *v256;
  char *v257;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  NSString v262;
  char *v263;
  uint64_t v264;
  void *v265;
  void *v266;
  char *v267;
  id v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  __n128 v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  __n128 v278;
  uint64_t v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  __n128 v285;
  uint64_t v286;
  __n128 v287;
  uint64_t v288;
  void *v289;
  char *v290;
  __n128 v291;
  uint64_t v292;
  double v293;
  uint64_t v294;
  NSString v295;
  __n128 v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  __n128 v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  __n128 v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  __n128 v312;
  uint64_t v313;
  __n128 v314;
  void *v315;
  uint64_t v316;
  id v317;
  __n128 v318;
  void *v319;
  uint64_t v320;
  id v321;
  __n128 v322;
  void *v323;
  id v324;
  id v325;
  char *v326;
  unint64_t v327;
  id v328;
  NSString v329;
  id v330;
  id v331;
  id v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  unint64_t v336;
  void *v337;
  id v338;
  id v339;
  void *v340;
  char *v341;
  char v342;
  char shouldBe;
  uint64_t v344;
  char *v345;
  uint64_t v346;
  double v347;
  double v348;
  double v349;
  double v350;
  double v351;
  double v352;
  double v353;
  char *v354;
  char *v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  void *v359;
  uint64_t v360;
  uint64_t v361;
  id v362;
  void *v363;
  NSString v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  void (*v369)(uint64_t, uint64_t);
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  NSString v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  unint64_t v384;
  char v385;
  uint64_t v386;
  void *v387;
  void *v388;
  NSString v389;
  id v390;
  id v391;
  id v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  void *v396;
  unint64_t v397;
  id v398;
  void *v399;
  double v400;
  uint64_t v401;
  char *v402;
  char *v403;
  uint64_t v404;
  _QWORD *v405;
  char *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  char *v410;
  char *v411;
  char *v412;
  uint64_t v413;
  uint64_t v414;
  char *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char *v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  char *v423;
  uint64_t ObjectType;
  uint64_t v425;
  char *v426;
  char *v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  char *v431;
  char *v432;
  uint64_t v433;
  char **v434;
  uint64_t v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  char *v441;
  char *v442;
  uint64_t v443;
  char *v444;
  char *v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  char *v450;
  uint64_t v451;
  char *v452;
  char *v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  void **v458;
  id v459;
  uint64_t v460;
  char *v461;
  uint64_t v462;
  char *v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  _QWORD *v467;
  uint64_t (*v468)(char *, uint64_t, uint64_t);
  _QWORD v469[4];
  id v470[2];
  id v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  char v475[8];
  void *v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v447 = type metadata accessor for UIShape(0);
  v446 = *(_QWORD *)(v447 - 8);
  __chkstk_darwin(v447);
  v445 = (char *)&v401 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36C0);
  __chkstk_darwin(v7);
  v444 = (char *)&v401 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v429 = type metadata accessor for ClickLocationElement(0);
  v428 = *(_QWORD *)(v429 - 8);
  __chkstk_darwin(v429);
  v426 = (char *)&v401 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v425 = v9;
  __chkstk_darwin(v10);
  v427 = (char *)&v401 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E50);
  __chkstk_darwin(v12);
  v450 = (char *)&v401 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v458 = (void **)((char *)&v401 - v15);
  __chkstk_darwin(v16);
  v434 = (char **)((char *)&v401 - v17);
  __chkstk_darwin(v18);
  v435 = (uint64_t)&v401 - v19;
  v439 = type metadata accessor for AttributedString(0);
  v438 = *(_QWORD *)(v439 - 8);
  __chkstk_darwin(v439);
  v432 = (char *)&v401 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v436 = (char *)&v401 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FA8);
  __chkstk_darwin(v23);
  v442 = (char *)&v401 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v461 = (char *)&v401 - v26;
  v465 = type metadata accessor for ActionMenu(0);
  v464 = *(_QWORD *)(v465 - 8);
  __chkstk_darwin(v465);
  v431 = (char *)&v401 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v441 = (char *)&v401 - v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v30);
  v411 = (char *)&v401 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v414 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1210);
  v413 = *(_QWORD *)(v414 - 8);
  __chkstk_darwin(v414);
  v412 = (char *)&v401 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v417 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1218);
  v416 = *(_QWORD *)(v417 - 8);
  __chkstk_darwin(v417);
  v415 = (char *)&v401 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v422 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1220);
  v421 = *(_QWORD *)(v422 - 8);
  __chkstk_darwin(v422);
  v419 = (char *)&v401 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v35);
  v410 = (char *)&v401 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v420 = type metadata accessor for ArtworkRequest(0);
  v418 = *(_QWORD *)(v420 - 8);
  __chkstk_darwin(v420);
  v423 = (char *)&v401 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v408 = type metadata accessor for Logger(0);
  v407 = *(_QWORD *)(v408 - 8);
  __chkstk_darwin(v408);
  v406 = (char *)&v401 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v405 = (_QWORD *)type metadata accessor for ArtworkAspectRule(0);
  v404 = *(v405 - 1);
  __chkstk_darwin(v405);
  v402 = (char *)&v401 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v403 = (char *)&v401 - v41;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v42);
  v430 = (char *)&v401 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v401 - v45;
  v47 = type metadata accessor for ArtworkModel(0);
  v48 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v409 = (uint64_t)&v401 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v453 = (char *)&v401 - v51;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  __chkstk_darwin(v52);
  v454 = (char *)&v401 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  v451 = (uint64_t)&v401 - v55;
  __chkstk_darwin(v56);
  v437 = (uint64_t)&v401 - v57;
  __chkstk_darwin(v58);
  v455 = (uint64_t)&v401 - v59;
  __chkstk_darwin(v60);
  v443 = (uint64_t)&v401 - v61;
  __chkstk_darwin(v62);
  v448 = (uint64_t)&v401 - v63;
  __chkstk_darwin(v64);
  v449 = (uint64_t)&v401 - v65;
  __chkstk_darwin(v66);
  v433 = (uint64_t)&v401 - v67;
  __chkstk_darwin(v68);
  v457 = (char *)&v401 - v69;
  __chkstk_darwin(v70);
  v456 = (uint64_t)&v401 - v71;
  __chkstk_darwin(v72);
  v466 = (uint64_t)&v401 - v73;
  __chkstk_darwin(v74);
  v452 = (char *)&v401 - v75;
  __chkstk_darwin(v76);
  v78 = (char *)&v401 - v77;
  __chkstk_darwin(v79);
  v81 = (char *)&v401 - v80;
  __chkstk_darwin(v82);
  v84 = (char *)&v401 - v83;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v477, v85, v85);
  v86 = type metadata accessor for PageRenderController(0);
  v460 = a2;
  BaseObjectGraph.optional<A>(_:)(&v471, v86, v86, v87);
  v459 = v471;
  v463 = v3;
  v88 = *(_QWORD **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_backgroundView];
  v462 = a1;
  sub_D184(a1, (uint64_t)v84, &qword_3D19E8);
  v90 = type metadata accessor for Header(0, v89);
  v91 = *(_QWORD *)(v90 - 8);
  v468 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48);
  v92 = v468(v84, 1, v90);
  v467 = (_QWORD *)v91;
  if (v92 == 1)
  {
    sub_D1D4((uint64_t)v84, &qword_3D19E8);
    v93 = 0;
  }
  else
  {
    v93 = Header.shouldPinToVisibleBounds.getter();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v84, v90);
  }
  v94 = v90;
  objc_msgSend(v88, "setHidden:", (v93 & 1) == 0);
  sub_D184(v462, (uint64_t)v81, &qword_3D19E8);
  if (v468(v81, 1, v90) == 1)
  {
    sub_D1D4((uint64_t)v81, &qword_3D19E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v46, 1, 1, v47);
LABEL_7:
    sub_D1D4((uint64_t)v46, &qword_3D0A58);
    v95 = v462;
    v96 = v463;
    v97 = v468;
LABEL_19:
    objc_msgSend(*(id *)&v96[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_artworkView], "setHidden:", 1);
    goto LABEL_20;
  }
  Header.artwork.getter();
  v88 = (_QWORD *)v467[1];
  ((void (*)(char *, uint64_t))v88)(v81, v90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
    goto LABEL_7;
  v98 = (unsigned __int8 *)v453;
  sub_2376C((uint64_t)v46, (uint64_t)v453);
  v95 = v462;
  sub_D184(v462, (uint64_t)v78, &qword_3D19E8);
  v97 = v468;
  if (v468(v78, 1, v94) == 1)
  {
    sub_D1D4((uint64_t)v78, &qword_3D19E8);
    v96 = v463;
LABEL_18:
    sub_FA4C((uint64_t)v98, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_19;
  }
  v99 = Header.title.getter();
  v101 = v100;
  ((void (*)(char *, uint64_t))v88)(v78, v94);
  v96 = v463;
  if (!v101)
    goto LABEL_18;
  v471 = (id)v99;
  v472 = v101;
  v102 = sub_2C298();
  v103 = Collection.isNotEmpty.getter(&type metadata for String, v102);
  swift_bridgeObjectRelease(v101);
  if ((v103 & 1) == 0)
    goto LABEL_18;
  v46 = v452;
  sub_D184(v95, (uint64_t)v452, &qword_3D19E8);
  v104 = v97(v46, 1, v94);
  if ((_DWORD)v104 == 1)
  {
    sub_D1D4((uint64_t)v46, &qword_3D19E8);
    goto LABEL_18;
  }
  v105 = Header.subtitle.getter(v104);
  v107 = v106;
  ((void (*)(char *, uint64_t))v88)(v46, v94);
  if (!v107)
    goto LABEL_18;
  v471 = (id)v105;
  v472 = v107;
  v108 = Collection.isNotEmpty.getter(&type metadata for String, v102);
  swift_bridgeObjectRelease(v107);
  if ((v108 & 1) == 0)
    goto LABEL_18;
  v109 = v98[64];
  if (v109 == 255)
  {
    v113 = v405;
    if (qword_3CF028 != -1)
      swift_once(&qword_3CF028, sub_E308);
    v112 = (id)qword_3FA888;
  }
  else
  {
    v110 = (void *)*((_QWORD *)v98 + 7);
    sub_27F80(v110, v98[64]);
    v112 = (_QWORD *)Color.color.getter(v110, v111);
    sub_27F94(v110, v109);
    v113 = v405;
  }
  v121 = *(char **)&v96[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_artworkView];
  v405 = v112;
  v122 = ArtworkModel.size.getter(objc_msgSend(v121, "setBackgroundColor:", v112));
  v123 = &v121[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
  *(double *)v123 = v122;
  *((_QWORD *)v123 + 1) = v124;
  objc_msgSend(v121, "setNeedsLayout");
  v125 = v404;
  v126 = v403;
  (*(void (**)(char *, _QWORD, _QWORD *))(v404 + 104))(v403, enum case for ArtworkAspectRule.aspectFill(_:), v113);
  objc_msgSend(v121, "effectiveUserInterfaceLayoutDirection");
  objc_msgSend(v121, "setContentMode:", 6);
  v127 = v402;
  (*(void (**)(char *, char *, _QWORD *))(v125 + 16))(v402, v126, v113);
  v452 = v121;
  v128 = &v121[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule];
  v129 = swift_beginAccess(v128, &v471, 33, 0);
  (*(void (**)(char *, char *, _QWORD *, __n128))(v125 + 40))(v128, v127, v113, v129);
  swift_endAccess(&v471);
  (*(void (**)(char *, _QWORD *))(v125 + 8))(v126, v113);
  if (v98[129] == 3)
    goto LABEL_32;
  v131 = ((uint64_t (*)(void))ArtworkStyle.rawValue.getter)();
  v133 = v132;
  v135 = ArtworkStyle.rawValue.getter(1);
  v136 = v134;
  if (v131 == v135 && v133 == v134)
  {
    swift_bridgeObjectRelease_n(v133, 2);
LABEL_37:
    v130 = 1;
    goto LABEL_38;
  }
  v137 = _stringCompareWithSmolCheck(_:_:expecting:)(v131, v133, v135, v134, 0);
  swift_bridgeObjectRelease(v133);
  swift_bridgeObjectRelease(v136);
  if ((v137 & 1) != 0)
    goto LABEL_37;
LABEL_32:
  v130 = 0;
LABEL_38:
  v138 = v452[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v452[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = v130;
  LOBYTE(v471) = v138;
  v139 = sub_EB33C((unsigned __int8 *)&v471);
  v140 = v406;
  v141 = static Logger.artwork.getter(v139);
  v142 = static os_log_type_t.info.getter(v141);
  SignpostAndLogTrace(domain:level:)(&v471, v140, v142);
  (*(void (**)(char *, uint64_t))(v407 + 8))(v140, v408);
  v143 = v409;
  sub_19C4C((uint64_t)v98, v409, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  if (qword_3CF9E8 != -1)
    swift_once(&qword_3CF9E8, sub_1C6714);
  v144 = xmmword_3DB180;
  v145 = type metadata accessor for CropCode(0);
  v146 = v410;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v410, 1, 1, v145);
  sub_1D5D4((uint64_t)&v471, (uint64_t)v469);
  v147 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v147, "scale");
  v149 = v148;

  v150 = v423;
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v143, 1, 0, v146, 0, _swiftEmptyArrayStorage, v469, *(double *)&v144, *((double *)&v144 + 1), v149);
  v151 = v478;
  v152 = v479;
  __swift_project_boxed_opaque_existential_1(&v477, v478);
  v469[0] = dispatch thunk of ImageProvider.load(artwork:)(v150, v151, v152);
  v153 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v470[0] = (id)static OS_dispatch_queue.main.getter(v154);
  v155 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v156 = (uint64_t)v411;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 56))(v411, 1, 1, v155);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1238);
  v158 = sub_10EDC(&qword_3D1240, &qword_3D1238, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v159 = sub_1E2DC();
  v46 = v412;
  Publisher.receive<A>(on:options:)(v470, v156, v157, v153, v158, v159);
  sub_D1D4(v156, &qword_3D2E70);

  swift_release(v469[0]);
  v160 = (void *)sub_10EDC(&qword_3D1248, &qword_3D1210, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v161 = v415;
  v162 = (void *)v414;
  Publisher.emitPageRenderResourceEvents(using:onScreen:)(v163);
  (*(void (**)(char *, void *))(v413 + 8))(v46, v162);
  sub_1D5D4((uint64_t)&v471, (uint64_t)v469);
  v470[0] = v162;
  v470[1] = v160;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v470, &opaque type descriptor for <<opaque return type of Publisher.emitPageRenderResourceEvents(using:onScreen:)>>, 1);
  v165 = v417;
  v166 = static EmitLifecycle.defaultVerbosity.getter(v417, OpaqueTypeConformance2);
  v88 = v419;
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)(v469, "ModernTitleHeader", 17, 2, 1, 0, 0, v166 & 1, v165, OpaqueTypeConformance2);
  sub_D1D4((uint64_t)v469, &qword_3D1250);
  (*(void (**)(char *, uint64_t))(v416 + 8))(v161, v165);
  v167 = swift_allocObject(&unk_389800, 24, 7);
  v168 = v452;
  *(_QWORD *)(v167 + 16) = v452;
  v169 = sub_10EDC(&qword_3D1258, &qword_3D1220, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v170 = v168;
  v171 = v422;
  v172 = Publisher.sink(receiveCompletion:receiveValue:)(UINavigationBar.overrideBackButtonStyle.setter, 0, sub_1EA08, v167, v422, v169);
  v173 = swift_release(v167);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v421 + 8))(v88, v171, v173);
  v174 = *(_QWORD *)&v96[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_artworkCancellable];
  *(_QWORD *)&v96[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_artworkCancellable] = v172;
  objc_msgSend(v170, "setHidden:", 0, swift_release(v174).n128_f64[0]);

  (*(void (**)(char *, uint64_t))(v418 + 8))(v423, v420);
  __swift_destroy_boxed_opaque_existential_0(&v471);
  sub_FA4C((uint64_t)v453, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_20:
  v114 = objc_msgSend(*(id *)&v96[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_verticalSubStack], "arrangedSubviews");
  v115 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v116 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v114, v115);

  if ((unint64_t)v116 >> 62)
  {
    if (v116 < 0)
      v175 = v116;
    else
      v175 = v116 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v116);
    v117 = (void **)_CocoaArrayWrapper.endIndex.getter(v175);
    if (!v117)
      goto LABEL_45;
  }
  else
  {
    v117 = *(void ***)((char *)&dword_10 + (v116 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v116);
    if (!v117)
      goto LABEL_45;
  }
  if ((uint64_t)v117 < 1)
  {
    __break(1u);
LABEL_142:
    swift_once(&qword_3CF9A8, sub_1C4C28);
    goto LABEL_111;
  }
  for (i = 0; i != (char *)v117; ++i)
  {
    if ((v116 & 0xC000000000000001) != 0)
      v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v116);
    else
      v119 = *(id *)(v116 + 8 * (_QWORD)i + 32);
    v120 = v119;
    objc_msgSend(v119, "removeFromSuperview");

  }
LABEL_45:
  swift_bridgeObjectRelease_n(v116, 2);
  v176 = v466;
  sub_D184(v95, v466, &qword_3D19E8);
  v177 = v97((char *)v176, 1, v94);
  if ((_DWORD)v177 == 1)
  {
    sub_D1D4(v176, &qword_3D19E8);
    v46 = v463;
  }
  else
  {
    v178 = Header.displaySubtitleAsEyebrow.getter(v177);
    ((void (*)(uint64_t, uint64_t))v467[1])(v176, v94);
    v46 = v463;
    if ((v178 & 1) != 0)
    {
      v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
      v180 = swift_allocObject(v179, 48, 7);
      *(_OWORD *)(v180 + 16) = xmmword_2EFC90;
      v181 = *(char **)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_subtitleLabel];
      v182 = *(char **)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleLabel];
      *(_QWORD *)(v180 + 32) = v181;
      *(_QWORD *)(v180 + 40) = v182;
      v471 = (id)v180;
      specialized Array._endMutation()(v180);
      v183._rawValue = v471;
      v184 = v181;
      v453 = v182;
      goto LABEL_50;
    }
  }
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v186 = swift_allocObject(v185, 48, 7);
  *(_OWORD *)(v186 + 16) = xmmword_2EFC90;
  v181 = *(char **)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleLabel];
  v182 = *(char **)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_subtitleLabel];
  *(_QWORD *)(v186 + 32) = v181;
  *(_QWORD *)(v186 + 40) = v182;
  v471 = (id)v186;
  specialized Array._endMutation()(v186);
  v183._rawValue = v471;
  v184 = v182;
  v453 = v181;
LABEL_50:
  v187 = v181;
  v188 = v182;
  UIStackView.addArrangedSubviews(_:)(v183);
  swift_bridgeObjectRelease(v183._rawValue);
  v189 = sub_1C7BCC();
  objc_msgSend(v189, "setActive:", 0);

  v190 = sub_1C7BCC();
  objc_msgSend(v190, "setActive:", 1);

  v191 = sub_1C7C94();
  objc_msgSend(v191, "setActive:", 0);

  v192 = sub_1C7C94();
  objc_msgSend(v192, "setActive:", 1);

  v193 = v456;
  sub_D184(v95, v456, &qword_3D19E8);
  if (v97((char *)v193, 1, v94) == 1)
  {
    sub_D1D4(v193, &qword_3D19E8);
    v88 = v467;
    v194 = v458;
    v195 = v461;
    v196 = (uint64_t)v457;
  }
  else
  {
    v466 = Header.title.getter();
    v117 = (void **)v197;
    v88 = v467;
    ((void (*)(uint64_t, uint64_t))v467[1])(v193, v94);
    v194 = v458;
    v195 = v461;
    v196 = (uint64_t)v457;
    if (v117)
      goto LABEL_54;
  }
  swift_bridgeObjectRelease(0);
  v466 = 0;
  v117 = (void **)0xE000000000000000;
LABEL_54:
  v476 = 0;
  sub_D184(v95, v196, &qword_3D19E8);
  v198 = v97((char *)v196, 1, v94);
  v452 = v184;
  if (v198 == 1)
  {
    sub_D1D4(v196, &qword_3D19E8);
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v464 + 56))(v195, 1, 1, v465);
    goto LABEL_57;
  }
  Header.titleContextMenu.getter();
  v195 = v461;
  v199 = v196;
  v200 = (void (*)(uint64_t, uint64_t))v88[1];
  v200(v199, v94);
  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v464 + 48))(v195, 1, v465) != 1)
  {
    v458 = v117;
    v219 = v441;
    (*(void (**)(char *, id, uint64_t))(v464 + 32))(v441, v195, v465);
    v220 = *(char **)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleButton];
    UIButton.setMenu(_:asPartOf:)(v219, v460);
    sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v221 = *(void **)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalSubStack];
    v222 = swift_allocObject(&unk_389788, 24, 7);
    *(_QWORD *)(v222 + 16) = v221;
    v223 = v221;
    v225 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v224, 0, 0, 0, sub_1CD1D0, v222);
    objc_msgSend(v220, "addAction:forControlEvents:", v225, 1);

    v226 = swift_allocObject(&unk_3897B0, 24, 7);
    *(_QWORD *)(v226 + 16) = v223;
    v227 = v223;
    v229 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v228, 0, 0, 0, sub_AF7F0, v226);
    objc_msgSend(v220, "addAction:forControlEvents:", v229, 488);

    v461 = v220;
    objc_msgSend(v220, "setHidden:", 0);
    if (qword_3CFA20 != -1)
      swift_once(&qword_3CFA20, sub_1C67F0);
    v230 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", qword_3DB1C0, 1);
    v231 = String._bridgeToObjectiveC()();
    v232 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v231, v230);

    v233 = v436;
    v234 = v434;
    if (!v232)
    {
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
      return;
    }
    v235 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v232);
    v236 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v235);

    AttributedString.init(_:)(v236);
    KeyPath = swift_getKeyPath(&unk_2FDB28);
    __chkstk_darwin(KeyPath);
    v238 = swift_getKeyPath(&unk_2FDB58);
    v471 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
    v239 = sub_99EA4();
    AttributedString.subscript.setter(&v471, v238, v239);
    v240 = sub_1C76A8(v466, v458, v233, 1);
    objc_msgSend(v453, "setAttributedText:", v240);

    v241 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HeaderButton()), "init");
    v242 = &v241[OBJC_IVAR____TtC23ShelfKitCollectionViews12HeaderButton_touchOutsideMargin];
    __asm { FMOV            V0.2D, #10.0 }
    *(_OWORD *)v242 = _Q0;
    *((_OWORD *)v242 + 1) = _Q0;

    v476 = v241;
    v248 = v433;
    sub_D184(v95, v433, &qword_3D19E8);
    if (v468((char *)v248, 1, v94) == 1)
    {
      sub_D1D4(v248, &qword_3D19E8);
      v250 = type metadata accessor for Header.PrimaryAction(0);
      v251 = v435;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v250 - 8) + 56))(v435, 1, 1, v250);
    }
    else
    {
      v270 = v435;
      Header.primaryAction.getter(v249);
      v200(v248, v94);
      v251 = v270;
      v271 = type metadata accessor for Header.PrimaryAction(0);
      v272 = *(_QWORD *)(v271 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v251, 1, v271) != 1)
      {
        sub_D184(v251, (uint64_t)v234, &qword_3D1E50);
        if ((*(unsigned int (**)(char **, uint64_t))(v272 + 88))(v234, v271) == enum case for Header.PrimaryAction.seeAll(_:))
        {
          v273.n128_f64[0] = (*(double (**)(char **, uint64_t))(v272 + 96))(v234, v271);
          v457 = *v234;
          v274 = Action.uniqueId.getter(v273);
          v276 = v275;
          v277 = v427;
          static ClickLocationElement.seeAllButton(uniqueID:parentUniqueID:position:)(v274);
          v278 = swift_bridgeObjectRelease(v276);
          v279 = v428;
          v280 = v426;
          v281 = v429;
          (*(void (**)(char *, char *, uint64_t, __n128))(v428 + 16))(v426, v277, v429, v278);
          v282 = *(unsigned __int8 *)(v279 + 80);
          v283 = (v282 + 16) & ~v282;
          v284 = swift_allocObject(&unk_3897D8, v283 + v425, v282 | 7);
          v285.n128_f64[0] = (*(double (**)(uint64_t, char *, uint64_t))(v279 + 32))(v284 + v283, v280, v281);
          v286 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_1CA934, v284, v285);
          v287 = swift_release(v284);
          (*(void (**)(char *, uint64_t, __n128))(v279 + 8))(v277, v281, v287);
          if (!v476)
          {
            swift_release(v286);
            swift_release(v457);
            sub_D1D4(v435, &qword_3D1E50);
            v338 = v232;
            v46 = v463;
            v233 = v436;
            goto LABEL_103;
          }
          v288 = v286;
          v289 = v476;
          v290 = v457;
          Action.title.getter(v291);
          v233 = v436;
          v251 = v435;
          if (v292)
          {
            v294 = v292;
            v295 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v293 = swift_bridgeObjectRelease(v294).n128_u64[0];
          }
          else
          {
            v295 = 0;
          }
          v95 = v462;
          objc_msgSend(v289, "setTitle:forState:", v295, 0, v293);

          v473 = type metadata accessor for Action(0);
          v474 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
          v471 = v290;
          v339 = v289;
          swift_retain(v290);
          UIControl.setAction(_:for:asPartOf:)(&v471, 0x2000, v288);
          swift_release(v288);

          swift_release(v290);
          __swift_destroy_boxed_opaque_existential_0(&v471);
          v46 = v463;
        }
        else
        {
          (*(void (**)(char **, uint64_t))(v272 + 8))(v234, v271);
        }
      }
    }
    v340 = v476;
    sub_D1D4(v251, &qword_3D1E50);
    if (v340)
    {
      v341 = &v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton];
      swift_beginAccess(&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton], &v471, 0, 0);
      v342 = *v341;
      v338 = v340;
      v216 = v461;
      if ((v342 & 1) != 0)
        shouldBe = 1;
      else
        shouldBe = UIButton.pui_shouldBeHidden.getter();
      v117 = v458;
      objc_msgSend(v338, "setHidden:", shouldBe & 1);

      v230 = v232;
      goto LABEL_106;
    }
    v338 = v232;
LABEL_103:
    v117 = v458;
    v216 = v461;
LABEL_106:

    (*(void (**)(char *, uint64_t))(v438 + 8))(v233, v439);
    (*(void (**)(char *, uint64_t))(v464 + 8))(v441, v465);
    v218 = 1;
    goto LABEL_107;
  }
LABEL_57:
  sub_D1D4((uint64_t)v195, &qword_3D2FA8);
  v201 = v94;
  v202 = v95;
  v203 = v449;
  sub_D184(v95, v449, &qword_3D19E8);
  v204 = v97((char *)v203, 1, v201);
  v440 = v201;
  if (v204 != 1)
  {
    Header.primaryAction.getter(v205);
    ((void (*)(uint64_t, uint64_t))v88[1])(v203, v201);
    v208 = type metadata accessor for Header.PrimaryAction(0);
    v209 = *(_QWORD *)(v208 - 8);
    v210 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v209 + 48))(v194, 1, v208);
    v207 = (uint64_t)v450;
    if (v210 == 1)
      goto LABEL_60;
    if ((*(unsigned int (**)(void **, uint64_t))(v209 + 88))(v194, v208) != enum case for Header.PrimaryAction.seeAll(_:))
    {
      (*(void (**)(void **, uint64_t))(v209 + 8))(v194, v208);
      goto LABEL_61;
    }
    (*(void (**)(void **, uint64_t))(v209 + 96))(v194, v208);
    v252 = *v194;
    v253 = &v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton];
    swift_beginAccess(&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton], v475, 0, 0);
    if ((*v253 & 1) != 0)
    {
      swift_release(v252);
      goto LABEL_61;
    }
    v458 = v117;
    type metadata accessor for ActionRunnerOptions(0);
    v296 = swift_retain(v460);
    v297 = BaseObjectGraph.__allocating_init(_:)(v296);
    v469[3] = ObjectType;
    v469[0] = v46;
    sub_D184((uint64_t)v469, (uint64_t)v470, &qword_3D1A70);
    v298 = v46;
    ActionOrigin.init(sender:view:)(&v471, v470, 0);
    v299 = ActionRunnerOptions.withActionOrigin(_:)(&v471);
    sub_D1D4((uint64_t)&v471, (uint64_t *)&unk_3D30E0);
    swift_release(v297);
    sub_D1D4((uint64_t)v469, &qword_3D1A70);
    v301 = Action.uniqueId.getter(v300);
    v303 = v302;
    v304 = v427;
    static ClickLocationElement.seeAllButton(uniqueID:parentUniqueID:position:)(v301);
    v305 = swift_bridgeObjectRelease(v303);
    v306 = v428;
    v307 = v426;
    v308 = v429;
    (*(void (**)(char *, char *, uint64_t, __n128))(v428 + 16))(v426, v304, v429, v305);
    v309 = *(unsigned __int8 *)(v306 + 80);
    v310 = (v309 + 16) & ~v309;
    v311 = swift_allocObject(&unk_389710, v310 + v425, v309 | 7);
    v312.n128_f64[0] = (*(double (**)(uint64_t, char *, uint64_t))(v306 + 32))(v311 + v310, v307, v308);
    v313 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_1CA934, v311, v312);
    swift_release(v299);
    v314 = swift_release(v311);
    (*(void (**)(char *, uint64_t, __n128))(v306 + 8))(v304, v308, v314);
    v216 = *(char **)&v298[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleButton];
    v473 = type metadata accessor for Action(0);
    v474 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v471 = v252;
    swift_retain(v252);
    UIControl.setAction(_:for:asPartOf:)(&v471, 0x2000, v313);
    __swift_destroy_boxed_opaque_existential_0(&v471);
    sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v315 = *(void **)&v298[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalSubStack];
    v316 = swift_allocObject(&unk_389738, 24, 7);
    *(_QWORD *)(v316 + 16) = v315;
    v317 = v315;
    v319 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v318, 0, 0, 0, sub_1CA938, v316);
    objc_msgSend(v216, "addAction:forControlEvents:", v319, 1);

    v320 = swift_allocObject(&unk_389760, 24, 7);
    *(_QWORD *)(v320 + 16) = v317;
    v321 = v317;
    v323 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v322, 0, 0, 0, sub_AF734, v320);
    objc_msgSend(v216, "addAction:forControlEvents:", v323, 488);

    objc_msgSend(v216, "setHidden:", 0);
    if (qword_3CFA28 != -1)
      swift_once(&qword_3CFA28, sub_1C6830);
    v324 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", qword_3DB1C8, 1);
    v325 = objc_msgSend(v298, "traitCollection");
    v326 = (char *)objc_msgSend(v325, "layoutDirection");

    if (v326 == (_BYTE *)&dword_0 + 1)
      v327 = 0xEC0000007466656CLL;
    else
      v327 = 0xED00007468676972;
    v328 = v324;
    v329 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v327);
    v330 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v329, v328);

    v94 = v440;
    if (!v330)
      goto LABEL_145;
    v331 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v330);
    v332 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v331);

    v333 = v432;
    AttributedString.init(_:)(v332);
    v334 = swift_getKeyPath(&unk_2FDB28);
    __chkstk_darwin(v334);
    v335 = swift_getKeyPath(&unk_2FDB58);
    v471 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v336 = sub_99EA4();
    AttributedString.subscript.setter(&v471, v335, v336);
    v117 = v458;
    v337 = sub_1C76A8(v466, v458, v333, 1);
    objc_msgSend(v453, "setAttributedText:", v337);
    swift_release(v252);

    swift_release(v313);
    (*(void (**)(char *, uint64_t))(v438 + 8))(v333, v439);
    v218 = 0;
    v95 = v462;
    v46 = v463;
LABEL_107:
    v88 = v467;
    v97 = v468;
    goto LABEL_108;
  }
  sub_D1D4(v203, &qword_3D19E8);
  v206 = type metadata accessor for Header.PrimaryAction(0);
  (*(void (**)(void **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v206 - 8) + 56))(v194, 1, 1, v206);
  v207 = (uint64_t)v450;
LABEL_60:
  sub_D1D4((uint64_t)v194, &qword_3D1E50);
LABEL_61:
  v95 = v202;
  v211 = v448;
  sub_D184(v202, v448, &qword_3D19E8);
  v94 = v440;
  if (v97((char *)v211, 1, v440) == 1)
  {
    sub_D1D4(v211, &qword_3D19E8);
    v213 = type metadata accessor for Header.PrimaryAction(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v213 - 8) + 56))(v207, 1, 1, v213);
LABEL_64:
    sub_D1D4(v207, &qword_3D1E50);
LABEL_65:
    v216 = *(char **)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleButton];
    objc_msgSend(v216, "setTitle:forState:", 0, 0);
    objc_msgSend(v216, "setImage:forState:", 0, 0);
    UIControl.removeActions(for:)(0x2000uLL);
    objc_msgSend(v216, "setHidden:", 1);
    v217 = String._bridgeToObjectiveC()();
    objc_msgSend(v453, "setText:", v217);

    v218 = 0;
    goto LABEL_108;
  }
  Header.primaryAction.getter(v212);
  ((void (*)(uint64_t, uint64_t))v88[1])(v211, v94);
  v214 = type metadata accessor for Header.PrimaryAction(0);
  v215 = *(_QWORD *)(v214 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48))(v207, 1, v214) == 1)
    goto LABEL_64;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v215 + 88))(v207, v214) != enum case for Header.PrimaryAction.menu(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v207, v214);
    goto LABEL_65;
  }
  (*(void (**)(uint64_t, uint64_t))(v215 + 96))(v207, v214);
  v254 = v431;
  (*(void (**)(char *, uint64_t, uint64_t))(v464 + 32))(v431, v207, v465);
  v458 = v117;
  v255 = String._bridgeToObjectiveC()();
  objc_msgSend(v453, "setText:", v255);

  v461 = *(char **)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleButton];
  objc_msgSend(v461, "setHidden:", 0);
  v256 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HeaderButton()), "init");
  v257 = &v256[OBJC_IVAR____TtC23ShelfKitCollectionViews12HeaderButton_touchOutsideMargin];
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)v257 = _Q0;
  *((_OWORD *)v257 + 1) = _Q0;

  v476 = v256;
  v259 = v256;
  ActionMenu.title.getter();
  v261 = v260;
  v262 = String._bridgeToObjectiveC()();
  objc_msgSend(v259, "setTitle:forState:", v262, 0, swift_bridgeObjectRelease(v261).n128_f64[0]);

  type metadata accessor for SystemGlyph(0);
  v263 = v259;
  v264 = (uint64_t)v430;
  ActionMenu.icon.getter();
  v265 = (void *)static SystemGlyph.load(artwork:)(v264);
  sub_D1D4(v264, &qword_3D0A58);
  objc_msgSend(v263, "setImage:forState:", v265, 0);

  if (v476)
  {
    v266 = v476;
    UIButton.setMenu(_:asPartOf:)(v254, v460);

    v267 = &v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton];
    swift_beginAccess(&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton], &v471, 0, 0);
    LOBYTE(v267) = *v267;
    v268 = v266;
    if ((v267 & 1) != 0)
      v269 = 1;
    else
      v269 = UIButton.pui_shouldBeHidden.getter();
    objc_msgSend(v268, "setHidden:", v269 & 1);

  }
  (*(void (**)(char *, uint64_t))(v464 + 8))(v254, v465);
  v218 = 1;
  v117 = v458;
  v216 = v461;
LABEL_108:
  v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_accessibilityHasContextAction] = v218;
  v344 = sub_1C7910(&v476, v95, v46, v460);
  sub_1C7AC8(v344);
  if ((objc_msgSend(v216, "isHidden") & 1) != 0)
  {
    objc_msgSend(v216, "setHoverStyle:", 0);
    goto LABEL_119;
  }
  v461 = v216;
  if (qword_3CF9A8 != -1)
    goto LABEL_142;
LABEL_111:
  v345 = (char *)v117;
  UIEdgeInsets.init(allSides:)(*(double *)&qword_3DB178);
  sub_E710(0, (unint64_t *)&qword_3D36D0, UIHoverStyle_ptr);
  if (qword_3CFB10 != -1)
    swift_once(&qword_3CFB10, sub_1FF0A8);
  UIEdgeInsets.init(allSides:)(*(double *)&qword_3DC8C0);
  v347 = UIEdgeInsets.subtracting(other:)(v346);
  v349 = v348;
  v351 = v350;
  v353 = v352;
  v354 = v445;
  static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)(0, -1, 1.0);
  v355 = v444;
  UIShape.inset(by:)(v347, v349, v351, v353);
  v356 = v446;
  v357 = v354;
  v358 = v447;
  (*(void (**)(char *, uint64_t))(v446 + 8))(v357, v447);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v356 + 56))(v355, 0, 1, v358);
  v359 = (void *)UIHoverStyle.init(shape:)(v355);
  v360 = v443;
  sub_D184(v95, v443, &qword_3D19E8);
  if (v97((char *)v360, 1, v94) == 1)
  {
    sub_D1D4(v360, &qword_3D19E8);
    v361 = (uint64_t)v442;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v464 + 56))(v442, 1, 1, v465);
  }
  else
  {
    v361 = (uint64_t)v442;
    Header.titleContextMenu.getter();
    ((void (*)(uint64_t, uint64_t))v88[1])(v360, v94);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48))(v361, 1, v465) != 1)
    {
      sub_D1D4(v361, &qword_3D2FA8);
      v362 = v359;
      goto LABEL_118;
    }
  }
  sub_D1D4(v361, &qword_3D2FA8);
  v362 = 0;
LABEL_118:
  objc_msgSend(v461, "setHoverStyle:", v362);

  v117 = (void **)v345;
LABEL_119:
  v363 = *(void **)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalParentStack];
  v364 = String._bridgeToObjectiveC()();
  objc_msgSend(v363, "setAccessibilityLabel:", v364, swift_bridgeObjectRelease(v117).n128_f64[0]);

  v365 = v455;
  sub_D184(v95, v455, &qword_3D19E8);
  if (v97((char *)v365, 1, v94) == 1)
  {
    v366 = v365;
LABEL_124:
    sub_D1D4(v366, &qword_3D19E8);
    goto LABEL_125;
  }
  Header.subtitleSymbolName.getter();
  v368 = v367;
  v369 = (void (*)(uint64_t, uint64_t))v88[1];
  v369(v365, v94);
  if (v368)
  {
    v370 = v437;
    sub_D184(v95, v437, &qword_3D19E8);
    v371 = v97((char *)v370, 1, v94);
    if ((_DWORD)v371 == 1)
    {
      swift_bridgeObjectRelease(v368);
      v366 = v370;
      goto LABEL_124;
    }
    v386 = v370;
    v466 = Header.subtitle.getter(v371);
    v388 = v387;
    v369(v386, v94);
    if (!v388)
    {
      swift_bridgeObjectRelease(v368);
      goto LABEL_125;
    }
    v389 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v368);
    v390 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v389);

    if (v390)
    {
      v391 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v390);
      v392 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v391);

      v393 = v432;
      AttributedString.init(_:)(v392);
      v394 = swift_getKeyPath(&unk_2FDB28);
      __chkstk_darwin(v394);
      v395 = swift_getKeyPath(&unk_2FDB58);
      if (qword_3CFA30 != -1)
        swift_once(&qword_3CFA30, sub_1C6870);
      v396 = (void *)qword_3DB1D0;
      v469[0] = qword_3DB1D0;
      v397 = sub_99EA4();
      v398 = v396;
      AttributedString.subscript.setter(v469, v395, v397);
      v399 = sub_1C76A8(v466, v388, v393, 0);
      *(_QWORD *)&v400 = swift_bridgeObjectRelease(v388).n128_u64[0];
      v376 = v452;
      objc_msgSend(v452, "setAttributedText:", v399, v400);

      (*(void (**)(char *, uint64_t))(v438 + 8))(v393, v439);
      v375 = (uint64_t)v454;
      v97 = v468;
      goto LABEL_131;
    }
    goto LABEL_144;
  }
LABEL_125:
  v372 = v451;
  sub_D184(v95, v451, &qword_3D19E8);
  v373 = v97((char *)v372, 1, v94);
  if ((_DWORD)v373 == 1)
  {
    sub_D1D4(v372, &qword_3D19E8);
    v374 = 0;
    v375 = (uint64_t)v454;
    v376 = v452;
  }
  else
  {
    Header.subtitle.getter(v373);
    v378 = v377;
    ((void (*)(uint64_t, uint64_t))v88[1])(v372, v94);
    v375 = (uint64_t)v454;
    v376 = v452;
    if (v378)
    {
      v374 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v378);
    }
    else
    {
      v374 = 0;
    }
  }
  objc_msgSend(v376, "setText:", v374);

LABEL_131:
  sub_D184(v95, v375, &qword_3D19E8);
  v379 = v97((char *)v375, 1, v94);
  if ((_DWORD)v379 == 1)
  {
    sub_D1D4(v375, &qword_3D19E8);
    v380 = 0;
    v381 = 0;
  }
  else
  {
    v380 = Header.subtitle.getter(v379);
    v381 = v382;
    ((void (*)(uint64_t, uint64_t))v88[1])(v375, v94);
  }
  v469[0] = v380;
  v469[1] = v381;
  v383 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3DBE40);
  v384 = sub_2C298();
  v385 = Optional<A>.isEmpty.getter(v383, v384);
  objc_msgSend(v376, "setHidden:", v385 & 1, swift_bridgeObjectRelease(v381).n128_f64[0]);
  swift_release(v459);

  __swift_destroy_boxed_opaque_existential_0(&v477);
}

uint64_t sub_1C4B50(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DB348);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_1C4BA8()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DB348);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_1C4BEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_99EA4();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_1C4C10()
{
  AttributeScopes.UIKitAttributes.foregroundColor.getter();
  __break(1u);
}

void sub_1C4C28()
{
  qword_3DB178 = 0x4018000000000000;
}

uint64_t sub_1C4C38(uint64_t a1)
{
  return sub_1C4C74(a1, qword_3FCE18, (uint64_t (*)(uint64_t *, uint64_t *, _QWORD *(*)()))sub_1C4D44);
}

uint64_t sub_1C4C4C(uint64_t a1)
{
  return sub_1C4C74(a1, qword_3FCE30, (uint64_t (*)(uint64_t *, uint64_t *, _QWORD *(*)()))sub_1C5440);
}

uint64_t sub_1C4C60(uint64_t a1)
{
  return sub_1C4C74(a1, qword_3FCE48, (uint64_t (*)(uint64_t *, uint64_t *, _QWORD *(*)()))sub_1C5AF4);
}

uint64_t sub_1C4C74(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, uint64_t *, _QWORD *(*)()))
{
  uint64_t v5;

  v5 = type metadata accessor for ModernTitleHeaderView.Style(0);
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  return a3(&qword_3CFA00, &qword_3DB1A0, sub_1C674C);
}

double sub_1C4CE0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for ModernTitleHeaderView.Style(0);
  __swift_allocate_value_buffer(v0, qword_3FCE60);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3FCE60);
  return sub_1C4D44(&qword_3CFA08, &qword_3DB1A8, (uint64_t)sub_1C678C, v1);
}

double sub_1C4D44@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int128 v18;
  __int128 v19;
  char v20;
  int v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  int v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  char v36;
  __int16 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double result;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  __int128 v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;

  v84 = a3;
  v92 = a2;
  v91 = a1;
  v107 = a4;
  v4 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIListContentConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CF9F8 != -1)
    swift_once(&qword_3CF9F8, sub_1C673C);
  v106 = qword_3DB198;
  if (qword_3CF470 != -1)
    swift_once(&qword_3CF470, sub_13F960);
  LODWORD(v86) = HIBYTE(word_3FB188);
  DWORD2(v86) = word_3FB188;
  v95 = qword_3FB180;
  v96 = unk_3FB178;
  v97 = qword_3FB170;
  v104 = *(_QWORD *)algn_3FB138;
  v105 = qword_3FB130;
  v102 = qword_3FB148;
  v103 = qword_3FB140;
  v100 = qword_3FB158;
  v101 = qword_3FB150;
  v98 = *((_QWORD *)&xmmword_3FB160 + 1);
  v99 = xmmword_3FB160;
  v12 = sub_DDA0((void *)qword_3FB130, *(uint64_t *)algn_3FB138, qword_3FB140, qword_3FB148, qword_3FB150, qword_3FB158, (void *)xmmword_3FB160, *((uint64_t *)&xmmword_3FB160 + 1), qword_3FB170, unk_3FB178, qword_3FB180, word_3FB188, SHIBYTE(word_3FB188));
  v13 = static UIListContentConfiguration.extraProminentInsetGroupedHeader()(v12);
  UIListContentConfiguration.textProperties.getter(v13);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v94 = UIListContentConfiguration.TextProperties.font.getter(v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v114 = qword_3FB498;
  v115 = (void *)qword_3FB490;
  v15 = qword_3FB4B0;
  v112 = qword_3FB4A8;
  v113 = qword_3FB4A0;
  v16 = qword_3FB4B8;
  v18 = xmmword_3FB4C0;
  v17 = qword_3FB4D0;
  v19 = xmmword_3FB4D8;
  v110 = xmmword_3FB4D8;
  v111 = qword_3FB4D0;
  v109 = *((_QWORD *)&xmmword_3FB4D8 + 1);
  v20 = word_3FB4E8;
  v108 = word_3FB4E8;
  v21 = HIBYTE(word_3FB4E8);
  v85 = (id)sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v77 = v20;
  v76 = v17;
  v23 = v114;
  v22 = v115;
  v25 = v112;
  v24 = v113;
  sub_DDA0(v115, v114, v113, v112, v15, v16, (void *)v18, *((uint64_t *)&v18 + 1), v76, v19, *((uint64_t *)&v19 + 1), v77, v21);
  v87 = v21;
  v93 = v15;
  v90 = v16;
  v88 = v18 >> 64;
  v89 = v18;
  v26 = sub_DDA0(v22, v23, v24, v25, v15, v16, (void *)v18, *((uint64_t *)&v18 + 1), v111, v110, v109, v108, v21);
  v27 = (void *)static UIFont.subhead.getter(v26);
  v85 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v27);

  if (*v91 != -1)
    swift_once(v91, v84);
  if ((_DWORD)v86)
    v28 = 256;
  else
    v28 = 0;
  v82 = v28 | DWORD2(v86) | 0x8000;
  v92 = (_QWORD *)*v92;
  v29 = (void *)qword_3FB490;
  v30 = qword_3FB498;
  v31 = qword_3FB4A0;
  v81 = qword_3FB4A8;
  v80 = qword_3FB4B0;
  v79 = qword_3FB4B8;
  v32 = xmmword_3FB4C0;
  v33 = qword_3FB4D0;
  v34 = xmmword_3FB4D8;
  v35 = word_3FB4E8;
  v36 = HIBYTE(word_3FB4E8);
  if (HIBYTE(word_3FB4E8))
    v37 = 256;
  else
    v37 = 0;
  LODWORD(v91) = (unsigned __int16)v37 | word_3FB4E8 | 0xFFFF8000;
  v86 = xmmword_3FB4D8;
  v84 = qword_3FB4D0;
  v83 = qword_3FB498;
  sub_DDA0((void *)qword_3FB490, qword_3FB498, qword_3FB4A0, qword_3FB4A8, qword_3FB4B0, qword_3FB4B8, (void *)xmmword_3FB4C0, *((uint64_t *)&xmmword_3FB4C0 + 1), qword_3FB4D0, xmmword_3FB4D8, *((uint64_t *)&xmmword_3FB4D8 + 1), word_3FB4E8, SHIBYTE(word_3FB4E8));
  v38 = v30;
  v39 = v31;
  v40 = v31;
  v41 = v81;
  v42 = v80;
  v43 = v79;
  v44 = sub_DDA0(v29, v38, v39, v81, v80, v79, (void *)v32, *((uint64_t *)&v32 + 1), v33, v34, *((uint64_t *)&v34 + 1), v35, v36);
  v45 = v107;
  UUID.init()(v44);
  v46 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v47 = v45 + v46[5];
  *(_QWORD *)v47 = v106;
  v48 = v104;
  *(_QWORD *)(v47 + 24) = v105;
  *(_QWORD *)(v47 + 32) = v48;
  v49 = v102;
  *(_QWORD *)(v47 + 40) = v103;
  *(_QWORD *)(v47 + 48) = v49;
  v50 = v100;
  *(_QWORD *)(v47 + 56) = v101;
  *(_QWORD *)(v47 + 64) = v50;
  v51 = v98;
  *(_QWORD *)(v47 + 72) = v99;
  *(_QWORD *)(v47 + 80) = v51;
  v52 = v96;
  *(_QWORD *)(v47 + 88) = v97;
  *(_QWORD *)(v47 + 96) = v52;
  *(_QWORD *)(v47 + 104) = v95;
  *(_WORD *)(v47 + 112) = v82;
  *(_QWORD *)(v47 + 8) = 0;
  *(_BYTE *)(v47 + 16) = 0;
  v53 = v45 + v46[6];
  *(_QWORD *)v53 = v94;
  *(_QWORD *)(v53 + 40) = 3;
  *(_OWORD *)(v53 + 8) = 0u;
  *(_OWORD *)(v53 + 24) = 0u;
  *(_OWORD *)(v53 + 48) = 0u;
  *(_OWORD *)(v53 + 64) = 0u;
  *(_OWORD *)(v53 + 74) = 0u;
  v54 = v45 + v46[7];
  v56 = v114;
  v55 = v115;
  *(_QWORD *)v54 = v115;
  *(_QWORD *)(v54 + 8) = v56;
  v58 = v112;
  v57 = v113;
  *(_QWORD *)(v54 + 16) = v113;
  *(_QWORD *)(v54 + 24) = v58;
  v59 = v93;
  v60 = v90;
  *(_QWORD *)(v54 + 32) = v93;
  *(_QWORD *)(v54 + 40) = v60;
  v61 = v89;
  v62 = v88;
  *(_QWORD *)(v54 + 48) = v89;
  *(_QWORD *)(v54 + 56) = v62;
  v63 = v110;
  v64 = v111;
  *(_QWORD *)(v54 + 64) = v111;
  *(_QWORD *)(v54 + 72) = v63;
  v65 = v109;
  *(_QWORD *)(v54 + 80) = v109;
  v66 = v108;
  *(_BYTE *)(v54 + 88) = v108;
  v67 = v87;
  *(_BYTE *)(v54 + 89) = v87;
  v68 = v45 + v46[8];
  *(_QWORD *)v68 = v55;
  *(_QWORD *)(v68 + 8) = v56;
  *(_QWORD *)(v68 + 16) = v57;
  *(_QWORD *)(v68 + 24) = v58;
  *(_QWORD *)(v68 + 32) = v59;
  *(_QWORD *)(v68 + 40) = v60;
  *(_QWORD *)(v68 + 48) = v61;
  *(_QWORD *)(v68 + 56) = v62;
  *(_QWORD *)(v68 + 64) = v64;
  *(_QWORD *)(v68 + 72) = v63;
  *(_QWORD *)(v68 + 80) = v65;
  *(_BYTE *)(v68 + 88) = v66;
  *(_BYTE *)(v68 + 89) = v67;
  *(_QWORD *)(v45 + v46[9]) = v85;
  v69 = v45 + v46[10];
  *(_QWORD *)v69 = v92;
  *(_QWORD *)(v69 + 8) = 0;
  *(_BYTE *)(v69 + 16) = 0;
  v70 = v83;
  *(_QWORD *)(v69 + 24) = v29;
  *(_QWORD *)(v69 + 32) = v70;
  *(_QWORD *)(v69 + 40) = v40;
  *(_QWORD *)(v69 + 48) = v41;
  *(_QWORD *)(v69 + 56) = v42;
  *(_QWORD *)(v69 + 64) = v43;
  *(_OWORD *)(v69 + 72) = v32;
  v71 = v84;
  v72 = v86;
  *(_QWORD *)(v69 + 88) = v84;
  *(_QWORD *)(v69 + 96) = v72;
  v73 = *((_QWORD *)&v86 + 1);
  *(_QWORD *)(v69 + 104) = *((_QWORD *)&v86 + 1);
  LOWORD(v56) = (_WORD)v91;
  *(_WORD *)(v69 + 112) = (_WORD)v91;
  v74 = v45 + v46[11];
  result = 16.0;
  *(_QWORD *)(v74 + 24) = v29;
  *(_QWORD *)(v74 + 32) = v70;
  *(_QWORD *)(v74 + 40) = v40;
  *(_QWORD *)(v74 + 48) = v41;
  *(_QWORD *)(v74 + 56) = v42;
  *(_QWORD *)(v74 + 64) = v43;
  *(_OWORD *)(v74 + 72) = v32;
  *(_QWORD *)(v74 + 88) = v71;
  *(_QWORD *)(v74 + 96) = v72;
  *(_QWORD *)(v74 + 104) = v73;
  *(_WORD *)(v74 + 112) = v56;
  *(_OWORD *)v74 = xmmword_2F0A30;
  *(_BYTE *)(v74 + 16) = 0;
  return result;
}

double sub_1C53DC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for ModernTitleHeaderView.Style(0);
  __swift_allocate_value_buffer(v0, qword_3FCE78);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3FCE78);
  return sub_1C5440(&qword_3CFA08, &qword_3DB1A8, (uint64_t)sub_1C678C, v1);
}

double sub_1C5440@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int128 v18;
  __int128 v19;
  char v20;
  int v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  char v36;
  char v37;
  __int16 v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double result;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  __int128 v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;

  v90 = a3;
  v98 = a2;
  v97 = a1;
  v112 = a4;
  v4 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIListContentConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CF470 != -1)
    swift_once(&qword_3CF470, sub_13F960);
  LODWORD(v92) = HIBYTE(word_3FB188);
  DWORD2(v92) = word_3FB188;
  v101 = qword_3FB180;
  v102 = unk_3FB178;
  v103 = qword_3FB170;
  v110 = *(_QWORD *)algn_3FB138;
  v111 = qword_3FB130;
  v108 = qword_3FB148;
  v109 = qword_3FB140;
  v106 = qword_3FB158;
  v107 = qword_3FB150;
  v104 = *((_QWORD *)&xmmword_3FB160 + 1);
  v105 = xmmword_3FB160;
  v12 = sub_DDA0((void *)qword_3FB130, *(uint64_t *)algn_3FB138, qword_3FB140, qword_3FB148, qword_3FB150, qword_3FB158, (void *)xmmword_3FB160, *((uint64_t *)&xmmword_3FB160 + 1), qword_3FB170, unk_3FB178, qword_3FB180, word_3FB188, SHIBYTE(word_3FB188));
  v13 = static UIListContentConfiguration.extraProminentInsetGroupedHeader()(v12);
  UIListContentConfiguration.textProperties.getter(v13);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v100 = UIListContentConfiguration.TextProperties.font.getter(v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v119 = qword_3FB498;
  v120 = (void *)qword_3FB490;
  v15 = qword_3FB4B0;
  v117 = qword_3FB4A8;
  v118 = qword_3FB4A0;
  v16 = qword_3FB4B8;
  v18 = xmmword_3FB4C0;
  v17 = qword_3FB4D0;
  v19 = xmmword_3FB4D8;
  v115 = xmmword_3FB4D8;
  v116 = qword_3FB4D0;
  v114 = *((_QWORD *)&xmmword_3FB4D8 + 1);
  v20 = word_3FB4E8;
  v113 = word_3FB4E8;
  v21 = HIBYTE(word_3FB4E8);
  v91 = (id)sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v85 = v20;
  v83 = v17;
  v23 = v119;
  v22 = v120;
  v25 = v117;
  v24 = v118;
  sub_DDA0(v120, v119, v118, v117, v15, v16, (void *)v18, *((uint64_t *)&v18 + 1), v83, v19, *((uint64_t *)&v19 + 1), v85, v21);
  v93 = v21;
  v99 = v15;
  v96 = v16;
  v94 = v18 >> 64;
  v95 = v18;
  v26 = sub_DDA0(v22, v23, v24, v25, v15, v16, (void *)v18, *((uint64_t *)&v18 + 1), v116, v115, v114, v113, v21);
  v27 = (void *)static UIFont.subhead.getter(v26);
  v91 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v27);

  if (*v97 != -1)
    swift_once(v97, v90);
  if ((_DWORD)v92)
    v28 = 256;
  else
    v28 = 0;
  LODWORD(v90) = v28 | DWORD2(v92) | 0x8000;
  v98 = (_QWORD *)*v98;
  v29 = qword_3FB490;
  v30 = qword_3FB498;
  v31 = qword_3FB4A0;
  v32 = qword_3FB4A8;
  v33 = qword_3FB4B0;
  v89 = qword_3FB4B8;
  v87 = *((_QWORD *)&xmmword_3FB4C0 + 1);
  v88 = (void *)xmmword_3FB4C0;
  v34 = qword_3FB4D0;
  v35 = xmmword_3FB4D8;
  v36 = word_3FB4E8;
  v37 = HIBYTE(word_3FB4E8);
  if (HIBYTE(word_3FB4E8))
    v38 = 256;
  else
    v38 = 0;
  LODWORD(v97) = (unsigned __int16)v38 | word_3FB4E8 | 0xFFFF8000;
  v92 = xmmword_3FB4D8;
  sub_DDA0((void *)qword_3FB490, qword_3FB498, qword_3FB4A0, qword_3FB4A8, qword_3FB4B0, qword_3FB4B8, (void *)xmmword_3FB4C0, *((uint64_t *)&xmmword_3FB4C0 + 1), qword_3FB4D0, xmmword_3FB4D8, *((uint64_t *)&xmmword_3FB4D8 + 1), word_3FB4E8, SHIBYTE(word_3FB4E8));
  v86 = v36;
  v84 = v34;
  v39 = v34;
  v40 = (void *)v29;
  v41 = v29;
  v42 = v30;
  v43 = v30;
  v44 = v31;
  v45 = v31;
  v46 = v32;
  v47 = v32;
  v48 = v33;
  v49 = v33;
  v50 = v89;
  v51 = v88;
  v52 = v87;
  v53 = sub_DDA0(v40, v42, v44, v46, v48, v89, v88, v87, v84, v35, *((uint64_t *)&v35 + 1), v86, v37);
  v54 = v112;
  UUID.init()(v53);
  v55 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v56 = v54 + v55[5];
  v57 = v110;
  *(_QWORD *)(v56 + 24) = v111;
  *(_QWORD *)(v56 + 32) = v57;
  v58 = v108;
  *(_QWORD *)(v56 + 40) = v109;
  *(_QWORD *)(v56 + 48) = v58;
  v59 = v106;
  *(_QWORD *)(v56 + 56) = v107;
  *(_QWORD *)(v56 + 64) = v59;
  v60 = v104;
  *(_QWORD *)(v56 + 72) = v105;
  *(_QWORD *)(v56 + 80) = v60;
  v61 = v102;
  *(_QWORD *)(v56 + 88) = v103;
  *(_QWORD *)(v56 + 96) = v61;
  *(_QWORD *)(v56 + 104) = v101;
  *(_WORD *)(v56 + 112) = v90;
  *(_OWORD *)v56 = xmmword_2FDAF0;
  *(_BYTE *)(v56 + 16) = 0;
  v62 = v54 + v55[6];
  *(_QWORD *)v62 = v100;
  *(_QWORD *)(v62 + 40) = 3;
  *(_OWORD *)(v62 + 8) = 0u;
  *(_OWORD *)(v62 + 24) = 0u;
  *(_OWORD *)(v62 + 48) = 0u;
  *(_OWORD *)(v62 + 64) = 0u;
  *(_OWORD *)(v62 + 74) = 0u;
  v63 = v54 + v55[7];
  v65 = v119;
  v64 = v120;
  *(_QWORD *)v63 = v120;
  *(_QWORD *)(v63 + 8) = v65;
  v67 = v117;
  v66 = v118;
  *(_QWORD *)(v63 + 16) = v118;
  *(_QWORD *)(v63 + 24) = v67;
  v68 = v99;
  v69 = v96;
  *(_QWORD *)(v63 + 32) = v99;
  *(_QWORD *)(v63 + 40) = v69;
  v70 = v95;
  v71 = v94;
  *(_QWORD *)(v63 + 48) = v95;
  *(_QWORD *)(v63 + 56) = v71;
  v72 = v115;
  v73 = v116;
  *(_QWORD *)(v63 + 64) = v116;
  *(_QWORD *)(v63 + 72) = v72;
  v74 = v114;
  *(_QWORD *)(v63 + 80) = v114;
  v75 = v113;
  *(_BYTE *)(v63 + 88) = v113;
  v76 = v93;
  *(_BYTE *)(v63 + 89) = v93;
  v77 = v54 + v55[8];
  *(_QWORD *)v77 = v64;
  *(_QWORD *)(v77 + 8) = v65;
  *(_QWORD *)(v77 + 16) = v66;
  *(_QWORD *)(v77 + 24) = v67;
  *(_QWORD *)(v77 + 32) = v68;
  *(_QWORD *)(v77 + 40) = v69;
  *(_QWORD *)(v77 + 48) = v70;
  *(_QWORD *)(v77 + 56) = v71;
  *(_QWORD *)(v77 + 64) = v73;
  *(_QWORD *)(v77 + 72) = v72;
  *(_QWORD *)(v77 + 80) = v74;
  *(_BYTE *)(v77 + 88) = v75;
  *(_BYTE *)(v77 + 89) = v76;
  *(_QWORD *)(v54 + v55[9]) = v91;
  v78 = v54 + v55[10];
  *(_QWORD *)v78 = v98;
  *(_QWORD *)(v78 + 8) = 0;
  *(_BYTE *)(v78 + 16) = 0;
  *(_QWORD *)(v78 + 24) = v41;
  *(_QWORD *)(v78 + 32) = v43;
  *(_QWORD *)(v78 + 40) = v45;
  *(_QWORD *)(v78 + 48) = v47;
  *(_QWORD *)(v78 + 56) = v49;
  *(_QWORD *)(v78 + 64) = v50;
  *(_QWORD *)(v78 + 72) = v51;
  *(_QWORD *)(v78 + 80) = v52;
  v79 = v92;
  *(_QWORD *)(v78 + 88) = v39;
  *(_QWORD *)(v78 + 96) = v79;
  v80 = *((_QWORD *)&v92 + 1);
  *(_QWORD *)(v78 + 104) = *((_QWORD *)&v92 + 1);
  LOWORD(v65) = (_WORD)v97;
  *(_WORD *)(v78 + 112) = (_WORD)v97;
  v81 = v54 + v55[11];
  result = 16.0;
  *(_QWORD *)(v81 + 24) = v41;
  *(_QWORD *)(v81 + 32) = v43;
  *(_QWORD *)(v81 + 40) = v45;
  *(_QWORD *)(v81 + 48) = v47;
  *(_QWORD *)(v81 + 56) = v49;
  *(_QWORD *)(v81 + 64) = v50;
  *(_QWORD *)(v81 + 72) = v51;
  *(_QWORD *)(v81 + 80) = v52;
  *(_QWORD *)(v81 + 88) = v39;
  *(_QWORD *)(v81 + 96) = v79;
  *(_QWORD *)(v81 + 104) = v80;
  *(_WORD *)(v81 + 112) = v65;
  *(_OWORD *)v81 = xmmword_2F0A30;
  *(_BYTE *)(v81 + 16) = 0;
  return result;
}

double sub_1C5A90()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for ModernTitleHeaderView.Style(0);
  __swift_allocate_value_buffer(v0, qword_3FCE90);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3FCE90);
  return sub_1C5AF4(&qword_3CFA08, &qword_3DB1A8, (uint64_t)sub_1C678C, v1);
}

double sub_1C5AF4@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int128 v20;
  __int128 v21;
  char v22;
  int v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  double v30;
  int v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  char v38;
  char v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double result;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  __int128 v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;

  v86 = a3;
  v94 = a2;
  v93 = a1;
  v108 = a4;
  v4 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIListContentConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CF9F8 != -1)
    swift_once(&qword_3CF9F8, sub_1C673C);
  v12 = *(double *)&qword_3DB198;
  v13 = static ShelfSpacer.c.getter();
  if (qword_3CF470 != -1)
    swift_once(&qword_3CF470, sub_13F960);
  LODWORD(v88) = HIBYTE(word_3FB188);
  DWORD2(v88) = word_3FB188;
  v97 = qword_3FB180;
  v98 = unk_3FB178;
  v99 = qword_3FB170;
  v106 = *(_QWORD *)algn_3FB138;
  v107 = qword_3FB130;
  v104 = qword_3FB148;
  v105 = qword_3FB140;
  v102 = qword_3FB158;
  v103 = qword_3FB150;
  v100 = *((_QWORD *)&xmmword_3FB160 + 1);
  v101 = xmmword_3FB160;
  v14 = sub_DDA0((void *)qword_3FB130, *(uint64_t *)algn_3FB138, qword_3FB140, qword_3FB148, qword_3FB150, qword_3FB158, (void *)xmmword_3FB160, *((uint64_t *)&xmmword_3FB160 + 1), qword_3FB170, unk_3FB178, qword_3FB180, word_3FB188, SHIBYTE(word_3FB188));
  v15 = static UIListContentConfiguration.extraProminentInsetGroupedHeader()(v14);
  UIListContentConfiguration.textProperties.getter(v15);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v96 = UIListContentConfiguration.TextProperties.font.getter(v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v115 = qword_3FB498;
  v116 = (void *)qword_3FB490;
  v17 = qword_3FB4B0;
  v113 = qword_3FB4A8;
  v114 = qword_3FB4A0;
  v18 = qword_3FB4B8;
  v20 = xmmword_3FB4C0;
  v19 = qword_3FB4D0;
  v21 = xmmword_3FB4D8;
  v111 = xmmword_3FB4D8;
  v112 = qword_3FB4D0;
  v110 = *((_QWORD *)&xmmword_3FB4D8 + 1);
  v22 = word_3FB4E8;
  v109 = word_3FB4E8;
  v23 = HIBYTE(word_3FB4E8);
  v87 = (id)sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v80 = v22;
  v79 = v19;
  v25 = v115;
  v24 = v116;
  v27 = v113;
  v26 = v114;
  sub_DDA0(v116, v115, v114, v113, v17, v18, (void *)v20, *((uint64_t *)&v20 + 1), v79, v21, *((uint64_t *)&v21 + 1), v80, v23);
  v89 = v23;
  v95 = v17;
  v92 = v18;
  v90 = v20 >> 64;
  v91 = v20;
  v28 = sub_DDA0(v24, v25, v26, v27, v17, v18, (void *)v20, *((uint64_t *)&v20 + 1), v112, v111, v110, v109, v23);
  v29 = (void *)static UIFont.subhead.getter(v28);
  v87 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v29);

  if (*v93 != -1)
    swift_once(v93, v86);
  v30 = v12 + v13;
  if ((_DWORD)v88)
    v31 = 256;
  else
    v31 = 0;
  v84 = v31 | DWORD2(v88) | 0x8000;
  v94 = (_QWORD *)*v94;
  v32 = (void *)qword_3FB490;
  v33 = qword_3FB498;
  v34 = qword_3FB4A0;
  v83 = qword_3FB4A8;
  v82 = qword_3FB4B0;
  v81 = qword_3FB4B8;
  v35 = xmmword_3FB4C0;
  v36 = qword_3FB4D0;
  v37 = xmmword_3FB4D8;
  v38 = word_3FB4E8;
  v39 = HIBYTE(word_3FB4E8);
  if (HIBYTE(word_3FB4E8))
    v40 = 256;
  else
    v40 = 0;
  LODWORD(v93) = (unsigned __int16)v40 | word_3FB4E8 | 0xFFFF8000;
  v88 = xmmword_3FB4D8;
  v86 = qword_3FB4D0;
  v85 = qword_3FB498;
  sub_DDA0((void *)qword_3FB490, qword_3FB498, qword_3FB4A0, qword_3FB4A8, qword_3FB4B0, qword_3FB4B8, (void *)xmmword_3FB4C0, *((uint64_t *)&xmmword_3FB4C0 + 1), qword_3FB4D0, xmmword_3FB4D8, *((uint64_t *)&xmmword_3FB4D8 + 1), word_3FB4E8, SHIBYTE(word_3FB4E8));
  v41 = v33;
  v42 = v34;
  v43 = v34;
  v44 = v83;
  v45 = v82;
  v46 = v81;
  v47 = sub_DDA0(v32, v41, v42, v83, v82, v81, (void *)v35, *((uint64_t *)&v35 + 1), v36, v37, *((uint64_t *)&v37 + 1), v38, v39);
  v48 = v108;
  UUID.init()(v47);
  v49 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v50 = v48 + v49[5];
  v51 = v106;
  *(_QWORD *)(v50 + 24) = v107;
  *(_QWORD *)(v50 + 32) = v51;
  v52 = v104;
  *(_QWORD *)(v50 + 40) = v105;
  *(_QWORD *)(v50 + 48) = v52;
  v53 = v102;
  *(_QWORD *)(v50 + 56) = v103;
  *(_QWORD *)(v50 + 64) = v53;
  v54 = v100;
  *(_QWORD *)(v50 + 72) = v101;
  *(_QWORD *)(v50 + 80) = v54;
  v55 = v98;
  *(_QWORD *)(v50 + 88) = v99;
  *(_QWORD *)(v50 + 96) = v55;
  *(_QWORD *)(v50 + 104) = v97;
  *(_WORD *)(v50 + 112) = v84;
  *(double *)v50 = v30;
  *(_QWORD *)(v50 + 8) = 0;
  *(_BYTE *)(v50 + 16) = 0;
  v56 = v48 + v49[6];
  *(_QWORD *)v56 = v96;
  *(_QWORD *)(v56 + 40) = 3;
  *(_OWORD *)(v56 + 8) = 0u;
  *(_OWORD *)(v56 + 24) = 0u;
  *(_OWORD *)(v56 + 48) = 0u;
  *(_OWORD *)(v56 + 64) = 0u;
  *(_OWORD *)(v56 + 74) = 0u;
  v57 = v48 + v49[7];
  v59 = v115;
  v58 = v116;
  *(_QWORD *)v57 = v116;
  *(_QWORD *)(v57 + 8) = v59;
  v61 = v113;
  v60 = v114;
  *(_QWORD *)(v57 + 16) = v114;
  *(_QWORD *)(v57 + 24) = v61;
  v62 = v95;
  v63 = v92;
  *(_QWORD *)(v57 + 32) = v95;
  *(_QWORD *)(v57 + 40) = v63;
  v64 = v91;
  v65 = v90;
  *(_QWORD *)(v57 + 48) = v91;
  *(_QWORD *)(v57 + 56) = v65;
  v66 = v111;
  v67 = v112;
  *(_QWORD *)(v57 + 64) = v112;
  *(_QWORD *)(v57 + 72) = v66;
  v68 = v110;
  *(_QWORD *)(v57 + 80) = v110;
  v69 = v109;
  *(_BYTE *)(v57 + 88) = v109;
  v70 = v89;
  *(_BYTE *)(v57 + 89) = v89;
  v71 = v48 + v49[8];
  *(_QWORD *)v71 = v58;
  *(_QWORD *)(v71 + 8) = v59;
  *(_QWORD *)(v71 + 16) = v60;
  *(_QWORD *)(v71 + 24) = v61;
  *(_QWORD *)(v71 + 32) = v62;
  *(_QWORD *)(v71 + 40) = v63;
  *(_QWORD *)(v71 + 48) = v64;
  *(_QWORD *)(v71 + 56) = v65;
  *(_QWORD *)(v71 + 64) = v67;
  *(_QWORD *)(v71 + 72) = v66;
  *(_QWORD *)(v71 + 80) = v68;
  *(_BYTE *)(v71 + 88) = v69;
  *(_BYTE *)(v71 + 89) = v70;
  *(_QWORD *)(v48 + v49[9]) = v87;
  v72 = v48 + v49[10];
  *(_QWORD *)v72 = v94;
  *(_QWORD *)(v72 + 8) = 0;
  *(_BYTE *)(v72 + 16) = 0;
  v73 = v85;
  *(_QWORD *)(v72 + 24) = v32;
  *(_QWORD *)(v72 + 32) = v73;
  *(_QWORD *)(v72 + 40) = v43;
  *(_QWORD *)(v72 + 48) = v44;
  *(_QWORD *)(v72 + 56) = v45;
  *(_QWORD *)(v72 + 64) = v46;
  *(_OWORD *)(v72 + 72) = v35;
  v74 = v86;
  v75 = v88;
  *(_QWORD *)(v72 + 88) = v86;
  *(_QWORD *)(v72 + 96) = v75;
  v76 = *((_QWORD *)&v88 + 1);
  *(_QWORD *)(v72 + 104) = *((_QWORD *)&v88 + 1);
  LOWORD(v59) = (_WORD)v93;
  *(_WORD *)(v72 + 112) = (_WORD)v93;
  v77 = v48 + v49[11];
  result = 16.0;
  *(_QWORD *)(v77 + 24) = v32;
  *(_QWORD *)(v77 + 32) = v73;
  *(_QWORD *)(v77 + 40) = v43;
  *(_QWORD *)(v77 + 48) = v44;
  *(_QWORD *)(v77 + 56) = v45;
  *(_QWORD *)(v77 + 64) = v46;
  *(_OWORD *)(v77 + 72) = v35;
  *(_QWORD *)(v77 + 88) = v74;
  *(_QWORD *)(v77 + 96) = v75;
  *(_QWORD *)(v77 + 104) = v76;
  *(_WORD *)(v77 + 112) = v59;
  *(_OWORD *)v77 = xmmword_2F0A30;
  *(_BYTE *)(v77 + 16) = 0;
  return result;
}

double sub_1C61A0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for ModernTitleHeaderView.Style(0);
  __swift_allocate_value_buffer(v0, qword_3FCEA8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3FCEA8);
  return sub_1C61E8(v1);
}

double sub_1C61E8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  int v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int16 v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  __int16 v29;
  uint64_t v30;
  id v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double result;
  void *v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  __int16 v54;
  id v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  __int16 v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;

  if (qword_3CF540 != -1)
    swift_once(&qword_3CF540, sub_140314);
  v81 = *((_QWORD *)&xmmword_3FBAF0 + 1);
  v82 = (void *)xmmword_3FBAF0;
  v1 = qword_3FBB08;
  v80 = qword_3FBB00;
  v2 = qword_3FBB10;
  v3 = *(_QWORD *)byte_3FBB18;
  v4 = xmmword_3FBB20;
  v5 = qword_3FBB30;
  v6 = unk_3FBB38;
  v7 = qword_3FBB40;
  v8 = word_3FBB48;
  v9 = HIBYTE(word_3FBB48);
  sub_DDA0((void *)xmmword_3FBAF0, *((uint64_t *)&xmmword_3FBAF0 + 1), qword_3FBB00, qword_3FBB08, qword_3FBB10, byte_3FBB18[0], (void *)xmmword_3FBB20, *((uint64_t *)&xmmword_3FBB20 + 1), qword_3FBB30, unk_3FBB38, qword_3FBB40, word_3FBB48, SHIBYTE(word_3FBB48));
  v78 = v9;
  v79 = v8;
  v60 = v7;
  v61 = v6;
  v63 = v5;
  v65 = v2;
  v66 = v1;
  v64 = v3;
  sub_DDA0(v82, v81, v80, v1, v2, v3, (void *)v4, *((uint64_t *)&v4 + 1), v5, v6, v7, v8, v9);
  if (qword_3CF518 != -1)
    swift_once(&qword_3CF518, sub_14013C);
  v10 = xmmword_3FB910;
  v11 = qword_3FB920;
  v12 = qword_3FB928;
  v70 = qword_3FB930;
  v71 = qword_3FB938;
  v13 = qword_3FB950;
  v72 = (void *)qword_3FB940;
  v73 = qword_3FB948;
  v76 = qword_3FB950;
  v77 = qword_3FB928;
  v15 = qword_3FB958;
  v14 = qword_3FB960;
  v74 = qword_3FB960;
  v75 = qword_3FB958;
  v16 = word_3FB968;
  v17 = HIBYTE(word_3FB968);
  v68 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  sub_DDA0((void *)v10, *((uint64_t *)&v10 + 1), v11, v12, v70, v71, v72, v73, v13, v15, v14, v16, v17);
  v57 = v17;
  v58 = v16;
  v59 = v11;
  sub_DDA0((void *)v10, *((uint64_t *)&v10 + 1), v11, v77, v70, v71, v72, v73, v76, v75, v74, v16, v17);
  v55 = objc_msgSend(v68, "configurationWithPointSize:weight:scale:", 4, 3, 15.0);
  if (qword_3CFA00 != -1)
    swift_once(&qword_3CFA00, sub_1C674C);
  v56 = qword_3DB1A0;
  if (v78)
    v18 = 256;
  else
    v18 = 0;
  v41 = v18 | v79 | 0x8000;
  v42 = xmmword_3FB910;
  v43 = qword_3FB920;
  v48 = qword_3FB930;
  v49 = qword_3FB928;
  v46 = qword_3FB940;
  v47 = qword_3FB938;
  v44 = *((_QWORD *)&xmmword_3FB910 + 1);
  v45 = qword_3FB948;
  v50 = qword_3FB950;
  v51 = qword_3FB958;
  v52 = qword_3FB960;
  if (HIBYTE(word_3FB968))
    v19 = 256;
  else
    v19 = 0;
  v53 = v19 | word_3FB968 | 0x8000;
  v20 = *((_QWORD *)&xmmword_3FBAF0 + 1);
  v69 = (void *)xmmword_3FBAF0;
  v22 = qword_3FBB00;
  v21 = qword_3FBB08;
  v23 = qword_3FBB10;
  v67 = *(_QWORD *)byte_3FBB18;
  v24 = *((_QWORD *)&xmmword_3FBB20 + 1);
  v40 = (void *)xmmword_3FBB20;
  v26 = qword_3FBB30;
  v25 = unk_3FBB38;
  v27 = HIBYTE(word_3FBB48);
  v28 = word_3FBB48;
  if (HIBYTE(word_3FBB48))
    v29 = 256;
  else
    v29 = 0;
  v54 = v29 | word_3FBB48 | 0x8000;
  v30 = qword_3FBB40;
  sub_DDA0((void *)xmmword_3FB910, *((uint64_t *)&xmmword_3FB910 + 1), qword_3FB920, qword_3FB928, qword_3FB930, qword_3FB938, (void *)qword_3FB940, qword_3FB948, qword_3FB950, qword_3FB958, qword_3FB960, word_3FB968, SHIBYTE(word_3FB968));
  v31 = sub_DDA0(v69, v20, v22, v21, v23, v67, v40, v24, v26, v25, v30, v28, v27);
  UUID.init()(v31);
  v32 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v33 = a1 + v32[5];
  *(_WORD *)(v33 + 112) = v41;
  *(_OWORD *)v33 = xmmword_2FDB00;
  *(_BYTE *)(v33 + 16) = 0;
  *(_QWORD *)(v33 + 24) = v82;
  *(_QWORD *)(v33 + 32) = v81;
  *(_QWORD *)(v33 + 40) = v80;
  *(_QWORD *)(v33 + 48) = v66;
  *(_QWORD *)(v33 + 56) = v65;
  *(_QWORD *)(v33 + 64) = v64;
  *(_OWORD *)(v33 + 72) = v4;
  *(_QWORD *)(v33 + 88) = v63;
  *(_QWORD *)(v33 + 96) = v61;
  *(_QWORD *)(v33 + 104) = v60;
  v34 = a1 + v32[6];
  *(_QWORD *)v34 = v82;
  *(_QWORD *)(v34 + 8) = v81;
  *(_QWORD *)(v34 + 16) = v80;
  *(_QWORD *)(v34 + 24) = v66;
  *(_QWORD *)(v34 + 32) = v65;
  *(_QWORD *)(v34 + 40) = v64;
  *(_OWORD *)(v34 + 48) = v4;
  *(_QWORD *)(v34 + 64) = v63;
  *(_QWORD *)(v34 + 72) = v61;
  *(_QWORD *)(v34 + 80) = v60;
  *(_BYTE *)(v34 + 88) = v79;
  *(_BYTE *)(v34 + 89) = v78;
  v35 = a1 + v32[7];
  *(_OWORD *)v35 = v10;
  *(_QWORD *)(v35 + 16) = v59;
  *(_QWORD *)(v35 + 24) = v77;
  *(_QWORD *)(v35 + 32) = v70;
  *(_QWORD *)(v35 + 40) = v71;
  *(_QWORD *)(v35 + 48) = v72;
  *(_QWORD *)(v35 + 56) = v73;
  *(_QWORD *)(v35 + 64) = v76;
  *(_QWORD *)(v35 + 72) = v75;
  *(_QWORD *)(v35 + 80) = v74;
  *(_BYTE *)(v35 + 88) = v58;
  *(_BYTE *)(v35 + 89) = v57;
  v36 = a1 + v32[8];
  *(_OWORD *)v36 = v10;
  *(_QWORD *)(v36 + 16) = v59;
  *(_QWORD *)(v36 + 24) = v77;
  *(_QWORD *)(v36 + 32) = v70;
  *(_QWORD *)(v36 + 40) = v71;
  *(_QWORD *)(v36 + 48) = v72;
  *(_QWORD *)(v36 + 56) = v73;
  *(_QWORD *)(v36 + 64) = v76;
  *(_QWORD *)(v36 + 72) = v75;
  *(_QWORD *)(v36 + 80) = v74;
  *(_BYTE *)(v36 + 88) = v58;
  *(_BYTE *)(v36 + 89) = v57;
  *(_QWORD *)(a1 + v32[9]) = v55;
  v37 = a1 + v32[10];
  *(_QWORD *)(v37 + 24) = v42;
  *(_QWORD *)(v37 + 32) = v44;
  *(_QWORD *)(v37 + 40) = v43;
  *(_QWORD *)(v37 + 48) = v49;
  *(_QWORD *)(v37 + 56) = v48;
  *(_QWORD *)(v37 + 64) = v47;
  *(_QWORD *)(v37 + 72) = v46;
  *(_QWORD *)(v37 + 80) = v45;
  *(_QWORD *)(v37 + 88) = v50;
  *(_QWORD *)(v37 + 96) = v51;
  *(_QWORD *)(v37 + 104) = v52;
  *(_WORD *)(v37 + 112) = v53;
  *(_QWORD *)v37 = v56;
  *(_QWORD *)(v37 + 8) = 0;
  *(_BYTE *)(v37 + 16) = 0;
  v38 = a1 + v32[11];
  result = 16.0;
  *(_QWORD *)(v38 + 24) = v69;
  *(_QWORD *)(v38 + 32) = v20;
  *(_QWORD *)(v38 + 40) = v22;
  *(_QWORD *)(v38 + 48) = v21;
  *(_QWORD *)(v38 + 56) = v23;
  *(_QWORD *)(v38 + 64) = v67;
  *(_QWORD *)(v38 + 72) = v40;
  *(_QWORD *)(v38 + 80) = v24;
  *(_QWORD *)(v38 + 88) = v26;
  *(_QWORD *)(v38 + 96) = v25;
  *(_QWORD *)(v38 + 104) = v30;
  *(_WORD *)(v38 + 112) = v54;
  *(_OWORD *)v38 = xmmword_2F0A30;
  *(_BYTE *)(v38 + 16) = 0;
  return result;
}

int64x2_t sub_1C6714()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4044000000000000uLL);
  xmmword_3DB180 = (__int128)result;
  return result;
}

void sub_1C672C()
{
  qword_3DB190 = 0x4028000000000000;
}

void sub_1C673C()
{
  qword_3DB198 = 0x403E000000000000;
}

_QWORD *sub_1C674C()
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x4033000000000000;
  v2 = 0x4036000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3DB1A0, &v2, &v1, &type metadata for CGFloat);
}

_QWORD *sub_1C678C()
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x4034000000000000;
  v2 = 0x4039000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3DB1A8, &v2, &v1, &type metadata for CGFloat);
}

void sub_1C67CC()
{
  qword_3DB1B0 = 0x4024000000000000;
}

id sub_1C67DC(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_labelColor, &qword_3DB1B8);
}

uint64_t sub_1C67F0()
{
  uint64_t result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  result = static UIFont.title2SemiBold.getter();
  qword_3DB1C0 = result;
  return result;
}

uint64_t sub_1C6830()
{
  uint64_t result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  result = static UIFont.title2EmphShort.getter();
  qword_3DB1C8 = result;
  return result;
}

id sub_1C6870(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_secondaryLabelColor, &qword_3DB1D0);
}

void sub_1C6884()
{
  qword_3DB1D8 = 0x4030000000000000;
}

uint64_t ModernTitleHeaderView.style.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_19C4C(v3, a1, type metadata accessor for ModernTitleHeaderView.Style);
}

uint64_t sub_1C68EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v2 = type metadata accessor for ModernTitleHeaderView.Style(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C(a1, (uint64_t)v4, v5);
  return ModernTitleHeaderView.style.setter((uint64_t)v4);
}

void sub_1C696C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  int v16;
  __int16 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int16 v27;
  unsigned int v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  int v54;
  __int16 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int16 v65;
  double v66;
  unsigned int v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  objc_class *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int16 v95;
  int v96;
  __int16 v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  unsigned __int16 v107;
  void *v108;
  unsigned int v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  void *v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  char *v131;
  void *v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  int *v147;
  uint64_t v148;
  void *v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  __int128 v157;
  uint64_t v158;
  void *v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  id v165;
  id v166;
  id v167;
  objc_super v168;
  objc_super v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  __int16 v181;
  char v182[32];

  v1 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleLabel);
  v2 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style, v182, 0, 0);
  v147 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v148 = v2;
  v3 = v2 + v147[6];
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(void **)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_QWORD *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v15 = *(unsigned __int8 *)(v3 + 88);
  v16 = *(unsigned __int8 *)(v3 + 89);
  if (v16)
    v17 = 256;
  else
    v17 = 0;
  v18 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 8];
  v159 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v164 = v1;
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 16];
  v21 = *((_QWORD *)v18 + 3);
  v22 = *((_QWORD *)v18 + 4);
  v23 = *((_QWORD *)v18 + 5);
  v24 = (void *)*((_QWORD *)v18 + 6);
  v25 = *((_QWORD *)v18 + 7);
  v154 = *((_OWORD *)v18 + 4);
  v26 = *((_QWORD *)v18 + 10);
  v27 = *((_WORD *)v18 + 44);
  *(_QWORD *)v18 = v4;
  *((_QWORD *)v18 + 1) = v5;
  *((_QWORD *)v18 + 2) = v6;
  *((_QWORD *)v18 + 3) = v7;
  *((_QWORD *)v18 + 4) = v8;
  *((_QWORD *)v18 + 5) = v9;
  *((_QWORD *)v18 + 6) = v10;
  *((_QWORD *)v18 + 7) = v11;
  *((_QWORD *)v18 + 8) = v12;
  *((_QWORD *)v18 + 9) = v13;
  *((_QWORD *)v18 + 10) = v14;
  *((_WORD *)v18 + 44) = v17 | v15;
  sub_DDA0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  sub_DC94(v159, v19, v20, v21, v22, v23, v24, v25, v154, *((uint64_t *)&v154 + 1), v26, v27);
  v28 = *((unsigned __int16 *)v18 + 44);
  if (v28 >> 8 <= 0xFE)
  {
    v138 = *((_QWORD *)v18 + 9);
    v141 = *((_QWORD *)v18 + 10);
    v135 = *((_QWORD *)v18 + 8);
    v30 = *((_QWORD *)v18 + 5);
    v29 = (void *)*((_QWORD *)v18 + 6);
    v32 = *((_QWORD *)v18 + 3);
    v31 = *((_QWORD *)v18 + 4);
    v34 = *((_QWORD *)v18 + 1);
    v33 = *((_QWORD *)v18 + 2);
    v35 = *(void **)v18;
    v149 = *(void **)v18;
    v144 = *((_QWORD *)v18 + 7);
    sub_DDA0(*(void **)v18, v34, v33, v32, v31, v30, v29, v144, v135, v138, v141, v28, (unsigned __int16)(v28 & 0x1FF) >> 8);
    v170 = v35;
    v171 = v34;
    v172 = v33;
    v173 = v32;
    v174 = v31;
    v175 = v30;
    v36 = v31;
    v176 = v29;
    v177 = v144;
    v178 = v135;
    v179 = v138;
    v180 = v141;
    v181 = v28 & 0x1FF;
    v37 = objc_msgSend(v164, "traitCollection");
    v38 = sub_1D5728((uint64_t)&v170, v37);
    v39 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v38, 0.0);

    v168.receiver = v164;
    v168.super_class = (Class)type metadata accessor for DynamicTypeLabel();
    objc_msgSendSuper2(&v168, "setFont:", v39);

    sub_DC94(v149, v34, v33, v32, v36, v30, v29, v144, v135, v138, v141, v28);
  }
  v40 = *(_QWORD *)&v131[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_subtitleLabel];
  v41 = v148 + v147[7];
  v42 = *(void **)v41;
  v43 = *(_QWORD *)(v41 + 8);
  v44 = *(_QWORD *)(v41 + 16);
  v45 = *(_QWORD *)(v41 + 24);
  v46 = *(_QWORD *)(v41 + 32);
  v47 = *(_QWORD *)(v41 + 40);
  v48 = *(void **)(v41 + 48);
  v49 = *(_QWORD *)(v41 + 56);
  v50 = *(_QWORD *)(v41 + 64);
  v51 = *(_QWORD *)(v41 + 72);
  v52 = *(_QWORD *)(v41 + 80);
  v53 = *(unsigned __int8 *)(v41 + 88);
  v54 = *(unsigned __int8 *)(v41 + 89);
  if (v54)
    v55 = 256;
  else
    v55 = 0;
  v56 = v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase;
  v57 = *(_QWORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 8);
  v160 = *(void **)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase);
  v165 = *(id *)&v131[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_subtitleLabel];
  v58 = *(_QWORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 16);
  v59 = *(_QWORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 24);
  v60 = *(_QWORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 32);
  v61 = *(_QWORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 40);
  v62 = *(void **)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 48);
  v63 = *(_QWORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 56);
  v155 = *(_OWORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 64);
  v64 = *(_QWORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 80);
  v65 = *(_WORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 88);
  *(_QWORD *)v56 = v42;
  *(_QWORD *)(v56 + 8) = v43;
  *(_QWORD *)(v56 + 16) = v44;
  *(_QWORD *)(v56 + 24) = v45;
  *(_QWORD *)(v56 + 32) = v46;
  *(_QWORD *)(v56 + 40) = v47;
  *(_QWORD *)(v56 + 48) = v48;
  *(_QWORD *)(v56 + 56) = v49;
  *(_QWORD *)(v56 + 64) = v50;
  *(_QWORD *)(v56 + 72) = v51;
  *(_QWORD *)(v56 + 80) = v52;
  *(_WORD *)(v56 + 88) = v55 | v53;
  sub_DDA0(v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54);
  sub_DC94(v160, v57, v58, v59, v60, v61, v62, v63, v155, *((uint64_t *)&v155 + 1), v64, v65);
  v67 = *(unsigned __int16 *)(v56 + 88);
  if (v67 >> 8 <= 0xFE)
  {
    v139 = *(_QWORD *)(v56 + 72);
    v142 = *(_QWORD *)(v56 + 80);
    v136 = *(_QWORD *)(v56 + 64);
    v69 = *(_QWORD *)(v56 + 40);
    v68 = *(void **)(v56 + 48);
    v70 = *(_QWORD *)(v56 + 32);
    v150 = *(void **)v56;
    v152 = *(_QWORD *)(v56 + 8);
    v156 = *(_QWORD *)(v56 + 16);
    v161 = *(_QWORD *)(v56 + 24);
    v145 = *(_QWORD *)(v56 + 56);
    sub_DDA0(*(void **)v56, v152, v156, v161, v70, v69, v68, v145, v136, v139, v142, v67, (unsigned __int16)(v67 & 0x1FF) >> 8);
    v71 = objc_msgSend(v165, "traitCollection");
    v170 = v150;
    v171 = v152;
    v172 = v156;
    v173 = v161;
    v174 = v70;
    v175 = v69;
    v72 = v70;
    v176 = v68;
    v177 = v145;
    v178 = v136;
    v179 = v139;
    v180 = v142;
    v181 = v67 & 0x1FF;
    v73 = v71;
    v74 = sub_1D5728((uint64_t)&v170, v71);
    v75 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v74, 0.0);

    v76 = (objc_class *)type metadata accessor for DynamicTypeLabel();
    v169.receiver = v165;
    v169.super_class = v76;
    objc_msgSendSuper2(&v169, "setFont:", v75);

    sub_DC94(v150, v152, v156, v161, v72, v69, v68, v145, v136, v139, v142, v67);
  }
  v77 = *(_QWORD *)&v131[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons];
  if (v77)
  {
    v78 = v77 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v77 >> 62)
      goto LABEL_30;
    v79 = *(_QWORD *)((char *)&dword_10 + (v77 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(*(_QWORD *)&v131[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons], 2);
    while (v79)
    {
      v143 = v77;
      v146 = v77 & 0xC000000000000001;
      v80 = 4;
      v140 = v79;
      while (1)
      {
        v81 = v146
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v80 - 4, v77)
            : (char *)*(id *)(v77 + 8 * v80);
        v82 = v81;
        v78 = v80 - 3;
        if (__OFADD__(v80 - 4, 1))
          break;
        v151 = v80;
        v153 = v80 - 3;
        v83 = v148 + v147[8];
        v84 = *(void **)v83;
        v85 = *(_QWORD *)(v83 + 8);
        v86 = *(_QWORD *)(v83 + 16);
        v87 = *(_QWORD *)(v83 + 24);
        v88 = *(_QWORD *)(v83 + 32);
        v89 = *(_QWORD *)(v83 + 40);
        v90 = *(void **)(v83 + 48);
        v91 = *(_QWORD *)(v83 + 56);
        v92 = *(_QWORD *)(v83 + 64);
        v93 = *(_QWORD *)(v83 + 72);
        v94 = *(_QWORD *)(v83 + 80);
        v95 = *(unsigned __int8 *)(v83 + 88);
        v96 = *(unsigned __int8 *)(v83 + 89);
        if (v96)
          v97 = 256;
        else
          v97 = 0;
        v98 = &v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
        v166 = *(id *)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
        v99 = *(_QWORD *)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 16];
        v162 = *(_QWORD *)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 8];
        v100 = *(_QWORD *)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 24];
        v101 = *(_QWORD *)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 32];
        v102 = *(_QWORD *)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 40];
        v103 = *(void **)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 48];
        v104 = *(_QWORD *)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 56];
        v157 = *(_OWORD *)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 64];
        v105 = v82;
        v106 = *(_QWORD *)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 80];
        v107 = *(_WORD *)&v82[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 88];
        *(_QWORD *)v98 = v84;
        *((_QWORD *)v98 + 1) = v85;
        *((_QWORD *)v98 + 2) = v86;
        *((_QWORD *)v98 + 3) = v87;
        *((_QWORD *)v98 + 4) = v88;
        *((_QWORD *)v98 + 5) = v89;
        *((_QWORD *)v98 + 6) = v90;
        *((_QWORD *)v98 + 7) = v91;
        *((_QWORD *)v98 + 8) = v92;
        *((_QWORD *)v98 + 9) = v93;
        *((_QWORD *)v98 + 10) = v94;
        *((_WORD *)v98 + 44) = v97 | v95;
        sub_DDA0(v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96);
        v130 = v106;
        v108 = v105;
        sub_DC94(v166, v162, v99, v100, v101, v102, v103, v104, v157, *((uint64_t *)&v157 + 1), v130, v107);
        v109 = *((unsigned __int16 *)v98 + 44);
        if (v109 >> 8 <= 0xFE)
        {
          v111 = *(void **)v98;
          v110 = *((_QWORD *)v98 + 1);
          v112 = *((_QWORD *)v98 + 3);
          v113 = *((_QWORD *)v98 + 4);
          v114 = *((_QWORD *)v98 + 5);
          v116 = (void *)*((_QWORD *)v98 + 6);
          v115 = *((_QWORD *)v98 + 7);
          v117 = *((_QWORD *)v98 + 8);
          v118 = *((_QWORD *)v98 + 9);
          v119 = *((_QWORD *)v98 + 10);
          v120 = *((_QWORD *)v98 + 2);
          v134 = v118;
          v137 = v117;
          v158 = v110;
          v163 = v115;
          v167 = (id)v113;
          sub_DDA0(v111, v110, v120, v112, v113, v114, v116, v115, v117, v118, v119, v109, (unsigned __int16)(v109 & 0x1FF) >> 8);
          v121 = objc_msgSend(v108, "titleLabel");
          if (v121)
          {
            v133 = v121;
            v122 = v116;
            v132 = v116;
            v123 = objc_msgSend((id)objc_opt_self(UIContentSizeCategoryPreference), "system");
            v124 = objc_msgSend(v123, "preferredContentSizeCategory");

            v125 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v124);
            v170 = v111;
            v171 = v158;
            v172 = v120;
            v173 = v112;
            v174 = (uint64_t)v167;
            v175 = v114;
            v176 = v122;
            v177 = v163;
            v178 = v137;
            v179 = v134;
            v180 = v119;
            v181 = v109 & 0x1FF;
            v126 = sub_1D5728((uint64_t)&v170, v125);
            v127 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v126, 0.0);

            objc_msgSend(v133, "setFont:", v127);
            sub_DC94(v111, v158, v120, v112, (uint64_t)v167, v114, v132, v163, v137, v134, v119, v109);

            goto LABEL_27;
          }
          sub_DC94(v111, v158, v120, v112, (uint64_t)v167, v114, v116, v163, v137, v134, v119, v109);
        }

LABEL_27:
        v77 = v143;
        if (v153 == v140)
          goto LABEL_34;
        v80 = v151 + 1;
      }
      __break(1u);
LABEL_30:
      if (v77 >= 0)
        v128 = v78;
      else
        v128 = v77;
      swift_bridgeObjectRetain_n(v77, 2);
      v79 = _CocoaArrayWrapper.endIndex.getter(v128);
    }
LABEL_34:
    *(_QWORD *)&v66 = swift_bridgeObjectRelease_n(v77, 2).n128_u64[0];
  }
  v129 = objc_msgSend(v131, "traitCollection", v66);
  sub_1C85F8((uint64_t)v129);

}

void (*ModernTitleHeaderView.style.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ModernTitleHeaderView.Style(0) - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style;
  swift_beginAccess(v6, v3, 0, 0);
  sub_19C4C(v6, (uint64_t)v5, type metadata accessor for ModernTitleHeaderView.Style);
  return sub_1C72D4;
}

void sub_1C72D4(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    sub_19C4C(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, type metadata accessor for ModernTitleHeaderView.Style);
    ModernTitleHeaderView.style.setter((uint64_t)v3);
    sub_FA4C((uint64_t)v4, type metadata accessor for ModernTitleHeaderView.Style);
  }
  else
  {
    ModernTitleHeaderView.style.setter(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  free(v4);
  free(v3);
  free(v2);
}

void ModernTitleHeaderView.separatorOptions.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions);
  swift_beginAccess(v3, v4, 0, 0);
  *a1 = *v3;
}

id sub_1C73A4(unsigned __int8 *a1, void **a2)
{
  int v2;
  char *v3;
  _BYTE *v4;
  double v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = (char *)*a2;
  v4 = (char *)*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions;
  *(_QWORD *)&v5 = swift_beginAccess(v4, v7, 1, 0).n128_u64[0];
  *v4 = v2;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separator], "setHidden:", v2 == 2, v5);
  return objc_msgSend(v3, "setNeedsLayout");
}

void (*ModernTitleHeaderView.separatorOptions.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_1C7480;
}

void sub_1C7480(_QWORD *a1, char a2)
{
  _QWORD *v3;
  char *v4;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = (char *)v3[3];
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separator], "setHidden:", v4[v3[4]] == 2);
    objc_msgSend(v4, "setNeedsLayout");
  }
  free(v3);
}

uint64_t ModernTitleHeaderView.forceHideButton.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton, v3, 0, 0);
  return *v1;
}

void (*ModernTitleHeaderView.forceHideButton.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_1C7584;
}

void sub_1C7584(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  char shouldBe;
  id v8;
  void *v9;
  uint64_t v10;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) != 0)
    goto LABEL_19;
  v4 = *(_QWORD *)(v3[3] + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons);
  if (!v4)
    goto LABEL_19;
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(v4, 2);
    if (v5)
      goto LABEL_5;
LABEL_18:
    swift_bridgeObjectRelease_n(v4, 2);
LABEL_19:
    free(v3);
    return;
  }
  if (v4 >= 0)
    v10 = v4 & 0xFFFFFFFFFFFFFF8;
  else
    v10 = *(_QWORD *)(v3[3] + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons);
  swift_bridgeObjectRetain_n(v4, 2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v5)
    goto LABEL_18;
LABEL_5:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v8 = *(id *)(v4 + 8 * i + 32);
      v9 = v8;
      if ((*(_BYTE *)(v3[3] + v3[4]) & 1) != 0)
        shouldBe = 1;
      else
        shouldBe = UIButton.pui_shouldBeHidden.getter();
      objc_msgSend(v9, "setHidden:", shouldBe & 1);

    }
    goto LABEL_18;
  }
  __break(1u);
}

void *sub_1C76A8(uint64_t a1, void *a2, char *a3, char a4)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  char *v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  id v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;

  v5 = v4;
  v32 = a1;
  v33 = a3;
  v8 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - v16;
  v18 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  v19 = objc_msgSend(v5, "traitCollection");
  v20 = (char *)objc_msgSend(v19, "layoutDirection");

  objc_msgSend(v18, "setBaseWritingDirection:", v20 == (_BYTE *)&dword_0 + 1);
  sub_E710(0, (unint64_t *)&qword_3D46A8, NSMutableAttributedString_ptr);
  if ((a4 & 1) != 0)
  {
    v34 = v32;
    v35 = (unint64_t)a2;
    swift_bridgeObjectRetain(a2);
    v21._countAndFlagsBits = 41154;
    v21._object = (void *)0xA200000000000000;
    String.append(_:)(v21);
    v22 = v34;
    v23 = v35;
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)(v22, v23, v10);
    v24 = v14;
    v25 = v33;
  }
  else
  {
    v34 = 41154;
    v35 = 0xA200000000000000;
    v26._countAndFlagsBits = v32;
    v26._object = a2;
    String.append(_:)(v26);
    v27 = v34;
    v28 = v35;
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)(v27, v28, v10);
    v24 = v33;
    v25 = v14;
  }
  static AttributedString.+ infix(_:_:)(v24, v25);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v29 = (void *)NSAttributedString.init(_:)(v17);
  v30 = v18;
  objc_msgSend(v29, "addAttribute:value:range:", NSParagraphStyleAttributeName, v30, 0, objc_msgSend(v29, "length"));

  return v29;
}

uint64_t sub_1C7910(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  _QWORD v27[2];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  __chkstk_darwin(v8);
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = (char *)v27 - v10;
  v12 = *a1;
  if (*a1)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v14 = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_2F11D0;
    *(_QWORD *)(v14 + 32) = v12;
    v27[0] = v14;
    specialized Array._endMutation()(v14);
    v15 = v27[0];
  }
  else
  {
    sub_D184(a2, (uint64_t)v27 - v10, &qword_3D19E8);
    v17 = type metadata accessor for Header(0, v16);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17) == 1)
    {
      sub_D1D4((uint64_t)v11, &qword_3D19E8);
      v15 = 0;
    }
    else
    {
      v19 = Header.secondaryButtons.getter();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
      if (*(_QWORD *)(v19 + 16) >= 2uLL)
        v20 = 2;
      else
        v20 = *(_QWORD *)(v19 + 16);
      v21 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeaderButtonItem(0) - 8) + 80);
      v22 = v19 + ((v21 + 32) & ~v21);
      v23 = a3;
      swift_retain(a4);
      sub_1C97A0(v19, v22, 0, (2 * v20) | 1, v23, a4);
      v15 = v24;
      swift_bridgeObjectRelease(v19);

      swift_release(a4);
    }
  }
  v25 = v12;
  return v15;
}

void sub_1C7AC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons);
  if (!v4)
    goto LABEL_15;
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons), 2);
    if (v5)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease_n(v4, 2);
LABEL_15:
    v10 = *(_QWORD *)(v1 + v3);
    *(_QWORD *)(v1 + v3) = a1;
    swift_bridgeObjectRelease(v10);
    sub_1C7E70();
    return;
  }
  if (v4 >= 0)
    v9 = v4 & 0xFFFFFFFFFFFFFF8;
  else
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons);
  swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons), 2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v5)
    goto LABEL_14;
LABEL_4:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v7, "removeFromSuperview");

    }
    goto LABEL_14;
  }
  __break(1u);
}

id sub_1C7BCC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView____lazy_storage___topConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView____lazy_storage___topConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView____lazy_storage___topConstraint];
  }
  else
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_verticalSubStack], "firstBaselineAnchor");
    v5 = objc_msgSend(v0, "topAnchor");
    v6 = objc_msgSend(v4, "constraintEqualToAnchor:", v5);

    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1C7C94()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView____lazy_storage___bottomConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView____lazy_storage___bottomConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView____lazy_storage___bottomConstraint];
  }
  else
  {
    v4 = objc_msgSend(v0, "bottomAnchor");
    v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_verticalSubStack], "lastBaselineAnchor");
    v6 = objc_msgSend(v4, "constraintEqualToAnchor:", v5);

    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_1C7D5C(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  sub_1C894C(a1);
  v3 = sub_1C7BCC();
  objc_msgSend(v3, "setActive:", 0);

  v4 = sub_1C7BCC();
  objc_msgSend(v4, "setActive:", 1);

  v5 = sub_1C7C94();
  objc_msgSend(v5, "setActive:", 0);

  v6 = sub_1C7C94();
  objc_msgSend(v6, "setActive:", 1);

  v7 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_backgroundView);
  _s23ShelfKitCollectionViews17ToolbarBlurEffectC19effectForAppearanceySo08UIVisualG0CSgSo20UIUserInterfaceStyleVFZ_0((uint64_t)objc_msgSend(a1, "userInterfaceStyle"));
  v9 = v8;
  objc_msgSend(v7, "setEffect:", v8);

}

void sub_1C7E70()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  int v23;
  __int16 v24;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unsigned __int16 v34;
  uint64_t v35;
  char *v36;
  unsigned int v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  char *v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  _QWORD v107[11];
  char v108;
  char v109;
  char v110[8];

  v101 = type metadata accessor for UIShape(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v82 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36C0);
  __chkstk_darwin(v2);
  v98 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = v0;
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons];
  if (v4)
  {
    if ((unint64_t)v4 >> 62)
    {
      if (v4 >= 0)
        v80 = v4 & 0xFFFFFFFFFFFFFF8;
      else
        v80 = v4;
      swift_bridgeObjectRetain_n(v4, 2);
      v5 = _CocoaArrayWrapper.endIndex.getter(v80);
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain_n(v4, 2);
      if (v5)
      {
LABEL_4:
        v97 = sub_E710(0, (unint64_t *)&qword_3D36D0, UIHoverStyle_ptr);
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        v6 = &v83[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style];
        v93 = v4 & 0xC000000000000001;
        swift_beginAccess(&v83[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style], v110, 0, 0);
        v7 = 0;
        v96 = v4;
        v95 = v5;
        v94 = v6;
        do
        {
          v105 = v7;
          if (v93)
            v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
          else
            v8 = (char *)*(id *)(v4 + 8 * v7 + 32);
          v9 = v8;
          v106 = v8;
          v104 = type metadata accessor for ModernTitleHeaderView.Style(0);
          v10 = &v6[*(int *)(v104 + 32)];
          v11 = *(void **)v10;
          v12 = *((_QWORD *)v10 + 1);
          v13 = *((_QWORD *)v10 + 2);
          v14 = *((_QWORD *)v10 + 3);
          v15 = *((_QWORD *)v10 + 4);
          v16 = *((_QWORD *)v10 + 5);
          v17 = (void *)*((_QWORD *)v10 + 6);
          v18 = *((_QWORD *)v10 + 7);
          v19 = *((_QWORD *)v10 + 8);
          v20 = *((_QWORD *)v10 + 9);
          v21 = *((_QWORD *)v10 + 10);
          v22 = v10[88];
          v23 = v10[89];
          if (v23)
            v24 = 256;
          else
            v24 = 0;
          v25 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
          v26 = *(void **)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
          v27 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 8];
          v28 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 16];
          v29 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 24];
          v30 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 32];
          v31 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 40];
          v32 = *(void **)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 48];
          v103 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 56];
          v102 = *(_OWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 64];
          v33 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 80];
          v34 = *((_WORD *)v25 + 44);
          *(_QWORD *)v25 = v11;
          *((_QWORD *)v25 + 1) = v12;
          *((_QWORD *)v25 + 2) = v13;
          *((_QWORD *)v25 + 3) = v14;
          *((_QWORD *)v25 + 4) = v15;
          *((_QWORD *)v25 + 5) = v16;
          *((_QWORD *)v25 + 6) = v17;
          *((_QWORD *)v25 + 7) = v18;
          *((_QWORD *)v25 + 8) = v19;
          *((_QWORD *)v25 + 9) = v20;
          *((_QWORD *)v25 + 10) = v21;
          *((_WORD *)v25 + 44) = v24 | v22;
          sub_DDA0(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
          v35 = v29;
          v36 = v106;
          sub_DC94(v26, v27, v28, v35, v30, v31, v32, v103, v102, *((uint64_t *)&v102 + 1), v33, v34);
          v37 = *((unsigned __int16 *)v25 + 44);
          if (v37 >> 8 <= 0xFE)
          {
            v39 = *(void **)v25;
            v38 = *((_QWORD *)v25 + 1);
            v40 = *((_QWORD *)v25 + 3);
            v41 = *((_QWORD *)v25 + 4);
            v42 = *((_QWORD *)v25 + 5);
            v43 = (void *)*((_QWORD *)v25 + 6);
            v44 = *((_QWORD *)v25 + 7);
            v45 = *((_QWORD *)v25 + 8);
            v46 = *((_QWORD *)v25 + 9);
            v47 = *((_QWORD *)v25 + 10);
            v48 = *((_QWORD *)v25 + 2);
            v91 = v45;
            v92 = v38;
            v103 = v41;
            *(_QWORD *)&v102 = v43;
            sub_DDA0(v39, v38, v48, v40, v41, v42, v43, v44, v45, v46, v47, v37, (unsigned __int16)(v37 & 0x1FF) >> 8);
            v49 = objc_msgSend(v36, "titleLabel");
            if (v49)
            {
              v90 = v49;
              v50 = objc_msgSend((id)objc_opt_self(UIContentSizeCategoryPreference), "system");
              v84 = (v37 >> 8) & 1;
              v51 = v42;
              v88 = v42;
              v52 = v50;
              v53 = objc_msgSend(v50, "preferredContentSizeCategory");

              v54 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v53);
              v107[0] = v39;
              v89 = v39;
              v55 = v92;
              v107[1] = v92;
              v107[2] = v48;
              v107[3] = v40;
              v86 = v48;
              v56 = v44;
              v87 = v44;
              v57 = v103;
              v107[4] = v103;
              v107[5] = v51;
              v85 = v40;
              v58 = (void *)v102;
              v107[6] = v102;
              v107[7] = v56;
              v59 = v91;
              v107[8] = v91;
              v107[9] = v46;
              v107[10] = v47;
              v108 = v37;
              v109 = v84;
              v60 = sub_1D5728((uint64_t)v107, v54);
              v61 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v60, 0.0);

              v36 = v106;
              v62 = v90;
              objc_msgSend(v90, "setFont:", v61);
              sub_DC94(v89, v55, v86, v85, v57, v88, v58, v87, v59, v46, v47, v37);

            }
            else
            {
              sub_DC94(v39, v92, v48, v40, v103, v42, (void *)v102, v44, v91, v46, v47, v37);
            }
          }
          v6 = v94;
          objc_msgSend(v36, "setPreferredSymbolConfiguration:forImageInState:", *(_QWORD *)&v94[*(int *)(v104 + 36)], 0);
          LODWORD(v63) = 1148829696;
          objc_msgSend(v36, "setContentCompressionResistancePriority:forAxis:", 0, v63);
          LODWORD(v64) = 1144750080;
          objc_msgSend(v36, "setContentCompressionResistancePriority:forAxis:", 1, v64);
          v65 = v105;
          if (qword_3CFB10 != -1)
            swift_once(&qword_3CFB10, sub_1FF0A8);
          v7 = v65 + 1;
          v66 = UIEdgeInsets.init(allSides:)(*(double *)&qword_3DC8C0);
          v67 = UIEdgeInsets.subtracting(other:)(v66);
          v69 = v68;
          v71 = v70;
          v73 = v72;
          v74 = v99;
          static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)(0, -1, 1.0);
          v75 = v98;
          UIShape.inset(by:)(v67, v69, v71, v73);
          v76 = v100;
          v77 = v74;
          v78 = v101;
          (*(void (**)(char *, uint64_t))(v100 + 8))(v77, v101);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v75, 0, 1, v78);
          v79 = (void *)UIHoverStyle.init(shape:)(v75);
          objc_msgSend(v36, "setHoverStyle:", v79);

          v4 = v96;
        }
        while (v95 != v7);
      }
    }
    swift_bridgeObjectRelease_n(v4, 2);
    v81 = objc_msgSend(v83, "traitCollection");
    sub_1C7D5C(v81);

  }
}

void sub_1C85F8(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int16 v56;
  unsigned __int16 v57;
  _BYTE v58[32];

  v3 = sub_1C7BCC();
  v4 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style, v58, 0, 0);
  v5 = type metadata accessor for ModernTitleHeaderView.Style(0);
  v6 = v4 + *(int *)(v5 + 20);
  v35 = *(void **)(v6 + 24);
  v37 = *(_QWORD *)(v6 + 32);
  v38 = *(_QWORD *)(v6 + 40);
  v40 = *(_QWORD *)(v6 + 48);
  v42 = *(_QWORD *)(v6 + 56);
  v44 = *(_QWORD *)(v6 + 64);
  v46 = *(void **)(v6 + 72);
  v48 = *(_QWORD *)(v6 + 80);
  v50 = *(_QWORD *)(v6 + 88);
  v52 = *(_QWORD *)(v6 + 96);
  v54 = *(_QWORD *)(v6 + 104);
  v56 = *(_WORD *)(v6 + 112);
  sub_1472C(v35, v37, v38, v40, v42, v44, v46, v48, v50, v52, v54, v56);
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v7 = type metadata accessor for FloatingPointRoundingRule(0);
  v34 = __swift_project_value_buffer(v7, (uint64_t)qword_3FCFB0);
  sub_1DD06C(a1, v34, 0);
  v9 = v8;
  sub_14788(v35, v37, v38, v40, v42, v44, v46, v48, v50, v52, v54, v56);
  objc_msgSend(v3, "setConstant:", v9);

  v30 = *(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_verticalSubStack);
  v32 = v5;
  v10 = v4 + *(int *)(v5 + 40);
  v11 = *(void **)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 32);
  v13 = *(_QWORD *)(v10 + 40);
  v14 = *(_QWORD *)(v10 + 56);
  v15 = *(_QWORD *)(v10 + 64);
  v33 = a1;
  v17 = *(_QWORD *)(v10 + 88);
  v16 = *(_QWORD *)(v10 + 96);
  v28 = v4;
  v18 = *(_QWORD *)(v10 + 104);
  v19 = *(_WORD *)(v10 + 112);
  v26 = *(void **)(v10 + 72);
  v27 = *(_QWORD *)(v10 + 48);
  v25 = *(_QWORD *)(v10 + 80);
  sub_1472C(v11, v12, v13, v27, v14, v15, v26, v25, v17, v16, v18, v19);
  sub_1DD06C(v33, v34, 0);
  v21 = v20;
  sub_14788(v11, v12, v13, v27, v14, v15, v26, v25, v17, v16, v18, v19);
  objc_msgSend(v30, "setSpacing:", v21);
  v31 = sub_1C7C94();
  v22 = v28 + *(int *)(v32 + 44);
  v36 = *(void **)(v22 + 24);
  v29 = *(_QWORD *)(v22 + 32);
  v39 = *(_QWORD *)(v22 + 40);
  v41 = *(_QWORD *)(v22 + 48);
  v43 = *(_QWORD *)(v22 + 56);
  v45 = *(_QWORD *)(v22 + 64);
  v47 = *(void **)(v22 + 72);
  v49 = *(_QWORD *)(v22 + 80);
  v51 = *(_QWORD *)(v22 + 88);
  v53 = *(_QWORD *)(v22 + 96);
  v55 = *(_QWORD *)(v22 + 104);
  v57 = *(_WORD *)(v22 + 112);
  sub_1472C(v36, v29, v39, v41, v43, v45, v47, v49, v51, v53, v55, v57);
  sub_1DD06C(v33, v34, 0);
  v24 = v23;
  sub_14788(v36, v29, v39, v41, v43, v45, v47, v49, v51, v53, v55, v57);
  objc_msgSend(v31, "setConstant:", v24);

}

void sub_1C894C(void *a1)
{
  uint64_t v1;
  id v3;
  unsigned __int8 v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  int v36;
  __int16 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  unsigned __int16 v46;
  void *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  void *v77;
  id v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  Class isa;
  double v86;
  double v87;
  void *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  uint64_t v94;
  void *v95;
  void *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  _QWORD v114[11];
  __int16 v115;
  char v116[32];

  v3 = objc_msgSend(a1, "preferredContentSizeCategory");
  v4 = UIContentSizeCategory.isAccessibilityCategory.getter();

  v5 = v4 & (objc_msgSend(a1, "horizontalSizeClass") == (char *)&dword_0 + 1);
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_shouldStackButtons;
  v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_shouldStackButtons);
  v94 = v1;
  v93 = v5;
  if (v7 == 2)
  {
    v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons);
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons);
    if (!v9)
    {
      v17 = v1;
      goto LABEL_29;
    }
    LOBYTE(v10) = 0;
LABEL_5:
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v9 >> 62)
      goto LABEL_24;
    v12 = *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(v9, 2);
    if (!v12)
    {
LABEL_28:
      swift_bridgeObjectRelease_n(v9, 2);
      v17 = v94;
      LOBYTE(v5) = v93;
      if ((v10 & 1) != 0)
        return;
      goto LABEL_29;
    }
    while (1)
    {
      v108 = (char)v10;
      v111 = v6;
      v13 = 0;
      v6 = 0;
      while (1)
      {
        v14 = (v9 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v9)
            : *(id *)(v9 + 8 * v6 + 32);
        v10 = v14;
        v15 = v6 + 1;
        if (__OFADD__(v6, 1))
          break;
        v16 = objc_msgSend(v14, "superview");

        if (v16)
        {
          ++v6;
          if (v15 == v12)
          {
            swift_bridgeObjectRelease_n(v9, 2);
            v17 = v94;
            LOBYTE(v5) = v93;
            v6 = v111;
            if (!(v13 & 1 | ((v108 & 1) == 0)))
              return;
LABEL_29:
            *(_BYTE *)(v17 + v6) = v5;
            v19 = *v8;
            if (!*v8)
              return;
            v92 = (unint64_t)v19 >> 62;
            if ((unint64_t)v19 >> 62)
              goto LABEL_49;
            v20 = *(char **)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8));
            swift_bridgeObjectRetain_n(v19, 2);
            v103 = v19;
            if (v20)
            {
LABEL_32:
              v101 = v17 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style;
              v102 = v19 & 0xC000000000000001;
              swift_beginAccess(v17 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style, v116, 0, 0);
              v6 = 4;
              v100 = v20;
              while (1)
              {
                if (v102)
                  v21 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v19);
                else
                  v21 = (char *)*(id *)(v19 + 8 * v6);
                v22 = v21;
                if (__OFADD__(v6 - 4, 1))
                {
                  __break(1u);
LABEL_49:
                  if (v19 < 0)
                    v67 = v19;
                  else
                    v67 = v19 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain_n(v19, 2);
                  v68 = v67;
                  v17 = v94;
                  v20 = (char *)_CocoaArrayWrapper.endIndex.getter(v68);
                  v103 = v19;
                  if (!v20)
                    break;
                  goto LABEL_32;
                }
                v104 = v6;
                v105 = v6 - 3;
                objc_msgSend(v21, "removeFromSuperview");
                v23 = v101 + *(int *)(type metadata accessor for ModernTitleHeaderView.Style(0) + 32);
                v24 = *(void **)v23;
                v25 = *(_QWORD *)(v23 + 8);
                v26 = *(_QWORD *)(v23 + 16);
                v27 = *(_QWORD *)(v23 + 24);
                v28 = *(_QWORD *)(v23 + 32);
                v29 = *(_QWORD *)(v23 + 40);
                v30 = *(void **)(v23 + 48);
                v31 = *(_QWORD *)(v23 + 56);
                v32 = *(_QWORD *)(v23 + 64);
                v33 = *(_QWORD *)(v23 + 72);
                v34 = *(_QWORD *)(v23 + 80);
                v35 = *(unsigned __int8 *)(v23 + 88);
                v36 = *(unsigned __int8 *)(v23 + 89);
                if (v36)
                  v37 = 256;
                else
                  v37 = 0;
                v38 = &v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
                v6 = *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 16];
                v109 = *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 8];
                v112 = *(void **)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
                v39 = *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 24];
                v40 = *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 32];
                v41 = *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 40];
                v42 = *(void **)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 48];
                v43 = *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 56];
                v106 = *(_OWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 64];
                v44 = v22;
                v45 = *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 80];
                v46 = *((_WORD *)v38 + 44);
                *(_QWORD *)v38 = v24;
                *((_QWORD *)v38 + 1) = v25;
                *((_QWORD *)v38 + 2) = v26;
                *((_QWORD *)v38 + 3) = v27;
                *((_QWORD *)v38 + 4) = v28;
                *((_QWORD *)v38 + 5) = v29;
                *((_QWORD *)v38 + 6) = v30;
                *((_QWORD *)v38 + 7) = v31;
                *((_QWORD *)v38 + 8) = v32;
                *((_QWORD *)v38 + 9) = v33;
                *((_QWORD *)v38 + 10) = v34;
                *((_WORD *)v38 + 44) = v37 | v35;
                sub_DDA0(v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36);
                v91 = v45;
                v47 = v44;
                sub_DC94(v112, v109, v6, v39, v40, v41, v42, v43, v106, *((uint64_t *)&v106 + 1), v91, v46);
                v48 = *((unsigned __int16 *)v38 + 44);
                if (v48 >> 8 <= 0xFE)
                {
                  v6 = *(_QWORD *)v38;
                  v49 = *((_QWORD *)v38 + 1);
                  v50 = *((_QWORD *)v38 + 3);
                  v51 = *((_QWORD *)v38 + 4);
                  v52 = *((_QWORD *)v38 + 5);
                  v54 = (void *)*((_QWORD *)v38 + 6);
                  v53 = *((_QWORD *)v38 + 7);
                  v55 = *((_QWORD *)v38 + 8);
                  v56 = *((_QWORD *)v38 + 9);
                  v57 = *((_QWORD *)v38 + 10);
                  v58 = *((_QWORD *)v38 + 2);
                  v98 = v56;
                  v99 = v55;
                  v107 = v49;
                  v110 = v53;
                  v113 = v51;
                  sub_DDA0((void *)v6, v49, v58, v50, v51, v52, v54, v53, v55, v56, v57, v48, (unsigned __int16)(v48 & 0x1FF) >> 8);
                  v59 = objc_msgSend(v47, "titleLabel");
                  if (v59)
                  {
                    v97 = v59;
                    v60 = v54;
                    v95 = v54;
                    v61 = objc_msgSend((id)objc_opt_self(UIContentSizeCategoryPreference), "system");
                    v62 = objc_msgSend(v61, "preferredContentSizeCategory");

                    v63 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v62);
                    v114[0] = v6;
                    v96 = (void *)v6;
                    v6 = v107;
                    v114[1] = v107;
                    v114[2] = v58;
                    v114[3] = v50;
                    v114[4] = v113;
                    v114[5] = v52;
                    v114[6] = v60;
                    v114[7] = v110;
                    v114[8] = v99;
                    v114[9] = v98;
                    v114[10] = v57;
                    v115 = v48 & 0x1FF;
                    v64 = sub_1D5728((uint64_t)v114, v63);
                    v65 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v64, 0.0);

                    objc_msgSend(v97, "setFont:", v65);
                    sub_DC94(v96, v107, v58, v50, v113, v52, v95, v110, v99, v98, v57, v48);

                    goto LABEL_45;
                  }
                  sub_DC94((void *)v6, v107, v58, v50, v113, v52, v54, v110, v99, v98, v57, v48);
                }

LABEL_45:
                v20 = v100;
                if ((char *)v105 == v100)
                {
                  v19 = v103;
                  v66 = swift_bridgeObjectRelease(v103).n128_u64[0];
                  v17 = v94;
                  goto LABEL_54;
                }
                v19 = v103;
                v6 = v104 + 1;
              }
            }
            v66 = swift_bridgeObjectRelease(v19).n128_u64[0];
LABEL_54:
            v69 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalButtonStack;
            v70 = *(void **)(v17 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalButtonStack);
            if (v70)
              objc_msgSend(v70, "removeFromSuperview", *(double *)&v66);
            if (v92)
            {
              if (v19 < 0)
                v74 = v19;
              else
                v74 = v19 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v19);
              v71 = (char *)_CocoaArrayWrapper.endIndex.getter(v74);
              swift_bridgeObjectRelease(v19);
              if (v71 == (_BYTE *)&dword_0 + 2)
                goto LABEL_69;
LABEL_58:
              if (v71 == (_BYTE *)&dword_0 + 1 && v20)
              {
                if ((v19 & 0xC000000000000001) != 0)
                {
                  swift_bridgeObjectRetain(v19);
                  v71 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
                  swift_bridgeObjectRelease(v19);
                }
                else
                {
                  if (!*(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8)))
                  {
                    __break(1u);
                    goto LABEL_89;
                  }
                  v71 = (char *)*(id *)(v19 + 32);
                }
                *(_QWORD *)&v72 = swift_bridgeObjectRelease(v19).n128_u64[0];
                if (v93)
                  v73 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_verticalSubStack;
                else
                  v73 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalParentStack;
                objc_msgSend(*(id *)(v94 + v73), "addArrangedSubview:", v71, v72);
                goto LABEL_83;
              }
            }
            else
            {
              v71 = *(char **)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8));
              if (v71 != (_BYTE *)&dword_0 + 2)
                goto LABEL_58;
LABEL_69:
              if (v20)
              {
                if ((v19 & 0xC000000000000001) != 0)
                {
                  swift_bridgeObjectRetain(v19);
                  v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
                  swift_bridgeObjectRelease(v19);
                  if (__OFSUB__(v20, 1))
                  {
                    __break(1u);
                    return;
                  }
                  v19 = v103;
                  v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 1, v103);
LABEL_75:
                  v80 = v79;
                  swift_bridgeObjectRelease(v19);
                  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
                  v82 = swift_allocObject(v81, 48, 7);
                  *(_OWORD *)(v82 + 16) = xmmword_2EFC90;
                  *(_QWORD *)(v82 + 32) = v78;
                  *(_QWORD *)(v82 + 40) = v80;
                  v114[0] = v82;
                  specialized Array._endMutation()(v82);
                  v83 = v114[0];
                  v84 = objc_allocWithZone((Class)UIStackView);
                  sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
                  v71 = (char *)v78;
                  v20 = v80;
                  isa = Array._bridgeToObjectiveC()().super.isa;
                  v6 = (uint64_t)objc_msgSend(v84, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v83).n128_f64[0]);

                  objc_msgSend((id)v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                  objc_msgSend((id)v6, "setAxis:", 0);
                  objc_msgSend((id)v6, "setAlignment:", 2);
                  objc_msgSend((id)v6, "setDistribution:", 3);
                  if (qword_3CFA38 != -1)
                    goto LABEL_92;
                  goto LABEL_76;
                }
                v75 = *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8));
                if (v75)
                {
                  v76 = v20 - 1;
                  if (!__OFSUB__(v20, 1))
                  {
                    if ((unint64_t)v76 < v75)
                    {
                      v77 = *(void **)(v19 + 32 + 8 * (_QWORD)v76);
                      v78 = *(id *)(v19 + 32);
                      v79 = v77;
                      goto LABEL_75;
                    }
LABEL_91:
                    __break(1u);
LABEL_92:
                    swift_once(&qword_3CFA38, sub_1C6884);
LABEL_76:
                    objc_msgSend((id)v6, "setSpacing:", *(double *)&qword_3DB1D8);
                    LODWORD(v86) = 1144750080;
                    objc_msgSend((id)v6, "setContentCompressionResistancePriority:forAxis:", 0, v86);
                    LODWORD(v87) = 1144750080;
                    objc_msgSend((id)v6, "setContentCompressionResistancePriority:forAxis:", 1, v87);
                    v88 = *(void **)(v94 + v69);
                    *(_QWORD *)(v94 + v69) = v6;
                    v89 = (id)v6;

                    if (v93)
                      v90 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_verticalSubStack;
                    else
                      v90 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalParentStack;
                    objc_msgSend(*(id *)(v94 + v90), "addArrangedSubview:", v89);

LABEL_83:
                    return;
                  }
LABEL_90:
                  __break(1u);
                  goto LABEL_91;
                }
LABEL_89:
                __break(1u);
                goto LABEL_90;
              }
            }
            swift_bridgeObjectRelease(v19);
            return;
          }
        }
        else
        {
          v13 = 1;
          if (v15 == v12)
          {
            swift_bridgeObjectRelease_n(v9, 2);
            v17 = v94;
            LOBYTE(v5) = v93;
            v6 = v111;
            goto LABEL_29;
          }
          ++v6;
        }
      }
      __break(1u);
LABEL_24:
      if (v9 >= 0)
        v18 = v11;
      else
        v18 = v9;
      swift_bridgeObjectRetain_n(v9, 2);
      v12 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (!v12)
        goto LABEL_28;
    }
  }
  LODWORD(v10) = ((v7 & 1) == 0) ^ v5;
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons);
  if (v9)
    goto LABEL_5;
  v17 = v1;
  if (!(_DWORD)v10)
    goto LABEL_29;
}

Swift::Void __swiftcall ModernTitleHeaderView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  id v3;
  objc_super v4;

  isa = a1.value.super.isa;
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, "traitCollectionDidChange:", isa);
  v3 = objc_msgSend(v1, "traitCollection");
  sub_1C7D5C(v3);

  objc_msgSend(v1, "setNeedsUpdateConstraints");
}

Swift::Void __swiftcall ModernTitleHeaderView.updateConstraints()()
{
  void *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, "updateConstraints");
  v1 = objc_msgSend(v0, "traitCollection");
  sub_1C85F8((uint64_t)v1);

}

Swift::Void __swiftcall ModernTitleHeaderView.layoutSubviews()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  id v11;
  double v12;
  char v13[24];
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, "layoutSubviews");
  objc_msgSend(v0, "directionalLayoutMargins");
  v2 = v1;
  objc_msgSend(v0, "directionalLayoutMargins");
  v4 = v3;
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions];
  *(_QWORD *)&v6 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions], v13, 0, 0).n128_u64[0];
  if (*v5)
  {
    objc_msgSend(v0, "bounds", v6);
    v8 = v7 - v2 - v4;
  }
  else
  {
    objc_msgSend(v0, "bounds", v6);
    v8 = v9 - v2;
  }
  v10 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separator];
  v11 = objc_msgSend(v0, "traitCollection");
  v12 = static Separator.thickness(compatibleWith:)();

  objc_msgSend(v10, "setFrame:", v2, 0.0, v8, v12);
}

void sub_1C97A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v31 = a2;
  v12 = type metadata accessor for HeaderButtonItem(0);
  v32 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = (unint64_t)_swiftEmptyArrayStorage;
  v15 = a4 >> 1;
  if (a4 >> 1 != a3)
  {
    v30[0] = a1;
    v30[1] = v6;
    swift_unknownObjectRetain(a1);
    v16 = v31;
    while (1)
    {
      if (a3 >= v15)
      {
        __break(1u);
        return;
      }
      sub_19C4C(v16 + *(_QWORD *)(v32 + 72) * a3, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
      v17 = objc_msgSend(a5, "traitCollection");
      v18 = objc_msgSend(v17, "horizontalSizeClass");

      sub_2434D4((uint64_t)v18, a6);
      if (v19)
      {
        v20 = v19;
        v21 = type metadata accessor for DynamicTypeButton();
        v22 = swift_dynamicCastClass(v20, v21);
        if (v22)
        {
          v23 = v22;
          v24 = a5;
          v25 = a6;
          v26 = sub_FA4C((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
          v28 = *(_QWORD *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8));
          v27 = *(_QWORD *)((char *)&dword_18 + (v33 & 0xFFFFFFFFFFFFFF8));
          if (v28 >= v27 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
          v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v23);
          specialized Array._endMutation()(v29);
          a6 = v25;
          a5 = v24;
          v16 = v31;
          goto LABEL_5;
        }

      }
      sub_FA4C((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
LABEL_5:
      if (v15 == ++a3)
      {
        swift_unknownObjectRelease(v30[0]);
        return;
      }
    }
  }
}

_QWORD *sub_1C9988(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int16 v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void *v54;
  double v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t);
  int v60;
  void *v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  double v68;
  double v69;
  int64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int16 v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  void *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int16 v116;
  _QWORD *v117;

  v86 = a2;
  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v88 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v87 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v6)
  {
    v79 = v2;
    v117 = _swiftEmptyArrayStorage;
    sub_F3470(0, v6, 0);
    v8 = a1 + 72;
    result = v117;
    v84 = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
    v83 = enum case for FloatingPointRoundingRule.toNearestOrEven(_:);
    v82 = enum case for FloatingPointRoundingRule.up(_:);
    v81 = enum case for FloatingPointRoundingRule.down(_:);
    v80 = enum case for FloatingPointRoundingRule.towardZero(_:);
    v78 = enum case for FloatingPointRoundingRule.awayFromZero(_:);
    v9 = v4;
    v85 = v4;
    do
    {
      v10 = v9;
      v90 = result;
      v91 = v6;
      v12 = *(double *)(v8 - 40);
      v11 = *(double *)(v8 - 32);
      v13 = *(unsigned __int8 *)(v8 - 24);
      v14 = *(void **)(v8 - 16);
      v15 = *(_QWORD *)(v8 - 8);
      v17 = *(_QWORD *)v8;
      v16 = *(_QWORD *)(v8 + 8);
      v19 = *(_QWORD *)(v8 + 16);
      v18 = *(_QWORD *)(v8 + 24);
      v20 = *(void **)(v8 + 32);
      v21 = *(_QWORD *)(v8 + 40);
      v23 = *(_QWORD *)(v8 + 48);
      v22 = *(_QWORD *)(v8 + 56);
      v24 = *(_QWORD *)(v8 + 64);
      v89 = v8;
      v103 = *(unsigned __int16 *)(v8 + 72);
      v102 = v24;
      v104 = v22;
      v25 = v23;
      v101 = v14;
      v96 = v15;
      v26 = v18;
      v99 = v21;
      v100 = v20;
      sub_1472C(v14, v15, v17, v16, v19, v18, v20, v21, v23, v22, v24, v103);
      if (qword_3CFAB0 != -1)
        swift_once(&qword_3CFAB0, sub_1DD388);
      v27 = v17;
      v94 = __swift_project_value_buffer(v10, (uint64_t)qword_3FCFB0);
      v95 = v25;
      if (v13)
      {
        sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
        v74 = v25;
        v29 = v100;
        v28 = *(double *)&v101;
        v30 = v96;
        v31 = v99;
        v32 = sub_1472C(v101, v96, v27, v16, v19, v26, v100, v99, v74, v104, v102, v103);
        v33 = static UITraitCollection.interfaceIdiomIsMac.getter(v32);
        v34 = v28;
        v35 = v95;
        if ((v33 & 1) == 0)
          v12 = v11;
      }
      else
      {
        v75 = v25;
        v35 = v25;
        v29 = v100;
        v34 = *(double *)&v101;
        v30 = v96;
        v31 = v99;
        sub_1472C(v101, v96, v27, v16, v19, v26, v100, v99, v75, v104, v102, v103);
      }
      v97 = v26;
      v98 = v19;
      v105 = v34;
      v106 = v30;
      v107 = v27;
      v108 = v16;
      v109 = v19;
      v110 = v26;
      v111 = v29;
      v112 = v31;
      v113 = v35;
      v114 = v104;
      v115 = v102;
      v116 = v103;
      v36 = v30;
      if (qword_3CF688 != -1)
        swift_once(&qword_3CF688, sub_14401C);
      v37 = sub_143914((void *)qword_3FCA50);
      v105 = v34;
      v106 = v30;
      v107 = v27;
      v108 = v16;
      v109 = v98;
      v110 = v97;
      v111 = v100;
      v112 = v31;
      v113 = v35;
      v114 = v104;
      v38 = v102;
      v115 = v102;
      v93 = v27;
      v39 = v31;
      v40 = v16;
      v41 = v103;
      v116 = v103;
      v42 = sub_143914(v86);
      objc_msgSend(v37, "_bodyLeading");
      v44 = v43;
      objc_msgSend(v42, "_bodyLeading");
      v46 = v45;

      v76 = v41;
      v47 = v39;
      v48 = v93;
      v49 = v104;
      v50 = v36;
      v92 = v40;
      v51 = v40;
      v52 = v98;
      v53 = v97;
      v54 = v100;
      sub_14788(v101, v50, v93, v51, v98, v97, v100, v47, v35, v104, v38, v76);
      v55 = v12 / v44 * v46;
      v105 = v55;
      v56 = v88;
      v57 = v87;
      v58 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v94, v85);
      v59 = *(uint64_t (**)(char *, uint64_t))(v56 + 88);
      v9 = v58;
      v60 = v59(v57, v58);
      v61 = v54;
      if (v60 == v84)
      {
        sub_14788(v101, v96, v48, v92, v52, v53, v54, v99, v95, v49, v38, v103);
        v62 = round(v55);
      }
      else
      {
        v63 = v95;
        v64 = v92;
        v65 = v53;
        v66 = v99;
        if (v60 == v83)
        {
          sub_14788(v101, v96, v48, v92, v52, v65, v61, v99, v95, v104, v102, v103);
          v62 = rint(v55);
        }
        else
        {
          v67 = v65;
          if (v60 == v82)
          {
            sub_14788(v101, v96, v48, v92, v52, v65, v61, v99, v95, v104, v102, v103);
            v62 = ceil(v55);
          }
          else if (v60 == v81)
          {
            sub_14788(v101, v96, v48, v92, v52, v65, v61, v99, v95, v104, v102, v103);
            v62 = floor(v55);
          }
          else if (v60 == v80)
          {
            sub_14788(v101, v96, v48, v92, v52, v65, v61, v99, v95, v104, v102, v103);
            v62 = trunc(v55);
          }
          else if (v60 == v78)
          {
            sub_14788(v101, v96, v48, v92, v52, v65, v61, v99, v95, v104, v102, v103);
            v68 = ceil(v55);
            v69 = floor(v55);
            if (v55 < 0.0)
              v62 = v69;
            else
              v62 = v68;
          }
          else
          {
            Double._roundSlowPath(_:)(v94);
            (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v58);
            sub_14788(v101, v96, v48, v64, v52, v67, v61, v66, v63, v104, v102, v103);
            v62 = v105;
          }
        }
      }
      v70 = v91;
      result = v90;
      v71 = v89;
      v117 = v90;
      v73 = v90[2];
      v72 = v90[3];
      if (v73 >= v72 >> 1)
      {
        sub_F3470(v72 > 1, v73 + 1, 1);
        result = v117;
      }
      result[2] = v73 + 1;
      *(double *)&result[v73 + 4] = v62;
      v8 = v71 + 120;
      v6 = v70 - 1;
    }
    while (v6);
  }
  return result;
}

double _s23ShelfKitCollectionViews21ModernTitleHeaderViewC19roughHeightEstimate6header5style6traits12CoreGraphics7CGFloatV0aB00G0V_AC5StyleVSo07UITraitC0CtFZ_0(void *a1, char *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *inited;
  int *v10;
  char *v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  __n128 v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  id v46;
  id v47;
  char v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int16 v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int16 v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  double v92;
  double *v93;
  uint64_t v94;
  uint64_t v95;
  double *v96;
  double v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  int *v107;
  char *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  char v112[136];

  v109 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E50);
  __chkstk_darwin(v5);
  v7 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DB350);
  inited = (_QWORD *)swift_initStackObject(v8, v112);
  *((_OWORD *)inited + 1) = xmmword_2F03C0;
  v10 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v11 = &a2[v10[5]];
  v12 = v11[16];
  v13 = (void *)*((_QWORD *)v11 + 3);
  v14 = *((_QWORD *)v11 + 4);
  v15 = *((_QWORD *)v11 + 5);
  v16 = *((_QWORD *)v11 + 6);
  v17 = *((_QWORD *)v11 + 7);
  v18 = *((_QWORD *)v11 + 8);
  v19 = (void *)*((_QWORD *)v11 + 9);
  v20 = *((_QWORD *)v11 + 10);
  v21 = *((_QWORD *)v11 + 11);
  v22 = *((_QWORD *)v11 + 12);
  v23 = *((_QWORD *)v11 + 13);
  v24 = *((_WORD *)v11 + 56);
  *((_OWORD *)inited + 2) = *(_OWORD *)v11;
  *((_BYTE *)inited + 48) = v12;
  inited[7] = v13;
  inited[8] = v14;
  inited[9] = v15;
  inited[10] = v16;
  inited[11] = v17;
  inited[12] = v18;
  inited[13] = v19;
  inited[14] = v20;
  inited[15] = v21;
  inited[16] = v22;
  inited[17] = v23;
  *((_WORD *)inited + 72) = v24;
  v25 = sub_1472C(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  v26 = Header.subtitle.getter(v25);
  v28 = v27;
  v110 = v26;
  v111 = v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3DBE40);
  v30 = sub_2C298();
  v31 = Optional<A>.isEmpty.getter(v29, v30);
  v32 = swift_bridgeObjectRelease(v28);
  if ((v31 & 1) == 0)
  {
    v33 = &a2[v10[10]];
    v105 = *(_QWORD *)v33;
    v104 = *((_QWORD *)v33 + 1);
    LODWORD(v103) = v33[16];
    v34 = (void *)*((_QWORD *)v33 + 3);
    v35 = *((_QWORD *)v33 + 4);
    v36 = *((_QWORD *)v33 + 5);
    v37 = *((_QWORD *)v33 + 6);
    v106 = a1;
    v39 = *((_QWORD *)v33 + 7);
    v38 = *((_QWORD *)v33 + 8);
    v108 = a2;
    v107 = v10;
    v40 = (void *)*((_QWORD *)v33 + 9);
    v41 = *((_QWORD *)v33 + 10);
    v99 = *((_QWORD *)v33 + 11);
    v100 = *((_QWORD *)v33 + 12);
    v101 = *((_QWORD *)v33 + 13);
    LODWORD(v102) = *((unsigned __int16 *)v33 + 56);
    sub_1472C(v34, v35, v36, v37, v39, v38, v40, v41, v99, v100, v101, v102);
    inited = sub_20EF18((int *)((char *)&dword_0 + 1), 2, 1, inited);
    inited[2] = 2;
    v42 = v104;
    inited[19] = v105;
    inited[20] = v42;
    *((_BYTE *)inited + 168) = v103;
    inited[22] = v34;
    inited[23] = v35;
    inited[24] = v36;
    inited[25] = v37;
    inited[26] = v39;
    inited[27] = v38;
    inited[28] = v40;
    inited[29] = v41;
    a2 = v108;
    v10 = v107;
    v43 = v100;
    inited[30] = v99;
    inited[31] = v43;
    inited[32] = v101;
    *((_WORD *)inited + 132) = v102;
  }
  Header.primaryAction.getter(v32);
  v44 = type metadata accessor for Header.PrimaryAction(0);
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v7, 1, v44);
  sub_D1D4((uint64_t)v7, &qword_3D1E50);
  if (v45 != 1)
  {
    v46 = v109;
    v47 = objc_msgSend(v109, "preferredContentSizeCategory");
    v48 = UIContentSizeCategory.isAccessibilityCategory.getter();

    v49 = (char *)objc_msgSend(v46, "horizontalSizeClass");
    if ((v48 & 1) != 0 && v49 == (_BYTE *)&dword_0 + 1)
    {
      v107 = v10;
      v50 = v10[10];
      v108 = a2;
      v51 = &a2[v50];
      v105 = *(_QWORD *)v51;
      v104 = *((_QWORD *)v51 + 1);
      LODWORD(v103) = v51[16];
      v52 = *((_QWORD *)v51 + 4);
      v53 = *((_QWORD *)v51 + 5);
      v54 = *((_QWORD *)v51 + 6);
      v55 = *((_QWORD *)v51 + 7);
      v56 = *((_QWORD *)v51 + 8);
      v58 = (void *)*((_QWORD *)v51 + 9);
      v57 = *((_QWORD *)v51 + 10);
      v59 = *((_QWORD *)v51 + 11);
      v60 = *((_QWORD *)v51 + 12);
      v61 = *((_QWORD *)v51 + 13);
      v62 = *((_WORD *)v51 + 56);
      v106 = (id)*((_QWORD *)v51 + 3);
      v102 = v52;
      v101 = v53;
      v100 = v54;
      v99 = v55;
      sub_1472C(v106, v52, v53, v54, v55, v56, v58, v57, v59, v60, v61, v62);
      v64 = inited[2];
      v63 = inited[3];
      if (v64 >= v63 >> 1)
        inited = sub_20EF18((_QWORD *)(v63 > 1), v64 + 1, 1, inited);
      inited[2] = v64 + 1;
      v65 = &inited[15 * v64];
      v66 = v104;
      v65[4] = v105;
      v65[5] = v66;
      *((_BYTE *)v65 + 48) = v103;
      v67 = v102;
      v65[7] = v106;
      v65[8] = v67;
      v68 = v100;
      v65[9] = v101;
      v65[10] = v68;
      v65[11] = v99;
      v65[12] = v56;
      v65[13] = v58;
      v65[14] = v57;
      v65[15] = v59;
      v65[16] = v60;
      v65[17] = v61;
      *((_WORD *)v65 + 72) = v62;
      a2 = v108;
      v10 = v107;
    }
  }
  v69 = &a2[v10[11]];
  v107 = *(int **)v69;
  v106 = (id)*((_QWORD *)v69 + 1);
  LODWORD(v105) = v69[16];
  v70 = *((_QWORD *)v69 + 4);
  v71 = *((_QWORD *)v69 + 5);
  v72 = *((_QWORD *)v69 + 6);
  v73 = *((_QWORD *)v69 + 7);
  v74 = *((_QWORD *)v69 + 8);
  v76 = (void *)*((_QWORD *)v69 + 9);
  v75 = *((_QWORD *)v69 + 10);
  v77 = *((_QWORD *)v69 + 11);
  v78 = *((_QWORD *)v69 + 12);
  v79 = *((_QWORD *)v69 + 13);
  v80 = *((_WORD *)v69 + 56);
  v108 = (char *)*((_QWORD *)v69 + 3);
  v104 = v70;
  v103 = v71;
  v102 = v72;
  v101 = v73;
  sub_1472C(v108, v70, v71, v72, v73, v74, v76, v75, v77, v78, v79, v80);
  v82 = inited[2];
  v81 = inited[3];
  if (v82 >= v81 >> 1)
    inited = sub_20EF18((_QWORD *)(v81 > 1), v82 + 1, 1, inited);
  inited[2] = v82 + 1;
  v83 = &inited[15 * v82];
  v84 = v106;
  v83[4] = v107;
  v83[5] = v84;
  *((_BYTE *)v83 + 48) = v105;
  v85 = v104;
  v83[7] = v108;
  v83[8] = v85;
  v86 = v102;
  v83[9] = v103;
  v83[10] = v86;
  v83[11] = v101;
  v83[12] = v74;
  v83[13] = v76;
  v83[14] = v75;
  v83[15] = v77;
  v83[16] = v78;
  v83[17] = v79;
  *((_WORD *)v83 + 72) = v80;
  v87 = v109;
  swift_bridgeObjectRetain(inited);
  v89 = sub_1C9988(v88, v87);
  swift_bridgeObjectRelease(inited);

  v90 = v89[2];
  if (v90)
  {
    if (v90 == 1)
    {
      v91 = 0;
      v92 = 0.0;
    }
    else
    {
      v91 = v90 & 0x7FFFFFFFFFFFFFFELL;
      v93 = (double *)(v89 + 5);
      v92 = 0.0;
      v94 = v90 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v92 = v92 + *(v93 - 1) + *v93;
        v93 += 2;
        v94 -= 2;
      }
      while (v94);
      if (v90 == v91)
        goto LABEL_20;
    }
    v95 = v90 - v91;
    v96 = (double *)&v89[v91 + 4];
    do
    {
      v97 = *v96++;
      v92 = v92 + v97;
      --v95;
    }
    while (v95);
LABEL_20:
    swift_bridgeObjectRelease(inited);
    goto LABEL_21;
  }
  swift_bridgeObjectRelease(inited);
  v92 = 0.0;
LABEL_21:
  swift_bridgeObjectRelease(v89);
  return v92;
}

void sub_1CA87C()
{
  AttributeScopes.UIKitAttributes.foregroundColor.getter();
  __break(1u);
}

void sub_1CA898(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_99EA4();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_1CA8BC()
{
  return 8;
}

uint64_t sub_1CA8C8(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1CA8D0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1CA8E0()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DB348);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_1CA924(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

id sub_1CA938()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.5);
}

uint64_t sub_1CA94C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ClickLocationElement(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1CA9D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClickLocationElement(0) - 8) + 80);
  return MetricsFieldsContext.addSiblingClickLocation(_:)(v0 + ((v1 + 16) & ~v1));
}

char *_s23ShelfKitCollectionViews21ModernTitleHeaderViewC5frameACSo6CGRectV_tcfc_0()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  double v15;
  double v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  char *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  double v55;
  double v56;
  id v57;
  double v58;
  double v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  Class isa;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  double v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  Class v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  double v84;
  double v85;
  id v86;
  double v87;
  double v88;
  double v89;
  id v90;
  double v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  id v100;
  void *v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  void *v126;
  uint64_t v127;
  id v128;
  id v129;
  double v130;
  double v131;
  double v132;
  double v133;
  uint64_t v134;
  id v135;
  void *v136;
  uint64_t v137;
  Class v138;
  objc_class *ObjectType;
  uint64_t v141;
  uint64_t v142;
  objc_super v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  char v156;
  char v157[32];

  ObjectType = (objc_class *)swift_getObjectType();
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_artworkCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView____lazy_storage___topConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalButtonStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView____lazy_storage___bottomConstraint] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_accessibilityHasContextAction] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_shouldStackButtons] = 2;
  v1 = qword_3CF9B0;
  v2 = v0;
  if (v1 != -1)
    swift_once(&qword_3CF9B0, sub_1C4C38);
  v3 = type metadata accessor for ModernTitleHeaderView.Style(0);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_3FCE18);
  v5 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style];
  sub_19C4C(v4, (uint64_t)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style], type metadata accessor for ModernTitleHeaderView.Style);
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions] = 2;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separator;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separator] = v6;
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v6;
  v10 = objc_msgSend(v8, "separatorColor");
  objc_msgSend(v9, "setBackgroundColor:", v10);

  objc_msgSend(*(id *)&v2[v7], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_backgroundView] = v11;
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = type metadata accessor for ArtworkView(0);
  v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)), "init");
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_artworkView;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_artworkView] = v13;
  LODWORD(v15) = 1144750080;
  objc_msgSend(v13, "setContentCompressionResistancePriority:forAxis:", 0, v15);
  LODWORD(v16) = 1144750080;
  objc_msgSend(v13, "setContentCompressionResistancePriority:forAxis:", 1, v16);
  type metadata accessor for DynamicTypeLabel();
  swift_beginAccess(v5, v157, 0, 0);
  v17 = &v5[*(int *)(v3 + 24)];
  v18 = *(void **)v17;
  v19 = *((_QWORD *)v17 + 1);
  v20 = *((_QWORD *)v17 + 2);
  v21 = *((_QWORD *)v17 + 3);
  v22 = *((_QWORD *)v17 + 4);
  v23 = *((_QWORD *)v17 + 5);
  v24 = (void *)*((_QWORD *)v17 + 6);
  v25 = *((_QWORD *)v17 + 7);
  v26 = *((_QWORD *)v17 + 8);
  v27 = *((_QWORD *)v17 + 9);
  v28 = *((_QWORD *)v17 + 10);
  v29 = v17[88];
  LOBYTE(v17) = v17[89];
  v144 = (uint64_t)v18;
  v145 = v19;
  v146 = v20;
  v147 = v21;
  v148 = v22;
  v149 = v23;
  v150 = v24;
  v151 = v25;
  v152 = v26;
  v153 = v27;
  v154 = v28;
  v155 = v29;
  v156 = (char)v17;
  sub_DDA0(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, (char)v17);
  v30 = sub_A96AC((uint64_t)&v144, 0, 0, 1);
  v31 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleLabel;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleLabel] = v30;
  v32 = qword_3CFA18;
  v33 = v30;
  if (v32 != -1)
    swift_once(&qword_3CFA18, sub_1C67DC);
  objc_msgSend(v33, "setTextColor:", qword_3DB1B8);

  v34 = *(void **)&v2[v31];
  LODWORD(v35) = 1144750080;
  objc_msgSend(v34, "setContentCompressionResistancePriority:forAxis:", 0, v35);
  LODWORD(v36) = 1144750080;
  objc_msgSend(v34, "setContentCompressionResistancePriority:forAxis:", 1, v36);
  v37 = &v5[*(int *)(v3 + 28)];
  v38 = *(void **)v37;
  v39 = *((_QWORD *)v37 + 1);
  v40 = *((_QWORD *)v37 + 2);
  v41 = *((_QWORD *)v37 + 3);
  v42 = *((_QWORD *)v37 + 4);
  v43 = *((_QWORD *)v37 + 5);
  v44 = (void *)*((_QWORD *)v37 + 6);
  v45 = *((_QWORD *)v37 + 7);
  v46 = *((_QWORD *)v37 + 8);
  v47 = *((_QWORD *)v37 + 9);
  v48 = *((_QWORD *)v37 + 10);
  v49 = v37[88];
  LOBYTE(v37) = v37[89];
  v144 = (uint64_t)v38;
  v145 = v39;
  v146 = v40;
  v147 = v41;
  v148 = v42;
  v149 = v43;
  v150 = v44;
  v151 = v45;
  v152 = v46;
  v153 = v47;
  v154 = v48;
  v155 = v49;
  v156 = (char)v37;
  sub_DDA0(v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, (char)v37);
  v50 = sub_A96AC((uint64_t)&v144, 0, 0, 1);
  v51 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_subtitleLabel;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_subtitleLabel] = v50;
  v52 = qword_3CFA30;
  v53 = v50;
  if (v52 != -1)
    swift_once(&qword_3CFA30, sub_1C6870);
  objc_msgSend(v53, "setTextColor:", qword_3DB1D0);

  v54 = *(void **)&v2[v51];
  LODWORD(v55) = 1144750080;
  objc_msgSend(v54, "setContentCompressionResistancePriority:forAxis:", 0, v55);
  LODWORD(v56) = 1144750080;
  objc_msgSend(v54, "setContentCompressionResistancePriority:forAxis:", 1, v56);
  v57 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_verticalSubStack] = v57;
  objc_msgSend(v57, "setAlignment:", 1);
  objc_msgSend(v57, "setAxis:", 1);
  objc_msgSend(v57, "setBaselineRelativeArrangement:", 1);
  LODWORD(v58) = 1144750080;
  objc_msgSend(v57, "setContentCompressionResistancePriority:forAxis:", 0, v58);
  LODWORD(v59) = 1144750080;
  objc_msgSend(v57, "setContentCompressionResistancePriority:forAxis:", 1, v59);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v60 = swift_allocObject(v142, 48, 7);
  *(_OWORD *)(v60 + 16) = xmmword_2EFC90;
  v61 = *(void **)&v2[v14];
  *(_QWORD *)(v60 + 32) = v61;
  *(_QWORD *)(v60 + 40) = v57;
  v144 = v60;
  specialized Array._endMutation()(v60);
  v62 = v144;
  v63 = objc_allocWithZone((Class)UIStackView);
  sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v64 = v61;
  v65 = v57;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v67 = objc_msgSend(v63, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v62).n128_f64[0]);

  v68 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalSubStack;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalSubStack] = v67;
  objc_msgSend(v67, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v67, "setAxis:", 0);
  objc_msgSend(v67, "setAlignment:", 3);
  v69 = qword_3CF9F0;
  v70 = v67;
  if (v69 != -1)
    swift_once(&qword_3CF9F0, sub_1C672C);
  objc_msgSend(v70, "setSpacing:", *(double *)&qword_3DB190);

  v71 = *(void **)&v2[v68];
  LODWORD(v72) = 1144750080;
  objc_msgSend(v71, "setContentCompressionResistancePriority:forAxis:", 0, v72);
  LODWORD(v73) = 1144750080;
  objc_msgSend(v71, "setContentCompressionResistancePriority:forAxis:", 1, v73);
  v74 = swift_allocObject(v142, 40, 7);
  *(_OWORD *)(v74 + 16) = xmmword_2F11D0;
  *(_QWORD *)(v74 + 32) = v71;
  v144 = v74;
  specialized Array._endMutation()(v74);
  v75 = v144;
  v76 = objc_allocWithZone((Class)UIStackView);
  v77 = v71;
  v78 = Array._bridgeToObjectiveC()().super.isa;
  v79 = objc_msgSend(v76, "initWithArrangedSubviews:", v78, swift_bridgeObjectRelease(v75).n128_f64[0]);

  v80 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalParentStack;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalParentStack] = v79;
  objc_msgSend(v79, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v79, "setAxis:", 0);
  objc_msgSend(v79, "setAlignment:", 2);
  objc_msgSend(v79, "setDistribution:", 3);
  v81 = qword_3CFA10;
  v82 = v79;
  if (v81 != -1)
    swift_once(&qword_3CFA10, sub_1C67CC);
  objc_msgSend(v82, "setSpacing:", *(double *)&qword_3DB1B0);

  v83 = *(void **)&v2[v80];
  LODWORD(v84) = 1144750080;
  objc_msgSend(v83, "setContentCompressionResistancePriority:forAxis:", 0, v84);
  LODWORD(v85) = 1144750080;
  objc_msgSend(v83, "setContentCompressionResistancePriority:forAxis:", 1, v85);
  v86 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleButton] = v86;
  objc_msgSend(v86, "setPreferredMenuElementOrder:", 2);
  objc_msgSend(v86, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v87) = 1.0;
  objc_msgSend(v86, "setContentCompressionResistancePriority:forAxis:", 0, v87);
  LODWORD(v88) = 1.0;
  objc_msgSend(v86, "setContentCompressionResistancePriority:forAxis:", 1, v88);
  LODWORD(v89) = 1.0;
  objc_msgSend(v86, "setContentHuggingPriority:forAxis:", 0, v89);
  v90 = v86;
  LODWORD(v91) = 1.0;
  objc_msgSend(v90, "setContentHuggingPriority:forAxis:", 1, v91);

  v143.receiver = v2;
  v143.super_class = ObjectType;
  v92 = (char *)objc_msgSendSuper2(&v143, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v93 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_backgroundView;
  v94 = *(_QWORD *)&v92[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_backgroundView];
  v95 = v92;
  objc_msgSend(v95, "addSubview:", v94);
  v96 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalParentStack;
  objc_msgSend(v95, "addSubview:", *(_QWORD *)&v95[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalParentStack]);
  v141 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleButton;
  objc_msgSend(v95, "addSubview:", *(_QWORD *)&v95[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_titleButton]);
  objc_msgSend(v95, "addSubview:", *(_QWORD *)&v95[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separator]);
  objc_msgSend(v95, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v95, "setPreservesSuperviewLayoutMargins:", 1);
  v97 = swift_allocObject(v142, 112, 7);
  *(_OWORD *)(v97 + 16) = xmmword_2F5BD0;
  v98 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_artworkView;
  v99 = objc_msgSend(*(id *)&v95[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_artworkView], "widthAnchor");
  if (qword_3CF9E8 != -1)
    swift_once(&qword_3CF9E8, sub_1C6714);
  v100 = objc_msgSend(v99, "constraintEqualToConstant:", *(double *)&xmmword_3DB180);

  *(_QWORD *)(v97 + 32) = v100;
  v101 = *(void **)&v95[v98];
  v102 = objc_msgSend(v101, "heightAnchor");
  v103 = objc_msgSend(v101, "widthAnchor");
  v104 = objc_msgSend(v102, "constraintEqualToAnchor:", v103);

  *(_QWORD *)(v97 + 40) = v104;
  v105 = objc_msgSend(*(id *)&v92[v93], "topAnchor");
  v106 = objc_msgSend(v95, "topAnchor");
  v107 = objc_msgSend(v105, "constraintEqualToAnchor:", v106);

  *(_QWORD *)(v97 + 48) = v107;
  v108 = objc_msgSend(*(id *)&v92[v93], "bottomAnchor");
  v109 = objc_msgSend(v95, "bottomAnchor");
  v110 = objc_msgSend(v108, "constraintEqualToAnchor:", v109);

  *(_QWORD *)(v97 + 56) = v110;
  v111 = objc_msgSend(*(id *)&v92[v93], "leadingAnchor");
  v112 = objc_msgSend(v95, "leadingAnchor");
  v113 = objc_msgSend(v111, "constraintEqualToAnchor:", v112);

  *(_QWORD *)(v97 + 64) = v113;
  v114 = objc_msgSend(*(id *)&v92[v93], "trailingAnchor");
  v115 = objc_msgSend(v95, "trailingAnchor");
  v116 = objc_msgSend(v114, "constraintEqualToAnchor:", v115);

  *(_QWORD *)(v97 + 72) = v116;
  *(_QWORD *)(v97 + 80) = sub_1C7BCC();
  v117 = objc_msgSend(*(id *)&v95[v96], "leadingAnchor");
  v118 = objc_msgSend(v95, "layoutMarginsGuide");
  v119 = objc_msgSend(v118, "leadingAnchor");

  v120 = objc_msgSend(v117, "constraintEqualToAnchor:", v119);
  *(_QWORD *)(v97 + 88) = v120;
  v121 = objc_msgSend(*(id *)&v95[v96], "trailingAnchor");
  v122 = objc_msgSend(v95, "layoutMarginsGuide");
  v123 = objc_msgSend(v122, "trailingAnchor");

  v124 = objc_msgSend(v121, "constraintEqualToAnchor:", v123);
  *(_QWORD *)(v97 + 96) = v124;
  v125 = sub_1C7C94();
  *(_QWORD *)(v97 + 104) = v125;
  v144 = v97;
  specialized Array._endMutation()(v125);
  v126 = *(void **)&v95[v141];
  v127 = qword_3CF9A8;
  v128 = *(id *)&v95[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalSubStack];
  v129 = v126;
  if (v127 != -1)
    swift_once(&qword_3CF9A8, sub_1C4C28);
  v130 = NSDirectionalEdgeInsets.init(allSides:)(-*(double *)&qword_3DB178);
  v134 = UIView.fullSizeSubviewConstraints(_:insets:)(v130, v131, v132, v133);

  sub_1F6D9C(v134);
  v135 = objc_msgSend(v95, "traitCollection");
  sub_1C7D5C(v135);

  sub_1C696C();
  v136 = (void *)objc_opt_self(NSLayoutConstraint);
  v137 = v144;
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  v138 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v136, "activateConstraints:", v138, swift_bridgeObjectRelease(v137).n128_f64[0]);

  return v95;
}

unint64_t sub_1CB7A8()
{
  unint64_t result;

  result = qword_3DB240;
  if (!qword_3DB240)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ModernTitleHeaderView.SeparatorOptions, &type metadata for ModernTitleHeaderView.SeparatorOptions);
    atomic_store(result, (unint64_t *)&qword_3DB240);
  }
  return result;
}

uint64_t sub_1CB7EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_style;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_19C4C(v3, a2, type metadata accessor for ModernTitleHeaderView.Style);
}

void sub_1CB84C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_1CB8A0(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_1CB8F0(char *a1)
{
  ModernTitleHeaderView.forceHideButton.setter(*a1);
}

uint64_t sub_1CB914()
{
  return type metadata accessor for ModernTitleHeaderView(0);
}

uint64_t type metadata accessor for ModernTitleHeaderView(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3DB290, (uint64_t)&nominal type descriptor for ModernTitleHeaderView);
}

uint64_t sub_1CB930(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[19];

  result = type metadata accessor for ModernTitleHeaderView.Style(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_2FDC98;
    v4[2] = &unk_2FDCB0;
    v4[3] = &unk_2FDCC8;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = &unk_2FDCC8;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = &unk_2FDCC8;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[15] = &unk_2FDCC8;
    v4[16] = &unk_2FDCC8;
    v4[17] = &unk_2FDCB0;
    v4[18] = &unk_2FDC98;
    return swift_updateClassMetadata2(a1, 256, 19, v4, a1 + 80);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ModernTitleHeaderView.Style(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  __int16 v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  int *v99;
  _QWORD *v100;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v82 = *a2;
    *a1 = *a2;
    v81 = v82 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v82);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v97 = a2;
    v99 = a3;
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
    v11 = (void *)*((_QWORD *)v10 + 3);
    v12 = *((_QWORD *)v10 + 4);
    v13 = *((_QWORD *)v10 + 5);
    v14 = *((_QWORD *)v10 + 6);
    v15 = *((_QWORD *)v10 + 7);
    v16 = *((_QWORD *)v10 + 8);
    v18 = (void *)*((_QWORD *)v10 + 9);
    v17 = *((_QWORD *)v10 + 10);
    v100 = a1;
    v19 = *((_QWORD *)v10 + 11);
    v89 = *((_QWORD *)v10 + 12);
    v94 = *((_QWORD *)v10 + 13);
    v95 = *((_WORD *)v10 + 56);
    sub_1472C(v11, v12, v13, v14, v15, v16, v18, v17, v19, v89, v94, v95);
    *((_QWORD *)v9 + 3) = v11;
    *((_QWORD *)v9 + 4) = v12;
    *((_QWORD *)v9 + 5) = v13;
    *((_QWORD *)v9 + 6) = v14;
    *((_QWORD *)v9 + 7) = v15;
    *((_QWORD *)v9 + 8) = v16;
    *((_QWORD *)v9 + 9) = v18;
    *((_QWORD *)v9 + 10) = v17;
    *((_QWORD *)v9 + 11) = v19;
    *((_QWORD *)v9 + 12) = v89;
    *((_QWORD *)v9 + 13) = v94;
    *((_WORD *)v9 + 56) = v95;
    v20 = v99[6];
    v21 = (char *)v100 + v20;
    v22 = (char *)v97 + v20;
    v23 = *(void **)v22;
    v24 = *((_QWORD *)v22 + 1);
    v25 = *((_QWORD *)v22 + 2);
    v26 = *((_QWORD *)v22 + 3);
    v27 = *((_QWORD *)v22 + 4);
    v28 = *((_QWORD *)v22 + 5);
    v29 = (void *)*((_QWORD *)v22 + 6);
    v30 = *((_QWORD *)v22 + 7);
    v31 = *((_QWORD *)v22 + 8);
    v85 = *((_QWORD *)v22 + 9);
    v90 = *((_QWORD *)v22 + 10);
    LOBYTE(v94) = v22[88];
    LOBYTE(v95) = v22[89];
    sub_DDA0(*(void **)v22, v24, v25, v26, v27, v28, v29, v30, v31, v85, v90, v94, v95);
    *(_QWORD *)v21 = v23;
    *((_QWORD *)v21 + 1) = v24;
    *((_QWORD *)v21 + 2) = v25;
    *((_QWORD *)v21 + 3) = v26;
    *((_QWORD *)v21 + 4) = v27;
    *((_QWORD *)v21 + 5) = v28;
    *((_QWORD *)v21 + 6) = v29;
    *((_QWORD *)v21 + 7) = v30;
    *((_QWORD *)v21 + 8) = v31;
    *((_QWORD *)v21 + 9) = v85;
    *((_QWORD *)v21 + 10) = v90;
    v21[88] = v94;
    v21[89] = v95;
    v32 = v99[7];
    v33 = (char *)v100 + v32;
    v34 = (char *)v97 + v32;
    v35 = *(void **)v34;
    v36 = *((_QWORD *)v34 + 1);
    v37 = *((_QWORD *)v34 + 2);
    v38 = *((_QWORD *)v34 + 3);
    v39 = *((_QWORD *)v34 + 4);
    v40 = *((_QWORD *)v34 + 5);
    v41 = (void *)*((_QWORD *)v34 + 6);
    v42 = *((_QWORD *)v34 + 7);
    v43 = *((_QWORD *)v34 + 8);
    v86 = *((_QWORD *)v34 + 9);
    v91 = *((_QWORD *)v34 + 10);
    LOBYTE(v94) = v34[88];
    LOBYTE(v95) = v34[89];
    sub_DDA0(*(void **)v34, v36, v37, v38, v39, v40, v41, v42, v43, v86, v91, v94, v95);
    *(_QWORD *)v33 = v35;
    *((_QWORD *)v33 + 1) = v36;
    *((_QWORD *)v33 + 2) = v37;
    *((_QWORD *)v33 + 3) = v38;
    *((_QWORD *)v33 + 4) = v39;
    *((_QWORD *)v33 + 5) = v40;
    *((_QWORD *)v33 + 6) = v41;
    *((_QWORD *)v33 + 7) = v42;
    *((_QWORD *)v33 + 8) = v43;
    *((_QWORD *)v33 + 9) = v86;
    *((_QWORD *)v33 + 10) = v91;
    v33[88] = v94;
    v33[89] = v95;
    v44 = v99[8];
    v45 = (char *)v100 + v44;
    v46 = (char *)v97 + v44;
    v47 = *(void **)v46;
    v48 = *((_QWORD *)v46 + 1);
    v49 = *((_QWORD *)v46 + 2);
    v50 = *((_QWORD *)v46 + 3);
    v51 = *((_QWORD *)v46 + 4);
    v52 = *((_QWORD *)v46 + 5);
    v53 = (void *)*((_QWORD *)v46 + 6);
    v54 = *((_QWORD *)v46 + 7);
    v55 = *((_QWORD *)v46 + 8);
    v87 = *((_QWORD *)v46 + 9);
    v92 = *((_QWORD *)v46 + 10);
    LOBYTE(v94) = v46[88];
    LOBYTE(v95) = v46[89];
    sub_DDA0(*(void **)v46, v48, v49, v50, v51, v52, v53, v54, v55, v87, v92, v94, v95);
    *(_QWORD *)v45 = v47;
    *((_QWORD *)v45 + 1) = v48;
    *((_QWORD *)v45 + 2) = v49;
    *((_QWORD *)v45 + 3) = v50;
    *((_QWORD *)v45 + 4) = v51;
    *((_QWORD *)v45 + 5) = v52;
    *((_QWORD *)v45 + 6) = v53;
    *((_QWORD *)v45 + 7) = v54;
    *((_QWORD *)v45 + 8) = v55;
    *((_QWORD *)v45 + 9) = v87;
    *((_QWORD *)v45 + 10) = v92;
    v45[88] = v94;
    v45[89] = v95;
    v56 = v99[9];
    v57 = v99[10];
    v58 = *(void **)((char *)v97 + v56);
    *(_QWORD *)((char *)v100 + v56) = v58;
    v59 = (char *)v100 + v57;
    *(_OWORD *)v59 = *(_OWORD *)((char *)v97 + v57);
    v59[16] = *((_BYTE *)v97 + v57 + 16);
    v60 = *(_QWORD *)((char *)v97 + v57 + 40);
    v88 = *(_QWORD *)((char *)v97 + v57 + 32);
    v93 = *(void **)((char *)v97 + v57 + 24);
    v61 = *(_QWORD *)((char *)v97 + v57 + 48);
    v62 = *(_QWORD *)((char *)v97 + v57 + 56);
    v63 = *(_QWORD *)((char *)v97 + v57 + 64);
    v64 = *(void **)((char *)v97 + v57 + 72);
    v65 = *(_QWORD *)((char *)v97 + v57 + 88);
    v67 = *(_QWORD *)((char *)v97 + v57 + 96);
    v66 = *(_QWORD *)((char *)v97 + v57 + 104);
    v84 = *(_QWORD *)((char *)v97 + v57 + 80);
    LOWORD(v48) = *(_WORD *)((char *)v97 + v57 + 112);
    v68 = v58;
    sub_1472C(v93, v88, v60, v61, v62, v63, v64, v84, v65, v67, v66, v48);
    *((_QWORD *)v59 + 3) = v93;
    *((_QWORD *)v59 + 4) = v88;
    *((_QWORD *)v59 + 5) = v60;
    *((_QWORD *)v59 + 6) = v61;
    *((_QWORD *)v59 + 7) = v62;
    *((_QWORD *)v59 + 8) = v63;
    *((_QWORD *)v59 + 9) = v64;
    *((_QWORD *)v59 + 10) = v84;
    *((_QWORD *)v59 + 11) = v65;
    *((_QWORD *)v59 + 12) = v67;
    *((_QWORD *)v59 + 13) = v66;
    *((_WORD *)v59 + 56) = v48;
    v69 = v99[11];
    v70 = (char *)v100 + v69;
    v71 = (char *)v97 + v69;
    *(_OWORD *)v70 = *(_OWORD *)v71;
    v70[16] = v71[16];
    v72 = (void *)*((_QWORD *)v71 + 3);
    v73 = *((_QWORD *)v71 + 4);
    v74 = *((_QWORD *)v71 + 5);
    v75 = *((_QWORD *)v71 + 6);
    v76 = *((_QWORD *)v71 + 7);
    v77 = *((_QWORD *)v71 + 8);
    v78 = (void *)*((_QWORD *)v71 + 9);
    v79 = *((_QWORD *)v71 + 10);
    v80 = *((_QWORD *)v71 + 11);
    v96 = *((_QWORD *)v71 + 12);
    v98 = *((_QWORD *)v71 + 13);
    LOWORD(v99) = *((_WORD *)v71 + 56);
    sub_1472C(v72, v73, v74, v75, v76, v77, v78, v79, v80, v96, v98, (unsigned __int16)v99);
    *((_QWORD *)v70 + 3) = v72;
    *((_QWORD *)v70 + 4) = v73;
    *((_QWORD *)v70 + 5) = v74;
    *((_QWORD *)v70 + 6) = v75;
    *((_QWORD *)v70 + 7) = v76;
    *((_QWORD *)v70 + 8) = v77;
    *((_QWORD *)v70 + 9) = v78;
    *((_QWORD *)v70 + 10) = v79;
    *((_QWORD *)v70 + 11) = v80;
    *((_QWORD *)v70 + 12) = v96;
    *((_QWORD *)v70 + 13) = v98;
    *((_WORD *)v70 + 56) = (_WORD)v99;
    return v100;
  }
  return (_QWORD *)v81;
}

void destroy for ModernTitleHeaderView.Style(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_14788(*(id *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(void **)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_WORD *)(v5 + 112));
  v6 = a1 + a2[6];
  sub_DCC8(*(void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(void **)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 80), *(_BYTE *)(v6 + 88), *(_BYTE *)(v6 + 89));
  v7 = a1 + a2[7];
  sub_DCC8(*(void **)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(void **)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(_QWORD *)(v7 + 72), *(_QWORD *)(v7 + 80), *(_BYTE *)(v7 + 88), *(_BYTE *)(v7 + 89));
  v8 = a1 + a2[8];
  sub_DCC8(*(void **)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(void **)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 72), *(_QWORD *)(v8 + 80), *(_BYTE *)(v8 + 88), *(_BYTE *)(v8 + 89));

  v9 = a1 + a2[10];
  sub_14788(*(id *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), *(_QWORD *)(v9 + 48), *(_QWORD *)(v9 + 56), *(_QWORD *)(v9 + 64), *(void **)(v9 + 72), *(_QWORD *)(v9 + 80), *(_QWORD *)(v9 + 88), *(_QWORD *)(v9 + 96), *(_QWORD *)(v9 + 104), *(_WORD *)(v9 + 112));
  v10 = a1 + a2[11];
  sub_14788(*(id *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_QWORD *)(v10 + 64), *(void **)(v10 + 72), *(_QWORD *)(v10 + 80), *(_QWORD *)(v10 + 88), *(_QWORD *)(v10 + 96), *(_QWORD *)(v10 + 104), *(_WORD *)(v10 + 112));
}

uint64_t initializeWithCopy for ModernTitleHeaderView.Style(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  __int16 v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;

  v96 = a2;
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = *(void **)(v9 + 24);
  v11 = *(_QWORD *)(v9 + 32);
  v12 = *(_QWORD *)(v9 + 40);
  v13 = *(_QWORD *)(v9 + 48);
  v14 = *(_QWORD *)(v9 + 56);
  v15 = *(_QWORD *)(v9 + 64);
  v17 = *(void **)(v9 + 72);
  v16 = *(_QWORD *)(v9 + 80);
  v18 = *(_QWORD *)(v9 + 88);
  v86 = *(_QWORD *)(v9 + 96);
  v91 = *(_QWORD *)(v9 + 104);
  v92 = *(_WORD *)(v9 + 112);
  sub_1472C(v10, v11, v12, v13, v14, v15, v17, v16, v18, v86, v91, v92);
  *(_QWORD *)(v8 + 24) = v10;
  *(_QWORD *)(v8 + 32) = v11;
  *(_QWORD *)(v8 + 40) = v12;
  *(_QWORD *)(v8 + 48) = v13;
  *(_QWORD *)(v8 + 56) = v14;
  *(_QWORD *)(v8 + 64) = v15;
  *(_QWORD *)(v8 + 72) = v17;
  *(_QWORD *)(v8 + 80) = v16;
  *(_QWORD *)(v8 + 88) = v18;
  *(_QWORD *)(v8 + 96) = v86;
  *(_QWORD *)(v8 + 104) = v91;
  *(_WORD *)(v8 + 112) = v92;
  v19 = a3[6];
  v20 = a1 + v19;
  v21 = v96 + v19;
  v22 = *(void **)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v24 = *(_QWORD *)(v21 + 16);
  v25 = *(_QWORD *)(v21 + 24);
  v26 = *(_QWORD *)(v21 + 32);
  v27 = *(_QWORD *)(v21 + 40);
  v28 = *(void **)(v21 + 48);
  v29 = *(_QWORD *)(v21 + 56);
  v30 = *(_QWORD *)(v21 + 64);
  v82 = *(_QWORD *)(v21 + 72);
  v87 = *(_QWORD *)(v21 + 80);
  LOBYTE(v91) = *(_BYTE *)(v21 + 88);
  LOBYTE(v92) = *(_BYTE *)(v21 + 89);
  sub_DDA0(*(void **)v21, v23, v24, v25, v26, v27, v28, v29, v30, v82, v87, v91, v92);
  *(_QWORD *)v20 = v22;
  *(_QWORD *)(v20 + 8) = v23;
  *(_QWORD *)(v20 + 16) = v24;
  *(_QWORD *)(v20 + 24) = v25;
  *(_QWORD *)(v20 + 32) = v26;
  *(_QWORD *)(v20 + 40) = v27;
  *(_QWORD *)(v20 + 48) = v28;
  *(_QWORD *)(v20 + 56) = v29;
  *(_QWORD *)(v20 + 64) = v30;
  *(_QWORD *)(v20 + 72) = v82;
  *(_QWORD *)(v20 + 80) = v87;
  *(_BYTE *)(v20 + 88) = v91;
  *(_BYTE *)(v20 + 89) = v92;
  v31 = a3[7];
  v32 = a1 + v31;
  v33 = v96 + v31;
  v34 = *(void **)v33;
  v35 = *(_QWORD *)(v33 + 8);
  v36 = *(_QWORD *)(v33 + 16);
  v37 = *(_QWORD *)(v33 + 24);
  v38 = *(_QWORD *)(v33 + 32);
  v39 = *(_QWORD *)(v33 + 40);
  v40 = *(void **)(v33 + 48);
  v41 = *(_QWORD *)(v33 + 56);
  v42 = *(_QWORD *)(v33 + 64);
  v83 = *(_QWORD *)(v33 + 72);
  v88 = *(_QWORD *)(v33 + 80);
  LOBYTE(v91) = *(_BYTE *)(v33 + 88);
  LOBYTE(v92) = *(_BYTE *)(v33 + 89);
  sub_DDA0(*(void **)v33, v35, v36, v37, v38, v39, v40, v41, v42, v83, v88, v91, v92);
  *(_QWORD *)v32 = v34;
  *(_QWORD *)(v32 + 8) = v35;
  *(_QWORD *)(v32 + 16) = v36;
  *(_QWORD *)(v32 + 24) = v37;
  *(_QWORD *)(v32 + 32) = v38;
  *(_QWORD *)(v32 + 40) = v39;
  *(_QWORD *)(v32 + 48) = v40;
  *(_QWORD *)(v32 + 56) = v41;
  *(_QWORD *)(v32 + 64) = v42;
  *(_QWORD *)(v32 + 72) = v83;
  *(_QWORD *)(v32 + 80) = v88;
  *(_BYTE *)(v32 + 88) = v91;
  *(_BYTE *)(v32 + 89) = v92;
  v43 = a3[8];
  v44 = a1 + v43;
  v45 = v96 + v43;
  v46 = *(void **)v45;
  v47 = *(_QWORD *)(v45 + 8);
  v48 = *(_QWORD *)(v45 + 16);
  v49 = *(_QWORD *)(v45 + 24);
  v50 = *(_QWORD *)(v45 + 32);
  v51 = *(_QWORD *)(v45 + 40);
  v52 = *(void **)(v45 + 48);
  v53 = *(_QWORD *)(v45 + 56);
  v54 = *(_QWORD *)(v45 + 64);
  v84 = *(_QWORD *)(v45 + 72);
  v89 = *(_QWORD *)(v45 + 80);
  LOBYTE(v91) = *(_BYTE *)(v45 + 88);
  LOBYTE(v92) = *(_BYTE *)(v45 + 89);
  sub_DDA0(*(void **)v45, v47, v48, v49, v50, v51, v52, v53, v54, v84, v89, v91, v92);
  *(_QWORD *)v44 = v46;
  *(_QWORD *)(v44 + 8) = v47;
  *(_QWORD *)(v44 + 16) = v48;
  *(_QWORD *)(v44 + 24) = v49;
  *(_QWORD *)(v44 + 32) = v50;
  *(_QWORD *)(v44 + 40) = v51;
  *(_QWORD *)(v44 + 48) = v52;
  *(_QWORD *)(v44 + 56) = v53;
  *(_QWORD *)(v44 + 64) = v54;
  *(_QWORD *)(v44 + 72) = v84;
  *(_QWORD *)(v44 + 80) = v89;
  *(_BYTE *)(v44 + 88) = v91;
  *(_BYTE *)(v44 + 89) = v92;
  v55 = a3[9];
  v56 = a3[10];
  v57 = *(void **)(v96 + v55);
  *(_QWORD *)(a1 + v55) = v57;
  v58 = a1 + v56;
  *(_OWORD *)v58 = *(_OWORD *)(v96 + v56);
  *(_BYTE *)(v58 + 16) = *(_BYTE *)(v96 + v56 + 16);
  v59 = *(_QWORD *)(v96 + v56 + 40);
  v85 = *(_QWORD *)(v96 + v56 + 32);
  v90 = *(void **)(v96 + v56 + 24);
  v60 = *(_QWORD *)(v96 + v56 + 48);
  v61 = *(_QWORD *)(v96 + v56 + 56);
  v62 = *(_QWORD *)(v96 + v56 + 64);
  v63 = *(void **)(v96 + v56 + 72);
  v64 = *(_QWORD *)(v96 + v56 + 88);
  v66 = *(_QWORD *)(v96 + v56 + 96);
  v65 = *(_QWORD *)(v96 + v56 + 104);
  v81 = *(_QWORD *)(v96 + v56 + 80);
  LOWORD(v47) = *(_WORD *)(v96 + v56 + 112);
  v67 = v57;
  sub_1472C(v90, v85, v59, v60, v61, v62, v63, v81, v64, v66, v65, v47);
  *(_QWORD *)(v58 + 24) = v90;
  *(_QWORD *)(v58 + 32) = v85;
  *(_QWORD *)(v58 + 40) = v59;
  *(_QWORD *)(v58 + 48) = v60;
  *(_QWORD *)(v58 + 56) = v61;
  *(_QWORD *)(v58 + 64) = v62;
  *(_QWORD *)(v58 + 72) = v63;
  *(_QWORD *)(v58 + 80) = v81;
  *(_QWORD *)(v58 + 88) = v64;
  *(_QWORD *)(v58 + 96) = v66;
  *(_QWORD *)(v58 + 104) = v65;
  *(_WORD *)(v58 + 112) = v47;
  v68 = a3[11];
  v69 = a1 + v68;
  v70 = v96 + v68;
  *(_OWORD *)v69 = *(_OWORD *)v70;
  *(_BYTE *)(v69 + 16) = *(_BYTE *)(v70 + 16);
  v71 = *(void **)(v70 + 24);
  v72 = *(_QWORD *)(v70 + 32);
  v73 = *(_QWORD *)(v70 + 40);
  v74 = *(_QWORD *)(v70 + 48);
  v75 = *(_QWORD *)(v70 + 56);
  v76 = *(_QWORD *)(v70 + 64);
  v77 = *(void **)(v70 + 72);
  v78 = *(_QWORD *)(v70 + 80);
  v79 = *(_QWORD *)(v70 + 88);
  v93 = *(_QWORD *)(v70 + 96);
  v95 = *(_QWORD *)(v70 + 104);
  LOWORD(v96) = *(_WORD *)(v70 + 112);
  sub_1472C(v71, v72, v73, v74, v75, v76, v77, v78, v79, v93, v95, v96);
  *(_QWORD *)(v69 + 24) = v71;
  *(_QWORD *)(v69 + 32) = v72;
  *(_QWORD *)(v69 + 40) = v73;
  *(_QWORD *)(v69 + 48) = v74;
  *(_QWORD *)(v69 + 56) = v75;
  *(_QWORD *)(v69 + 64) = v76;
  *(_QWORD *)(v69 + 72) = v77;
  *(_QWORD *)(v69 + 80) = v78;
  *(_QWORD *)(v69 + 88) = v79;
  *(_QWORD *)(v69 + 96) = v93;
  *(_QWORD *)(v69 + 104) = v95;
  *(_WORD *)(v69 + 112) = v96;
  return a1;
}

uint64_t assignWithCopy for ModernTitleHeaderView.Style(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unsigned __int16 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  char v101;
  char v102;
  uint64_t v103;
  void *v104;
  void *v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  __int128 *v109;
  __int128 v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  unsigned __int16 v130;
  uint64_t v131;
  uint64_t v132;
  __int128 *v133;
  __int128 v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  __int128 v152;
  uint64_t v153;
  unsigned __int16 v154;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __int16 v166;
  unsigned __int16 v167;
  uint64_t v168;
  uint64_t v170;
  int *v171;

  v171 = a3;
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 16) = *((_BYTE *)v9 + 16);
  *(_OWORD *)v8 = v10;
  v11 = (void *)*((_QWORD *)v9 + 3);
  v12 = *((_QWORD *)v9 + 4);
  v13 = *((_QWORD *)v9 + 5);
  v14 = *((_QWORD *)v9 + 6);
  v15 = *((_QWORD *)v9 + 7);
  v16 = *((_QWORD *)v9 + 8);
  v18 = (void *)*((_QWORD *)v9 + 9);
  v17 = *((_QWORD *)v9 + 10);
  v19 = *((_QWORD *)v9 + 11);
  v159 = *((_QWORD *)v9 + 12);
  v164 = *((_QWORD *)v9 + 13);
  v166 = *((_WORD *)v9 + 56);
  sub_1472C(v11, v12, v13, v14, v15, v16, v18, v17, v19, v159, v164, v166);
  v20 = *(void **)(v8 + 24);
  v21 = *(_QWORD *)(v8 + 32);
  v22 = *(_QWORD *)(v8 + 40);
  v23 = *(_QWORD *)(v8 + 48);
  v24 = *(_QWORD *)(v8 + 56);
  v25 = *(_QWORD *)(v8 + 64);
  v26 = *(void **)(v8 + 72);
  v27 = *(_QWORD *)(v8 + 80);
  v28 = *(_OWORD *)(v8 + 88);
  v29 = *(_QWORD *)(v8 + 104);
  v30 = *(_WORD *)(v8 + 112);
  *(_QWORD *)(v8 + 24) = v11;
  *(_QWORD *)(v8 + 32) = v12;
  *(_QWORD *)(v8 + 40) = v13;
  *(_QWORD *)(v8 + 48) = v14;
  *(_QWORD *)(v8 + 56) = v15;
  *(_QWORD *)(v8 + 64) = v16;
  *(_QWORD *)(v8 + 72) = v18;
  *(_QWORD *)(v8 + 80) = v17;
  *(_QWORD *)(v8 + 88) = v19;
  *(_QWORD *)(v8 + 96) = v159;
  *(_QWORD *)(v8 + 104) = v164;
  *(_WORD *)(v8 + 112) = v166;
  sub_14788(v20, v21, v22, v23, v24, v25, v26, v27, v28, *((uint64_t *)&v28 + 1), v29, v30);
  v31 = v171[6];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(void **)v33;
  v35 = *(_QWORD *)(v33 + 8);
  v36 = *(_QWORD *)(v33 + 16);
  v37 = *(_QWORD *)(v33 + 24);
  v38 = *(_QWORD *)(v33 + 32);
  v39 = *(_QWORD *)(v33 + 40);
  v40 = *(void **)(v33 + 48);
  v41 = *(_QWORD *)(v33 + 56);
  v42 = *(_QWORD *)(v33 + 64);
  v156 = *(_QWORD *)(v33 + 72);
  v160 = *(_QWORD *)(v33 + 80);
  LOBYTE(v164) = *(_BYTE *)(v33 + 88);
  LOBYTE(v166) = *(_BYTE *)(v33 + 89);
  sub_DDA0(*(void **)v33, v35, v36, v37, v38, v39, v40, v41, v42, v156, v160, v164, v166);
  v43 = *(void **)v32;
  v44 = *(_QWORD *)(v32 + 8);
  v45 = *(_QWORD *)(v32 + 16);
  v46 = *(_QWORD *)(v32 + 24);
  v47 = *(_QWORD *)(v32 + 32);
  v48 = *(_QWORD *)(v32 + 40);
  v49 = *(void **)(v32 + 48);
  v50 = *(_QWORD *)(v32 + 56);
  v51 = *(_OWORD *)(v32 + 64);
  v52 = *(_QWORD *)(v32 + 80);
  v53 = *(_BYTE *)(v32 + 88);
  v54 = *(_BYTE *)(v32 + 89);
  *(_QWORD *)v32 = v34;
  *(_QWORD *)(v32 + 8) = v35;
  *(_QWORD *)(v32 + 16) = v36;
  *(_QWORD *)(v32 + 24) = v37;
  *(_QWORD *)(v32 + 32) = v38;
  *(_QWORD *)(v32 + 40) = v39;
  *(_QWORD *)(v32 + 48) = v40;
  *(_QWORD *)(v32 + 56) = v41;
  *(_QWORD *)(v32 + 64) = v42;
  *(_QWORD *)(v32 + 72) = v156;
  *(_QWORD *)(v32 + 80) = v160;
  *(_BYTE *)(v32 + 88) = v164;
  *(_BYTE *)(v32 + 89) = v166;
  sub_DCC8(v43, v44, v45, v46, v47, v48, v49, v50, v51, *((uint64_t *)&v51 + 1), v52, v53, v54);
  v55 = v171[7];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = *(void **)v57;
  v59 = *(_QWORD *)(v57 + 8);
  v60 = *(_QWORD *)(v57 + 16);
  v61 = *(_QWORD *)(v57 + 24);
  v62 = *(_QWORD *)(v57 + 32);
  v63 = *(_QWORD *)(v57 + 40);
  v64 = *(void **)(v57 + 48);
  v65 = *(_QWORD *)(v57 + 56);
  v66 = *(_QWORD *)(v57 + 64);
  v157 = *(_QWORD *)(v57 + 72);
  v161 = *(_QWORD *)(v57 + 80);
  LOBYTE(v164) = *(_BYTE *)(v57 + 88);
  LOBYTE(v166) = *(_BYTE *)(v57 + 89);
  sub_DDA0(*(void **)v57, v59, v60, v61, v62, v63, v64, v65, v66, v157, v161, v164, v166);
  v67 = *(void **)v56;
  v68 = *(_QWORD *)(v56 + 8);
  v69 = *(_QWORD *)(v56 + 16);
  v70 = *(_QWORD *)(v56 + 24);
  v71 = *(_QWORD *)(v56 + 32);
  v72 = *(_QWORD *)(v56 + 40);
  v73 = *(void **)(v56 + 48);
  v74 = *(_QWORD *)(v56 + 56);
  v75 = *(_OWORD *)(v56 + 64);
  v76 = *(_QWORD *)(v56 + 80);
  v77 = *(_BYTE *)(v56 + 88);
  v78 = *(_BYTE *)(v56 + 89);
  *(_QWORD *)v56 = v58;
  *(_QWORD *)(v56 + 8) = v59;
  *(_QWORD *)(v56 + 16) = v60;
  *(_QWORD *)(v56 + 24) = v61;
  *(_QWORD *)(v56 + 32) = v62;
  *(_QWORD *)(v56 + 40) = v63;
  *(_QWORD *)(v56 + 48) = v64;
  *(_QWORD *)(v56 + 56) = v65;
  *(_QWORD *)(v56 + 64) = v66;
  *(_QWORD *)(v56 + 72) = v157;
  *(_QWORD *)(v56 + 80) = v161;
  *(_BYTE *)(v56 + 88) = v164;
  *(_BYTE *)(v56 + 89) = v166;
  sub_DCC8(v67, v68, v69, v70, v71, v72, v73, v74, v75, *((uint64_t *)&v75 + 1), v76, v77, v78);
  v79 = v171[8];
  v80 = a1 + v79;
  v81 = a2 + v79;
  v82 = *(void **)v81;
  v83 = *(_QWORD *)(v81 + 8);
  v84 = *(_QWORD *)(v81 + 16);
  v85 = *(_QWORD *)(v81 + 24);
  v86 = *(_QWORD *)(v81 + 32);
  v87 = *(_QWORD *)(v81 + 40);
  v88 = *(void **)(v81 + 48);
  v89 = *(_QWORD *)(v81 + 56);
  v90 = *(_QWORD *)(v81 + 64);
  v158 = *(_QWORD *)(v81 + 72);
  v162 = *(_QWORD *)(v81 + 80);
  LOBYTE(v164) = *(_BYTE *)(v81 + 88);
  LOBYTE(v166) = *(_BYTE *)(v81 + 89);
  sub_DDA0(*(void **)v81, v83, v84, v85, v86, v87, v88, v89, v90, v158, v162, v164, v166);
  v91 = *(void **)v80;
  v92 = *(_QWORD *)(v80 + 8);
  v93 = *(_QWORD *)(v80 + 16);
  v94 = *(_QWORD *)(v80 + 24);
  v95 = *(_QWORD *)(v80 + 32);
  v96 = *(_QWORD *)(v80 + 40);
  v97 = *(void **)(v80 + 48);
  v98 = *(_QWORD *)(v80 + 56);
  v99 = *(_OWORD *)(v80 + 64);
  v100 = *(_QWORD *)(v80 + 80);
  v101 = *(_BYTE *)(v80 + 88);
  v102 = *(_BYTE *)(v80 + 89);
  *(_QWORD *)v80 = v82;
  *(_QWORD *)(v80 + 8) = v83;
  *(_QWORD *)(v80 + 16) = v84;
  *(_QWORD *)(v80 + 24) = v85;
  *(_QWORD *)(v80 + 32) = v86;
  *(_QWORD *)(v80 + 40) = v87;
  *(_QWORD *)(v80 + 48) = v88;
  *(_QWORD *)(v80 + 56) = v89;
  *(_QWORD *)(v80 + 64) = v90;
  *(_QWORD *)(v80 + 72) = v158;
  *(_QWORD *)(v80 + 80) = v162;
  *(_BYTE *)(v80 + 88) = v164;
  *(_BYTE *)(v80 + 89) = v166;
  sub_DCC8(v91, v92, v93, v94, v95, v96, v97, v98, v99, *((uint64_t *)&v99 + 1), v100, v101, v102);
  v103 = v171[9];
  v104 = *(void **)(a2 + v103);
  v105 = *(void **)(a1 + v103);
  *(_QWORD *)(a1 + v103) = v104;
  v106 = v104;

  v107 = v171[10];
  v108 = a1 + v107;
  v109 = (__int128 *)(a2 + v107);
  v110 = *v109;
  *(_BYTE *)(v108 + 16) = *((_BYTE *)v109 + 16);
  *(_OWORD *)v108 = v110;
  v111 = (void *)*((_QWORD *)v109 + 3);
  v112 = *((_QWORD *)v109 + 4);
  v113 = *((_QWORD *)v109 + 5);
  v114 = *((_QWORD *)v109 + 6);
  v115 = *((_QWORD *)v109 + 7);
  v116 = *((_QWORD *)v109 + 8);
  v117 = (void *)*((_QWORD *)v109 + 9);
  v118 = *((_QWORD *)v109 + 10);
  v119 = *((_QWORD *)v109 + 11);
  v163 = *((_QWORD *)v109 + 12);
  v165 = *((_QWORD *)v109 + 13);
  v167 = *((_WORD *)v109 + 56);
  sub_1472C(v111, v112, v113, v114, v115, v116, v117, v118, v119, v163, v165, v167);
  v120 = *(void **)(v108 + 24);
  v121 = *(_QWORD *)(v108 + 32);
  v122 = *(_QWORD *)(v108 + 40);
  v123 = *(_QWORD *)(v108 + 48);
  v124 = *(_QWORD *)(v108 + 56);
  v125 = *(_QWORD *)(v108 + 64);
  v126 = *(void **)(v108 + 72);
  v127 = *(_QWORD *)(v108 + 80);
  v128 = *(_OWORD *)(v108 + 88);
  v129 = *(_QWORD *)(v108 + 104);
  v130 = *(_WORD *)(v108 + 112);
  *(_QWORD *)(v108 + 24) = v111;
  *(_QWORD *)(v108 + 32) = v112;
  *(_QWORD *)(v108 + 40) = v113;
  *(_QWORD *)(v108 + 48) = v114;
  *(_QWORD *)(v108 + 56) = v115;
  *(_QWORD *)(v108 + 64) = v116;
  *(_QWORD *)(v108 + 72) = v117;
  *(_QWORD *)(v108 + 80) = v118;
  *(_QWORD *)(v108 + 88) = v119;
  *(_QWORD *)(v108 + 96) = v163;
  *(_QWORD *)(v108 + 104) = v165;
  *(_WORD *)(v108 + 112) = v167;
  sub_14788(v120, v121, v122, v123, v124, v125, v126, v127, v128, *((uint64_t *)&v128 + 1), v129, v130);
  v131 = v171[11];
  v132 = a1 + v131;
  v133 = (__int128 *)(a2 + v131);
  v134 = *v133;
  *(_BYTE *)(v132 + 16) = *((_BYTE *)v133 + 16);
  *(_OWORD *)v132 = v134;
  v135 = (void *)*((_QWORD *)v133 + 3);
  v136 = *((_QWORD *)v133 + 4);
  v137 = *((_QWORD *)v133 + 5);
  v138 = *((_QWORD *)v133 + 6);
  v139 = *((_QWORD *)v133 + 7);
  v140 = *((_QWORD *)v133 + 8);
  v141 = (void *)*((_QWORD *)v133 + 9);
  v142 = *((_QWORD *)v133 + 10);
  v143 = *((_QWORD *)v133 + 11);
  v168 = *((_QWORD *)v133 + 12);
  v170 = *((_QWORD *)v133 + 13);
  LOWORD(v171) = *((_WORD *)v133 + 56);
  sub_1472C(v135, v136, v137, v138, v139, v140, v141, v142, v143, v168, v170, (unsigned __int16)v171);
  v144 = *(void **)(v132 + 24);
  v145 = *(_QWORD *)(v132 + 32);
  v146 = *(_QWORD *)(v132 + 40);
  v147 = *(_QWORD *)(v132 + 48);
  v148 = *(_QWORD *)(v132 + 56);
  v149 = *(_QWORD *)(v132 + 64);
  v150 = *(void **)(v132 + 72);
  v151 = *(_QWORD *)(v132 + 80);
  v152 = *(_OWORD *)(v132 + 88);
  v153 = *(_QWORD *)(v132 + 104);
  v154 = *(_WORD *)(v132 + 112);
  *(_QWORD *)(v132 + 24) = v135;
  *(_QWORD *)(v132 + 32) = v136;
  *(_QWORD *)(v132 + 40) = v137;
  *(_QWORD *)(v132 + 48) = v138;
  *(_QWORD *)(v132 + 56) = v139;
  *(_QWORD *)(v132 + 64) = v140;
  *(_QWORD *)(v132 + 72) = v141;
  *(_QWORD *)(v132 + 80) = v142;
  *(_QWORD *)(v132 + 88) = v143;
  *(_QWORD *)(v132 + 96) = v168;
  *(_QWORD *)(v132 + 104) = v170;
  *(_WORD *)(v132 + 112) = (_WORD)v171;
  sub_14788(v144, v145, v146, v147, v148, v149, v150, v151, v152, *((uint64_t *)&v152 + 1), v153, v154);
  return a1;
}

uint64_t initializeWithTake for ModernTitleHeaderView.Style(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD *v27;
  __int128 *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_WORD *)(v9 + 112) = *(_WORD *)(v10 + 112);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = *(_OWORD *)(v10 + 96);
  v14 = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 96) = v13;
  *(_OWORD *)(v9 + 64) = v14;
  v15 = (_OWORD *)(a1 + v8);
  v16 = (_OWORD *)(a2 + v8);
  v17 = v16[3];
  v15[2] = v16[2];
  v15[3] = v17;
  v15[4] = v16[4];
  *(_OWORD *)((char *)v15 + 74) = *(_OWORD *)((char *)v16 + 74);
  v18 = v16[1];
  *v15 = *v16;
  v15[1] = v18;
  v19 = a3[7];
  v20 = a3[8];
  v21 = (_OWORD *)(a1 + v19);
  v22 = (_OWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = v22[2];
  v25 = v22[3];
  v26 = v22[4];
  *(_OWORD *)((char *)v21 + 74) = *(_OWORD *)((char *)v22 + 74);
  v21[3] = v25;
  v21[4] = v26;
  v21[2] = v24;
  v27 = (_OWORD *)(a1 + v20);
  v28 = (__int128 *)(a2 + v20);
  *(_OWORD *)((char *)v27 + 74) = *(__int128 *)((char *)v28 + 74);
  v29 = v28[4];
  v30 = v28[2];
  v27[3] = v28[3];
  v27[4] = v29;
  v31 = *v28;
  v27[1] = v28[1];
  v27[2] = v30;
  *v27 = v31;
  v32 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_WORD *)(v33 + 112) = *(_WORD *)(v34 + 112);
  v35 = *(_OWORD *)(v34 + 96);
  v36 = *(_OWORD *)(v34 + 64);
  *(_OWORD *)(v33 + 80) = *(_OWORD *)(v34 + 80);
  *(_OWORD *)(v33 + 96) = v35;
  v37 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v37;
  v38 = *(_OWORD *)(v34 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  *(_OWORD *)(v33 + 48) = v38;
  *(_OWORD *)(v33 + 64) = v36;
  v39 = a3[11];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_WORD *)(v40 + 112) = *(_WORD *)(v41 + 112);
  v42 = *(_OWORD *)(v41 + 96);
  v43 = *(_OWORD *)(v41 + 64);
  *(_OWORD *)(v40 + 80) = *(_OWORD *)(v41 + 80);
  *(_OWORD *)(v40 + 96) = v42;
  v44 = *(_OWORD *)(v41 + 32);
  *(_OWORD *)(v40 + 48) = *(_OWORD *)(v41 + 48);
  *(_OWORD *)(v40 + 64) = v43;
  v45 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v45;
  *(_OWORD *)(v40 + 32) = v44;
  return a1;
}

uint64_t assignWithTake for ModernTitleHeaderView.Style(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unsigned __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  char v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  char v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  char v79;
  char v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int16 v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  unsigned __int16 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int16 v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  unsigned __int16 v116;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = *(_QWORD *)(v9 + 104);
  v11 = *(_WORD *)(v9 + 112);
  v12 = *(void **)(v8 + 24);
  v13 = *(_QWORD *)(v8 + 32);
  v14 = *(_QWORD *)(v8 + 40);
  v15 = *(_QWORD *)(v8 + 48);
  v16 = *(_QWORD *)(v8 + 56);
  v17 = *(_QWORD *)(v8 + 64);
  v18 = *(void **)(v8 + 72);
  v19 = *(_QWORD *)(v8 + 80);
  v20 = *(_OWORD *)(v8 + 88);
  v21 = *(_QWORD *)(v8 + 104);
  v22 = *(_WORD *)(v8 + 112);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = v10;
  *(_WORD *)(v8 + 112) = v11;
  sub_14788(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22);
  v23 = a3[6];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)(v25 + 80);
  v27 = *(_BYTE *)(v25 + 88);
  v28 = *(_BYTE *)(v25 + 89);
  v29 = *(void **)v24;
  v30 = *(_QWORD *)(v24 + 8);
  v31 = *(_QWORD *)(v24 + 16);
  v32 = *(_QWORD *)(v24 + 24);
  v33 = *(_QWORD *)(v24 + 32);
  v34 = *(_QWORD *)(v24 + 40);
  v35 = *(void **)(v24 + 48);
  v36 = *(_QWORD *)(v24 + 56);
  v37 = *(_OWORD *)(v24 + 64);
  v38 = *(_QWORD *)(v24 + 80);
  v39 = *(_BYTE *)(v24 + 88);
  v40 = *(_BYTE *)(v24 + 89);
  v41 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v41;
  v42 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v42;
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
  *(_QWORD *)(v24 + 80) = v26;
  *(_BYTE *)(v24 + 88) = v27;
  *(_BYTE *)(v24 + 89) = v28;
  sub_DCC8(v29, v30, v31, v32, v33, v34, v35, v36, v37, *((uint64_t *)&v37 + 1), v38, v39, v40);
  v43 = a3[7];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)(v45 + 80);
  v47 = *(_BYTE *)(v45 + 88);
  v48 = *(_BYTE *)(v45 + 89);
  v49 = *(void **)v44;
  v50 = *(_QWORD *)(v44 + 8);
  v51 = *(_QWORD *)(v44 + 16);
  v52 = *(_QWORD *)(v44 + 24);
  v53 = *(_QWORD *)(v44 + 32);
  v54 = *(_QWORD *)(v44 + 40);
  v55 = *(void **)(v44 + 48);
  v56 = *(_QWORD *)(v44 + 56);
  v57 = *(_OWORD *)(v44 + 64);
  v58 = *(_QWORD *)(v44 + 80);
  v59 = *(_BYTE *)(v44 + 88);
  v60 = *(_BYTE *)(v44 + 89);
  v61 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v61;
  v62 = *(_OWORD *)(v45 + 48);
  *(_OWORD *)(v44 + 32) = *(_OWORD *)(v45 + 32);
  *(_OWORD *)(v44 + 48) = v62;
  *(_OWORD *)(v44 + 64) = *(_OWORD *)(v45 + 64);
  *(_QWORD *)(v44 + 80) = v46;
  *(_BYTE *)(v44 + 88) = v47;
  *(_BYTE *)(v44 + 89) = v48;
  sub_DCC8(v49, v50, v51, v52, v53, v54, v55, v56, v57, *((uint64_t *)&v57 + 1), v58, v59, v60);
  v63 = a3[8];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = *(_QWORD *)(v65 + 80);
  v67 = *(_BYTE *)(v65 + 88);
  v68 = *(_BYTE *)(v65 + 89);
  v69 = *(void **)v64;
  v70 = *(_QWORD *)(v64 + 8);
  v71 = *(_QWORD *)(v64 + 16);
  v72 = *(_QWORD *)(v64 + 24);
  v73 = *(_QWORD *)(v64 + 32);
  v74 = *(_QWORD *)(v64 + 40);
  v75 = *(void **)(v64 + 48);
  v76 = *(_QWORD *)(v64 + 56);
  v77 = *(_OWORD *)(v64 + 64);
  v78 = *(_QWORD *)(v64 + 80);
  v79 = *(_BYTE *)(v64 + 88);
  v80 = *(_BYTE *)(v64 + 89);
  v81 = *(_OWORD *)(v65 + 16);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  *(_OWORD *)(v64 + 16) = v81;
  v82 = *(_OWORD *)(v65 + 48);
  *(_OWORD *)(v64 + 32) = *(_OWORD *)(v65 + 32);
  *(_OWORD *)(v64 + 48) = v82;
  *(_OWORD *)(v64 + 64) = *(_OWORD *)(v65 + 64);
  *(_QWORD *)(v64 + 80) = v66;
  *(_BYTE *)(v64 + 88) = v67;
  *(_BYTE *)(v64 + 89) = v68;
  sub_DCC8(v69, v70, v71, v72, v73, v74, v75, v76, v77, *((uint64_t *)&v77 + 1), v78, v79, v80);
  v83 = a3[9];
  v84 = *(void **)(a1 + v83);
  *(_QWORD *)(a1 + v83) = *(_QWORD *)(a2 + v83);

  v85 = a3[10];
  v86 = a1 + v85;
  v87 = a2 + v85;
  *(_OWORD *)v86 = *(_OWORD *)v87;
  *(_BYTE *)(v86 + 16) = *(_BYTE *)(v87 + 16);
  v88 = *(_QWORD *)(v87 + 104);
  v89 = *(_WORD *)(v87 + 112);
  v90 = *(void **)(v86 + 24);
  v91 = *(_QWORD *)(v86 + 32);
  v92 = *(_QWORD *)(v86 + 40);
  v93 = *(_QWORD *)(v86 + 48);
  v94 = *(_QWORD *)(v86 + 56);
  v95 = *(_QWORD *)(v86 + 64);
  v96 = *(void **)(v86 + 72);
  v97 = *(_QWORD *)(v86 + 80);
  v98 = *(_OWORD *)(v86 + 88);
  v99 = *(_QWORD *)(v86 + 104);
  v100 = *(_WORD *)(v86 + 112);
  *(_OWORD *)(v86 + 24) = *(_OWORD *)(v87 + 24);
  *(_OWORD *)(v86 + 40) = *(_OWORD *)(v87 + 40);
  *(_OWORD *)(v86 + 56) = *(_OWORD *)(v87 + 56);
  *(_OWORD *)(v86 + 72) = *(_OWORD *)(v87 + 72);
  *(_OWORD *)(v86 + 88) = *(_OWORD *)(v87 + 88);
  *(_QWORD *)(v86 + 104) = v88;
  *(_WORD *)(v86 + 112) = v89;
  sub_14788(v90, v91, v92, v93, v94, v95, v96, v97, v98, *((uint64_t *)&v98 + 1), v99, v100);
  v101 = a3[11];
  v102 = a1 + v101;
  v103 = a2 + v101;
  *(_OWORD *)v102 = *(_OWORD *)v103;
  *(_BYTE *)(v102 + 16) = *(_BYTE *)(v103 + 16);
  v104 = *(_QWORD *)(v103 + 104);
  v105 = *(_WORD *)(v103 + 112);
  v106 = *(void **)(v102 + 24);
  v107 = *(_QWORD *)(v102 + 32);
  v108 = *(_QWORD *)(v102 + 40);
  v109 = *(_QWORD *)(v102 + 48);
  v110 = *(_QWORD *)(v102 + 56);
  v111 = *(_QWORD *)(v102 + 64);
  v112 = *(void **)(v102 + 72);
  v113 = *(_QWORD *)(v102 + 80);
  v114 = *(_OWORD *)(v102 + 88);
  v115 = *(_QWORD *)(v102 + 104);
  v116 = *(_WORD *)(v102 + 112);
  *(_OWORD *)(v102 + 24) = *(_OWORD *)(v103 + 24);
  *(_OWORD *)(v102 + 40) = *(_OWORD *)(v103 + 40);
  *(_OWORD *)(v102 + 56) = *(_OWORD *)(v103 + 56);
  *(_OWORD *)(v102 + 72) = *(_OWORD *)(v103 + 72);
  *(_OWORD *)(v102 + 88) = *(_OWORD *)(v103 + 88);
  *(_QWORD *)(v102 + 104) = v104;
  *(_WORD *)(v102 + 112) = v105;
  sub_14788(v106, v107, v108, v109, v110, v111, v112, v113, v114, *((uint64_t *)&v114 + 1), v115, v116);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModernTitleHeaderView.Style(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1CCEB4);
}

uint64_t sub_1CCEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ModernTitleHeaderView.Style(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1CCF3C);
}

uint64_t sub_1CCF3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t sub_1CCFB4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "r";
    v4[2] = &unk_2FDD00;
    v4[3] = &unk_2FDD00;
    v4[4] = &unk_2FDD00;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = "r";
    v4[7] = "r";
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ModernTitleHeaderView.SeparatorOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CD090 + 4 * byte_2FDB1D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CD0C4 + 4 * byte_2FDB18[v4]))();
}

uint64_t sub_1CD0C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CD0CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CD0D4);
  return result;
}

uint64_t sub_1CD0E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CD0E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CD0EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CD0F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModernTitleHeaderView.SeparatorOptions()
{
  return &type metadata for ModernTitleHeaderView.SeparatorOptions;
}

void sub_1CD110()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_artworkCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView____lazy_storage___topConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_horizontalButtonStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView____lazy_storage___bottomConstraint] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_accessibilityHasContextAction] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_shouldStackButtons] = 2;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ModernTitleHeaderView.swift", 51, 2, 607, 0);
  __break(1u);
}

char *sub_1CD1E4(uint64_t a1, uint64_t a2, double a3)
{
  objc_class *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  Class isa;
  char *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t i;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t inited;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  Class v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  id v35;
  void *v36;
  id v37;
  char v38[64];
  __int128 v39;
  uint64_t v40;

  v6 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", a3);
  if (v6)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v8 = swift_allocObject(v7, 40, 7);
    *(_OWORD *)(v8 + 16) = xmmword_2F11D0;
    *(_QWORD *)(v8 + 32) = v6;
    *(_QWORD *)&v39 = v8;
    specialized Array._endMutation()(v8);
    sub_E710(0, (unint64_t *)&qword_3D1648, UIVisualEffect_ptr);
    v9 = v6;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v39);
    v6 = objc_msgSend((id)objc_opt_self(UIVisualEffect), "effectCombiningEffects:", isa);

  }
  v11 = (char *)objc_msgSend(objc_allocWithZone(v3), "initWithEffect:", v6);
  v12 = v11;
  v13 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13FadedBlurView_maskLayer];
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v33 = a2;
    else
      v33 = a2 & 0xFFFFFFFFFFFFFF8;
    v34 = v11;
    v35 = v13;
    swift_bridgeObjectRetain(a2);
    v14 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v14 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
    v15 = v11;
    v16 = v13;
  }
  if (v14)
  {
    sub_F3400(0, v14 & ~(v14 >> 63), 0);
    if (v14 < 0)
      __break(1u);
    v36 = v13;
    v37 = v6;
    for (i = 0; i != v14; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
        v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
      else
        v18 = *(id *)(a2 + 8 * i + 32);
      v19 = v18;
      v20 = objc_msgSend(v18, "CGColor", v36, v37);
      type metadata accessor for CGColor(0);
      v40 = v21;

      *(_QWORD *)&v39 = v20;
      v23 = _swiftEmptyArrayStorage[2];
      v22 = _swiftEmptyArrayStorage[3];
      if (v23 >= v22 >> 1)
        sub_F3400(v22 > 1, v23 + 1, 1);
      _swiftEmptyArrayStorage[2] = v23 + 1;
      sub_1D65C(&v39, &_swiftEmptyArrayStorage[4 * v23 + 4]);
    }
    swift_bridgeObjectRelease(a2);
    v13 = v36;
    v6 = v37;
  }
  else
  {
    swift_bridgeObjectRelease(a2);
  }
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
  inited = swift_initStackObject(v24, v38);
  *(_OWORD *)(inited + 16) = xmmword_2F03C0;
  v26 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v27 = objc_msgSend(v26, "CGColor");

  type metadata accessor for CGColor(0);
  *(_QWORD *)(inited + 56) = v28;
  *(_QWORD *)(inited + 32) = v27;
  *(_QWORD *)&v39 = _swiftEmptyArrayStorage;
  sub_1F6DB4(inited);
  v29 = v39;
  v30 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v13, "setColors:", v30, swift_bridgeObjectRelease(v29).n128_f64[0]);

  v31 = *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews13FadedBlurView_maskGradientInPoints];
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews13FadedBlurView_maskGradientInPoints] = a1;
  swift_bridgeObjectRelease(v31);
  return v12;
}

void ShowHeaderView.bind(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17[24];
  char v18[24];
  char v19[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_objectGraph);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_objectGraph, v19, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_release(v4);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView);
  v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_objectGraph);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_objectGraph) = a1;
  swift_retain(a1);
  swift_release(v6);
  v7 = (uint64_t *)(*(_QWORD *)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph);
  swift_beginAccess(v7, v18, 1, 0);
  v8 = *v7;
  *v7 = a1;
  swift_retain(a1);
  swift_release(v8);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_upsellBanner);
  v10 = *(_QWORD *)(v9 + qword_3D9750);
  *(_QWORD *)(v9 + qword_3D9750) = a1;
  swift_retain(a1);
  swift_release(v10);
  v11 = (uint64_t *)(*(_QWORD *)(v9 + qword_3D96E8)
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph);
  swift_beginAccess(v11, v17, 1, 0);
  v12 = *v11;
  *v11 = a1;
  swift_retain_n(a1, 2);
  swift_release(v12);
  v13 = (char *)SubscriptionNameAreaView.channelLinkButton.getter();
  v14 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph];
  swift_beginAccess(&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph], &v16, 1, 0);
  v15 = *(_QWORD *)v14;
  *(_QWORD *)v14 = a1;
  swift_release(v15);
  swift_retain(a1);

}

void sub_1CD72C(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  double v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  NSString v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  __int128 v40;
  char v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  double v50;
  double v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unsigned __int8 v57;
  void *v58;
  unsigned __int8 v59;
  uint64_t v60;
  id v61;
  uint64_t *v62;
  uint64_t v63;
  id v64;
  SEL *v65;
  char **v66;
  uint64_t v67;
  char **v68;
  uint64_t *v69;
  uint64_t v70;
  char **v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  id v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  NSString v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char v86;
  uint64_t v87;
  char *v88;
  id v89;
  __n128 v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  void (*v102)(uint64_t *, unint64_t, char *);
  uint64_t v103;
  int v104;
  char *v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  float v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  _QWORD *v123;
  uint64_t v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  __n128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  void *v138;
  char *v139;
  id v140;
  id v141;
  NSString v142;
  uint64_t v143;
  __n128 v144;
  uint64_t v145;
  char v146;
  BOOL v147;
  __n128 v148;
  uint64_t v149;
  id v150;
  __n128 v151;
  char v152;
  uint64_t v153;
  char *v154;
  void *v155;
  id v156;
  id v157;
  char *v158;
  char *v159;
  void *v160;
  void *v161;
  id v162;
  id v163;
  void *v164;
  Class isa;
  uint64_t v166;
  __n128 v167;
  uint64_t v168;
  void *v169;
  id v170;
  uint64_t v171;
  char **p_name;
  uint64_t v173;
  id v174;
  NSString v175;
  id v176;
  id v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  id v183;
  id v184;
  uint64_t v185;
  uint64_t inited;
  NSString *v187;
  NSString *v188;
  id v189;
  unint64_t v190;
  id v191;
  id v192;
  id v193;
  unint64_t v194;
  unint64_t v195;
  id v196;
  id v197;
  NSString v198;
  Class v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  id v205;
  __n128 v206;
  uint64_t v207;
  double v208;
  uint64_t v209;
  NSString v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  void *v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  __n128 v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  id v228;
  __n128 v229;
  void *v230;
  _QWORD *v231;
  void *v232;
  id v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  __n128 v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  id v245;
  __n128 v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  uint64_t v250;
  uint64_t v251;
  id v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  id v256;
  id v257;
  void *v258;
  void *v259;
  id v260;
  Swift::String v261;
  Swift::String v262;
  unint64_t v263;
  NSString v264;
  void *v265;
  id v266;
  Swift::String v267;
  Swift::String v268;
  unint64_t v269;
  NSString v270;
  void *v271;
  id v272;
  Swift::String v273;
  Swift::String v274;
  unint64_t v275;
  NSString v276;
  id v277;
  Swift::String v278;
  Swift::String v279;
  unint64_t v280;
  NSString v281;
  void *v282;
  Swift::String v283;
  Swift::String v284;
  unint64_t v285;
  NSString v286;
  Swift::String v287;
  Swift::String v288;
  unint64_t v289;
  NSString v290;
  double v291;
  Swift::String v292;
  Swift::String v293;
  unint64_t v294;
  NSString v295;
  double v296;
  Swift::String v297;
  Swift::String v298;
  unint64_t v299;
  NSString v300;
  double v301;
  uint64_t v302;
  uint64_t v303;
  int v304;
  char *v305;
  uint64_t v306;
  int v307;
  char *v308;
  char *v309;
  char *v310;
  id v311;
  __int128 v312;
  int v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  char *v325;
  _QWORD *v326;
  char v327[48];
  char v328;
  char v329;
  _QWORD *v330;
  uint64_t v331;
  char v332[20];
  uint64_t v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char v337[8];

  v2 = v1;
  v4 = (char *)type metadata accessor for HeaderModel.MetadataComponent(0);
  v326 = (_QWORD *)*((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v302 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v320 = type metadata accessor for Logger(0);
  v319 = *(_QWORD *)(v320 - 8);
  __chkstk_darwin(v320);
  v317 = (char *)&v302 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v8);
  v322 = (char *)&v302 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkRequest(0);
  v324 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v323 = (char *)&v302 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v12);
  v14 = (char *)&v302 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkModel(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v316 = (char *)&v302 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v302 - v19;
  v21 = (uint64_t *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_objectGraph];
  swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_objectGraph], v337, 0, 0);
  v22 = *v21;
  if (!*v21)
    return;
  v315 = v10;
  v325 = v4;
  v23 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_currentModel];
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_currentModel] = a1;
  v321 = v22;
  swift_retain(v22);
  swift_release(v23);
  v24 = swift_retain(a1);
  v25 = ShowHeader.primaryArtwork.getter(v24);
  LOBYTE(v23) = HeaderModel.PrimaryArtwork.artworkType.getter();
  *(_QWORD *)&v26 = swift_release(v25).n128_u64[0];
  v27 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_titleLabel];
  v318 = a1;
  v311 = v27;
  if ((v23 & 1) != 0)
  {
    objc_msgSend(v27, "setHidden:", 1, v26);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_artworkView], "setHidden:", 1);
    v33 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_blurView];
    v34 = v2;
    if (v33)
      objc_msgSend(v33, "setHidden:", 0);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_spacer], "setHidden:", 0);
    v35 = v318;
  }
  else
  {
    objc_msgSend(v27, "setHidden:", 0, v26);
    v28 = *(_QWORD **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_artworkView];
    objc_msgSend(v28, "setHidden:", 0);
    objc_msgSend(v28, "setBackgroundColor:", 0);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView], "setHidden:", 1);
    v309 = v2;
    ShowHeader.title.getter(objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_spacer], "setHidden:", 1));
    if (v29)
    {
      v31 = v29;
      v32 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v30 = swift_bridgeObjectRelease(v31).n128_u64[0];
    }
    else
    {
      v32 = 0;
    }
    v36 = v315;
    objc_msgSend(v311, "setText:", v32, v30);

    v38 = ShowHeader.primaryArtwork.getter(v37);
    HeaderModel.PrimaryArtwork.artwork.getter(v38);
    v39 = swift_release(v38);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48))(v14, 1, v15, v39) == 1)
    {
      sub_D1D4((uint64_t)v14, &qword_3D0A58);
    }
    else
    {
      sub_2376C((uint64_t)v14, (uint64_t)v20);
      v333 = 0;
      v334 = 0;
      (*(void (**)(uint64_t *))&stru_388.segname[(swift_isaMask & *v28) + 8])(&v333);
      if (qword_3CFA48 != -1)
        swift_once(&qword_3CFA48, sub_1CF694);
      v40 = xmmword_3DB360;
      sub_E7A0((uint64_t)v20, *(double *)&xmmword_3DB360, *((double *)&xmmword_3DB360 + 1));
      v41 = *((_BYTE *)v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style);
      *((_BYTE *)v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style) = 0;
      LOBYTE(v333) = v41;
      sub_EB33C((unsigned __int8 *)&v333);
      v42 = v316;
      sub_27E84((uint64_t)v20, (uint64_t)v316);
      v43 = type metadata accessor for CropCode(0);
      v44 = v322;
      v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v322, 1, 1, v43);
      v46 = v317;
      v47 = static Logger.artwork.getter(v45);
      v48 = static os_log_type_t.info.getter(v47);
      SignpostAndLogTrace(domain:level:)(&v333, v46, v48);
      (*(void (**)(char *, uint64_t))(v319 + 8))(v46, v320);
      v49 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v49, "scale");
      v51 = v50;

      v52 = v323;
      ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v42, 1, 0, v44, 0, _swiftEmptyArrayStorage, &v333, *(double *)&v40, *((double *)&v40 + 1), v51);
      v53 = type metadata accessor for LegacyCachingArtworkView(0);
      v54 = sub_239FC((unint64_t *)&qword_3D5910, 255, type metadata accessor for LegacyCachingArtworkView, (uint64_t)&unk_2F56E0);
      ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v52, v321, 0, v53, v54);
      (*(void (**)(char *, uint64_t))(v324 + 8))(v52, v36);
      sub_239C0((uint64_t)v20);
    }
    v34 = v309;
    v35 = v318;
  }
  v55 = v326;
  swift_retain(v35);
  v57 = sub_1D1778(v56);
  v58 = *(void **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonHeightConstraint];
  if (!v58)
  {
    __break(1u);
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  v59 = v57;
  if (v57 >= 3u)
  {
    v63 = qword_3CFA68;
    v64 = v58;
    if (v63 != -1)
      swift_once(&qword_3CFA68, sub_1CF71C);
    v62 = &qword_3DB390;
  }
  else
  {
    v60 = qword_3CFA60;
    v61 = v58;
    if (v60 != -1)
      swift_once(&qword_3CFA60, sub_1CF70C);
    v62 = &qword_3DB388;
  }
  v65 = (SEL *)&selRef_accessibilityContextButton;
  objc_msgSend(v58, "setConstant:", *(double *)v62);

  v66 = *(char ***)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButtonHeightConstraint];
  if (!v66)
    goto LABEL_115;
  v67 = qword_3CFA60;
  v68 = v66;
  if (v67 != -1)
    swift_once(&qword_3CFA60, sub_1CF70C);
  v69 = &qword_3DB388;
  while (2)
  {
    v72 = v321;
    objc_msgSend(v66, v65[148], *(double *)v69);

    v73 = *(char **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButton];
    objc_msgSend(v73, "setHidden:", (v59 & 0xFD) == 0);
    v65 = *(SEL **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButton];
    -[SEL setHidden:](v65, "setHidden:", v59 < 2u);
    v66 = &selRef_accessibilityContextButton;
    v310 = v73;
    switch(v59)
    {
      case 0u:
        v74 = *(char **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_centralStackView];
        v316 = v74;
        if (qword_3CFA70 != -1)
        {
          swift_once(&qword_3CFA70, sub_1CF72C);
          v74 = v316;
        }
        objc_msgSend(v74, "setCustomSpacing:afterView:", *(_QWORD *)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView], *(double *)&qword_3DB398);
        break;
      case 1u:
        v75 = *(char **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_centralStackView];
        if (qword_3CFA70 != -1)
          swift_once(&qword_3CFA70, sub_1CF72C);
        v316 = v75;
        objc_msgSend(v75, "setCustomSpacing:afterView:", v73, *(double *)&qword_3DB398);
        break;
      case 2u:
        v76 = *(char **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_centralStackView];
        if (qword_3CFA70 != -1)
          swift_once(&qword_3CFA70, sub_1CF72C);
        v316 = v76;
        objc_msgSend(v76, "setCustomSpacing:afterView:", v65, *(double *)&qword_3DB398);
        break;
      default:
        v70 = qword_3CFA68;
        v71 = &selRef_accessibilityContextButton;
        if (v70 != -1)
          swift_once(&qword_3CFA68, sub_1CF71C);
        v69 = &qword_3DB390;
        continue;
    }
    break;
  }
  v315 = *(_QWORD *)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_descriptionLabelContainer];
  v319 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel;
  v77 = *(id *)(v315 + OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel);
  ShowHeader.description.getter();
  if (v78)
  {
    v80 = v78;
    v81 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v79 = swift_bridgeObjectRelease(v80).n128_u64[0];
  }
  else
  {
    v81 = 0;
  }
  objc_msgSend(v77, "setText:", v81, v79);

  v83 = ShowHeader.upsellBanner.getter(v82);
  if (v83)
  {
    v84 = v83;
    v85 = objc_msgSend(v34, "traitCollection");
    v86 = UITraitCollection.isSizeClassCompact.getter();

    if ((v86 & 1) != 0)
      v87 = 2;
    else
      v87 = 3;
    objc_msgSend(*(id *)(v315 + v319), "setNumberOfLines:", v87);
    v88 = *(char **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_upsellBanner];
    objc_msgSend(v88, "setHidden:", 0);
    v317 = v88;
    sub_17C3DC(v84);
    v90 = swift_release(v84);
  }
  else
  {
    v317 = *(char **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_upsellBanner];
    v89 = objc_msgSend(v317, "setHidden:", 1);
  }
  v91 = ShowHeader.hasAdamId.getter(v89, v90);
  v320 = (uint64_t)v65;
  if ((v91 & 1) == 0)
    goto LABEL_68;
  v93 = type metadata accessor for ExplicitContentPresenter(0);
  v94 = BaseObjectGraph.inject<A>(_:)(&v333, v93, v93);
  v95 = v333;
  v96 = *(void **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_metadataView];
  v97 = ShowHeader.metadata.getter(v94);
  v306 = v95;
  *((_BYTE *)v96 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_explicitTreatment) = ExplicitContentPresenter.treatment.getter() & 1;
  v98 = *(_QWORD *)(v97 + 16);
  if (!v98)
    goto LABEL_67;
  v309 = v34;
  v99 = v97 + ((*((unsigned __int8 *)v55 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v55 + 80));
  v305 = (char *)v96 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_newEpisodeCount;
  v302 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_explicit;
  v308 = (char *)v96 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_updateFrequency;
  v314 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_titles;
  v324 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_rating;
  v323 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_numberOfRatings;
  v100 = (uint64_t *)((char *)v96 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_formattedRatingCount);
  v101 = v55[9];
  v102 = (void (*)(uint64_t *, unint64_t, char *))v55[2];
  v103 = v97;
  v104 = enum case for HeaderModel.MetadataComponent.ratings(_:);
  LODWORD(v322) = enum case for HeaderModel.MetadataComponent.category(_:);
  v313 = enum case for HeaderModel.MetadataComponent.updateFrequency(_:);
  v307 = enum case for HeaderModel.MetadataComponent.newEpisodeCount(_:);
  v304 = enum case for HeaderModel.MetadataComponent.explicit(_:);
  v303 = v103;
  swift_bridgeObjectRetain(v103);
  v312 = xmmword_2F03C0;
  v105 = v325;
  do
  {
    v102(v6, v99, v105);
    v106 = ((uint64_t (*)(uint64_t *, char *))v55[11])(v6, v105);
    if (v106 == v104)
    {
      v107 = ((uint64_t (*)(uint64_t *, char *))v55[12])(v6, v105);
      v108 = *v6;
      v109 = Ratings.ratingAverage.getter(v107);
      *(float *)((char *)v96 + v324) = v109;
      *(_QWORD *)&v323[(_QWORD)v96] = Ratings.totalNumberOfRatings.getter();
      v110 = Ratings.formattedCount.getter();
      v111 = v100[1];
      *v100 = v110;
      v100[1] = v112;
      v113 = v108;
      v105 = v325;
      swift_release(v113);
      v114 = v111;
      v55 = v326;
LABEL_61:
      swift_bridgeObjectRelease(v114);
      goto LABEL_62;
    }
    if (v106 == (_DWORD)v322)
    {
      ((void (*)(uint64_t *, char *))v55[12])(v6, v105);
      v115 = *v6;
      v116 = v6[1];
      v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51F0);
      v118 = swift_allocObject(v117, 48, 7);
      *(_OWORD *)(v118 + 16) = v312;
      *(_QWORD *)(v118 + 32) = v115;
      *(_QWORD *)(v118 + 40) = v116;
      v105 = v325;
      v55 = v326;
      v119 = *(_QWORD *)((char *)v96 + v314);
      *(_QWORD *)((char *)v96 + v314) = v118;
      v114 = v119;
      goto LABEL_61;
    }
    if (v106 == v313)
    {
      ((void (*)(uint64_t *, char *))v55[12])(v6, v105);
      v120 = *v6;
      v121 = v6[1];
      v122 = &v329;
LABEL_60:
      v123 = (_QWORD *)*((_QWORD *)v122 - 32);
      v114 = v123[1];
      *v123 = v120;
      v123[1] = v121;
      goto LABEL_61;
    }
    if (v106 == v307)
    {
      ((void (*)(uint64_t *, char *))v55[12])(v6, v105);
      v120 = *v6;
      v121 = v6[1];
      v122 = &v328;
      goto LABEL_60;
    }
    if (v106 == v304)
      *((_BYTE *)v96 + v302) = 1;
    else
      ((void (*)(uint64_t *, char *))v55[1])(v6, v105);
LABEL_62:
    v99 += v101;
    --v98;
  }
  while (v98);
  v97 = v303;
  swift_bridgeObjectRelease(v303);
  v34 = v309;
  v35 = v318;
  v65 = (SEL *)v320;
LABEL_67:
  v124 = v97;
  v125 = *(void **)((char *)v96 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label);
  sub_1D75F0();
  v127 = v126;
  objc_msgSend(v125, "setAttributedText:", v126);

  objc_msgSend(v96, "invalidateIntrinsicContentSize");
  swift_release(v306);
  v92 = swift_bridgeObjectRelease(v124);
  v72 = v321;
LABEL_68:
  v128 = *(void **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_metadataView];
  v129 = objc_msgSend(v128, "setHidden:", (ShowHeader.hasAdamId.getter(v91, v92) & 1) == 0);
  v130 = ShowHeader.providerAction.getter(v129);
  if (v130)
  {
    v131 = v130;
    v325 = *(char **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView];
    v132 = *(id *)&v325[OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button];
    ChevronButton.setAction(_:)(v131);

    sub_1D0ED0((uint64_t)v34, v35, v72);
    v133 = swift_release(v131);
    v134 = v315;
  }
  else
  {
    ShowHeader.providerTitle.getter();
    v134 = v315;
    if (v135)
    {
      v136 = v135;
      v325 = *(char **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView];
      v137 = *(char **)&v325[OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button];
      v138 = *(void **)&v137[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel];
      v139 = v137;
      v140 = v138;
      v65 = (SEL *)v320;
      v141 = v140;
      v142 = String._bridgeToObjectiveC()();
      objc_msgSend(v141, "setText:", v142, swift_bridgeObjectRelease(v136).n128_f64[0]);

      sub_1D0ED0((uint64_t)v34, v35, v72);
    }
    else
    {
      v325 = *(char **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView];
      objc_msgSend(v325, "setHidden:", 1);
    }
  }
  v143 = ShowHeader.upsellBanner.getter(v133);
  v147 = 1;
  if (v143)
  {
    v145 = v143;
    v146 = UpsellBanner.isEntitlementsBanner.getter(v144);
    swift_release(v145);
    if ((v146 & 1) != 0)
      v147 = 0;
  }
  v317[qword_3D96B0] = v147;
  objc_msgSend(v316, "setCustomSpacing:afterView:", v128, sub_1CF820());
  v149 = ShowHeader.upsellBanner.getter(v148);
  v151 = swift_release(v149);
  if (v149)
  {
    v150 = objc_msgSend(v128, "isHidden", v151.n128_f64[0]);
    if ((_DWORD)v150)
      v150 = objc_msgSend(v316, "setCustomSpacing:afterView:", v134, sub_1CF820());
  }
  v152 = ShowHeader.entitlementBadge.getter(v150, v151);
  v153 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_displayEntitlementBadge;
  v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_displayEntitlementBadge] = v152 & 1;
  sub_1CFDD4();
  if (v34[v153] == 1)
  {
    v154 = (char *)*(id *)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_entitlementBadge];
    v155 = (void *)ShowHeader.preferredBackgroundColor.getter();
    if (v155)
    {
      v156 = v155;
      v157 = sub_FD790();
      v159 = v158;
      objc_msgSend(*(id *)&v154[qword_3D5E20], "setEffect:", v157);
      v65 = (SEL *)v320;
      objc_msgSend(*(id *)&v154[qword_3D5E28], "setEffect:", v159);

      v154 = v159;
    }

  }
  v160 = *(void **)(v134 + v319);
  v161 = (void *)objc_opt_self(UIFont);
  v162 = v160;
  v163 = objc_msgSend(v161, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v164 = (void *)static UIFont.preferredFont(forTextStyle:traits:)(UIFontTextStyleSubheadline, 2);
  isa = ShowHeader.richDescription(standardFont:emphasizedFont:)((UIFont)v163, (UIFont)v164).super.isa;

  objc_msgSend(v162, "setAttributedText:", isa);
  v166 = ShowHeader.fullDescriptionAction.getter();
  if (v166)
  {
    v168 = v166;
    v169 = *(void **)(v134 + OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_moreButton);
    v335 = type metadata accessor for FlowAction(0, v167);
    v336 = sub_239FC(&qword_3D22B0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
    v333 = v168;
    v170 = v169;
    swift_retain(v168);
    UIControl.setAction(_:for:asPartOf:)(&v333, 0x2000, v72);

    swift_release(v168);
    v166 = __swift_destroy_boxed_opaque_existential_0(&v333);
  }
  ShowHeader.secondaryButtonSubtitle.getter(v166);
  p_name = &stru_3B7FF8.name;
  v326 = v128;
  if (!v171)
  {
    v196 = sub_1CFBFC();
    objc_msgSend(v196, "setHidden:", 1);
    goto LABEL_96;
  }
  v173 = v171;
  v174 = sub_1CFBFC();
  v175 = String._bridgeToObjectiveC()();
  objc_msgSend(v174, "setText:", v175, swift_bridgeObjectRelease(v173).n128_f64[0]);

  v176 = sub_1CFBFC();
  objc_msgSend(v176, "setHidden:", 0);

  v177 = v316;
  objc_msgSend(v316, "setCustomSpacing:afterView:", v65, 24.0);
  v178 = sub_1CFBFC();
  objc_msgSend(v177, "setCustomSpacing:afterView:", v178, 32.0);

  v179 = ShowHeader.subtitleAction.getter();
  if (!v179
    || (v180 = v179,
        v181 = type metadata accessor for OAuthAction(0),
        v182 = swift_dynamicCastClass(v180, v181),
        swift_release(v180),
        !v182))
  {
    v196 = sub_1CFBFC();
    objc_msgSend(v196, "setUserInteractionEnabled:", 0);
    goto LABEL_96;
  }
  v183 = sub_1CFBFC();
  v184 = objc_msgSend(v183, "textColor");

  if (!v184)
  {
LABEL_116:
    __break(1u);
    JUMPOUT(0x1CF674);
  }
  v185 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
  inited = swift_initStackObject(v185, v327);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  *(_QWORD *)(inited + 32) = NSUnderlineStyleAttributeName;
  *(_QWORD *)(inited + 40) = 1;
  *(_QWORD *)(inited + 64) = &type metadata for Int;
  *(_QWORD *)(inited + 72) = NSUnderlineColorAttributeName;
  *(_QWORD *)(inited + 104) = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v184;
  v187 = NSUnderlineStyleAttributeName;
  v188 = NSUnderlineColorAttributeName;
  v189 = v184;
  v190 = sub_D4784(inited);
  v191 = sub_1CFBFC();
  v192 = sub_1CFBFC();
  v193 = objc_msgSend(v192, "text");

  if (v193)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v193);
    v195 = v194;

  }
  else
  {
    v195 = 0xE000000000000000;
  }
  v197 = objc_allocWithZone((Class)NSAttributedString);
  v198 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v195);
  type metadata accessor for Key(0);
  sub_239FC((unint64_t *)&qword_3D0150, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
  v199 = Dictionary._bridgeToObjectiveC()().super.isa;
  v200 = objc_msgSend(v197, "initWithString:attributes:", v198, v199, swift_bridgeObjectRelease(v190).n128_f64[0]);

  objc_msgSend(v191, "setAttributedText:", v200);
  v196 = sub_1CFBFC();
  objc_msgSend(v196, "setUserInteractionEnabled:", 1);

  v35 = v318;
  p_name = &stru_3B7FF8.name;
  v65 = (SEL *)v320;
LABEL_96:

  v202 = ShowHeader.secondaryButtonAction.getter(v201);
  if (v202)
  {
    v203 = v202;
    v204 = qword_3D5D10;
    v205 = *(id *)((char *)v65 + qword_3D5D10);
    Action.title.getter(v206);
    if (v207)
    {
      v209 = v207;
      v210 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v208 = swift_bridgeObjectRelease(v209).n128_u64[0];
    }
    else
    {
      v210 = 0;
    }
    objc_msgSend(v205, "setTitle:forState:", v210, 0, v208);

    v333 = v35;
    v211 = type metadata accessor for ShowHeader(0);
    v212 = EntitlementsActionProviding.entitlementsAction.getter(v211, &protocol witness table for ShowHeader);
    if (v212)
    {
      v213 = v212;
      v335 = type metadata accessor for Action(0);
      v336 = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v333 = v213;
      v214 = *(void **)((char *)v65 + v204);
      swift_retain(v213);
      v215 = v214;
      UIControl.setAction(_:for:asPartOf:)(&v333, 0x2000, v321);

      sub_1D5D4((uint64_t)&v333, (uint64_t)v332);
      v216 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
      v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C0);
      if (swift_dynamicCast(&v330, v332, v216, v217, 6))
      {
        v218 = v330;
        v219 = v331;
        v220 = v34;
        v221 = *v330;
        v222 = swift_allocObject(&unk_389958, 24, 7);
        swift_unknownObjectWeakInit(v222 + 16, v320);
        v223 = swift_retain(v222);
        v224 = v221;
        v34 = v220;
        v65 = (SEL *)v320;
        v225 = v219;
        v35 = v318;
        dispatch thunk of CompletableAction.addCompletionHandler(_:)(sub_181644, v222, v224, v225, v223);
        v226 = v222;
        v134 = v315;
        swift_release_n(v226, 2);
        sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
        v227 = swift_allocObject(&unk_389958, 24, 7);
        swift_unknownObjectWeakInit(v227 + 16, v65);
        v228 = v215;
        v230 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v229, 0, 0, 0, sub_18164C, v227);
        objc_msgSend(v228, "addAction:forControlEvents:", v230, 0x2000);
        swift_release(v213);
        v231 = v218;
        p_name = (char **)(&stru_3B7FF8 + 8);
        swift_release(v231);

        goto LABEL_106;
      }
      swift_release(v213);
    }
    else
    {
      v335 = type metadata accessor for Action(0);
      v336 = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v333 = v203;
      v232 = *(void **)((char *)v65 + v204);
      swift_retain(v203);
      v233 = v232;
      UIControl.setAction(_:for:asPartOf:)(&v333, 0x2000, v321);

      sub_1D5D4((uint64_t)&v333, (uint64_t)v332);
      v234 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
      v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C0);
      if (swift_dynamicCast(&v330, v332, v234, v235, 6))
      {
        v237 = v330;
        v236 = v331;
        v238 = *v330;
        v239 = v34;
        v240 = swift_allocObject(&unk_389958, 24, 7);
        swift_unknownObjectWeakInit(v240 + 16, v320);
        v241 = swift_retain(v240);
        v242 = v238;
        p_name = (char **)(&stru_3B7FF8 + 8);
        dispatch thunk of CompletableAction.addCompletionHandler(_:)(sub_181644, v240, v242, v236, v241);
        v243 = v240;
        v34 = v239;
        v65 = (SEL *)v320;
        swift_release_n(v243, 2);
        sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
        v35 = v318;
        v244 = swift_allocObject(&unk_389958, 24, 7);
        swift_unknownObjectWeakInit(v244 + 16, v65);
        v245 = v233;
        v230 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v246, 0, 0, 0, sub_18164C, v244);
        objc_msgSend(v245, "addAction:forControlEvents:", v230, 0x2000);
        swift_release(v237);

LABEL_106:
      }
    }
    __swift_destroy_boxed_opaque_existential_0(&v333);
    objc_msgSend(v65, p_name[268], 0);
    swift_release(v203);
  }
  else
  {
    -[SEL setHidden:](v65, "setHidden:", 1);
  }
  v247 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonController;
  v248 = *(_QWORD *)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonController];
  if (v248)
    goto LABEL_111;
  v249 = *(void **)&v310[qword_3D5D10];
  LOBYTE(v333) = 1;
  v332[0] = 1;
  v250 = type metadata accessor for SmartPlayButtonController(0);
  swift_allocObject(v250, *(unsigned int *)(v250 + 48), *(unsigned __int16 *)(v250 + 52));
  v251 = v321;
  swift_retain(v321);
  v252 = v249;
  v253 = SmartPlayButtonController.init(button:context:platform:objectGraph:)(v249, (char *)&v333, v332, v251);
  v254 = *(_QWORD *)&v34[v247];
  *(_QWORD *)&v34[v247] = v253;
  v255 = swift_release(v254).n128_u64[0];
  v248 = *(_QWORD *)&v34[v247];
  if (v248)
  {
LABEL_111:
    swift_retain(v248);
    sub_AB2EC(v35);
    v255 = swift_release(v248).n128_u64[0];
  }
  v256 = objc_msgSend(*(id *)&v325[OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button], "layer", *(double *)&v255);
  v257 = objc_msgSend(v34, "traitCollection");
  v258 = (void *)UITraitCollection.suggestedTextBlendModeFilter.getter();

  objc_msgSend(v256, "setCompositingFilter:", v258);
  v259 = *(void **)(v134 + v319);
  v333 = 0;
  v334 = 0xE000000000000000;
  v260 = v259;
  v261._countAndFlagsBits = 0xD000000000000014;
  v261._object = (void *)0x8000000000308A30;
  String.append(_:)(v261);
  v262._countAndFlagsBits = 46;
  v262._object = (void *)0xE100000000000000;
  String.append(_:)(v262);
  v332[0] = 2;
  _print_unlocked<A, B>(_:_:)(v332, &v333, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v263 = v334;
  v264 = String._bridgeToObjectiveC()();
  objc_msgSend(v260, "setAccessibilityIdentifier:", v264, swift_bridgeObjectRelease(v263).n128_f64[0]);

  v265 = *(void **)&v310[qword_3D5D10];
  v333 = 0;
  v334 = 0xE000000000000000;
  v266 = v265;
  v267._countAndFlagsBits = 0xD000000000000014;
  v267._object = (void *)0x8000000000308A30;
  String.append(_:)(v267);
  v268._countAndFlagsBits = 46;
  v268._object = (void *)0xE100000000000000;
  String.append(_:)(v268);
  v332[0] = 3;
  _print_unlocked<A, B>(_:_:)(v332, &v333, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v269 = v334;
  v270 = String._bridgeToObjectiveC()();
  objc_msgSend(v266, "setAccessibilityIdentifier:", v270, swift_bridgeObjectRelease(v269).n128_f64[0]);

  v271 = *(void **)(v320 + qword_3D5D10);
  v333 = 0;
  v334 = 0xE000000000000000;
  v272 = v271;
  v273._countAndFlagsBits = 0xD000000000000014;
  v273._object = (void *)0x8000000000308A30;
  String.append(_:)(v273);
  v274._countAndFlagsBits = 46;
  v274._object = (void *)0xE100000000000000;
  String.append(_:)(v274);
  v332[0] = 4;
  _print_unlocked<A, B>(_:_:)(v332, &v333, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v275 = v334;
  v276 = String._bridgeToObjectiveC()();
  objc_msgSend(v272, "setAccessibilityIdentifier:", v276, swift_bridgeObjectRelease(v275).n128_f64[0]);

  v277 = sub_1CFBFC();
  v333 = 0;
  v334 = 0xE000000000000000;
  v278._countAndFlagsBits = 0xD000000000000014;
  v278._object = (void *)0x8000000000308A30;
  String.append(_:)(v278);
  v279._countAndFlagsBits = 46;
  v279._object = (void *)0xE100000000000000;
  String.append(_:)(v279);
  v332[0] = 5;
  _print_unlocked<A, B>(_:_:)(v332, &v333, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v280 = v334;
  v281 = String._bridgeToObjectiveC()();
  objc_msgSend(v277, "setAccessibilityIdentifier:", v281, swift_bridgeObjectRelease(v280).n128_f64[0]);

  v282 = *(void **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_ratingView];
  v333 = 0;
  v334 = 0xE000000000000000;
  v283._countAndFlagsBits = 0xD000000000000014;
  v283._object = (void *)0x8000000000308A30;
  String.append(_:)(v283);
  v284._countAndFlagsBits = 46;
  v284._object = (void *)0xE100000000000000;
  String.append(_:)(v284);
  v332[0] = 14;
  _print_unlocked<A, B>(_:_:)(v332, &v333, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v285 = v334;
  v286 = String._bridgeToObjectiveC()();
  objc_msgSend(v282, "setAccessibilityIdentifier:", v286, swift_bridgeObjectRelease(v285).n128_f64[0]);

  v333 = 0;
  v334 = 0xE000000000000000;
  v287._countAndFlagsBits = 0xD000000000000014;
  v287._object = (void *)0x8000000000308A30;
  String.append(_:)(v287);
  v288._countAndFlagsBits = 46;
  v288._object = (void *)0xE100000000000000;
  String.append(_:)(v288);
  v332[0] = 13;
  _print_unlocked<A, B>(_:_:)(v332, &v333, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v289 = v334;
  v290 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v291 = swift_bridgeObjectRelease(v289).n128_u64[0];
  objc_msgSend(v326, "setAccessibilityIdentifier:", v290, v291);

  v333 = 0;
  v334 = 0xE000000000000000;
  v292._countAndFlagsBits = 0xD000000000000014;
  v292._object = (void *)0x8000000000308A30;
  String.append(_:)(v292);
  v293._countAndFlagsBits = 46;
  v293._object = (void *)0xE100000000000000;
  String.append(_:)(v293);
  v332[0] = 0;
  _print_unlocked<A, B>(_:_:)(v332, &v333, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v294 = v334;
  v295 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v296 = swift_bridgeObjectRelease(v294).n128_u64[0];
  objc_msgSend(v311, "setAccessibilityIdentifier:", v295, v296);

  v333 = 0;
  v334 = 0xE000000000000000;
  v297._countAndFlagsBits = 0xD000000000000014;
  v297._object = (void *)0x8000000000308A30;
  String.append(_:)(v297);
  v298._countAndFlagsBits = 46;
  v298._object = (void *)0xE100000000000000;
  String.append(_:)(v298);
  v332[0] = 12;
  _print_unlocked<A, B>(_:_:)(v332, &v333, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v299 = v334;
  v300 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v301 = swift_bridgeObjectRelease(v299).n128_u64[0];
  objc_msgSend(v317, "setAccessibilityIdentifier:", v300, v301);
  swift_release(v321);

}

void sub_1CF684()
{
  qword_3DB358 = 0x4034000000000000;
}

int64x2_t sub_1CF694()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4069000000000000uLL);
  xmmword_3DB360 = (__int128)result;
  return result;
}

double sub_1CF6AC()
{
  double result;

  if (qword_3CF2A8 != -1)
    swift_once(&qword_3CF2A8, sub_BA728);
  result = *(double *)&xmmword_3FACB0;
  xmmword_3DB370 = xmmword_3FACB0;
  return result;
}

void sub_1CF6FC()
{
  qword_3DB380 = 0x4049000000000000;
}

void sub_1CF70C()
{
  qword_3DB388 = 0x4048000000000000;
}

void sub_1CF71C()
{
  qword_3DB390 = 0x4046000000000000;
}

void sub_1CF72C()
{
  qword_3DB398 = 0x4040000000000000;
}

id sub_1CF73C()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, "setAxis:", 1);
  objc_msgSend(v0, "setAlignment:", 3);
  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setAllowsGroupBlending:", 0);

  objc_msgSend(v0, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v0, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v0, "setLayoutMargins:", 2.0, 0.0, 0.0, 0.0);
  return v0;
}

double sub_1CF820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  __n128 v16;
  char v17;
  double result;
  uint64_t v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_currentModel;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_currentModel);
  if (v6 && (v7 = swift_retain(v6), v8 = ShowHeader.upsellBanner.getter(v7), v9 = swift_release(v6), v8))
  {
    UpsellBanner.wordmarkArtwork.getter(v9);
    swift_release(v8);
    v10 = type metadata accessor for ArtworkModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v4, 1, v10) != 1)
    {
      sub_D1D4((uint64_t)v4, &qword_3D0A58);
      return 37.5;
    }
  }
  else
  {
    v12 = type metadata accessor for ArtworkModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  }
  sub_D1D4((uint64_t)v4, &qword_3D0A58);
  v13 = *(_QWORD *)(v1 + v5);
  if (!v13)
    return 50.0;
  v14 = swift_retain(*(_QWORD *)(v1 + v5));
  v15 = ShowHeader.upsellBanner.getter(v14);
  v16 = swift_release(v13);
  if (!v15)
    return 50.0;
  v17 = UpsellBanner.isEntitlementsBanner.getter(v16);
  swift_release(v15);
  result = 22.0;
  if ((v17 & 1) == 0)
    return 50.0;
  return result;
}

char *sub_1CF988()
{
  int *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  char *v21;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v0 = (int *)type metadata accessor for VEVButtonContainer.Style(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Glyph(0);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  __chkstk_darwin(v3);
  v37 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(0x6C69662E79616C70, 0xE90000000000006CLL, 0x4031000000000000, 0, 5, -1, 0, 0, 0);
  if (qword_3CF498 != -1)
    swift_once(&qword_3CF498, sub_13FB40);
  v5 = qword_3FB318;
  v6 = qword_3FB320;
  v7 = qword_3FB328;
  v34 = qword_3FB320;
  v35 = qword_3FB318;
  v8 = qword_3FB330;
  v9 = qword_3FB338;
  v32 = qword_3FB330;
  v33 = qword_3FB328;
  v31 = qword_3FB338;
  v36 = (void *)xmmword_3FB340;
  v29 = qword_3FB310;
  v30 = *((_QWORD *)&xmmword_3FB340 + 1);
  v27 = qword_3FB358;
  v28 = qword_3FB350;
  v26 = qword_3FB360;
  v24 = HIBYTE(word_3FB368);
  v25 = word_3FB368;
  v10 = &v2[v0[5]];
  v11 = v38;
  v12 = v39;
  (*(void (**)(char *, char *))(v38 + 16))(v10, v37);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v12);
  v13 = (void *)v29;
  v14 = v30;
  *(_QWORD *)v2 = v29;
  *((_QWORD *)v2 + 1) = v5;
  *((_QWORD *)v2 + 2) = v6;
  *((_QWORD *)v2 + 3) = v7;
  *((_QWORD *)v2 + 4) = v8;
  *((_QWORD *)v2 + 5) = v9;
  *((_QWORD *)v2 + 6) = v36;
  *((_QWORD *)v2 + 7) = v14;
  v16 = v27;
  v15 = v28;
  *((_QWORD *)v2 + 8) = v28;
  *((_QWORD *)v2 + 9) = v16;
  v17 = v26;
  *((_QWORD *)v2 + 10) = v26;
  LOBYTE(v9) = v24;
  LOBYTE(v8) = v25;
  v2[88] = v25;
  v2[89] = v9;
  v18 = &v2[v0[6]];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v19 = &v2[v0[8]];
  *(_OWORD *)v19 = xmmword_2F1580;
  *((_OWORD *)v19 + 1) = xmmword_2F1580;
  *(_QWORD *)&v2[v0[9]] = 9;
  v2[v0[7]] = 0;
  v20 = objc_allocWithZone((Class)type metadata accessor for VEVButtonContainer(0));
  sub_DDA0(v13, v35, v34, v33, v32, v31, v36, v14, v15, v16, v17, v8, v9);
  v21 = sub_1DF878((uint64_t)v2);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
  return v21;
}

id sub_1CFBFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___secondaryButtonSubtitleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___secondaryButtonSubtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___secondaryButtonSubtitleLabel);
  }
  else
  {
    v4 = sub_1CFC5C(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1CFC5C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  _QWORD v7[6];
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;

  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF4E0 != -1)
    swift_once(&qword_3CF4E0, sub_13FEA0);
  v7[0] = qword_3FB670;
  v7[1] = *(_QWORD *)algn_3FB678;
  v7[2] = qword_3FB680;
  v7[3] = qword_3FB688;
  v7[4] = qword_3FB690;
  v7[5] = qword_3FB698;
  v8 = xmmword_3FB6A0;
  v9 = qword_3FB6B0;
  v10 = unk_3FB6B8;
  v11 = qword_3FB6C0;
  v12 = word_3FB6C8;
  sub_DDA0((void *)qword_3FB670, *(uint64_t *)algn_3FB678, qword_3FB680, qword_3FB688, qword_3FB690, qword_3FB698, (void *)xmmword_3FB6A0, *((uint64_t *)&xmmword_3FB6A0 + 1), qword_3FB6B0, unk_3FB6B8, qword_3FB6C0, word_3FB6C8, SHIBYTE(word_3FB6C8));
  v2 = sub_A96AC((uint64_t)v7, 2, 0, 1);
  v3 = qword_3CF020;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_3CF020, sub_E274);
  objc_msgSend(v4, "setTextColor:", qword_3FA880);

  objc_msgSend(v4, "setHidden:", 1);
  v5 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", a1, "secondaryButtonSubtitleLabelTapped");
  objc_msgSend(v4, "addGestureRecognizer:", v5);

  return v4;
}

void sub_1CFDD4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _BYTE *v3;
  void *v4;
  _QWORD *v5;
  double v6;
  char **v7;
  Class isa;

  v1 = sub_1CFECC();
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_displayEntitlementBadge;
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_displayEntitlementBadge);
  objc_msgSend(v1, "setActive:", (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_displayEntitlementBadge) & 1) == 0);

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_entitlementBadge), "setHidden:", (*v3 & 1) == 0);
  LODWORD(v3) = *(unsigned __int8 *)(v0 + v2);
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = sub_1CFFC4();
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v6 = swift_bridgeObjectRelease(v5).n128_u64[0];
  v7 = &selRef_activateConstraints_;
  if (!(_DWORD)v3)
    v7 = &selRef_deactivateConstraints_;
  objc_msgSend(v4, *v7, isa, v6);

}

id sub_1CFECC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___stackViewBottomGuideConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___stackViewBottomGuideConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___stackViewBottomGuideConstraint];
  }
  else
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_centralStackView], "bottomAnchor");
    v5 = objc_msgSend(v0, "bottomAnchor");
    if (qword_3CFA40 != -1)
      swift_once(&qword_3CFA40, sub_1CF684);
    v6 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v5, -*(double *)&qword_3DB358);

    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

_QWORD *sub_1CFFC4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___entitlementBadgeConstraints;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___entitlementBadgeConstraints];
  if (v2)
  {
    v3 = *(_QWORD **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___entitlementBadgeConstraints];
  }
  else
  {
    v3 = sub_1D0028(v0);
    v4 = *(_QWORD *)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

_QWORD *sub_1D0028(char *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_entitlementBadge;
  v3 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_entitlementBadge], "bottomAnchor");
  v4 = objc_msgSend(a1, "bottomAnchor");
  v5 = objc_msgSend(v3, "constraintEqualToAnchor:", v4);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
  v8 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v7 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v8 >= v7 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
  v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v5);
  specialized Array._endMutation()(v9);
  v10 = objc_msgSend(*(id *)&a1[v2], "leftAnchor");
  v11 = objc_msgSend(a1, "leftAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v15 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v14 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v15 >= v14 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
  v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
  specialized Array._endMutation()(v16);
  v17 = objc_msgSend(*(id *)&a1[v2], "rightAnchor");
  v18 = objc_msgSend(a1, "rightAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  v22 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v21 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
  specialized Array._endMutation()(v23);
  v24 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_centralStackView], "bottomAnchor");
  v25 = objc_msgSend(*(id *)&a1[v2], "topAnchor");
  if (qword_3CFA40 != -1)
    swift_once(&qword_3CFA40, sub_1CF684);
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, -*(double *)&qword_3DB358);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  v29 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v28 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v29 >= v28 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
  v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
  specialized Array._endMutation()(v30);
  return _swiftEmptyArrayStorage;
}

void sub_1D0364(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  Class isa;
  int v15;
  int v16;
  uint64_t v17;

  v1 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(*a1, 2);
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v1, 2);
    v11 = (void *)objc_opt_self(NSLayoutConstraint);
    v12 = *a1;
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v12);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "activateConstraints:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

    return;
  }
  if (v1 < 0)
    v10 = *a1;
  else
    v10 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*a1, 2);
  v2 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v2)
    goto LABEL_13;
LABEL_3:
  type metadata accessor for UILayoutPriority(0);
  if (v2 >= 1)
  {
    v4 = v3;
    v5 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1);
      else
        v6 = *(id *)(v1 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v15 = 1065353216;
      v16 = 1148846080;
      v8 = sub_239FC((unint64_t *)&qword_3DAE38, 255, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
      static _UIKitNumericRawRepresentable.- infix(_:_:)(&v17, &v16, &v15, v4, v8);
      LODWORD(v9) = v17;
      objc_msgSend(v7, "setPriority:", v9);

    }
    while (v2 != v5);
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1D056C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  Class isa;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_currentModel);
  if (v1)
  {
    v2 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_descriptionLabelContainer)
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel);
    v3 = (void *)objc_opt_self(UIFont);
    swift_retain(v1);
    v4 = v2;
    v5 = objc_msgSend(v3, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
    sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v6 = (void *)static UIFont.preferredFont(forTextStyle:traits:)(UIFontTextStyleSubheadline, 2);
    isa = ShowHeader.richDescription(standardFont:emphasizedFont:)((UIFont)v5, (UIFont)v6).super.isa;

    objc_msgSend(v4, "setAttributedText:", isa);
    swift_release(v1);

  }
}

Swift::Void __swiftcall ShowHeaderView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  char *v2;
  Class isa;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  objc_super v28;

  v2 = v1;
  isa = a1.value.super.isa;
  v28.receiver = v2;
  v28.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v28, "traitCollectionDidChange:", isa);
  if (isa)
    v4 = -[objc_class userInterfaceStyle](isa, "userInterfaceStyle");
  else
    v4 = 0;
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = objc_msgSend(v5, "userInterfaceStyle");

  if (!isa || v4 != v6)
  {
    v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_metadataView];
    if (qword_3CF020 != -1)
      swift_once(&qword_3CF020, sub_E274);
    v8 = (void *)qword_3FA880;
    v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_color;
    v10 = *(void **)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_color);
    *(_QWORD *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_color) = qword_3FA880;
    v11 = v8;

    objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label), "setTextColor:", *(_QWORD *)(v7 + v9));
    v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView];
    v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button;
    v14 = *(char **)(v12 + OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button);
    v15 = (void *)qword_3FA880;
    v16 = *(void **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView];
    v17 = v14;
    v18 = v15;
    objc_msgSend(v16, "setTintColor:", v18);
    v19 = *(id *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel];
    objc_msgSend(v19, "setTextColor:", v18);

    v20 = sub_1CFBFC();
    objc_msgSend(v20, "setTextColor:", qword_3FA880);

    v21 = objc_msgSend(*(id *)(v12 + v13), "layer");
    v22 = objc_msgSend(v2, "traitCollection");
    v23 = (void *)UITraitCollection.suggestedTextBlendModeFilter.getter();

    objc_msgSend(v21, "setCompositingFilter:", v23);
    v24 = sub_1CFBFC();
    v25 = objc_msgSend(v24, "layer");

    v26 = objc_msgSend(v2, "traitCollection");
    v27 = (void *)UITraitCollection.suggestedTextBlendModeFilter.getter();

    objc_msgSend(v25, "setCompositingFilter:", v27);
  }
}

uint64_t sub_1D0A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD v28[4];
  _QWORD v29[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v28[-1] - v9;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_currentModel);
  if (v11 && (v12 = swift_retain(v11), v13 = ShowHeader.subtitleAction.getter(v12), swift_release(v11), v13))
  {
    v14 = static Logger.purchases.getter(v8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "Performing OAuth action on show header subtitle click.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    v29[3] = type metadata accessor for Action(0);
    v29[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v29[0] = v13;
    swift_retain(v13);
    v18 = sub_1CFBFC();
    v28[3] = type metadata accessor for DynamicTypeLabel();
    v28[0] = v18;
    v20 = sub_239FC(&qword_3DB4D0, v19, (uint64_t (*)(uint64_t))type metadata accessor for ShowHeaderView, (uint64_t)&protocol conformance descriptor for ShowHeaderView);
    v21 = DependencyBindableView.perform(_:from:in:)(v29, v28, v1, ObjectType, v20);
    swift_release(v21);
    swift_release(v13);
    sub_D1D4((uint64_t)v28, &qword_3D1A70);
    return __swift_destroy_boxed_opaque_existential_0(v29);
  }
  else
  {
    v23 = static Logger.purchases.getter(v8);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "User clicked on OAuth but there was no action available.", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t ShowHeaderView.objectGraph.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_objectGraph);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_objectGraph, v3, 0, 0);
  return swift_retain(*v1);
}

id sub_1D0ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v23;
  int v24;
  void *v25;
  __n128 v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  __int128 v31;
  uint64_t v32;
  id v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;

  v41 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkRequest(0);
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v18 = __chkstk_darwin(v17).n128_u64[0];
  v20 = (char *)&v38 - v19;
  v21 = *(char **)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView);
  ShowHeader.providerIconArtwork.getter(objc_msgSend(v21, "setHidden:", 0, v18));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_D1D4((uint64_t)v12, &qword_3D0A58);
    return objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_icon], "setHidden:", 1);
  }
  else
  {
    sub_2376C((uint64_t)v12, (uint64_t)v20);
    v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_icon;
    objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_icon], "setHidden:", 0);
    v24 = v20[64];
    if (v24 == 255)
    {
      if (qword_3CF028 != -1)
        swift_once(&qword_3CF028, sub_E308);
      v27 = (id)qword_3FA888;
    }
    else
    {
      v25 = (void *)*((_QWORD *)v20 + 7);
      sub_27F80(v25, v20[64]);
      v27 = (id)Color.color.getter(v25, v26);
      sub_27F94(v25, v24);
    }
    v28 = *(void **)&v21[v23];
    objc_msgSend(v28, "setBackgroundColor:", v27);
    sub_27E84((uint64_t)v20, (uint64_t)v16);
    v29 = qword_3CFA50;
    v30 = v28;
    if (v29 != -1)
      swift_once(&qword_3CFA50, sub_1CF6AC);
    v31 = xmmword_3DB370;
    v32 = type metadata accessor for CropCode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v6, 1, 1, v32);
    v43 = 0;
    memset(v42, 0, sizeof(v42));
    v33 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v33, "scale");
    v35 = v34;

    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v16, 1, 0, v6, 0, _swiftEmptyArrayStorage, v42, *(double *)&v31, *((double *)&v31 + 1), v35);
    v36 = type metadata accessor for LegacyCachingArtworkView(0);
    v37 = sub_239FC((unint64_t *)&qword_3D5910, 255, type metadata accessor for LegacyCachingArtworkView, (uint64_t)&unk_2F56E0);
    ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v9, v41, 0, v36, v37);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v40);
    return (id)sub_239C0((uint64_t)v20);
  }
}

char *sub_1D1298(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews13FadedBlurView_maskLayer;
  v5 = objc_allocWithZone((Class)CAGradientLayer);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews13FadedBlurView_maskGradientInPoints] = &_swiftEmptyArrayStorage;
  v7 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v8 = *(void **)&v1[v4];
  *(_QWORD *)&v1[v4] = v7;

  v13.receiver = v6;
  v13.super_class = ObjectType;
  v9 = (char *)objc_msgSendSuper2(&v13, "initWithEffect:", a1);
  v10 = objc_msgSend(v9, "layer");
  v11 = *(id *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews13FadedBlurView_maskLayer];
  objc_msgSend(v10, "setMask:", v11);

  return v9;
}

_QWORD *sub_1D13EC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Class isa;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  Class v9;
  objc_class *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  CGRect v15;

  objc_msgSend(v0, "bounds");
  CGRectGetHeight(v15);
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13FadedBlurView_maskGradientInPoints];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(v1);
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v3 = 0;
    do
    {
      v4 = v3 + 1;
      isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v7 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, isa);
      specialized ContiguousArray._endMutation()(v8);
      v3 = v4;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease(v1);
  }
  sub_E710(0, (unint64_t *)&qword_3D5AF8, NSNumber_ptr);
  v9 = NSNumber.init(integerLiteral:)(1).super.super.isa;
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v10 = v9;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v12 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v11 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
  specialized Array._endMutation()(v13);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

  return _swiftEmptyArrayStorage;
}

void sub_1D1628()
{
  char *v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;
  Class isa;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, "layoutSubviews");
  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews13FadedBlurView_maskLayer;
  v2 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13FadedBlurView_maskLayer];
  v3 = sub_1D13EC();
  sub_E710(0, (unint64_t *)&qword_3D5AF8, NSNumber_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setLocations:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  v5 = *(id *)&v0[v1];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v5, "setFrame:");

}

uint64_t sub_1D1778(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = ((uint64_t (*)(void))ShowHeader.secondaryButtonAction.getter)();
  v3 = swift_release(v2);
  if (v2)
  {
    v4 = ShowHeader.primaryButtonAction.getter(v3);
    v3 = swift_release(v4);
    if (v4)
    {
      swift_release(a1);
      return 3;
    }
  }
  v6 = ShowHeader.primaryButtonAction.getter(v3);
  v7 = swift_release(v6);
  if (v6 && (v8 = ShowHeader.secondaryButtonAction.getter(v7), v7 = swift_release(v8), !v8))
  {
    swift_release(a1);
    return 1;
  }
  else
  {
    v9 = ShowHeader.secondaryButtonAction.getter(v7);
    v10 = swift_release(v9);
    if (v9)
    {
      v11 = ShowHeader.primaryButtonAction.getter(v10);
      swift_release(a1);
      swift_release(v11);
      if (!v11)
        return 2;
    }
    else
    {
      swift_release(a1);
    }
    return 0;
  }
}

void _s23ShelfKitCollectionViews14ShowHeaderViewC5frameACSo6CGRectV_tcfc_0()
{
  _BYTE *v0;
  _BYTE *v1;
  int *v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  id v40;
  char *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  double v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t inited;
  void *v66;
  id v67;
  char *v68;
  void *v69;
  char *v70;
  uint64_t v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  id v109;
  id v110;
  void *v111;
  uint64_t v112;
  void *v113;
  id v114;
  id v115;
  id v116;
  id v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  id v122;
  id v123;
  id v124;
  id v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  id v130;
  id v131;
  id v132;
  id v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  id v138;
  id v139;
  id v140;
  id v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  void *v148;
  id v149;
  id v150;
  id v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  id v156;
  uint64_t v157;
  id v158;
  id v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  void *v164;
  id v165;
  id v166;
  id v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  id v172;
  void *v173;
  id v174;
  id v175;
  id v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  id v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  char *v187;
  id v188;
  id v189;
  uint64_t v190;
  void *v191;
  id v192;
  id v193;
  uint64_t v194;
  void *v195;
  id v196;
  id v197;
  void *v198;
  void *v199;
  uint64_t v200;
  unint64_t v201;
  id v202;
  id v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  id v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  id v221;
  id v222;
  id v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  id v236;
  unint64_t v237;
  unint64_t v238;
  uint64_t v239;
  id v240;
  unint64_t v241;
  unint64_t v242;
  uint64_t v243;
  id v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t v247;
  id v248;
  unint64_t v249;
  unint64_t v250;
  uint64_t v251;
  id v252;
  id v253;
  id v254;
  void *v255;
  id v256;
  char *v257;
  void *v258;
  uint64_t v259;
  void *v260;
  id v261;
  char *v262;
  char *v263;
  void *v264;
  void *v265;
  char *v266;
  id v267;
  id v268;
  uint64_t v269;
  uint64_t v270;
  id v271;
  id v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  int v277;
  void *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  objc_class *ObjectType;
  uint64_t v287;
  uint64_t v288;
  char v289[48];
  objc_super v290;
  uint64_t v291[6];
  __int128 v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  __int16 v296;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = (int *)type metadata accessor for VEVButtonContainer.Style(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v274 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_hasPlayedShow] = 0;
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_currentEpisodeUUID];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_currentModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButtonHeightConstraint] = 0;
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_artworkView;
  v7 = v0;
  sub_1BFEF4();
  v9 = v8;
  v10 = objc_allocWithZone((Class)UIColor);
  v11 = v9;
  v12 = objc_msgSend(v10, "initWithWhite:alpha:", 0.0, 0.2);
  v13 = &v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v14 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_QWORD *)v13 = v12;
  *(_OWORD *)(v13 + 8) = xmmword_2F0A30;
  *((_QWORD *)v13 + 3) = 0x4020000000000000;
  v15 = v12;

  sub_E9020();
  *(_QWORD *)&v1[v6] = v11;
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView;
  v17 = type metadata accessor for LegacyPrimaryButtonView();
  *(_QWORD *)&v7[v16] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17)), "init");
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_centralStackView;
  *(_QWORD *)&v7[v18] = sub_1CF73C();
  v19 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_upsellBanner;
  v20 = objc_allocWithZone((Class)type metadata accessor for UpsellBannerView(0));
  *(_QWORD *)&v7[v19] = sub_17D618(0);
  v21 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_descriptionLabelContainer;
  v22 = type metadata accessor for FadingDescriptionLabel();
  *(_QWORD *)&v7[v21] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v22)), "init");
  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButton;
  v24 = sub_1CF988();
  v284 = (uint64_t)v7;
  *(_QWORD *)&v7[v23] = v24;
  v285 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButton;
  if (qword_3CF498 != -1)
    swift_once(&qword_3CF498, sub_13FB40);
  v25 = qword_3FB310;
  v283 = (char *)qword_3FB310;
  v26 = qword_3FB320;
  v287 = qword_3FB318;
  v282 = qword_3FB320;
  v27 = qword_3FB328;
  v28 = qword_3FB330;
  v281 = qword_3FB328;
  v280 = qword_3FB330;
  v29 = qword_3FB338;
  v279 = qword_3FB338;
  v288 = *((_QWORD *)&xmmword_3FB340 + 1);
  v278 = (void *)xmmword_3FB340;
  v276 = qword_3FB350;
  v30 = qword_3FB360;
  v275 = qword_3FB358;
  v277 = word_3FB368;
  v31 = &v4[v2[5]];
  HIDWORD(v274) = HIBYTE(word_3FB368);
  v32 = type metadata accessor for Glyph(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v33 = v287;
  *(_QWORD *)v4 = v25;
  *((_QWORD *)v4 + 1) = v33;
  *((_QWORD *)v4 + 2) = v26;
  *((_QWORD *)v4 + 3) = v27;
  *((_QWORD *)v4 + 4) = v28;
  *((_QWORD *)v4 + 5) = v29;
  v34 = v278;
  v35 = v288;
  *((_QWORD *)v4 + 6) = v278;
  *((_QWORD *)v4 + 7) = v35;
  v36 = v276;
  v37 = v275;
  *((_QWORD *)v4 + 8) = v276;
  *((_QWORD *)v4 + 9) = v37;
  *((_QWORD *)v4 + 10) = v30;
  LOBYTE(v27) = v277;
  v4[88] = v277;
  LOBYTE(v25) = BYTE4(v274);
  v4[89] = BYTE4(v274);
  v38 = &v4[v2[6]];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  v38[16] = 1;
  v39 = &v4[v2[8]];
  *(_OWORD *)v39 = xmmword_2F1580;
  *((_OWORD *)v39 + 1) = xmmword_2F1580;
  *(_QWORD *)&v4[v2[9]] = 9;
  v4[v2[7]] = 0;
  v40 = objc_allocWithZone((Class)type metadata accessor for VEVButtonContainer(0));
  sub_DDA0(v283, v287, v282, v281, v280, v279, v34, v288, v36, v37, v30, v27, v25);
  v41 = sub_1DF878((uint64_t)v4);
  objc_msgSend(v41, "setHidden:", 1);
  v42 = (_BYTE *)v284;
  *(_QWORD *)(v284 + v285) = v41;
  *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___secondaryButtonSubtitleLabel] = 0;
  v43 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_ratingView;
  v44 = type metadata accessor for RatingView();
  v45 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v44)), "init");
  if (qword_3CF048 != -1)
    swift_once(&qword_3CF048, sub_E358);
  v46 = (void *)qword_3FA8A8;
  v47 = OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_color;
  v48 = *(void **)&v45[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_color];
  *(_QWORD *)&v45[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_color] = qword_3FA8A8;
  v49 = v46;

  objc_msgSend(*(id *)&v45[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_label], "setTextColor:", *(_QWORD *)&v45[v47]);
  *(_QWORD *)&v42[v43] = v45;
  v50 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_metadataView;
  v51 = type metadata accessor for ShowMetadataView();
  *(_QWORD *)&v42[v50] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v51)), "init");
  v52 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_titleLabel;
  type metadata accessor for DynamicTypeLabel();
  v291[0] = qword_3FB310;
  v291[1] = qword_3FB318;
  v291[2] = qword_3FB320;
  v291[3] = qword_3FB328;
  v291[4] = qword_3FB330;
  v291[5] = qword_3FB338;
  v292 = xmmword_3FB340;
  v293 = qword_3FB350;
  v294 = qword_3FB358;
  v295 = qword_3FB360;
  v296 = word_3FB368;
  sub_DDA0((void *)qword_3FB310, qword_3FB318, qword_3FB320, qword_3FB328, qword_3FB330, qword_3FB338, (void *)xmmword_3FB340, *((uint64_t *)&xmmword_3FB340 + 1), qword_3FB350, qword_3FB358, qword_3FB360, word_3FB368, SHIBYTE(word_3FB368));
  v53 = sub_A96AC((uint64_t)v291, 2, 0, 1);
  objc_msgSend(v53, "setTextAlignment:", 1);
  LODWORD(v54) = 1148846080;
  objc_msgSend(v53, "setContentCompressionResistancePriority:forAxis:", 1, v54);
  *(_QWORD *)&v42[v52] = v53;
  v42[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_displayEntitlementBadge] = 0;
  *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___entitlementBadgeConstraints] = 0;
  *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_blurView] = 0;
  v55 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_entitlementBadge;
  v56 = objc_allocWithZone((Class)type metadata accessor for EntitlementBadgeView(0));
  *(_QWORD *)&v42[v55] = sub_FD3E8();
  v57 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_spacer;
  *(_QWORD *)&v42[v57] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___stackViewBottomGuideConstraint] = 0;
  *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonAction] = 0;
  *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButtonAction] = 0;
  *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_objectGraph] = 0;

  v290.receiver = v42;
  v290.super_class = ObjectType;
  v58 = objc_msgSendSuper2(&v290, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  type metadata accessor for FadedBlurView();
  v59 = qword_3CFA58;
  v60 = v58;
  if (v59 != -1)
    swift_once(&qword_3CFA58, sub_1CF6FC);
  v61 = *(double *)&qword_3DB380;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22D8);
  v63 = swift_allocObject(v62, 48, 7);
  *(_OWORD *)(v63 + 16) = xmmword_2EFA20;
  *(_OWORD *)(v63 + 32) = xmmword_2FDD40;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  inited = swift_initStackObject(v64, v289);
  *(_OWORD *)(inited + 16) = xmmword_2EFC90;
  v66 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(inited + 32) = objc_msgSend(v66, "clearColor");
  v67 = objc_msgSend(v66, "blackColor");
  *(_QWORD *)(inited + 40) = v67;
  v291[0] = inited;
  specialized Array._endMutation()(v67);
  v68 = sub_1CD1E4(v63, v291[0], v61);
  objc_msgSend(v68, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v60, "addSubview:", v68);
  v69 = *(void **)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_blurView);
  *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_blurView) = v68;
  v70 = v68;

  v285 = (uint64_t)v70;
  objc_msgSend(v70, "setHidden:", 1);
  v71 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_centralStackView;
  v72 = *(void **)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_centralStackView);
  objc_msgSend(v60, "addSubview:", v72);
  v291[0] = (uint64_t)_swiftEmptyArrayStorage;
  objc_msgSend(v72, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v72, "setAccessibilityIgnoresInvertColors:", 1);
  v73 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v73, "addObserver:selector:name:object:", v60, "preferredContentSizeChanged:", UIContentSizeCategoryDidChangeNotification, 0);

  v74 = objc_msgSend(*(id *)((char *)v60 + v71), "leftAnchor");
  v75 = objc_msgSend(v60, "layoutMarginsGuide");
  v76 = objc_msgSend(v75, "leftAnchor");

  v77 = objc_msgSend(v74, "constraintEqualToAnchor:", v76);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78);
  v80 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v79 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v80 >= v79 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v80 + 1, 1);
  v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v77);
  specialized Array._endMutation()(v81);
  v82 = objc_msgSend(*(id *)((char *)v60 + v71), "rightAnchor");
  v83 = objc_msgSend(v60, "layoutMarginsGuide");
  v84 = objc_msgSend(v83, "rightAnchor");

  v85 = objc_msgSend(v82, "constraintEqualToAnchor:", v84);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v86);
  v88 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v87 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v88 >= v87 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v87 > 1, v88 + 1, 1);
  v89 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v88, v85);
  specialized Array._endMutation()(v89);
  v90 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView;
  v91 = objc_msgSend(*(id *)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView), "lastBaselineAnchor");
  v92 = objc_msgSend(v60, "topAnchor");
  v93 = objc_msgSend(v91, "constraintGreaterThanOrEqualToAnchor:constant:", v92, 258.0);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v94);
  v96 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v95 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v96 >= v95 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v95 > 1, v96 + 1, 1);
  v288 = v90;
  v97 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v96, v93);
  specialized Array._endMutation()(v97);
  v98 = objc_msgSend(*(id *)((char *)v60 + v71), "topAnchor");
  v99 = objc_msgSend(v60, "topAnchor");
  v100 = objc_msgSend(v98, "constraintEqualToAnchor:", v99);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v101);
  v103 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v102 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v103 >= v102 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v102 > 1, v103 + 1, 1);
  v104 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v103, v100);
  specialized Array._endMutation()(v104);
  v105 = *(void **)((char *)v60 + v71);
  v106 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_artworkView;
  v107 = *(void **)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_artworkView);
  objc_msgSend(v105, "addArrangedSubview:", v107);
  objc_msgSend(v107, "setHidden:", 1);
  v108 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_spacer;
  objc_msgSend(*(id *)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_spacer), "setHidden:", 1);
  objc_msgSend(v105, "addArrangedSubview:", *(_QWORD *)((char *)v60 + v108));
  v284 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_titleLabel;
  objc_msgSend(v105, "addArrangedSubview:", *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_titleLabel));
  objc_msgSend(v105, "addArrangedSubview:", *(_QWORD *)((char *)v60 + v288));
  v283 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButton;
  objc_msgSend(v105, "addArrangedSubview:", *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButton));
  ObjectType = (objc_class *)OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButton;
  objc_msgSend(v105, "addArrangedSubview:", *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButton));
  v109 = v105;
  v110 = sub_1CFBFC();
  objc_msgSend(v109, "addArrangedSubview:", v110);

  v111 = *(void **)((char *)v60 + v71);
  v112 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_descriptionLabelContainer;
  v113 = *(void **)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_descriptionLabelContainer);
  objc_msgSend(v111, "addArrangedSubview:", v113);
  v287 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_metadataView;
  objc_msgSend(v111, "addArrangedSubview:", *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_metadataView));
  objc_msgSend(v60, "addSubview:", *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_entitlementBadge));
  sub_1CFDD4();
  v114 = objc_msgSend(v113, "leadingAnchor");
  v115 = objc_msgSend(v60, "layoutMarginsGuide");
  v116 = objc_msgSend(v115, "leadingAnchor");

  v117 = objc_msgSend(v114, "constraintEqualToAnchor:", v116);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v118);
  v120 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v119 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v120 >= v119 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v119 > 1, v120 + 1, 1);
  v121 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v120, v117);
  specialized Array._endMutation()(v121);
  v122 = objc_msgSend(*(id *)((char *)v60 + v112), "trailingAnchor");
  v123 = objc_msgSend(v60, "layoutMarginsGuide");
  v124 = objc_msgSend(v123, "trailingAnchor");

  v125 = objc_msgSend(v122, "constraintEqualToAnchor:", v124);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v126);
  v128 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v127 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v128 >= v127 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v127 > 1, v128 + 1, 1);
  v129 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v128, v125);
  specialized Array._endMutation()(v129);
  v130 = objc_msgSend(*(id *)(*(_QWORD *)((char *)v60 + v112)+ OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel), "leadingAnchor");
  v131 = objc_msgSend(v60, "layoutMarginsGuide");
  v132 = objc_msgSend(v131, "leadingAnchor");

  v133 = objc_msgSend(v130, "constraintEqualToAnchor:", v132);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v134);
  v136 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v135 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v136 >= v135 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v135 > 1, v136 + 1, 1);
  v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v136, v133);
  specialized Array._endMutation()(v137);
  v138 = objc_msgSend(*(id *)(*(_QWORD *)((char *)v60 + v112)+ OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel), "trailingAnchor");
  v139 = objc_msgSend(v60, "layoutMarginsGuide");
  v140 = objc_msgSend(v139, "trailingAnchor");

  v141 = objc_msgSend(v138, "constraintEqualToAnchor:", v140);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v142);
  v144 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v143 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v144 >= v143 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v143 > 1, v144 + 1, 1);
  v145 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v144, v141);
  specialized Array._endMutation()(v145);
  v146 = v284;
  objc_msgSend(*(id *)((char *)v60 + v284), "setHidden:", 1);
  v147 = *(void **)((char *)v60 + v71);
  v148 = *(void **)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_upsellBanner);
  objc_msgSend(v147, "addArrangedSubview:", v148);
  v149 = objc_msgSend(v148, "widthAnchor");
  v150 = objc_msgSend(v147, "widthAnchor");
  v151 = objc_msgSend(v149, "constraintEqualToAnchor:", v150);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v152);
  v154 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v153 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v154 >= v153 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v153 > 1, v154 + 1, 1);
  v155 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v154, v151);
  specialized Array._endMutation()(v155);
  v156 = objc_msgSend(*(id *)((char *)v60 + v106), "bottomAnchor");
  v157 = v288;
  v158 = objc_msgSend(*(id *)((char *)v60 + v288), "firstBaselineAnchor");
  v159 = objc_msgSend(v156, "constraintEqualToAnchor:constant:", v158, 30.0);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v160);
  v162 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v161 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v162 >= v161 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v161 > 1, v162 + 1, 1);
  v163 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v162, v159);
  specialized Array._endMutation()(v163);
  v164 = *(void **)((char *)v60 + v71);
  objc_msgSend(v164, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v164, "setCustomSpacing:afterView:", *(_QWORD *)((char *)v60 + v106), 30.0);
  objc_msgSend(v164, "setCustomSpacing:afterView:", *(_QWORD *)((char *)v60 + v146), 26.0);
  objc_msgSend(v164, "setCustomSpacing:afterView:", *(_QWORD *)((char *)v60 + v157), 20.0);
  objc_msgSend(v164, "setCustomSpacing:afterView:", *(_QWORD *)((char *)v60 + v112), 29.0);
  v165 = objc_msgSend(*(id *)((char *)v60 + v287), "widthAnchor");
  v166 = objc_msgSend(v164, "widthAnchor");
  v167 = objc_msgSend(v165, "constraintEqualToAnchor:", v166);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v168);
  v170 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v169 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v170 >= v169 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v169 > 1, v170 + 1, 1);
  v171 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v170, v167);
  specialized Array._endMutation()(v171);
  v172 = objc_msgSend(*(id *)((char *)v60 + v106), "heightAnchor");
  v173 = (void *)v285;
  if (qword_3CFA48 != -1)
    swift_once(&qword_3CFA48, sub_1CF694);
  v174 = objc_retainAutoreleasedReturnValue(objc_msgSend(v172, "constraintEqualToConstant:", *((double *)&xmmword_3DB360
                                                                                             + 1)));

  v175 = objc_msgSend(*(id *)((char *)v60 + v106), "widthAnchor");
  v176 = objc_msgSend(v175, "constraintEqualToConstant:", *(double *)&xmmword_3DB360);

  v177 = v291[0];
  if ((unint64_t)v291[0] >> 62)
  {
    if (v291[0] < 0)
      v269 = v291[0];
    else
      v269 = v291[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v291[0]);
    v179 = _CocoaArrayWrapper.endIndex.getter(v269);
    swift_bridgeObjectRelease(v177);
    v180 = v179 + 2;
    if (!__OFADD__(v179, 2))
    {
LABEL_33:
      v181 = sub_215E80(v180, 1);
      specialized Array._endMutation()(v181);
      v174 = v174;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v174);
      v179 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
      v178 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
      if (v179 < v178 >> 1)
        goto LABEL_34;
      goto LABEL_69;
    }
  }
  else
  {
    v178 = v291[0] & 0xFFFFFFFFFFFFF8;
    v179 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFF8));
    v180 = v179 + 2;
    if (!__OFADD__(v179, 2))
      goto LABEL_33;
  }
  __break(1u);
LABEL_69:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v178 > 1, v179 + 1, 1);
LABEL_34:
  v182 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v179, v174);
  specialized Array._endMutation()(v182);
  v183 = v176;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v183);
  v185 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v184 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v185 >= v184 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v184 > 1, v185 + 1, 1);
  v186 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v185, v183);
  specialized Array._endMutation()(v186);

  v187 = v283;
  v188 = objc_msgSend(*(id *)&v283[(_QWORD)v60], "heightAnchor");
  if (qword_3CFA60 != -1)
    swift_once(&qword_3CFA60, sub_1CF70C);
  v189 = objc_msgSend(v188, "constraintEqualToConstant:", *(double *)&qword_3DB388);

  v190 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonHeightConstraint;
  v191 = *(void **)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonHeightConstraint);
  *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonHeightConstraint) = v189;

  v192 = objc_msgSend(*(id *)((char *)ObjectType + (_QWORD)v60), "heightAnchor");
  if (qword_3CFA68 != -1)
    swift_once(&qword_3CFA68, sub_1CF71C);
  v193 = objc_msgSend(v192, "constraintEqualToConstant:", *(double *)&qword_3DB390);

  v194 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButtonHeightConstraint;
  v195 = *(void **)((char *)v60
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButtonHeightConstraint);
  *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButtonHeightConstraint) = v193;

  v196 = objc_msgSend(*(id *)&v187[(_QWORD)v60], "widthAnchor");
  v197 = objc_msgSend(v196, "constraintGreaterThanOrEqualToConstant:", 265.0);

  v198 = *(void **)((char *)v60 + v190);
  if (!v198)
  {
    __break(1u);
    goto LABEL_85;
  }
  v199 = *(void **)((char *)v60 + v194);
  if (!v199)
  {
LABEL_85:
    __break(1u);
    return;
  }
  v200 = v291[0];
  if ((unint64_t)v291[0] >> 62)
  {
    if (v291[0] < 0)
      v270 = v291[0];
    else
      v270 = v291[0] & 0xFFFFFFFFFFFFFF8;
    v271 = v198;
    v272 = v199;
    swift_bridgeObjectRetain(v200);
    v201 = _CocoaArrayWrapper.endIndex.getter(v270);
    swift_bridgeObjectRelease(v200);
    v205 = v201 + 3;
    if (!__OFADD__(v201, 3))
    {
LABEL_44:
      v206 = sub_215E80(v205, 1);
      specialized Array._endMutation()(v206);
      v197 = v197;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v197);
      v201 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
      v204 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
      if (v201 < v204 >> 1)
        goto LABEL_45;
      goto LABEL_76;
    }
  }
  else
  {
    v201 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFF8));
    v202 = v198;
    v203 = v199;
    v205 = v201 + 3;
    if (!__OFADD__(v201, 3))
      goto LABEL_44;
  }
  __break(1u);
LABEL_76:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v204 > 1, v201 + 1, 1);
LABEL_45:
  v207 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v201, v197);
  specialized Array._endMutation()(v207);
  v208 = v198;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v208);
  v210 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v209 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v210 >= v209 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v209 > 1, v210 + 1, 1);
  v211 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v210, v208);
  specialized Array._endMutation()(v211);
  v212 = v199;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v212);
  v214 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v213 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v214 >= v213 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v213 > 1, v214 + 1, 1);
  v215 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v214, v212);
  specialized Array._endMutation()(v215);

  v216 = objc_msgSend(v173, "bottomAnchor");
  v217 = objc_msgSend(v60, "bottomAnchor");
  v218 = objc_msgSend(v216, "constraintEqualToAnchor:", v217);

  v219 = objc_msgSend(v173, "leadingAnchor");
  v220 = objc_msgSend(v60, "leadingAnchor");
  v221 = objc_msgSend(v219, "constraintEqualToAnchor:", v220);

  v222 = objc_msgSend(v173, "trailingAnchor");
  v223 = objc_msgSend(v60, "trailingAnchor");
  v224 = objc_msgSend(v222, "constraintEqualToAnchor:", v223);

  v225 = objc_msgSend(v173, "topAnchor");
  v226 = objc_msgSend(*(id *)((char *)v60 + v288), "topAnchor");
  v227 = objc_msgSend(v225, "constraintEqualToAnchor:constant:", v226, -24.0);

  v228 = objc_msgSend(*(id *)((char *)ObjectType + (_QWORD)v60), "widthAnchor");
  v229 = objc_msgSend(v228, "constraintGreaterThanOrEqualToConstant:", 265.0);

  v230 = v291[0];
  if (!((unint64_t)v291[0] >> 62))
  {
    v231 = v291[0] & 0xFFFFFFFFFFFFF8;
    v232 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFF8));
    v233 = v232 + 5;
    if (!__OFADD__(v232, 5))
      goto LABEL_51;
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (v291[0] < 0)
    v273 = v291[0];
  else
    v273 = v291[0] & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v291[0]);
  v232 = _CocoaArrayWrapper.endIndex.getter(v273);
  swift_bridgeObjectRelease(v230);
  v233 = v232 + 5;
  if (__OFADD__(v232, 5))
    goto LABEL_82;
LABEL_51:
  v234 = sub_215E80(v233, 1);
  specialized Array._endMutation()(v234);
  v218 = v218;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v218);
  v232 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v231 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v232 >= v231 >> 1)
LABEL_83:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v231 > 1, v232 + 1, 1);
  v235 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v232, v218);
  specialized Array._endMutation()(v235);
  v236 = v221;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v236);
  v238 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v237 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v238 >= v237 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v237 > 1, v238 + 1, 1);
  v239 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v238, v236);
  specialized Array._endMutation()(v239);
  v240 = v224;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v240);
  v242 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v241 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v242 >= v241 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v241 > 1, v242 + 1, 1);
  v243 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v242, v240);
  specialized Array._endMutation()(v243);
  v244 = v227;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v244);
  v246 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v245 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v246 >= v245 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v245 > 1, v246 + 1, 1);
  v247 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v246, v244);
  specialized Array._endMutation()(v247);
  v248 = v229;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v248);
  v250 = *(_QWORD *)((char *)&dword_10 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  v249 = *(_QWORD *)((char *)&dword_18 + (v291[0] & 0xFFFFFFFFFFFFFF8));
  if (v250 >= v249 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v249 > 1, v250 + 1, 1);
  v251 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v250, v248);
  specialized Array._endMutation()(v251);

  v252 = sub_1CFBFC();
  v253 = objc_msgSend(v252, "layer");

  v254 = objc_msgSend(v60, "traitCollection");
  v255 = (void *)UITraitCollection.suggestedTextBlendModeFilter.getter();

  objc_msgSend(v253, "setCompositingFilter:", v255);
  v256 = sub_1CFBFC();
  if (qword_3CF020 != -1)
    swift_once(&qword_3CF020, sub_E274);
  objc_msgSend(v256, "setTextColor:", qword_3FA880);

  v257 = *(char **)((char *)v60 + v287);
  v258 = (void *)qword_3FA880;
  v259 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_color;
  v260 = *(void **)&v257[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_color];
  *(_QWORD *)&v257[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_color] = qword_3FA880;
  v261 = v258;
  v262 = v257;

  objc_msgSend(*(id *)&v262[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label], "setTextColor:", *(_QWORD *)&v257[v259]);
  v263 = *(char **)(*(_QWORD *)((char *)v60 + v288)
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button);
  v264 = (void *)qword_3FA880;
  v265 = *(void **)&v263[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView];
  v266 = v263;
  v267 = v264;
  objc_msgSend(v265, "setTintColor:", v267);
  v268 = *(id *)&v266[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel];
  objc_msgSend(v268, "setTextColor:", v267);

  sub_1D0364(v291);
  swift_bridgeObjectRelease(v291[0]);
}

void _s23ShelfKitCollectionViews14ShowHeaderViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _BYTE *v1;
  int *v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  char *v10;
  id v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  double v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int16 v78;

  v1 = v0;
  v2 = (int *)type metadata accessor for VEVButtonContainer.Style(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_hasPlayedShow] = 0;
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_currentEpisodeUUID];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_currentModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButtonHeightConstraint] = 0;
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_artworkView;
  sub_1BFEF4();
  v8 = v7;
  v9 = objc_allocWithZone((Class)UIColor);
  v10 = v8;
  v11 = objc_msgSend(v9, "initWithWhite:alpha:", 0.0, 0.2);
  v12 = &v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v13 = *(void **)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_QWORD *)v12 = v11;
  *(_OWORD *)(v12 + 8) = xmmword_2F0A30;
  *((_QWORD *)v12 + 3) = 0x4020000000000000;
  v14 = v11;

  sub_E9020();
  *(_QWORD *)&v1[v6] = v10;
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_providerButtonView;
  v16 = type metadata accessor for LegacyPrimaryButtonView();
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_centralStackView;
  *(_QWORD *)&v1[v17] = sub_1CF73C();
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_upsellBanner;
  v19 = objc_allocWithZone((Class)type metadata accessor for UpsellBannerView(0));
  *(_QWORD *)&v1[v18] = sub_17D618(0);
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_descriptionLabelContainer;
  v21 = type metadata accessor for FadingDescriptionLabel();
  *(_QWORD *)&v1[v20] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v21)), "init");
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButton;
  *(_QWORD *)&v1[v22] = sub_1CF988();
  v64 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButton;
  if (qword_3CF498 != -1)
    swift_once(&qword_3CF498, sub_13FB40);
  v23 = qword_3FB310;
  v24 = qword_3FB320;
  v25 = qword_3FB328;
  v62 = qword_3FB320;
  v63 = (void *)qword_3FB310;
  v26 = qword_3FB330;
  v27 = qword_3FB338;
  v60 = qword_3FB330;
  v61 = qword_3FB328;
  v59 = qword_3FB338;
  v65 = (void *)xmmword_3FB340;
  v66 = qword_3FB318;
  v67 = *((_QWORD *)&xmmword_3FB340 + 1);
  v58 = qword_3FB350;
  v57 = qword_3FB358;
  v56 = qword_3FB360;
  v55 = word_3FB368;
  v28 = &v4[v2[5]];
  v54 = HIBYTE(word_3FB368);
  v29 = type metadata accessor for Glyph(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = v66;
  *(_QWORD *)v4 = v23;
  *((_QWORD *)v4 + 1) = v30;
  *((_QWORD *)v4 + 2) = v24;
  *((_QWORD *)v4 + 3) = v25;
  *((_QWORD *)v4 + 4) = v26;
  *((_QWORD *)v4 + 5) = v27;
  v31 = v67;
  *((_QWORD *)v4 + 6) = v65;
  *((_QWORD *)v4 + 7) = v31;
  v32 = v58;
  v33 = v57;
  *((_QWORD *)v4 + 8) = v58;
  *((_QWORD *)v4 + 9) = v33;
  v34 = v56;
  *((_QWORD *)v4 + 10) = v56;
  LOBYTE(v23) = v55;
  v4[88] = v55;
  LOBYTE(v24) = v54;
  v4[89] = v54;
  v35 = &v4[v2[6]];
  *(_QWORD *)v35 = 0;
  *((_QWORD *)v35 + 1) = 0;
  v35[16] = 1;
  v36 = &v4[v2[8]];
  *(_OWORD *)v36 = xmmword_2F1580;
  *((_OWORD *)v36 + 1) = xmmword_2F1580;
  *(_QWORD *)&v4[v2[9]] = 9;
  v4[v2[7]] = 0;
  v37 = objc_allocWithZone((Class)type metadata accessor for VEVButtonContainer(0));
  sub_DDA0(v63, v66, v62, v61, v60, v59, v65, v67, v32, v33, v34, v23, v24);
  v38 = sub_1DF878((uint64_t)v4);
  objc_msgSend(v38, "setHidden:", 1);
  *(_QWORD *)&v1[v64] = v38;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___secondaryButtonSubtitleLabel] = 0;
  v39 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_ratingView;
  v40 = type metadata accessor for RatingView();
  v41 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v40)), "init");
  if (qword_3CF048 != -1)
    swift_once(&qword_3CF048, sub_E358);
  v42 = (void *)qword_3FA8A8;
  v43 = OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_color;
  v44 = *(void **)&v41[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_color];
  *(_QWORD *)&v41[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_color] = qword_3FA8A8;
  v45 = v42;

  objc_msgSend(*(id *)&v41[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_label], "setTextColor:", *(_QWORD *)&v41[v43]);
  *(_QWORD *)&v1[v39] = v41;
  v46 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_metadataView;
  v47 = type metadata accessor for ShowMetadataView();
  *(_QWORD *)&v1[v46] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v47)), "init");
  v48 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_titleLabel;
  type metadata accessor for DynamicTypeLabel();
  v68 = qword_3FB310;
  v69 = qword_3FB318;
  v70 = qword_3FB320;
  v71 = qword_3FB328;
  v72 = qword_3FB330;
  v73 = qword_3FB338;
  v74 = xmmword_3FB340;
  v75 = qword_3FB350;
  v76 = qword_3FB358;
  v77 = qword_3FB360;
  v78 = word_3FB368;
  sub_DDA0((void *)qword_3FB310, qword_3FB318, qword_3FB320, qword_3FB328, qword_3FB330, qword_3FB338, (void *)xmmword_3FB340, *((uint64_t *)&xmmword_3FB340 + 1), qword_3FB350, qword_3FB358, qword_3FB360, word_3FB368, SHIBYTE(word_3FB368));
  v49 = sub_A96AC((uint64_t)&v68, 2, 0, 1);
  objc_msgSend(v49, "setTextAlignment:", 1);
  LODWORD(v50) = 1148846080;
  objc_msgSend(v49, "setContentCompressionResistancePriority:forAxis:", 1, v50);
  *(_QWORD *)&v1[v48] = v49;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_displayEntitlementBadge] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___entitlementBadgeConstraints] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_blurView] = 0;
  v51 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_entitlementBadge;
  v52 = objc_allocWithZone((Class)type metadata accessor for EntitlementBadgeView(0));
  *(_QWORD *)&v1[v51] = sub_FD3E8();
  v53 = OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_spacer;
  *(_QWORD *)&v1[v53] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView____lazy_storage___stackViewBottomGuideConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_primaryButtonAction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_secondaryButtonAction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14ShowHeaderView_objectGraph] = 0;

  v68 = 0;
  v69 = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease(v69);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000026, 0x8000000000313A20, "ShelfKitCollectionViews/ShowHeaderView.swift", 44, 2, 301, 0);
  __break(1u);
}

uint64_t type metadata accessor for ShowHeaderView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews14ShowHeaderView);
}

uint64_t type metadata accessor for FadedBlurView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews13FadedBlurView);
}

uint64_t sub_1D3A4C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1D3A70()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD v3[10];

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 89);
  Hasher.init(_seed:)(v3, 0);
  if ((v2 & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    __asm { BR              X10 }
  }
  Hasher._combine(_:)(0);
  __asm { BR              X10 }
}

Swift::Int sub_1D3BE0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[192];

  v8 = ((uint64_t (*)())static String._unconditionallyBridgeFromObjectiveC(_:))();
  v16 = v0;
  v10 = v9;
  sub_DE20(v5, v4, v3, v2, v1, 0);
  v11 = v5;
  String.hash(into:)(v21, v8, v10);
  swift_bridgeObjectRelease(v10);
  Hasher._combine(_:)(v4);
  sub_DCC8(v5, v4, v3, v2, v1, v16, v18, v6, v7, v19, v20, v17, 0);
  sub_DCC8(v5, v4, v3, v2, v1, v16, v18, v6, v7, v19, v20, v17, 0);
  v12 = ((uint64_t (*)())static String._unconditionallyBridgeFromObjectiveC(_:))();
  v14 = v13;
  String.hash(into:)(v21, v12, v13);
  swift_bridgeObjectRelease(v14);
  return Hasher._finalize()();
}

void sub_1D3CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  Swift::UInt v39;

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v35 = v34;
  sub_DE20(v31, v30, v29, v28, v27, 1);
  sub_DE20(v31, v30, v29, v28, v27, 1);
  sub_DE20(a24, v26, v32, a25, a26, a23);
  sub_DE20(v31, v30, v29, v28, v27, 1);
  v36 = String.hashValue.getter(v33, v35);
  swift_bridgeObjectRelease(v35);
  sub_DD48(v31, v30, v29, v28, v27, 1);
  v37 = Double.hashValue.getter(*(double *)&v30);
  v38 = __OFADD__(v37 ^ v36, 1);
  v39 = (v37 ^ v36) + 1;
  if (!v38)
  {
    Hasher._combine(_:)(v39);
    sub_DD48(v31, v30, v29, v28, v27, 1);
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x1D437CLL);
}

void sub_1D3DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,void *a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  Swift::UInt v36;

  sub_DE20(v31, v30, v29, v28, v27, 2);
  sub_DE20(a24, v26, v32, a25, a26, a23);
  v33 = String.hashValue.getter(v31, v30);
  v34 = Double.hashValue.getter(*(double *)&v27);
  v35 = __OFADD__(v34 ^ v33, 2);
  v36 = (v34 ^ v33) + 2;
  if (!v35)
  {
    Hasher._combine(_:)(v36);
    JUMPOUT(0x1D3EA8);
  }
  __break(1u);
  JUMPOUT(0x1D4380);
}

void sub_1D3E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,void *a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;

  sub_DE20(v32, v31, v30, v29, v28, 3);
  sub_DE20(a24, v27, v33, a25, a26, a23);
  sub_DE20(v32, v31, v30, v29, v28, 3);
  NSObject.hash(into:)(&a27);
  JUMPOUT(0x1D3EA4);
}

Swift::Int sub_1D3EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[192];

  v7 = ((uint64_t (*)())static String._unconditionallyBridgeFromObjectiveC(_:))();
  v9 = v8;
  v10 = v6;
  String.hash(into:)(v19, v7, v9);
  swift_bridgeObjectRelease(v9);
  Hasher._combine(_:)(v5);
  sub_DD48(v6, v5, v0, v17, v18, 0);
  sub_DD48(v6, v5, v0, v17, v18, 0);
  sub_DD48(v4, v3, v2, v1, v15, v16);
  v11 = ((uint64_t (*)())static String._unconditionallyBridgeFromObjectiveC(_:))();
  v13 = v12;
  String.hash(into:)(v19, v11, v12);
  swift_bridgeObjectRelease(v13);
  return Hasher._finalize()();
}

void sub_1D43C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  if ((*(_BYTE *)(v0 + 89) & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    __asm { BR              X10 }
  }
  Hasher._combine(_:)(0);
  __asm { BR              X10 }
}

double sub_1D4550()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v10 = ((uint64_t (*)())static String._unconditionallyBridgeFromObjectiveC(_:))();
  v23 = v3;
  v24 = v5;
  v25 = v8;
  v11 = v1;
  v12 = v5;
  v14 = v13;
  v15 = v7;
  String.hash(into:)(v0, v10, v14);
  swift_bridgeObjectRelease(v14);
  Hasher._combine(_:)(v6);
  v16 = *(_QWORD *)(v9 - 120);
  v17 = v3;
  v18 = *(_QWORD *)(v9 - 112);
  sub_DCC8(v7, v6, v26, v4, v17, v18, v11, v25, v2, v12, v16, v27, 0);
  sub_DCC8(v7, v6, v26, v4, v23, v18, v11, v25, v2, v24, v16, v27, 0);
  v19 = ((uint64_t (*)())static String._unconditionallyBridgeFromObjectiveC(_:))();
  v21 = v20;
  String.hash(into:)(v0, v19, v20);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v21).n128_u64[0];
  return result;
}

void sub_1D4624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  Swift::UInt v40;
  uint64_t v41;

  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v35 = v34;
  sub_DE20(v31, v30, a24, v28, v27, 1);
  sub_DE20(v31, v30, a24, v28, v27, 1);
  sub_DE20(v25, v32, v26, v29, *(_QWORD *)(v33 - 120), a25);
  sub_DE20(v31, v30, a24, v28, v27, 1);
  v36 = v35;
  v37 = String.hashValue.getter(v41, v35);
  swift_bridgeObjectRelease(v36);
  sub_DD48(v31, v30, a24, v28, v27, 1);
  v38 = Double.hashValue.getter(*(double *)&v30);
  v39 = __OFADD__(v38 ^ v37, 1);
  v40 = (v38 ^ v37) + 1;
  if (!v39)
  {
    Hasher._combine(_:)(v40);
    sub_DD48(v31, v30, a24, v28, v27, 1);
    JUMPOUT(0x1D4844);
  }
  __break(1u);
  JUMPOUT(0x1D4CDCLL);
}

void sub_1D4754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  Swift::UInt v37;

  sub_DE20(v31, v30, a24, v28, v27, 2);
  sub_DE20(v25, v32, v26, v29, *(_QWORD *)(v33 - 120), a25);
  v34 = String.hashValue.getter(v31, v30);
  v35 = Double.hashValue.getter(*(double *)&v27);
  v36 = __OFADD__(v35 ^ v34, 2);
  v37 = (v35 ^ v34) + 2;
  if (!v36)
  {
    Hasher._combine(_:)(v37);
    JUMPOUT(0x1D4844);
  }
  __break(1u);
  JUMPOUT(0x1D4CE0);
}

void sub_1D47C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;

  sub_DE20(v32, v31, a24, v29, v28, 3);
  sub_DE20(v26, v33, v27, v30, *(_QWORD *)(v34 - 120), a25);
  sub_DE20(v32, v31, a24, v29, v28, 3);
  NSObject.hash(into:)(v25);
  JUMPOUT(0x1D4840);
}

void sub_1D4864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v40 = v29;
  v35 = v26;
  v37 = v36;
  v38 = v25;
  String.hash(into:)(v24, v34, v37);
  swift_bridgeObjectRelease(v37);
  Hasher._combine(_:)(v32);
  v39 = *(_QWORD *)(v33 - 120);
  sub_DD48(v25, v32, v35, v40, v39, 0);
  sub_DD48(v25, v32, v35, v40, v39, 0);
  sub_DD48(v31, v30, a24, v28, v27, *(_QWORD *)(v33 - 112));
  JUMPOUT(0x1D4C90);
}

#error "1D494C: call analysis failed (funcsize=100)"

void sub_1D4A70()
{
  double v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  Swift::UInt v7;

  swift_bridgeObjectRetain(v2);
  swift_retain(v1);
  v4 = String.hashValue.getter(v3, v2);
  v5 = Double.hashValue.getter(v0);
  v6 = __OFADD__(v5 ^ v4, 2);
  v7 = (v5 ^ v4) + 2;
  if (!v6)
  {
    Hasher._combine(_:)(v7);
    JUMPOUT(0x1D4AF4);
  }
  __break(1u);
  JUMPOUT(0x1D4CE8);
}

void sub_1D4B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  Swift::UInt v43;
  uint64_t v44;

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v34 = v25;
  v36 = v35;
  v37 = v24;
  v38 = String.hashValue.getter(v33, v36);
  swift_bridgeObjectRelease(v36);
  v44 = v28;
  v39 = v28;
  v40 = *(_QWORD *)(v32 - 120);
  sub_DD48(v24, v31, v34, v39, v40, 1);
  v41 = Double.hashValue.getter(*(double *)&v31);
  v42 = __OFADD__(v41 ^ v38, 1);
  v43 = (v41 ^ v38) + 1;
  if (!v42)
  {
    Hasher._combine(_:)(v43);
    sub_DD48(v24, v31, v34, v44, v40, 1);
    sub_DD48(v24, v31, v34, v44, v40, 1);
    sub_DD48(v30, v29, a24, v27, v26, *(_QWORD *)(v32 - 112));
    JUMPOUT(0x1D4C90);
  }
  __break(1u);
  JUMPOUT(0x1D4CECLL);
}

void sub_1D4BC0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  Swift::UInt v9;

  v5 = *(_QWORD *)(v4 - 120);
  v6 = String.hashValue.getter(v0, v3);
  v7 = Double.hashValue.getter(*(double *)&v5);
  v8 = __OFADD__(v7 ^ v6, 2);
  v9 = (v7 ^ v6) + 2;
  if (!v8)
  {
    Hasher._combine(_:)(v9);
    sub_DD48(v0, v3, v1, v2, v5, 2);
    JUMPOUT(0x1D4C84);
  }
  __break(1u);
  JUMPOUT(0x1D4CF0);
}

void sub_1D4C28()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = v1;
  NSObject.hash(into:)(v0);
  sub_DD48(v1, v4, v2, v3, *(_QWORD *)(v5 - 120), 3);
  JUMPOUT(0x1D4C70);
}

void sub_1D4D20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD v4[10];

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_BYTE *)(v1 + 89);
  Hasher.init(_seed:)(v4, a1);
  if ((v3 & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    __asm { BR              X10 }
  }
  Hasher._combine(_:)(0);
  __asm { BR              X10 }
}

Swift::Int sub_1D4EA4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,Swift::UInt32 a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  _BYTE v71[192];

  v58 = ((uint64_t (*)())static String._unconditionallyBridgeFromObjectiveC(_:))();
  v60 = v59;
  v61 = v70;
  String.hash(into:)(v71, v58, v60);
  swift_bridgeObjectRelease(v60);
  Hasher._combine(_:)(v67);
  sub_DCC8(v70, v67, v56, v53, v52, v54, v69, v66, v51, v68, v55, v57, 0);
  sub_DCC8(v70, v67, v56, v53, v52, v54, v69, v66, v51, v68, v55, v57, 0);
  v62 = ((uint64_t (*)())static String._unconditionallyBridgeFromObjectiveC(_:))();
  v64 = v63;
  String.hash(into:)(v71, v62, v63);
  swift_bridgeObjectRelease(v64);
  return Hasher._finalize()();
}

void sub_1D4F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  Swift::UInt v37;
  uint64_t v38;

  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(a26);
  v33 = v32;
  sub_DE20(a26, a23, v30, v28, v27, 1);
  sub_DE20(a26, a23, v30, v28, v27, 1);
  sub_DE20(a25, a22, v26, a24, v29, v31);
  sub_DE20(a26, a23, v30, v28, v27, 1);
  v34 = String.hashValue.getter(v38, v33);
  swift_bridgeObjectRelease(v33);
  sub_DD48(a26, a23, v30, v28, v27, 1);
  v35 = Double.hashValue.getter(*(double *)&a23);
  v36 = __OFADD__(v35 ^ v34, 1);
  v37 = (v35 ^ v34) + 1;
  if (!v36)
  {
    Hasher._combine(_:)(v37);
    sub_DD48(a26, a23, v30, v28, v27, 1);
    JUMPOUT(0x1D51A4);
  }
  __break(1u);
  JUMPOUT(0x1D5630);
}

void sub_1D5088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  Swift::UInt v35;

  sub_DE20(a26, a23, v30, v28, v27, 2);
  sub_DE20(a25, a22, v26, a24, v29, v31);
  v32 = String.hashValue.getter(a26, a23);
  v33 = Double.hashValue.getter(*(double *)&v27);
  v34 = __OFADD__(v33 ^ v32, 2);
  v35 = (v33 ^ v32) + 2;
  if (!v34)
  {
    Hasher._combine(_:)(v35);
    JUMPOUT(0x1D51A4);
  }
  __break(1u);
  JUMPOUT(0x1D5634);
}

void sub_1D5110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26,char a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  sub_DE20(a26, a23, v31, v29, v28, 3);
  sub_DE20(a25, a22, v27, a24, v30, v32);
  sub_DE20(a26, a23, v31, v29, v28, 3);
  NSObject.hash(into:)(&a27);
  JUMPOUT(0x1D51A0);
}

void sub_1D51C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,char a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;
  v37 = v33;
  String.hash(into:)(&a27, v34, v36);
  swift_bridgeObjectRelease(v36);
  Hasher._combine(_:)(v32);
  sub_DD48(v33, v32, v29, a24, v27, 0);
  sub_DD48(v33, v32, v29, a24, v27, 0);
  sub_DD48(a26, v31, v30, v28, a18, a20);
  JUMPOUT(0x1D55D8);
}

#error "1D5290: call analysis failed (funcsize=92)"

void sub_1D53A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  Swift::UInt v31;

  swift_bridgeObjectRetain(a23);
  swift_retain(v27);
  v28 = String.hashValue.getter(a26, a23);
  v29 = Double.hashValue.getter(v26);
  v30 = __OFADD__(v29 ^ v28, 2);
  v31 = (v29 ^ v28) + 2;
  if (!v30)
  {
    Hasher._combine(_:)(v31);
    JUMPOUT(0x1D545CLL);
  }
  __break(1u);
  JUMPOUT(0x1D563CLL);
}

void sub_1D5464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  Swift::UInt v35;

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;
  v31 = v27;
  v32 = String.hashValue.getter(v28, v30);
  swift_bridgeObjectRelease(v30);
  sub_DD48(v27, v26, v25, a24, v24, 1);
  v33 = Double.hashValue.getter(*(double *)&v26);
  v34 = __OFADD__(v33 ^ v32, 1);
  v35 = (v33 ^ v32) + 1;
  if (!v34)
  {
    Hasher._combine(_:)(v35);
    sub_DD48(v27, v26, v25, a24, v24, 1);
    sub_DD48(v27, v26, v25, a24, v24, 1);
    JUMPOUT(0x1D55CCLL);
  }
  __break(1u);
  JUMPOUT(0x1D5640);
}

void sub_1D5524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  Swift::UInt v36;

  v33 = String.hashValue.getter(v32, v31);
  v34 = Double.hashValue.getter(*(double *)&v26);
  v35 = __OFADD__(v34 ^ v33, 2);
  v36 = (v34 ^ v33) + 2;
  if (!v35)
  {
    Hasher._combine(_:)(v36);
    sub_DD48(v32, v31, v28, a24, v26, 2);
    sub_DD48(a26, v30, v29, v27, a18, a20);
    JUMPOUT(0x1D55D8);
  }
  __break(1u);
  JUMPOUT(0x1D5644);
}

void sub_1D5570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;

  v31 = v30;
  NSObject.hash(into:)(&a27);
  sub_DD48(v30, v29, v28, a24, v27, 3);
  JUMPOUT(0x1D55B8);
}

uint64_t sub_1D5678()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  unint64_t v3;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DB4F0);
  __swift_allocate_value_buffer(v0, qword_3DB4D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_3DB4D8);
  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v2 = sub_E710(0, &qword_3DB4F8, UIFontDescriptor_ptr);
  v3 = sub_1D5D68();
  return UnboundedCache.init(notificationCenter:)(v1, &type metadata for CacheKey, v2, v3);
}

id sub_1D5728(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char v48;
  uint64_t v49;
  _QWORD v50[3];
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  id v65;
  _QWORD v66[5];
  char v67;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = *(void **)(a1 + 48);
  v9 = *(_BYTE *)(a1 + 88);
  v47 = *(unsigned __int8 *)(a1 + 89);
  v49 = *(_QWORD *)(a1 + 80);
  v45 = *(_QWORD *)(a1 + 64);
  v46 = *(_QWORD *)(a1 + 72);
  v10 = *(void **)a1;
  v11 = *(_QWORD *)(a1 + 56);
  sub_DDA0(*(void **)a1, v3, v4, v5, v7, v6, v8, v11, v45, v46, v49, v9, *(_BYTE *)(a1 + 89));
  v35 = objc_msgSend(a2, "preferredContentSizeCategory");
  if (qword_3CFA78 != -1)
    swift_once(&qword_3CFA78, sub_1D5678);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DB4F0);
  v42 = __swift_project_value_buffer(v38, (uint64_t)qword_3DB4D8);
  swift_beginAccess(v42, v66, 32, 0);
  v52 = v10;
  v53 = v3;
  v54 = v4;
  v55 = v5;
  v56 = v7;
  v57 = v6;
  v58 = v8;
  v59 = v11;
  v43 = v7;
  v39 = v3;
  v60 = v45;
  v61 = v46;
  v62 = v49;
  v63 = v9;
  v41 = v6;
  v48 = v9;
  v64 = v47;
  v65 = v35;
  sub_DDA0(v10, v3, v4, v5, v7, v6, v8, v11, v45, v46, v49, v9, v47);
  v12 = v11;
  v13 = v35;
  UnboundedCache.subscript.getter(v50, &v52, v38);
  v36 = v10;
  v14 = v3;
  v40 = v4;
  v44 = v5;
  v15 = v8;
  sub_DCC8(v36, v14, v4, v5, v7, v41, v8, v12, v45, v46, v49, v9, v47);

  v16 = v50[0];
  if (v50[0])
  {
    swift_endAccess(v66);
    sub_DCC8(v36, v14, v4, v5, v7, v41, v8, v12, v45, v46, v49, v9, v47);

    return (id)v16;
  }
  else
  {
    v32 = v12;
    v33 = v13;
    v34 = v8;
    swift_endAccess(v66);
    if (v47)
    {
      sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
      sub_DDA0(v36, v39, v4, v5, v7, v41, v8, v12, v45, v46, v49, v9, 1);
      sub_DE20(v36, v39, v4, v5, v7, v41);
      v18 = sub_DE20(v8, v12, v45, v46, v49, v9);
      if ((static UITraitCollection.interfaceIdiomIsMac.getter(v18) & 1) != 0)
      {
        sub_DD48(v8, v12, v45, v46, v49, v9);
        v19 = v39;
        sub_DCC8(v36, v39, v40, v5, v7, v41, v8, v12, v45, v46, v49, v9, 1);
        v20 = v36;
        v21 = v36;
        v22 = v39;
        v23 = v5;
        v24 = v40;
        v25 = v7;
        v9 = v41;
        v26 = v40;
      }
      else
      {
        v21 = v36;
        v26 = v4;
        sub_DD48(v36, v39, v4, v5, v7, v41);
        sub_DCC8(v36, v39, v4, v5, v7, v41, v15, v12, v45, v46, v49, v9, 1);
        v20 = v15;
        v22 = v12;
        v24 = v45;
        v19 = v39;
        v23 = v46;
        v25 = v49;
      }
    }
    else
    {
      v19 = v39;
      sub_DE20(v36, v39, v40, v5, v7, v41);
      v20 = v36;
      v22 = v39;
      v21 = v36;
      v24 = v40;
      v23 = v5;
      v26 = v40;
      v25 = v7;
      v9 = v41;
    }
    v66[0] = v20;
    v66[1] = v22;
    v66[2] = v24;
    v66[3] = v23;
    v66[4] = v25;
    v67 = v9;
    v27 = v20;
    sub_13EEDC();
    v29 = v28;
    v37 = v28;
    sub_DD48(v27, v22, v24, v23, v25, v9);
    v51 = v29;
    v52 = v21;
    v53 = v19;
    v54 = v26;
    v55 = v44;
    v56 = v43;
    v57 = v41;
    v58 = v34;
    v59 = v32;
    v60 = v45;
    v61 = v46;
    v62 = v49;
    v63 = v48;
    v64 = v47;
    v65 = v33;
    swift_beginAccess(v42, v50, 33, 0);
    sub_DDA0(v21, v19, v26, v44, v43, v41, v34, v32, v45, v46, v49, v48, v47);
    v30 = v33;
    v31 = v37;
    UnboundedCache.subscript.setter(&v51, &v52, v38);
    swift_endAccess(v50);
    sub_DCC8(v21, v19, v40, v44, v43, v41, v34, v32, v45, v46, v49, v48, v47);

    return v31;
  }
}

unint64_t sub_1D5D68()
{
  unint64_t result;

  result = qword_3DB500;
  if (!qword_3DB500)
  {
    result = swift_getWitnessTable(&unk_2FDE3C, &type metadata for CacheKey);
    atomic_store(result, (unint64_t *)&qword_3DB500);
  }
  return result;
}

void destroy for CacheKey(uint64_t a1)
{
  sub_DCC8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));

}

uint64_t initializeWithCopy for CacheKey(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(void **)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v15 = *(_QWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a2 + 72);
  v17 = *(_QWORD *)(a2 + 80);
  v18 = *(_BYTE *)(a2 + 88);
  v19 = *(_BYTE *)(a2 + 89);
  sub_DDA0(*(void **)a2, v5, v6, v7, v8, v9, v10, v11, v15, v16, v17, v18, v19);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v15;
  *(_QWORD *)(a1 + 72) = v16;
  *(_QWORD *)(a1 + 80) = v17;
  *(_BYTE *)(a1 + 88) = v18;
  *(_BYTE *)(a1 + 89) = v19;
  v12 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v12;
  v13 = v12;
  return a1;
}

uint64_t assignWithCopy for CacheKey(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  char v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(void **)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v28 = *(_QWORD *)(a2 + 64);
  v29 = *(_QWORD *)(a2 + 72);
  v30 = *(_QWORD *)(a2 + 80);
  v31 = *(_BYTE *)(a2 + 88);
  v32 = *(_BYTE *)(a2 + 89);
  sub_DDA0(*(void **)a2, v5, v6, v7, v8, v9, v10, v11, v28, v29, v30, v31, v32);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(void **)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 80);
  v22 = *(_BYTE *)(a1 + 88);
  v23 = *(_BYTE *)(a1 + 89);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v28;
  *(_QWORD *)(a1 + 72) = v29;
  *(_QWORD *)(a1 + 80) = v30;
  *(_BYTE *)(a1 + 88) = v31;
  *(_BYTE *)(a1 + 89) = v32;
  sub_DCC8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22, v23);
  v24 = *(void **)(a2 + 96);
  v25 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v24;
  v26 = v24;

  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for CacheKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  char v18;
  __int128 v19;
  __int128 v20;
  void *v21;

  v4 = *(_QWORD *)(a2 + 80);
  v5 = *(_BYTE *)(a2 + 88);
  v6 = *(_BYTE *)(a2 + 89);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(void **)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_OWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_BYTE *)(a1 + 88);
  v18 = *(_BYTE *)(a1 + 89);
  v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v19;
  v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v4;
  *(_BYTE *)(a1 + 88) = v5;
  *(_BYTE *)(a1 + 89) = v6;
  sub_DCC8(v7, v8, v9, v10, v11, v12, v13, v14, v15, *((uint64_t *)&v15 + 1), v16, v17, v18);
  v21 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  return a1;
}

uint64_t getEnumTagSinglePayload for CacheKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 96);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CacheKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 96) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CacheKey()
{
  return &type metadata for CacheKey;
}

unint64_t sub_1D61A8()
{
  unint64_t result;

  result = qword_3DB508;
  if (!qword_3DB508)
  {
    result = swift_getWitnessTable(&unk_2FDE14, &type metadata for CacheKey);
    atomic_store(result, (unint64_t *)&qword_3DB508);
  }
  return result;
}

uint64_t sub_1D61EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v15[96];
  _BYTE v16[96];

  sub_143650(a1, (uint64_t)v15);
  v4 = *(_QWORD *)(a1 + 96);
  sub_143650(a2, (uint64_t)v16);
  v5 = *(_QWORD *)(a2 + 96);
  sub_1D62F8((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  sub_1D62F8((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  v6 = sub_2795FC((uint64_t)v15, (uint64_t)v16);
  sub_1D62F8((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DCC8);
  sub_1D62F8((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DCC8);
  if ((v6 & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v9 = v8;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v12 = v10;
    if (v7 == v11 && v9 == v10)
      v13 = 1;
    else
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v11, v10, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1D62F8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_WORD *)(a1 + 88));
  return a1;
}

uint64_t initializeWithCopy for Shadow(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for Shadow(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Shadow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Shadow()
{
  return &type metadata for Shadow;
}

BOOL sub_1D64C4(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  char v10;
  _BOOL8 result;

  v2 = *a1;
  v4 = a1[1];
  v3 = a1[2];
  v5 = a1[3];
  v6 = *a2;
  v8 = a2[1];
  v7 = a2[2];
  v9 = a2[3];
  sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
  v10 = static NSObject.== infix(_:_:)(*(_QWORD *)&v2, *(_QWORD *)&v6);
  result = 0;
  if ((v10 & 1) != 0 && v4 == v8)
    return v5 == v9 && v3 == v7;
  return result;
}

double sub_1D655C()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  qword_3FCED8 = (uint64_t)UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.19).super.isa;
  result = 20.0;
  unk_3FCEE0 = xmmword_2FDE80;
  qword_3FCEF0 = 0x402E000000000000;
  return result;
}

double sub_1D65CC()
{
  double result;

  qword_3FCEF8 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.16);
  result = 8.0;
  unk_3FCF00 = xmmword_2F1D20;
  qword_3FCF10 = 0x4010000000000000;
  return result;
}

double sub_1D6620()
{
  double result;

  qword_3FCF18 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.15);
  result = 6.0;
  unk_3FCF20 = xmmword_2F0650;
  qword_3FCF30 = 0x4000000000000000;
  return result;
}

double sub_1D6678()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  qword_3FCF38 = (uint64_t)UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.08).super.isa;
  result = 8.0;
  unk_3FCF40 = xmmword_2F1D20;
  qword_3FCF50 = 0x4010000000000000;
  return result;
}

id sub_1D66E8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.2);
  qword_3FCF58 = (uint64_t)result;
  qword_3FCF60 = 0x4018000000000000;
  qword_3FCF68 = 0;
  qword_3FCF70 = 0;
  return result;
}

char *sub_1D6730(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  id v27;
  char *v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSString v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  id v59;
  void *v60;
  char v61;
  char v62;
  id v63;
  char *v64;
  id v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[11];
  char v78;
  char v79;
  objc_super v80;

  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_explicitTreatment] = 2;
  *(_DWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_rating] = 1080033280;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_numberOfRatings] = 0;
  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_formattedRatingCount];
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_titles] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_explicit] = 0;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_updateFrequency];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_newEpisodeCount];
  *v11 = 0;
  v11[1] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_uppercased] = 0;
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase;
  v13 = qword_3CF4D0;
  v14 = v4;
  if (v13 != -1)
    swift_once(&qword_3CF4D0, sub_13FDE0);
  v15 = &v14[v12];
  v16 = *(_QWORD *)algn_3FB5B8;
  v71 = *(_QWORD *)algn_3FB5B8;
  v73 = (void *)qword_3FB5B0;
  v17 = qword_3FB5C0;
  v18 = qword_3FB5C8;
  v67 = qword_3FB5C8;
  v69 = qword_3FB5C0;
  v19 = qword_3FB5D0;
  v20 = qword_3FB5D8;
  v21 = xmmword_3FB5E0;
  v23 = qword_3FB5F0;
  v22 = qword_3FB5F8;
  v24 = qword_3FB600;
  v25 = word_3FB608;
  v26 = HIBYTE(word_3FB608);
  *(_QWORD *)v15 = qword_3FB5B0;
  *((_QWORD *)v15 + 1) = v16;
  *((_QWORD *)v15 + 2) = v17;
  *((_QWORD *)v15 + 3) = v18;
  *((_QWORD *)v15 + 4) = v19;
  *((_QWORD *)v15 + 5) = v20;
  *((_OWORD *)v15 + 3) = v21;
  *((_QWORD *)v15 + 8) = v23;
  *((_QWORD *)v15 + 9) = v22;
  *((_QWORD *)v15 + 10) = v24;
  v15[88] = v25;
  v15[89] = v26;
  v75 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_color;
  v65 = (id)objc_opt_self(UIColor);
  sub_DDA0(v73, v71, v69, v67, v19, v20, (void *)v21, *((uint64_t *)&v21 + 1), v23, v22, v24, v25, v26);
  *(_QWORD *)&v14[v75] = objc_msgSend(v65, "secondaryLabelColor");
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView____lazy_storage___numberFormatter] = 0;
  v27 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", a1, a2, a3, a4);
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label] = v27;

  v80.receiver = v14;
  v80.super_class = (Class)type metadata accessor for ShowMetadataView();
  v28 = (char *)objc_msgSendSuper2(&v80, "initWithFrame:", a1, a2, a3, a4);
  v29 = *(void **)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label];
  v30 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label;
  v66 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label;
  v68 = v28;
  v64 = v28;
  objc_msgSend(v29, "setAutoresizingMask:", 18);
  objc_msgSend(v29, "setNumberOfLines:", 1);
  objc_msgSend(v29, "setLineBreakMode:", 2);
  objc_msgSend(v29, "setTextAlignment:", 0);
  v31 = objc_msgSend(v29, "layer");
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v33 = v32;
  v34 = objc_allocWithZone((Class)CAFilter);
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v34, "initWithType:", v35, swift_bridgeObjectRelease(v33).n128_f64[0]);

  objc_msgSend(v31, "setCompositingFilter:", v36);
  v37 = *(void **)&v28[v30];
  objc_msgSend(v37, "setFrame:", a1, a2, a3, a4);
  v38 = *(void **)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase];
  v76 = *(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 8];
  v39 = *(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 16];
  v74 = *(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 24];
  v72 = *(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 32];
  v40 = *(void **)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 48];
  v70 = *(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 40];
  v42 = *(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 56];
  v41 = *(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 64];
  v43 = *(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 72];
  v44 = *(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 80];
  LOBYTE(v31) = v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 88];
  LOBYTE(v35) = v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 89];
  v61 = (char)v31;
  v62 = (char)v35;
  v59 = (id)objc_opt_self(UIContentSizeCategoryPreference);
  v63 = v37;
  v60 = v38;
  sub_DDA0(v38, v76, v39, v74, v72, v70, v40, v42, v41, v43, v44, (char)v31, (char)v35);
  v45 = objc_msgSend(v59, "system");
  v46 = objc_msgSend(v45, "preferredContentSizeCategory");

  v47 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v46);
  v77[0] = v38;
  v77[1] = v76;
  v77[2] = v39;
  v77[3] = v74;
  v77[4] = v72;
  v77[5] = v70;
  v77[6] = v40;
  v77[7] = v42;
  v77[8] = v41;
  v77[9] = v43;
  v77[10] = v44;
  v78 = v61;
  v79 = v62;
  v48 = sub_1D5728((uint64_t)v77, v47);
  v49 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v48, 0.0);

  sub_DCC8(v60, v76, v39, v74, v72, v70, v40, v42, v41, v43, v44, v61, v62);
  objc_msgSend(v63, "setFont:", v49);

  v50 = *(void **)&v66[(_QWORD)v68];
  objc_msgSend(v64, "addSubview:", v50);
  objc_msgSend(v50, "setTextColor:", *(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_color]);
  v51 = objc_msgSend(v64, "layer");
  objc_msgSend(v51, "setAllowsGroupBlending:", 0);

  v52 = objc_msgSend(*(id *)&v66[(_QWORD)v68], "layer");
  v53 = objc_msgSend(v64, "traitCollection");
  v54 = (void *)UITraitCollection.suggestedTextBlendModeFilter.getter();

  objc_msgSend(v52, "setCompositingFilter:", v54);
  v55 = *(void **)&v66[(_QWORD)v68];
  sub_1D75F0();
  v57 = v56;
  objc_msgSend(v55, "setAttributedText:", v56);

  objc_msgSend(v64, "invalidateIntrinsicContentSize");
  return v64;
}

void sub_1D6DA0(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD v44[11];
  char v45;
  char v46;
  objc_super v47;

  v2 = v1;
  v47.receiver = v1;
  v47.super_class = (Class)type metadata accessor for ShowMetadataView();
  objc_msgSendSuper2(&v47, "traitCollectionDidChange:", a1);
  v38 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label];
  v4 = objc_msgSend(v38, "layer");
  v5 = objc_msgSend(v1, "traitCollection");
  v6 = (void *)UITraitCollection.suggestedTextBlendModeFilter.getter();

  objc_msgSend(v4, "setCompositingFilter:", v6);
  if (a1)
    v7 = objc_msgSend(a1, "preferredContentSizeCategory");
  else
    v7 = 0;
  v8 = objc_msgSend(v2, "traitCollection");
  v9 = objc_msgSend(v8, "preferredContentSizeCategory");

  if (!v7)
  {

LABEL_10:
    v17 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase];
    v42 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 8];
    v43 = v17;
    v18 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 16];
    v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 24];
    v40 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 40];
    v41 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 32];
    v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 56];
    v39 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 48];
    v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 80];
    v35 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 64];
    v36 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 72];
    v22 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 88];
    v23 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 89];
    v37 = v22;
    v24 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
    v33 = v22;
    v25 = v18;
    v34 = v18;
    sub_DDA0(v17, v42, v18, v19, v41, v40, v39, v20, v35, v36, v21, v33, v23);
    v26 = objc_msgSend(v24, "system");
    v27 = objc_msgSend(v26, "preferredContentSizeCategory");

    v28 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v27);
    v44[0] = v17;
    v44[1] = v42;
    v44[2] = v25;
    v44[3] = v19;
    v44[4] = v41;
    v44[5] = v40;
    v44[6] = v39;
    v44[7] = v20;
    v44[8] = v35;
    v44[9] = v36;
    v44[10] = v21;
    v45 = v37;
    v46 = v23;
    v29 = sub_1D5728((uint64_t)v44, v28);
    v30 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v29, 0.0);

    sub_DCC8(v43, v42, v34, v19, v41, v40, v39, v20, v35, v36, v21, v37, v23);
    objc_msgSend(v38, "setFont:", v30);

    sub_1D75F0();
    v32 = v31;
    objc_msgSend(v38, "setAttributedText:", v31);

    objc_msgSend(v2, "invalidateIntrinsicContentSize");
    return;
  }
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v12 = v11;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v15 = v13;
  if (v10 == v14 && v12 == v13)
  {

    swift_bridgeObjectRelease_n(v12, 2);
    return;
  }
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v13, 0);

  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) == 0)
    goto LABEL_10;
}

id sub_1D71D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD v30[11];
  char v31;
  char v32;

  v24 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label);
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 8);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 24);
  v28 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 16);
  v29 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase);
  v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 32);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 56);
  v26 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 48);
  v27 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 40);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 64);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 72);
  v22 = v5;
  v23 = v4;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 80);
  v7 = *(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 88);
  v8 = *(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 89);
  v9 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  v19 = v5;
  v10 = v1;
  v21 = v1;
  sub_DDA0(v29, v1, v28, v2, v20, v27, v26, v3, v19, v4, v6, v7, v8);
  v11 = objc_msgSend(v9, "system");
  v12 = objc_msgSend(v11, "preferredContentSizeCategory");

  v13 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v12);
  v30[0] = v29;
  v30[1] = v10;
  v30[2] = v28;
  v30[3] = v2;
  v30[4] = v20;
  v30[5] = v27;
  v30[6] = v26;
  v30[7] = v3;
  v30[8] = v22;
  v30[9] = v23;
  v30[10] = v6;
  v31 = v7;
  v32 = v8;
  v14 = sub_1D5728((uint64_t)v30, v13);
  v15 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v14, 0.0);

  sub_DCC8(v29, v21, v28, v2, v20, v27, v26, v3, v22, v23, v6, v7, v8);
  objc_msgSend(v24, "setFont:", v15);

  sub_1D75F0();
  v17 = v16;
  objc_msgSend(v24, "setAttributedText:", v16);

  return objc_msgSend(v25, "invalidateIntrinsicContentSize");
}

void sub_1D74C8()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  NSString *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label);
  v2 = objc_msgSend(v1, "text");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v6 = 0xA300000000000000;
    v4 = 8755426;
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
  inited = swift_initStackObject(v7, &v12);
  *(_OWORD *)(inited + 16) = xmmword_2F03C0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v9 = NSFontAttributeName;
  v10 = objc_msgSend(v1, "font");
  if (v10)
  {
    *(_QWORD *)(inited + 40) = v10;
    v11 = sub_D47A0(inited);
    sub_21A7CC(v4, v6, 0, v11, 0, 1.79769313e308, 1.79769313e308);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    __break(1u);
  }
}

void sub_1D75F0()
{
  _BYTE *v0;
  _BYTE *v1;
  _UNKNOWN **v2;
  id v3;
  __n128 v4;
  char **v5;
  char **v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  id v12;
  Class isa;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  unint64_t v21;
  id v22;
  NSString v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  _QWORD *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  int64_t v61;
  _BYTE *v62;
  uint64_t v63;
  unint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  NSString v77;
  id v78;
  char v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  id v94;
  id v95;
  _QWORD *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;
  _QWORD *v109;

  v1 = v0;
  v109 = *(_QWORD **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_titles];
  v2 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
  v3 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init", swift_bridgeObjectRetain(v109).n128_f64[0]);
  v5 = &selRef_accessibilityContextButton;
  v6 = &selRef_openURL_options_completionHandler_;
  if (*(uint64_t *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_numberOfRatings] >= 31)
  {
    v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_formattedRatingCount];
    v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_formattedRatingCount + 8];
    v9 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v9 = v8 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      swift_bridgeObjectRetain(v7);
      v10._countAndFlagsBits = v8;
      v10._object = (void *)v7;
      String.append(_:)(v10);
      swift_bridgeObjectRelease(v7);
      v11._countAndFlagsBits = 41;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      sub_E1994(0, 0, 40, 0xE100000000000000);
    }
    v12 = sub_1D7DCC();
    isa = Float._bridgeToObjectiveC()().super.super.isa;
    v14 = objc_msgSend(v12, "stringFromNumber:", isa);

    if (v14)
    {
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = (void *)0xE000000000000000;
    }
    v96 = 0;
    v97 = 0xE000000000000000;
    Character.write<A>(to:)(&v96, 8755426, 0xA300000000000000, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v18._countAndFlagsBits = 32;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    v87 = v15;
    v19._countAndFlagsBits = v15;
    v19._object = v17;
    String.append(_:)(v19);
    v20._countAndFlagsBits = 32;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    v21 = v97;
    v22 = objc_allocWithZone((Class)NSAttributedString);
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v22, "initWithString:", v23, swift_bridgeObjectRelease(v21).n128_f64[0]);

    objc_msgSend(v3, "appendAttributedString:", v24);
    if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_uppercased] & 1) != 0)
    {
      v4 = swift_bridgeObjectRelease(v17);
    }
    else
    {
      v80 = v17;
      v25 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase];
      v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 8];
      v27 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 16];
      v92 = v27;
      v94 = v3;
      v28 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 32];
      v91 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 24];
      v89 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 48];
      v90 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 40];
      v29 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 64];
      v88 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 56];
      v30 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 72];
      v31 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 80];
      v84 = v26;
      v32 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 88];
      v33 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 89];
      v85 = v32;
      v86 = v33;
      v81 = (id)objc_opt_self(UIContentSizeCategoryPreference);
      v83 = v25;
      v79 = v33;
      v34 = v25;
      sub_DDA0(v25, v26, v27, v91, v28, v90, v89, v88, v29, v30, v31, v32, v79);
      v35 = objc_msgSend(v81, "system");
      v36 = objc_msgSend(v35, "preferredContentSizeCategory");

      v37 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v36);
      v96 = v34;
      v97 = v84;
      v98 = v27;
      v99 = v91;
      v100 = v28;
      v101 = v90;
      v102 = v89;
      v103 = v88;
      v104 = v29;
      v105 = v30;
      v106 = v31;
      v107 = v85;
      v108 = v86;
      v38 = sub_1D5728((uint64_t)&v96, v37);
      v82 = (id)objc_opt_self(UIFont);
      v39 = objc_msgSend(v82, "fontWithDescriptor:size:", v38, 0.0);

      sub_DCC8(v83, v84, v92, v91, v28, v90, v89, v88, v29, v30, v31, v85, v86);
      v40 = objc_msgSend(v39, "fontDescriptor");
      v41 = objc_msgSend(v40, "fontDescriptorWithSymbolicTraits:", 2);

      if (!v41)
      {
        __break(1u);
        return;
      }
      v42 = objc_msgSend(v82, "fontWithDescriptor:size:", v41, 0.0);

      v43 = v42;
      v44 = String.count.getter(v87, v80);
      v3 = v94;
      objc_msgSend(v94, "addAttribute:value:range:", NSFontAttributeName, v43, 2, v44, swift_bridgeObjectRelease(v80).n128_f64[0]);

      v6 = &selRef_openURL_options_completionHandler_;
      v2 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
      v5 = &selRef_accessibilityContextButton;
    }
  }
  v45 = (uint64_t *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_newEpisodeCount];
  v46 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_newEpisodeCount + 8];
  if (v46
    || (v45 = (uint64_t *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_updateFrequency],
        (v46 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_updateFrequency + 8]) != 0))
  {
    v47 = *v45;
    v48 = v109;
    swift_bridgeObjectRetain(v46);
    if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
      v48 = sub_20FBCC(0, v48[2] + 1, 1, v48);
    v50 = v48[2];
    v49 = v48[3];
    if (v50 >= v49 >> 1)
      v48 = sub_20FBCC((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
    v48[2] = v50 + 1;
    v51 = &v48[2 * v50];
    v51[4] = v47;
    v51[5] = v46;
    v109 = v48;
  }
  v52 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_explicitTreatment];
  if (v52 != 2 && v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_explicit] == 1)
  {
    v53 = ExplicitTreatment.symbol.getter(v52 & 1, v4);
    v55 = v54;
    v56 = v109;
    if ((swift_isUniquelyReferenced_nonNull_native(v109) & 1) == 0)
      v56 = sub_20FBCC(0, v56[2] + 1, 1, v56);
    v58 = v56[2];
    v57 = v56[3];
    if (v58 >= v57 >> 1)
      v56 = sub_20FBCC((_QWORD *)(v57 > 1), v58 + 1, 1, v56);
    v56[2] = v58 + 1;
    v59 = &v56[2 * v58];
    v59[4] = v53;
    v59[5] = v55;
    v109 = v56;
  }
  v60 = v109;
  v61 = v109[2];
  if (v61)
  {
    v95 = v3;
    v62 = v1;
    swift_bridgeObjectRetain(v60);
    sub_F356C(0, v61, 0);
    v63 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_uppercased;
    v93 = v60;
    v64 = v60 + 5;
    do
    {
      v65 = *(v64 - 1);
      v66 = *v64;
      if (v62[v63] == 1)
      {
        v96 = (_QWORD *)*(v64 - 1);
        v97 = v66;
        v67 = sub_D254();
        v65 = StringProtocol.localizedUppercase.getter(&type metadata for String, v67);
        v66 = v68;
      }
      else
      {
        swift_bridgeObjectRetain(*v64);
      }
      v70 = _swiftEmptyArrayStorage[2];
      v69 = _swiftEmptyArrayStorage[3];
      if (v70 >= v69 >> 1)
        sub_F356C(v69 > 1, v70 + 1, 1);
      v64 += 2;
      _swiftEmptyArrayStorage[2] = v70 + 1;
      v71 = &_swiftEmptyArrayStorage[2 * v70];
      v71[4] = v65;
      v71[5] = v66;
      --v61;
    }
    while (v61);
    swift_bridgeObjectRelease_n(v93, 2);

    v3 = v95;
    v6 = &selRef_openURL_options_completionHandler_;
    v2 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
    v5 = &selRef_accessibilityContextButton;
  }
  else
  {
    swift_bridgeObjectRelease(v109);
  }
  v96 = _swiftEmptyArrayStorage;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA198);
  v73 = sub_1AAD80();
  BidirectionalCollection<>.joined(separator:)(0x8480E2B7C28480E2, 0xA800000000000000, v72, v73);
  v75 = v74;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v76 = objc_allocWithZone((Class)v2[313]);
  v77 = String._bridgeToObjectiveC()();
  v78 = objc_msgSend(v76, v5[52], v77, swift_bridgeObjectRelease(v75).n128_f64[0]);

  objc_msgSend(v3, v6[10], v78);
}

id sub_1D7DCC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView____lazy_storage___numberFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView____lazy_storage___numberFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView____lazy_storage___numberFormatter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
    objc_msgSend(v4, "setNumberStyle:", 1);
    objc_msgSend(v4, "setMaximumFractionDigits:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1D7E74()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShowMetadataView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShowMetadataView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews16ShowMetadataView);
}

void sub_1D7FA0()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_explicitTreatment] = 2;
  *(_DWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_rating] = 1080033280;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_numberOfRatings] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_formattedRatingCount];
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_titles] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_explicit] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_updateFrequency];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_newEpisodeCount];
  *v3 = 0;
  v3[1] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_uppercased] = 0;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase;
  if (qword_3CF4D0 != -1)
    swift_once(&qword_3CF4D0, sub_13FDE0);
  v5 = &v0[v4];
  v6 = *(_QWORD *)algn_3FB5B8;
  v20 = *(_QWORD *)algn_3FB5B8;
  v21 = (void *)qword_3FB5B0;
  v7 = qword_3FB5C0;
  v8 = qword_3FB5C8;
  v18 = qword_3FB5C8;
  v19 = qword_3FB5C0;
  v9 = qword_3FB5D0;
  v10 = qword_3FB5D8;
  v11 = xmmword_3FB5E0;
  v13 = qword_3FB5F0;
  v12 = qword_3FB5F8;
  v14 = qword_3FB600;
  v15 = word_3FB608;
  v16 = HIBYTE(word_3FB608);
  *(_QWORD *)v5 = qword_3FB5B0;
  *((_QWORD *)v5 + 1) = v6;
  *((_QWORD *)v5 + 2) = v7;
  *((_QWORD *)v5 + 3) = v8;
  *((_QWORD *)v5 + 4) = v9;
  *((_QWORD *)v5 + 5) = v10;
  *((_OWORD *)v5 + 3) = v11;
  *((_QWORD *)v5 + 8) = v13;
  *((_QWORD *)v5 + 9) = v12;
  *((_QWORD *)v5 + 10) = v14;
  v5[88] = v15;
  v5[89] = v16;
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_color;
  v17 = (id)objc_opt_self(UIColor);
  sub_DDA0(v21, v20, v19, v18, v9, v10, (void *)v11, *((uint64_t *)&v11 + 1), v13, v12, v14, v15, v16);
  *(_QWORD *)&v0[v22] = objc_msgSend(v17, "secondaryLabelColor");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView____lazy_storage___numberFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ShowMetadataView.swift", 46, 2, 60, 0);
  __break(1u);
}

uint64_t sub_1D8194@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for InteractionContext(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t InteractionContextAction.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_allocObject(v2, 32, 7);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1D820C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for InteractionContextAction();
  result = swift_allocObject(v2, 32, 7);
  *(_QWORD *)(result + 16) = sub_1D8194;
  *(_QWORD *)(result + 24) = 0;
  *a1 = result;
  return result;
}

uint64_t EnvironmentValues.interactionContext.getter()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_1D8390();
  EnvironmentValues.subscript.getter(&v2, &type metadata for InteractionContextEnvironmentKey, &type metadata for InteractionContextEnvironmentKey, v0);
  return v2;
}

uint64_t EnvironmentValues.interactionContext.setter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_1D8390();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for InteractionContextEnvironmentKey, &type metadata for InteractionContextEnvironmentKey, v1);
}

uint64_t (*EnvironmentValues.interactionContext.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  unint64_t v3;

  a1[2] = v1;
  v3 = sub_1D8390();
  a1[3] = v3;
  EnvironmentValues.subscript.getter(a1, &type metadata for InteractionContextEnvironmentKey, &type metadata for InteractionContextEnvironmentKey, v3);
  return sub_1D8304;
}

uint64_t sub_1D8304(_QWORD *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  a1[1] = v3;
  v4 = a1[3];
  if ((a2 & 1) == 0)
    return EnvironmentValues.subscript.setter(a1 + 1, &type metadata for InteractionContextEnvironmentKey, &type metadata for InteractionContextEnvironmentKey, a1[3]);
  swift_retain(v3);
  EnvironmentValues.subscript.setter(a1 + 1, &type metadata for InteractionContextEnvironmentKey, &type metadata for InteractionContextEnvironmentKey, v4);
  return swift_release(*a1);
}

uint64_t InteractionContextAction.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

unint64_t sub_1D8390()
{
  unint64_t result;

  result = qword_3DB5A0;
  if (!qword_3DB5A0)
  {
    result = swift_getWitnessTable(&unk_2FE004, &type metadata for InteractionContextEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_3DB5A0);
  }
  return result;
}

uint64_t InteractionContextAction.callAsFunction()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t InteractionContextAction.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t InteractionContextAction.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for InteractionContextAction()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24InteractionContextAction);
}

uint64_t method lookup function for InteractionContextAction(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for InteractionContextAction);
}

uint64_t dispatch thunk of InteractionContextAction.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for InteractionContextEnvironmentKey()
{
  return &type metadata for InteractionContextEnvironmentKey;
}

void sub_1D8480(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  objc_class *ObjCClassFromMetadata;
  id v18;
  char *v19;
  id v20;
  id v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  id v47;
  __int128 v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  _OWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  char v56[24];
  objc_super v57;
  CGRect v58;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_backgroundImageView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_blurView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_zoomFactor] = 0x3FF0000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_offset] = 0;
  v14 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView____lazy_storage___lightGradient];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_OWORD *)v14 + 2) = 0u;
  *((_OWORD *)v14 + 3) = 0u;
  v15 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView____lazy_storage___darkGradient];
  v16 = type metadata accessor for GradientView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v16);
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_OWORD *)v15 + 2) = 0u;
  *((_OWORD *)v15 + 3) = 0u;
  v18 = objc_allocWithZone(ObjCClassFromMetadata);
  v19 = v5;
  v20 = objc_msgSend(v18, "init");
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_navGradientView] = v20;
  v21 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_gradientOverlayView] = v21;

  v57.receiver = v19;
  v57.super_class = ObjectType;
  v22 = (char *)objc_msgSendSuper2(&v57, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v22, "setClipsToBounds:", 1);
  swift_beginAccess(&off_3D3FF8, v56, 0, 0);
  v23 = off_3D3FF8;
  if (off_3D3FF8)
  {
    v24 = type metadata accessor for LegacyCachingArtworkView(0);
    v25 = *(_QWORD *)&stru_68.sectname[(_QWORD)v23];
    v26 = *(_QWORD *)&stru_68.segname[(_QWORD)v23 - 8];
    v27 = swift_getObjectType();
    v28 = type metadata accessor for ImageBlur(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v13, 1, 1, v28);
    v29 = *(_QWORD *)(v26 + 8);
    v30 = swift_unknownObjectRetain_n(v25, 2);
    v31 = sub_1BFD2C(v30, v26, v25, 0, (uint64_t)v13, v24, v27, v29);
    swift_unknownObjectRelease_n(v25, 2, v32);
    objc_msgSend(v31, "setAlpha:", 0.76);
    objc_msgSend(v22, "bounds");
    objc_msgSend(v31, "setFrame:");
    objc_msgSend(v31, "setAutoresizingMask:", 18);
    objc_msgSend(v31, "setContentMode:", 2);
    objc_msgSend(v22, "addSubview:", v31);
    v33 = OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_backgroundImageView;
    v34 = *(void **)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_backgroundImageView];
    *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_backgroundImageView] = v31;
    v35 = v31;

    sub_1D8930();
    v37 = v36;
    v38 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v36);

    objc_msgSend(v38, "setAutoresizingMask:", 18);
    v39 = v38;
    objc_msgSend(v35, "bounds");
    objc_msgSend(v39, "setFrame:");

    v40 = *(void **)&v22[v33];
    if (v40)
      objc_msgSend(v40, "addSubview:", v39);
    v41 = *(void **)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_blurView];
    *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_blurView] = v39;
    v42 = v39;

    v43 = OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_gradientOverlayView;
    v44 = *(void **)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_gradientOverlayView];
    objc_msgSend(v44, "setAutoresizingMask:", 18);
    v45 = v44;
    objc_msgSend(v22, "bounds");
    objc_msgSend(v45, "setFrame:");

    objc_msgSend(v22, "addSubview:", *(_QWORD *)&v22[v43]);
    sub_1D8AD8();
    v46 = OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_navGradientView;
    v47 = *(id *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_navGradientView];
    objc_msgSend(v22, "bounds");
    objc_msgSend(v47, "setFrame:", 0.0, 0.0, CGRectGetWidth(v58), 120.0);

    if (qword_3CFB68 != -1)
      swift_once(&qword_3CFB68, sub_212FA4);
    v48 = xmmword_3FD2A0;
    v49 = (void *)qword_3FD2D8;
    v53[0] = xmmword_3FD2A0;
    v53[1] = xmmword_3FD2B0;
    v53[2] = unk_3FD2C0;
    v54 = qword_3FD2D0;
    v55 = qword_3FD2D8;
    swift_bridgeObjectRetain(xmmword_3FD2B0);
    v50 = v49;
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(*((_QWORD *)&v48 + 1));
    sub_ECA74(v53);
    v51 = *(void **)&v22[v46];
    objc_msgSend(v51, "setAutoresizingMask:", 2);
    objc_msgSend(v22, "addSubview:", v51);

  }
  else
  {
    __break(1u);
  }
}

void sub_1D8930()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  Class isa;
  id v13;
  uint64_t v14;

  v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 100.0);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)objc_opt_self(UIColorEffect);
    v4 = objc_msgSend(v3, "colorEffectSaturate:", 2.0);
    v5 = objc_msgSend(v0, "traitCollection");
    v6 = (char *)objc_msgSend(v5, "userInterfaceStyle");

    if (v6 == (_BYTE *)&dword_0 + 2)
    {
      v7 = objc_msgSend(v3, "colorEffectSaturate:", 1.0);

      v4 = v7;
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v9 = swift_allocObject(v8, 48, 7);
    *(_OWORD *)(v9 + 16) = xmmword_2EFC90;
    *(_QWORD *)(v9 + 32) = v2;
    *(_QWORD *)(v9 + 40) = v4;
    v14 = v9;
    specialized Array._endMutation()(v9);
    sub_E710(0, (unint64_t *)&qword_3D1648, UIVisualEffect_ptr);
    v10 = v4;
    v11 = v2;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v14);
    v13 = objc_msgSend((id)objc_opt_self(UIVisualEffect), "effectCombiningEffects:", isa);

    if (v13)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1D8AD8()
{
  void *v0;
  id v1;
  char *v2;
  uint64_t *v3;
  CAGradientLayerType (*v4)@<X0>(uint64_t@<X8>);
  __int128 v6;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceStyle");

  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    v3 = &OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView____lazy_storage___lightGradient;
    v4 = sub_1D8E98;
  }
  else
  {
    v3 = &OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView____lazy_storage___darkGradient;
    v4 = sub_1D9030;
  }
  sub_1D8D2C(v3, (void (*)(_QWORD *__return_ptr))v4, (uint64_t *)&v6);
  return sub_ECA74(&v6);
}

void sub_1D8BE8(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", a1);
  if (a1)
    v3 = objc_msgSend(a1, "userInterfaceStyle");
  else
    v3 = 0;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceStyle");

  if (!a1 || v3 != v5)
  {
    v6 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_blurView];
    if (v6)
    {
      v7 = v6;
      sub_1D8930();
      v9 = v8;
      objc_msgSend(v7, "setEffect:", v8);

    }
    sub_1D8AD8();
  }
}

uint64_t sub_1D8D2C@<X0>(_QWORD *a1@<X0>, void (*a2)(_QWORD *__return_ptr)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[9];

  v5 = (uint64_t *)(v3 + *a1);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = v5[3];
  v10 = v5[4];
  v11 = v5[5];
  v13 = v5[6];
  v12 = (void *)v5[7];
  if (*v5)
  {
    v14 = *v5;
    v15 = v5[1];
    v16 = v5[2];
    v17 = v5[3];
    v18 = v5[4];
    v19 = v5[5];
    v20 = v5[6];
    v21 = (id)v5[7];
  }
  else
  {
    v38 = v5[2];
    v39 = v5[1];
    v36 = v5[4];
    v37 = v5[3];
    a2(v40);
    v14 = v40[0];
    v15 = v40[1];
    v16 = v40[2];
    v22 = v40[3];
    v23 = v40[4];
    v24 = v40[5];
    v25 = v40[6];
    v26 = (void *)v40[7];
    v34 = v5[1];
    v35 = *v5;
    v32 = v5[3];
    v33 = v5[2];
    v30 = v5[5];
    v31 = v5[4];
    v28 = (void *)v5[7];
    v29 = v5[6];
    *v5 = v40[0];
    v5[1] = v15;
    v5[2] = v16;
    v5[3] = v22;
    v5[4] = v23;
    v5[5] = v24;
    v5[6] = v25;
    v5[7] = (uint64_t)v26;
    swift_bridgeObjectRetain(v16);
    v21 = v26;
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v15);
    sub_B7AE8(v35, v34, v33, v32, v31, v30, v29, v28);
    v10 = v36;
    v9 = v37;
    v8 = v38;
    v6 = v39;
    v17 = v22;
    v18 = v23;
    v19 = v24;
    v20 = v25;
  }
  *a3 = v14;
  a3[1] = v15;
  a3[2] = v16;
  a3[3] = v17;
  a3[4] = v18;
  a3[5] = v19;
  a3[6] = v20;
  a3[7] = (uint64_t)v21;
  return sub_B7A24(v7, v6, v8, v9, v10, v11, v13, v12);
}

CAGradientLayerType sub_1D8E98@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  v2 = (void *)UIColor.init(hexString:alpha:)(0x30463046304623, 0xE700000000000000, 0.0);
  v3 = (void *)UIColor.init(hexString:alpha:)(0x30463046304623, 0xE700000000000000, 1.0);
  if (v2)
  {
    v4 = v2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
    v6 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v5 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v6 >= v5 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
    v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v4);
    specialized Array._endMutation()(v7);
  }
  if (v3)
  {
    v8 = v3;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v10 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v9 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v10 >= v9 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
    v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
    specialized Array._endMutation()(v11);
  }

  *(_QWORD *)a1 = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = &off_37A270;
  *(_OWORD *)(a1 + 24) = xmmword_2F1D40;
  *(_OWORD *)(a1 + 40) = xmmword_2FE050;
  *(_QWORD *)(a1 + 56) = kCAGradientLayerAxial;
  return kCAGradientLayerAxial;
}

CAGradientLayerType sub_1D9030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  void *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _BYTE v41[88];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3DB6B0);
  inited = swift_initStackObject(v2, v41);
  *(_OWORD *)(inited + 16) = xmmword_2FA6F0;
  sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  *(_QWORD *)(inited + 32) = UIColor.init(hexString:alpha:)(0x31334532453223, 0xE700000000000000, 0.0);
  *(_QWORD *)(inited + 40) = UIColor.init(hexString:alpha:)(0x38323632363223, 0xE700000000000000, 0.25);
  *(_QWORD *)(inited + 48) = UIColor.init(hexString:alpha:)(0x31323032303223, 0xE700000000000000, 0.47);
  *(_QWORD *)(inited + 56) = UIColor.init(hexString:alpha:)(0x32313131313123, 0xE700000000000000, 0.85);
  *(_QWORD *)(inited + 64) = UIColor.init(hexString:alpha:)(0x43304330433023, 0xE700000000000000, 0.93);
  *(_QWORD *)(inited + 72) = UIColor.init(hexString:alpha:)(0x46304630463023, 0xE700000000000000, 1.0);
  v4 = UIColor.init(hexString:alpha:)(0x46304630463023, 0xE700000000000000, 1.0);
  *(_QWORD *)(inited + 80) = v4;
  specialized Array._endMutation()(v4);
  v5 = *(void **)(inited + 32);
  if (v5)
  {
    v6 = v5;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
    v8 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v7 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v8 >= v7 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
    v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
    specialized Array._endMutation()(v9);
  }
  v10 = *(void **)(inited + 40);
  if (v10)
  {
    v11 = v10;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v13 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v12 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v13 >= v12 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
    v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
    specialized Array._endMutation()(v14);
  }
  v15 = *(void **)(inited + 48);
  if (v15)
  {
    v16 = v15;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
    v18 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v17 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v18 >= v17 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
    v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
    specialized Array._endMutation()(v19);
  }
  v20 = *(void **)(inited + 56);
  if (v20)
  {
    v21 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
    v23 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v22 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v23 >= v22 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
    v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
    specialized Array._endMutation()(v24);
  }
  v25 = *(void **)(inited + 64);
  if (v25)
  {
    v26 = v25;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
    v28 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v27 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v28 >= v27 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
    v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
    specialized Array._endMutation()(v29);
  }
  v30 = *(void **)(inited + 72);
  if (v30)
  {
    v31 = v30;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
    v33 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v32 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v33 >= v32 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
    v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
    specialized Array._endMutation()(v34);
  }
  v35 = *(void **)(inited + 80);
  if (v35)
  {
    v36 = v35;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
    v38 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v37 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v38 >= v37 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
    v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
    specialized Array._endMutation()(v39);
  }
  swift_bridgeObjectRelease(inited);
  *(_QWORD *)a1 = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = &off_37A2A0;
  *(_OWORD *)(a1 + 24) = xmmword_2F1D40;
  *(_OWORD *)(a1 + 40) = xmmword_2F1D50;
  *(_QWORD *)(a1 + 56) = kCAGradientLayerAxial;
  return kCAGradientLayerAxial;
}

id sub_1D9494()
{
  char *v0;
  uint64_t v1;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "layoutSubviews");
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_gradientOverlayView];
  objc_msgSend(v0, "insertSubview:above:", v1, *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_backgroundImageView]);
  return objc_msgSend(v0, "insertSubview:above:", *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_navGradientView], v1);
}

uint64_t type metadata accessor for UberEpisodeBackgroundView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView);
}

void sub_1D960C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_zoomFactor) = a1;
}

id sub_1D961C(double a1)
{
  uint64_t v1;
  void *v2;
  double v3;

  *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_offset) = a1;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_navGradientView);
  if (a1 < 0.0)
    v3 = 0.0;
  else
    v3 = a1;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_navGradientView), "frame");
  return objc_msgSend(v2, "setFrame:", 0.0, v3);
}

double sub_1D9684()
{
  return 0.0;
}

void sub_1D9694(void *a1)
{
  uint64_t v1;
  char *v2;
  void *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;

  v2 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_backgroundImageView);
  if (v2)
  {
    v3 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
    if ((v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode + 8] & 1) != 0)
    {
      v8 = a1;
      v4 = v2;
      objc_msgSend(v3, "setImage:", v8);
    }
    else
    {
      v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode];
      v8 = a1;
      v6 = v2;
      if (v8)
        v7 = objc_msgSend(v8, "imageWithRenderingMode:", v5);
      else
        v7 = 0;
      objc_msgSend(v3, "setImage:", v7);

    }
    objc_msgSend(v2, "invalidateIntrinsicContentSize");

  }
}

void sub_1D9798()
{
  char *v0;
  char *v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_backgroundImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_blurView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_zoomFactor] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView_offset] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView____lazy_storage___lightGradient];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25UberEpisodeBackgroundView____lazy_storage___darkGradient];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UberEpisodeBackgroundView.swift", 55, 2, 67, 0);
  __break(1u);
}

uint64_t type metadata accessor for _TraitEnvironmentWrapper()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_3B3149F5140CF30271827167208E639424_TraitEnvironmentWrapper);
}

void sub_1D99F0()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  double v17;
  double v18;
  double v19;
  objc_super v20;
  CGRect v21;

  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for SearchFieldHeaderView();
  objc_msgSendSuper2(&v20, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchFieldHeaderView_contentView];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "bounds");
    v3 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchFieldHeaderView_margins + 8];
    v4 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchFieldHeaderView_margins + 16];
    v9 = UIEdgeInsetsInsetRect(v5, v6, v7, v8, *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchFieldHeaderView_margins], v3);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    objc_msgSend(v2, "sizeThatFits:", v12, v14);
    v17 = v16;
    objc_msgSend(v0, "bounds");
    v19 = v18 - (v4 + v17);
    v21.origin.x = v9;
    v21.origin.y = v11;
    v21.size.width = v13;
    v21.size.height = v15;
    objc_msgSend(v2, "setFrame:", v3, v19, CGRectGetWidth(v21), v17);

  }
}

id sub_1D9B44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchFieldHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchFieldHeaderView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21SearchFieldHeaderView);
}

uint64_t sub_1D9BA4()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 17, 7);
}

uint64_t type metadata accessor for SelectableCellStorage()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21SelectableCellStorage);
}

uint64_t sub_1D9BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  void *v11;
  id v12;
  uint64_t v13;
  void (*v14)(_QWORD *, _QWORD);
  id v15;
  void (*v16)(_QWORD *, _QWORD);
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  double (*v21)(_QWORD *, _QWORD);
  __n128 v22;
  id v23;
  void (*v24)(_QWORD *, _QWORD);
  void (*v25)(_QWORD *, _QWORD);
  __n128 v26;
  _QWORD *boxed_opaque_existential_0;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  _BYTE v33[24];

  v1 = type metadata accessor for UIListContentConfiguration(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - v6;
  v8 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_config;
  v9 = swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_config, v33, 0, 0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v10(v7, v8, v1, v9);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_showLibraryHighlight) == 1)
  {
    v11 = (void *)objc_opt_self(UIColor);
    v12 = objc_msgSend(v11, "systemWhiteColor");
    v13 = UIListContentConfiguration.imageProperties.modify(v32);
    v31 = v2;
    v14 = (void (*)(_QWORD *, _QWORD))v13;
    UIListContentConfiguration.ImageProperties.tintColor.setter(v12);
    v14(v32, 0);
    v15 = objc_msgSend(v11, "systemWhiteColor");
    v16 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v32);
    UIListContentConfiguration.TextProperties.color.setter(v15);
    v16(v32, 0);
    v2 = v31;
    v17 = objc_msgSend(v11, "systemWhiteColor");
    v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.6);

  }
  else
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v19 = qword_3D0890;
    v20 = (id)qword_3D0890;
    v21 = (double (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v32);
    UIListContentConfiguration.ImageProperties.tintColor.setter(v19);
    v22.n128_f64[0] = v21(v32, 0);
    v23 = sub_1DB0F8(v0, v22);
    v24 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v32);
    UIListContentConfiguration.TextProperties.color.setter(v23);
    v24(v32, 0);
    v18 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  }
  v25 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v32);
  UIListContentConfiguration.TextProperties.color.setter(v18);
  v25(v32, 0);
  ((void (*)(char *, char *, uint64_t))v10)(v4, v7, v1);
  v26 = swift_beginAccess(v8, v32, 33, 0);
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v2 + 24))(v8, v4, v1, v26);
  swift_endAccess(v32);
  v32[3] = v1;
  v32[4] = &protocol witness table for UIListContentConfiguration;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
  ((void (*)(_QWORD *, uint64_t, uint64_t))v10)(boxed_opaque_existential_0, v8, v1);
  UICollectionViewCell.contentConfiguration.setter(v32);
  v28 = *(void (**)(char *, uint64_t))(v2 + 8);
  v28(v4, v1);
  return ((uint64_t (*)(char *, uint64_t))v28)(v7, v1);
}

void sub_1D9F0C()
{
  _BYTE *v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v5;
  __n128 v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  unsigned __int8 v10;
  int v11;
  id v12;
  char *v13;
  int v14;
  int v15;
  char v16;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_presentationStyle;
  v2 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_presentationStyle];
  v3 = static Link.Presentation.hasDisclosureIndicator.getter();
  v4 = v3;
  v5 = Link.Presentation.init(rawValue:)(v3);
  if (Link.Presentation.init(rawValue:)(v5 & v2) == v4)
  {
    v7 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing];
    v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing] = 1;
    if ((v7 & 1) != 0)
      return;
LABEL_8:
    sub_1DA340(v6);
    objc_msgSend(v0, "setNeedsUpdateConstraints");
    return;
  }
  v8 = v0[v1];
  v9 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  v10 = v9;
  v11 = Link.Presentation.init(rawValue:)(v9);
  if (Link.Presentation.init(rawValue:)(v11 & v8) == v10)
  {
    v12 = objc_msgSend(v0, "traitCollection");
    v13 = (char *)objc_msgSend(v12, "horizontalSizeClass");

    v14 = v13 == (_BYTE *)&dword_0 + 1;
    v15 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing];
    v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing] = v14;
    if (v14 != v15)
      goto LABEL_8;
  }
  else
  {
    v16 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing];
    v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing] = 0;
    if ((v16 & 1) != 0)
      goto LABEL_8;
  }
}

void sub_1DA01C()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  int v2;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  _QWORD *boxed_opaque_existential_0;
  void (*v12)(_QWORD *, unsigned __int8 *, uint64_t);
  id v13;
  void (*v14)(_QWORD *, _QWORD);
  _QWORD *v15;
  id v16;
  void (*v17)(_QWORD *, _QWORD);
  _QWORD *v18;
  id v19;
  void (*v20)(_QWORD *, _QWORD);
  _QWORD *v21;
  char v22;
  int v23;
  __n128 v24;
  _BYTE v25[24];
  _QWORD v26[3];
  uint64_t v27;
  void *v28;

  v1 = v0;
  v2 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemKind];
  v3 = objc_msgSend(v0, "traitCollection");
  v4 = (char *)objc_msgSend(v3, "userInterfaceIdiom");

  if (v4 == (_BYTE *)&dword_4 + 1)
  {
    v5 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v6 = static UIFont.title3.getter(v5);
  }
  else
  {
    v7 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    if (v2 == 17)
      v6 = static UIFont.body.getter(v7);
    else
      v6 = static UIFont.title2.getter(v7);
  }
  v8 = (void *)v6;
  v9 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_config];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_config], v26, 33, 0);
  UIListContentConfiguration.prefersSideBySideTextAndSecondaryText.setter(1);
  swift_endAccess(v26);
  v10 = type metadata accessor for UIListContentConfiguration(0);
  v27 = v10;
  v28 = &protocol witness table for UIListContentConfiguration;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v26);
  v12 = *(void (**)(_QWORD *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12(boxed_opaque_existential_0, v9, v10);
  UICollectionViewCell.contentConfiguration.setter(v26);
  swift_beginAccess(v9, v25, 33, 0);
  v13 = v8;
  v14 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v26);
  UIListContentConfiguration.TextProperties.font.setter(v13);
  v14(v26, 0);
  swift_endAccess(v25);
  v27 = v10;
  v28 = &protocol witness table for UIListContentConfiguration;
  v15 = __swift_allocate_boxed_opaque_existential_0(v26);
  v12(v15, v9, v10);
  UICollectionViewCell.contentConfiguration.setter(v26);
  swift_beginAccess(v9, v25, 33, 0);
  v16 = v13;
  v17 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v26);
  UIListContentConfiguration.TextProperties.font.setter(v16);
  v17(v26, 0);
  swift_endAccess(v25);
  v27 = v10;
  v28 = &protocol witness table for UIListContentConfiguration;
  v18 = __swift_allocate_boxed_opaque_existential_0(v26);
  v12(v18, v9, v10);
  UICollectionViewCell.contentConfiguration.setter(v26);
  v19 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v16, 2);
  swift_beginAccess(v9, v25, 33, 0);
  v20 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v26);
  UIListContentConfiguration.ImageProperties.preferredSymbolConfiguration.setter(v19);
  v20(v26, 0);
  swift_endAccess(v25);
  v27 = v10;
  v28 = &protocol witness table for UIListContentConfiguration;
  v21 = __swift_allocate_boxed_opaque_existential_0(v26);
  v12(v21, v9, v10);
  UICollectionViewCell.contentConfiguration.setter(v26);
  v22 = sub_1DAF18(v1);
  v23 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_showLibraryHighlight];
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_showLibraryHighlight] = v22 & 1;
  if ((v22 & 1) != v23)
  {
    sub_1D9BD4();
    if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing] & 1) != 0
      || *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_accessoryText + 8])
    {
      sub_1DA340(v24);
    }
  }
  objc_msgSend(v1, "setNeedsUpdateConstraints");

}

uint64_t sub_1DA340(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int v54;
  void *v55;
  double v56;
  id v57;
  id v58;
  void (**v59)(unint64_t, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  __n128 v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  __n128 v87;
  unint64_t v88;
  unint64_t v89;
  _BYTE *v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  unint64_t v96;
  unint64_t v97;
  id v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  void (**v121)(unint64_t, char *, uint64_t);
  uint64_t v122;
  char *v123;
  char v124[24];
  _BYTE v125[32];

  v2 = type metadata accessor for UICellAccessory.MultiselectOptions(0, a1);
  v110 = *(_QWORD *)(v2 - 8);
  v111 = v2;
  v3 = __chkstk_darwin(v2);
  v109 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for UICellAccessory.DeleteOptions(0, v3);
  v107 = *(_QWORD *)(v108 - 8);
  v5 = __chkstk_darwin(v108);
  v106 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v5);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v102 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v113 = *(_QWORD *)(v8 - 8);
  v114 = v8;
  v9 = __chkstk_darwin(v8);
  v112 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICellAccessory.LabelOptions(0, v9);
  v116 = *(_QWORD *)(v11 - 8);
  v117 = v11;
  __chkstk_darwin(v11);
  v115 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5468);
  v14 = __chkstk_darwin(v13);
  v123 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UICellAccessory.ReorderOptions(0, v14);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for UICellAccessory.DisplayedState(0, v18);
  v21 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v23 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for UICellAccessory(0);
  v121 = *(void (***)(unint64_t, char *, uint64_t))(v24 - 8);
  __chkstk_darwin(v24);
  v118 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v105 = (char *)&v99 - v27;
  __chkstk_darwin(v28);
  v101 = (char *)&v99 - v29;
  __chkstk_darwin(v30);
  v120 = (char *)&v99 - v31;
  __chkstk_darwin(v32);
  v34 = (char *)&v99 - v33;
  v35 = v1;
  v36 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemKind);
  v119 = v24;
  if ((_DWORD)v36 == 65)
  {
    v37 = _swiftEmptyArrayStorage;
    v38 = v1;
    goto LABEL_11;
  }
  v39 = v21;
  v40 = ModernShelf.ItemKind.rawValue.getter(v36);
  v42 = v41;
  v44 = ModernShelf.ItemKind.rawValue.getter(18);
  v45 = v43;
  if (v40 == v44 && v42 == v43)
  {
    v46 = swift_bridgeObjectRelease_n(v42, 2);
  }
  else
  {
    v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v42, v44, v43, 0);
    swift_bridgeObjectRelease(v42);
    v46 = swift_bridgeObjectRelease(v45);
    if ((v47 & 1) == 0)
    {
      v37 = _swiftEmptyArrayStorage;
      v38 = v35;
      v24 = v119;
      v21 = v39;
      goto LABEL_11;
    }
  }
  v21 = v39;
  v48 = v122;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v39 + 104))(v23, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v122, v46);
  v49 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v50 = v123;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v123, 1, 1, v49);
  UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)(2, v50, 0, 2);
  static UICellAccessory.reorder(displayed:options:)(v23, v20);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v48);
  v37 = (_QWORD *)sub_20F04C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v52 = v37[2];
  v51 = v37[3];
  v24 = v119;
  if (v52 >= v51 >> 1)
    v37 = (_QWORD *)sub_20F04C(v51 > 1, v52 + 1, 1, (unint64_t)v37);
  v38 = v35;
  v37[2] = v52 + 1;
  v121[4]((unint64_t)v37+ ((*((unsigned __int8 *)v121 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v121 + 80))+ (_QWORD)v121[9] * v52, v34, v24);
LABEL_11:
  v53 = *(_QWORD *)(v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_accessoryText + 8);
  if (v53)
  {
    v100 = *(_QWORD *)(v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_accessoryText);
    v54 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_showLibraryHighlight);
    v55 = (void *)objc_opt_self(UIColor);
    *(_QWORD *)&v56 = swift_bridgeObjectRetain(v53).n128_u64[0];
    if (v54 == 1)
    {
      v57 = objc_msgSend(v55, "systemWhiteColor", v56);
      v58 = objc_msgSend(v57, "colorWithAlphaComponent:", 0.7);

    }
    else
    {
      v58 = objc_msgSend(v55, "secondaryLabelColor", v56);
    }
    v60 = v21;
    v61 = v122;
    (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v122);
    v62 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v63 = v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v123, 1, 1, v62);
    swift_beginAccess(v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_config, v125, 32, 0);
    v99 = v58;
    v64 = v112;
    v65 = UIListContentConfiguration.textProperties.getter(v99);
    v66 = UIListContentConfiguration.TextProperties.font.getter(v65);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v64, v114);
    swift_endAccess(v125);
    v67 = v115;
    UICellAccessory.LabelOptions.init(isHidden:reservedLayoutWidth:tintColor:font:adjustsFontForContentSizeCategory:)(2, v63, v58, v66, 2);
    static UICellAccessory.label(text:displayed:options:)(v100, v53, v23, v67);
    v68 = swift_bridgeObjectRelease(v53);
    (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v67, v117, v68);
    v21 = v60;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v23, v61);
    if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
      v37 = (_QWORD *)sub_20F04C(0, v37[2] + 1, 1, (unint64_t)v37);
    v24 = v119;
    v59 = v121;
    v70 = v37[2];
    v69 = v37[3];
    if (v70 >= v69 >> 1)
      v37 = (_QWORD *)sub_20F04C(v69 > 1, v70 + 1, 1, (unint64_t)v37);
    v37[2] = v70 + 1;
    v59[4]((unint64_t)v37+ ((*((unsigned __int8 *)v59 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v59 + 80))+ (_QWORD)v59[9] * v70, v120, v24);

  }
  else
  {
    v59 = v121;
  }
  if (*(_BYTE *)(v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing) == 1)
  {
    if (*(_BYTE *)(v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_showLibraryHighlight) == 1)
    {
      v71 = objc_msgSend((id)objc_opt_self(UIColor), "systemWhiteColor");
      v72 = objc_msgSend(v71, "colorWithAlphaComponent:", 0.5);

    }
    else
    {
      v72 = 0;
    }
    v73 = v122;
    (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v122);
    v74 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v75 = v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v123, 1, 1, v74);
    v121 = (void (**)(unint64_t, char *, uint64_t))v72;
    v76 = v102;
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v75, v72);
    v77 = v101;
    static UICellAccessory.disclosureIndicator(displayed:options:)(v23, v76);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v76, v104);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v73);
    if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
      v37 = (_QWORD *)sub_20F04C(0, v37[2] + 1, 1, (unint64_t)v37);
    v79 = v37[2];
    v78 = v37[3];
    if (v79 >= v78 >> 1)
      v37 = (_QWORD *)sub_20F04C(v78 > 1, v79 + 1, 1, (unint64_t)v37);
    v37[2] = v79 + 1;
    v59[4]((unint64_t)v37+ ((*((unsigned __int8 *)v59 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v59 + 80))+ (_QWORD)v59[9] * v79, v77, v24);

  }
  v80 = (_BYTE *)(v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemIsDeletable);
  swift_beginAccess(v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemIsDeletable, v125, 0, 0);
  if (*v80 == 1)
  {
    v81 = swift_allocObject(&unk_389BA0, 24, 7);
    swift_unknownObjectWeakInit(v81 + 16, v38);
    v82 = v122;
    (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v122);
    v83 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v84 = v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v123, 1, 1, v83);
    swift_retain(v81);
    v85 = v106;
    UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(2, v84, 0, 0);
    v86 = v105;
    static UICellAccessory.delete(displayed:options:actionHandler:)(v23, v85, sub_1DC7A8, v81);
    v87 = swift_release(v81);
    (*(void (**)(char *, uint64_t, __n128))(v107 + 8))(v85, v108, v87);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v82);
    swift_release(v81);
    if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
      v37 = (_QWORD *)sub_20F04C(0, v37[2] + 1, 1, (unint64_t)v37);
    v89 = v37[2];
    v88 = v37[3];
    if (v89 >= v88 >> 1)
      v37 = (_QWORD *)sub_20F04C(v88 > 1, v89 + 1, 1, (unint64_t)v37);
    v37[2] = v89 + 1;
    v59[4]((unint64_t)v37+ ((*((unsigned __int8 *)v59 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v59 + 80))+ (_QWORD)v59[9] * v89, v86, v24);
  }
  v90 = (_BYTE *)(v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_shouldDisplayMultiSelectUI);
  v91 = swift_beginAccess(v38 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_shouldDisplayMultiSelectUI, v124, 0, 0);
  if (*v90 == 1)
  {
    v92 = v122;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v21 + 104))(v23, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v122, v91);
    v93 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v94 = v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v123, 1, 1, v93);
    v95 = v109;
    UICellAccessory.MultiselectOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(2, v94, 0, 0);
    static UICellAccessory.multiselect(displayed:options:)(v23, v95);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v95, v111);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v92);
    if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
      v37 = (_QWORD *)sub_20F04C(0, v37[2] + 1, 1, (unint64_t)v37);
    v97 = v37[2];
    v96 = v37[3];
    if (v97 >= v96 >> 1)
      v37 = (_QWORD *)sub_20F04C(v96 > 1, v97 + 1, 1, (unint64_t)v37);
    v37[2] = v97 + 1;
    v59[4]((unint64_t)v37+ ((*((unsigned __int8 *)v59 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v59 + 80))+ (_QWORD)v59[9] * v97, v118, v24);
  }
  return UICollectionViewListCell.accessories.setter(v37);
}

uint64_t sub_1DAF18(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  double v18;
  char v19;
  id v20;
  void (*v21)(char *, uint64_t);
  id v23;
  id v24;
  uint64_t v25;

  v2 = type metadata accessor for UICellConfigurationState(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v25 - v7;
  v9 = a1[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemKind];
  if ((_DWORD)v9 == 65)
    goto LABEL_10;
  v10 = ModernShelf.ItemKind.rawValue.getter(v9);
  v12 = v11;
  v13 = ModernShelf.ItemKind.rawValue.getter(18);
  if (v10 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n(v12, 2);
  }
  else
  {
    v16 = v14;
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
    swift_bridgeObjectRelease(v12);
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(v16).n128_u64[0];
    v19 = 0;
    if ((v17 & 1) == 0)
      return v19 & 1;
  }
  v20 = objc_msgSend(a1, "_bridgedConfigurationState", v18);
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v20) = UICellConfigurationState.isEditing.getter();
  v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v21(v8, v2);
  if ((v20 & 1) != 0)
  {
LABEL_10:
    v19 = 0;
  }
  else
  {
    v23 = objc_msgSend(a1, "_bridgedConfigurationState");
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v23) = UICellConfigurationState.isSelected.getter();
    v21(v6, v2);
    if ((v23 & 1) != 0)
    {
      v19 = 1;
    }
    else
    {
      v24 = objc_msgSend(a1, "_bridgedConfigurationState");
      static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

      v19 = UICellConfigurationState.isHighlighted.getter();
      v21(v8, v2);
    }
  }
  return v19 & 1;
}

id sub_1DB0F8(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned __int8 v6;
  int v7;
  unsigned int v9;
  uint64_t v10;
  unsigned __int8 v11;
  int v12;
  int v13;
  void *v14;
  id v15;

  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_presentationStyle;
  v4 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_presentationStyle);
  v5 = static Link.Presentation.textFollowsTintColor.getter(a2);
  v6 = v5;
  v7 = Link.Presentation.init(rawValue:)(v5);
  if (Link.Presentation.init(rawValue:)(v7 & v4) == v6)
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    return (id)qword_3D0890;
  }
  else
  {
    v9 = *(unsigned __int8 *)(a1 + v3);
    v10 = static Link.Presentation.textUsesSecondaryTextColor.getter();
    v11 = v10;
    v12 = Link.Presentation.init(rawValue:)(v10);
    v13 = Link.Presentation.init(rawValue:)(v12 & v9);
    v14 = (void *)objc_opt_self(UIColor);
    if (v13 == v11)
      v15 = objc_msgSend(v14, "secondaryLabelColor");
    else
      v15 = objc_msgSend(v14, "labelColor");
    return v15;
  }
}

void sub_1DB1DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *);
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    swift_beginAccess(v1, v10, 0, 0);
    v4 = swift_unknownObjectWeakLoadStrong(v1);
    if (v4)
    {
      v5 = (void *)v4;
      v6 = v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_deletionUITriggered;
      swift_beginAccess(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_deletionUITriggered, v9, 0, 0);
      v8 = *(void (**)(void *))v6;
      v7 = *(_QWORD *)(v6 + 8);
      swift_retain(v7);

      v8(v3);
      swift_release(v7);
    }
    else
    {

    }
  }
}

void sub_1DB31C()
{
  unsigned __int8 *v0;
  _BYTE *v1;
  objc_class *ObjectType;
  int v3;
  id v4;
  char *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _BYTE *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  _BYTE *v17;
  id v18;
  void *v19;
  void *v20;
  _QWORD v21[3];
  objc_class *v22;
  _QWORD v23[3];
  uint64_t v24;
  objc_super v25;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v25.receiver = v0;
  v25.super_class = ObjectType;
  objc_msgSendSuper2(&v25, "updateConstraints");
  v3 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing];
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = (char *)objc_msgSend(v4, "horizontalSizeClass");

  if (((v5 == (_BYTE *)&dword_0 + 1) & (v3 | (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemKind] == 17))) != 0)
    v6 = &dword_4 + 2;
  else
    v6 = &dword_10 + 2;
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_trailingSeparatorConstraint;
  v8 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_trailingSeparatorConstraint];
  if (!v8)
    goto LABEL_8;
  v9 = v8;
  if (objc_msgSend(v9, "secondAttribute") != v6)
  {
    objc_msgSend(v9, "setActive:", 0);

    v9 = *(id *)&v1[v7];
    *(_QWORD *)&v1[v7] = 0;
  }

  if (!*(_QWORD *)&v1[v7])
  {
LABEL_8:
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    v10 = objc_msgSend(v1, "separatorLayoutGuide");
    v24 = sub_E710(0, &qword_3DB8E8, UILayoutGuide_ptr);
    v22 = ObjectType;
    v23[0] = v10;
    v21[0] = v1;
    v11 = v1;
    v12 = sub_1DB594(v23, 6, 0, v21, (uint64_t)v6, 1.0, 0.0);
    v13 = *(void **)&v1[v7];
    *(_QWORD *)&v1[v7] = v12;

    v14 = *(void **)&v1[v7];
    if (v14)
      objc_msgSend(v14, "setActive:", 1, v21[0]);
  }
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_leadingSeparatorConstraint;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_leadingSeparatorConstraint])
  {
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    v16 = objc_msgSend(v1, "separatorLayoutGuide");
    v24 = sub_E710(0, &qword_3DB8E8, UILayoutGuide_ptr);
    v22 = ObjectType;
    v23[0] = v16;
    v21[0] = v1;
    v17 = v1;
    v18 = sub_1DB594(v23, 17, 0, v21, 17, 1.0, 0.0);
    v19 = *(void **)&v1[v15];
    *(_QWORD *)&v1[v15] = v18;

    v20 = *(void **)&v1[v15];
    if (v20)
      objc_msgSend(v20, "setActive:", 1);
  }
}

id sub_1DB594(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  id v28;
  uint64_t v30;
  uint64_t v31;

  v8 = v7;
  v16 = a1[3];
  v17 = __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v16);
  v19 = a4[3];
  if (v19)
  {
    v20 = __swift_project_boxed_opaque_existential_1(a4, a4[3]);
    v30 = a5;
    v31 = a2;
    v21 = a3;
    v22 = *(_QWORD *)(v19 - 8);
    v23 = __chkstk_darwin(v20);
    v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v22 + 16))(v25, v23);
    v26 = _bridgeAnythingToObjectiveC<A>(_:)(v25, v19);
    v27 = *(void (**)(char *, uint64_t))(v22 + 8);
    a3 = v21;
    v27(v25, v19);
    a5 = v30;
    a2 = v31;
    __swift_destroy_boxed_opaque_existential_0(a4);
  }
  else
  {
    v26 = 0;
  }
  v28 = objc_msgSend((id)swift_getObjCClassFromMetadata(v8), "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:", v18, a2, a3, v26, a5, a6, a7);
  swift_unknownObjectRelease(v18);
  swift_unknownObjectRelease(v26);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v28;
}

void sub_1DB73C()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  int v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for UICellConfigurationState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DAF18(v0);
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_showLibraryHighlight;
  v11 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_showLibraryHighlight];
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_showLibraryHighlight] = v9 & 1;
  if ((v9 & 1) != v11)
  {
    sub_1D9BD4();
    if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing] & 1) != 0
      || *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_accessoryText + 8])
    {
      sub_1DA340(v12);
    }
  }
  v13 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemKind];
  if ((_DWORD)v13 != 65)
  {
    v14 = ModernShelf.ItemKind.rawValue.getter(v13);
    v16 = v15;
    v17 = ModernShelf.ItemKind.rawValue.getter(18);
    if (v14 == v17 && v16 == v18)
    {
      v22 = swift_bridgeObjectRelease_n(v16, 2).n128_u64[0];
    }
    else
    {
      v20 = v18;
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
      swift_bridgeObjectRelease(v16);
      v22 = swift_bridgeObjectRelease(v20).n128_u64[0];
      if ((v21 & 1) == 0)
        return;
    }
    v23 = objc_msgSend(v1, "_bridgedConfigurationState", *(double *)&v22);
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v23);

    LOBYTE(v23) = UICellConfigurationState.isEditing.getter(v24);
    v25 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v23 & 1) != 0)
    {
      static UIBackgroundConfiguration.clear()(v25);
    }
    else
    {
      v26 = v1[v10];
      static UIBackgroundConfiguration.listPlainCell()(v25);
      if ((v26 & 1) != 0)
      {
        if (qword_3CEFE8 != -1)
          swift_once(&qword_3CEFE8, sub_DF80);
        v27 = qword_3D0890;
        v28 = (id)qword_3D0890;
        UIBackgroundConfiguration.backgroundColor.setter(v27);
      }
    }
    v29 = type metadata accessor for UIBackgroundConfiguration(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v8, 0, 1, v29);
    UICollectionViewCell.backgroundConfiguration.setter(v8);
  }
}

id sub_1DBA28(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_objectGraph] = 0;
  v10 = v4;
  static UIListContentConfiguration.cell()();
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_presentationStyle;
  v10[v11] = Link.Presentation.init(rawValue:)(0);
  v10[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemKind] = 65;
  v10[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_showLibraryHighlight] = 0;
  v12 = &v10[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_accessoryText];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v10[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_leadingSeparatorConstraint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_trailingSeparatorConstraint] = 0;
  v10[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemIsDeletable] = 0;
  v13 = &v10[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_deletionUITriggered];
  *(_QWORD *)v13 = UINavigationBar.overrideBackButtonStyle.setter;
  *((_QWORD *)v13 + 1) = 0;
  v10[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_shouldDisplayMultiSelectUI] = 0;

  v15.receiver = v10;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
}

id sub_1DBB80(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_objectGraph] = 0;
  v5 = v2;
  static UIListContentConfiguration.cell()();
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_presentationStyle;
  v5[v6] = Link.Presentation.init(rawValue:)(0);
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemKind] = 65;
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_showLibraryHighlight] = 0;
  v7 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_accessoryText];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_chevronShowing] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_leadingSeparatorConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_trailingSeparatorConstraint] = 0;
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemIsDeletable] = 0;
  v8 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_deletionUITriggered];
  *(_QWORD *)v8 = UINavigationBar.overrideBackButtonStyle.setter;
  *((_QWORD *)v8 + 1) = 0;
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_shouldDisplayMultiSelectUI] = 0;

  v11.receiver = v5;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);

  return v9;
}

uint64_t sub_1DBD5C()
{
  return type metadata accessor for LinkListCell(0);
}

uint64_t type metadata accessor for LinkListCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3DB8B0;
  if (!qword_3DB8B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LinkListCell);
  return result;
}

uint64_t sub_1DBDA0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = "\b";
  result = type metadata accessor for UIListContentConfiguration(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int8 + 64;
    v4[3] = &unk_2FE1F0;
    v4[4] = &unk_2FE208;
    v4[5] = &unk_2FE220;
    v4[6] = &unk_2FE208;
    v4[7] = "\b";
    v4[8] = "\b";
    v4[9] = &unk_2FE208;
    v4[10] = (char *)&value witness table for () + 64;
    v4[11] = &unk_2FE208;
    result = swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DBE5C()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemIsDeletable);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemIsDeletable, v3, 0, 0);
  return *v1;
}

uint64_t sub_1DBEA0(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC03C(a1, a2, a3, &OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemIsDeletable);
}

uint64_t (*sub_1DBEAC(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemIsDeletable, a1, 33, 0);
  return sub_1DBEF4;
}

uint64_t sub_1DBEF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_deletionUITriggered);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_deletionUITriggered, v4, 0, 0);
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

uint64_t sub_1DBF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_deletionUITriggered);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_release(v6);
}

uint64_t (*sub_1DBFA8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_deletionUITriggered, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1DBFEC()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_shouldDisplayMultiSelectUI);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_shouldDisplayMultiSelectUI, v3, 0, 0);
  return *v1;
}

uint64_t sub_1DC030(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC03C(a1, a2, a3, &OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_shouldDisplayMultiSelectUI);
}

uint64_t sub_1DC03C(char a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _BYTE *v6;
  __n128 v7;
  _BYTE v9[24];

  v6 = (_BYTE *)(v4 + *a4);
  v7 = swift_beginAccess(v6, v9, 1, 0);
  *v6 = a1;
  return sub_1DA340(v7);
}

uint64_t (*sub_1DC08C(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_shouldDisplayMultiSelectUI, a1, 33, 0);
  return sub_1DBEF4;
}

void sub_1DC0D4(uint64_t a1, char a2)
{
  __n128 v3;

  v3 = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_1DA340(v3);
}

void sub_1DC104(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *boxed_opaque_existential_0;
  void (*v22)(_QWORD *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  void *v33;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v4);
  v6 = (char *)&v31[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31[-1] - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v31[-1] - v11;
  v30 = type metadata accessor for Link(0);
  v13 = (uint64_t)a1 + *(int *)(v30 + 28);
  sub_DA064(v13, (uint64_t)v12);
  v14 = type metadata accessor for ArtworkModel(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  sub_44C28((uint64_t)v12);
  v18 = 0;
  if (v17 == 1)
    goto LABEL_4;
  sub_DA064(v13, (uint64_t)v6);
  if (v16(v6, 1, v14) != 1)
  {
    type metadata accessor for SystemGlyph(0);
    sub_2376C((uint64_t)v6, (uint64_t)v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
    v18 = static SystemGlyph.load(artwork:)(v9);
    sub_44C28((uint64_t)v9);
LABEL_4:
    v19 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_config;
    swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_config, v31, 33, 0);
    UIListContentConfiguration.image.setter(v18);
    swift_endAccess(v31);
    v20 = type metadata accessor for UIListContentConfiguration(0);
    v32 = v20;
    v33 = &protocol witness table for UIListContentConfiguration;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v31);
    v22 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    v22(boxed_opaque_existential_0, v19, v20);
    UICollectionViewCell.contentConfiguration.setter(v31);
    v23 = a1[2];
    v24 = a1[3];
    swift_beginAccess(v19, v31, 33, 0);
    swift_bridgeObjectRetain(v24);
    UIListContentConfiguration.text.setter(v23);
    swift_endAccess(v31);
    v32 = v20;
    v33 = &protocol witness table for UIListContentConfiguration;
    v25 = __swift_allocate_boxed_opaque_existential_0(v31);
    v22(v25, v19, v20);
    UICollectionViewCell.contentConfiguration.setter(v31);
    v26 = a1[5];
    v27 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_accessoryText);
    v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_accessoryText + 8);
    *v27 = a1[4];
    v27[1] = v26;
    swift_bridgeObjectRetain(v26);
    v29 = swift_bridgeObjectRelease(v28);
    sub_1DA340(v29);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_presentationStyle) = *((_BYTE *)a1
                                                                                                 + *(int *)(v30 + 32));
    sub_1D9BD4();
    sub_1D9F0C();
    return;
  }
  __break(1u);
}

uint64_t sub_1DC3A8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_objectGraph));
}

void sub_1DC3B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_objectGraph) = a1;
  swift_release(v3);
  swift_retain(a1);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews12LinkListCell_itemKind) = ModernShelf.ItemPresentation.itemKind.getter(v4);
  sub_1DA01C();
}

uint64_t sub_1DC410(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;

  ObjectType = swift_getObjectType();
  v3 = sub_89A0(&qword_3DB8E0, type metadata accessor for LinkListCell, (uint64_t)&unk_2FE3B8);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v3);
}

void sub_1DC468()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000022, 0x8000000000313F00, "ShelfKitCollectionViews/LinkListCell.swift", 42, 2, 303, 0);
  __break(1u);
}

uint64_t sub_1DC4C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_89A0(&qword_3DB8E0, type metadata accessor for LinkListCell, (uint64_t)&unk_2FE3B8);
  return static TypedShelfUIKitCell.modelType.getter(v0, v1);
}

uint64_t sub_1DC4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShelfCellListSeparatorMode(0);
  __swift_allocate_value_buffer(v8, qword_3FCF78);
  __swift_project_value_buffer(v8, (uint64_t)qword_3FCF78);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ShelfCellListSeparatorMode.Layout.custom(_:), v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Placement.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v3, v7);
}

uint64_t sub_1DC60C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3CFAA8 != -1)
    swift_once(&qword_3CFAA8, sub_1DC4F4);
  v2 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_3FCF78);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DC67C()
{
  return sub_89A0(&qword_3DB8C0, type metadata accessor for LinkListCell, (uint64_t)&unk_2FE238);
}

uint64_t sub_1DC6A8()
{
  return sub_89A0(&qword_3DB8C8, type metadata accessor for LinkListCell, (uint64_t)&unk_2FE290);
}

uint64_t sub_1DC6D4()
{
  return sub_89A0(&qword_3D5CA8, type metadata accessor for LinkListCell, (uint64_t)&unk_2FE318);
}

uint64_t sub_1DC700()
{
  return sub_89A0(&qword_3DB8D0, type metadata accessor for LinkListCell, (uint64_t)&unk_2FE2F0);
}

uint64_t sub_1DC72C()
{
  return sub_89A0(&qword_3DB8D8, type metadata accessor for LinkListCell, (uint64_t)&unk_2FE348);
}

uint64_t sub_1DC758()
{
  return sub_89A0(&qword_3D46A0, (uint64_t (*)(uint64_t))&type metadata accessor for Link, (uint64_t)&protocol conformance descriptor for Link);
}

uint64_t sub_1DC784()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1DC7A8()
{
  uint64_t v0;

  sub_1DB1DC(v0);
}

id sub_1DC7E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TabElement(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1DC850()
{
  return type metadata accessor for TabElement(0);
}

uint64_t type metadata accessor for TabElement(uint64_t a1)
{
  uint64_t result;

  result = qword_3DB918;
  if (!qword_3DB918)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TabElement);
  return result;
}

uint64_t sub_1DC894(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for TabMenu.Item(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void destroy for DimensionEdgeInsets(uint64_t a1)
{
  sub_14788(*(id *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_WORD *)(a1 + 120));
}

uint64_t initializeWithCopy for DimensionEdgeInsets(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 v16;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(void **)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a2 + 112);
  v16 = *(_WORD *)(a2 + 120);
  sub_1472C(v4, v5, v6, v7, v8, v9, v10, v11, v12, v14, v15, v16);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 104) = v14;
  *(_QWORD *)(a1 + 112) = v15;
  *(_WORD *)(a1 + 120) = v16;
  return a1;
}

uint64_t assignWithCopy for DimensionEdgeInsets(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unsigned __int16 v22;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v3 = *(void **)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(void **)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a2 + 96);
  v24 = *(_QWORD *)(a2 + 104);
  v25 = *(_QWORD *)(a2 + 112);
  v26 = *(_WORD *)(a2 + 120);
  sub_1472C(v3, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  v12 = *(void **)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 72);
  v18 = *(void **)(a1 + 80);
  v19 = *(_QWORD *)(a1 + 88);
  v20 = *(_OWORD *)(a1 + 96);
  v21 = *(_QWORD *)(a1 + 112);
  v22 = *(_WORD *)(a1 + 120);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = v24;
  *(_QWORD *)(a1 + 112) = v25;
  *(_WORD *)(a1 + 120) = v26;
  sub_14788(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22);
  return a1;
}

__n128 __swift_memcpy122_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_OWORD *)(a1 + 106) = *(__int128 *)((char *)a2 + 106);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for DimensionEdgeInsets(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int16 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int16 v16;
  __int128 v17;
  __int128 v18;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 112);
  v5 = *(_WORD *)(a2 + 120);
  v6 = *(void **)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(void **)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_QWORD *)(a1 + 112);
  v16 = *(_WORD *)(a1 + 120);
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  v18 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v18;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = v4;
  *(_WORD *)(a1 + 120) = v5;
  sub_14788(v6, v8, v7, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DimensionEdgeInsets(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 122))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int16 *)(a1 + 120) >> 7) & 0x7C | (*(unsigned __int16 *)(a1 + 120) >> 14)) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DimensionEdgeInsets(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 120) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 122) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 122) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 112) = 0;
      *(_OWORD *)(result + 80) = 0u;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_WORD *)(result + 120) = (((-a2 >> 2) & 0x1F) - 32 * (_WORD)a2) << 9;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DimensionEdgeInsets()
{
  return &type metadata for DimensionEdgeInsets;
}

void destroy for Dimension(uint64_t a1)
{
  sub_14788(*(id *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_WORD *)(a1 + 112));
}

uint64_t initializeWithCopy for Dimension(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unsigned __int16 v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(void **)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(void **)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_WORD *)(a2 + 112);
  sub_1472C(v3, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v13;
  *(_QWORD *)(a1 + 104) = v14;
  *(_WORD *)(a1 + 112) = v15;
  return a1;
}

uint64_t assignWithCopy for Dimension(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  unsigned __int16 v23;
  uint64_t v25;
  uint64_t v26;
  unsigned __int16 v27;

  v3 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v3;
  v4 = (void *)*((_QWORD *)a2 + 3);
  v5 = *((_QWORD *)a2 + 4);
  v6 = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)a2 + 6);
  v8 = *((_QWORD *)a2 + 7);
  v9 = *((_QWORD *)a2 + 8);
  v10 = (void *)*((_QWORD *)a2 + 9);
  v11 = *((_QWORD *)a2 + 10);
  v12 = *((_QWORD *)a2 + 11);
  v25 = *((_QWORD *)a2 + 12);
  v26 = *((_QWORD *)a2 + 13);
  v27 = *((_WORD *)a2 + 56);
  sub_1472C(v4, v5, v6, v7, v8, v9, v10, v11, v12, v25, v26, v27);
  v13 = *(void **)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(void **)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_OWORD *)(a1 + 88);
  v22 = *(_QWORD *)(a1 + 104);
  v23 = *(_WORD *)(a1 + 112);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v25;
  *(_QWORD *)(a1 + 104) = v26;
  *(_WORD *)(a1 + 112) = v27;
  sub_14788(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, v23);
  return a1;
}

__n128 __swift_memcpy114_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for Dimension(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unsigned __int16 v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 104);
  v4 = *(_WORD *)(a2 + 112);
  v5 = *(void **)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(void **)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 104);
  v15 = *(_WORD *)(a1 + 112);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v3;
  *(_WORD *)(a1 + 112) = v4;
  sub_14788(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for Dimension(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 114))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Dimension(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 112) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 114) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 114) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Dimension()
{
  return &type metadata for Dimension;
}

uint64_t sub_1DD06C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  id v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  _QWORD v41[2];
  void *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[11];
  unsigned __int16 v54;

  v44 = a3;
  v52 = a2;
  v45 = a1;
  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  __chkstk_darwin(v4);
  v49 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(double *)v3;
  v7 = *(double *)(v3 + 8);
  LODWORD(v5) = *(unsigned __int8 *)(v3 + 16);
  v8 = *(void **)(v3 + 24);
  v9 = *(_QWORD *)(v3 + 32);
  v10 = *(_QWORD *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v12 = *(_QWORD *)(v3 + 56);
  v13 = *(_QWORD *)(v3 + 64);
  v14 = *(void **)(v3 + 72);
  v15 = *(_QWORD *)(v3 + 80);
  v16 = *(_QWORD *)(v3 + 88);
  v17 = *(_QWORD *)(v3 + 96);
  v18 = *(_QWORD *)(v3 + 104);
  v19 = *(_WORD *)(v3 + 112);
  v53[0] = v8;
  v53[1] = v9;
  v20 = v10;
  v53[2] = v10;
  v53[3] = v11;
  v21 = v11;
  v43 = v12;
  v53[4] = v12;
  v53[5] = v13;
  v42 = v14;
  v53[6] = v14;
  v53[7] = v15;
  v53[8] = v16;
  v53[9] = v17;
  v53[10] = v18;
  v54 = v19;
  v47 = v9;
  v48 = v8;
  v46 = v13;
  if ((_DWORD)v5 == 1)
  {
    v22 = v8;
    v41[1] = sub_1FEB8();
    v23 = v9;
    v24 = v20;
    v25 = v20;
    v26 = v21;
    v27 = v21;
    v28 = v43;
    v29 = v13;
    v30 = v42;
    v31 = sub_1472C(v22, v23, v25, v27, v43, v29, v42, v15, v16, v17, v18, v19);
    if ((static UITraitCollection.interfaceIdiomIsMac.getter(v31) & 1) == 0)
      v6 = v7;
  }
  else
  {
    v32 = v9;
    v24 = v10;
    v26 = v11;
    v28 = v43;
    v33 = v13;
    v30 = v42;
    sub_1472C(v8, v32, v10, v11, v43, v33, v42, v15, v16, v17, v18, v19);
  }
  sub_144084(v6, (uint64_t)v53, v44 & 1);
  v35 = v34;
  sub_14788(v48, v47, v24, v26, v28, v46, v30, v15, v16, v17, v18, v19);
  v53[0] = v35;
  v37 = v49;
  v36 = v50;
  v39 = v51;
  v38 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v52, v51);
  result = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v37, v39);
  if ((_DWORD)result != enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:)
    && (_DWORD)result != enum case for FloatingPointRoundingRule.toNearestOrEven(_:)
    && (_DWORD)result != enum case for FloatingPointRoundingRule.up(_:)
    && (_DWORD)result != enum case for FloatingPointRoundingRule.down(_:)
    && (_DWORD)result != enum case for FloatingPointRoundingRule.towardZero(_:)
    && (_DWORD)result != enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    Double._roundSlowPath(_:)(v38);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v37, v39);
  }
  return result;
}

uint64_t sub_1DD388()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for FloatingPointRoundingRule(0);
  __swift_allocate_value_buffer(v0, qword_3FCFB0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3FCFB0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v0);
}

uint64_t sub_1DD3E0()
{
  uint64_t v0;
  double v1;
  double v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  unint64_t v14;
  Swift::String v15;
  void *object;
  Swift::String v17;
  Swift::String v18;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[11];
  __int16 v25;
  _QWORD v26[3];

  v1 = *(double *)v0;
  v2 = *(double *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 80);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 104);
  v20 = *(_WORD *)(v0 + 112);
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  v12._countAndFlagsBits = 40;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  if (v3 == 1)
  {
    v14 = sub_1FEB8();
    v13 = static UITraitCollection.interfaceIdiomIsMac.getter(v14);
    if ((v13 & 1) == 0)
      v1 = v2;
  }
  v15._countAndFlagsBits = Double.description.getter(v13, v1);
  object = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(object);
  v17._countAndFlagsBits = 47;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  v24[0] = v4;
  v24[1] = v5;
  v24[2] = v6;
  v24[3] = v7;
  v24[4] = v8;
  v24[5] = v9;
  v24[6] = v10;
  v24[7] = v11;
  v24[8] = v23;
  v24[9] = v22;
  v24[10] = v21;
  v25 = v20;
  _print_unlocked<A, B>(_:_:)(v24, v26, &type metadata for FontSource, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v18._countAndFlagsBits = 41;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  return v26[0];
}

uint64_t sub_1DD51C()
{
  uint64_t v0;
  double v1;
  double v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  unint64_t v14;
  Swift::String v15;
  void *object;
  Swift::String v17;
  Swift::String v18;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[11];
  __int16 v25;
  _QWORD v26[3];

  v1 = *(double *)v0;
  v2 = *(double *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 80);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 104);
  v20 = *(_WORD *)(v0 + 112);
  _StringGuts.grow(_:)(35);
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  v12._object = (void *)0x8000000000314060;
  v12._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v12);
  if (v3 == 1)
  {
    v14 = sub_1FEB8();
    v13 = static UITraitCollection.interfaceIdiomIsMac.getter(v14);
    if ((v13 & 1) == 0)
      v1 = v2;
  }
  v15._countAndFlagsBits = Double.description.getter(v13, v1);
  object = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(object);
  v17._countAndFlagsBits = 0x656372756F73202CLL;
  v17._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v17);
  v24[0] = v4;
  v24[1] = v5;
  v24[2] = v6;
  v24[3] = v7;
  v24[4] = v8;
  v24[5] = v9;
  v24[6] = v10;
  v24[7] = v11;
  v24[8] = v23;
  v24[9] = v22;
  v24[10] = v21;
  v25 = v20;
  _print_unlocked<A, B>(_:_:)(v24, v26, &type metadata for FontSource, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v18._countAndFlagsBits = 41;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  return v26[0];
}

void sub_1DD698(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  double *v26;
  __n128 v27;
  double v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t);
  int v35;
  int v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  int v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char v56[48];
  _QWORD v57[11];
  unsigned __int16 v58;

  v45 = a2;
  v54 = a1;
  v44 = type metadata accessor for FloatingPointRoundingRule(0);
  v43 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v46 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v42 = (char *)&v41 - v5;
  v6 = *v2;
  v7 = v2[1];
  v8 = (void *)v2[2];
  v52 = v2[3];
  v9 = v2[4];
  v51 = v2[5];
  v10 = v2[6];
  v11 = v2[7];
  v12 = v2[9];
  v53 = (void *)v2[8];
  v13 = v2[10];
  v14 = v2[11];
  v15 = v2[12];
  v16 = *((_WORD *)v2 + 52);
  v57[0] = v8;
  v57[1] = v52;
  v48 = v8;
  v57[2] = v9;
  v57[3] = v51;
  v47 = v9;
  v57[4] = v10;
  v57[5] = v11;
  v17 = v10;
  v50 = v10;
  v49 = v11;
  v57[6] = v53;
  v57[7] = v12;
  v57[8] = v13;
  v57[9] = v14;
  v57[10] = v15;
  v58 = v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22D8);
  inited = swift_initStackObject(v18, v56);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v7;
  v20 = v8;
  v21 = v52;
  v22 = v9;
  v23 = v51;
  v24 = v11;
  v25 = v53;
  sub_1472C(v20, v52, v22, v51, v17, v24, v53, v12, v13, v14, v15, v16);
  v26 = (double *)sub_14421C((uint64_t)v57, inited);
  swift_setDeallocating(inited, v27);
  sub_14788(v48, v21, v47, v23, v50, v49, v25, v12, v13, v14, v15, v16);
  if (!*((_QWORD *)v26 + 2))
  {
    __break(1u);
    goto LABEL_27;
  }
  v28 = v26[4];
  *(double *)v57 = v28;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v42;
  v32 = v45;
  v33 = v44;
  v30(v42, v45, v44);
  v34 = *(uint64_t (**)(char *, uint64_t))(v29 + 88);
  v35 = v34(v31, v33);
  v36 = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
  if (v35 == enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:))
  {
    v57[0] = round(v28);
    v37 = v46;
    goto LABEL_16;
  }
  v37 = v46;
  if (v35 == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
  {
    v57[0] = rint(v28);
    goto LABEL_16;
  }
  if (v35 == enum case for FloatingPointRoundingRule.up(_:))
    goto LABEL_7;
  if (v35 == enum case for FloatingPointRoundingRule.down(_:))
    goto LABEL_9;
  if (v35 == enum case for FloatingPointRoundingRule.towardZero(_:))
  {
    v57[0] = trunc(v28);
  }
  else
  {
    if (v35 == enum case for FloatingPointRoundingRule.awayFromZero(_:))
    {
      if ((*(_QWORD *)&v28 & 0x8000000000000000) == 0)
      {
LABEL_7:
        v57[0] = ceil(v28);
        goto LABEL_16;
      }
LABEL_9:
      v57[0] = floor(v28);
      goto LABEL_16;
    }
    Double._roundSlowPath(_:)(v32);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v33);
  }
LABEL_16:
  if (*((_QWORD *)v26 + 2) < 2uLL)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v38 = *((_QWORD *)v26 + 5);
  v39 = swift_bridgeObjectRelease(v26);
  v55 = v38;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v30)(v37, v32, v33, v39);
  v40 = v34(v37, v33);
  if (v40 != v36
    && v40 != enum case for FloatingPointRoundingRule.toNearestOrEven(_:)
    && v40 != enum case for FloatingPointRoundingRule.up(_:)
    && v40 != enum case for FloatingPointRoundingRule.down(_:)
    && v40 != enum case for FloatingPointRoundingRule.towardZero(_:)
    && v40 != enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    Double._roundSlowPath(_:)(v32);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v37, v33);
  }
}

uint64_t sub_1DDB08()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  __int16 v6;
  Swift::String v7;
  uint64_t v8;
  Swift::String v9;
  void *object;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  void *v14;
  Swift::String v15;
  __int128 v16;
  uint64_t v17;
  Swift::String v18;
  void *v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v22;
  void *v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  void *v29;
  Swift::String v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[5];
  uint64_t v38;
  __int16 v39;
  uint64_t v40;
  unint64_t v41;

  v2 = *(double *)v0;
  v1 = *(double *)(v0 + 8);
  v4 = *(double *)(v0 + 16);
  v3 = *(double *)(v0 + 24);
  v35 = *(_OWORD *)(v0 + 48);
  v36 = *(_OWORD *)(v0 + 32);
  v33 = *(_OWORD *)(v0 + 80);
  v34 = *(_OWORD *)(v0 + 64);
  v32 = *(_OWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_WORD *)(v0 + 120);
  *(_QWORD *)&v37[0] = 0;
  *((_QWORD *)&v37[0] + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(58);
  v7._countAndFlagsBits = 0xD000000000000021;
  v7._object = (void *)0x8000000000313FD0;
  String.append(_:)(v7);
  v9._countAndFlagsBits = Double.description.getter(v8, v2);
  object = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(object);
  v11._countAndFlagsBits = 0xD000000000000013;
  v11._object = (void *)0x8000000000314000;
  String.append(_:)(v11);
  v13._countAndFlagsBits = Double.description.getter(v12, v1);
  v14 = v13._object;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v14);
  v15._countAndFlagsBits = 8236;
  v15._object = (void *)0xE200000000000000;
  String.append(_:)(v15);
  v16 = v37[0];
  _StringGuts.grow(_:)(42);
  swift_bridgeObjectRelease(0xE000000000000000);
  v18._countAndFlagsBits = Double.description.getter(v17, v4);
  v19 = v18._object;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v19);
  v20._countAndFlagsBits = 0xD000000000000014;
  v20._object = (void *)0x8000000000314040;
  String.append(_:)(v20);
  v22._countAndFlagsBits = Double.description.getter(v21, v3);
  v23 = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v23);
  v24._countAndFlagsBits = 8236;
  v24._object = (void *)0xE200000000000000;
  String.append(_:)(v24);
  swift_bridgeObjectRetain(0xE000000000000000);
  v25._countAndFlagsBits = 0xD000000000000010;
  v25._object = (void *)0x8000000000314020;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRelease(0x8000000000314020);
  v40 = 0;
  v41 = 0xE000000000000000;
  v26._countAndFlagsBits = 0x203A656372756F73;
  v26._object = (void *)0xE800000000000000;
  String.append(_:)(v26);
  v37[0] = v36;
  v37[1] = v35;
  v37[2] = v34;
  v37[3] = v33;
  v37[4] = v32;
  v38 = v5;
  v39 = v6;
  _print_unlocked<A, B>(_:_:)(v37, &v40, &type metadata for FontSource, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v27._countAndFlagsBits = 41;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  v28 = v40;
  v29 = (void *)v41;
  v37[0] = v16;
  swift_bridgeObjectRetain(*((_QWORD *)&v16 + 1));
  v30._countAndFlagsBits = v28;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(*((_QWORD *)&v16 + 1));
  swift_bridgeObjectRelease(v29);
  return *(_QWORD *)&v37[0];
}

void sub_1DDDA0(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  __int128 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  double *v31;
  __n128 v32;
  double v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t);
  int v40;
  int v41;
  char *v42;
  char *v43;
  double v44;
  char *v45;
  int v46;
  double v47;
  double v48;
  int v49;
  double v50;
  uint64_t v51;
  __n128 v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  double v71;
  double v72;
  char v73[64];
  _QWORD v74[11];
  unsigned __int16 v75;

  v56 = a2;
  v67 = a1;
  v55 = type metadata accessor for FloatingPointRoundingRule(0);
  v54 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v58 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v57 = (char *)&v54 - v5;
  __chkstk_darwin(v6);
  v68 = (char *)&v54 - v7;
  __chkstk_darwin(v8);
  v69 = (char *)&v54 - v9;
  v66 = *v2;
  v10 = *((_QWORD *)v2 + 2);
  v11 = *((_QWORD *)v2 + 3);
  v12 = (void *)*((_QWORD *)v2 + 4);
  v63 = *((_QWORD *)v2 + 5);
  v13 = *((_QWORD *)v2 + 6);
  v14 = *((_QWORD *)v2 + 7);
  v15 = *((_QWORD *)v2 + 9);
  v65 = *((_QWORD *)v2 + 8);
  v16 = (void *)*((_QWORD *)v2 + 10);
  v64 = *((_QWORD *)v2 + 11);
  v17 = *((_QWORD *)v2 + 12);
  v18 = *((_QWORD *)v2 + 13);
  v19 = *((_QWORD *)v2 + 14);
  v20 = *((_WORD *)v2 + 60);
  v74[0] = v12;
  v74[1] = v63;
  v59 = v12;
  v74[2] = v13;
  v74[3] = v14;
  v21 = v13;
  v62 = v13;
  v61 = v14;
  v74[4] = v65;
  v74[5] = v15;
  v74[6] = v16;
  v74[7] = v64;
  v60 = v16;
  v74[8] = v17;
  v74[9] = v18;
  v74[10] = v19;
  v75 = v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22D8);
  inited = swift_initStackObject(v22, v73);
  v24 = v66;
  *(_OWORD *)(inited + 16) = xmmword_2F4200;
  *(_OWORD *)(inited + 32) = v24;
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v11;
  v25 = v12;
  v26 = v63;
  v27 = v14;
  v28 = v65;
  v29 = v16;
  v30 = v64;
  sub_1472C(v25, v63, v21, v27, v65, v15, v29, v64, v17, v18, v19, v20);
  v31 = (double *)sub_14421C((uint64_t)v74, inited);
  swift_setDeallocating(inited, v32);
  sub_14788(v59, v26, v62, v61, v28, v15, v60, v30, v17, v18, v19, v20);
  if (!*((_QWORD *)v31 + 2))
  {
    __break(1u);
    goto LABEL_60;
  }
  v33 = v31[4];
  *(double *)v74 = v33;
  v34 = v54;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
  v36 = v69;
  v37 = v56;
  v38 = v55;
  v35(v69, v56, v55);
  v39 = *(uint64_t (**)(char *, uint64_t))(v34 + 88);
  v40 = v39(v36, v38);
  v41 = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
  if (v40 == enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:))
  {
    v74[0] = round(v33);
    v42 = v58;
    v43 = v57;
    goto LABEL_16;
  }
  v42 = v58;
  v43 = v57;
  if (v40 == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
  {
    v74[0] = rint(v33);
    goto LABEL_16;
  }
  if (v40 == enum case for FloatingPointRoundingRule.up(_:))
    goto LABEL_7;
  if (v40 == enum case for FloatingPointRoundingRule.down(_:))
    goto LABEL_9;
  if (v40 == enum case for FloatingPointRoundingRule.towardZero(_:))
  {
    v74[0] = trunc(v33);
  }
  else
  {
    if (v40 == enum case for FloatingPointRoundingRule.awayFromZero(_:))
    {
      if ((*(_QWORD *)&v33 & 0x8000000000000000) == 0)
      {
LABEL_7:
        v74[0] = ceil(v33);
        goto LABEL_16;
      }
LABEL_9:
      v74[0] = floor(v33);
      goto LABEL_16;
    }
    Double._roundSlowPath(_:)(v37);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v69, v38);
  }
LABEL_16:
  if (*((_QWORD *)v31 + 2) < 2uLL)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v44 = v31[5];
  v72 = v44;
  v45 = v68;
  v35(v68, v37, v38);
  v46 = v39(v45, v38);
  if (v46 == v41)
  {
    v47 = round(v44);
LABEL_27:
    v72 = v47;
    goto LABEL_28;
  }
  if (v46 == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
  {
    v47 = rint(v44);
    goto LABEL_27;
  }
  if (v46 == enum case for FloatingPointRoundingRule.up(_:))
  {
LABEL_22:
    v47 = ceil(v44);
    goto LABEL_27;
  }
  if (v46 == enum case for FloatingPointRoundingRule.down(_:))
  {
LABEL_24:
    v47 = floor(v44);
    goto LABEL_27;
  }
  if (v46 == enum case for FloatingPointRoundingRule.towardZero(_:))
  {
    v47 = trunc(v44);
    goto LABEL_27;
  }
  if (v46 == enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    if ((*(_QWORD *)&v44 & 0x8000000000000000) == 0)
      goto LABEL_22;
    goto LABEL_24;
  }
  Double._roundSlowPath(_:)(v37);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v68, v38);
LABEL_28:
  if (*((_QWORD *)v31 + 2) < 3uLL)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v48 = v31[6];
  v71 = v48;
  v35(v43, v37, v38);
  v49 = v39(v43, v38);
  if (v49 == v41)
  {
    v50 = round(v48);
LABEL_39:
    v71 = v50;
    goto LABEL_40;
  }
  if (v49 == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
  {
    v50 = rint(v48);
    goto LABEL_39;
  }
  if (v49 == enum case for FloatingPointRoundingRule.up(_:))
  {
LABEL_34:
    v50 = ceil(v48);
    goto LABEL_39;
  }
  if (v49 == enum case for FloatingPointRoundingRule.down(_:))
  {
LABEL_36:
    v50 = floor(v48);
    goto LABEL_39;
  }
  if (v49 == enum case for FloatingPointRoundingRule.towardZero(_:))
  {
    v50 = trunc(v48);
    goto LABEL_39;
  }
  if (v49 == enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    if ((*(_QWORD *)&v48 & 0x8000000000000000) == 0)
      goto LABEL_34;
    goto LABEL_36;
  }
  Double._roundSlowPath(_:)(v37);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v43, v38);
LABEL_40:
  if (*((_QWORD *)v31 + 2) < 4uLL)
  {
LABEL_62:
    __break(1u);
    return;
  }
  v51 = *((_QWORD *)v31 + 7);
  v52 = swift_bridgeObjectRelease(v31);
  v70 = v51;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v35)(v42, v37, v38, v52);
  v53 = v39(v42, v38);
  if (v53 != v41
    && v53 != enum case for FloatingPointRoundingRule.toNearestOrEven(_:)
    && v53 != enum case for FloatingPointRoundingRule.up(_:)
    && v53 != enum case for FloatingPointRoundingRule.down(_:)
    && v53 != enum case for FloatingPointRoundingRule.towardZero(_:)
    && v53 != enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    Double._roundSlowPath(_:)(v37);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v42, v38);
  }
}

double sub_1DE4C4(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  id v6;
  double v7;
  double v8;
  uint64_t v10;
  uint64_t v11;

  LOBYTE(v10) = *(_BYTE *)(a4 + 16);
  LOWORD(v11) = *(_WORD *)(a4 + 112);
  v6 = objc_msgSend(a1, "traitCollection", *(_QWORD *)a4, *(_QWORD *)(a4 + 8), v10, *(_QWORD *)(a4 + 24), *(_QWORD *)(a4 + 32), *(_QWORD *)(a4 + 40), *(_QWORD *)(a4 + 48), *(_QWORD *)(a4 + 56), *(_QWORD *)(a4 + 64), *(_QWORD *)(a4 + 72), *(_QWORD *)(a4 + 80), *(_QWORD *)(a4 + 88), *(_QWORD *)(a4 + 96), *(_QWORD *)(a4 + 104), v11);
  sub_1DD06C((uint64_t)v6, a2, a3);
  v8 = v7;

  return v8;
}

uint64_t sub_1DE578(uint64_t a1, uint64_t a2)
{
  char v2;
  __int16 v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[5];
  uint64_t v13;
  __int16 v14;
  _OWORD v15[5];
  uint64_t v16;
  __int16 v17;

  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) != 0)
  {
    v3 = *(_WORD *)(a2 + 120);
    v4 = *(_QWORD *)(a2 + 112);
    v5 = *(_WORD *)(a1 + 120);
    v6 = *(_QWORD *)(a1 + 112);
    v7 = *(_OWORD *)(a1 + 48);
    v15[0] = *(_OWORD *)(a1 + 32);
    v15[1] = v7;
    v8 = *(_OWORD *)(a1 + 80);
    v15[2] = *(_OWORD *)(a1 + 64);
    v15[3] = v8;
    v15[4] = *(_OWORD *)(a1 + 96);
    v16 = v6;
    v17 = v5;
    v9 = *(_OWORD *)(a2 + 48);
    v12[0] = *(_OWORD *)(a2 + 32);
    v12[1] = v9;
    v10 = *(_OWORD *)(a2 + 80);
    v12[2] = *(_OWORD *)(a2 + 64);
    v12[3] = v10;
    v12[4] = *(_OWORD *)(a2 + 96);
    v13 = v4;
    v14 = v3;
    v2 = sub_1443E8((uint64_t)v15, (uint64_t)v12);
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_1DE624(uint64_t a1, uint64_t a2)
{
  double v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int16 v8;
  double v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int16 v16;
  char v17;
  _OWORD v19[5];
  uint64_t v20;
  __int16 v21;
  _OWORD v22[5];
  uint64_t v23;
  __int16 v24;

  v2 = *(double *)a1;
  v3 = *(_OWORD *)(a1 + 40);
  v4 = *(_OWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 72);
  v6 = *(_OWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_WORD *)(a1 + 112);
  v9 = *(double *)a2;
  v10 = *(_OWORD *)(a2 + 24);
  v11 = *(_OWORD *)(a2 + 40);
  v12 = *(_OWORD *)(a2 + 56);
  v13 = *(_OWORD *)(a2 + 72);
  v14 = *(_OWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 104);
  v16 = *(_WORD *)(a2 + 112);
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0 && v2 == v9)
      goto LABEL_8;
LABEL_9:
    v17 = 0;
    return v17 & 1;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    goto LABEL_9;
  v17 = 0;
  if (v2 == v9 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
LABEL_8:
    v22[0] = *(_OWORD *)(a1 + 24);
    v22[1] = v3;
    v22[2] = v4;
    v22[3] = v5;
    v22[4] = v6;
    v23 = v7;
    v24 = v8;
    v19[0] = v10;
    v19[1] = v11;
    v19[2] = v12;
    v19[3] = v13;
    v19[4] = v14;
    v20 = v15;
    v21 = v16;
    v17 = sub_1443E8((uint64_t)v22, (uint64_t)v19);
  }
  return v17 & 1;
}

uint64_t sub_1DE70C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() & 1;
}

uint64_t type metadata accessor for EpisodeHeaderEntitlementDisplay()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay);
}

uint64_t sub_1DE800()
{
  _QWORD *v0;

  sub_10DBC8((uint64_t)(v0 + 2));
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for EpisodeHeaderEntitlementDisplayPresenter()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews40EpisodeHeaderEntitlementDisplayPresenter);
}

uint64_t storeEnumTagSinglePayload for EpisodeHeaderEntitlementDisplayStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DE8A8 + 4 * byte_2FE5D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DE8DC + 4 * byte_2FE5D0[v4]))();
}

uint64_t sub_1DE8DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DE8E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DE8ECLL);
  return result;
}

uint64_t sub_1DE8F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DE900);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DE904(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DE90C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeHeaderEntitlementDisplayStyle()
{
  return &type metadata for EpisodeHeaderEntitlementDisplayStyle;
}

unint64_t sub_1DE92C()
{
  unint64_t result;

  result = qword_3DBA18;
  if (!qword_3DBA18)
  {
    result = swift_getWitnessTable(&unk_2FE708, &type metadata for EpisodeHeaderEntitlementDisplayStyle);
    atomic_store(result, (unint64_t *)&qword_3DBA18);
  }
  return result;
}

void sub_1DE970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, __n128);
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  _QWORD v46[3];

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v46[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = EpisodeHeader.uuid.getter(v5);
  if (v7)
  {
    v8 = v6;
    v9 = v7;
    v10 = *(_QWORD *)(v0 + 48);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
    v12 = type metadata accessor for BaseObjectGraph(0);
    v13 = swift_retain(v10);
    inject<A, B>(_:from:)(v46, v11, v10, v11, v12, v13);
    v14 = v46[0];
    v15 = type metadata accessor for PlaybackStatusPresenter(0);
    swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
    v16 = sub_276AA0(v8, v9, v14);
    swift_release(v10);
    v17 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 40) = v16;
    swift_release(v17);
    v18 = *(_QWORD *)(v1 + 40);
    if (v18)
    {
      *(_QWORD *)(v18 + 40) = &off_389EF8;
      v19 = swift_unknownObjectWeakAssign(v18 + 32, v1);
      Strong = swift_unknownObjectWeakLoadStrong(v19);
      if (Strong)
      {
        v21 = Strong;
        v22 = *(_QWORD *)(v18 + 40);
        ObjectType = swift_getObjectType();
        v24 = v18 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
        swift_beginAccess(v18 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v46, 0, 0);
        sub_F8BC(v24, (uint64_t)v4);
        v25 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 8);
        swift_retain(v18);
        v26 = v1;
LABEL_5:
        v27 = swift_retain(v26);
        v25(v4, ObjectType, v22, v27);
        swift_unknownObjectRelease(v21);
        sub_AEEF0((uint64_t)v4);
        swift_release(v18);
        swift_release(v1);
      }
    }
  }
  else
  {
    v28 = EpisodeHeader.adamId.getter(v6);
    if ((v29 & 1) != 0 || (v30 = v28, (AdamID.isEmpty.getter(v28) & 1) != 0))
    {
      v31 = *(_QWORD *)(v1 + 40);
      *(_QWORD *)(v1 + 40) = 0;
      swift_release(v31);
      v32 = swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (v32)
      {
        v33 = (void *)v32;
        v45 = String._bridgeToObjectiveC()();
        objc_msgSend(v33, "setText:", v45);
        swift_unknownObjectRelease(v33);

      }
    }
    else
    {
      v34 = *(_QWORD *)(v1 + 48);
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
      v36 = type metadata accessor for BaseObjectGraph(0);
      v37 = swift_retain(v34);
      inject<A, B>(_:from:)(v46, v35, v34, v35, v36, v37);
      v38 = v46[0];
      v39 = type metadata accessor for PlaybackStatusPresenter(0);
      swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
      v40 = sub_276978(v30, v38);
      swift_release(v34);
      v41 = *(_QWORD *)(v1 + 40);
      *(_QWORD *)(v1 + 40) = v40;
      swift_release(v41);
      v18 = *(_QWORD *)(v1 + 40);
      if (v18)
      {
        *(_QWORD *)(v18 + 40) = &off_389EF8;
        v42 = swift_unknownObjectWeakAssign(v18 + 32, v1);
        v43 = swift_unknownObjectWeakLoadStrong(v42);
        if (v43)
        {
          v21 = v43;
          v22 = *(_QWORD *)(v18 + 40);
          ObjectType = swift_getObjectType();
          v44 = v18 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
          swift_beginAccess(v18 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v46, 0, 0);
          sub_F8BC(v44, (uint64_t)v4);
          v25 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 8);
          swift_retain(v1);
          v26 = v18;
          goto LABEL_5;
        }
      }
    }
  }
}

void sub_1DECA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  NSString v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  Swift::String v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  sub_1DF21C(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1381BC((uint64_t)v5);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (Strong)
    {
      v14 = (void *)Strong;
      v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v29._object = (void *)0xE000000000000000;
      v16._object = (void *)0x8000000000314110;
      v16._countAndFlagsBits = 0xD000000000000014;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v29._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v29)._object;

      v19 = String._bridgeToObjectiveC()();
      objc_msgSend(v14, "setText:", v19, swift_bridgeObjectRelease(object).n128_f64[0]);
      swift_unknownObjectRelease(v14);

    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    v20 = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (v20)
    {
      v21 = (void *)v20;
      v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
      v23 = Date.friendlyDisplayString.getter(v22);
      String.init(playedOn:dateString:)(v9, v23, v24);
      v26 = v25;
      v27 = String._bridgeToObjectiveC()();
      objc_msgSend(v21, "setText:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);
      swift_unknownObjectRelease(v21);

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

double sub_1DEEF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double result;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  void *v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  void *v29;
  NSString v30;
  _QWORD v32[5];

  v3 = type metadata accessor for EyebrowBuilder.Style(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v32[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D81A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  __chkstk_darwin(v13);
  v15 = (char *)&v32[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F8BC(a1, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload(v12, v10) == 2)
  {
    sub_1DF1D4((uint64_t)v12, (uint64_t)v15);
    sub_1DECA8((uint64_t)v15);
    sub_1381BC((uint64_t)v15);
  }
  else
  {
    sub_AEEF0((uint64_t)v12);
    v17 = *(_QWORD *)(v1 + 32);
    if (v17)
    {
      v18 = v1 + 16;
      Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (Strong)
      {
        v20 = (void *)Strong;
        type metadata accessor for EyebrowBuilder(0);
        v32[3] = type metadata accessor for EpisodeHeader(0);
        v32[4] = sub_1381FC();
        v32[0] = v17;
        v22 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration(0, v21);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for EyebrowBuilder.Style.default(_:), v3);
        swift_retain_n(v17, 2);
        v24 = EyebrowBuilder.__allocating_init(episode:style:explicitSymbol:abbreviatedPubDateConfig:hostingViewHasLimitedSpace:)(v32, v6, 0, 0, v9, 0, v23);
        EyebrowBuilder.subscriptionBadge.getter();
        v26 = v25;
        swift_release(v24);
        if (v26)
        {
          v27 = String._bridgeToObjectiveC()();
          objc_msgSend(v20, "setText:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);
          swift_unknownObjectRelease(v20);
          swift_release(v17);

        }
        else
        {
          v28 = swift_unknownObjectWeakLoadStrong(v18);
          if (v28)
          {
            v29 = (void *)v28;
            v30 = String._bridgeToObjectiveC()();
            objc_msgSend(v29, "setText:", v30);
            swift_unknownObjectRelease(v20);
            swift_release(v17);
            swift_unknownObjectRelease(v29);

          }
          else
          {
            swift_unknownObjectRelease(v20);
            *(_QWORD *)&result = swift_release(v17).n128_u64[0];
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DF1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DF264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  __n128 v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  void *v25;
  _QWORD v26[2];
  _BYTE v27[40];

  v5 = v4;
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 48);
  v11 = (void *)v10(a3, a4);
  UIControl.setAction(_:for:asPartOf:)(a1, 0x2000, a2);

  sub_1D5D4(a1, (uint64_t)v27);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C0);
  if ((swift_dynamicCast(v26, v27, v12, v13, 6) & 1) != 0)
  {
    v14 = v26[0];
    v15 = v26[1];
    v16 = *(_QWORD *)v26[0];
    v17 = swift_allocObject(&unk_389FD8, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v5);
    v18 = (_QWORD *)swift_allocObject(&unk_38A000, 40, 7);
    v18[2] = a3;
    v18[3] = a4;
    v18[4] = v17;
    v19 = swift_retain(v17);
    dispatch thunk of CompletableAction.addCompletionHandler(_:)(sub_1E1358, v18, v16, v15, v19);
    swift_release(v17);
    v20 = swift_release(v18);
    v21 = (void *)((uint64_t (*)(uint64_t, uint64_t, __n128))v10)(a3, a4, v20);
    sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v22 = swift_allocObject(&unk_389FD8, 24, 7);
    swift_unknownObjectWeakInit(v22 + 16, v5);
    v23 = (_QWORD *)swift_allocObject(&unk_38A028, 40, 7);
    v23[2] = a3;
    v23[3] = a4;
    v23[4] = v22;
    v25 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v24, 0, 0, 0, sub_1E13D4, v23);
    objc_msgSend(v21, "addAction:forControlEvents:", v25, 0x2000);
    swift_release(v14);

  }
}

char *sub_1DF480(void *a1, void *a2, void *a3)
{
  return sub_1DF48C(a1, a2, a3, &qword_3DBCD8);
}

char *sub_1DF48C(void *a1, void *a2, void *a3, uint64_t *a4)
{
  _BYTE *v4;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double left;
  double bottom;
  double right;
  char *v18;
  uint64_t v19;
  void *v20;
  double leading;
  double v22;
  double trailing;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  Class isa;
  objc_super v36;

  v8 = &v4[qword_3D5E18];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v4[qword_3D5E30] = 1;
  v9 = qword_3D5E38;
  *(_QWORD *)&v4[qword_3D5E38] = 0;
  *(_QWORD *)&v4[qword_3D5E20] = a2;
  *(_QWORD *)&v4[qword_3D5E28] = a3;
  v10 = *(void **)&v4[v9];
  *(_QWORD *)&v4[v9] = a1;
  v11 = a2;
  v12 = a3;
  v13 = a1;

  v36.receiver = v4;
  v36.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(a4);
  v14 = objc_msgSendSuper2(&v36, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v18 = (char *)v14;
  objc_msgSend(v18, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v19 = qword_3D5E20;
  v20 = *(void **)&v18[qword_3D5E20];
  leading = NSDirectionalEdgeInsetsZero.leading;
  v22 = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v24 = v18;
  v25 = v20;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v25, 0, NSDirectionalEdgeInsetsZero.top, leading, v22, trailing);

  v26 = objc_msgSend(*(id *)&v18[v19], "contentView");
  v27 = qword_3D5E28;
  v28 = *(id *)&v24[qword_3D5E28];
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v28, 0, NSDirectionalEdgeInsetsZero.top, leading, v22, trailing);

  if (a1)
  {
    v29 = v13;
    objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v30 = objc_msgSend(*(id *)&v24[v27], "contentView");
    objc_msgSend(v30, "addSubview:", v29);

    v31 = (void *)objc_opt_self(NSLayoutConstraint);
    v32 = v29;
    v33 = UIView.layoutMarginsSubviewConstraints(_:insets:edges:)(NSDirectionalEdgeInsetsZero.top, leading, v22, trailing);

    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v31, "activateConstraints:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

    objc_msgSend(v24, "invalidateIntrinsicContentSize");
    v12 = v11;
    v11 = v32;
  }

  return v24;
}

char *sub_1DF75C(void *a1, void *a2, void *a3)
{
  return sub_1DF48C(a1, a2, a3, &qword_3DBCD0);
}

void sub_1DF76C(void *a1)
{
  char *v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  id v7;

  v2 = *(_QWORD *)&v1[qword_3D5E18];
  if (v1[qword_3D5E18 + 8] == 1 && v2)
  {
    v7 = objc_msgSend(v1, "traitCollection");
    if (a1)
      v4 = objc_msgSend(a1, "userInterfaceStyle");
    else
      v4 = 0;
    v5 = objc_msgSend(v7, "userInterfaceStyle");
    if (!a1 || v4 != v5)
    {
      if (objc_msgSend(v7, "userInterfaceStyle") == (char *)&dword_0 + 2)
        v6 = 1;
      else
        v6 = 2;
      objc_msgSend(*(id *)&v1[qword_3D5E20], "setOverrideUserInterfaceStyle:", v6);
    }

  }
  else
  {
    objc_msgSend(*(id *)&v1[qword_3D5E20], "setOverrideUserInterfaceStyle:", v2);
  }
}

char *sub_1DF878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  char v20;
  char *v21;
  int *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  char *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  __n128 v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _BYTE v54[24];
  void *v55[11];
  char v56;
  char v57;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  __chkstk_darwin(v4);
  v53 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v52 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + qword_3FCFC8) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v1 + qword_3FCFD0, 1, 1, v6);
  sub_1E13E0(a1, v1 + qword_3DBA20);
  type metadata accessor for DynamicTypeButton();
  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a1 + 24);
  v12 = *(void **)(a1 + 32);
  v13 = *(void **)(a1 + 40);
  v14 = *(void **)(a1 + 48);
  v15 = *(void **)(a1 + 56);
  v16 = *(void **)(a1 + 64);
  v17 = *(void **)(a1 + 72);
  v18 = *(void **)(a1 + 80);
  v19 = *(_BYTE *)(a1 + 88);
  v20 = *(_BYTE *)(a1 + 89);
  v55[0] = *(void **)a1;
  v55[1] = v9;
  v55[2] = v10;
  v55[3] = v11;
  v55[4] = v12;
  v55[5] = v13;
  v55[6] = v14;
  v55[7] = v15;
  v55[8] = v16;
  v55[9] = v17;
  v55[10] = v18;
  v56 = v19;
  v57 = v20;
  sub_DDA0(v55[0], (uint64_t)v9, (uint64_t)v10, (uint64_t)v11, (uint64_t)v12, (char)v13, v14, (uint64_t)v15, (uint64_t)v16, (uint64_t)v17, (uint64_t)v18, v19, v20);
  v21 = sub_2D5CD4((uint64_t)v55);
  v22 = (int *)type metadata accessor for VEVButtonContainer.Style(0);
  v23 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", *(_QWORD *)(a1 + v22[9]));
  v24 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v23, 0);
  v25 = sub_243A4((uint64_t)v23, (uint64_t)v24);
  v27 = v26;

  *(_QWORD *)(v2 + qword_3D5D10) = v21;
  v28 = v21;
  v29 = sub_1DF48C(v21, v25, v27, &qword_3DBCC8);
  v30 = qword_3D5D10;
  v31 = *(void **)&v29[qword_3D5D10];
  v29[qword_3D5E30] = 0;
  v32 = &v29[qword_3D5E18];
  *(_QWORD *)v32 = 1;
  v32[8] = 1;
  v33 = v29;
  v34 = v31;
  sub_1DF76C(0);
  objc_msgSend(v33, "setClipsToBounds:", 1);
  objc_msgSend(v34, "setContentHorizontalAlignment:", 0);
  v35 = objc_msgSend(v34, "titleLabel");
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, "setLineBreakMode:", 4);

  }
  v37 = objc_msgSend(v34, "titleLabel");
  if (v37)
  {
    v38 = v37;
    objc_msgSend(v37, "setNumberOfLines:", 1);

  }
  v39 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v34, "setTitleColor:forState:", v39, 0);

  objc_msgSend(v34, "setContentEdgeInsets:", *(double *)(a1 + v22[8]), *(double *)(a1 + v22[8] + 8), *(double *)(a1 + v22[8] + 16), *(double *)(a1 + v22[8] + 24));
  v40 = *(void **)&v29[v30];
  v41 = v34;
  UIEdgeInsets.init(top:leading:bottom:trailing:layoutDirection:)(objc_msgSend(v40, "effectiveUserInterfaceLayoutDirection"), 0.0, 0.0, 0.0, 12.0);
  objc_msgSend(v41, "setImageEdgeInsets:");

  v42 = objc_msgSend(v41, "imageView");
  if (v42)
  {
    v43 = v42;
    objc_msgSend(v42, "setContentMode:", 4);

  }
  v44 = (uint64_t)&v33[qword_3FCFD0];
  v45 = swift_beginAccess(&v33[qword_3FCFD0], v55, 0, 0);
  v46 = 0;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48))(v44, 1, v6, v45))
  {
    v47 = v52;
    v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v52, v44, v6);
    v46 = (void *)Glyph.image.getter(v48);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v47, v6);
  }
  objc_msgSend(v41, "setImage:forState:", v46, 0);

  v49 = v53;
  sub_1E1424(a1 + v22[5], v53);
  sub_1E146C(a1);
  swift_beginAccess(v44, v54, 33, 0);
  sub_1E14A8(v49, v44);
  swift_endAccess(v54);
  return v33;
}

void sub_1DFD34()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  char *v7;
  id v8;
  double v9;
  id v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  id v16;
  char *v17;
  id v18;
  double v19;
  objc_super v20;
  CGRect v21;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for VEVButtonContainer(0);
  v20.receiver = v1;
  v20.super_class = v6;
  objc_msgSendSuper2(&v20, "layoutSubviews");
  v7 = &v1[qword_3DBA20];
  if (v7[*(int *)(type metadata accessor for VEVButtonContainer.Style(0) + 28)] == 1)
  {
    v8 = objc_msgSend(v1, "layer");
    objc_msgSend(v1, "frame");
    v9 = CGRectGetHeight(v21) * 0.5;
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FloatingPointRoundingRule.down(_:), v2);
    v10 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v10, "displayScale");
    v12 = v11;
    if (v11 < COERCE_DOUBLE(1))
    {
      v13 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v13, "scale");
      v12 = v14;

    }
    v15 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v12, v9);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v8, "setCornerRadius:", v15);
  }
  else
  {
    v16 = objc_msgSend(v1, "traitCollection");
    v17 = (char *)objc_msgSend(v16, "userInterfaceIdiom");

    v18 = objc_msgSend(v1, "layer");
    v8 = v18;
    v19 = 12.0;
    if (v17 == (_BYTE *)&dword_4 + 1)
      v19 = 4.0;
    objc_msgSend(v18, "setCornerRadius:", v19);
  }

}

void sub_1DFF58(void *a1)
{
  id v1;

  v1 = a1;
  sub_1DFD34();

}

void sub_1DFF8C(char *a1, uint64_t a2, void *a3)
{
  char *v5;
  uint64_t v6;
  id v7;

  *(_QWORD *)&a1[qword_3FCFC8] = 0;
  v5 = &a1[qword_3FCFD0];
  v6 = type metadata accessor for Glyph(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = a3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/VEVButtonContainer.swift", 48, 2, 93, 0);
  __break(1u);
}

double sub_1E0038()
{
  void *v0;
  id v1;
  char *v2;
  double result;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceIdiom");

  result = 28.0;
  if (v2 == (_BYTE *)&dword_4 + 1)
    return 16.0;
  return result;
}

uint64_t sub_1E0094()
{
  uint64_t v0;

  sub_1E146C(v0 + qword_3DBA20);

  return sub_1E14F0(v0 + qword_3FCFD0);
}

id sub_1E00D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VEVButtonContainer(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1E0104(uint64_t a1)
{
  sub_1E146C(a1 + qword_3DBA20);

  return sub_1E14F0(a1 + qword_3FCFD0);
}

uint64_t type metadata accessor for VEVButtonContainer(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3DBA50, (uint64_t)&nominal type descriptor for VEVButtonContainer);
}

void sub_1E0160(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for VEVButtonContainer.Style(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\b";
    sub_1E0204(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initClassMetadata2(a1, 256, 3, v6, a1 + 248);
    }
  }
}

uint64_t type metadata accessor for VEVButtonContainer.Style(uint64_t a1)
{
  return sub_AE00(a1, qword_3DBC80, (uint64_t)&nominal type descriptor for VEVButtonContainer.Style);
}

void sub_1E0204(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3DBA60)
  {
    v2 = type metadata accessor for Glyph(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3DBA60);
  }
}

uint64_t sub_1E0258()
{
  return type metadata accessor for VEVButtonContainer(0);
}

char *sub_1E0260(char *a1, char **a2, int *a3)
{
  int v5;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _OWORD *v29;
  __int128 v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v20[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v20);
  }
  else
  {
    v7 = *a2;
    v8 = (uint64_t)a2[1];
    v9 = (uint64_t)a2[2];
    v10 = (uint64_t)a2[3];
    v11 = (uint64_t)a2[4];
    v12 = a2[5];
    v13 = (uint64_t)a2[7];
    v32 = a2[6];
    v33 = (uint64_t)a2[8];
    v34 = (uint64_t)a2[9];
    v35 = (uint64_t)a2[10];
    v36 = *((_BYTE *)a2 + 88);
    v37 = *((_BYTE *)a2 + 89);
    sub_DDA0(*a2, v8, v9, v10, v11, (char)v12, v32, v13, v33, v34, v35, v36, v37);
    *(_QWORD *)a1 = v7;
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    *((_QWORD *)a1 + 3) = v10;
    *((_QWORD *)a1 + 4) = v11;
    *((_QWORD *)a1 + 5) = v12;
    *((_QWORD *)a1 + 6) = v32;
    *((_QWORD *)a1 + 7) = v13;
    *((_QWORD *)a1 + 8) = v33;
    *((_QWORD *)a1 + 9) = v34;
    *((_QWORD *)a1 + 10) = v35;
    a1[88] = v36;
    v14 = a3[5];
    v15 = &a1[v14];
    v16 = (char *)a2 + v14;
    a1[89] = v37;
    v17 = type metadata accessor for Glyph(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v21 = a3[6];
    v22 = a3[7];
    v23 = &a1[v21];
    v24 = (__int128 *)((char *)a2 + v21);
    v25 = *v24;
    v23[16] = *((_BYTE *)v24 + 16);
    *(_OWORD *)v23 = v25;
    a1[v22] = *((_BYTE *)a2 + v22);
    v26 = a3[8];
    v27 = a3[9];
    v28 = &a1[v26];
    v29 = (_OWORD *)((char *)a2 + v26);
    v30 = v29[1];
    *(_OWORD *)v28 = *v29;
    *((_OWORD *)v28 + 1) = v30;
    *(_QWORD *)&a1[v27] = *(char **)((char *)a2 + v27);
  }
  return a1;
}

uint64_t sub_1E0434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_DCC8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Glyph(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1E04EC(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;

  v5 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(void **)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v30 = *(_QWORD *)(a2 + 64);
  v31 = *(_QWORD *)(a2 + 72);
  v32 = *(_QWORD *)(a2 + 80);
  v33 = *(_BYTE *)(a2 + 88);
  v34 = *(_BYTE *)(a2 + 89);
  sub_DDA0(*(void **)a2, v6, v7, v8, v9, v10, v12, v11, v30, v31, v32, v33, v34);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v30;
  *(_QWORD *)(a1 + 72) = v31;
  *(_QWORD *)(a1 + 80) = v32;
  *(_BYTE *)(a1 + 88) = v33;
  v13 = a3[5];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  *(_BYTE *)(a1 + 89) = v34;
  v16 = type metadata accessor for Glyph(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[6];
  v20 = a3[7];
  v21 = a1 + v19;
  v22 = (__int128 *)(a2 + v19);
  v23 = *v22;
  *(_BYTE *)(v21 + 16) = *((_BYTE *)v22 + 16);
  *(_OWORD *)v21 = v23;
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v24 = a3[8];
  v25 = a3[9];
  v26 = (_OWORD *)(a1 + v24);
  v27 = (_OWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  return a1;
}

uint64_t sub_1E0698(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  __int128 v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;

  v5 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(void **)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(a2 + 64);
  v42 = *(_QWORD *)(a2 + 72);
  v43 = *(_QWORD *)(a2 + 80);
  v44 = *(_BYTE *)(a2 + 88);
  v45 = *(_BYTE *)(a2 + 89);
  sub_DDA0(*(void **)a2, v6, v7, v8, v9, v10, v12, v11, v41, v42, v43, v44, v45);
  v13 = *(void **)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(void **)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_OWORD *)(a1 + 64);
  v22 = *(_QWORD *)(a1 + 80);
  v23 = *(_BYTE *)(a1 + 88);
  v24 = *(_BYTE *)(a1 + 89);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v41;
  *(_QWORD *)(a1 + 72) = v42;
  *(_QWORD *)(a1 + 80) = v43;
  *(_BYTE *)(a1 + 88) = v44;
  *(_BYTE *)(a1 + 89) = v45;
  sub_DCC8(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, v23, v24);
  v25 = a3[5];
  v26 = (void *)(a1 + v25);
  v27 = (void *)(a2 + v25);
  v28 = type metadata accessor for Glyph(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  LODWORD(v11) = v30(v26, 1, v28);
  v31 = v30(v27, 1, v28);
  if (!(_DWORD)v11)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 24))(v26, v27, v28);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_6;
  }
  if (v31)
  {
LABEL_6:
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 16))(v26, v27, v28);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_7:
  v33 = a3[6];
  v34 = a1 + v33;
  v35 = (__int128 *)(a2 + v33);
  v36 = *v35;
  *(_BYTE *)(v34 + 16) = *((_BYTE *)v35 + 16);
  *(_OWORD *)v34 = v36;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v37 = a3[8];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  v38[2] = v39[2];
  v38[3] = v39[3];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

_OWORD *sub_1E08E0(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;

  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  *(_OWORD *)((char *)a1 + 74) = *(_OWORD *)((char *)a2 + 74);
  v7 = a2[1];
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  *a1 = *a2;
  a1[1] = v7;
  v11 = type metadata accessor for Glyph(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  v18 = *(_OWORD *)v17;
  v16[16] = v17[16];
  *(_OWORD *)v16 = v18;
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_OWORD *)((char *)a1 + v19);
  v22 = (_OWORD *)((char *)a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  return a1;
}

uint64_t sub_1E0A04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  __int128 v41;

  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_BYTE *)(a2 + 88);
  v8 = *(_BYTE *)(a2 + 89);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(void **)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_OWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 80);
  v19 = *(_BYTE *)(a1 + 88);
  v20 = *(_BYTE *)(a1 + 89);
  v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 88) = v7;
  *(_BYTE *)(a1 + 89) = v8;
  sub_DCC8(v9, v10, v11, v12, v13, v14, v15, v16, v17, *((uint64_t *)&v17 + 1), v18, v19, v20);
  v23 = a3[5];
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  v26 = type metadata accessor for Glyph(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_6;
  }
  if (v30)
  {
LABEL_6:
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_7:
  v32 = a3[6];
  v33 = a3[7];
  v34 = a1 + v32;
  v35 = (__int128 *)(a2 + v32);
  v36 = *v35;
  *(_BYTE *)(v34 + 16) = *((_BYTE *)v35 + 16);
  *(_OWORD *)v34 = v36;
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v37 = a3[8];
  v38 = a3[9];
  v39 = (_OWORD *)(a1 + v37);
  v40 = (_OWORD *)(a2 + v37);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);
  return a1;
}

uint64_t sub_1E0BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E0BD0);
}

uint64_t sub_1E0BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 89);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1E0C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E0C54);
}

uint64_t sub_1E0C54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 89) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1E0CC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "Z";
  sub_1E0204(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_2FE7E8;
    v4[3] = &unk_2FE800;
    v4[4] = &unk_2FE818;
    v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

void *sub_1E0D68()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + qword_3FCFC8);
  v2 = v1;
  return v1;
}

void sub_1E0D94(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_3FCFC8);
  *(_QWORD *)(v1 + qword_3FCFC8) = a1;

}

double sub_1E0DA8()
{
  char *v0;
  char *v1;
  char *v2;
  id v3;
  char *v4;
  double result;

  v1 = &v0[qword_3DBA20];
  v2 = &v1[*(int *)(type metadata accessor for VEVButtonContainer.Style(0) + 24)];
  if ((v2[16] & 1) == 0)
    return *(double *)v2;
  v3 = objc_msgSend(v0, "traitCollection");
  v4 = (char *)objc_msgSend(v3, "userInterfaceIdiom");

  result = 28.0;
  if (v4 == (_BYTE *)&dword_4 + 1)
    return 16.0;
  return result;
}

id sub_1E0E30()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_3D5E28), "contentView");
}

id sub_1E0E60()
{
  uint64_t v0;

  return *(id *)(v0 + qword_3D5D10);
}

id sub_1E0E74(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + qword_3D5D10), "setHidden:", a1 & 1);
}

uint64_t sub_1E0E98()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1E0EBC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t (*v6)(void);
  void *v7;
  uint64_t result;
  id v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  char *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void (*v24)(uint64_t, uint64_t);
  id v25;
  id v26;
  id v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;

  v3 = v2;
  v6 = *(uint64_t (**)(void))(a2 + 8);
  v7 = (void *)v6();

  if (v7)
  {
    result = ((uint64_t (*)(uint64_t, uint64_t))v6)(a1, a2);
    if (result)
      return result;
    __break(1u);
  }
  v30 = 0;
  v31 = 0;
  LOBYTE(v32) = 1;
  v33 = xmmword_2F15B0;
  v34 = 0;
  v35 = 0;
  LOBYTE(v36) = 1;
  v37 = 0u;
  v38 = 0u;
  v9 = objc_allocWithZone((Class)type metadata accessor for CircularProgressView());
  v10 = CircularProgressView.init(style:)(&v30);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 48);
  v12 = v10;
  v13 = (void *)v11(a1, a2);
  v14 = objc_msgSend(v13, "titleLabel", v30, v31, v32, v33, v34, v35, v36, v37, v38);

  v15 = objc_msgSend(v14, "textColor");
  objc_msgSend(v12, "setTintColor:", v15);

  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  objc_msgSend(v16, "addSubview:", v12);

  v17 = objc_msgSend(v12, "centerYAnchor");
  v18 = objc_msgSend(v3, "centerYAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  objc_msgSend(v19, "setActive:", 1);
  v20 = objc_msgSend(v12, "centerXAnchor");
  v21 = objc_msgSend(v3, "centerXAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  objc_msgSend(v22, "setActive:", 1);
  v23 = objc_msgSend(v12, "heightAnchor");
  v24 = *(void (**)(uint64_t, uint64_t))(a2 + 32);
  v24(a1, a2);
  v25 = objc_msgSend(v23, "constraintEqualToConstant:");

  objc_msgSend(v25, "setActive:", 1);
  v26 = objc_msgSend(v12, "widthAnchor");
  v24(a1, a2);
  v27 = objc_msgSend(v26, "constraintEqualToConstant:");

  objc_msgSend(v27, "setActive:", 1);
  objc_msgSend(v12, "setHidden:", 1);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(a2 + 16);
  v29 = v12;
  v28(v12, a1, a2);
  return (uint64_t)v29;
}

void sub_1E1204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  char *v7;
  char v8[24];

  v6 = (char *)sub_1E0EBC(a2, a3);
  v7 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
  swift_beginAccess(&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState], v8, 1, 0);
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  sub_153CC8();
  objc_msgSend(v6, "setHidden:", (a1 & 1) == 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 64))(a1, a2, a3);

}

void sub_1E12C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_1E1204(0, a3, a4);

  }
}

uint64_t sub_1E1334()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1E1358(uint64_t a1)
{
  uint64_t *v1;

  sub_1E12C4(a1, v1[4], v1[2], v1[3]);
}

void sub_1E1364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_1E1204(1, a3, a4);

  }
}

void sub_1E13D4(uint64_t a1)
{
  uint64_t *v1;

  sub_1E1364(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1E13E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VEVButtonContainer.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E1424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E146C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VEVButtonContainer.Style(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E14A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E14F0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)(uint64_t a1, uint64_t a2, char a3, char a4, char a5, double a6, double a7, double a8, double a9)
{
  char *v9;
  char *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  id v41;
  uint64_t v42;
  void *v43;
  Class isa;
  char v45;
  uint64_t v46;
  char v48;
  objc_super v51;
  _BYTE v52[24];

  v48 = a4 & 1;
  v15 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeSymbolName];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillMask] = 0;
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor;
  v18 = (void *)objc_opt_self(UIColor);
  v19 = v9;
  *(_QWORD *)&v9[v17] = objc_msgSend(v18, "secondarySystemBackgroundColor");
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView;
  *(_QWORD *)&v19[v20] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v21 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView;
  v22 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v22, "setClipsToBounds:", 1);
  objc_msgSend(v22, "setUserInteractionEnabled:", 0);
  *(_QWORD *)&v19[v21] = v22;
  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView;
  v24 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v25 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v24);

  objc_msgSend(v25, "setUserInteractionEnabled:", 0);
  objc_msgSend(v25, "setClipsToBounds:", 1);
  *(_QWORD *)&v19[v23] = v25;
  v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeImageView;
  *(_QWORD *)&v19[v26] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_previousPlatterFillColor] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay] = 0;
  v19[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground] = 1;
  v27 = &v19[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v19[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeOutInProgress] = 0;
  v28 = (uint64_t)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color];
  v29 = type metadata accessor for Glyph.Color(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = &v19[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph];
  v31 = type metadata accessor for Glyph(0);
  v32 = *(_QWORD *)(v31 - 8);
  v46 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v30, a1, v31);
  swift_beginAccess(v28, v52, 33, 0);
  sub_1E1944(a2, v28);
  swift_endAccess(v52);
  v19[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style] = a3;
  v19[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active] = 0;
  v33 = *(id *)&v19[v20];
  v34 = sub_1E43A0(v48, v33);
  v36 = v35;
  v38 = v37;
  LOBYTE(v20) = v39;

  v40 = &v19[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout];
  *(_QWORD *)v40 = v34;
  *((_QWORD *)v40 + 1) = v36;
  *((_QWORD *)v40 + 2) = v38;
  v40[24] = v20 & 1;

  v51.receiver = v19;
  v51.super_class = (Class)type metadata accessor for GlyphButton(0);
  v41 = objc_msgSendSuper2(&v51, "initWithFrame:", a6, a7, a8, a9);
  sub_1E20D8();
  if ((a5 & 1) == 0)
  {
    objc_msgSend(v41, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v42 = sub_1E66B0((char *)v41);
    v43 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v43, "activateConstraints:", isa, swift_bridgeObjectRelease(v42).n128_f64[0]);

LABEL_4:
    sub_D1D4(a2, (uint64_t *)&unk_3D4C90);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v46, v31);
    return;
  }
  v45 = *((_BYTE *)v41 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 24);

  if ((v45 & 1) == 0)
    goto LABEL_4;
  __break(1u);
}

uint64_t sub_1E1944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E198C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

double sub_1E19E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  char v15[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle, v15, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease(v6);
  v7 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout;
  v8 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 8);
  v10 = *(void **)(v7 + 16);
  v11 = *(_BYTE *)(v7 + 24);
  v13 = *v5;
  v12 = v5[1];
  swift_bridgeObjectRetain(v12);
  sub_1E4108(v13, v12, v8, v9, v10, v11);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

void (*sub_1E1A8C(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_1E1AE4;
}

void sub_1E1AE4(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = (uint64_t *)(v4 + v3[4]);
    v6 = v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout;
    v7 = *(void **)v6;
    v8 = *(_QWORD *)(v6 + 8);
    v9 = *(void **)(v6 + 16);
    v10 = *(_BYTE *)(v6 + 24);
    v11 = *v5;
    v12 = v5[1];
    swift_bridgeObjectRetain(v12);
    sub_1E4108(v11, v12, v7, v8, v9, v10);
    swift_bridgeObjectRelease(v12);
  }
  free(v3);
}

id sub_1E1B7C()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor, v3, 0, 0);
  return *v1;
}

void sub_1E1BC0(void *a1)
{
  sub_1E6B2C(a1);

}

void (*sub_1E1BE4(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_1E1C3C;
}

void sub_1E1C3C(_QWORD *a1, char a2)
{
  uint64_t v3;
  _BYTE *v4;
  double v5;
  id v6;
  uint64_t v7;

  v3 = *a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = (_BYTE *)(*(_QWORD *)(v3 + 24) + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active);
    *(_QWORD *)&v5 = swift_beginAccess(v4, v3, 0, 0).n128_u64[0];
    if (*v4 == 1)
    {
      v6 = objc_msgSend(*(id *)(v3 + 24), "tintColor", v5);
      v7 = *(_QWORD *)(v3 + 24);
    }
    else
    {
      v7 = *(_QWORD *)(v3 + 24);
      v6 = *(id *)(v7 + *(_QWORD *)(v3 + 32));
    }
    objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView), "setBackgroundColor:", v6);

  }
  free((void *)v3);
}

id sub_1E1CF8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView), "firstBaselineAnchor");
}

uint64_t sub_1E1D24()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView), "_groupName"));
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

double sub_1E1D90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  double result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  double v15;
  NSString v16;

  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView;
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView), "_groupName"));
  if (!v6)
  {
    if (!a2)
      return result;
    goto LABEL_10;
  }
  v8 = v6;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v11 = v10;

  if (!a2)
  {
    swift_bridgeObjectRelease(v11);
    v14 = *(id *)(v2 + v5);
    v16 = 0;
    goto LABEL_12;
  }
  if (v9 != a1 || v11 != a2)
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, a1, a2, 0);
    swift_bridgeObjectRelease(v11);
    if ((v13 & 1) != 0)
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
      return result;
    }
LABEL_10:
    v14 = *(id *)(v2 + v5);
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(a2).n128_u64[0];
LABEL_12:
    objc_msgSend(v14, "_setGroupName:", v16, v15);

    return result;
  }
  swift_bridgeObjectRelease(a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

double (*sub_1E1EEC(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView), "_groupName"));
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1E1F68;
}

double sub_1E1F68(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1E1D90(*a1, v2);
  swift_bridgeObjectRetain(a1[1]);
  sub_1E1D90(v3, v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_1E1FC8()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style, v3, 0, 0);
  return *v1;
}

void sub_1E200C(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  int v4;
  _BYTE v5[24];

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
    sub_1E2494();
}

void (*sub_1E206C(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_155C70;
}

void sub_1E20D8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  Class v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  Class isa;
  id v28;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeImageView;
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeImageView]);
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView;
  objc_msgSend(v1, "insertSubview:atIndex:", *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView], 0);
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView;
  objc_msgSend(v1, "insertSubview:above:", *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView], *(_QWORD *)&v1[v3]);
  v5 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout];
  objc_msgSend(v1, "addSubview:", v5);

  v6 = *(id *)&v1[v4];
  v7 = objc_msgSend(v1, "tintColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = (Class)*(id *)&v1[v4];
  v9 = -[objc_class superview](v8, "superview");
  if (v9)
  {
    v10 = v9;
    -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v11 = (void *)objc_opt_self(NSLayoutConstraint);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v13 = swift_allocObject(v12, 64, 7);
    *(_OWORD *)(v13 + 16) = xmmword_2F0A20;
    v14 = -[objc_class leftAnchor](v8, "leftAnchor");
    v15 = objc_msgSend(v10, "leftAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(v13 + 32) = v16;
    v17 = -[objc_class rightAnchor](v8, "rightAnchor");
    v18 = objc_msgSend(v10, "rightAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    *(_QWORD *)(v13 + 40) = v19;
    v20 = -[objc_class topAnchor](v8, "topAnchor");
    v21 = objc_msgSend(v10, "topAnchor");
    v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

    *(_QWORD *)(v13 + 48) = v22;
    v23 = -[objc_class bottomAnchor](v8, "bottomAnchor");
    v24 = objc_msgSend(v10, "bottomAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

    *(_QWORD *)(v13 + 56) = v25;
    specialized Array._endMutation()(v26);
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "activateConstraints:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

    v8 = isa;
  }

  objc_msgSend(*(id *)&v1[v2], "setHidden:", 1);
  v28 = objc_msgSend(objc_allocWithZone((Class)UIPointerInteraction), "initWithDelegate:", v1);
  objc_msgSend(v1, "addInteraction:", v28);

  objc_msgSend(v1, "setAdjustsImageWhenHighlighted:", 0);
  sub_1E2494();
}

void sub_1E2494()
{
  char *v0;
  void *v1;
  char *v2;
  char *v3;
  unint64_t v4;
  _BOOL8 v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  unint64_t v10;
  int v11;
  char *v12;
  char *v13;
  char *v14;
  double v15;
  id v16;
  id *v17;
  void *v18;
  char v19[24];
  char v20[24];
  char v21[24];
  char v22[24];
  char v23[24];
  char v24[24];
  char v25[24];
  char v26[32];

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView];
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay], v26, 0, 0);
  if (*(_QWORD *)v2
    && (v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground],
        v4 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground], v19, 0, 0).n128_u64[0], *v3 == 1))
  {
    v5 = 1;
  }
  else
  {
    v6 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style];
    v4 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style], v25, 0, 0).n128_u64[0];
    v5 = (*v6 & 1) == 0;
  }
  objc_msgSend(v1, "setHidden:", v5, *(double *)&v4);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView;
  v8 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView];
  if (!*(_QWORD *)v2
    || (v9 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground],
        v10 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground], v20, 0, 0).n128_u64[0], v11 = *v9, v11 != 1))
  {
    v12 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style];
    v10 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style], v24, 0, 0).n128_u64[0];
    if (*v12)
    {
      if (*v12 == 1)
      {
        v13 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active];
        v10 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active], v21, 0, 0).n128_u64[0];
        LOBYTE(v11) = *v13 ^ 1;
      }
      else
      {
        LOBYTE(v11) = 0;
      }
    }
    else
    {
      LOBYTE(v11) = 1;
    }
  }
  objc_msgSend(v8, "setHidden:", v11 & 1, *(double *)&v10);
  v14 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active];
  *(_QWORD *)&v15 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active], v23, 0, 0).n128_u64[0];
  if ((*v14 & 1) != 0)
  {
    v16 = objc_msgSend(v0, "tintColor", v15);
  }
  else
  {
    v17 = (id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor];
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor], v22, 0, 0);
    v16 = *v17;
  }
  v18 = v16;
  objc_msgSend(*(id *)&v0[v7], "setBackgroundColor:", v16);

  sub_1E3ADC();
  sub_1E2748();
}

uint64_t sub_1E26AC()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active, v3, 0, 0);
  return *v1;
}

void sub_1E26F0(char a1)
{
  sub_1E308C(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active);
}

uint64_t (*sub_1E26FC(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active, a1, 33, 0);
  return sub_1E2744;
}

void sub_1E2748()
{
  uint64_t v0;
  __int128 v1;
  void *v2;
  objc_class *v3;
  char *v4;
  char *v5;
  id v6;
  char *v7;
  void *v8;
  char *v9;
  id v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  char *v15;
  char *v16;
  id v17;
  char *v18;
  char *v19;
  id v20;
  double v21;
  double v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  _BYTE *v27;
  void *v28;
  id v29;
  id v30;
  objc_super v31;
  objc_super v32;
  char v33[24];

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeSymbolName + 8))
  {
    if (qword_3CFAD8 != -1)
      swift_once(&qword_3CFAD8, sub_1E3E70);
    v1 = xmmword_3FCFF0;
    v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView);
    v3 = (objc_class *)type metadata accessor for BadgeMaskLayer();
    v4 = (char *)objc_allocWithZone(v3);
    v5 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews14BadgeMaskLayer_size];
    *(_QWORD *)v5 = 0;
    *((_QWORD *)v5 + 1) = 0;
    v32.receiver = v4;
    v32.super_class = v3;
    v6 = v2;
    v7 = (char *)objc_msgSendSuper2(&v32, "init");
    *(_OWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews14BadgeMaskLayer_size] = v1;
    v8 = (void *)objc_opt_self(UIScreen);
    v9 = v7;
    v10 = objc_msgSend(v8, "mainScreen");
    objc_msgSend(v10, "scale");
    v12 = v11;

    objc_msgSend(v9, "setContentsScale:", v12);
    objc_msgSend(v6, "bounds");
    objc_msgSend(v9, "setFrame:");
    v13 = objc_msgSend(v6, "layer");
    objc_msgSend(v13, "setMask:", v9);

    objc_msgSend(v9, "setNeedsDisplay");
    v14 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView);
    v15 = (char *)objc_allocWithZone(v3);
    v16 = &v15[OBJC_IVAR____TtC23ShelfKitCollectionViews14BadgeMaskLayer_size];
    *(_QWORD *)v16 = 0;
    *((_QWORD *)v16 + 1) = 0;
    v31.receiver = v15;
    v31.super_class = v3;
    v17 = v14;
    v18 = (char *)objc_msgSendSuper2(&v31, "init");
    *(_OWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews14BadgeMaskLayer_size] = v1;
    v19 = v18;
    v20 = objc_msgSend(v8, "mainScreen");
    objc_msgSend(v20, "scale");
    v22 = v21;

    objc_msgSend(v19, "setContentsScale:", v22);
    objc_msgSend(v17, "bounds");
    objc_msgSend(v19, "setFrame:");
    v23 = objc_msgSend(v17, "layer");
    objc_msgSend(v23, "setMask:", v19);

    objc_msgSend(v19, "setNeedsDisplay");
  }
  else
  {
    v24 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView), "layer"));
    objc_msgSend(v24, "setMask:", 0);

    v25 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView;
    v26 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView), "layer"));
    objc_msgSend(v26, "setMask:", 0);

    v27 = (_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active);
    swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active, v33, 0, 0);
    v28 = *(void **)(v0 + v25);
    if (*v27 == 1)
    {
      v19 = v28;
      sub_1E3554(v28);
    }
    else
    {
      v29 = v28;
      v30 = objc_msgSend(v29, "layer");
      objc_msgSend(v30, "setMask:", 0);

      v19 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillMask);
      *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillMask) = 0;

    }
  }

}

uint64_t sub_1E2AFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for Glyph(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1E2B60(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  __n128 v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  char v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = type metadata accessor for Glyph(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v18[-v8];
  v10 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph;
  v11 = swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph, v19, 0, 0);
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16);
  v12(v9, v10, v3, v11);
  v13 = swift_beginAccess(v10, v18, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v4 + 24))(v10, a1, v3, v13);
  swift_endAccess(v18);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v12)(v7, v10, v3);
  v14 = sub_89A0(&qword_3DBD78, (uint64_t (*)(uint64_t))&type metadata accessor for Glyph, (uint64_t)&protocol conformance descriptor for Glyph);
  v15 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v7, v3, v14);
  v16 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v16(v7, v3);
  if ((v15 & 1) == 0)
    sub_1E3ADC();
  v16(a1, v3);
  return ((uint64_t (*)(_BYTE *, uint64_t))v16)(v9, v3);
}

void (*sub_1E2CE0(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  __n128 v9;
  void (*v10)(void *, uint64_t, uint64_t, __n128);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = type metadata accessor for Glyph(0);
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[6] = malloc(v6);
  v7 = malloc(v6);
  v3[7] = v7;
  v8 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph;
  v9 = swift_beginAccess(v8, v3, 0, 0);
  v10 = *(void (**)(void *, uint64_t, uint64_t, __n128))(v5 + 16);
  v3[8] = v10;
  v10(v7, v8, v4, v9);
  return sub_1E2D9C;
}

void sub_1E2D9C(uint64_t *a1, char a2)
{
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(_BYTE **)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 40);
    v4 = *(_BYTE **)(v2 + 48);
    v6 = *(_QWORD *)(v2 + 32);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 64))(v4, v3, v6);
    sub_1E2B60(v4);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v3, v6);
  }
  else
  {
    v4 = *(_BYTE **)(v2 + 48);
    v3 = *(_BYTE **)(v2 + 56);
    sub_1E2B60(v3);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

void *sub_1E2E28()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1E2E74(void *a1)
{
  uint64_t v1;
  id *v3;
  double v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v3 = (id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay);
  *(_QWORD *)&v4 = swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay, v7, 1, 0).n128_u64[0];
  if (*v3)
  {
    objc_msgSend(*v3, "removeFromSuperview", v4);
    v5 = *v3;
  }
  else
  {
    v5 = 0;
  }
  *v3 = a1;
  v6 = a1;

  sub_1E47E0();
}

void (*sub_1E2EF8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (void **)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = *v5;
  v3[3] = *v5;
  v7 = v6;
  return sub_1E2F6C;
}

void sub_1E2F6C(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v2 = *(_QWORD **)a1;
  v4 = (void **)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v7 = *(void **)(v5 + v6);
  if ((a2 & 1) != 0)
  {
    v8 = v3;
    if (v7)
    {
      objc_msgSend(v7, "removeFromSuperview");
      v7 = *(void **)(v5 + v6);
      v5 = v2[4];
      v6 = v2[5];
    }
    *(_QWORD *)(v5 + v6) = v3;
    v10 = v8;

    sub_1E47E0();
    v9 = *v4;
  }
  else
  {
    if (v7)
    {
      objc_msgSend(*(id *)(v5 + v6), "removeFromSuperview");
      v7 = *(void **)(v5 + v6);
      v5 = v2[4];
      v6 = v2[5];
    }
    *(_QWORD *)(v5 + v6) = v3;
    v9 = v3;

    sub_1E47E0();
  }

  free(v2);
}

uint64_t sub_1E303C()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground, v3, 0, 0);
  return *v1;
}

void sub_1E3080(char a1)
{
  sub_1E308C(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground);
}

void sub_1E308C(char a1, _QWORD *a2)
{
  uint64_t v2;
  _BYTE *v4;
  _BYTE v5[24];

  v4 = (_BYTE *)(v2 + *a2);
  swift_beginAccess(v4, v5, 1, 0);
  *v4 = a1;
  sub_1E2494();
}

uint64_t (*sub_1E30DC(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground, a1, 33, 0);
  return sub_1E2744;
}

void sub_1E3124(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_1E2494();
}

void sub_1E3154(char *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void *v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;

  v4 = *a1;
  v5 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock];
  v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock];
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock + 8];
  *v5 = a2;
  v5[1] = a3;
  swift_retain(a3);
  sub_1D618(v6, v7);
  if ((v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeOutInProgress] & 1) == 0)
  {
    v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeOutInProgress] = 1;
    objc_msgSend(v3, "layoutIfNeeded");
    v8 = (void *)objc_opt_self(UIView);
    v9 = swift_allocObject(&unk_38A060, 25, 7);
    *(_QWORD *)(v9 + 16) = v3;
    *(_BYTE *)(v9 + 24) = v4;
    v19 = sub_13E98C;
    v20 = v9;
    v15 = _NSConcreteStackBlock;
    v16 = 1107296256;
    v17 = sub_24360;
    v18 = &block_descriptor_45;
    v10 = _Block_copy(&v15);
    v11 = v20;
    v12 = v3;
    swift_release(v11);
    v13 = swift_allocObject(&unk_38A0B0, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16, v12);
    v19 = sub_13E9B0;
    v20 = v13;
    v15 = _NSConcreteStackBlock;
    v16 = 1107296256;
    v17 = sub_1E3D64;
    v18 = &block_descriptor_6_5;
    v14 = _Block_copy(&v15);
    swift_release(v20);
    objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 65540, v10, v14, 0.2, 0.0);
    _Block_release(v14);
    _Block_release(v10);
  }
}

void sub_1E3300()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t *v2;
  void (*v3)(__n128);
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  CGFloat v13;
  void *v14;
  CGFloat ty;
  _BYTE *v16;
  CGAffineTransform v17;
  char v18[24];

  if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeOutInProgress] == 1)
  {
    v1 = v0;
    v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeOutInProgress] = 0;
    v2 = (uint64_t *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock];
    v3 = *(void (**)(__n128))&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock];
    if (v3)
    {
      v4 = v2[1];
      v5 = swift_retain(v4);
      v3(v5);
      sub_1D618((uint64_t)v3, v4);
      v6 = *v2;
    }
    else
    {
      v6 = 0;
    }
    v7 = v2[1];
    *v2 = 0;
    v2[1] = 0;
    sub_1D618(v6, v7);
    v8 = (id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay];
    swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay], v18, 0, 0);
    if (*v8)
      objc_msgSend(*v8, "setAlpha:", 0.0);
    v9 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView];
    CGAffineTransformMakeScale(&v17, 0.3, 0.3);
    objc_msgSend(v9, "setTransform:", &v17);
    v10 = *v8;
    if (v10)
    {
      CGAffineTransformMakeScale(&v17, 0.3, 0.3);
      objc_msgSend(v10, "setTransform:", &v17);
    }
    if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 24] == 1)
    {
      v11 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 16];
      objc_msgSend(v11, "setHidden:", 1);
      objc_msgSend(v11, "setAlpha:", 0.0);
    }
    objc_msgSend(v1, "layoutIfNeeded");
    v12 = (void *)objc_opt_self(UIView);
    v13 = COERCE_DOUBLE(swift_allocObject(&unk_38A4D0, 24, 7));
    *(_QWORD *)(*(_QWORD *)&v13 + 16) = v1;
    *(_QWORD *)&v17.tx = sub_1E80CC;
    v17.ty = v13;
    *(_QWORD *)&v17.a = _NSConcreteStackBlock;
    *(_QWORD *)&v17.b = 1107296256;
    *(_QWORD *)&v17.c = sub_24360;
    *(_QWORD *)&v17.d = &block_descriptor_29_0;
    v14 = _Block_copy(&v17);
    ty = v17.ty;
    v16 = v1;
    swift_release(*(_QWORD *)&ty);
    objc_msgSend(v12, "animateWithDuration:delay:options:animations:completion:", 131076, v14, 0, 0.2, 0.0);
    _Block_release(v14);
  }
}

void sub_1E3554(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  id v10;
  void *v11;
  objc_class *v12;
  char *v13;
  char *v14;
  void *v15;
  char *v16;
  id v17;
  void *v18;
  char *v19;
  id v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  uint64_t v25;
  objc_super v26;
  char v27[24];

  v2 = v1;
  v4 = type metadata accessor for Glyph(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v8 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph;
    v9 = swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph, v27, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v9);
    v10 = a1;
    v11 = (void *)Glyph.image.getter(v10);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v12 = (objc_class *)type metadata accessor for GlyphMaskLayer();
    v13 = (char *)objc_allocWithZone(v12);
    *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews14GlyphMaskLayer_symbolImage] = 0;
    v26.receiver = v13;
    v26.super_class = v12;
    v14 = (char *)objc_msgSendSuper2(&v26, "init");
    v15 = *(void **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews14GlyphMaskLayer_symbolImage];
    *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews14GlyphMaskLayer_symbolImage] = v11;
    v16 = v14;
    v17 = v11;

    v18 = (void *)objc_opt_self(UIScreen);
    v19 = v16;
    v20 = objc_msgSend(v18, "mainScreen");
    objc_msgSend(v20, "scale");
    v22 = v21;

    objc_msgSend(v19, "setContentsScale:", v22);
    objc_msgSend(v10, "bounds");
    objc_msgSend(v19, "setFrame:");
    v23 = objc_msgSend(v10, "layer");
    objc_msgSend(v23, "setMask:", v19);

    objc_msgSend(v19, "setNeedsDisplay");
    v24 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillMask);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillMask) = v19;

  }
}

uint64_t sub_1E3754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_D184(v3, a1, (uint64_t *)&unk_3D4C90);
}

uint64_t sub_1E37AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[24];
  _BYTE v9[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color, v9, 0, 0);
  sub_D184(v6, (uint64_t)v5, (uint64_t *)&unk_3D4C90);
  swift_beginAccess(v6, v8, 33, 0);
  sub_1E1944(a1, v6);
  swift_endAccess(v8);
  sub_1E4F1C((uint64_t)v5);
  sub_D1D4(a1, (uint64_t *)&unk_3D4C90);
  return sub_D1D4((uint64_t)v5, (uint64_t *)&unk_3D4C90);
}

void (*sub_1E3894(_QWORD *a1))(char **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90) - 8) + 64);
  v3[10] = malloc(v4);
  v3[11] = malloc(v4);
  v5 = malloc(v4);
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color;
  v3[12] = v5;
  v3[13] = v6;
  v7 = v1 + v6;
  swift_beginAccess(v7, v3, 0, 0);
  sub_D184(v7, (uint64_t)v5, (uint64_t *)&unk_3D4C90);
  return sub_1E3948;
}

void sub_1E3948(char **a1, char a2)
{
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v4 = (void *)*((_QWORD *)*a1 + 12);
  v3 = *((_QWORD *)*a1 + 13);
  v5 = (void *)*((_QWORD *)*a1 + 10);
  v6 = (void *)*((_QWORD *)*a1 + 11);
  v7 = *((_QWORD *)*a1 + 9) + v3;
  if ((a2 & 1) != 0)
  {
    sub_D184(*((_QWORD *)*a1 + 12), (uint64_t)v6, (uint64_t *)&unk_3D4C90);
    sub_D184(v7, (uint64_t)v5, (uint64_t *)&unk_3D4C90);
    swift_beginAccess(v7, v2 + 24, 33, 0);
    sub_1E1944((uint64_t)v6, v7);
    swift_endAccess(v2 + 24);
    sub_1E4F1C((uint64_t)v5);
    sub_D1D4((uint64_t)v6, (uint64_t *)&unk_3D4C90);
    v8 = (uint64_t)v5;
    v9 = (uint64_t)v4;
  }
  else
  {
    sub_D184(*((_QWORD *)*a1 + 9) + v3, (uint64_t)v6, (uint64_t *)&unk_3D4C90);
    swift_beginAccess(v7, v2 + 48, 33, 0);
    sub_1E1944((uint64_t)v4, v7);
    swift_endAccess(v2 + 48);
    sub_1E4F1C((uint64_t)v6);
    v8 = (uint64_t)v4;
    v9 = (uint64_t)v6;
  }
  sub_D1D4(v8, (uint64_t *)&unk_3D4C90);
  sub_D1D4(v9, (uint64_t *)&unk_3D4C90);
  free(v4);
  free(v6);
  free(v5);
  free(v2);
}

void sub_1E3A8C(objc_class *a1)
{
  uint64_t v1;
  id v3;
  char v4;
  id v5;
  UIBlurEffect_optional v6;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView);
  v4 = (char)v3;
  v5 = v3;
  v6.value.super.super.isa = a1;
  v6.is_nil = 0;
  UIVisualEffectView.setBlurEffect(_:animated:)(v6, v4);

}

void sub_1E3ADC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  void *v18;
  char *v19;
  char *v20;
  double v21;
  id v22;
  _BYTE v23[24];
  char v24[24];
  char v25[24];
  char v26[24];

  v1 = v0;
  v2 = type metadata accessor for Glyph(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  v7 = __chkstk_darwin(v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v23[-v10];
  v12 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color], v26, 0, 0);
  sub_D184(v12, (uint64_t)v11, (uint64_t *)&unk_3D4C90);
  v13 = type metadata accessor for Glyph.Color(0);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13);
  sub_D1D4((uint64_t)v11, (uint64_t *)&unk_3D4C90);
  v15 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph];
  v16 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph], v25, 0, 0);
  if (v14 == 1)
  {
    v17 = (*(uint64_t (**)(_BYTE *, char *, uint64_t, __n128))(v3 + 16))(v5, v15, v2, v16);
    v18 = (void *)Glyph.image.getter(v17);
  }
  else
  {
    (*(void (**)(_BYTE *, char *, uint64_t, __n128))(v3 + 16))(v5, v15, v2, v16);
    sub_D184(v12, (uint64_t)v9, (uint64_t *)&unk_3D4C90);
    v18 = (void *)Glyph.image(color:)(v9);
    sub_D1D4((uint64_t)v9, (uint64_t *)&unk_3D4C90);
  }
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v19 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active], v24, 0, 0);
  if ((*v19 & 1) != 0
    || (v20 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay],
        *(_QWORD *)&v21 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay], v23, 0, 0).n128_u64[0], *(_QWORD *)v20))
  {
    v22 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView];
    objc_msgSend(v22, "setImage:", 0);

  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView], "setImage:", v18, v21);
    objc_msgSend(v1, "setNeedsLayout");
  }

}

uint64_t sub_1E3D64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void GlyphButton.__allocating_init(frame:glyph:color:style:layout:autolayoutMode:)(uint64_t a1, uint64_t a2, char a3, char a4, char a5, double a6, double a7, double a8, double a9)
{
  objc_class *v9;
  char v17;
  char v18;
  id v19;

  v17 = a4 & 1;
  v18 = a5 & 1;
  v19 = objc_allocWithZone(v9);
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)(a1, a2, a3, v17, v18, a6, a7, a8, a9);
}

void sub_1E3E30()
{
  qword_3DBCE0 = 0x4014000000000000;
}

void sub_1E3E40()
{
  qword_3DBCE8 = 0x4008000000000000;
}

void sub_1E3E50()
{
  qword_3DBCF0 = 0x4024000000000000;
}

__n128 sub_1E3E60()
{
  __n128 result;

  __asm { FMOV            V0.2D, #28.0 }
  xmmword_3FCFE0 = (__int128)result;
  return result;
}

__n128 sub_1E3E70()
{
  __n128 result;

  __asm { FMOV            V0.2D, #17.0 }
  xmmword_3FCFF0 = (__int128)result;
  return result;
}

BOOL static NowPlayingIndicatorState.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void NowPlayingIndicatorState.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int NowPlayingIndicatorState.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

void sub_1E3EFC()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeSymbolName];
  v2 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeSymbolName + 8];
  if (v2)
  {
    v6 = 0x4024000000000000;
    v7 = 0x402C000000000000;
    swift_bridgeObjectRetain(v2);
    static Platform.preferred<A>(iOS:mac:)(&v8, &v7, &v6, &type metadata for CGFloat);
    v3 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 6, 2, v8);
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
    v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v4, v3);

  }
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeImageView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeImageView], "setImage:", v2);
  objc_msgSend(*(id *)&v0[v5], "setHidden:", *((_QWORD *)v1 + 1) == 0);
  sub_1E2494();
  objc_msgSend(v0, "setNeedsLayout");

}

double sub_1E4050(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  char v13[24];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  v5 = (uint64_t *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle);
  swift_beginAccess(v5, v13, 1, 0);
  v6 = v5[1];
  *v5 = v3;
  v5[1] = v2;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRelease(v6);
  v7 = *(void **)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout);
  v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 8);
  v9 = *(void **)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 16);
  LOBYTE(v4) = *(_BYTE *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 24);
  v11 = *v5;
  v10 = v5[1];
  swift_bridgeObjectRetain(v10);
  sub_1E4108(v11, v10, v7, v8, v9, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

void sub_1E4108(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, char a6)
{
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  NSString v13;
  uint64_t v14;
  id v15;
  double v16;
  uint64_t v17;

  if ((a6 & 1) != 0)
  {
    v9 = a3;
    v10 = a5;
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3DBE40);
    v12 = sub_2C298();
    if ((Optional<A>.isEmpty.getter(v11, v12) & 1) != 0)
    {
      objc_msgSend(v10, "setText:", 0, a1, a2);
      objc_msgSend(v10, "setHidden:", 1);
      objc_msgSend(v9, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
    }
    else
    {
      if (a2)
        v13 = String._bridgeToObjectiveC()();
      else
        v13 = 0;
      objc_msgSend(v10, "setText:", v13, a1, a2);

      objc_msgSend(v10, "setHidden:", 0);
      v14 = qword_3CFAB8;
      v15 = v9;
      if (v14 != -1)
        swift_once(&qword_3CFAB8, sub_1E3E30);
      v16 = *(double *)&qword_3DBCE0;
      if (qword_3CFAC8 != -1)
      {
        v17 = qword_3DBCE0;
        swift_once(&qword_3CFAC8, sub_1E3E50);
        v16 = *(double *)&v17;
      }
      objc_msgSend(v15, "setDirectionalLayoutMargins:", 0.0, v16, 0.0, *(double *)&qword_3DBCF0);
    }

  }
}

void sub_1E42CC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*a1
                                                             + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView), "_groupName"));
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1E433C(unsigned __int8 *a1, _QWORD *a2)
{
  int v2;
  _BYTE *v3;
  int v4;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = v2;
  if (v4 != v2)
    sub_1E2494();
}

id sub_1E43A0(char a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Class isa;
  id v12;
  uint64_t v14;

  if ((a1 & 1) != 0)
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v5 = (void *)objc_opt_self(UIFont);
    static Glyph.HeaderButtons.headerButtonsPointSize.getter();
    v6 = objc_msgSend(v5, "boldSystemFontOfSize:");
    objc_msgSend(v4, "setFont:", v6);

    v7 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
    objc_msgSend(v4, "setTextColor:", v7);

    objc_msgSend(v4, "setHidden:", 1);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v9 = swift_allocObject(v8, 48, 7);
    *(_OWORD *)(v9 + 16) = xmmword_2EFC90;
    *(_QWORD *)(v9 + 32) = a2;
    *(_QWORD *)(v9 + 40) = v4;
    v14 = v9;
    specialized Array._endMutation()(v9);
    v10 = objc_allocWithZone((Class)UIStackView);
    sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
    a2;
    v4;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v3 = objc_msgSend(v10, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

    objc_msgSend(v3, "setAxis:", 0);
    objc_msgSend(v3, "setAlignment:", 2);
    objc_msgSend(v3, "setLayoutMarginsRelativeArrangement:", 1);
    objc_msgSend(v3, "setUserInteractionEnabled:", 0);
    if (qword_3CFAC0 != -1)
      swift_once(&qword_3CFAC0, sub_1E3E40);
    objc_msgSend(v3, "setSpacing:", *(double *)&qword_3DBCE8);
  }
  else
  {
    v3 = a2;
  }
  v12 = a2;
  return v3;
}

uint64_t type metadata accessor for GlyphButton(uint64_t a1)
{
  uint64_t result;

  result = qword_3DBDC8;
  if (!qword_3DBDC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GlyphButton);
  return result;
}

uint64_t sub_1E4658@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for Glyph(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1E46C0(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for Glyph(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return sub_1E2B60(v5);
}

void sub_1E4740(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay);
  swift_beginAccess(v3, v7, 1, 0);
  v4 = *v3;
  if (*v3)
  {
    v5 = v2;
    objc_msgSend(v4, "removeFromSuperview");
    v4 = *v3;
  }
  else
  {
    v5 = v2;
  }
  *v3 = v2;
  v6 = v5;

  sub_1E47E0();
}

void sub_1E47E0()
{
  char *v0;
  id *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;
  _BYTE v20[24];

  sub_1E2494();
  v1 = (id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay], v20, 0, 0);
  if (*v1)
  {
    v2 = *v1;
    objc_msgSend(v0, "addSubview:", v2);
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v3 = (void *)objc_opt_self(NSLayoutConstraint);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v5 = swift_allocObject(v4, 64, 7);
    *(_OWORD *)(v5 + 16) = xmmword_2F0A20;
    v6 = objc_msgSend(v2, "leadingAnchor");
    v7 = objc_msgSend(v0, "leadingAnchor");
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

    *(_QWORD *)(v5 + 32) = v8;
    v9 = objc_msgSend(v2, "trailingAnchor");
    v10 = objc_msgSend(v0, "trailingAnchor");
    v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

    *(_QWORD *)(v5 + 40) = v11;
    v12 = objc_msgSend(v2, "topAnchor");
    v13 = objc_msgSend(v0, "topAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

    *(_QWORD *)(v5 + 48) = v14;
    v15 = objc_msgSend(v2, "bottomAnchor");
    v16 = objc_msgSend(v0, "bottomAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

    *(_QWORD *)(v5 + 56) = v17;
    specialized Array._endMutation()(v18);
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  }
}

id sub_1E4A84(uint64_t a1, char a2)
{
  uint64_t v4;
  id *v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  id result;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  CGAffineTransform v16;
  CGAffineTransform v17;
  _BYTE v18[24];

  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView), "setAlpha:", 0.0);
  v5 = (id *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay);
  swift_beginAccess(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay, v18, 0, 0);
  objc_msgSend(*v5, "setAlpha:", 0.0);
  v6 = *(void **)(a1 + v4);
  CGAffineTransformMakeScale(&v17, 0.3, 0.3);
  if ((a2 & 1) != 0)
  {
    CGAffineTransformRotate(&v16, &v17, 1.57079633);
    v7 = *(_OWORD *)&v16.a;
    v8 = *(_OWORD *)&v16.c;
    v9 = *(_OWORD *)&v16.tx;
  }
  else
  {
    v7 = *(_OWORD *)&v17.a;
    v8 = *(_OWORD *)&v17.c;
    v9 = *(_OWORD *)&v17.tx;
  }
  *(_OWORD *)&v17.a = v7;
  *(_OWORD *)&v17.c = v8;
  *(_OWORD *)&v17.tx = v9;
  result = objc_msgSend(v6, "setTransform:", &v17);
  v11 = *v5;
  if (v11)
  {
    CGAffineTransformMakeScale(&v17, 0.3, 0.3);
    if ((a2 & 1) != 0)
    {
      CGAffineTransformRotate(&v16, &v17, 1.57079633);
      v12 = *(_OWORD *)&v16.a;
      v13 = *(_OWORD *)&v16.c;
      v14 = *(_OWORD *)&v16.tx;
    }
    else
    {
      v12 = *(_OWORD *)&v17.a;
      v13 = *(_OWORD *)&v17.c;
      v14 = *(_OWORD *)&v17.tx;
    }
    *(_OWORD *)&v17.a = v12;
    *(_OWORD *)&v17.c = v13;
    *(_OWORD *)&v17.tx = v14;
    result = objc_msgSend(v11, "setTransform:", &v17);
  }
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 24) == 1)
  {
    v15 = *(void **)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 16);
    objc_msgSend(v15, "setHidden:", 1);
    return objc_msgSend(v15, "setAlpha:", 0.0);
  }
  return result;
}

void sub_1E4C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1E3300();

  }
}

id sub_1E4C88(uint64_t a1)
{
  uint64_t v2;
  id *v3;
  void *v4;
  id v5;
  id result;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView), "setAlpha:", 1.0);
  v3 = (id *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay);
  swift_beginAccess(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay, v22, 0, 0);
  objc_msgSend(*v3, "setAlpha:", 1.0);
  v4 = *(void **)(a1 + v2);
  v16 = 0x3FF0000000000000;
  v17 = 0;
  v18 = 0;
  v19 = 0x3FF0000000000000;
  v20 = 0;
  v21 = 0;
  objc_msgSend(v4, "setTransform:", &v16);
  v5 = *v3;
  v16 = 0x3FF0000000000000;
  v17 = 0;
  v18 = 0;
  v19 = 0x3FF0000000000000;
  v20 = 0;
  v21 = 0;
  result = objc_msgSend(v5, "setTransform:", &v16);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 24) == 1)
  {
    v7 = *(id *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 16);
    v8 = objc_msgSend(v7, "text");
    if (v8)
    {
      v9 = v8;
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v12 = v11;

    }
    else
    {
      v10 = 0;
      v12 = 0;
    }
    v16 = v10;
    v17 = v12;
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3DBE40);
    v14 = sub_2C298();
    v15 = Optional<A>.isEmpty.getter(v13, v14);
    objc_msgSend(v7, "setHidden:", v15 & 1, swift_bridgeObjectRelease(v12).n128_f64[0]);

    return objc_msgSend(v7, "setAlpha:", 1.0);
  }
  return result;
}

uint64_t sub_1E4E00(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v12[-v8];
  sub_D184(a1, (uint64_t)&v12[-v8], (uint64_t *)&unk_3D4C90);
  v10 = *a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color;
  swift_beginAccess(v10, v13, 0, 0);
  sub_D184(v10, (uint64_t)v6, (uint64_t *)&unk_3D4C90);
  swift_beginAccess(v10, v12, 33, 0);
  sub_1E1944((uint64_t)v9, v10);
  swift_endAccess(v12);
  sub_1E4F1C((uint64_t)v6);
  sub_D1D4((uint64_t)v9, (uint64_t *)&unk_3D4C90);
  return sub_D1D4((uint64_t)v6, (uint64_t *)&unk_3D4C90);
}

void sub_1E4F1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  _BYTE v21[24];

  v2 = v1;
  v4 = type metadata accessor for Glyph.Color(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DBE50);
  __chkstk_darwin(v11);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color, v21, 0, 0);
  v15 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_D184(a1, (uint64_t)v13, (uint64_t *)&unk_3D4C90);
  sub_D184(v14, v15, (uint64_t *)&unk_3D4C90);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
    {
      sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D4C90);
      return;
    }
  }
  else
  {
    sub_D184((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_3D4C90);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_89A0(&qword_3DBE58, (uint64_t (*)(uint64_t))&type metadata accessor for Glyph.Color, (uint64_t)&protocol conformance descriptor for Glyph.Color);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v17);
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D4C90);
      if ((v18 & 1) != 0)
        return;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_D1D4((uint64_t)v13, &qword_3DBE50);
LABEL_8:
  sub_1E3ADC();
}

void sub_1E5174()
{
  char *v0;
  char *v1;
  double v2;
  id v3;
  id *v4;
  void *v5;
  uint64_t v6;
  char v7[24];
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for GlyphButton(0);
  objc_msgSendSuper2(&v8, "tintColorDidChange");
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active];
  *(_QWORD *)&v2 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active], v7, 0, 0).n128_u64[0];
  if (*v1 == 1)
  {
    v3 = objc_msgSend(v0, "tintColor", v2);
  }
  else
  {
    v4 = (id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor];
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor], &v6, 0, 0);
    v3 = *v4;
  }
  v5 = v3;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView], "setBackgroundColor:", v3);

}

void sub_1E5278()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  char *v16;
  int v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  id v44;
  void *v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  CGFloat v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[24];
  objc_super v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  v2 = *(_QWORD *)(v1 - 8);
  v53 = v1;
  v54 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for GlyphButton(0);
  v56.receiver = v0;
  v56.super_class = v5;
  objc_msgSendSuper2(&v56, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v7 = v6;
  objc_msgSend(v0, "bounds");
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v10 = v9 * 0.5;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView;
  v12 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView], "layer");
  objc_msgSend(v12, "setCornerRadius:", v10);

  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView;
  v14 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView], "layer");
  objc_msgSend(v14, "setCornerRadius:", v10);

  v15 = *(void **)&v0[v11];
  v16 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active], v55, 0, 0);
  v17 = *v16;
  v18 = v15;
  objc_msgSend(v0, "bounds");
  if (v17 == 1)
    *(CGRect *)&v19 = CGRectInset(*(CGRect *)&v19, 2.0, 2.0);
  objc_msgSend(v18, "setFrame:", v19, v20, v21, v22);

  v23 = objc_msgSend(*(id *)&v0[v13], "layer");
  v24 = objc_msgSend(v23, "mask");

  if (v24)
  {
    objc_msgSend(v0, "bounds");
    objc_msgSend(v24, "setFrame:");

  }
  v25 = objc_msgSend(*(id *)&v0[v11], "layer");
  v26 = objc_msgSend(v25, "mask");

  if (v26)
  {
    objc_msgSend(*(id *)&v0[v11], "bounds");
    objc_msgSend(v26, "setFrame:");

  }
  v27 = objc_msgSend(*(id *)&v0[v13], "layer");
  v28 = objc_msgSend(v27, "mask");

  if (v28)
  {
    objc_msgSend(*(id *)&v0[v13], "bounds");
    objc_msgSend(v28, "setFrame:");

  }
  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 24] & 1) == 0)
  {
    v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView;
    v30 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView];
    objc_msgSend(v0, "bounds");
    v31 = CGRectGetWidth(v57) * 0.5;
    objc_msgSend(v0, "bounds");
    v32 = CGRectGetHeight(v58) * 0.5;
    v33 = v53;
    v34 = v54;
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v4, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v53);
    v35 = sub_1E654C((uint64_t)v4, v0, v31, v32);
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v33);
    objc_msgSend(v30, "setCenter:", v35, v37);

    v38 = *(id *)&v0[v29];
    objc_msgSend(v0, "bounds");
    objc_msgSend(v38, "sizeThatFits:", v39, v40);
    objc_msgSend(v38, "setBounds:", 0.0, 0.0, v41, v42);

  }
  v43 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeImageView;
  v44 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeImageView], "image");
  if (v44)
  {
    v45 = v44;
    objc_msgSend(v44, "size");
    v47 = v46;
    v49 = v48;

    v50 = *(id *)&v0[v43];
    objc_msgSend(v0, "bounds");
    v51 = CGRectGetWidth(v59) - v47;
    objc_msgSend(v0, "bounds");
    v61.origin.y = CGRectGetHeight(v60) - v49;
    v61.origin.x = v51;
    v61.size.width = v47;
    v61.size.height = v49;
    v62 = CGRectOffset(v61, 7.0, 2.0);
    objc_msgSend(v50, "setFrame:", v62.origin.x, v62.origin.y, v62.size.width, v62.size.height);

  }
}

id sub_1E5730()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GlyphButton(0);
  return objc_msgSendSuper2(&v2, "isHighlighted");
}

id sub_1E5828(char a1)
{
  void *v1;
  objc_class *v3;
  unsigned int v4;
  id result;
  unsigned int v6;
  double v7;
  objc_super v8;
  objc_super v9;

  v3 = (objc_class *)type metadata accessor for GlyphButton(0);
  v9.receiver = v1;
  v9.super_class = v3;
  v4 = objc_msgSendSuper2(&v9, "isHighlighted");
  v8.receiver = v1;
  v8.super_class = v3;
  objc_msgSendSuper2(&v8, "setHighlighted:", a1 & 1);
  result = objc_msgSend(v1, "isHighlighted");
  if (v4 != (_DWORD)result)
  {
    v6 = objc_msgSend(v1, "isHighlighted");
    v7 = 1.0;
    if (v6)
      v7 = 0.5;
    return objc_msgSend(v1, "setAlpha:", v7);
  }
  return result;
}

uint64_t sub_1E5904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeSymbolName + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle + 8));

  sub_1E7E94(*(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout), *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 8), *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 16), *(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 24));
  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyph;
  v2 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  sub_1D618(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock + 8));
  return sub_D1D4(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color, (uint64_t *)&unk_3D4C90);
}

id GlyphButton.__deallocating_deinit()
{
  return sub_1E63D4(0, (uint64_t (*)(void))type metadata accessor for GlyphButton);
}

void (*sub_1E5B78(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E206C(v2);
  return sub_919A8;
}

id UINavigationBar.navBarTintColor.getter()
{
  void *v0;

  return objc_msgSend(v0, "tintColor");
}

void UINavigationBar.navBarTintColor.setter(void *a1)
{
  void *v1;

  objc_msgSend(v1, "setTintColor:", a1);

}

void (*UINavigationBar.navBarTintColor.modify(_QWORD *a1))(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, "tintColor");
  return sub_1E5C5C;
}

void sub_1E5C5C(id *a1)
{
  id v1;

  v1 = *a1;
  objc_msgSend(a1[1], "setTintColor:");

}

void (*sub_1E5C90(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E1BE4(v2);
  return sub_919A8;
}

void (*sub_1E5CD8(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1E1EEC(v2);
  return sub_919A8;
}

void sub_1E5E10(CGContext *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  CGFloat Width;
  double *v9;
  CGFloat v10;
  double v11;
  const CGPath *Mutable;
  double v13;
  double v14;
  _QWORD v15[6];
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v2 = v1;
  v4 = type metadata accessor for CGPathFillRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, "bounds");
  Width = CGRectGetWidth(v16);
  v9 = (double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14BadgeMaskLayer_size];
  v10 = Width - *v9;
  objc_msgSend(v2, "bounds");
  v11 = CGRectGetHeight(v17) - v9[1] + 2.5;
  objc_msgSend(v2, "bounds");
  CGContextFillRect(a1, v18);
  Mutable = CGPathCreateMutable();
  v13 = *v9;
  v14 = v9[1];
  v15[0] = 0x3FF0000000000000;
  v15[1] = 0;
  v15[2] = 0;
  v15[3] = 0x3FF0000000000000;
  v15[4] = 0;
  v15[5] = 0;
  CGMutablePathRef.addEllipse(in:transform:)(v15, v10 + 7.5, v11, v13, v14);
  CGContextAddPath(a1, Mutable);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for CGPathFillRule.winding(_:), v4);
  CGContextRef.clip(using:)(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v2, "bounds");
  CGContextClearRect(a1, v19);

}

id sub_1E6000(uint64_t a1)
{
  return sub_1E63D4(a1, type metadata accessor for BadgeMaskLayer);
}

void sub_1E6120(CGContext *a1)
{
  char *v1;
  void *v2;
  CGImage *v4;
  CGImage *v5;
  double Width;
  double v7;
  double v8;
  double Height;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  id v25;
  CGColor *v26;
  id v27;
  CGAffineTransform transform;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v2 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14GlyphMaskLayer_symbolImage];
  if (v2)
  {
    v27 = v2;
    v4 = (CGImage *)objc_msgSend(v27, "CGImage");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v1, "bounds");
      Width = CGRectGetWidth(v29);
      objc_msgSend(v27, "size");
      v8 = (Width - v7) * 0.5;
      objc_msgSend(v1, "bounds");
      Height = CGRectGetHeight(v30);
      objc_msgSend(v27, "size");
      v11 = (Height - v10) * 0.5;
      objc_msgSend(v27, "size");
      v13 = v12;
      v15 = v14;
      objc_msgSend(v27, "contentInsets");
      v18 = UIEdgeInsetsInsetRect(v8, v11, v13, v15, v16, v17);
      v20 = v19;
      v22 = v21;
      v24 = v23;
      objc_msgSend(v1, "bounds");
      transform.b = 0.0;
      transform.c = 0.0;
      transform.a = 1.0;
      *(_OWORD *)&transform.d = xmmword_2FE840;
      transform.ty = CGRectGetHeight(v31);
      CGContextConcatCTM(a1, &transform);
      v25 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
      v26 = (CGColor *)objc_msgSend(v25, "CGColor");

      CGContextSetFillColorWithColor(a1, v26);
      objc_msgSend(v1, "bounds");
      CGContextFillRect(a1, v32);
      v33.origin.x = v18;
      v33.origin.y = v20;
      v33.size.width = v22;
      v33.size.height = v24;
      CGContextClipToMask(a1, v33, v5);
      objc_msgSend(v1, "bounds");
      CGContextClearRect(a1, v34);

    }
    else
    {

    }
  }
}

id sub_1E63C8(uint64_t a1)
{
  return sub_1E63D4(a1, type metadata accessor for GlyphMaskLayer);
}

id sub_1E63D4(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

void sub_1E64A4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(void))
{
  id v10;
  id v11;
  id v12;

  v10 = a3;
  v11 = a4;
  swift_unknownObjectRetain(a5);
  v12 = a1;
  a6();

  swift_unknownObjectRelease(a5);
}

UIPointerRegion_optional __swiftcall GlyphButton.pointerInteraction(_:regionFor:defaultRegion:)(UIPointerInteraction _, UIPointerRegionRequest regionFor, UIPointerRegion defaultRegion)
{
  objc_class *v4;
  Swift::Bool v5;
  objc_class *isa;
  UIPointerRegion_optional result;

  v4 = defaultRegion.super.isa;
  isa = defaultRegion.super.isa;
  result.value.super.isa = isa;
  result.is_nil = v5;
  return result;
}

double sub_1E654C(uint64_t a1, id a2, double a3, double a4)
{
  id v8;
  double v9;
  double v10;
  id v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  id v17;
  double v18;

  v8 = objc_msgSend(a2, "traitCollection");
  objc_msgSend(v8, "displayScale");
  v10 = v9;
  if (v9 < COERCE_DOUBLE(1))
  {
    v11 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v11, "scale");
    v10 = v12;

  }
  v13 = CGFloat.rounded(_:toScale:)(a1, v10, a3);

  v14 = objc_msgSend(a2, "traitCollection");
  objc_msgSend(v14, "displayScale");
  v16 = v15;
  if (v15 < COERCE_DOUBLE(1))
  {
    v17 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v17, "scale");
    v16 = v18;

  }
  CGFloat.rounded(_:toScale:)(a1, v16, a4);

  return v13;
}

uint64_t sub_1E66B0(char *a1)
{
  id v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  Class isa;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;

  if ((a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 24] & 1) != 0)
  {
    v2 = *(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout];
    LODWORD(v3) = 0;
    objc_msgSend(a1, "setContentCompressionResistancePriority:forAxis:", 0, v3);
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    LODWORD(v4) = 1148846080;
    objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView], "setContentHuggingPriority:forAxis:", 0, v4);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v6 = swift_allocObject(v5, 88, 7);
    *(_OWORD *)(v6 + 16) = xmmword_2FE850;
    v7 = objc_msgSend(a1, "heightAnchor");
    if (qword_3CFAD0 != -1)
      swift_once(&qword_3CFAD0, sub_1E3E60);
    v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(v7, "constraintEqualToConstant:", *((double *)&xmmword_3FCFE0
                                                                                           + 1)));

    *(_QWORD *)(v6 + 32) = v8;
    v9 = objc_msgSend(v2, "centerYAnchor");
    v10 = objc_msgSend(a1, "centerYAnchor");
    v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

    *(_QWORD *)(v6 + 40) = v11;
    v12 = objc_msgSend(v2, "heightAnchor");
    v13 = objc_msgSend(a1, "heightAnchor");
    v14 = objc_msgSend(v12, "constraintLessThanOrEqualToAnchor:", v13);

    *(_QWORD *)(v6 + 48) = v14;
    v15 = objc_msgSend(a1, "widthAnchor");
    v16 = objc_msgSend(v15, "constraintGreaterThanOrEqualToConstant:", *(double *)&xmmword_3FCFE0);

    *(_QWORD *)(v6 + 56) = v16;
    v17 = objc_msgSend(a1, "widthAnchor");
    v18 = objc_msgSend(v2, "widthAnchor");
    v19 = objc_msgSend(v17, "constraintGreaterThanOrEqualToAnchor:", v18);

    *(_QWORD *)(v6 + 64) = v19;
    v20 = objc_msgSend(v2, "widthAnchor");
    v21 = objc_msgSend(a1, "widthAnchor");
    v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

    isa = NSLayoutConstraint.withPriority(priority:)((__C::UILayoutPriority)1144750080).super.isa;
    *(_QWORD *)(v6 + 72) = isa;
    v24 = objc_msgSend(v2, "centerXAnchor");
    v25 = objc_msgSend(a1, "centerXAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

    *(_QWORD *)(v6 + 80) = v26;
    specialized Array._endMutation()(v27);
    v28 = v6;

  }
  else
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v30 = swift_allocObject(v29, 48, 7);
    *(_OWORD *)(v30 + 16) = xmmword_2EFC90;
    v31 = objc_msgSend(a1, "widthAnchor");
    if (qword_3CFAD0 != -1)
      swift_once(&qword_3CFAD0, sub_1E3E60);
    v32 = objc_msgSend(v31, "constraintEqualToConstant:", *(double *)&xmmword_3FCFE0);

    *(_QWORD *)(v30 + 32) = v32;
    v33 = objc_msgSend(a1, "heightAnchor");
    v34 = objc_retainAutoreleasedReturnValue(objc_msgSend(v33, "constraintEqualToConstant:", *((double *)&xmmword_3FCFE0
                                                                                             + 1)));

    *(_QWORD *)(v30 + 40) = v34;
    specialized Array._endMutation()(v35);
    return v30;
  }
  return v28;
}

void sub_1E6B2C(void *a1)
{
  char *v1;
  id *v3;
  id v4;
  id v5;
  char *v6;
  double v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11[24];

  v3 = (id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor], v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  v6 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active];
  *(_QWORD *)&v7 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active], &v10, 0, 0).n128_u64[0];
  if (*v6 == 1)
    v8 = objc_msgSend(v1, "tintColor", v7);
  else
    v8 = *v3;
  v9 = v8;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView], "setBackgroundColor:", v8);

}

uint64_t sub_1E6BFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t block_copy_helper_45(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_45(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1E6C38()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void _s23ShelfKitCollectionViews11GlyphButtonC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeSymbolName];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillMask] = 0;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor;
  *(_QWORD *)&v0[v3] = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v6, "setClipsToBounds:", 1);
  objc_msgSend(v6, "setUserInteractionEnabled:", 0);
  *(_QWORD *)&v0[v5] = v6;
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView;
  v8 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v9 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v8);

  objc_msgSend(v9, "setUserInteractionEnabled:", 0);
  objc_msgSend(v9, "setClipsToBounds:", 1);
  *(_QWORD *)&v0[v7] = v9;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeImageView;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_previousPlatterFillColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground] = 1;
  v11 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock];
  *v11 = 0;
  v11[1] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeOutInProgress] = 0;
  v12 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color];
  v13 = type metadata accessor for Glyph.Color(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/GlyphButton.swift", 41, 2, 381, 0);
  __break(1u);
}

uint64_t _s23ShelfKitCollectionViews11GlyphButtonC18pointerInteraction_8styleForSo14UIPointerStyleCSgSo0kH0C_So0K6RegionCtF_0(void *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  unsigned __int8 *v18;
  double v19;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v32[24];
  CGRect v33;
  CGRect v34;

  v4 = type metadata accessor for UIPointerEffect(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6DA0);
  __chkstk_darwin(v8);
  v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = &v32[-v13 - 8];
  v15 = objc_msgSend(a1, "view", v12);
  if (!v15)
    return 0;
  v16 = v15;
  v17 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", v15);
  v18 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style);
  *(_QWORD *)&v19 = swift_beginAccess(v18, v32, 0, 0).n128_u64[0];
  if (*v18 - 1 > 1)
  {
    v29 = type metadata accessor for UIPointerShape(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 1, 1, v29);
  }
  else
  {
    objc_msgSend(v16, "frame", v19);
    v34 = CGRectInset(v33, -2.0, -2.0);
    x = v34.origin.x;
    y = v34.origin.y;
    width = v34.size.width;
    height = v34.size.height;
    v24 = CGRectGetHeight(v34);
    *(CGFloat *)v14 = x;
    *((CGFloat *)v14 + 1) = y;
    *((CGFloat *)v14 + 2) = width;
    *((CGFloat *)v14 + 3) = height;
    *((CGFloat *)v14 + 4) = v24 * 0.5;
    v25 = enum case for UIPointerShape.roundedRect(_:);
    v26 = type metadata accessor for UIPointerShape(0);
    v27 = *(_QWORD *)(v26 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v14, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v14, 0, 1, v26);
  }
  sub_E710(0, &qword_3D6DA8, UIPointerStyle_ptr);
  *v7 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for UIPointerEffect.highlight(_:), v4);
  sub_D184((uint64_t)v14, (uint64_t)v10, &qword_3D6DA0);
  v28 = UIPointerStyle.init(effect:shape:)(v7, v10);

  sub_D1D4((uint64_t)v14, &qword_3D6DA0);
  return v28;
}

void _s23ShelfKitCollectionViews11GlyphButtonC18pointerInteraction_8willExit8animatorySo09UIPointerH0C_So0L6RegionCSo0lH9Animating_ptF_0()
{
  char *v0;
  void *v1;
  char *v2;
  id *v3;
  id v4;
  id v5;
  char *v6;
  double v7;
  id v8;
  void *v9;
  char v10[24];
  char v11[24];
  char v12[24];

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_previousPlatterFillColor];
  if (v1)
  {
    v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style];
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style], v12, 0, 0);
    if (*v2 == 2)
    {
      v3 = (id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor];
      swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor], v11, 1, 0);
      v4 = *v3;
      *v3 = v1;
      v5 = v1;

      v6 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active];
      *(_QWORD *)&v7 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active], v10, 0, 0).n128_u64[0];
      if (*v6 == 1)
        v8 = objc_msgSend(v0, "tintColor", v7);
      else
        v8 = *v3;
      v9 = v8;
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView], "setBackgroundColor:", v8);

    }
  }
}

void _s23ShelfKitCollectionViews11GlyphButtonC18pointerInteraction_9willEnter8animatorySo09UIPointerH0C_So0L6RegionCSo0lH9Animating_ptF_0()
{
  char *v0;
  char *v1;
  char *v2;
  id *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  char *v8;
  double v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char *v14;
  double v15;
  id v16;
  void *v17;
  char v18[24];
  char v19[24];
  char v20[24];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style];
  swift_beginAccess(v2, v20, 0, 0);
  if (*v2 == 2)
  {
    v3 = (id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor];
    swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor], v19, 1, 0);
    v4 = *v3;
    v5 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_previousPlatterFillColor];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_previousPlatterFillColor] = *v3;
    v6 = v4;

    v7 = objc_msgSend(v1, "traitCollection");
    v8 = (char *)objc_msgSend(v7, "userInterfaceStyle");

    if (v8 == (_BYTE *)&dword_0 + 2)
      v9 = 0.1;
    else
      v9 = -0.15;
    v10 = *v3;
    v11 = (void *)UIColor.addingBrightness(amount:)(v9);

    v12 = *v3;
    *v3 = v11;
    v13 = v11;

    v14 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active];
    *(_QWORD *)&v15 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active], v18, 0, 0).n128_u64[0];
    if (*v14 == 1)
      v16 = objc_msgSend(v1, "tintColor", v15);
    else
      v16 = *v3;
    v17 = v16;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView], "setBackgroundColor:", v16);

  }
}

unint64_t sub_1E73D0()
{
  unint64_t result;

  result = qword_3DBD80;
  if (!qword_3DBD80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GlyphButton.Layout, &type metadata for GlyphButton.Layout);
    atomic_store(result, (unint64_t *)&qword_3DBD80);
  }
  return result;
}

unint64_t sub_1E7418()
{
  unint64_t result;

  result = qword_3DBD88;
  if (!qword_3DBD88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GlyphButton.AutolayoutMode, &type metadata for GlyphButton.AutolayoutMode);
    atomic_store(result, (unint64_t *)&qword_3DBD88);
  }
  return result;
}

unint64_t sub_1E7460()
{
  unint64_t result;

  result = qword_3DBD90;
  if (!qword_3DBD90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GlyphButton.Style, &type metadata for GlyphButton.Style);
    atomic_store(result, (unint64_t *)&qword_3DBD90);
  }
  return result;
}

unint64_t sub_1E74A8()
{
  unint64_t result;

  result = qword_3DBD98;
  if (!qword_3DBD98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GlyphButton.FadeUpdateStyle, &type metadata for GlyphButton.FadeUpdateStyle);
    atomic_store(result, (unint64_t *)&qword_3DBD98);
  }
  return result;
}

uint64_t sub_1E74EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain(v4);
}

id sub_1E7544@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1E7594(id *a1)
{
  id v1;

  v1 = *a1;
  sub_1E6B2C(v1);

}

double sub_1E75D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain(v2);
  return sub_1E1D90(v1, v2);
}

void sub_1E760C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_1E7660(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  keypath_get_13Tm(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active, a2);
}

void sub_1E766C(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active);
}

id sub_1E7680@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1E76D4(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  keypath_get_13Tm(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground, a2);
}

void keypath_get_13Tm(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  _BYTE v5[24];

  v4 = (_BYTE *)(*a1 + *a2);
  swift_beginAccess(v4, v5, 0, 0);
  *a3 = *v4;
}

void sub_1E772C(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground);
}

void keypath_set_14Tm(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  _BYTE *v6;
  _BYTE v7[24];

  v5 = *a1;
  v6 = (_BYTE *)(*a2 + *a5);
  swift_beginAccess(v6, v7, 1, 0);
  *v6 = v5;
  sub_1E2494();
}

uint64_t sub_1E778C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_color;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_D184(v3, a2, (uint64_t *)&unk_3D4C90);
}

uint64_t sub_1E77EC()
{
  return type metadata accessor for GlyphButton(0);
}

void sub_1E77F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[18];

  v6[0] = &unk_2FEA68;
  v6[1] = &unk_2FEA68;
  v6[2] = &unk_2FEA80;
  v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[7] = &unk_2FEA98;
  v6[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[9] = &unk_2FEA80;
  v6[10] = &unk_2FEAB0;
  v6[11] = &unk_2FEAC8;
  v2 = type metadata accessor for Glyph(319);
  if (v3 <= 0x3F)
  {
    v6[12] = *(_QWORD *)(v2 - 8) + 64;
    v6[13] = &unk_2FEA80;
    v6[14] = &unk_2FEAC8;
    v6[15] = &unk_2FEA68;
    v6[16] = &unk_2FEAC8;
    sub_1E7C00(319);
    if (v5 <= 0x3F)
    {
      v6[17] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 18, v6, a1 + 184);
    }
  }
}

uint64_t method lookup function for GlyphButton(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for GlyphButton);
}

uint64_t dispatch thunk of GlyphButton.__allocating_init(frame:glyph:color:style:layout:autolayoutMode:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(v5 + 328))(a1, a2, a3, a4 & 1, a5 & 1);
}

uint64_t dispatch thunk of GlyphButton.customTitle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of GlyphButton.customTitle.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of GlyphButton.customTitle.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of GlyphButton.platterFillColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.firstGlyphBaselineAnchor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of GlyphButton.vevGroupName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1F8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of GlyphButton.vevGroupName.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1F8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of GlyphButton.vevGroupName.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1F8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of GlyphButton.style.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1F8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of GlyphButton.style.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1F8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.style.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1F8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.active.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_248.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.active.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_248.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.active.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_248.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.glyph.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_298.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of GlyphButton.glyph.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_298.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of GlyphButton.glyph.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_298.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of GlyphButton.customOverlay.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_298.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of GlyphButton.customOverlay.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_298.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.customOverlay.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_298.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.customOverlayHidesBackground.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_298.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.customOverlayHidesBackground.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_298.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.customOverlayHidesBackground.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_298.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.updateWithFade(fadeOutStyle:_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_2E8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of GlyphButton.color.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_338.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of GlyphButton.color.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_338.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of GlyphButton.color.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_338.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of GlyphButton.setBlurEffect(_:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_338.segname[(swift_isaMask & *v0) + 16])();
}

void sub_1E7C00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3DBDD8)
  {
    v2 = type metadata accessor for Glyph.Color(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3DBDD8);
  }
}

ValueMetadata *type metadata accessor for GlyphButton.Layout()
{
  return &type metadata for GlyphButton.Layout;
}

ValueMetadata *type metadata accessor for GlyphButton.AutolayoutMode()
{
  return &type metadata for GlyphButton.AutolayoutMode;
}

uint64_t storeEnumTagSinglePayload for GlyphButton.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1E7CC4 + 4 * byte_2FE865[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1E7CF8 + 4 * byte_2FE860[v4]))();
}

uint64_t sub_1E7CF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1E7D00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1E7D08);
  return result;
}

uint64_t sub_1E7D14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1E7D1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1E7D20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1E7D28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GlyphButton.Style()
{
  return &type metadata for GlyphButton.Style;
}

uint64_t _s23ShelfKitCollectionViews11GlyphButtonC6LayoutOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1E7D90 + 4 * byte_2FE86F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1E7DC4 + 4 * byte_2FE86A[v4]))();
}

uint64_t sub_1E7DC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1E7DCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1E7DD4);
  return result;
}

uint64_t sub_1E7DE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1E7DE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1E7DEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1E7DF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GlyphButton.FadeUpdateStyle()
{
  return &type metadata for GlyphButton.FadeUpdateStyle;
}

uint64_t type metadata accessor for BadgeMaskLayer()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews14BadgeMaskLayer);
}

uint64_t type metadata accessor for GlyphMaskLayer()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews14GlyphMaskLayer);
}

id sub_1E7E50(void *a1, void *a2, void *a3, char a4)
{
  id v6;
  id v7;

  if ((a4 & 1) != 0)
  {
    v6 = a1;
    v7 = a2;
    a1 = a3;
  }
  return a1;
}

void destroy for GlyphButton.InternalLayout(uint64_t a1)
{
  sub_1E7E94(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1E7E94(void *a1, void *a2, void *a3, char a4)
{

  if ((a4 & 1) != 0)
  {

  }
}

uint64_t initializeWithCopy for GlyphButton.InternalLayout(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1E7E50(*(void **)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for GlyphButton.InternalLayout(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1E7E50(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1E7E94(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GlyphButton.InternalLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1E7E94(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for GlyphButton.InternalLayout(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GlyphButton.InternalLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1E8084(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1E808C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GlyphButton.InternalLayout()
{
  return &type metadata for GlyphButton.InternalLayout;
}

uint64_t sub_1E80A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1E80CC()
{
  uint64_t v0;

  return sub_1E4C88(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1E80EC(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    __chkstk_darwin(a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return TupleView.init(_:)(v8, TupleTypeMetadata);
  }
  __chkstk_darwin(a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata(0, a2);
  __chkstk_darwin(TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return TupleView.init(_:)(v8, TupleTypeMetadata);
}

uint64_t sub_1E82A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_1E82B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v14 - v11, a1, a2);
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_1E837C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v11, a1, a3);
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_1E8440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t WitnessTable;
  _QWORD v26[2];
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v8 = v7;
  v26[0] = a6;
  v26[1] = a7;
  v14 = *(_QWORD *)(a3 - 8);
  v15 = __chkstk_darwin(a1);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for _LayoutRoot(0, v18, v19, v15);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)v26 - v22;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, v8, a3, v21);
  _LayoutRoot.init(_:)(v17, a3, a5);
  v28 = a3;
  v29 = a4;
  v30 = a5;
  v31 = v26[0];
  v32 = a1;
  v33 = a2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _LayoutRoot<A>, v20);
  return _VariadicView.Tree.init(_:content:)(v23, sub_1ECA64, v27, v20, a4, WitnessTable);
}

void sub_1E8570()
{
  qword_3DBE60 = 0x4059000000000000;
}

uint64_t sub_1E8580(double a1, double a2)
{
  uint64_t v2;
  __n128 v3;
  _QWORD v5[5];

  *(double *)v5 = a1;
  *(double *)&v5[1] = a2;
  type metadata accessor for CGSize(0);
  State.init(wrappedValue:)(v5, v2, v3);
  return v5[4];
}

double sub_1E85BC()
{
  uint64_t v0;
  double v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA380);
  State.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t sub_1E8610(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  __int128 v9;
  uint64_t v10;

  v4 = (__int128 *)(v3 + *(int *)(a1 + 40));
  v5 = *((_QWORD *)v4 + 2);
  v9 = *v4;
  v10 = v5;
  *(double *)v8 = a2;
  *(double *)&v8[1] = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA380);
  return State.wrappedValue.setter(v8, v6);
}

double sub_1E8668@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  double result;
  __int128 v10;
  _QWORD v11[4];
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  *(double *)v11 = a2;
  *(double *)&v11[1] = a3;
  *(double *)&v11[2] = a4;
  *(double *)&v11[3] = a5;
  type metadata accessor for CGRect(0);
  State.init(wrappedValue:)(v11, v6, v7);
  v8 = v14;
  result = *(double *)&v12;
  v10 = v13;
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v8;
  return result;
}

double sub_1E86BC()
{
  uint64_t v0;
  double v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DBFF8);
  State.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t sub_1E8714(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v11[4];
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v6 = (__int128 *)(v5 + *(int *)(a1 + 44));
  v7 = *((_QWORD *)v6 + 4);
  v8 = v6[1];
  v12 = *v6;
  v13 = v8;
  v14 = v7;
  *(double *)v11 = a2;
  *(double *)&v11[1] = a3;
  *(double *)&v11[2] = a4;
  *(double *)&v11[3] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DBFF8);
  return State.wrappedValue.setter(v11, v9);
}

uint64_t FadingText.init(_:foregroundStyle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;

  v12 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(a1);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AttributedString(0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  AttributedString.init(stringLiteral:)(a1, a2, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, a4);
  FadingText.init(_:foregroundStyle:)((uint64_t)v18, (uint64_t)v14, a4, a5, a6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a3, a4);
}

uint64_t FadingText.init(_:foregroundStyle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t KeyPath;
  _OWORD v29[2];
  _OWORD v30[2];
  uint64_t v31;

  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for FadingText(0, a3, a4, v14);
  v16 = (_QWORD *)(a5 + v15[10]);
  v17 = sub_1E8580(0.0, 0.0);
  *v16 = v18;
  v16[1] = v19;
  v16[2] = v17;
  v20 = a5 + v15[11];
  type metadata accessor for CGRect(0);
  memset(v29, 0, sizeof(v29));
  State.init(wrappedValue:)(v29, v21, (__n128)0);
  v22 = v31;
  v23 = v30[1];
  *(_OWORD *)v20 = v30[0];
  *(_OWORD *)(v20 + 16) = v23;
  *(_QWORD *)(v20 + 32) = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v24 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v24, "setLineBreakMode:", 2);
  KeyPath = swift_getKeyPath(&unk_2FEBA0);
  v25 = swift_getKeyPath(&unk_2FEBD0);
  *(_QWORD *)&v30[0] = v24;
  v26 = sub_1E8AA0();
  AttributedString.subscript.setter(v30, v25, v26);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a5, v13, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5 + v15[9], a2, a3);
}

uint64_t type metadata accessor for FadingText(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FadingText);
}

uint64_t sub_1E8A2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC008);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

void sub_1E8A84()
{
  AttributeScopes.UIKitAttributes.paragraphStyle.getter();
  __break(1u);
}

unint64_t sub_1E8AA0()
{
  unint64_t result;

  result = qword_3DBE68;
  if (!qword_3DBE68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.ParagraphStyleAttribute, &type metadata for AttributeScopes.UIKitAttributes.ParagraphStyleAttribute);
    atomic_store(result, (unint64_t *)&qword_3DBE68);
  }
  return result;
}

void sub_1E8AE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1E8AA0();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_1E8B08()
{
  return 8;
}

uint64_t sub_1E8B14(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1E8B1C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1E8B2C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC008);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_1E8B70(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t FadingText.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t OpaqueTypeConformance2;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char v67[16];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v3 = *(_QWORD *)(a1 - 8);
  v65 = *(_QWORD *)(v3 + 64);
  v66 = a2;
  __chkstk_darwin(a1);
  v64 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE70);
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE78);
  v63 = a1;
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v10 = type metadata accessor for FadingTextForeground(255, v8, v7, v9);
  v11 = type metadata accessor for ModifiedContent(255, v6, v10);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v11, v12, 0, 0);
  v14 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v15 = sub_10EDC(&qword_3DBE88, &qword_3DBE70, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v16 = type metadata accessor for _VariadicView.Tree(0, v5, v14, v15);
  v62 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - v17;
  v19 = sub_10EDC(&qword_3DBE90, &qword_3DBE70, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v14);
  v76 = v19;
  v77 = WitnessTable;
  v56 = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v16);
  v74 = v16;
  v75 = v56;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v74, &opaque type descriptor for <<opaque return type of View.withSizing(callback:)>>, 0);
  v60 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v57 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v54 = (char *)&v53 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE98);
  v24 = type metadata accessor for ModifiedContent(0, OpaqueTypeMetadata2, v23);
  v61 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v55 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v58 = (char *)&v53 - v27;
  v28 = swift_allocObject(&unk_38A6C8, 32, 7);
  *(_QWORD *)(v28 + 16) = v8;
  *(_QWORD *)(v28 + 24) = v7;
  v29 = v7;
  v68 = v8;
  v69 = v7;
  v30 = v8;
  v31 = v59;
  v70 = v59;
  v32 = v18;
  sub_1E9010((uint64_t)sub_1E98E4, (uint64_t)v67, v8, v29, (uint64_t)v18);
  v33 = swift_release(v28);
  v34 = v3;
  v35 = v64;
  v36 = v31;
  v37 = v63;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v64, v36, v63, v33);
  v38 = *(unsigned __int8 *)(v3 + 80);
  v39 = (v38 + 32) & ~v38;
  v40 = swift_allocObject(&unk_38A580, v39 + v65, v38 | 7);
  *(_QWORD *)(v40 + 16) = v30;
  *(_QWORD *)(v40 + 24) = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v40 + v39, v35, v37);
  v41 = v54;
  v42 = v56;
  View.withSizing(callback:)(sub_1E9984, v40, v16, v56);
  v43 = swift_release(v40);
  (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v32, v16, v43);
  v74 = 0x6554676E69646146;
  v75 = 0xEA00000000007478;
  v73[0] = v16;
  v73[1] = v42;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v73, &opaque type descriptor for <<opaque return type of View.withSizing(callback:)>>, 1);
  v45 = v55;
  v46 = v57;
  View.coordinateSpace<A>(name:)(&v74, v57, &type metadata for String, OpaqueTypeConformance2, &protocol witness table for String);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v46);
  v47 = sub_10EDC(qword_3DBEA0, &qword_3DBE98, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v71 = OpaqueTypeConformance2;
  v72 = v47;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  v48 = v61;
  v49 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v50 = v58;
  v49(v58, v45, v24);
  v51 = *(void (**)(char *, uint64_t))(v48 + 8);
  v51(v45, v24);
  v49(v66, v50, v24);
  return ((uint64_t (*)(char *, uint64_t))v51)(v50, v24);
}

uint64_t type metadata accessor for FadingTextForeground(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FadingTextForeground);
}

uint64_t sub_1E9010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  unint64_t v17;
  uint64_t WitnessTable;

  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE78);
  v12 = type metadata accessor for FadingTextForeground(255, a3, a4, v11);
  v13 = type metadata accessor for ModifiedContent(255, v10, v12);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v14, 0, 0);
  v16 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  v17 = sub_1ECA20();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v16);
  return sub_1E8440(a1, a2, (uint64_t)&type metadata for FadingTextLayout, v16, v17, WitnessTable, a5);
}

uint64_t sub_1E90F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t WitnessTable;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  __n128 v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  uint64_t (*v92)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[4];
  _QWORD v122[2];
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;

  v94 = a1;
  v115 = a5;
  v119 = a2;
  v103 = a3;
  v120 = type metadata accessor for FadingText(0, a2, a3, a4);
  v109 = *(_QWORD *)(v120 - 8);
  v111 = *(_QWORD *)(v109 + 64);
  v8 = __chkstk_darwin(v120);
  v108 = (char *)&v94 - v9;
  v107 = type metadata accessor for CoordinateSpace(0, v8);
  v106 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v105 = (uint64_t *)((char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DBE80);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v110 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v112 = (char *)&v94 - v13;
  v102 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v14);
  v101 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FadingTextForeground(0, a2, a3, v16);
  v18 = *(_QWORD *)(v17 - 8);
  v97 = v17;
  v104 = v18;
  __chkstk_darwin(v17);
  v100 = (double *)((char *)&v94 - v19);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DBFC8);
  v20 = __chkstk_darwin(v96);
  v22 = (uint64_t *)((char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = type metadata accessor for Text.TruncationMode(0, v20);
  v23 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v25 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for AttributedString(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DBE78);
  __chkstk_darwin(v116);
  v31 = (char *)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for ModifiedContent(0, v32, v17);
  v99 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v117 = (char *)&v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v34);
  v118 = (char *)&v94 - v36;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v27 + 16))(v29, a1, v26, v35);
  v37 = Text.init(_:)(v29);
  v39 = v38;
  v41 = v40;
  LOBYTE(v29) = v42 & 1;
  v43 = v25;
  v44 = v25;
  v45 = v95;
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v44, enum case for Text.TruncationMode.middle(_:), v95);
  KeyPath = swift_getKeyPath(&unk_2FEE70);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))((char *)v22 + *(int *)(v96 + 28), v43, v45);
  *v22 = KeyPath;
  sub_1EC724((uint64_t)v22, (uint64_t)&v31[*(int *)(v116 + 36)]);
  *(_QWORD *)v31 = v37;
  *((_QWORD *)v31 + 1) = v39;
  v31[16] = (char)v29;
  *((_QWORD *)v31 + 3) = v41;
  sub_D130(v37, v39, (char)v29);
  swift_bridgeObjectRetain(v41);
  sub_D1D4((uint64_t)v22, &qword_3DBFC8);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v43, v45);
  sub_D170(v37, v39, (char)v29);
  swift_bridgeObjectRelease(v41);
  v47 = v120;
  v48 = v94;
  v49 = sub_1E85BC();
  v51 = v50;
  v52 = sub_1E86BC();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v59 = v48 + *(int *)(v47 + 36);
  v60 = v48;
  v61 = (uint64_t)v101;
  v62 = v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v59, v119);
  v63 = v100;
  v64 = v103;
  sub_1E98F0(v61, v62, v103, v65, v100, v49, v51, v52, v54, v56, v58);
  v66 = sub_1EC76C();
  v67 = v117;
  v68 = v97;
  View.modifier<A>(_:)(v63, v116, v97, v66);
  (*(void (**)(double *, uint64_t))(v104 + 8))(v63, v68);
  sub_D1D4((uint64_t)v31, &qword_3DBE78);
  WitnessTable = swift_getWitnessTable(&unk_2FEE1C, v68);
  v125 = v66;
  v126 = WitnessTable;
  v70 = v98;
  v104 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v98);
  v71 = v99;
  v102 = *(_QWORD *)(v99 + 16);
  ((void (*)(char *, char *, uint64_t))v102)(v118, v67, v70);
  v116 = *(_QWORD *)(v71 + 8);
  ((void (*)(char *, uint64_t))v116)(v67, v70);
  v123 = 0x6554676E69646146;
  v124 = 0xEA00000000007478;
  v72 = v105;
  AnyHashable.init<A>(_:)(v105, &v123, &type metadata for String, &protocol witness table for String);
  v73 = v106;
  v74 = v107;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v106 + 104))(v72, enum case for CoordinateSpace.named(_:), v107);
  v75 = v109;
  v76 = v108;
  v77 = v120;
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v108, v60, v120);
  v78 = *(unsigned __int8 *)(v75 + 80);
  v79 = v75;
  v80 = (v78 + 32) & ~v78;
  v81 = swift_allocObject(&unk_38A6A0, v80 + v111, v78 | 7);
  *(_QWORD *)(v81 + 16) = v119;
  *(_QWORD *)(v81 + 24) = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v81 + v80, v76, v77);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DBFE0);
  v83 = sub_1EC91C();
  v84 = v110;
  View.withFrame(coordinateSpace:callback:)(v72, sub_1EC8B0, v81, v82, v83);
  v85 = swift_release(v81);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v73 + 8))(v72, v74, v85);
  v86 = v113;
  v87 = v112;
  v88 = v114;
  (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v112, v84, v114);
  v89 = (uint64_t)v117;
  v90 = v118;
  ((void (*)(char *, char *, uint64_t))v102)(v117, v118, v70);
  v123 = v89;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v84, v87, v88);
  v124 = (unint64_t)v84;
  v122[0] = v70;
  v122[1] = v88;
  v121[1] = v83;
  v121[2] = v104;
  v121[0] = v82;
  v121[3] = swift_getOpaqueTypeConformance2(v121, &opaque type descriptor for <<opaque return type of View.withFrame(coordinateSpace:callback:)>>, 1);
  sub_1E80EC(&v123, 2uLL, (uint64_t)v122);
  v91 = *(void (**)(char *, uint64_t))(v86 + 8);
  v91(v87, v88);
  v92 = (uint64_t (*)(uint64_t, uint64_t))v116;
  ((void (*)(char *, uint64_t))v116)(v90, v70);
  v91(v84, v88);
  return v92(v89, v70);
}

uint64_t sub_1E98E4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1E90F0(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_1E98F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>, double a11@<D5>)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  *a5 = a6;
  a5[1] = a7;
  a5[2] = a8;
  a5[3] = a9;
  a5[4] = a10;
  a5[5] = a11;
  v14 = type metadata accessor for FadingTextForeground(0, a2, a3, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))((char *)a5 + *(int *)(v14 + 40), a1, a2);
  v15 = (_QWORD *)((char *)a5 + *(int *)(v14 + 44));
  *v15 = swift_getKeyPath(&unk_2FEEA0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE8);
  return swift_storeEnumTagMultiPayload(v15, v16, 0);
}

uint64_t sub_1E9984(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;

  v9 = type metadata accessor for FadingText(0, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), a6);
  return sub_1E8610(v9, a1, a2);
}

uint64_t sub_1E99D8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of FadingText.body>>, 1);
}

uint64_t sub_1E9A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_1E9A18(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_2FEC98;
      v5[3] = &unk_2FECB0;
      swift_initStructMetadata(a1, 0, 4, v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1E9AB4(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v23;
  uint64_t v24;

  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = *(_QWORD *)(v9 + 64) + 7;
  v13 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    v24 = *a2;
    *a1 = v24;
    a1 = (_QWORD *)(v24 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    v16 = ~v10;
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v17 = ((unint64_t)a2 + v11) & v16;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v16, v17, v8);
    v18 = (v12 + (((unint64_t)a1 + v11) & v16)) & 0xFFFFFFFFFFFFFFF8;
    v19 = (v12 + v17) & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)v18 = *(_OWORD *)v19;
    v20 = *(_QWORD *)(v19 + 16);
    *(_QWORD *)(v18 + 16) = v20;
    v21 = (v18 + 31) & 0xFFFFFFFFFFFFFFF8;
    v22 = (v19 + 31) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v23;
    v24 = *(_QWORD *)(v22 + 32);
    *(_QWORD *)(v21 + 32) = v24;
    swift_retain(v20);
  }
  swift_retain(v24);
  return a1;
}

uint64_t sub_1E9C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = type metadata accessor for AttributedString(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v8);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v9 + 16));
  return swift_release(*(_QWORD *)((char *)&stru_20.cmd + ((v9 + 31) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1E9C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;

  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v17 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 16) = v17;
  v18 = (v15 + 31) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v16 + 31) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  v21 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 32) = v21;
  swift_retain(v17);
  swift_retain(v21);
  return a1;
}

uint64_t sub_1E9D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = v15[2];
  v18 = v16[2];
  v15[2] = v18;
  swift_retain(v18);
  swift_release(v17);
  v19 = (_QWORD *)(((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v19[3] = v20[3];
  v21 = v19[4];
  v22 = v20[4];
  v19[4] = v22;
  swift_retain(v22);
  swift_release(v21);
  return a1;
}

uint64_t sub_1E9E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;

  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_OWORD *)v16;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_OWORD *)v15 = v17;
  v18 = (v15 + 31) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v16 + 31) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_OWORD *)v19;
  v20 = *(_OWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  *(_OWORD *)v18 = v21;
  *(_OWORD *)(v18 + 16) = v20;
  return a1;
}

uint64_t sub_1E9F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = v15[2];
  v15[2] = v16[2];
  swift_release(v17);
  v18 = (_QWORD *)(((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  v18[3] = v19[3];
  v20 = v18[4];
  v18[4] = v19[4];
  swift_release(v20);
  return a1;
}

uint64_t sub_1EA038(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  int v24;

  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= 0x7FFFFFFE)
    v12 = 2147483646;
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v7 + 64) + v14;
  v16 = *(_QWORD *)(v10 + 64) + 7;
  if (v12 < a2)
  {
    if (((((((v16 + (v15 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 40) & 0xFFFFFFF8) != 0)
      v17 = 2;
    else
      v17 = a2 - v12 + 1;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X4 }
  }
  if (v8 == v12)
  {
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v22 = a1;
    v11 = *(unsigned int *)(v7 + 84);
    v9 = v13;
    return v21(v22, v11, v9);
  }
  v22 = (v15 + a1) & ~v14;
  if ((_DWORD)v11 == v12)
  {
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v21(v22, v11, v9);
  }
  v23 = *(_QWORD *)((char *)&dword_10 + ((v16 + v22) & 0xFFFFFFFFFFFFF8));
  if (v23 >= 0xFFFFFFFF)
    LODWORD(v23) = -1;
  v24 = v23 - 1;
  if (v24 < 0)
    v24 = -1;
  return (v24 + 1);
}

void sub_1EA1D0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v8 = *(_QWORD *)(type metadata accessor for AttributedString(0) - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFE)
    v10 = 2147483646;
  v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 >= a3)
  {
    v14 = 0;
    if (a2 <= v10)
      goto LABEL_19;
  }
  else
  {
    if (((((*(_DWORD *)(v9 + 64) + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11)) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v12 = a3 - v10 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    if (a2 <= v10)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((((*(_DWORD *)(v9 + 64) + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11)) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    v15 = ~v10 + a2;
    bzero(a1, ((((*(_QWORD *)(v9 + 64) + 7 + ((*(_QWORD *)(v8 + 64) + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ 40);
    *a1 = v15;
  }
  __asm { BR              X10 }
}

void sub_1EA308()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1EA3B0);
}

void sub_1EA310()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x1EA318);
  JUMPOUT(0x1EA3B0);
}

void sub_1EA364()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1EA3B0);
}

void sub_1EA36C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1EA3B0);
}

uint64_t sub_1EA374@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_WORD *)(v14 + v15) = 0;
  if (!(_DWORD)v13)
    JUMPOUT(0x1EA3B0);
  if ((_DWORD)v7 == v10)
  {
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v4 = v14;
    v5 = v13;
    a1 = v7;
    a2 = a3;
  }
  else
  {
    v4 = (v11 + v14) & v12;
    if ((_DWORD)a1 != v10)
      JUMPOUT(0x1EA380);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v5 = v13;
  }
  return v3(v4, v5, a1, a2);
}

uint64_t sub_1EA3C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t WitnessTable;

  v1 = *a1;
  v2 = a1[1];
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE70);
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE78);
  v6 = type metadata accessor for FadingTextForeground(255, v1, v2, v5);
  v7 = type metadata accessor for ModifiedContent(255, v4, v6);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v7, v8, 0, 0);
  v10 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v11 = sub_10EDC(&qword_3DBE88, &qword_3DBE70, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v12 = type metadata accessor for _VariadicView.Tree(255, v3, v10, v11);
  v20 = sub_10EDC(&qword_3DBE90, &qword_3DBE70, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v10);
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v12);
  v18 = v12;
  v19 = v13;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v18, &opaque type descriptor for <<opaque return type of View.withSizing(callback:)>>, 0);
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE98);
  v16 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v15);
  v18 = v12;
  v19 = v13;
  swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.withSizing(callback:)>>, 1);
  sub_10EDC(qword_3DBEA0, &qword_3DBE98, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
}

void sub_1EA580(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_2FECF8;
  v6[1] = &unk_2FED10;
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1EB4AC(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 4, v6, a1 + 32);
    }
  }
}

uint64_t *sub_1EA61C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  unsigned int v27;
  uint64_t v28;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 & 0xF8 | 7;
  v13 = v9 + v12;
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v10 + 64);
  v15 = (v11 | v7) & 0x100000;
  if ((v12 | v7) != 7
    || v15 != 0
    || v14 + ((v13 + ((v7 + 48) & ~(unint64_t)v7)) & ~v12) + 1 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v12 | v7) + 16) & ~(v12 | v7)));
LABEL_21:
    swift_retain(v18);
    return a1;
  }
  v19 = ~v12;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v20 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = ((unint64_t)v20 + v8 + 32) & ~v8;
  v24 = ((unint64_t)v21 + v8 + 32) & ~v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v23, v24, v5);
  v25 = (_QWORD *)((v23 + v13) & v19);
  v26 = (uint64_t *)((v24 + v13) & v19);
  v27 = *((unsigned __int8 *)v26 + v14);
  if (v27 >= 2)
  {
    if (v14 <= 3)
      v28 = v14;
    else
      v28 = 4;
    __asm { BR              X12 }
  }
  if (v27 != 1)
  {
    v18 = *v26;
    *v25 = *v26;
    *((_BYTE *)v25 + v14) = 0;
    goto LABEL_21;
  }
  (*(void (**)(uint64_t))(v10 + 16))((v23 + v13) & v19);
  *((_BYTE *)v25 + v14) = 1;
  return a1;
}

uint64_t sub_1EA7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v3);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v6 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v7 = (_QWORD *)((v3 + v4 + v6) & ~v6);
  v8 = *(_QWORD *)(v5 + 64);
  if (v8 <= 8)
    v8 = 8;
  v9 = *((unsigned __int8 *)v7 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X14 }
  }
  if (v9 == 1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  else
    return swift_release(*v7);
}

_OWORD *sub_1EA904(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = v5[1];
  *v4 = *v5;
  v4[1] = v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v4 + v8 + 32) & ~v8;
  v10 = ((unint64_t)v5 + v8 + 32) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (_QWORD *)((v11 + v13 + v9) & ~v13);
  v15 = (uint64_t *)((v11 + v13 + v10) & ~v13);
  if (*(_QWORD *)(v12 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v12 + 64);
  v17 = *((unsigned __int8 *)v15 + v16);
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X13 }
  }
  if (v17 == 1)
  {
    (*(void (**)(_QWORD *))(v12 + 16))(v14);
    v19 = 1;
  }
  else
  {
    v20 = *v15;
    *v14 = *v15;
    swift_retain(v20);
    v19 = 0;
  }
  *((_BYTE *)v14 + v16) = v19;
  return a1;
}

_QWORD *sub_1EAA60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v4[1] = v5[1];
  v4[2] = v5[2];
  v4[3] = v5[3];
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 32) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 32) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = type metadata accessor for LayoutDirection(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (uint64_t *)((v10 + v13 + v8) & ~v13);
  v15 = (uint64_t *)((v10 + v13 + v9) & ~v13);
  if (v14 != v15)
  {
    v16 = v11;
    if (*(_QWORD *)(v12 + 64) <= 8uLL)
      v17 = 8;
    else
      v17 = *(_QWORD *)(v12 + 64);
    v18 = *((unsigned __int8 *)v14 + v17);
    if (v18 >= 2)
    {
      if (v17 <= 3)
        v19 = v17;
      else
        v19 = 4;
      __asm { BR              X12 }
    }
    if (v18 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
    else
      swift_release(*v14);
    v20 = *((unsigned __int8 *)v15 + v17);
    if (v20 >= 2)
    {
      if (v17 <= 3)
        v21 = v17;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(v14, v15, v16);
      *((_BYTE *)v14 + v17) = 1;
    }
    else
    {
      v22 = *v15;
      *v14 = *v15;
      *((_BYTE *)v14 + v17) = 0;
      swift_retain(v22);
    }
  }
  return a1;
}

_OWORD *sub_1EAC88(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = v5[1];
  *v4 = *v5;
  v4[1] = v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v4 + v8 + 32) & ~v8;
  v10 = ((unint64_t)v5 + v8 + 32) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (_QWORD *)((v11 + v13 + v9) & ~v13);
  v15 = (_QWORD *)((v11 + v13 + v10) & ~v13);
  if (*(_QWORD *)(v12 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v12 + 64);
  v17 = *((unsigned __int8 *)v15 + v16);
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X13 }
  }
  if (v17 == 1)
  {
    (*(void (**)(_QWORD *))(v12 + 32))(v14);
    v19 = 1;
  }
  else
  {
    v19 = 0;
    *v14 = *v15;
  }
  *((_BYTE *)v14 + v16) = v19;
  return a1;
}

_OWORD *sub_1EADE0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v4[1] = v5[1];
  v4[2] = v5[2];
  v4[3] = v5[3];
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 32) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 32) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = type metadata accessor for LayoutDirection(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (_QWORD *)((v10 + v13 + v8) & ~v13);
  v15 = (_QWORD *)((v10 + v13 + v9) & ~v13);
  if (v14 != v15)
  {
    v16 = v11;
    if (*(_QWORD *)(v12 + 64) <= 8uLL)
      v17 = 8;
    else
      v17 = *(_QWORD *)(v12 + 64);
    v18 = *((unsigned __int8 *)v14 + v17);
    if (v18 >= 2)
    {
      if (v17 <= 3)
        v19 = v17;
      else
        v19 = 4;
      __asm { BR              X12 }
    }
    if (v18 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
    else
      swift_release(*v14);
    v20 = *((unsigned __int8 *)v15 + v17);
    if (v20 >= 2)
    {
      if (v17 <= 3)
        v21 = v17;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 32))(v14, v15, v16);
      v22 = 1;
    }
    else
    {
      v22 = 0;
      *v14 = *v15;
    }
    *((_BYTE *)v14 + v17) = v22;
  }
  return a1;
}

uint64_t sub_1EAFF8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v18;
  int v19;
  int v20;
  unint64_t v21;
  unsigned int v22;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v9 = 8;
  if (*(_QWORD *)(v8 + 64) > 8uLL)
    v9 = *(_QWORD *)(v8 + 64);
  if (v7 <= 0xFE)
    v10 = 254;
  else
    v10 = v7;
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = *(_QWORD *)(v6 + 64);
  v13 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  if (a2 <= v10)
    goto LABEL_26;
  v14 = v9 + ((v12 + v13 + ((v11 + 48) & ~v11)) & ~v13) + 1;
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v18 = ((a2 - v10 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v18 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v18 < 2)
    {
LABEL_26:
      v21 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v11 + 32) & ~v11;
      if (v7 >= 0xFE)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v21, v7, v5);
      v22 = *(unsigned __int8 *)(((v21 + v12 + v13) & ~v13) + v9);
      if (v22 >= 2)
        return (v22 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_26;
LABEL_17:
  v19 = (v16 - 1) << v15;
  if (v14 > 3)
    v19 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v20 = v14;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v10 + v19 + 1;
}

void sub_1EB1D4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v10 = *(_QWORD *)(v9 + 64);
  if (v10 <= 8)
    v10 = 8;
  if (v8 <= 0xFE)
    v11 = 254;
  else
    v11 = v8;
  v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = ((*(_QWORD *)(v7 + 64)
        + v12
        + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~v12)
      + v10
      + 1;
  if (a3 <= v11)
  {
    v14 = 0;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = &dword_4;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = &dword_0 + 1;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_1EB488()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1EB470);
}

void sub_1EB498()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x1EB470);
}

void sub_1EB4A0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x1EB470);
}

void sub_1EB4AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3DBFA8)
  {
    v2 = type metadata accessor for LayoutDirection(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3DBFA8);
  }
}

ValueMetadata *type metadata accessor for FadingTextLayout()
{
  return &type metadata for FadingTextLayout;
}

uint64_t sub_1EB510(uint64_t a1)
{
  double *v1;
  double *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for ColorRenderingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v11 = __chkstk_darwin(v10);
  v12 = *v2;
  v13 = v2[1];
  (*(void (**)(char *, double *, uint64_t, __n128))(v8 + 16))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1, v11);
  v14 = *(unsigned __int8 *)(v8 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(&unk_38A678, v15 + v9, v14 | 7);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ColorRenderingMode.nonLinear(_:), v4);
  return Image.init(size:label:opaque:colorMode:renderer:)(0, 0, 0, 0, 0, v7, sub_1EC2A4, v16, v12, v13);
}

uint64_t sub_1EB664(uint64_t *a1, double *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t result;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  double v53;
  double v54;
  __n128 v55;
  uint64_t v56;
  double MaxX;
  double MaxY;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  _QWORD v64[5];
  _QWORD v65[6];
  CGRect v66;
  CGRect v67;

  v62 = a1;
  v8 = type metadata accessor for LayoutDirection(0);
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v59 - v13);
  v15 = type metadata accessor for GraphicsContext.Shading(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  Path.init(_:)(v64, 0.0, 0.0, *a2, a2[1]);
  v21 = type metadata accessor for FadingTextForeground(0, a3, a4, v20);
  static GraphicsContext.Shading.style<A>(_:)((char *)a2 + *(int *)(v21 + 40), a3, a4);
  GraphicsContext.fill(_:with:style:)(v64, v18, 256, v19);
  sub_19DE08((uint64_t)v64);
  v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23 = v15;
  v24 = v62;
  v22(v18, v23);
  GraphicsContext.blendMode.setter(23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2648);
  v26 = swift_allocObject(v25, 48, 7);
  *(_OWORD *)(v26 + 16) = xmmword_2EFA20;
  *(_QWORD *)(v26 + 32) = static Color.clear.getter();
  v28 = static Color.white.getter(v27);
  *(_QWORD *)(v26 + 40) = v28;
  v65[0] = v26;
  specialized Array._endMutation()(v28);
  v63 = v65[0];
  v29 = a2;
  sub_150AC(v14);
  v30 = v60;
  v31 = v61;
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v10, enum case for LayoutDirection.rightToLeft(_:), v61);
  LOBYTE(v26) = static LayoutDirection.== infix(_:_:)(v14, v10);
  v32 = *(void (**)(char *, uint64_t))(v30 + 8);
  v32(v10, v31);
  result = ((uint64_t (*)(_QWORD *, uint64_t))v32)(v14, v31);
  v34 = v63;
  if ((v26 & 1) != 0 && (v35 = *(_QWORD *)(v63 + 16), v35 >= 2))
  {
    v36 = v18;
    v37 = v35 + 3;
    v38 = 4;
    while (1)
    {
      v39 = v63;
      v40 = *(_QWORD *)(v63 + 16);
      if (v38 - 4 >= v40)
        break;
      if (v37 - 4 >= v40)
        goto LABEL_15;
      v41 = *(_QWORD *)(v63 + 8 * v38);
      v42 = *(_QWORD *)(v63 + 8 * v37);
      swift_retain(v41);
      swift_retain(v42);
      if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
      {
        v39 = sub_E1D5C(v39);
        v63 = v39;
      }
      v43 = *(_QWORD *)(v39 + 8 * v38);
      *(_QWORD *)(v39 + 8 * v38) = v42;
      swift_release(v43);
      specialized Array._endMutation()(v44);
      v45 = v63;
      result = swift_isUniquelyReferenced_nonNull_native(v63);
      if ((result & 1) == 0)
      {
        result = sub_E1D5C(v45);
        v45 = result;
        v63 = result;
      }
      if (v37 - 4 >= *(_QWORD *)(v45 + 16))
        goto LABEL_16;
      v46 = *(_QWORD *)(v45 + 8 * v37);
      *(_QWORD *)(v45 + 8 * v37) = v41;
      swift_release(v46);
      result = specialized Array._endMutation()(v47);
      v48 = v38 - 3;
      v49 = v37 - 5;
      --v37;
      ++v38;
      if (v48 >= v49)
      {
        v18 = v36;
        v24 = v62;
        v34 = v63;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    v50 = *v24;
    v51 = v29[2];
    v52 = v29[3];
    v53 = v29[4];
    v54 = v29[5];
    Path.init(_:)(v65, v51, v52, v53, v54);
    v56 = Gradient.init(colors:)(v34, v55);
    v66.origin.x = v51;
    v66.origin.y = v52;
    v66.size.width = v53;
    v66.size.height = v54;
    MaxX = CGRectGetMaxX(v66);
    v67.origin.x = v51;
    v67.origin.y = v52;
    v67.size.width = v53;
    v67.size.height = v54;
    MaxY = CGRectGetMaxY(v67);
    static GraphicsContext.Shading.linearGradient(_:startPoint:endPoint:options:)(v56, 0, v51, v52, MaxX, MaxY);
    swift_bridgeObjectRelease(v56);
    GraphicsContext.fill(_:with:style:)(v65, v18, 256, v50);
    sub_19DE08((uint64_t)v65);
    return ((uint64_t (*)(char *, uint64_t))v22)(v18, v23);
  }
  return result;
}

uint64_t sub_1EBA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _OWORD v87[3];
  _OWORD v88[3];

  v66 = a1;
  v70 = a3;
  WitnessTable = swift_getWitnessTable(&unk_2FEE1C, a2);
  v6 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBFB8);
  v8 = type metadata accessor for ModifiedContent(0, v6, v7);
  v64 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v65 = (char *)&v63 - v13;
  v15 = *(_QWORD *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 24);
  v16 = type metadata accessor for _ForegroundStyleModifier(255, v15, v14, v12);
  v69 = v6;
  v67 = v16;
  v17 = type metadata accessor for ModifiedContent(0, v6, v16);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v63 - v23;
  v25 = type metadata accessor for _ConditionalContent(0, v17, v8, v22);
  __chkstk_darwin(v25);
  v68 = (char *)&v63 - v26;
  v27 = *(double *)(v3 + 32);
  v72 = v28;
  v71 = v29;
  if (v27 == 0.0 && *(double *)(v3 + 40) == 0.0)
  {
    v30 = v3 + *(int *)(a2 + 40);
    v31 = v69;
    v32 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v69);
    View.foregroundStyle<A>(_:)(v30, v31, v15, v32, v14);
    v33 = v67;
    v34 = swift_getWitnessTable(&protocol conformance descriptor for _ForegroundStyleModifier<A>, v67);
    v75 = v32;
    v76 = v34;
    v35 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
    v36 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
    v36(v24, v20, v17);
    v37 = *(void (**)(char *, uint64_t))(v18 + 8);
    v37(v20, v17);
    v36(v20, v24, v17);
    v38 = v31;
    v39 = sub_10EDC(&qword_3DBFC0, &qword_3DBFB8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    v73 = v32;
    v74 = v39;
    v40 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    v41 = v68;
    sub_1E82B8((uint64_t)v20, v17, v8, v35, v40);
    v37(v20, v17);
    v37(v24, v17);
    v42 = v33;
  }
  else
  {
    v43 = sub_1EB510(a2);
    ImagePaint.init(image:sourceRect:scale:)(v88, v43, 0.0, 0.0, 1.0, 1.0, 1.0);
    v87[0] = v88[0];
    v87[1] = v88[1];
    v87[2] = v88[2];
    v38 = v69;
    v44 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v69);
    View.foregroundStyle<A>(_:)(v87, v38, &type metadata for ImagePaint, v44, &protocol witness table for ImagePaint);
    sub_1EC1AC(v88);
    v45 = sub_10EDC(&qword_3DBFC0, &qword_3DBFB8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    v85 = v44;
    v86 = v45;
    v46 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    v47 = v64;
    v48 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v49 = v65;
    v48(v65, v10, v8);
    v50 = *(void (**)(char *, uint64_t))(v47 + 8);
    v50(v10, v8);
    v48(v10, v49, v8);
    v42 = v67;
    v51 = swift_getWitnessTable(&protocol conformance descriptor for _ForegroundStyleModifier<A>, v67);
    v83 = v44;
    v84 = v51;
    v52 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
    v53 = v68;
    sub_1E837C((uint64_t)v10, v17, v8, v52, v46);
    v50(v10, v8);
    v50(v49, v8);
    v41 = v53;
  }
  v54 = v70;
  v55 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v38);
  v56 = swift_getWitnessTable(&protocol conformance descriptor for _ForegroundStyleModifier<A>, v42);
  v81 = v55;
  v82 = v56;
  v57 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v58 = sub_10EDC(&qword_3DBFC0, &qword_3DBFB8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  v79 = v55;
  v80 = v58;
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  v77 = v57;
  v78 = v59;
  v60 = v72;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v72);
  v61 = v71;
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v54, v41, v60);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v41, v60);
}

uint64_t sub_1EBFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = type metadata accessor for LayoutSubview(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = LayoutSubviews.subscript.getter(0);
  LayoutSubview.spacing.getter(v4);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

double sub_1EC03C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  double v11;
  _BYTE v13[16];

  v7 = type metadata accessor for LayoutSubview(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LayoutSubviews.subscript.getter(0);
  v13[8] = a2 & 1;
  v13[0] = a4 & 1;
  v11 = LayoutSubview.sizeThatFits(_:)(a1);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_1EC118(uint64_t a1, char a2, uint64_t a3, char a4, double a5, double a6, CGFloat a7, CGFloat a8)
{
  return sub_1EC440(a1, a2 & 1, a5, a6, a7, a8, a3, a4 & 1);
}

unint64_t sub_1EC134()
{
  unint64_t result;

  result = qword_3DBFB0;
  if (!qword_3DBFB0)
  {
    result = swift_getWitnessTable("ݹ\b", &type metadata for FadingTextLayout);
    atomic_store(result, (unint64_t *)&qword_3DBFB0);
  }
  return result;
}

uint64_t sub_1EC178(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_33128C, 1);
}

_QWORD *sub_1EC1AC(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

uint64_t sub_1EC1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for FadingTextForeground(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v9 + *(int *)(v6 + 40), v5);
  v11 = (_QWORD *)(v4 + v9 + *(int *)(v6 + 44));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE8);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  return swift_deallocObject(v4, v9 + v10, v8 | 7);
}

uint64_t sub_1EC2A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FadingTextForeground(0, v6, v7, a4) - 8) + 80);
  return sub_1EB664(a1, (double *)(v4 + ((v8 + 32) & ~v8)), v6, v7);
}

uint64_t sub_1EC2FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(void);
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void (*)(void))__chkstk_darwin(v6);
  v11 = (char *)&v15 - v10;
  v9();
  v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v12(v11, v8, a2);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  v12(a3, v11, a2);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_1EC3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_1EC440(uint64_t a1, char a2, double a3, double a4, CGFloat a5, CGFloat a6, uint64_t a7, char a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  char v33;
  char v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  void (*v49)(_BYTE *, uint64_t);
  _BYTE v51[112];
  CGRect v52;
  CGRect v53;

  v15 = type metadata accessor for LayoutSubview(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v51[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v21 = &v51[-v20];
  LayoutSubviews.subscript.getter(0);
  LayoutSubviews.subscript.getter(1);
  a2 &= 1u;
  v51[96] = a2;
  v51[88] = a8 & 1;
  v22 = LayoutSubview.sizeThatFits(_:)(a1);
  v24 = v23;
  v25 = v23;
  v27 = static UnitPoint.topLeading.getter(v26);
  v51[80] = 0;
  v51[72] = 0;
  LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v22, 0, *(_QWORD *)&v25, 0, a3, a4, v27, v28);
  v51[64] = a2;
  v51[56] = 1;
  v30 = LayoutSubview.sizeThatFits(_:)(a1);
  if (v31 <= v24)
  {
    v41 = static UnitPoint.topLeading.getter(v29);
    v43 = v48;
    v51[16] = 0;
    v51[8] = 0;
    v44 = 0.0;
    v45 = 0.0;
    v46 = 0.0;
    v47 = 0.0;
  }
  else
  {
    v32 = static ProposedViewSize.unspecified.getter(v30);
    v51[48] = v33 & 1;
    v51[40] = v34 & 1;
    LayoutSubview.sizeThatFits(_:)(v32);
    v36 = v35;
    if (qword_3CFAE0 != -1)
      swift_once(&qword_3CFAE0, sub_1E8570);
    if (v22 >= *(double *)&qword_3DBE60)
      v37 = *(double *)&qword_3DBE60;
    else
      v37 = v22;
    v52.origin.x = a3;
    v52.origin.y = a4;
    v52.size.width = a5;
    v52.size.height = a6;
    v38 = v22 + CGRectGetMinX(v52) - v37;
    v53.origin.x = a3;
    v53.origin.y = a4;
    v53.size.width = a5;
    v53.size.height = a6;
    v39 = v24 + CGRectGetMinY(v53) - v36;
    v41 = static UnitPoint.topLeading.getter(v40);
    v43 = v42;
    v51[32] = 0;
    v51[24] = 0;
    v44 = v38;
    v45 = v39;
    v46 = v37;
    v47 = v36;
  }
  LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v46, 0, *(_QWORD *)&v47, 0, v44, v45, v41, v43);
  v49 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
  v49(v18, v15);
  return ((uint64_t (*)(_BYTE *, uint64_t))v49)(v21, v15);
}

uint64_t sub_1EC6E0()
{
  return EnvironmentValues.truncationMode.getter();
}

uint64_t sub_1EC700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1EC3C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for Text.TruncationMode, (uint64_t (*)(char *))&EnvironmentValues.truncationMode.setter);
}

uint64_t sub_1EC724(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DBFC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1EC76C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DBFD0;
  if (!qword_3DBFD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBE78);
    sub_10EDC(&qword_3DBFD8, &qword_3DBFC8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DBFD0);
  }
  return result;
}

uint64_t objectdestroyTm_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for FadingText(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  v12 = v4 + v9;
  v13 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12 + v6[9], v5);
  swift_release(*(_QWORD *)(v12 + v6[10] + 16));
  swift_release(*(_QWORD *)(v12 + v6[11] + 32));
  return swift_deallocObject(v4, v10, v11);
}

uint64_t sub_1EC8B0(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v13;

  v13 = type metadata accessor for FadingText(0, *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), a8);
  return sub_1E8714(v13, a1, a2, a3, a4);
}

unint64_t sub_1EC91C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DBFE8;
  if (!qword_3DBFE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBFE0);
    sub_11590C();
    sub_1EC988();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DBFE8);
  }
  return result;
}

unint64_t sub_1EC988()
{
  unint64_t result;

  result = qword_3DBFF0;
  if (!qword_3DBFF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _HiddenModifier, &type metadata for _HiddenModifier);
    atomic_store(result, (unint64_t *)&qword_3DBFF0);
  }
  return result;
}

uint64_t sub_1EC9CC()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_1EC9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1EC3C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t sub_1ECA10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1ECA20()
{
  unint64_t result;

  result = qword_3DC000;
  if (!qword_3DC000)
  {
    result = swift_getWitnessTable(&unk_2FEDA4, &type metadata for FadingTextLayout);
    atomic_store(result, (unint64_t *)&qword_3DC000);
  }
  return result;
}

uint64_t sub_1ECA64@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1EC2FC(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1ECA74(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for FadingTextForeground(255, *a1, v5, a4);
  WitnessTable = swift_getWitnessTable(&unk_2FEE1C, v6);
  v8 = type metadata accessor for _ViewModifier_Content(255, v6, WitnessTable);
  v10 = type metadata accessor for _ForegroundStyleModifier(255, v4, v5, v9);
  v11 = type metadata accessor for ModifiedContent(255, v8, v10);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DBFB8);
  v13 = type metadata accessor for ModifiedContent(255, v8, v12);
  v15 = type metadata accessor for _ConditionalContent(255, v11, v13, v14);
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _ForegroundStyleModifier<A>, v10);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  sub_10EDC(&qword_3DBFC0, &qword_3DBFB8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v15);
}

void sub_1ECBD4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v5 = NSObject.hashValue.getter(objc_msgSend(a1, "setPreservesSuperviewLayoutMargins:", 1));
  v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiViewHostingPalette_configurations);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiViewHostingPalette_configurations, v10, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
  v9 = *v6;
  *v6 = 0x8000000000000000;
  sub_15F710((_OWORD *)a2, v5, isUniquelyReferenced_nonNull_native);
  v8 = *v6;
  *v6 = v9;
  swift_bridgeObjectRelease(v8);
  swift_endAccess(v10);
  sub_2B1174(a1, *(_QWORD *)(a2 + 40), *(double *)(a2 + 8), *(double *)(a2 + 16), *(double *)(a2 + 24), *(double *)(a2 + 32));
}

void sub_1ECCB0(uint64_t a1)
{
  char *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v2 = v1;
  v3 = (void *)a1;
  if (qword_3CFAE8 != -1)
    a1 = swift_once(&qword_3CFAE8, sub_1ED000);
  v17 = xmmword_3FD020;
  v18 = xmmword_3FD030;
  v4 = qword_3FD040;
  v5 = qword_3FD048;
  v6 = NSObject.hashValue.getter(a1);
  v7 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiViewHostingPalette_configurations];
  swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiViewHostingPalette_configurations], aBlock, 32, 0);
  v8 = *(_QWORD *)v7;
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = sub_36F84(v6);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(v8 + 56) + 48 * v9;
      v17 = *(_OWORD *)v11;
      v18 = *(_OWORD *)(v11 + 16);
      v4 = *(_QWORD *)(v11 + 32);
      v5 = *(_QWORD *)(v11 + 40);
    }
  }
  swift_endAccess(aBlock);
  sub_2B13E8(v3, 0, 0);
  v12 = (void *)objc_opt_self(UIView);
  v13 = swift_allocObject(&unk_38A8F8, 72, 7);
  *(_QWORD *)(v13 + 16) = v2;
  *(_OWORD *)(v13 + 24) = v17;
  *(_OWORD *)(v13 + 40) = v18;
  *(_QWORD *)(v13 + 56) = v4;
  *(_QWORD *)(v13 + 64) = v5;
  aBlock[4] = sub_1ED2F0;
  v20 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_6_6;
  v14 = _Block_copy(aBlock);
  v15 = v20;
  v16 = v2;
  swift_release(v15);
  objc_msgSend(v12, "animateWithDuration:animations:", v14, 0.3);
  _Block_release(v14);
}

void sub_1ECE78(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  void *v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  double *v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[5];
  uint64_t v21;

  v2 = v1;
  v3 = sub_2B1834(a1, 0, 0);
  v4 = v3;
  v5 = 0.0;
  if (v3)
  {
    v6 = NSObject.hashValue.getter(v3);
    v7 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiViewHostingPalette_configurations];
    swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiViewHostingPalette_configurations], v20, 32, 0);
    v8 = *(_QWORD *)v7;
    if (*(_QWORD *)(v8 + 16) && (v9 = sub_36F84(v6), (v10 & 1) != 0))
    {
      v11 = (double *)(*(_QWORD *)(v8 + 56) + 48 * v9);
      v12 = *v11;
      v13 = v11[1];
      v14 = v11[3];
      swift_endAccess(v20);
      v5 = v12 + v13 + v14;
    }
    else
    {
      swift_endAccess(v20);
    }
  }
  v15 = (void *)objc_opt_self(UIView);
  v16 = swift_allocObject(&unk_38A8A8, 32, 7);
  *(_QWORD *)(v16 + 16) = v2;
  *(double *)(v16 + 24) = v5;
  v20[4] = sub_1ED2A0;
  v21 = v16;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_24360;
  v20[3] = &block_descriptor_46;
  v17 = _Block_copy(v20);
  v18 = v21;
  v19 = v2;
  swift_release(v18);
  objc_msgSend(v15, "animateWithDuration:animations:", v17, 0.3);

  _Block_release(v17);
}

__n128 sub_1ED000()
{
  __n128 result;
  __int128 v1;

  *(_QWORD *)&xmmword_3FD020 = 0x4040000000000000;
  result = *(__n128 *)&NSDirectionalEdgeInsetsZero.top;
  v1 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(__int128 *)((char *)&xmmword_3FD020 + 8) = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *(__int128 *)((char *)&xmmword_3FD030 + 8) = v1;
  qword_3FD048 = 0;
  return result;
}

char *sub_1ED02C()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  double leading;
  double bottom;
  double trailing;
  id v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiViewHostingPalette_cycleView;
  v3 = objc_allocWithZone((Class)type metadata accessor for CycleView());
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, "init");
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiViewHostingPalette_configurations] = &_swiftEmptyDictionarySingleton;

  v5 = type metadata accessor for SizeClassAutoMarginView();
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "init");
  v16.receiver = v4;
  v16.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v16, "initWithContentView:", v6);

  v8 = (char *)v7;
  objc_msgSend(v8, "_setContentViewMarginType:", 0);
  objc_msgSend(v8, "_setDisplaysWhenSearchActive:", 1);
  v9 = *(void **)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiViewHostingPalette_cycleView];
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setPreservesSuperviewLayoutMargins:", 1);
  v10 = objc_msgSend(v8, "contentView");
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v14 = v9;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v14, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  return v8;
}

uint64_t type metadata accessor for MultiViewHostingPalette()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23MultiViewHostingPalette);
}

ValueMetadata *type metadata accessor for MultiViewHostingPalette.Configuration()
{
  return &type metadata for MultiViewHostingPalette.Configuration;
}

uint64_t sub_1ED27C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1ED2A0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setPreferredHeight:", *(double *)(v0 + 24));
}

uint64_t block_copy_helper_46(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_46(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1ED2CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 72, 7);
}

id sub_1ED2F0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setPreferredHeight:", *(double *)(v0 + 24) + *(double *)(v0 + 32) + *(double *)(v0 + 48));
}

uint64_t destroy for CategorySelectionGrid(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_release(a1[1]);
}

uint64_t _s23ShelfKitCollectionViews21CategorySelectionGridVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for CategorySelectionGrid(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = *((_BYTE *)a2 + 16);
  v8 = a1[1];
  a1[1] = v6;
  *((_BYTE *)a1 + 16) = v7;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for CategorySelectionGrid(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  v5 = *((_BYTE *)a2 + 16);
  v6 = a1[1];
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = v5;
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimatedTransitionWithTasks.TransitionTaskAction(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimatedTransitionWithTasks.TransitionTaskAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CategorySelectionGrid()
{
  return &type metadata for CategorySelectionGrid;
}

uint64_t sub_1ED4DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_331348, 1);
}

uint64_t sub_1ED4EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC058);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC060);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  v14 = swift_allocObject(&unk_38A9C8, 33, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_BYTE *)(v14 + 32) = a3 & 1;
  swift_retain(a2);
  swift_bridgeObjectRetain_n(a1, 2);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1938);
  v16 = type metadata accessor for CategorySelectionChip(0);
  v17 = sub_10EDC(&qword_3D1940, &qword_3D1938, (uint64_t)&protocol conformance descriptor for [A]);
  v18 = sub_89A0(&qword_3DC068, type metadata accessor for CategorySelectionChip, (uint64_t)&unk_300A70);
  v19 = sub_89A0(&qword_3D1950, (uint64_t (*)(uint64_t))&type metadata accessor for Category, (uint64_t)&protocol conformance descriptor for Category);
  ForEach<>.init(_:content:)(&v22, sub_1ED7F4, v14, v15, &type metadata for AdamID, v16, v17, v18, v19);
  sub_D184((uint64_t)v10, (uint64_t)v13, &qword_3DC058);
  v13[*(int *)(v11 + 36)] = 0;
  sub_D1D4((uint64_t)v10, &qword_3DC058);
  sub_D184((uint64_t)v13, a4, &qword_3DC060);
  *(_WORD *)(a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DC070) + 36)) = 0;
  return sub_D1D4((uint64_t)v13, &qword_3DC060);
}

uint64_t sub_1ED700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;

  v7 = a3 & 1;
  v8 = type metadata accessor for Category(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a2);
  v13 = sub_14A78(v12, v7);
  v14 = swift_release(a2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, a1, v8, v14);
  return sub_21EA48(v13, (uint64_t)v11, a4);
}

uint64_t sub_1ED7BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ED4EC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_1ED7C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1ED7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1ED700(a1, *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), a2);
}

ValueMetadata *type metadata accessor for CategorySelectionGridLayout()
{
  return &type metadata for CategorySelectionGridLayout;
}

unint64_t sub_1ED814()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DC078;
  if (!qword_3DC078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DC070);
    sub_1ED898();
    sub_10EDC(&qword_3DC0B0, &qword_3DC0B8, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DC078);
  }
  return result;
}

unint64_t sub_1ED898()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DC080;
  if (!qword_3DC080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DC060);
    sub_1ED91C();
    sub_10EDC(&qword_3D86D8, &qword_3D86E0, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DC080);
  }
  return result;
}

unint64_t sub_1ED91C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DC088;
  if (!qword_3DC088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DC058);
    sub_10EDC(&qword_3DC090, &qword_3DC098, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_1ED9A0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DC088);
  }
  return result;
}

unint64_t sub_1ED9A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DC0A0;
  if (!qword_3DC0A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DC0A8);
    sub_89A0(&qword_3DC068, type metadata accessor for CategorySelectionChip, (uint64_t)&unk_300A70);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_3DC0A0);
  }
  return result;
}

void sub_1EDA1C()
{
  qword_3DC048 = 0x4028000000000000;
}

void sub_1EDA2C()
{
  qword_3DC050 = 0x4024000000000000;
}

uint64_t sub_1EDA3C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t result;
  _QWORD *v7;

  v5 = *a1;
  result = LayoutSubviews.subscript.getter(*a1);
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v5 < *(_QWORD *)(a2 + 16))
  {
    result = type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(0);
    *(_OWORD *)(a3 + *(int *)(result + 20)) = *(_OWORD *)(a2 + 16 * v5 + 32);
    v7 = (_QWORD *)(a3 + *(int *)(result + 24));
    *v7 = 0;
    v7[1] = 0;
    return result;
  }
  __break(1u);
  return result;
}

void sub_1EDAC0(_QWORD *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
}

double sub_1EDAD0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  return sub_1EE340(a1, a2 & 1, a5, a6);
}

void sub_1EDAE0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  sub_1EE594(a1, a2, a3, a4, a9, a10);
}

unint64_t sub_1EDAF0()
{
  unint64_t result;

  result = qword_3DC0C0;
  if (!qword_3DC0C0)
  {
    result = swift_getWitnessTable(&unk_2FEFCC, &type metadata for CategorySelectionGridLayout);
    atomic_store(result, (unint64_t *)&qword_3DC0C0);
  }
  return result;
}

void sub_1EDB34(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void (*v17)(_QWORD *, _QWORD);
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  double *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  double v31;
  int64_t v32;
  unint64_t v33;
  double v34;
  double v35;
  double v36;
  unint64_t v37;
  double v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  double v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  unint64_t v48;
  unint64_t i;
  unint64_t v50;
  unint64_t v51;
  uint64_t v53;
  uint64_t v54;
  double v55;
  unint64_t v56;
  double *v57;
  double v58;
  double v59;
  unint64_t v60;
  double *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  double v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  _QWORD v71[4];
  char v72[8];
  _QWORD *v73;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D5830);
  __chkstk_darwin(v4);
  v64 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v69 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LayoutSubview(0);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LayoutSubviews(0);
  v13 = sub_89A0((unint64_t *)&qword_3D9678, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v14 = dispatch thunk of Collection.count.getter(v12, v13);
  v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    v16 = v14;
    v73 = _swiftEmptyArrayStorage;
    sub_F35A4(0, v14 & ~(v14 >> 63), 0);
    dispatch thunk of Collection.startIndex.getter(v12, v13);
    if (v16 < 0)
      goto LABEL_91;
    v65 = a2;
    v66 = a1;
    do
    {
      v17 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v71, v72, v12, v13);
      v19 = v67;
      v18 = v68;
      (*(void (**)(char *))(v67 + 16))(v11);
      v17(v71, 0);
      LOBYTE(v71[0]) = 0;
      v70 = 1;
      v20 = LayoutSubview.sizeThatFits(_:)(*(_QWORD *)&v65);
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v18);
      v15 = v73;
      if ((swift_isUniquelyReferenced_nonNull_native(v73) & 1) == 0)
      {
        sub_F35A4(0, v15[2] + 1, 1);
        v15 = v73;
      }
      v24 = v15[2];
      v23 = v15[3];
      if (v24 >= v23 >> 1)
      {
        sub_F35A4(v23 > 1, v24 + 1, 1);
        v15 = v73;
      }
      v15[2] = v24 + 1;
      v25 = (double *)&v15[2 * v24];
      v25[4] = v20;
      *((_QWORD *)v25 + 5) = v22;
      a1 = v66;
      dispatch thunk of Collection.formIndex(after:)(v72, v12, v13);
      --v16;
    }
    while (v16);
  }
  dispatch thunk of Collection.startIndex.getter(v12, v13);
  v26 = dispatch thunk of Collection.endIndex.getter(&v73, v12, v13);
  if ((uint64_t)v73 < v71[0])
    goto LABEL_89;
  __chkstk_darwin(v26);
  *(&v64 - 2) = a1;
  *(&v64 - 1) = (uint64_t)v15;
  sub_187898((void (*)(uint64_t *))sub_1EE764, (uint64_t)(&v64 - 4), v27, v28);
  v30 = v29;
  swift_bridgeObjectRelease(v15);
  v71[0] = v30;
  v31 = *(double *)(v30 + 16);
  if (v31 != 0.0)
  {
    v32 = 0;
    v33 = 0;
    v34 = a2 * 0.5;
    v35 = 0.0;
    v36 = 0.0;
    v65 = *(double *)(v30 + 16);
    do
    {
      if (v33)
      {
        if (qword_3CFAF8 != -1)
          swift_once(&qword_3CFAF8, sub_1EDA2C);
        v37 = *(_QWORD *)(v30 + 16);
        if (v33 >= v37)
          goto LABEL_82;
        v38 = *(double *)&qword_3DC050
            + *(double *)(v30
                        + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
                        + *(_QWORD *)(v7 + 72) * v33
                        + *(int *)(v6 + 20));
        v39 = *(unsigned __int8 *)(v7 + 80);
      }
      else
      {
        v37 = *(_QWORD *)(v30 + 16);
        if (!v37)
          goto LABEL_85;
        v39 = *(unsigned __int8 *)(v7 + 80);
        v38 = *(double *)(v30 + ((v39 + 32) & ~v39) + *(int *)(v6 + 20));
      }
      v67 = v39;
      v68 = v33 + 1;
      if (v38 <= a2 - v35)
      {
        if ((uint64_t)v33 < v32)
          goto LABEL_84;
        v35 = v35 + v38;
        v42 = v34 + v35 * -0.5;
        if (v32 != v33)
        {
          v48 = (v39 + 32) & ~(unint64_t)v39;
          for (i = v32; v33 != i; ++i)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) != 0)
            {
              if (v32 < 0)
                goto LABEL_75;
            }
            else
            {
              v30 = sub_E1D70(v30);
              if (v32 < 0)
              {
LABEL_75:
                __break(1u);
LABEL_76:
                __break(1u);
LABEL_77:
                __break(1u);
LABEL_78:
                __break(1u);
LABEL_79:
                __break(1u);
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
LABEL_82:
                __break(1u);
LABEL_83:
                __break(1u);
LABEL_84:
                __break(1u);
LABEL_85:
                __break(1u);
LABEL_86:
                __break(1u);
LABEL_87:
                __break(1u);
LABEL_88:
                __break(1u);
LABEL_89:
                __break(1u);
LABEL_90:
                __break(1u);
LABEL_91:
                __break(1u);
                return;
              }
            }
            if (i >= *(_QWORD *)(v30 + 16))
              goto LABEL_76;
            v50 = v30 + v48 + *(_QWORD *)(v7 + 72) * i;
            *(double *)(v50 + *(int *)(v6 + 24)) = v42;
            if (qword_3CFAF8 != -1)
              swift_once(&qword_3CFAF8, sub_1EDA2C);
            if (i >= *(_QWORD *)(v30 + 16))
              goto LABEL_77;
            v42 = v42 + *(double *)&qword_3DC050 + *(double *)(v50 + *(int *)(v6 + 20));
          }
        }
        v41 = v30;
      }
      else
      {
        if (v37 <= v33)
          goto LABEL_83;
        v40 = v68;
        if (v68 != v37)
        {
          v66 = (v39 + 32) & ~(unint64_t)v39;
          v43 = v30 + v66;
          swift_bridgeObjectRetain(v30);
          v44 = v40;
          while (1)
          {
            v45 = v69;
            if (v44 >= v37)
              goto LABEL_78;
            v46 = *(_QWORD *)(v7 + 72);
            sub_E4044(v43 + v46 * v44, v69);
            if (qword_3CFAF8 != -1)
              swift_once(&qword_3CFAF8, sub_1EDA2C);
            v47 = *(double *)&qword_3DC050 + *(double *)(v45 + *(int *)(v6 + 20));
            sub_1EE728(v45);
            if (v47 <= a2 - v35)
            {
              v41 = v71[0];
              v51 = *(_QWORD *)(v71[0] + 16);
              if (v44 < v51 && v33 < v51)
              {
                v53 = v69;
                sub_DFEE0(v44, v69);
                if (*(_QWORD *)(v71[0] + 16) < v33)
                  goto LABEL_90;
                v54 = v64;
                sub_E4044(v53, v64);
                sub_E1B14(v33, v33, v54);
                sub_1EE728(v53);
                v41 = v71[0];
                v51 = *(_QWORD *)(v71[0] + 16);
              }
              if (v33 >= v51)
                goto LABEL_87;
              if ((uint64_t)v33 < v32)
                goto LABEL_88;
              v55 = *(double *)&qword_3DC050;
              v35 = v35 + *(double *)&qword_3DC050 + *(double *)(v41 + v66 + v46 * v33 + *(int *)(v6 + 20));
              v42 = v34 + v35 * -0.5;
              if (v32 != v33)
              {
                v62 = v66 + v32 * v46;
                v63 = v32;
                do
                {
                  if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) != 0)
                  {
                    if (v32 < 0)
                      goto LABEL_80;
                  }
                  else
                  {
                    v41 = sub_E1D70(v41);
                    if (v32 < 0)
                      goto LABEL_80;
                  }
                  if (v63 >= *(_QWORD *)(v41 + 16))
                    goto LABEL_79;
                  ++v63;
                  *(double *)(v41 + *(int *)(v6 + 24) + v62) = v42;
                  v42 = v42 + v55 + *(double *)(v41 + *(int *)(v6 + 20) + v62);
                  v62 += v46;
                }
                while (v33 != v63);
              }
              swift_bridgeObjectRelease(v30);
              v31 = v65;
              goto LABEL_58;
            }
            if (v37 == ++v44)
            {
              v41 = v71[0];
              v31 = v65;
              LODWORD(v39) = v67;
              goto LABEL_54;
            }
          }
        }
        swift_bridgeObjectRetain(v30);
        v41 = v30;
LABEL_54:
        v56 = *(_QWORD *)(v41 + 16);
        if (v33 >= v56)
          goto LABEL_86;
        v57 = (double *)(v41
                       + ((v39 + 32) & ~(unint64_t)v39)
                       + *(_QWORD *)(v7 + 72) * v33
                       + *(int *)(v6 + 20));
        v35 = *v57;
        if (qword_3CFAF0 == -1)
        {
          if (v33 >= v56)
            goto LABEL_73;
        }
        else
        {
          swift_once(&qword_3CFAF0, sub_1EDA1C);
          if (v33 >= *(_QWORD *)(v41 + 16))
          {
LABEL_73:
            __break(1u);
            return;
          }
        }
        v42 = v34 + v35 * -0.5;
        v58 = *(double *)&qword_3DC048;
        v59 = v57[1];
        swift_bridgeObjectRelease(v30);
        v36 = v36 + v58 + v59;
        v32 = v33;
      }
LABEL_58:
      if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) != 0)
        v30 = v41;
      else
        v30 = sub_E1D70(v41);
      v60 = v68;
      if (v33 >= *(_QWORD *)(v30 + 16))
        goto LABEL_81;
      v61 = (double *)(v30
                     + ((v67 + 32) & ~(unint64_t)v67)
                     + *(_QWORD *)(v7 + 72) * v33
                     + *(int *)(v6 + 24));
      *v61 = v42;
      v61[1] = v36;
      v71[0] = v30;
      v33 = v60;
    }
    while (v60 != *(_QWORD *)&v31);
  }
}

double sub_1EE340(uint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  _QWORD *v24;

  v8 = type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    v12 = 10.0;
  else
    v12 = *(double *)&a1;
  sub_1EDB34(a3, v12);
  v14 = v13;
  if (*(_QWORD *)(v13 + 16))
  {
    v15 = v13 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v16 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRelease(*a4);
    *a4 = v14;
    v17 = *(_QWORD *)(v14 + 16);
    v18 = _swiftEmptyArrayStorage;
    if (v17)
    {
      v24 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v14);
      sub_F3470(0, v17, 0);
      v18 = v24;
      do
      {
        sub_E4044(v15, (uint64_t)v11);
        v19 = *(_QWORD *)&v11[*(int *)(v8 + 20) + 8];
        sub_1EE728((uint64_t)v11);
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        {
          sub_F3470(0, v18[2] + 1, 1);
          v18 = v24;
        }
        v21 = v18[2];
        v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          sub_F3470(v20 > 1, v21 + 1, 1);
          v18 = v24;
        }
        v18[2] = v21 + 1;
        v18[v21 + 4] = v19;
        v15 += v16;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease(v14);
    }
    sub_2C4BFC((uint64_t)v18);
    swift_bridgeObjectRelease(v18);
    if (qword_3CFAF0 != -1)
      swift_once(&qword_3CFAF0, sub_1EDA1C);
  }
  else
  {
    swift_bridgeObjectRelease(v13);
    return 0.0;
  }
  return v12;
}

void sub_1EE594(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  _BYTE v31[16];
  CGRect v32;
  CGRect v33;

  v11 = type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(0);
  __chkstk_darwin(v11);
  v15 = &v31[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *a6;
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = (double *)&v15[*(int *)(v12 + 24)];
    v19 = (uint64_t *)&v15[*(int *)(v12 + 20)];
    v20 = v16 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v21 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain(v16);
    do
    {
      sub_E4044(v20, (uint64_t)v15);
      v22 = *v18;
      v32.origin.x = a1;
      v32.origin.y = a2;
      v32.size.width = a3;
      v32.size.height = a4;
      v23 = v22 + CGRectGetMinX(v32);
      v24 = v18[1];
      v33.origin.x = a1;
      v33.origin.y = a2;
      v33.size.width = a3;
      v33.size.height = a4;
      v25 = v24 + CGRectGetMinY(v33);
      v27 = static UnitPoint.topLeading.getter(v26);
      v28 = *v19;
      v29 = v19[1];
      v31[8] = 0;
      v31[0] = 0;
      LayoutSubview.place(at:anchor:proposal:)(v28, 0, v29, 0, v23, v25, v27, v30);
      sub_1EE728((uint64_t)v15);
      v20 += v21;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease(v16);
  }
}

uint64_t type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(uint64_t a1)
{
  uint64_t result;

  result = qword_3DC120;
  if (!qword_3DC120)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CategorySelectionGridLayout.SubviewPlacement);
  return result;
}

uint64_t sub_1EE728(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1EE764@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1EDA3C(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t *sub_1EE780(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for LayoutSubview(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1EE810(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LayoutSubview(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1EE844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for LayoutSubview(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1EE8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = type metadata accessor for LayoutSubview(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  return a1;
}

uint64_t sub_1EE930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for LayoutSubview(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1EE994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for LayoutSubview(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1EE9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1EEA04);
}

uint64_t sub_1EEA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LayoutSubview(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1EEA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1EEA4C);
}

uint64_t sub_1EEA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LayoutSubview(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1EEA8C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for LayoutSubview(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_2FF0B8;
    v4[2] = &unk_2FF0B8;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LargeChartLockupCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews34LargeChartLockupCollectionViewCell);
}

double sub_1EEB8C@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;

  v2 = sub_23BFC();
  EnvironmentValues.subscript.getter(&v4, &type metadata for ActionRunnerEnvironmentKey, &type metadata for ActionRunnerEnvironmentKey, v2);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

uint64_t sub_1EEBD8(__int128 *a1)
{
  unint64_t v1;
  __int128 v3;

  v3 = *a1;
  v1 = sub_23BFC();
  swift_unknownObjectRetain(v3);
  return EnvironmentValues.subscript.setter(&v3, &type metadata for ActionRunnerEnvironmentKey, &type metadata for ActionRunnerEnvironmentKey, v1);
}

uint64_t View.withPodcastsBridge(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t WitnessTable;
  char *v32;
  uint64_t v33;
  char *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *Strong;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  __int128 v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v74 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DC8);
  v8 = type metadata accessor for ModifiedContent(0, a2, v7);
  v64 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DD0);
  v12 = type metadata accessor for ModifiedContent(0, v8, v11);
  v66 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v62 = (char *)&v61 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DD8);
  v15 = type metadata accessor for ModifiedContent(0, v12, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v65 = v15;
  v67 = v16;
  __chkstk_darwin(v15);
  v63 = (char *)&v61 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DE0);
  v19 = type metadata accessor for ModifiedContent(0, v15, v18);
  v68 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DE8);
  v69 = v19;
  v72 = type metadata accessor for ModifiedContent(0, v19, v22);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v70 = (char *)&v61 - v23;
  KeyPath = swift_getKeyPath(&unk_2FF120);
  v25 = *(_QWORD *)(a1 + 16);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  BaseObjectGraph.inject<A>(_:)(&v81, v26, v26);
  v61 = v81;
  View.environment<A>(_:_:)(KeyPath, &v81, a2, a3);
  swift_unknownObjectRelease(v61);
  swift_release(KeyPath);
  v27 = swift_getKeyPath(&unk_2FF148);
  v28 = type metadata accessor for InteractionContextAction();
  v29 = swift_allocObject(v28, 32, 7);
  *(_QWORD *)(v29 + 16) = sub_8DB3C;
  *(_QWORD *)(v29 + 24) = a1;
  *(_QWORD *)&v81 = v29;
  v30 = sub_3D970(&qword_3D1E08, &qword_3D1DC8);
  v88 = a3;
  v89 = v30;
  v73 = a1;
  swift_retain(a1);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  v32 = v62;
  View.environment<A>(_:_:)(v27, &v81, v8, WitnessTable);
  v33 = v29;
  v34 = v21;
  swift_release(v33);
  v35 = swift_release(v27);
  (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v10, v8, v35);
  v36 = swift_getKeyPath(&unk_2FF170);
  v37 = type metadata accessor for MetricsController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v81, v37, v37);
  v38 = v81;
  v39 = sub_3D970(&qword_3D1E10, &qword_3D1DD0);
  v86 = WitnessTable;
  v87 = v39;
  v40 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v41 = v63;
  View.environment<A>(_:_:)(v36, &v81, v12, v40);
  swift_release(v36);
  v42 = swift_release(v38);
  (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v32, v12, v42);
  v43 = swift_getKeyPath(&unk_2FF198);
  *(_QWORD *)&v81 = v25;
  v44 = sub_3D970(&qword_3D1E18, &qword_3D1DD8);
  v84 = v40;
  v85 = v44;
  swift_retain(v25);
  v45 = v65;
  v46 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v65);
  View.environment<A>(_:_:)(v43, &v81, v45, v46);
  swift_release(v25);
  v47 = swift_release(v43);
  (*(void (**)(char *, uint64_t, __n128))(v67 + 8))(v41, v45, v47);
  v48 = swift_getKeyPath(&unk_2FF1C8);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D30B8);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v79, v49, v49);
  if (v80)
  {
    sub_1B738(&v79, (uint64_t)&v81);
  }
  else
  {
    v82 = type metadata accessor for UniformBucketingStrategy(0);
    v83 = sub_1EF8C4();
    __swift_allocate_boxed_opaque_existential_0(&v81);
    static UniformBucketingStrategy.uniform3000MaxStrategy.getter();
    sub_1EF90C((uint64_t)&v79);
  }
  v50 = sub_3D970(&qword_3D1E20, &qword_3D1DE0);
  v77 = v46;
  v78 = v50;
  v51 = v69;
  v52 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v69);
  v53 = v70;
  View.environment<A>(_:_:)(v48, &v81, v51, v52);
  swift_release(v48);
  __swift_destroy_boxed_opaque_existential_0(&v81);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v51);
  v54 = swift_getKeyPath(&unk_2FF1F8);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v73 + 32);
  *(_QWORD *)&v81 = Strong;
  v56 = sub_3D970(&qword_3D1E28, &qword_3D1DE8);
  v75 = v52;
  v76 = v56;
  v57 = v72;
  v58 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v72);
  View.environment<A>(_:_:)(v54, &v81, v57, v58);

  v59 = swift_release(v54);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v71 + 8))(v53, v57, v59);
}

double sub_1EF254@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;

  v2 = sub_23BFC();
  EnvironmentValues.subscript.getter(&v4, &type metadata for ActionRunnerEnvironmentKey, &type metadata for ActionRunnerEnvironmentKey, v2);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

uint64_t PodcastsUIKitSwiftUIBridge.__allocating_init(asPartOf:responder:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _BYTE v10[24];

  v3 = v2;
  v6 = swift_allocObject(v3, 40, 7);
  swift_unknownObjectWeakInit(v6 + 24, 0);
  swift_unknownObjectWeakInit(v6 + 32, 0);
  *(_QWORD *)(v6 + 16) = a1;
  swift_beginAccess(v6 + 24, v10, 1, 0);
  swift_unknownObjectWeakAssign(v6 + 24, a2);
  if (a2)
  {
    v7 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
    v8 = (void *)swift_dynamicCastClass(a2, v7);
    if (!v8)

  }
  else
  {
    v8 = 0;
  }
  swift_unknownObjectWeakAssign(v6 + 32, v8);

  return v6;
}

uint64_t sub_1EF378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.objectGraph.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1EF3A0(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.objectGraph.setter(v1);
}

_QWORD *sub_1EF3C8@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_117EE0();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for MetricsControllerEnvironmentKey, &type metadata for MetricsControllerEnvironmentKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_1EF414(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v3;

  v3 = *a1;
  v1 = sub_117EE0();
  swift_retain(v3);
  return EnvironmentValues.subscript.setter(&v3, &type metadata for MetricsControllerEnvironmentKey, &type metadata for MetricsControllerEnvironmentKey, v1);
}

_QWORD *sub_1EF470@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1D8390();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for InteractionContextEnvironmentKey, &type metadata for InteractionContextEnvironmentKey, v2);
  *a1 = v4;
  return result;
}

_QWORD *sub_1EF4BC@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1D8390();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for InteractionContextEnvironmentKey, &type metadata for InteractionContextEnvironmentKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_1EF508(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v3;

  v3 = *a1;
  v1 = sub_1D8390();
  swift_retain(v3);
  return EnvironmentValues.subscript.setter(&v3, &type metadata for InteractionContextEnvironmentKey, &type metadata for InteractionContextEnvironmentKey, v1);
}

uint64_t sub_1EF568()
{
  return EnvironmentValues.artworkBucketingStrategy.getter();
}

uint64_t sub_1EF588(uint64_t a1)
{
  _BYTE v2[40];

  sub_1D5D4(a1, (uint64_t)v2);
  return EnvironmentValues.artworkBucketingStrategy.setter(v2);
}

uint64_t PodcastsUIKitSwiftUIBridge.responder.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 24);
}

void PodcastsUIKitSwiftUIBridge.responder.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  _BYTE v5[24];

  v3 = v1 + 24;
  v4 = swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1, v4);

}

void (*PodcastsUIKitSwiftUIBridge.responder.modify(_QWORD *a1))(id **a1, char a2, __n128 a3)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess(v1 + 24, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v1 + 24);
  return sub_1EF6B0;
}

void sub_1EF6B0(id **a1, char a2, __n128 a3)
{
  id *v4;
  id v5;

  v4 = *a1;
  v5 = (*a1)[3];
  swift_unknownObjectWeakAssign((char *)(*a1)[4] + 24, v5, a3);
  if ((a2 & 1) != 0)
  {

    swift_endAccess(v4);
  }
  else
  {
    swift_endAccess(v4);

  }
  free(v4);
}

uint64_t sub_1EF718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];

  v3 = a1 + 24;
  swift_beginAccess(a1 + 24, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong
    && (v5 = (void *)Strong, v6 = (void *)UIResponder.firstViewInResponderChain.getter(), v5, v6))
  {
    UIView.interactionContext.getter();

    v7 = type metadata accessor for InteractionContext(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 0, 1, v7);
  }
  else
  {
    v9 = type metadata accessor for InteractionContext(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
}

_QWORD *sub_1EF7D0@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_117EE0();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for MetricsControllerEnvironmentKey, &type metadata for MetricsControllerEnvironmentKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_1EF820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.objectGraph.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1EF848(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.objectGraph.setter(v1);
}

uint64_t sub_1EF870()
{
  return EnvironmentValues.artworkBucketingStrategy.getter();
}

uint64_t sub_1EF890(uint64_t a1)
{
  _BYTE v2[40];

  sub_1D5D4(a1, (uint64_t)v2);
  return EnvironmentValues.artworkBucketingStrategy.setter(v2);
}

unint64_t sub_1EF8C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D30C0;
  if (!qword_3D30C0)
  {
    v1 = type metadata accessor for UniformBucketingStrategy(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UniformBucketingStrategy, v1);
    atomic_store(result, (unint64_t *)&qword_3D30C0);
  }
  return result;
}

uint64_t sub_1EF90C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D30C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PodcastsUIKitSwiftUIBridge.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 24);
  swift_unknownObjectWeakDestroy(v0 + 32);
  return v0;
}

uint64_t PodcastsUIKitSwiftUIBridge.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 24);
  swift_unknownObjectWeakDestroy(v0 + 32);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t sub_1EF9B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + 24;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_1EFA00(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = *a2 + 24;
  v4 = swift_beginAccess(v3, v6, 1, 0);
  return swift_unknownObjectWeakAssign(v3, v2, v4);
}

uint64_t type metadata accessor for PodcastsUIKitSwiftUIBridge()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews26PodcastsUIKitSwiftUIBridge);
}

uint64_t method lookup function for PodcastsUIKitSwiftUIBridge(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PodcastsUIKitSwiftUIBridge);
}

uint64_t sub_1EFA78(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *a1;
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DC8);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DD0);
  v5 = type metadata accessor for ModifiedContent(255, v3, v4);
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DD8);
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DE0);
  v9 = type metadata accessor for ModifiedContent(255, v7, v8);
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DE8);
  v11 = type metadata accessor for ModifiedContent(255, v9, v10);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DF0);
  v13 = type metadata accessor for ModifiedContent(255, v11, v12);
  sub_3D970(&qword_3D1E08, &qword_3D1DC8);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
  sub_3D970(&qword_3D1E10, &qword_3D1DD0);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  sub_3D970(&qword_3D1E18, &qword_3D1DD8);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  sub_3D970(&qword_3D1E20, &qword_3D1DE0);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  sub_3D970(&qword_3D1E28, &qword_3D1DE8);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  sub_3D970((unint64_t *)&unk_3D1E30, &qword_3D1DF0);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
}

uint64_t static TabConverter.translateNavigationTab(for:interface:)(unint64_t a1, char a2, __n128 a3)
{
  uint64_t v3;

  v3 = a1;
  if ((a2 & 1) != 0)
  {
    if (a1 <= 0xE)
    {
      if (((1 << a1) & 0x7F60) != 0)
        goto LABEL_6;
      if (a1 == 7)
        return 17;
    }
    if ((static Podcasts.isUIPSidebarEnabled.getter(a3) & 1) != 0)
      return 7;
LABEL_6:
    sub_3D600(v3);
    return v3;
  }
  if (a1 - 5 >= 0xA)
    return 7;
  return qword_2FF2C8[a1 - 5];
}

void sub_1EFD0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t ObjectType;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
LABEL_48:
    swift_bridgeObjectRelease(a1);
    v4 = _swiftEmptyArrayStorage;
    v23 = _swiftEmptyArrayStorage[2];
    if (!v23)
    {
LABEL_49:
      swift_bridgeObjectRelease(v4);
      return;
    }
LABEL_35:
    swift_bridgeObjectRetain(v4);
    v24 = v4 + 5;
    v25 = _swiftEmptyArrayStorage;
    do
    {
      v26 = (void *)*(v24 - 1);
      v27 = *v24;
      ObjectType = swift_getObjectType();
      v29 = v26;
      v30 = dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.getter(ObjectType, v27);

      if (v30 != 18)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
          v25 = sub_20F948(0, v25[2] + 1, 1, v25);
        v32 = v25[2];
        v31 = v25[3];
        if (v32 >= v31 >> 1)
          v25 = sub_20F948((_QWORD *)(v31 > 1), v32 + 1, 1, v25);
        v25[2] = v32 + 1;
        v25[v32 + 4] = v30;
      }
      v24 += 2;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease(v4);
    goto LABEL_49;
  }
  if (a1 < 0)
    v33 = a1;
  else
    v33 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v33);
  if (!v2)
    goto LABEL_48;
LABEL_3:
  if (v2 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v3 = 0;
      v4 = _swiftEmptyArrayStorage;
      do
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, a1);
        v6 = swift_getObjectType();
        v7 = swift_conformsToProtocol2(v6, &protocol descriptor for NavigationTabIdentifiable);
        if (v7)
          v8 = v5;
        else
          v8 = 0;
        if (v7)
          v9 = v7;
        else
          v9 = 0;
        if (v8)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
            v4 = sub_20FA54(0, v4[2] + 1, 1, v4);
          v11 = v4[2];
          v10 = v4[3];
          if (v11 >= v10 >> 1)
            v4 = sub_20FA54((_QWORD *)(v10 > 1), v11 + 1, 1, v4);
          v4[2] = v11 + 1;
          v12 = &v4[2 * v11];
          v12[4] = v8;
          v12[5] = v9;
        }
        else
        {
          swift_unknownObjectRelease(v5);
        }
        ++v3;
      }
      while (v2 != v3);
    }
    else
    {
      v13 = 0;
      v4 = _swiftEmptyArrayStorage;
      do
      {
        v15 = *(void **)(a1 + 8 * v13 + 32);
        v16 = swift_getObjectType();
        v17 = swift_conformsToProtocol2(v16, &protocol descriptor for NavigationTabIdentifiable);
        if (v17)
          v18 = v15;
        else
          v18 = 0;
        if (v17)
          v19 = v17;
        else
          v19 = 0;
        if (v18)
        {
          v20 = v15;
          if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
            v4 = sub_20FA54(0, v4[2] + 1, 1, v4);
          v22 = v4[2];
          v21 = v4[3];
          if (v22 >= v21 >> 1)
            v4 = sub_20FA54((_QWORD *)(v21 > 1), v22 + 1, 1, v4);
          v4[2] = v22 + 1;
          v14 = &v4[2 * v22];
          v14[4] = v18;
          v14[5] = v19;
        }
        ++v13;
      }
      while (v2 != v13);
    }
    swift_bridgeObjectRelease(a1);
    v23 = v4[2];
    if (!v23)
      goto LABEL_49;
    goto LABEL_35;
  }
  __break(1u);
}

uint64_t sub_1F0024(uint64_t a1)
{
  uint64_t v1;
  char v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_BYTE *)(v1 + 1);
  v3 = sub_1F00D0(a1);
  v4 = v3;
  v5 = v3[2];
  if (v5)
  {
    v6 = v3[v5 + 3];
    sub_3D600(v6);
    v7 = swift_bridgeObjectRelease(v4);
    if ((v2 & 1) != 0)
    {
      v8 = v6 - 5;
      if ((unint64_t)(v6 - 5) < 0xA)
      {
        v9 = &unk_2FF3A0;
        return v9[v8];
      }
      if ((static Podcasts.isUIPSidebarEnabled.getter(v7) & 1) == 0)
        return v6;
    }
    else
    {
      v8 = v6 - 1;
      if ((unint64_t)(v6 - 1) < 0x11)
      {
        v9 = &unk_2FF318;
        return v9[v8];
      }
    }
    sub_7C28(v6);
    return 7;
  }
  swift_bridgeObjectRelease(v3);
  return 18;
}

_QWORD *sub_1F00D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t i;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v8 = _swiftEmptyArrayStorage[2];
    if (!v8)
      goto LABEL_14;
    goto LABEL_8;
  }
  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain(a1);
  sub_3D600(v3);
  if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
    sub_F34C4(0, _swiftEmptyArrayStorage[2] + 1, 1);
  v5 = _swiftEmptyArrayStorage[2];
  v4 = _swiftEmptyArrayStorage[3];
  if (v5 >= v4 >> 1)
    sub_F34C4(v4 > 1, v5 + 1, 1);
  _swiftEmptyArrayStorage[2] = v5 + 1;
  v6 = &_swiftEmptyArrayStorage[2 * v5];
  v6[4] = 0;
  v6[5] = v3;
  v7 = v1 - 1;
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      v15 = *(_QWORD *)(a1 + 40 + 8 * i);
      sub_3D600(v15);
      if ((static NavigationTab.== infix(_:_:)(v15, 9) & 1) != 0)
      {
        sub_7C28(v15);
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          sub_F34C4(0, _swiftEmptyArrayStorage[2] + 1, 1);
        v17 = _swiftEmptyArrayStorage[2];
        v16 = _swiftEmptyArrayStorage[3];
        if (v17 >= v16 >> 1)
          sub_F34C4(v16 > 1, v17 + 1, 1);
        _swiftEmptyArrayStorage[2] = v17 + 1;
        v18 = &_swiftEmptyArrayStorage[2 * v17];
        v18[4] = i + 1;
        v18[5] = v15;
      }
    }
  }
  swift_bridgeObjectRelease(a1);
  v8 = _swiftEmptyArrayStorage[2];
  if (v8)
  {
LABEL_8:
    sub_F34A8(0, v8, 0);
    v9 = 5;
    do
    {
      v10 = _swiftEmptyArrayStorage[v9];
      sub_3D600(v10);
      v12 = _swiftEmptyArrayStorage[2];
      v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
        sub_F34A8(v11 > 1, v12 + 1, 1);
      _swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
      v9 += 2;
      --v8;
    }
    while (v8);
  }
LABEL_14:
  swift_release(_swiftEmptyArrayStorage);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1F030C(uint64_t a1, uint64_t a2, __n128 a3)
{
  char *v3;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;

  v5 = a1;
  v6 = *v3;
  v7 = v3[1];
  if (v7 != 1)
  {
    if (a1 == 17)
      goto LABEL_4;
LABEL_25:
    sub_3D600(v5);
    v8 = *(_QWORD *)(a2 + 16);
    if (v8)
      goto LABEL_5;
LABEL_26:
    v10 = _swiftEmptyArrayStorage;
    if ((v6 & 1) == 0)
      goto LABEL_27;
LABEL_19:
    if ((v7 & 1) != 0)
      goto LABEL_38;
    if (v5 == 18)
      return v10;
    v15 = _swiftEmptyArrayStorage[2];
    if (v15)
    {
      v16 = _swiftEmptyArrayStorage[4];
      sub_91F1C(v5);
      swift_retain(_swiftEmptyArrayStorage);
      sub_3D600(v16);
      v17 = static NavigationTab.== infix(_:_:)(v16, v5);
      sub_7C28(v16);
      if ((v17 & 1) != 0)
      {
LABEL_23:
        swift_release(_swiftEmptyArrayStorage);
        sub_91F0C(v5);
LABEL_38:
        sub_91F0C(v5);
        return v10;
      }
      if (v15 != 1)
      {
        v28 = 5;
        while (1)
        {
          v29 = v28 - 3;
          if (__OFADD__(v28 - 4, 1))
            break;
          v16 = _swiftEmptyArrayStorage[v28];
          sub_3D600(v16);
          v30 = static NavigationTab.== infix(_:_:)(v16, v5);
          sub_7C28(v16);
          if ((v30 & 1) != 0)
            goto LABEL_23;
          ++v28;
          if (v29 == v15)
            goto LABEL_45;
        }
        __break(1u);
        goto LABEL_49;
      }
LABEL_45:
      swift_release(_swiftEmptyArrayStorage);
      sub_91F0C(v5);
    }
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D80);
    v32 = swift_allocObject(v31, 40, 7);
    *(_OWORD *)(v32 + 16) = xmmword_2F03C0;
    *(_QWORD *)(v32 + 32) = v5;
    v35 = v32;
    sub_1F7298((uint64_t)_swiftEmptyArrayStorage);
    return (_QWORD *)v35;
  }
  if ((static Podcasts.isUIPSidebarEnabled.getter(a3) & 1) == 0 || v5 != 7)
    goto LABEL_25;
LABEL_4:
  v5 = 18;
  v8 = *(_QWORD *)(a2 + 16);
  if (!v8)
    goto LABEL_26;
LABEL_5:
  v34 = v6;
  swift_bridgeObjectRetain(a2);
  v9 = 0;
  v10 = _swiftEmptyArrayStorage;
  do
  {
    v11 = *(_QWORD *)(a2 + 8 * v9 + 32);
    if (v7)
    {
      sub_3D600(v11);
      if ((static Podcasts.isUIPSidebarEnabled.getter(v12) & 1) != 0 && v11 == 7)
      {
LABEL_6:
        sub_7C28(v11);
        goto LABEL_7;
      }
    }
    else
    {
      sub_3D600(v11);
      if (v11 == 17)
        goto LABEL_6;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      sub_F34A8(0, _swiftEmptyArrayStorage[2] + 1, 1);
    v14 = _swiftEmptyArrayStorage[2];
    v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1)
      sub_F34A8(v13 > 1, v14 + 1, 1);
    _swiftEmptyArrayStorage[2] = v14 + 1;
    _swiftEmptyArrayStorage[v14 + 4] = v11;
LABEL_7:
    ++v9;
  }
  while (v8 != v9);
  swift_bridgeObjectRelease(a2);
  if ((v34 & 1) != 0)
    goto LABEL_19;
LABEL_27:
  if (!v7)
    goto LABEL_38;
  if (v5 == 18)
    return v10;
  sub_3D600(v5);
  v18 = sub_8FE8C(v5, (uint64_t)_swiftEmptyArrayStorage);
  if ((v19 & 1) != 0)
  {
    sub_91F0C(v5);
    sub_3D600(v5);
    swift_release(_swiftEmptyArrayStorage);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D80);
    v10 = (_QWORD *)swift_allocObject(v26, 40, 7);
    *((_OWORD *)v10 + 1) = xmmword_2F03C0;
    v10[4] = v5;
    goto LABEL_38;
  }
  v16 = v18;
  v15 = _swiftEmptyArrayStorage[2];
  v20 = v15 - v18;
  if (v15 < v18)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v18 < 0)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    swift_release(_swiftEmptyArrayStorage);
    v33 = sub_15B48C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage[4], v16, (2 * v15) | 1);
    swift_release(_swiftEmptyArrayStorage);
    sub_91F0C(v5);
    sub_91F0C(v5);
    return v33;
  }
  v21 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v22 = swift_unknownObjectRetain_n(_swiftEmptyArrayStorage, 2);
  v23 = (_QWORD *)swift_dynamicCastClass(v22, v21);
  if (!v23)
  {
    swift_release(_swiftEmptyArrayStorage);
    v23 = _swiftEmptyArrayStorage;
  }
  v24 = v23[2];
  swift_release(v23);
  if (v24 != v20)
    goto LABEL_51;
  v25 = swift_dynamicCastClass(_swiftEmptyArrayStorage, v21);
  swift_release(_swiftEmptyArrayStorage);
  if (v25)
  {
    sub_91F0C(v5);
    sub_91F0C(v5);
    return (_QWORD *)v25;
  }
  else
  {
    swift_release(_swiftEmptyArrayStorage);
    sub_91F0C(v5);
    sub_91F0C(v5);
    return _swiftEmptyArrayStorage;
  }
}

uint64_t NavigationTab.init(contextPage:)(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InteractionContext.Page(0);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 17)
    return 6;
  sub_1F0744(a1);
  return 18;
}

uint64_t sub_1F0744(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InteractionContext.Page(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for TabConverter(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TabConverter(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1F0860 + 4 * byte_2FF295[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1F0894 + 4 * byte_2FF290[v4]))();
}

uint64_t sub_1F0894(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1F089C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1F08A4);
  return result;
}

uint64_t sub_1F08B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1F08B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1F08BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1F08C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TabConverter()
{
  return &type metadata for TabConverter;
}

void sub_1F08E0(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  char v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  __int128 *v67;
  void *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t, __n128);
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  unint64_t v97;

  v7 = *a4;
  v8 = a4[1];
  LOBYTE(v97) = *a4;
  BYTE1(v97) = v8;
  v9 = sub_1F0024(a1);
  if (v9 == 18)
  {
    v10 = _swiftEmptyArrayStorage;
  }
  else
  {
    v11 = v9;
    LOBYTE(v97) = v7;
    BYTE1(v97) = v8;
    v12 = sub_1F00D0(a1);
    v10 = sub_1F030C(v11, (uint64_t)v12, v13);
    sub_91F0C(v11);
    swift_bridgeObjectRelease(v12);
  }
  if ((unint64_t)a2 >> 62)
    goto LABEL_103;
  v14 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  do
  {
    v88 = v10;
    v15 = _swiftEmptyArrayStorage;
    v92 = a2;
    if (!v14)
    {
      v18 = _swiftEmptyArrayStorage;
      v35 = _swiftEmptyArrayStorage[2];
      if (v35)
        goto LABEL_33;
LABEL_37:
      swift_release(v18);
      v87 = _swiftEmptyArrayStorage;
      goto LABEL_38;
    }
    v16 = a2 & 0xC000000000000001;
    v93 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v17 = 0;
    v18 = _swiftEmptyArrayStorage;
    v95 = v14;
    do
    {
      if (v16)
      {
        v19 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, a2);
      }
      else
      {
        if (v17 >= *(_QWORD *)(v93 + 16))
          goto LABEL_102;
        v19 = *(id *)(a2 + 8 * v17 + 32);
      }
      v20 = v19;
      ObjectType = swift_getObjectType();
      v22 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NavigationTabIdentifiable);
      if (v22)
        v23 = v22;
      else
        v23 = 0;
      if (v22)
        v10 = v20;
      else
        v10 = 0;
      if (v10)
      {
        if (!v17)
        {

          goto LABEL_9;
        }
        v24 = v16;
        v25 = swift_getObjectType();
        v26 = v20;
        v27 = dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.getter(v25, v23);
        if (v27 == 18
          || (v28 = v27, v29 = static NavigationTab.== infix(_:_:)(v27, 9), sub_91F0C(v28), (v29 & 1) == 0))
        {
          v30 = dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.getter(v25, v23);
          sub_91F0C(v30);

          a2 = v92;
          v16 = v24;
          v14 = v95;
          if (v30 != 18)
          {

            goto LABEL_9;
          }
        }
        else
        {

          a2 = v92;
          v16 = v24;
          v14 = v95;
        }
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
      v97 = (unint64_t)v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v10 = &v97;
        sub_F34E0(0, v18[2] + 1, 1);
        v18 = (_QWORD *)v97;
      }
      v33 = v18[2];
      v32 = v18[3];
      if (v33 >= v32 >> 1)
      {
        v10 = &v97;
        sub_F34E0(v32 > 1, v33 + 1, 1);
        v18 = (_QWORD *)v97;
      }
      v18[2] = v33 + 1;
      v34 = &v18[2 * v33];
      v34[4] = v17;
      v34[5] = v20;
LABEL_9:
      ++v17;
    }
    while (v14 != v17);
    swift_bridgeObjectRelease(a2);
    v15 = _swiftEmptyArrayStorage;
    v35 = v18[2];
    if (!v35)
      goto LABEL_37;
LABEL_33:
    v97 = (unint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v35);
    v36 = 5;
    do
    {
      v37 = (id)v18[v36];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v38);
      v39 = *(_QWORD *)(v97 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v39);
      v40 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v37);
      specialized ContiguousArray._endMutation()(v40);
      v36 += 2;
      --v35;
    }
    while (v35);
    v87 = (_QWORD *)v97;
    swift_release(v18);
LABEL_38:
    v97 = (unint64_t)_swiftEmptyArrayStorage;
    v41 = v88;
    v90 = v88[2];
    if (!v90)
    {
LABEL_100:
      swift_bridgeObjectRelease(v41);
      v97 = (unint64_t)v15;
      sub_1F6DA8((uint64_t)v87);
      return;
    }
    swift_bridgeObjectRetain(v88);
    v42 = 0;
    while (2)
    {
      v44 = v88[v42 + 4];
      swift_bridgeObjectRetain(a2);
      sub_3D600(v44);
      swift_bridgeObjectRetain(a3);
      sub_1F6DA8(v45);
      if (!((unint64_t)a2 >> 62))
      {
        v10 = *(_QWORD **)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(a2);
        v94 = v42;
        if (v10)
          goto LABEL_44;
LABEL_90:
        swift_bridgeObjectRelease(a2);
        v47 = _swiftEmptyArrayStorage;
        v66 = _swiftEmptyArrayStorage[2];
        if (!v66)
        {
LABEL_91:
          swift_bridgeObjectRelease(v47);
          if (_swiftEmptyArrayStorage[2])
          {
            v77 = (id)_swiftEmptyArrayStorage[4];
            swift_bridgeObjectRelease(a2);
            swift_release(_swiftEmptyArrayStorage);
            v78 = sub_7C28(v44);
            a2 = v92;
            v43 = v94;
            goto LABEL_93;
          }
          swift_bridgeObjectRelease(a2);
          swift_release(_swiftEmptyArrayStorage);
          v82 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a5 + 24);
          if (v82)
          {
            v83 = *(_QWORD *)(a5 + 32);
            v84 = *(unsigned __int8 *)(a5 + 56);
            v85 = swift_retain(v83);
            v77 = (id)v82(v44, v84, v85);
            sub_1D618((uint64_t)v82, v83);
            v78 = sub_7C28(v44);
            a2 = v92;
            v43 = v94;
            if (v77)
            {
LABEL_93:
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78);
              v80 = *(_QWORD *)((char *)&dword_10 + (v97 & 0xFFFFFFFFFFFFFF8));
              v79 = *(_QWORD *)((char *)&dword_18 + (v97 & 0xFFFFFFFFFFFFFF8));
              if (v80 >= v79 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v80 + 1, 1);
              v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v77);
              specialized Array._endMutation()(v81);
            }
          }
          else
          {
            sub_7C28(v44);
            a2 = v92;
            v43 = v94;
          }
          v42 = v43 + 1;
          if (v42 == v90)
          {
            v41 = v88;
            swift_bridgeObjectRelease(v88);
            v15 = (_QWORD *)v97;
            goto LABEL_100;
          }
          continue;
        }
LABEL_76:
        v67 = (__int128 *)(v47 + 4);
        do
        {
          v96 = *v67;
          v68 = *(void **)v67;
          v69 = swift_getObjectType();
          v70 = v68;
          v71 = dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.getter(v69, *((_QWORD *)&v96 + 1));
          if (v71 == 18
            || (v72 = v71,
                sub_3D600(v44),
                v73 = static NavigationTab.== infix(_:_:)(v72, v44),
                sub_7C28(v44),
                sub_91F0C(v72),
                (v73 & 1) == 0))
          {

          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
              sub_F34FC(0, _swiftEmptyArrayStorage[2] + 1, 1);
            v75 = _swiftEmptyArrayStorage[2];
            v74 = _swiftEmptyArrayStorage[3];
            if (v75 >= v74 >> 1)
              sub_F34FC(v74 > 1, v75 + 1, 1);
            _swiftEmptyArrayStorage[2] = v75 + 1;
            *(_OWORD *)&_swiftEmptyArrayStorage[2 * v75 + 4] = v96;
          }
          ++v67;
          --v66;
        }
        while (v66);
        goto LABEL_91;
      }
      break;
    }
    if (a2 < 0)
      v76 = a2;
    else
      v76 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v10 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v76);
    v94 = v42;
    if (!v10)
      goto LABEL_90;
LABEL_44:
    if ((uint64_t)v10 >= 1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v46 = 0;
        v47 = _swiftEmptyArrayStorage;
        do
        {
          v48 = specialized _ArrayBuffer._getElementSlowPath(_:)(v46, a2);
          v49 = swift_getObjectType();
          v50 = swift_conformsToProtocol2(v49, &protocol descriptor for NavigationTabIdentifiable);
          if (v50)
            v51 = v48;
          else
            v51 = 0;
          if (v50)
            v52 = v50;
          else
            v52 = 0;
          if (v51)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
              v47 = sub_20FA54(0, v47[2] + 1, 1, v47);
            v54 = v47[2];
            v53 = v47[3];
            if (v54 >= v53 >> 1)
              v47 = sub_20FA54((_QWORD *)(v53 > 1), v54 + 1, 1, v47);
            v47[2] = v54 + 1;
            v55 = &v47[2 * v54];
            v55[4] = v51;
            v55[5] = v52;
          }
          else
          {
            swift_unknownObjectRelease(v48);
          }
          v46 = (_QWORD *)((char *)v46 + 1);
        }
        while (v10 != v46);
      }
      else
      {
        v56 = 0;
        v47 = _swiftEmptyArrayStorage;
        do
        {
          v58 = *(void **)(a2 + 8 * (_QWORD)v56 + 32);
          v59 = swift_getObjectType();
          v60 = swift_conformsToProtocol2(v59, &protocol descriptor for NavigationTabIdentifiable);
          if (v60)
            v61 = v58;
          else
            v61 = 0;
          if (v60)
            v62 = v60;
          else
            v62 = 0;
          if (v61)
          {
            v63 = v58;
            if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
              v47 = sub_20FA54(0, v47[2] + 1, 1, v47);
            v65 = v47[2];
            v64 = v47[3];
            if (v65 >= v64 >> 1)
              v47 = sub_20FA54((_QWORD *)(v64 > 1), v65 + 1, 1, v47);
            v47[2] = v65 + 1;
            v57 = &v47[2 * v65];
            v57[4] = v61;
            v57[5] = v62;
          }
          v56 = (_QWORD *)((char *)v56 + 1);
        }
        while (v10 != v56);
      }
      swift_bridgeObjectRelease(a2);
      v66 = v47[2];
      if (!v66)
        goto LABEL_91;
      goto LABEL_76;
    }
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    if (a2 < 0)
      v86 = a2;
    else
      v86 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v14 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease(a2);
  }
  while ((v14 & 0x8000000000000000) == 0);
  __break(1u);
}

id sub_1F114C(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  __int128 v7;
  __int128 v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _OWORD v15[5];
  uint64_t v16;

  v7 = *(_OWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews25CardTransitioningDelegate_configuration + 48);
  v15[2] = *(_OWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews25CardTransitioningDelegate_configuration + 32);
  v15[3] = v7;
  v15[4] = *(_OWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews25CardTransitioningDelegate_configuration + 64);
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews25CardTransitioningDelegate_configuration + 80);
  v8 = *(_OWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews25CardTransitioningDelegate_configuration + 16);
  v15[0] = *(_OWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews25CardTransitioningDelegate_configuration);
  v15[1] = v8;
  v9 = objc_allocWithZone((Class)type metadata accessor for CardPresentationController());
  v10 = a2;
  v11 = a3;
  v12 = a1;
  v13 = sub_279490((uint64_t)v12, (uint64_t)a2, v11, (uint64_t)v15);

  return v13;
}

id sub_1F12BC()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CardDismissalAnimator()), "init");
}

id sub_1F1348()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CardPresentationAnimator()), "init");
}

id CardTransitioningDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardTransitioningDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CardTransitioningDelegate()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews25CardTransitioningDelegate);
}

uint64_t method lookup function for CardTransitioningDelegate(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for CardTransitioningDelegate);
}

uint64_t dispatch thunk of CardTransitioningDelegate.presentationController(forPresented:presenting:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_20.nsects + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootNavigationControllerDelegate.stackUpdateHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of RootNavigationControllerDelegate.navigationController(_:willShow:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) - 8])();
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CardTransitioningDelegate.Configuration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 88))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 33);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CardTransitioningDelegate.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 88) = 0;
    if (a2)
      *(_BYTE *)(result + 33) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardTransitioningDelegate.Configuration()
{
  return &type metadata for CardTransitioningDelegate.Configuration;
}

uint64_t storeEnumTagSinglePayload for CardTransitioningDelegate.Position(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1F15D8 + 4 * byte_2FF3F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1F160C + 4 * byte_2FF3F0[v4]))();
}

uint64_t sub_1F160C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1F1614(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1F161CLL);
  return result;
}

uint64_t sub_1F1628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1F1630);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1F1634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1F163C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardTransitioningDelegate.Position()
{
  return &type metadata for CardTransitioningDelegate.Position;
}

uint64_t getEnumTagSinglePayload for CardTransitioningDelegate.DimmingArea(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CardTransitioningDelegate.DimmingArea(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

uint64_t sub_1F16AC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1F16C8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    *(_BYTE *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardTransitioningDelegate.DimmingArea()
{
  return &type metadata for CardTransitioningDelegate.DimmingArea;
}

unint64_t sub_1F1700()
{
  unint64_t result;

  result = qword_3DC270;
  if (!qword_3DC270)
  {
    result = swift_getWitnessTable(&unk_2FF4B4, &type metadata for CardTransitioningDelegate.Position);
    atomic_store(result, (unint64_t *)&qword_3DC270);
  }
  return result;
}

uint64_t sub_1F1744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v21;

  v5 = type metadata accessor for EnvironmentValues(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_episode);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_episode) = a3;
  swift_retain_n(a3, 3);
  v10 = LegacyLockup.id.getter(v9);
  v12 = v11;
  v13 = swift_release(a3);
  v14 = LegacyLockup.id.getter(v13);
  if (v10 == v14 && v12 == v15)
  {
    swift_release(v8);
    swift_release(a3);
    swift_bridgeObjectRelease_n(v12, 2);
  }
  else
  {
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v15, 0);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v17);
    if ((v18 & 1) == 0)
      sub_1F283C();
    swift_release(v8);
    swift_release(a3);
  }
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC330);
  UIViewRepresentableContext.environment.getter(v19);
  return sub_1F1B04((uint64_t)v7);
}

char *sub_1F1890()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v9;

  v1 = type metadata accessor for EnvironmentValues(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  swift_retain(*v0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC330);
  UIViewRepresentableContext.environment.getter(v5);
  v6 = objc_allocWithZone((Class)type metadata accessor for EpisodeHeroTextAreaUIKitView(0));
  v7 = sub_1F4FE4(v4, v3);
  swift_release(v4);
  return v7;
}

uint64_t sub_1F193C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1F1744(a1, a2, *v2);
}

uint64_t sub_1F1944(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  uint64_t v14;
  double v15;
  uint64_t v17;

  v8 = type metadata accessor for EnvironmentValues(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    v12 = 10.0;
  else
    v12 = *(double *)&a1;
  if ((a4 & 1) != 0)
    v13 = 10.0;
  else
    v13 = *(double *)&a3;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC330);
  UIViewRepresentableContext.environment.getter(v14);
  v15 = sub_1F4784((uint64_t)v11, v12, v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return *(_QWORD *)&v15;
}

uint64_t sub_1F1A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1F5758();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1F1A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1F5758();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1F1AD0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1F5758();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_1F1AF4()
{
  qword_3DC280 = 0x4000000000000000;
}

uint64_t sub_1F1B04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  unint64_t v23;
  _QWORD *v24;
  double v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];

  v38 = a1;
  v2 = type metadata accessor for PUITextStyle(0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  __chkstk_darwin(v2);
  v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  __chkstk_darwin(v33);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - v11;
  v13 = type metadata accessor for EnvironmentValues(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for EpisodeHeroTextArea.Metrics(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v1;
  v20 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_environment;
  v21 = swift_beginAccess(v20, v39, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 24))(v20, v38, v13, v21);
  v22 = swift_endAccess(v39);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v16, v20, v13, v22);
  v23 = sub_14D464();
  v24 = EnvironmentValues.subscript.getter(v39, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v23);
  v25 = *(double *)v39;
  EnvironmentValues.dynamicTypeSize.getter(v24);
  sub_CE64((uint64_t)v5, v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DynamicTypeSize.xSmall(_:), v6);
  LOBYTE(v20) = static DynamicTypeSize.== infix(_:_:)(v12, v9);
  v26 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  v27 = v26(v9, v6);
  if ((v20 & 1) != 0)
  {
    v28 = v34;
    v29 = &v5[*(int *)(v33 + 20)];
    PUITextStyle.standardLeading.getter(v27);
    v26(v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v29, v28, v36);
  }
  else
  {
    v26(v12, v6);
  }
  sub_1B79C((uint64_t)v5, (uint64_t)v19, type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles);
  v30 = *(void (**)(char *, uint64_t))(v14 + 8);
  v30(v16, v13);
  sub_1F1DD0((uint64_t)v19);
  return ((uint64_t (*)(uint64_t, uint64_t))v30)(v38, v13);
}

uint64_t sub_1F1DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = type metadata accessor for EpisodeHeroTextArea.Metrics(0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v12[-v7];
  v9 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_metrics;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_metrics, v13, 0, 0);
  sub_19C4C(v9, (uint64_t)v8, type metadata accessor for EpisodeHeroTextArea.Metrics);
  swift_beginAccess(v9, v12, 33, 0);
  sub_1F4740(a1, v9);
  swift_endAccess(v12);
  sub_19C4C(v9, (uint64_t)v5, type metadata accessor for EpisodeHeroTextArea.Metrics);
  if ((static PUITextStyle.== infix(_:_:)(v8, v5) & 1) != 0
    && (v10 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0),
        (static PUITextStyle.== infix(_:_:)(&v8[*(int *)(v10 + 20)], &v5[*(int *)(v10 + 20)]) & 1) != 0)
    && (static PUITextStyle.== infix(_:_:)(&v8[*(int *)(v10 + 24)], &v5[*(int *)(v10 + 24)]) & 1) != 0)
  {
    sub_FA4C((uint64_t)v5, type metadata accessor for EpisodeHeroTextArea.Metrics);
  }
  else
  {
    sub_FA4C((uint64_t)v5, type metadata accessor for EpisodeHeroTextArea.Metrics);
    sub_1F2AFC();
  }
  sub_FA4C(a1, type metadata accessor for EpisodeHeroTextArea.Metrics);
  return sub_FA4C((uint64_t)v8, type metadata accessor for EpisodeHeroTextArea.Metrics);
}

uint64_t sub_1F1F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView____lazy_storage___layout;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView____lazy_storage___layout);
  if (v2)
  {
    v3 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView____lazy_storage___layout);
  }
  else
  {
    v3 = sub_1F1FB4(v0);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v4);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_1F1FB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _BYTE v27[24];

  v2 = type metadata accessor for LineCountLayoutGroup();
  v3 = swift_allocObject(v2, 32, 7);
  *(_QWORD *)(v3 + 24) = _swiftEmptyArrayStorage;
  v4 = (_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 16) = 0x7FFFFFFFFFFFFFFFLL;
  v5 = *(void **)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption + 8);
  swift_beginAccess(v3 + 24, v27, 33, 0);
  v7 = *(_QWORD **)(v3 + 24);
  v8 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
    v7 = sub_20FD00(0, v7[2] + 1, 1, v7);
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
    v7 = sub_20FD00((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
  v7[2] = v10 + 1;
  v11 = &v7[8 * v10];
  v11[4] = v5;
  v11[5] = 0;
  v11[6] = 0;
  v11[7] = 0;
  *((_BYTE *)v11 + 64) = 0;
  *(_OWORD *)(v11 + 9) = xmmword_2F11D0;
  v11[11] = v6;
  *v4 = v7;
  sub_1F3CC8(v4);
  v12 = *(void **)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_title);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_title + 8);
  v14 = (_QWORD *)*v4;
  v15 = v12;
  if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
    v14 = sub_20FD00(0, v14[2] + 1, 1, v14);
  v17 = v14[2];
  v16 = v14[3];
  if (v17 >= v16 >> 1)
    v14 = sub_20FD00((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
  v14[2] = v17 + 1;
  v18 = &v14[8 * v17];
  v18[4] = v12;
  v18[5] = 0;
  v18[6] = 0;
  v18[7] = 0;
  *((_BYTE *)v18 + 64) = 0;
  *(_OWORD *)(v18 + 9) = xmmword_2FF4E0;
  v18[11] = v13;
  *v4 = v14;
  sub_1F3CC8(v4);
  v19 = *(void **)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_summary);
  v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_summary + 8);
  v21 = (_QWORD *)*v4;
  v22 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
    v21 = sub_20FD00(0, v21[2] + 1, 1, v21);
  v24 = v21[2];
  v23 = v21[3];
  if (v24 >= v23 >> 1)
    v21 = sub_20FD00((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
  v21[2] = v24 + 1;
  v25 = &v21[8 * v24];
  v25[4] = v22;
  v25[5] = 0;
  v25[6] = 0;
  v25[7] = 0;
  *((_BYTE *)v25 + 64) = 0;
  *(_OWORD *)(v25 + 9) = xmmword_2FF4F0;
  v25[11] = v20;
  *(_QWORD *)(v3 + 24) = v21;
  sub_1F3CC8(v4);
  swift_endAccess(v27);
  return v3;
}

id sub_1F2248()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v2 = objc_msgSend(v1, "colorWithAlphaComponent:", 0.4);

  objc_msgSend(v0, "setTextColor:", v2);
  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setCompositingFilter:", kCAFilterPlusL);

  if (qword_3CEFC8 != -1)
    swift_once(&qword_3CEFC8, sub_B58C);
  return v0;
}

id sub_1F2360()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v2 = objc_msgSend(v1, "colorWithAlphaComponent:", 0.8);

  objc_msgSend(v0, "setTextColor:", v2);
  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setCompositingFilter:", kCAFilterPlusL);

  return v0;
}

uint64_t sub_1F244C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t Strong;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[24];
  _BYTE v48[80];

  v1 = a1 + 16;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC338);
  inited = swift_initStackObject(v2, v48);
  *(_OWORD *)(inited + 16) = xmmword_2F5ED0;
  swift_beginAccess(v1, v47, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(id *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption);

    v7 = objc_msgSend(v6, "accessibilityLabel");
    if (v7)
    {
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v10 = v9;

    }
    else
    {
      v8 = 0;
      v10 = 0;
    }
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v10;
  }
  else
  {
    *(_QWORD *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = 0;
  }
  swift_beginAccess(v1, v46, 0, 0);
  v11 = swift_unknownObjectWeakLoadStrong(v1);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = *(id *)(v11 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_title);

    v14 = objc_msgSend(v13, "accessibilityLabel");
    if (v14)
    {
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    *(_QWORD *)(inited + 48) = v15;
    *(_QWORD *)(inited + 56) = v17;
  }
  else
  {
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
  }
  swift_beginAccess(v1, v45, 0, 0);
  v18 = swift_unknownObjectWeakLoadStrong(v1);
  if (!v18)
  {
    *(_QWORD *)(inited + 64) = 0;
    *(_QWORD *)(inited + 72) = 0;
    v25 = *(_QWORD *)(inited + 40);
    if (v25)
      goto LABEL_21;
LABEL_17:
    v26 = _swiftEmptyArrayStorage;
    v27 = *(_QWORD *)(inited + 56);
    if (!v27)
      goto LABEL_29;
    goto LABEL_24;
  }
  v19 = (void *)v18;
  v20 = *(id *)(v18 + OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_summary);

  v21 = objc_msgSend(v20, "accessibilityLabel");
  if (v21)
  {
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  *(_QWORD *)(inited + 64) = v22;
  *(_QWORD *)(inited + 72) = v24;
  v25 = *(_QWORD *)(inited + 40);
  if (!v25)
    goto LABEL_17;
LABEL_21:
  v28 = *(_QWORD *)(inited + 32);
  swift_bridgeObjectRetain(v25);
  v26 = sub_20FBCC(0, 1, 1, _swiftEmptyArrayStorage);
  v30 = v26[2];
  v29 = v26[3];
  if (v30 >= v29 >> 1)
    v26 = sub_20FBCC((_QWORD *)(v29 > 1), v30 + 1, 1, v26);
  v26[2] = v30 + 1;
  v31 = &v26[2 * v30];
  v31[4] = v28;
  v31[5] = v25;
  v27 = *(_QWORD *)(inited + 56);
  if (v27)
  {
LABEL_24:
    v32 = *(_QWORD *)(inited + 48);
    swift_bridgeObjectRetain(v27);
    if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
      v26 = sub_20FBCC(0, v26[2] + 1, 1, v26);
    v34 = v26[2];
    v33 = v26[3];
    if (v34 >= v33 >> 1)
      v26 = sub_20FBCC((_QWORD *)(v33 > 1), v34 + 1, 1, v26);
    v26[2] = v34 + 1;
    v35 = &v26[2 * v34];
    v35[4] = v32;
    v35[5] = v27;
  }
LABEL_29:
  v36 = *(_QWORD *)(inited + 72);
  if (v36)
  {
    v37 = *(_QWORD *)(inited + 64);
    swift_bridgeObjectRetain(*(_QWORD *)(inited + 72));
    if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
      v26 = sub_20FBCC(0, v26[2] + 1, 1, v26);
    v39 = v26[2];
    v38 = v26[3];
    if (v39 >= v38 >> 1)
      v26 = sub_20FBCC((_QWORD *)(v38 > 1), v39 + 1, 1, v26);
    v26[2] = v39 + 1;
    v40 = &v26[2 * v39];
    v40[4] = v37;
    v40[5] = v36;
  }
  swift_bridgeObjectRelease(inited);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA198);
  v42 = sub_1AAD80();
  v43 = BidirectionalCollection<>.joined(separator:)(8238, 0xE200000000000000, v41, v42);
  swift_bridgeObjectRelease(v26);
  return v43;
}

id sub_1F283C()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  NSString v9;
  void *v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_title];
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_episode;
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_episode];
  swift_retain(v4);
  LegacyLockup.title.getter(v5);
  v7 = v6;
  v8 = swift_release(v4).n128_u64[0];
  if (v7)
  {
    v9 = String._bridgeToObjectiveC()();
    v8 = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v2, "setText:", v9, *(double *)&v8);

  v10 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_summary];
  v11 = *(_QWORD *)&v1[v3];
  v12 = swift_retain(v11);
  v13 = (void *)LegacyEpisodeLockup.summary.getter(v12);
  v14 = swift_release(v11);
  if (v13)
  {
    v15 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter(v14);

  }
  else
  {
    v15 = 0;
  }
  objc_msgSend(v10, "setAttributedText:", v15);

  objc_msgSend(v10, "setLineBreakMode:", 4);
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionSubscription;
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionSubscription];
  if (v17)
  {
    swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionSubscription]);
    AnyCancellable.cancel()();
    swift_release(v17);
  }
  v18 = type metadata accessor for EpisodeCaptionGenerator(0);
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_graph];
  v20 = *(_QWORD *)&v1[v3];
  swift_retain(v19);
  swift_retain(v20);
  v21 = EpisodeCaptionGenerator.__allocating_init(asPartOf:episode:showsSubscriptionBadge:useSearchContext:)(v19, v20, 0, 0);
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionGenerator;
  v23 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionGenerator];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionGenerator] = v21;
  swift_release(v23);
  v24 = *(_QWORD *)&v1[v22];
  if (v24)
  {
    sub_89A0(&qword_3DA148, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeCaptionGenerator, (uint64_t)&protocol conformance descriptor for EpisodeCaptionGenerator);
    swift_retain(v24);
    v25 = ObservableObject<>.objectWillChange.getter(v18);
    swift_release(v24);
    v31 = v25;
    v26 = swift_allocObject(&unk_38AE00, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16, v1);
    v27 = type metadata accessor for ObservableObjectPublisher(0);
    v28 = Publisher<>.sink(receiveValue:)(sub_1F3D58, v26, v27, &protocol witness table for ObservableObjectPublisher);
    swift_release(v26);
    swift_release(v31);
  }
  else
  {
    v28 = 0;
  }
  v29 = *(_QWORD *)&v1[v16];
  *(_QWORD *)&v1[v16] = v28;
  return objc_msgSend(v1, "setNeedsLayout", swift_release(v29).n128_f64[0]);
}

void sub_1F2AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "setNeedsLayout");

  }
}

id sub_1F2AFC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  char *v7;
  __n128 v8;
  uint64_t (*v9)(char *, char *, uint64_t, __n128);
  uint64_t v10;
  void *v11;
  void (*v12)(char *, uint64_t);
  void *v13;
  id v14;
  id result;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  char v26[24];

  v1 = v0;
  v2 = type metadata accessor for PUITextStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption];
  v7 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_metrics];
  v8 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_metrics], v26, 0, 0);
  v9 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v3 + 16);
  v10 = v9(v5, v7, v2, v8);
  v11 = (void *)PUITextStyle.uiFont.getter(v10);
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  objc_msgSend(v6, "setFont:", v11);

  v13 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_playedIcon];
  if (!v13)
    goto LABEL_4;
  v14 = v13;
  result = objc_msgSend(v6, "font");
  if (result)
  {
    v16 = result;
    v17 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", result, 1);

    objc_msgSend(v14, "setPreferredSymbolConfiguration:", v17);
LABEL_4:
    v18 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_title];
    v19 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
    v20 = ((uint64_t (*)(char *, char *, uint64_t))v9)(v5, &v7[*(int *)(v19 + 20)], v2);
    v21 = (void *)PUITextStyle.uiFont.getter(v20);
    v12(v5, v2);
    objc_msgSend(v18, "setFont:", v21);

    v22 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_summary];
    v23 = ((uint64_t (*)(char *, char *, uint64_t))v9)(v5, &v7[*(int *)(v19 + 24)], v2);
    v24 = (void *)PUITextStyle.uiFont.getter(v23);
    v12(v5, v2);
    objc_msgSend(v22, "setFont:", v24);

    return objc_msgSend(v1, "setNeedsLayout");
  }
  __break(1u);
  return result;
}

void sub_1F2D1C(double a1)
{
  char *v1;
  char *v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;
  NSString v9;
  void *object;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  double v24;
  double *v25;
  double v26;
  id v27;
  id v28;
  double Width;
  double v30;
  double v31;
  double v32;
  unint64_t v33;
  uint64_t v34;
  __n128 v35;
  char v36;
  void *v37;
  id v38;
  char v39[80];
  CGRect v40;
  CGRect v41;

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption];
  v4 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption];
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionGenerator;
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionGenerator];
  if (v6)
  {
    v7 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionGenerator]);
    EpisodeCaptionGenerator.caption.getter(v7);
    v9 = v8;
    *(_QWORD *)&a1 = swift_release(v6).n128_u64[0];
    if (v9)
    {
      object = String.uppercased()()._object;
      swift_bridgeObjectRelease(v9);
      v9 = String._bridgeToObjectiveC()();
      *(_QWORD *)&a1 = swift_bridgeObjectRelease(object).n128_u64[0];
    }
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v4, "setText:", v9, a1);

  v11 = sub_1F1F50();
  objc_msgSend(v2, "bounds");
  sub_20BDD8(v12, v13);
  swift_release(v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC318);
  inited = swift_initStackObject(v14, v39);
  *(_OWORD *)(inited + 16) = xmmword_2F5ED0;
  v16 = *((_QWORD *)v3 + 1);
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v16;
  v17 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_title];
  v18 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_title + 8];
  *(_QWORD *)(inited + 48) = v17;
  *(_QWORD *)(inited + 56) = v18;
  v19 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_summary];
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_summary + 8];
  *(_QWORD *)(inited + 64) = v19;
  *(_QWORD *)(inited + 72) = v20;
  v38 = v4;
  v21 = v17;
  v22 = v19;
  v23 = 0;
  v24 = 0.0;
  do
  {
    v25 = (double *)(inited + 40 + 16 * v23++);
    while (1)
    {
      v26 = *v25;
      v27 = *((id *)v25 - 1);
      if (objc_msgSend(v27, "numberOfLines"))
        break;
      objc_msgSend(v27, "setHidden:", 1);

      ++v23;
      v25 += 2;
      if (v23 == 4)
        goto LABEL_11;
    }
    v28 = v27;
    objc_msgSend(v2, "bounds");
    Width = CGRectGetWidth(v40);
    objc_msgSend(v2, "bounds");
    objc_msgSend(v28, "sizeThatFits:", v30, v31);
    objc_msgSend(v28, "setFrame:", 0.0, v24, Width, v32);

    objc_msgSend(v28, "frame");
    v24 = v24 + v26 + CGRectGetHeight(v41);
    objc_msgSend(v28, "setHidden:", 0);

  }
  while (v23 != 3);
LABEL_11:
  v33 = swift_bridgeObjectRelease(inited).n128_u64[0];
  v34 = *(_QWORD *)&v2[v5];
  if (v34
    && (v35 = swift_retain(*(_QWORD *)&v2[v5]),
        v36 = EpisodeCaptionGenerator.isPlayed.getter(v35),
        v33 = swift_release(v34).n128_u64[0],
        (v36 & 1) != 0)
    && (objc_msgSend(v38, "isHidden", *(double *)&v33) & 1) == 0)
  {
    sub_1F3054();
  }
  else
  {
    v37 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_playedIcon];
    if (v37)
      objc_msgSend(v37, "setHidden:", 1, *(double *)&v33);
  }
}

void sub_1F3054()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  id v11;
  void *v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double MinY;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  double v30;
  double MinX;
  double v32;
  id v33;
  void (*v34)(_BYTE *);
  double v35;
  double v36;
  uint64_t v37;
  void *v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double Width;
  double v46;
  double Height;
  double v48;
  void (*v49)(_BYTE *, uint64_t);
  double v50;
  double v51;
  double left;
  id v53;
  double v54;
  double v55;
  double v56;
  id v57;
  double v58;
  double v59;
  CGFloat x;
  CGFloat y;
  CGFloat v62;
  CGFloat v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  _BYTE v72[4];
  unsigned int v73;
  double v74;
  double v75;
  CGFloat v76;
  double v77;
  char *v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v72[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = &v72[-v8];
  v10 = (char *)objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection", v7);
  v11 = sub_1F354C();
  objc_msgSend(v11, "sizeToFit");
  objc_msgSend(v11, "setHidden:", 0);
  v12 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption];
  objc_msgSend(v12, "frame");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = v11;
  objc_msgSend(v21, "frame");
  v23 = v22;
  v25 = v24;
  v79.origin.x = v14;
  v79.origin.y = v16;
  v79.size.width = v18;
  v79.size.height = v20;
  MinY = CGRectGetMinY(v79);
  v78 = v10;
  v74 = v20;
  v75 = v18;
  v27 = v14;
  v28 = v16;
  v29 = v18;
  v30 = v20;
  if (v10 == (_BYTE *)&dword_0 + 1)
    MinX = CGRectGetMaxX(*(CGRect *)&v27) - v23;
  else
    MinX = CGRectGetMinX(*(CGRect *)&v27);
  v76 = v16;
  v77 = v14;
  v32 = MinY + (v20 - v25) * 0.5;
  v33 = objc_msgSend(v0, "traitCollection");
  v34 = *(void (**)(_BYTE *))(v3 + 104);
  v73 = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
  v34(v9);
  objc_msgSend(v33, "displayScale");
  v36 = v35;
  if (v35 < COERCE_DOUBLE(1))
  {
    v37 = v2;
    v38 = v12;
    v39 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v39, "scale");
    v36 = v40;

    v12 = v38;
    v2 = v37;
  }
  v80.origin.x = MinX;
  v80.origin.y = v32;
  v80.size.width = v23;
  v80.size.height = v25;
  v41 = CGRectGetMinX(v80);
  v42 = CGFloat.rounded(_:toScale:)((uint64_t)v9, v36, v41);
  v81.origin.x = MinX;
  v81.origin.y = v32;
  v81.size.width = v23;
  v81.size.height = v25;
  v43 = CGRectGetMinY(v81);
  v44 = CGFloat.rounded(_:toScale:)((uint64_t)v9, v36, v43);
  v82.origin.x = MinX;
  v82.origin.y = v32;
  v82.size.width = v23;
  v82.size.height = v25;
  Width = CGRectGetWidth(v82);
  v46 = CGFloat.rounded(_:toScale:)((uint64_t)v9, v36, Width);
  v83.origin.x = MinX;
  v83.origin.y = v32;
  v83.size.width = v23;
  v83.size.height = v25;
  Height = CGRectGetHeight(v83);
  v48 = CGFloat.rounded(_:toScale:)((uint64_t)v9, v36, Height);

  v49 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v49(v9, v2);
  objc_msgSend(v21, "setFrame:", v42, v44, v46, v48);

  objc_msgSend(v21, "bounds");
  v50 = CGRectGetWidth(v84);
  if (qword_3CFB00 != -1)
    swift_once(&qword_3CFB00, sub_1F1AF4);
  v51 = *(double *)&qword_3DC280;
  left = UIEdgeInsetsZero.left;
  v53 = objc_msgSend(v1, "traitCollection");
  ((void (*)(_BYTE *, _QWORD, uint64_t))v34)(v5, v73, v2);
  objc_msgSend(v53, "displayScale");
  v55 = v54;
  v56 = v76;
  if (v54 < COERCE_DOUBLE(1))
  {
    v57 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v57, "scale");
    v55 = v58;

  }
  if (v78 == (_BYTE *)&dword_0 + 1)
    v59 = left;
  else
    v59 = v50 + v51;
  v85.origin.x = UIEdgeInsetsInsetRect(v77, v56, v75, v74, UIEdgeInsetsZero.top, v59);
  x = v85.origin.x;
  y = v85.origin.y;
  v62 = v85.size.width;
  v63 = v85.size.height;
  v64 = CGRectGetMinX(v85);
  v65 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v55, v64);
  v86.origin.x = x;
  v86.origin.y = y;
  v86.size.width = v62;
  v86.size.height = v63;
  v66 = CGRectGetMinY(v86);
  v67 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v55, v66);
  v87.origin.x = x;
  v87.origin.y = y;
  v87.size.width = v62;
  v87.size.height = v63;
  v68 = CGRectGetWidth(v87);
  v69 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v55, v68);
  v88.origin.x = x;
  v88.origin.y = y;
  v88.size.width = v62;
  v88.size.height = v63;
  v70 = CGRectGetHeight(v88);
  v71 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v55, v70);

  v49(v5, v2);
  objc_msgSend(v12, "setFrame:", v65, v67, v69, v71);

}

id sub_1F354C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id result;
  void *v11;
  id v12;
  void *v13;
  id v14;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_playedIcon;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_playedIcon];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_playedIcon];
LABEL_5:
    v14 = v2;
    return v3;
  }
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v4);

  v6 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v5);
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v8 = objc_msgSend(v7, "colorWithAlphaComponent:", 0.4);

  objc_msgSend(v6, "setTintColor:", v8);
  v9 = objc_msgSend(v6, "layer");
  objc_msgSend(v9, "setCompositingFilter:", kCAFilterPlusL);

  result = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption], "font");
  if (result)
  {
    v11 = result;
    v12 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", result, 1);

    objc_msgSend(v6, "setPreferredSymbolConfiguration:", v12);
    objc_msgSend(v0, "addSubview:", v6);
    v13 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_1F3768()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeHeroTextAreaUIKitView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1F3884()
{
  return type metadata accessor for EpisodeHeroTextAreaUIKitView(0);
}

uint64_t type metadata accessor for EpisodeHeroTextAreaUIKitView(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3DC308, (uint64_t)&nominal type descriptor for EpisodeHeroTextAreaUIKitView);
}

uint64_t sub_1F38A0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[11];

  v5[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for EnvironmentValues(319);
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      v5[4] = "\b";
      v5[5] = "\b";
      v5[6] = "\b";
      v5[7] = &unk_2FF558;
      v5[8] = &unk_2FF558;
      v5[9] = &unk_2FF558;
      v5[10] = "\b";
      result = swift_updateClassMetadata2(a1, 256, 11, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for EpisodeHeroTextAreaUIKitView.LabelItem(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for EpisodeHeroTextAreaUIKitView.LabelItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for EpisodeHeroTextAreaUIKitView.LabelItem(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeHeroTextAreaUIKitView.LabelItem(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeHeroTextAreaUIKitView.LabelItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeHeroTextAreaUIKitView.LabelItem()
{
  return &type metadata for EpisodeHeroTextAreaUIKitView.LabelItem;
}

Swift::Int sub_1F3A98()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, 0);
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = v0[1];
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey(0);
  v3 = type metadata accessor for DynamicTypeSize(0);
  v4 = sub_89A0((unint64_t *)&unk_3D1EB0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  dispatch thunk of Hashable.hash(into:)(v6, v3, v4);
  return Hasher._finalize()();
}

uint64_t sub_1F3B44(uint64_t a1)
{
  Swift::UInt64 *v1;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  uint64_t v5;
  uint64_t v6;

  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = *v1;
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  if ((v1[1] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v1[1];
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = sub_89A0((unint64_t *)&unk_3D1EB0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  return dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
}

Swift::Int sub_1F3BD4(uint64_t a1)
{
  Swift::UInt64 *v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, a1);
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v1;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  if ((v1[1] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = v1[1];
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  v4 = type metadata accessor for DynamicTypeSize(0);
  v5 = sub_89A0((unint64_t *)&unk_3D1EB0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  dispatch thunk of Hashable.hash(into:)(v7, v4, v5);
  return Hasher._finalize()();
}

uint64_t sub_1F3C7C(double *a1, double *a2, uint64_t a3)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return static DynamicTypeSize.== infix(_:_:)((char *)a1 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24));
  else
    return 0;
}

void sub_1F3CB4()
{
  off_3DC288 = (int *)&_swiftEmptyDictionarySingleton;
}

void sub_1F3CC8(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_E1D84(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_1F3D60(v4);
  *a1 = v2;
}

uint64_t sub_1F3D34()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1F3D58(uint64_t a1)
{
  uint64_t v1;

  sub_1F2AA4(a1, v1);
}

void sub_1F3D60(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  Swift::Int v22;
  Swift::Int v23;
  Swift::Int v24;
  _OWORD *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  Swift::Int v35;
  uint64_t v36;
  uint64_t v37;
  Swift::Int v38;
  uint64_t v39;
  _OWORD *v40;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD *v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  _QWORD *v124;
  Swift::Int v125;
  Swift::Int v126;
  uint64_t v127;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v101 = 0;
      v102 = *a1;
      v103 = 1;
      while (1)
      {
        v104 = *(_QWORD *)(v102 + (v103 << 6) + 48);
        v105 = v101;
        do
        {
          v106 = (_OWORD *)(v102 + v105);
          if (*(_QWORD *)(v102 + v105 + 48) >= v104)
            break;
          if (!v102)
            goto LABEL_142;
          v107 = v102 + v105;
          v108 = *(_BYTE *)(v102 + v105 + 96);
          v109 = *(_QWORD *)(v102 + v105 + 104);
          v110 = *(_QWORD *)(v102 + v105 + 120);
          v111 = v106[4];
          v112 = *(_OWORD *)(v102 + v105 + 80);
          v113 = v106[1];
          v106[4] = *v106;
          v106[5] = v113;
          v114 = v106[3];
          v106[6] = v106[2];
          v106[7] = v114;
          *(_OWORD *)v107 = v111;
          *(_OWORD *)(v107 + 16) = v112;
          *(_BYTE *)(v107 + 32) = v108;
          *(_QWORD *)(v107 + 40) = v109;
          *((_QWORD *)v106 + 6) = v104;
          v105 -= 64;
          *(_QWORD *)(v107 + 56) = v110;
        }
        while (v105 != -64);
        ++v103;
        v101 += 64;
        if (v103 == v3)
          return;
      }
    }
    goto LABEL_138;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_147:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v6 = v4;
  v122 = a1;
  if (v3 < 2)
  {
    v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v13 = _swiftEmptyArrayStorage[2];
      v12 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_104;
    }
    v124 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v5 >> 1;
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for LineCountLayoutGroup.Item);
    *(_QWORD *)(v8 + 16) = v7;
    v124 = (_QWORD *)v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v123 = *a1 + 176;
  v121 = *a1 + 56;
  v12 = (char *)_swiftEmptyArrayStorage;
  v125 = v6;
  v126 = v3;
  v127 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + (v10 << 6) + 48);
      v16 = *(_QWORD *)(v11 + (v14 << 6) + 48);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (uint64_t *)(v123 + (v14 << 6));
        v18 = v15;
        while (1)
        {
          v20 = *v17;
          v17 += 8;
          v19 = v20;
          if (v16 < v15 == v18 >= v20)
            break;
          ++v10;
          v18 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_139;
        if (v14 < v10)
        {
          v21 = v10 << 6;
          v22 = v14 << 6;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_145;
              v25 = (_OWORD *)(v11 + v22);
              v26 = *(_BYTE *)(v11 + v22 + 32);
              v27 = v11 + v21;
              v28 = *(_QWORD *)(v11 + v22 + 56);
              v29 = *(_OWORD *)(v11 + v22);
              v30 = *(_OWORD *)(v11 + v22 + 16);
              v31 = *(_OWORD *)(v11 + v22 + 40);
              v32 = *(_OWORD *)(v11 + v21 - 16);
              v34 = *(_OWORD *)(v11 + v21 - 64);
              v33 = *(_OWORD *)(v11 + v21 - 48);
              v25[2] = *(_OWORD *)(v11 + v21 - 32);
              v25[3] = v32;
              *v25 = v34;
              v25[1] = v33;
              *(_OWORD *)(v27 - 64) = v29;
              *(_OWORD *)(v27 - 48) = v30;
              *(_BYTE *)(v27 - 32) = v26;
              *(_OWORD *)(v27 - 24) = v31;
              *(_QWORD *)(v27 - 8) = v28;
            }
            ++v24;
            v21 -= 64;
            v22 += 64;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v14))
        goto LABEL_137;
      if (v10 - v14 < v6)
      {
        v35 = v14 + v6;
        if (__OFADD__(v14, v6))
          goto LABEL_140;
        if (v35 >= v3)
          v35 = v3;
        if (v35 < v14)
          goto LABEL_141;
        if (v10 != v35)
        {
          v36 = v121 + (v10 << 6);
          do
          {
            v37 = *(_QWORD *)(v11 + (v10 << 6) + 48);
            v38 = v14;
            v39 = v36;
            do
            {
              if (*(_QWORD *)(v39 - 72) >= v37)
                break;
              if (!v11)
                goto LABEL_143;
              v40 = (_OWORD *)(v39 - 56);
              v41 = (_OWORD *)(v39 - 120);
              v43 = *(_OWORD *)(v39 - 88);
              v42 = *(_OWORD *)(v39 - 72);
              *(_QWORD *)(v39 - 64) = *(_QWORD *)v39;
              v39 -= 64;
              v44 = *(_OWORD *)(v39 + 8);
              v45 = *(_OWORD *)(v39 + 24);
              v46 = v41[1];
              *v40 = *v41;
              v40[1] = v46;
              LOBYTE(v41) = *(_BYTE *)(v39 + 40);
              v47 = *(_QWORD *)(v39 + 48);
              v40[2] = v43;
              v40[3] = v42;
              *(_OWORD *)(v39 - 56) = v44;
              *(_OWORD *)(v39 - 40) = v45;
              *(_BYTE *)(v39 - 24) = (_BYTE)v41;
              *(_QWORD *)(v39 - 16) = v47;
              *(_QWORD *)(v39 - 8) = v37;
              ++v38;
            }
            while (v10 != v38);
            ++v10;
            v36 += 64;
          }
          while (v10 != v35);
          v10 = v35;
        }
      }
    }
    if (v10 < v14)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      v12 = sub_21E2F8(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v49 = *((_QWORD *)v12 + 2);
    v48 = *((_QWORD *)v12 + 3);
    v13 = v49 + 1;
    v11 = v127;
    if (v49 >= v48 >> 1)
    {
      v98 = sub_21E2F8((char *)(v48 > 1), v49 + 1, 1, v12);
      v11 = v127;
      v12 = v98;
    }
    *((_QWORD *)v12 + 2) = v13;
    v50 = v12 + 32;
    v51 = &v12[16 * v49 + 32];
    *(_QWORD *)v51 = v14;
    *((_QWORD *)v51 + 1) = v10;
    if (v49)
      break;
    v13 = 1;
LABEL_15:
    v6 = v125;
    v3 = v126;
    if (v10 >= v126)
    {
      v9 = v124;
LABEL_104:
      v100 = v12;
      v124 = v9;
      if (v13 < 2)
        goto LABEL_95;
      v115 = *v122;
      while (1)
      {
        v116 = v13 - 2;
        if (v13 < 2)
          break;
        if (!v115)
          goto LABEL_146;
        v99 = v100;
        v117 = *(_QWORD *)&v100[16 * v116 + 32];
        v118 = *(_QWORD *)&v100[16 * v13 + 24];
        sub_1F44A0((char *)(v115 + (v117 << 6)), (char *)(v115 + (*(_QWORD *)&v100[16 * v13 + 16] << 6)), v115 + (v118 << 6), __dst);
        if (v1)
          goto LABEL_94;
        if (v118 < v117)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native(v99) & 1) == 0)
          v99 = sub_21E728((uint64_t)v99);
        if (v116 >= *((_QWORD *)v99 + 2))
          goto LABEL_135;
        v119 = &v99[16 * v116 + 32];
        *(_QWORD *)v119 = v117;
        *((_QWORD *)v119 + 1) = v118;
        v120 = *((_QWORD *)v99 + 2);
        if (v13 > v120)
          goto LABEL_136;
        memmove(&v99[16 * v13 + 16], &v99[16 * v13 + 32], 16 * (v120 - v13));
        v100 = v99;
        *((_QWORD *)v99 + 2) = v120 - 1;
        v13 = v120 - 1;
        if (v120 <= 2)
          goto LABEL_95;
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
  }
  while (1)
  {
    v52 = v13 - 1;
    if (v13 >= 4)
    {
      v57 = &v50[16 * v13];
      v58 = *((_QWORD *)v57 - 8);
      v59 = *((_QWORD *)v57 - 7);
      v63 = __OFSUB__(v59, v58);
      v60 = v59 - v58;
      if (v63)
        goto LABEL_121;
      v62 = *((_QWORD *)v57 - 6);
      v61 = *((_QWORD *)v57 - 5);
      v63 = __OFSUB__(v61, v62);
      v55 = v61 - v62;
      v56 = v63;
      if (v63)
        goto LABEL_122;
      v64 = v13 - 2;
      v65 = &v50[16 * v13 - 32];
      v67 = *(_QWORD *)v65;
      v66 = *((_QWORD *)v65 + 1);
      v63 = __OFSUB__(v66, v67);
      v68 = v66 - v67;
      if (v63)
        goto LABEL_124;
      v63 = __OFADD__(v55, v68);
      v69 = v55 + v68;
      if (v63)
        goto LABEL_127;
      if (v69 >= v60)
      {
        v87 = &v50[16 * v52];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v63 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v63)
          goto LABEL_131;
        v80 = v55 < v90;
        goto LABEL_83;
      }
    }
    else
    {
      if (v13 != 3)
      {
        v81 = *((_QWORD *)v12 + 4);
        v82 = *((_QWORD *)v12 + 5);
        v63 = __OFSUB__(v82, v81);
        v74 = v82 - v81;
        v75 = v63;
        goto LABEL_77;
      }
      v54 = *((_QWORD *)v12 + 4);
      v53 = *((_QWORD *)v12 + 5);
      v63 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      v56 = v63;
    }
    if ((v56 & 1) != 0)
      goto LABEL_123;
    v64 = v13 - 2;
    v70 = &v50[16 * v13 - 32];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v73 = __OFSUB__(v71, v72);
    v74 = v71 - v72;
    v75 = v73;
    if (v73)
      goto LABEL_126;
    v76 = &v50[16 * v52];
    v78 = *(_QWORD *)v76;
    v77 = *((_QWORD *)v76 + 1);
    v63 = __OFSUB__(v77, v78);
    v79 = v77 - v78;
    if (v63)
      goto LABEL_129;
    if (__OFADD__(v74, v79))
      goto LABEL_130;
    if (v74 + v79 >= v55)
    {
      v80 = v55 < v79;
LABEL_83:
      if (v80)
        v52 = v64;
      goto LABEL_85;
    }
LABEL_77:
    if ((v75 & 1) != 0)
      goto LABEL_125;
    v83 = &v50[16 * v52];
    v85 = *(_QWORD *)v83;
    v84 = *((_QWORD *)v83 + 1);
    v63 = __OFSUB__(v84, v85);
    v86 = v84 - v85;
    if (v63)
      goto LABEL_128;
    if (v86 < v74)
      goto LABEL_15;
LABEL_85:
    v91 = v52 - 1;
    if (v52 - 1 >= v13)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    if (!v11)
      goto LABEL_144;
    v92 = v12;
    v93 = &v50[16 * v91];
    v94 = *(_QWORD *)v93;
    v95 = &v50[16 * v52];
    v96 = *((_QWORD *)v95 + 1);
    sub_1F44A0((char *)(v11 + (*(_QWORD *)v93 << 6)), (char *)(v11 + (*(_QWORD *)v95 << 6)), v11 + (v96 << 6), __dst);
    if (v1)
      break;
    if (v96 < v94)
      goto LABEL_118;
    if (v52 > *((_QWORD *)v92 + 2))
      goto LABEL_119;
    *(_QWORD *)v93 = v94;
    *(_QWORD *)&v50[16 * v91 + 8] = v96;
    v97 = *((_QWORD *)v92 + 2);
    if (v52 >= v97)
      goto LABEL_120;
    v12 = v92;
    v13 = v97 - 1;
    memmove(&v50[16 * v52], v95 + 16, 16 * (v97 - 1 - v52));
    *((_QWORD *)v92 + 2) = v97 - 1;
    v11 = v127;
    if (v97 <= 2)
      goto LABEL_15;
  }
  v99 = v92;
LABEL_94:
  v100 = v99;
LABEL_95:
  swift_bridgeObjectRelease(v100);
  v124[2] = 0;
  swift_bridgeObjectRelease(v124);
}

uint64_t sub_1F44A0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t result;
  char *v32;
  const void *v33;
  char *v34;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 63;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 6;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 63;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 6;
  v34 = __src;
  v33 = __dst;
  if (v10 >= v12 >> 6)
  {
    if (v11 >= -63)
    {
      if (__dst != a2 || &a2[64 * v13] <= __dst)
        memmove(__dst, a2, v13 << 6);
      v21 = &v4[64 * v13];
      v32 = v21;
      v34 = v6;
      if (v7 < v6 && v11 >= 64)
      {
        v22 = (char *)(a3 - 64);
        do
        {
          v23 = v22 + 64;
          if (*((_QWORD *)v6 - 2) >= *((_QWORD *)v21 - 2))
          {
            v32 = v21 - 64;
            if (v23 < v21 || v22 >= v21 || v23 != v21)
            {
              v28 = *((_OWORD *)v21 - 4);
              v29 = *((_OWORD *)v21 - 3);
              v30 = *((_OWORD *)v21 - 1);
              *((_OWORD *)v22 + 2) = *((_OWORD *)v21 - 2);
              *((_OWORD *)v22 + 3) = v30;
              *(_OWORD *)v22 = v28;
              *((_OWORD *)v22 + 1) = v29;
            }
            v24 = v6;
            v21 -= 64;
            if (v6 <= v7)
              break;
          }
          else
          {
            v24 = v6 - 64;
            if (v23 != v6 || v22 >= v6)
            {
              v25 = *(_OWORD *)v24;
              v26 = *((_OWORD *)v6 - 3);
              v27 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v22 + 2) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v22 + 3) = v27;
              *(_OWORD *)v22 = v25;
              *((_OWORD *)v22 + 1) = v26;
            }
            v34 = v6 - 64;
            if (v24 <= v7)
              break;
          }
          v22 -= 64;
          v6 = v24;
        }
        while (v21 > v4);
      }
LABEL_44:
      sub_21E568((void **)&v34, &v33, &v32);
      return 1;
    }
  }
  else if (v8 >= -63)
  {
    if (__dst != __src || &__src[64 * v10] <= __dst)
      memmove(__dst, __src, v10 << 6);
    v14 = &v4[64 * v10];
    v32 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 64)
    {
      v15 = v4;
      while (1)
      {
        if (*((_QWORD *)v15 + 6) >= *((_QWORD *)v6 + 6))
        {
          v4 = v15 + 64;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 64;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 64;
          }
        }
        else
        {
          v16 = v6 + 64;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        v18 = *(_OWORD *)v17;
        v19 = *((_OWORD *)v17 + 1);
        v20 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v7 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v7 + 3) = v20;
        *(_OWORD *)v7 = v18;
        *((_OWORD *)v7 + 1) = v19;
LABEL_22:
        v7 += 64;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v33 = v4;
        v34 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1F4740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeHeroTextArea.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_1F4784(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  char v31;
  __n128 v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  double v38;
  uint64_t v39;
  char v40;
  uint64_t (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t inited;
  _QWORD *v47;
  Swift::String v48;
  Swift::String v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  void *v67;
  _QWORD *v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  int *v78;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  char v95[32];
  _QWORD v96[4];

  v82 = type metadata accessor for PUITextStyle(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v80 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  __chkstk_darwin(v92);
  v87 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for EnvironmentValues(0);
  v86 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v91 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EpisodeHeroTextArea.Metrics(0);
  __chkstk_darwin(v9);
  v93 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey(0);
  __chkstk_darwin(v11);
  v89 = (uint64_t)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v80 - v14;
  v16 = type metadata accessor for DynamicTypeSize(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v80 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v80 - v24;
  v26 = sub_14D464();
  v27 = EnvironmentValues.subscript.getter(v96, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v26);
  v28 = v96[0];
  EnvironmentValues.dynamicTypeSize.getter(v27);
  v29 = &v15[*(int *)(v11 + 24)];
  v30 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v90 = v25;
  v30(v29, v25, v16);
  *(double *)v15 = a3;
  *((_QWORD *)v15 + 1) = v28;
  if (qword_3CFB08 != -1)
    swift_once(&qword_3CFB08, sub_1F3CB4);
  swift_beginAccess(&off_3DC288, v96, 32, 0);
  if (*(_QWORD *)((char *)&dword_10 + (_QWORD)off_3DC288) && (sub_370B4((uint64_t)v15), (v31 & 1) != 0))
  {
    swift_endAccess(v96);
    sub_FA4C((uint64_t)v15, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v90, v16);
  }
  else
  {
    v32 = swift_endAccess(v96);
    v33 = EnvironmentValues.displayScale.getter(v32);
    v34 = v86;
    v35 = a1;
    v36 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v91, v35, v88);
    v37 = EnvironmentValues.subscript.getter(v96, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v26);
    v38 = *(double *)v96;
    EnvironmentValues.dynamicTypeSize.getter(v37);
    v39 = v87;
    sub_CE64(v87, v38);
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DynamicTypeSize.xSmall(_:), v16);
    v40 = static DynamicTypeSize.== infix(_:_:)(v22, v19);
    v41 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    v42 = v41(v19, v16);
    v85 = v16;
    if ((v40 & 1) != 0)
    {
      v43 = v39 + *(int *)(v92 + 20);
      v44 = v80;
      PUITextStyle.standardLeading.getter(v42);
      v41(v22, v16);
      (*(void (**)(uint64_t, char *, uint64_t))(v81 + 40))(v43, v44, v82);
    }
    else
    {
      v41(v22, v16);
    }
    sub_1B79C(v39, v93, type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v91, v36);
    v45 = type metadata accessor for LineCountLayoutGroup();
    inited = swift_initStackObject(v45, v95);
    *(_QWORD *)(inited + 24) = _swiftEmptyArrayStorage;
    v47 = (_QWORD *)(inited + 24);
    *(_QWORD *)(inited + 16) = 0x7FFFFFFFFFFFFFFFLL;
    v48._countAndFlagsBits = 77;
    v48._object = (void *)0xE100000000000000;
    v49 = String.init(repeating:count:)(v48, 200);
    v50 = (void *)PUITextStyle.uiFont.getter(v49._countAndFlagsBits);
    if (qword_3CEFC8 != -1)
      swift_once(&qword_3CEFC8, sub_B58C);
    v51 = qword_3FA860;
    swift_beginAccess(v47, v96, 33, 0);
    v52 = (_QWORD *)*v47;
    swift_bridgeObjectRetain(v49._object);
    v53 = v50;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v52);
    v84 = v15;
    v83 = (void (*)(char *, uint64_t))v41;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v52 = sub_20FD00(0, v52[2] + 1, 1, v52);
    v56 = v52[2];
    v55 = v52[3];
    if (v56 >= v55 >> 1)
      v52 = sub_20FD00((_QWORD *)(v55 > 1), v56 + 1, 1, v52);
    v52[2] = v56 + 1;
    v57 = &v52[8 * v56];
    *((Swift::String *)v57 + 2) = v49;
    v57[6] = v50;
    *((double *)v57 + 7) = v33;
    *((_BYTE *)v57 + 64) = 1;
    *(_OWORD *)(v57 + 9) = xmmword_2F11D0;
    v57[11] = v51;
    *v47 = v52;
    sub_1F3CC8(v47);
    swift_endAccess(v96);

    v59 = (void *)PUITextStyle.uiFont.getter(v58);
    if (qword_3CEFD0 != -1)
      swift_once(&qword_3CEFD0, sub_B59C);
    v60 = qword_3FA868;
    swift_beginAccess(v47, v96, 33, 0);
    v61 = (_QWORD *)*v47;
    swift_bridgeObjectRetain(v49._object);
    v62 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native(v61) & 1) == 0)
      v61 = sub_20FD00(0, v61[2] + 1, 1, v61);
    v64 = v61[2];
    v63 = v61[3];
    if (v64 >= v63 >> 1)
      v61 = sub_20FD00((_QWORD *)(v63 > 1), v64 + 1, 1, v61);
    v61[2] = v64 + 1;
    v65 = &v61[8 * v64];
    *((Swift::String *)v65 + 2) = v49;
    v65[6] = v59;
    *((double *)v65 + 7) = v33;
    *((_BYTE *)v65 + 64) = 1;
    *(_OWORD *)(v65 + 9) = xmmword_2FF4E0;
    v65[11] = v60;
    *v47 = v61;
    sub_1F3CC8(v47);
    swift_endAccess(v96);

    v67 = (void *)PUITextStyle.uiFont.getter(v66);
    swift_beginAccess(v47, v96, 33, 0);
    v68 = (_QWORD *)*v47;
    swift_bridgeObjectRetain(v49._object);
    v69 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native(v68) & 1) == 0)
      v68 = sub_20FD00(0, v68[2] + 1, 1, v68);
    v71 = v68[2];
    v70 = v68[3];
    if (v71 >= v70 >> 1)
      v68 = sub_20FD00((_QWORD *)(v70 > 1), v71 + 1, 1, v68);
    v68[2] = v71 + 1;
    v72 = &v68[8 * v71];
    *((Swift::String *)v72 + 2) = v49;
    v72[6] = v67;
    *((double *)v72 + 7) = v33;
    *((_BYTE *)v72 + 64) = 1;
    *(_OWORD *)(v72 + 9) = xmmword_2FF4F0;
    v72[11] = 0;
    *(_QWORD *)(inited + 24) = v68;
    sub_1F3CC8(v47);
    swift_endAccess(v96);

    swift_bridgeObjectRelease(v49._object);
    sub_20BDD8(a2, a3);
    v74 = v73;
    v75 = (uint64_t)v84;
    v76 = v89;
    sub_19C4C((uint64_t)v84, v89, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
    swift_beginAccess(&off_3DC288, v96, 33, 0);
    v77 = swift_isUniquelyReferenced_nonNull_native(off_3DC288);
    v94 = off_3DC288;
    off_3DC288 = (int *)0x8000000000000000;
    sub_15FACC(v76, v77, v74);
    v78 = off_3DC288;
    off_3DC288 = v94;
    swift_bridgeObjectRelease(v78);
    sub_FA4C(v76, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
    swift_endAccess(v96);
    swift_release(inited);
    sub_FA4C(v93, type metadata accessor for EpisodeHeroTextArea.Metrics);
    sub_FA4C(v75, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
    v83(v90, v85);
  }
  return a2;
}

char *sub_1F4FE4(uint64_t a1, char *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  char *v19;
  void *v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  id *v25;
  void *v26;
  uint64_t v27;
  __n128 v28;
  void (*v29)(char *, uint64_t, uint64_t);
  unint64_t v30;
  _QWORD *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  objc_class *v42;
  char *v43;
  void *v44;
  void *v45;
  void *v46;
  char *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD aBlock[5];
  uint64_t v69;
  objc_super v70;

  v65 = a1;
  v4 = type metadata accessor for PUITextStyle(0);
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  __chkstk_darwin(v4);
  v59 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  __chkstk_darwin(v58);
  v66 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for DynamicTypeSize(0);
  v62 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - v10;
  v12 = type metadata accessor for EnvironmentValues(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for EpisodeHeroTextArea.Metrics(0);
  __chkstk_darwin(v16);
  v63 = (uint64_t)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionGenerator] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView____lazy_storage___layout] = 0;
  v18 = (id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption];
  v19 = v2;
  *v18 = sub_1F2248();
  v18[1] = v20;
  v21 = &v19[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_title];
  v22 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v22, "setAdjustsFontForContentSizeCategory:", 1);
  v23 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v22, "setTextColor:", v23);

  if (qword_3CEFD0 != -1)
    swift_once(&qword_3CEFD0, sub_B59C);
  v24 = qword_3FA868;
  *(_QWORD *)v21 = v22;
  *((_QWORD *)v21 + 1) = v24;
  v25 = (id *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_summary];
  *v25 = sub_1F2360();
  v25[1] = v26;
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_playedIcon] = 0;
  v27 = v65;
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_episode] = v65;
  v28 = swift_retain(v27);
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_graph] = EnvironmentValues.graph.getter(v28);
  v65 = v13;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v29(&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_environment], (uint64_t)a2, v12);
  v29(v15, (uint64_t)a2, v12);
  v30 = sub_14D464();
  v31 = EnvironmentValues.subscript.getter(aBlock, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v30);
  v32 = *(double *)aBlock;
  EnvironmentValues.dynamicTypeSize.getter(v31);
  v33 = v66;
  sub_CE64(v66, v32);
  v34 = v62;
  v35 = v64;
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v8, enum case for DynamicTypeSize.xSmall(_:), v64);
  LOBYTE(v29) = static DynamicTypeSize.== infix(_:_:)(v11, v8);
  v36 = *(uint64_t (**)(char *, uint64_t))(v34 + 8);
  v37 = v36(v8, v35);
  v67 = a2;
  if ((v29 & 1) != 0)
  {
    v38 = v59;
    v39 = v33 + *(int *)(v58 + 20);
    PUITextStyle.standardLeading.getter(v37);
    v36(v11, v35);
    (*(void (**)(uint64_t, char *, uint64_t))(v60 + 40))(v39, v38, v61);
  }
  else
  {
    v36(v11, v35);
  }
  v40 = v63;
  sub_1B79C(v33, v63, type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles);
  v41 = *(void (**)(char *, uint64_t))(v65 + 8);
  v41(v15, v12);
  sub_1B79C(v40, (uint64_t)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_metrics], type metadata accessor for EpisodeHeroTextArea.Metrics);

  v42 = (objc_class *)type metadata accessor for EpisodeHeroTextAreaUIKitView(0);
  v70.receiver = v19;
  v70.super_class = v42;
  v43 = (char *)objc_msgSendSuper2(&v70, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v44 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption];
  v45 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_title];
  v46 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_summary];
  v47 = v43;
  v48 = v44;
  v49 = v45;
  v50 = v46;
  objc_msgSend(v47, "addSubview:", v48);
  objc_msgSend(v47, "addSubview:", v49);
  objc_msgSend(v47, "addSubview:", v50);

  v51 = objc_msgSend(v47, "layer");
  objc_msgSend(v51, "setAllowsGroupBlending:", 0);

  v52 = swift_allocObject(&unk_38AE00, 24, 7);
  swift_unknownObjectWeakInit(v52 + 16, v47);
  aBlock[4] = sub_1F57B0;
  v69 = v52;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AC234;
  aBlock[3] = &block_descriptor_47;
  v53 = _Block_copy(aBlock);
  v54 = v69;
  v55 = v47;
  objc_msgSend(v55, "setAccessibilityLabelBlock:", v53, swift_release(v54).n128_f64[0]);
  _Block_release(v53);

  sub_1F283C();
  sub_1F2AFC();

  v41(v67, v12);
  return v55;
}

void sub_1F5594()
{
  char *v0;
  id *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  char *v6;
  uint64_t v7;
  id *v8;
  void *v9;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionGenerator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_captionSubscription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView____lazy_storage___layout] = 0;
  v1 = (id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_caption];
  *v1 = sub_1F2248();
  v1[1] = v2;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_title;
  v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v4, "setAdjustsFontForContentSizeCategory:", 1);
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v4, "setTextColor:", v5);

  if (qword_3CEFD0 != -1)
    swift_once(&qword_3CEFD0, sub_B59C);
  v6 = &v0[v3];
  v7 = qword_3FA868;
  *(_QWORD *)v6 = v4;
  *((_QWORD *)v6 + 1) = v7;
  v8 = (id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_summary];
  *v8 = sub_1F2360();
  v8[1] = v9;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28EpisodeHeroTextAreaUIKitView_playedIcon] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/EpisodeHeroTextAreaUIKit.swift", 54, 2, 175, 0);
  __break(1u);
}

ValueMetadata *type metadata accessor for EpisodeHeroTextAreaUIKit()
{
  return &type metadata for EpisodeHeroTextAreaUIKit;
}

unint64_t sub_1F5714()
{
  unint64_t result;

  result = qword_3DC320;
  if (!qword_3DC320)
  {
    result = swift_getWitnessTable(&unk_2FF62C, &type metadata for EpisodeHeroTextAreaUIKit);
    atomic_store(result, (unint64_t *)&qword_3DC320);
  }
  return result;
}

unint64_t sub_1F5758()
{
  unint64_t result;

  result = qword_3DC328;
  if (!qword_3DC328)
  {
    result = swift_getWitnessTable("\u0378\b", &type metadata for EpisodeHeroTextAreaUIKit);
    atomic_store(result, (unint64_t *)&qword_3DC328);
  }
  return result;
}

uint64_t type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey(uint64_t a1)
{
  return sub_AE00(a1, qword_3DC398, (uint64_t)&nominal type descriptor for EpisodeHeroTextAreaUIKitView.CacheKey);
}

uint64_t sub_1F57B0()
{
  uint64_t v0;

  return sub_1F244C(v0);
}

uint64_t block_copy_helper_47(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_47(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t *sub_1F57D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1F5858(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = type metadata accessor for DynamicTypeSize(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_1F5890(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1F58EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1F5950(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1F59AC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1F5A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1F5A14);
}

uint64_t sub_1F5A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = type metadata accessor for DynamicTypeSize(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1F5A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1F5A60);
}

uint64_t sub_1F5A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = type metadata accessor for DynamicTypeSize(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1F5AA4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for DynamicTypeSize(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1F5B1C()
{
  return sub_89A0(&qword_3DC3D8, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey, (uint64_t)&unk_2FF688);
}

id sub_1F5BE8(uint64_t a1)
{
  return sub_1E63D4(a1, type metadata accessor for ActivityViewController);
}

uint64_t type metadata accessor for ActivityViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews22ActivityViewController);
}

void sub_1F5C20(_QWORD *a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  NSString *v16;
  NSString *v17;
  NSString *v18;
  char *v19;
  _QWORD *boxed_opaque_existential_0;
  NSString *v21;
  NSString *v22;
  NSString *v23;
  char v24;
  char v25;
  __n128 v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  _QWORD *v34;
  char v35[56];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(v2, "activityType", v9);
  if (!v12)
  {
    v19 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UrlActivityItemProvider_url];
    a1[3] = v7;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a1);
    (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(boxed_opaque_existential_0, v19, v7);
    return;
  }
  v13 = v12;
  v34 = a1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC498);
  inited = swift_initStackObject(v14, v35);
  *(_OWORD *)(inited + 16) = xmmword_2F5ED0;
  *(_QWORD *)(inited + 32) = UIActivityTypeAirDrop;
  *(_QWORD *)(inited + 40) = UIActivityTypeMail;
  *(_QWORD *)(inited + 48) = UIActivityTypeCopyToPasteboard;
  sub_E8BC0((uint64_t)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UrlActivityItemProvider_shortUrl], (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v16 = UIActivityTypeAirDrop;
    v17 = UIActivityTypeMail;
    v18 = UIActivityTypeCopyToPasteboard;
    swift_bridgeObjectRelease(inited);
    sub_E8C08((uint64_t)v6);
  }
  else
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v33(v11, v6, v7);
    v21 = UIActivityTypeAirDrop;
    v22 = UIActivityTypeMail;
    v23 = UIActivityTypeCopyToPasteboard;
    sub_17C274((uint64_t)v13, inited);
    v25 = v24;
    v26 = swift_bridgeObjectRelease(inited);
    if ((v25 & 1) == 0)
    {
      v30 = v34;
      v34[3] = v7;
      v31 = (char *)__swift_allocate_boxed_opaque_existential_0(v30);
      v33(v31, v11, v7);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v26);
  }
  v27 = v34;
  v28 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UrlActivityItemProvider_url];
  v34[3] = v7;
  v29 = __swift_allocate_boxed_opaque_existential_0(v27);
  (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v29, v28, v7);
LABEL_9:

}

id sub_1F5E88()
{
  return sub_1E63D4(0, (uint64_t (*)(void))type metadata accessor for UrlActivityItemProvider);
}

uint64_t sub_1F5EE8()
{
  return type metadata accessor for UrlActivityItemProvider(0);
}

uint64_t type metadata accessor for UrlActivityItemProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_3DC448;
  if (!qword_3DC448)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UrlActivityItemProvider);
  return result;
}

void sub_1F5F2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = &unk_2FF748;
  v2 = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1F5FC0(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_1F5FC0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3DC458)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3DC458);
  }
}

id sub_1F6020(void *a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr))
{
  id v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  _QWORD v9[3];
  uint64_t v10;

  v4 = a1;
  a3(v9);

  v5 = v10;
  v6 = __swift_project_boxed_opaque_existential_1(v9, v10);
  v7 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v6, v5);
  __swift_destroy_boxed_opaque_existential_0(v9);
  return v7;
}

void sub_1F6080(_QWORD *a1@<X8>)
{
  char *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  NSString *v13;
  uint64_t v14;
  uint64_t v15;
  NSString *v16;

  v3 = objc_msgSend(v1, "activityType");
  if (!v3)
    goto LABEL_7;
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityTypeCopyToPasteboard);
  if (v5 == v8 && v7 == v9)
  {
    v16 = UIActivityTypeCopyToPasteboard;

    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    v13 = UIActivityTypeCopyToPasteboard;

    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    if ((v12 & 1) == 0)
    {
LABEL_7:
      v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24TextActivityItemProvider_text];
      v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24TextActivityItemProvider_text + 8];
      a1[3] = &type metadata for String;
      *a1 = v15;
      a1[1] = v14;
      swift_bridgeObjectRetain(v14);
      return;
    }
  }
  a1[3] = &type metadata for String;
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

void sub_1F61BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 v8;
  _QWORD v9[4];

  v8 = swift_unknownObjectRetain(a3);
  _bridgeAnyObjectToAny(_:)(v9, a3, v8);
  swift_unknownObjectRelease(a3);
  _swift_stdlib_reportUnimplementedInitializer(a4, a5, "init(placeholderItem:)", 22, 0);
  __break(1u);
}

id sub_1F6218(uint64_t a1)
{
  return sub_1E63D4(a1, type metadata accessor for TextActivityItemProvider);
}

uint64_t type metadata accessor for TextActivityItemProvider()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24TextActivityItemProvider);
}

uint64_t sub_1F6258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t countAndFlagsBits;
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v14;

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityTypeCopyToPasteboard);
  if (v1 == v4 && v3 == v5)
  {
    swift_bridgeObjectRelease_n(v3, 2);
    goto LABEL_8;
  }
  v7 = v5;
  v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v4, v5, 0);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v7);
  if ((v8 & 1) != 0)
  {
LABEL_8:
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v14._object = (void *)0xE000000000000000;
    v11._object = (void *)0x80000000003149E0;
    v11._countAndFlagsBits = 0xD000000000000015;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v14._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v14)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  return 0;
}

id sub_1F636C(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  id v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void (*v44)(uint64_t, uint64_t, __n128);
  uint64_t v45;
  __n128 v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  NSString v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  __n128 v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  __n128 v73;
  __n128 v74;
  uint64_t v76;
  uint64_t (*v77)(char *, uint64_t, uint64_t, uint64_t);
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, __n128);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v93 = a3;
  v91 = a1;
  v3 = a2;
  v84 = type metadata accessor for UIButton.Configuration(0);
  v4 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v76 - v8;
  v89 = type metadata accessor for ArtworkModel(0);
  v87 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v12);
  v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v86 = (char *)&v76 - v16;
  v85 = type metadata accessor for ActionMenuBuilder(0);
  v88 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v90 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ActionMenu(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v22);
  v27 = (char *)&v76 - v24;
  if (v3)
  {
    v28 = v3;
    v29 = v91;
    v30 = v25;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16))((char *)&v76 - v24, v91, v25, v26);
    type metadata accessor for GlyphButton(0);
    if (v28 == 2)
      v31 = 2;
    else
      v31 = 1;
    v32 = v93;
    v33 = sub_1F6904((uint64_t)v27, v31, v93);
    v34 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v92)), "initWithCustomView:", v33);

    v35 = swift_release(v32);
    (*(void (**)(uint64_t, uint64_t, __n128))(v19 + 8))(v29, v30, v35);
  }
  else
  {
    v78 = v11;
    v79 = v6;
    v80 = v9;
    v81 = v4;
    v36 = v25;
    ActionMenuBuilder.init()(v23);
    v37 = (uint64_t)v86;
    v38 = v87;
    v39 = v89;
    v77 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56);
    v40 = v77(v86, 1, 1, v89);
    v41 = v91;
    ActionMenu.children.getter(v40);
    v42 = ActionMenu.ID.init()();
    ActionMenu.init(id:title:subtitle:icon:children:)(v42);
    v43 = (void *)ActionMenuBuilder.buildMenu(_:asPartOf:)(v21, v93);
    v44 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 8);
    v45 = v41;
    v82 = v44;
    v83 = v36;
    v46.n128_f64[0] = ((double (*)(char *, uint64_t))v44)(v21, v36);
    ActionMenu.icon.getter(v46);
    v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v14, 1, v39);
    v48 = v85;
    v49 = v88;
    if (v47 == 1)
    {
      sub_D1D4((uint64_t)v14, &qword_3D0A58);
      v50 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleBody, 1);
      v51 = v80;
      v52 = static UIButton.Configuration.borderless()();
      v53 = ActionMenu.title.getter(v52);
      UIButton.Configuration.title.setter(v53, v54);
      v55 = v50;
      v56 = String._bridgeToObjectiveC()();
      v57 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v56, v55);

      UIButton.Configuration.image.setter(v57);
      v58 = UIButton.Configuration.imagePlacement.setter(8);
      UIButton.Configuration.imagePadding.setter(v58, 4.0);
      sub_1F6D60();
      v59 = v81;
      v60 = v79;
      v61 = v48;
      v62 = v84;
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v79, v51, v84);
      v63 = (void *)UIButton.init(configuration:primaryAction:)(v60, 0);
      objc_msgSend(v63, "setMenu:", v43);
      objc_msgSend(v63, "setShowsMenuAsPrimaryAction:", 1);
      v34 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v92)), "initWithCustomView:", v63);

      v64 = swift_release(v93);
      v82(v45, v83, v64);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v51, v62);
      (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v90, v61, v65);
    }
    else
    {
      v66 = (uint64_t)v78;
      v67 = sub_2376C((uint64_t)v14, (uint64_t)v78);
      v68 = ActionMenu.title.getter(v67);
      v70 = v69;
      type metadata accessor for SystemGlyph(0);
      sub_27E84(v66, v37);
      v77((char *)v37, 0, 1, v89);
      v71 = static SystemGlyph.load(artwork:)(v37);
      sub_D1D4(v37, &qword_3D0A58);
      v72 = v43;
      v34 = (id)UIBarButtonItem.init(title:image:target:action:menu:)(v68, v70, v71, 0, 0, v43);

      v73 = swift_release(v93);
      v82(v45, v83, v73);
      sub_239C0(v66);
      (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v90, v48, v74);
    }
  }
  return v34;
}

id sub_1F6904(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a3;
  v54 = a2;
  v60 = type metadata accessor for ActionMenu(0);
  v57 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v56 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v5);
  v52 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkModel(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v48 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v13);
  v50 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v47 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  __chkstk_darwin(v21);
  v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Glyph(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v47 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v28);
  v49 = (char *)&v47 - v30;
  v59 = a1;
  ActionMenu.icon.getter(v29);
  sub_DA064((uint64_t)v20, (uint64_t)v17);
  v51 = v8;
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v53 = v7;
  if (v31(v17, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
  }
  else
  {
    sub_2376C((uint64_t)v17, (uint64_t)v12);
    v32 = v48;
    sub_27E84((uint64_t)v12, v48);
    Glyph.init(from:)(v32);
    sub_239C0((uint64_t)v12);
  }
  sub_D1D4((uint64_t)v20, &qword_3D0A58);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
  v34 = v49;
  if (v33 == 1)
  {
    v46 = 0;
    Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(0x73697370696C6C65, 0xE800000000000000, 0, 1, 4, -1, 0, 0, v46);
    sub_D1D4((uint64_t)v23, (uint64_t *)&unk_3D9F00);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v49, v23, v24);
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v34, v24);
  v35 = type metadata accessor for Glyph.Color(0);
  v36 = v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v52, 1, 1, v35);
  v37 = (void *)(*(uint64_t (**)(char *, char *, _QWORD, _QWORD, _QWORD, double, double, double, double))(v55 + 328))(v27, v36, v54, 0, 0, 0.0, 0.0, 0.0, 0.0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v50, 1, 1, v53);
  v38 = v37;
  v39 = v59;
  ActionMenu.children.getter();
  v40 = ActionMenu.ID.init()();
  v41 = v56;
  ActionMenu.init(id:title:subtitle:icon:children:)(v40);
  UIButton.setMenu(_:asPartOf:)(v41, v58);

  v42 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v43 = v39;
  v44 = v60;
  v42(v43, v60);
  v42((uint64_t)v41, v44);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v34, v24);
  return v38;
}

unint64_t sub_1F6D60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E1860;
  if (!qword_3E1860)
  {
    v1 = objc_opt_self(UIButton);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3E1860);
  }
  return result;
}

uint64_t sub_1F6D9C(uint64_t a1)
{
  return sub_1F70DC(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t, __n128))sub_1F897C);
}

uint64_t sub_1F6DA8(uint64_t a1)
{
  return sub_1F70DC(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t, __n128))sub_1F8C14);
}

void sub_1F6DB4(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_20F184(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_1F6F0C(uint64_t a1)
{
  return sub_1F70DC(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t, __n128))sub_1F8E28);
}

uint64_t sub_1F6F18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((char *)&dword_18 + (v4 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1F903C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_1F70D0(uint64_t a1)
{
  return sub_1F70DC(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t, __n128))sub_1F9250);
}

uint64_t sub_1F70DC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t, __n128))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v20 = *v2;
  else
    v20 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v11 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((char *)&dword_18 + (v6 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v12 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v12 <= v8)
      v12 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v12, 1, v6);
    v10 = swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v11 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v11 + 8 * *(_QWORD *)(v11 + 16) + 32, (*(_QWORD *)(v11 + 24) >> 1) - *(_QWORD *)(v11 + 16), a1, v10);
    if (v14 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v21 = v6;
    else
      v21 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v12 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v6);
  }
  if (v14 < 1)
    goto LABEL_19;
  v15 = *(_QWORD *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8));
  v16 = __OFADD__(v15, v14);
  v17 = v15 + v14;
  if (!v16)
  {
    *(_QWORD *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8)) = v17;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v18);
  }
  __break(1u);
  return result;
}

void sub_1F7298(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_20F948(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_1F73E8(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  char v24;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_20FA7C(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for CategorySection(0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy(v14);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v24 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v24, 1092, 0);
  __break(1u);
}

void sub_1F7550(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_20FBB8(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for OutlineItem(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

char *sub_1F76C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  _BYTE *v8;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t Strong;
  void *v29;
  char *v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t (*v39)(uint64_t, uint64_t);
  char *v40;
  id v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t v46;
  objc_super v51;

  v13 = &v8[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationBar];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13, 0);
  v14 = &v8[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationItem];
  swift_unknownObjectWeakInit(&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationItem], 0);
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_active;
  v8[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_active] = 0;
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_cellWidth;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_cellWidth] = 0;
  v17 = (uint64_t *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_statusBarStyleHandler];
  *v17 = 0;
  v17[1] = 0;
  v18 = &v8[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_cell];
  *((_QWORD *)v18 + 1) = 0;
  v19 = swift_unknownObjectWeakInit(v18, 0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator____lazy_storage___scrollConfigurations] = 0;
  *(_QWORD *)(v19 + 8) = a2;
  swift_unknownObjectWeakAssign(v19, a1);
  v8[v15] = 1;
  *((_QWORD *)v13 + 1) = a4;
  v20 = v13;
  v21 = a5;
  swift_unknownObjectWeakAssign(v20, a3);
  swift_unknownObjectWeakAssign(v14, a5);
  v22 = v8;
  objc_msgSend(a1, "frame");
  *(_QWORD *)&v8[v16] = v23;
  v24 = *v17;
  v25 = v17[1];
  *v17 = a7;
  v17[1] = a8;
  sub_2C690(a7, a8);
  sub_1D618(v24, v25);

  v51.receiver = v22;
  v51.super_class = (Class)type metadata accessor for ModernUberScrollCoordinator();
  v26 = (char *)objc_msgSendSuper2(&v51, "init");
  v27 = v26;
  if (a6)
  {
    if ((v26[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_active] & 1) != 0)
    {
      Strong = swift_unknownObjectWeakLoadStrong(&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationItem]);
      if (Strong)
      {
        v29 = (void *)Strong;
        v30 = v27;
        v31 = a6;
      }
      else
      {
        v34 = &v27[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationBar];
        v35 = swift_unknownObjectWeakLoadStrong(&v27[OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationBar]);
        if (v35)
        {
          v36 = v35;
          v37 = *((_QWORD *)v34 + 1);
          ObjectType = swift_getObjectType();
          v46 = a7;
          v39 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 152);
          v40 = v27;
          v41 = a6;
          v42 = v39(ObjectType, v37);
          a7 = v46;
          v29 = (void *)v42;
          swift_unknownObjectRelease(v36);
        }
        else
        {
          v43 = v27;
          v44 = a6;
          v29 = 0;
        }
      }
      sub_1F7A8C(a6, v29);

      sub_1D618(a7, a8);
      swift_unknownObjectRelease(a3);

      v21 = a6;
    }
    else
    {
      v33 = v26;
      sub_1D618(a7, a8);
      swift_unknownObjectRelease(a3);
    }

  }
  else
  {
    v32 = v26;
    sub_1D618(a7, a8);

    swift_unknownObjectRelease(a3);
    a1 = a5;
  }

  return v27;
}

_QWORD *sub_1F795C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator____lazy_storage___scrollConfigurations;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator____lazy_storage___scrollConfigurations);
  if (v2)
  {
    v3 = *(_QWORD **)(v0
                    + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator____lazy_storage___scrollConfigurations);
  }
  else
  {
    v3 = sub_1F9464();
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

void sub_1F79BC(void *a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  id v10;
  id v11;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_active) == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationItem);
    if (Strong)
    {
      v4 = (void *)Strong;
    }
    else
    {
      v5 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationBar;
      v6 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationBar);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)(v5 + 8);
        ObjectType = swift_getObjectType();
        v10 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 152))(ObjectType, v8);
        swift_unknownObjectRelease(v7);
        v4 = v10;
      }
      else
      {
        v4 = 0;
      }
    }
    v11 = v4;
    sub_1F7A8C(a1, v4);

  }
}

void sub_1F7A8C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  __n128 v30;
  double v31;
  double v32;
  uint64_t v33;
  void (*v34)(BOOL);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id Strong;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC518);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UberScrollConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_cell;
  Strong = (id)swift_unknownObjectWeakLoadStrong(v13);
  if (Strong)
  {
    v14 = *(_QWORD *)(v13 + 8);
    v15 = v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationBar;
    v16 = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_navigationBar);
    if (v16)
    {
      v17 = v16;
      v37 = *(_QWORD *)(v15 + 8);
      v38 = a2;
      ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v14 + 8))(a1, ObjectType, v14);
      objc_msgSend(a1, "contentOffset");
      v20 = v19;
      objc_msgSend(a1, "contentInset");
      v22 = v21;
      objc_msgSend(a1, "_systemContentInset");
      v24 = v23;
      v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(ObjectType, v14);
      v26 = sub_1F795C();
      if (v26[2] && (v27 = sub_36FE4(v25), (v28 & 1) != 0))
      {
        sub_1A0280(v26[7] + *(_QWORD *)(v10 + 72) * v27, (uint64_t)v8);
        v29 = 0;
      }
      else
      {
        v29 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v29, 1, v9);
      v30 = swift_bridgeObjectRelease(v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v30) == 1)
      {

        swift_unknownObjectRelease(v17);
        sub_1F8B90((uint64_t)v8);
      }
      else
      {
        v31 = v20 + v22 + v24;
        sub_1F8BD0((uint64_t)v8, (uint64_t)v12);
        v32 = (*(double (**)(uint64_t, uint64_t))(v14 + 40))(ObjectType, v14);
        v33 = v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_statusBarStyleHandler;
        v34 = *(void (**)(BOOL))(v3
                                          + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_statusBarStyleHandler);
        v35 = *(_QWORD *)(v33 + 8);
        sub_2C690((uint64_t)v34, v35);
        sub_19EE08(v31, v32, (uint64_t)Strong, v14, v17, v37, v38, v34, v35);
        sub_1D618((uint64_t)v34, v35);

        swift_unknownObjectRelease(v17);
        sub_1A02C4((uint64_t)v12);
      }
    }
    else
    {

    }
  }
}

id sub_1F7D94()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ModernUberScrollCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t UINavigationBar.barButtonItems.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v1 = objc_msgSend(v0, "items");
  if (!v1)
    return (unint64_t)_swiftEmptyArrayStorage;
  v2 = v1;
  v3 = sub_E710(0, &qword_3DC4A0, UINavigationItem_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    if (v5)
      goto LABEL_4;
    goto LABEL_20;
  }
  if (v4 < 0)
    v17 = v4;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  if (!v5)
  {
LABEL_20:
    swift_bridgeObjectRelease(v4);
    return (unint64_t)_swiftEmptyArrayStorage;
  }
LABEL_4:
  result = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_24:
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v4);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (result >= *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8)))
  {
LABEL_26:
    __break(1u);
    return result;
  }
  v7 = *(id *)(v4 + 8 * result + 32);
LABEL_9:
  v8 = v7;
  v9 = objc_msgSend(v7, "leftBarButtonItems", swift_bridgeObjectRelease(v4).n128_f64[0]);
  if (v9)
  {
    v10 = v9;
    v11 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    v12 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  }
  else
  {
    v12 = _swiftEmptyArrayStorage;
  }
  v13 = objc_msgSend(v8, "rightBarButtonItems");
  if (v13)
  {
    v14 = v13;
    v15 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    v16 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  }
  else
  {
    v16 = _swiftEmptyArrayStorage;
  }
  sub_1F70DC((uint64_t)v16, (uint64_t (*)(uint64_t, _QWORD, uint64_t, __n128))sub_1F9250);

  return (unint64_t)v12;
}

uint64_t (*UINavigationBar.barButtonItems.modify(unint64_t *a1))(_QWORD *)
{
  *a1 = UINavigationBar.barButtonItems.getter();
  return j__s23ShelfKitCollectionViews21FixedSpaceLabelLayoutVwxx;
}

void *UINavigationBar.accessoryViews.getter()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t (*UINavigationBar.accessoryViews.modify(_QWORD *a1))(_QWORD *)
{
  *a1 = &_swiftEmptyArrayStorage;
  return j__s23ShelfKitCollectionViews21FixedSpaceLabelLayoutVwxx;
}

_QWORD *UINavigationBar.barButtonItems(navigationItem:)(char *a1)
{
  char *v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = a1;
  if (!a1)
  {
    v2 = UINavigationBar.topNavigationItem.getter();
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  v3 = a1;
  v4 = objc_msgSend(v2, "leftBarButtonItems");
  if (v4)
  {
    v5 = v4;
    v6 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    v7 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  }
  else
  {
    v7 = _swiftEmptyArrayStorage;
  }
  v8 = objc_msgSend(v2, "rightBarButtonItems");
  if (v8)
  {
    v9 = v8;
    v10 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    v11 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  sub_1F70DC((uint64_t)v11, (uint64_t (*)(uint64_t, _QWORD, uint64_t, __n128))sub_1F9250);

  return v7;
}

char *UINavigationBar.topNavigationItem.getter()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *result;
  char *v5;
  uint64_t v6;

  v1 = (char *)objc_msgSend(v0, "items");
  if (!v1)
    return v1;
  v2 = sub_E710(0, &qword_3DC4A0, UINavigationItem_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v6 = v3;
    else
      v6 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v1 = (char *)_CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v3);
    if (!v1)
      goto LABEL_10;
  }
  else
  {
    v1 = *(char **)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
    if (!v1)
    {
LABEL_10:
      swift_bridgeObjectRelease(v3);
      return v1;
    }
  }
  result = v1 - 1;
  if (__OFSUB__(v1, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v3);
    goto LABEL_9;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)result < *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8)))
  {
    v5 = (char *)*(id *)(v3 + 8 * (_QWORD)result + 32);
LABEL_9:
    v1 = v5;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t UINavigationBar.titleAndView.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = objc_msgSend(v0, "items");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_E710(0, &qword_3DC4A0, UINavigationItem_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    if (v5)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (v4 < 0)
    v12 = v4;
  else
    v12 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(v4);
  if (!v5)
    goto LABEL_16;
LABEL_4:
  result = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_20;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_20:
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v4);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8)))
  {
    v7 = *(id *)(v4 + 8 * result + 32);
LABEL_9:
    v8 = v7;
    v9 = objc_msgSend(v7, "title", swift_bridgeObjectRelease(v4).n128_f64[0]);
    if (v9)
    {
      v10 = v9;
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);

      return v11;
    }

    return 0;
  }
  __break(1u);
  return result;
}

void sub_1F83F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = *a1;
  v2 = a1[1];
  v3 = (void *)a1[2];
  v4 = v3;
  swift_bridgeObjectRetain(v2);
  UINavigationBar.titleAndView.setter(v1, v2, v3);
}

void UINavigationBar.titleAndView.setter(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  double v13;
  NSString v14;
  uint64_t v15;
  NSString v17;

  v5 = objc_msgSend(v3, "items");
  if (!v5)
    goto LABEL_18;
  v6 = v5;
  v7 = sub_E710(0, &qword_3DC4A0, UINavigationItem_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8));
    if (v9)
      goto LABEL_4;
    goto LABEL_17;
  }
  if (v8 < 0)
    v15 = v8;
  else
    v15 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v9 = _CocoaArrayWrapper.endIndex.getter(v15);
  swift_bridgeObjectRelease(v8);
  if (!v9)
  {
LABEL_17:
    swift_bridgeObjectRelease(v8);
LABEL_18:
    swift_bridgeObjectRelease(a2);
LABEL_19:

    return;
  }
LABEL_4:
  v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_21:
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
    goto LABEL_9;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v10 < *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
  {
    v11 = *(id *)(v8 + 8 * v10 + 32);
LABEL_9:
    v12 = v11;
    swift_bridgeObjectRelease(v8);

    if (a2)
    {
      v17 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v13 = swift_bridgeObjectRelease(a2).n128_u64[0];
      v14 = v17;
    }
    else
    {
      v14 = 0;
    }
    a3 = v14;
    objc_msgSend(v12, "setTitle:", v13);

    goto LABEL_19;
  }
  __break(1u);
}

void (*UINavigationBar.titleAndView.modify(unint64_t *a1))(uint64_t *a1, char a2)
{
  unint64_t v1;
  unint64_t v3;

  a1[3] = v1;
  *a1 = UINavigationBar.titleAndView.getter();
  a1[1] = v3;
  a1[2] = 0;
  return sub_1F85F0;
}

void sub_1F85F0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *a1;
  v2 = a1[1];
  v4 = (void *)a1[2];
  if ((a2 & 1) != 0)
  {
    v5 = v4;
    swift_bridgeObjectRetain(v2);
    UINavigationBar.titleAndView.setter(v3, v2, v4);

    swift_bridgeObjectRelease(v2);
  }
  else
  {
    UINavigationBar.titleAndView.setter(*a1, v2, v4);
  }
}

uint64_t (*UINavigationBar.overrideBackButtonStyle.modify(_BYTE *a1))()
{
  *a1 = 1;
  return UINavigationBar.overrideBackButtonStyle.setter;
}

void UINavigationBar.setBackgroundOpacity(opacity:for:)(char *a1, double a2)
{
  char *v4;
  double v5;
  char *v6;

  v6 = a1;
  if (a1 || (v6 = UINavigationBar.topNavigationItem.getter()) != 0)
  {
    v4 = a1;
    objc_msgSend(v6, "_manualScrollEdgeAppearanceProgress");
    if (v5 == 0.0)
      objc_msgSend(v6, "_setManualScrollEdgeAppearanceProgress:", 1.0e-100);
    objc_msgSend(v6, "_setManualScrollEdgeAppearanceProgress:", a2);

  }
}

double UINavigationBar.barButtonItemsOpacity.getter()
{
  return 1.0;
}

uint64_t (*UINavigationBar.barButtonItemsOpacity.modify(_QWORD *a1))()
{
  *a1 = 0x3FF0000000000000;
  return UINavigationBar.overrideBackButtonStyle.setter;
}

id UINavigationBar.titleOpacity.getter()
{
  void *v0;

  return objc_msgSend(v0, "_titleOpacity");
}

id UINavigationBar.titleOpacity.setter()
{
  void *v0;

  return objc_msgSend(v0, "_setTitleOpacity:");
}

id (*UINavigationBar.titleOpacity.modify(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  uint64_t v3;

  a1[1] = v1;
  objc_msgSend(v1, "_titleOpacity");
  *a1 = v3;
  return sub_1F87A8;
}

id sub_1F87A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), "_setTitleOpacity:", *(double *)a1);
}

unint64_t sub_1F87C0()
{
  return UINavigationBar.titleAndView.getter();
}

uint64_t (*sub_1F87E0(_QWORD *a1))(_QWORD *a1)
{
  *a1 = _swiftEmptyArrayStorage;
  return destroy for FixedSpaceLabelLayout;
}

unint64_t sub_1F8804@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = UINavigationBar.barButtonItems.getter();
  *a1 = result;
  return result;
}

void sub_1F8830(_QWORD *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
}

unint64_t sub_1F8844@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = UINavigationBar.titleAndView.getter();
  *a1 = result;
  a1[1] = v3;
  a1[2] = 0;
  return result;
}

void sub_1F8874(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

id sub_1F8884@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "tintColor");
  *a2 = result;
  return result;
}

id sub_1F88BC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setTintColor:", *a1);
}

void sub_1F88D0(_QWORD *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

id sub_1F88E0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "_titleOpacity");
  *a2 = v4;
  return result;
}

id sub_1F8910(double *a1, id *a2)
{
  return objc_msgSend(*a2, "_setTitleOpacity:", *a1);
}

uint64_t type metadata accessor for ModernUberScrollCoordinator()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator);
}

uint64_t dispatch thunk of FadableNavigationBar.titleAndView.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of FadableNavigationBar.topNavigationItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of FadableNavigationBar.overrideBackButtonStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of FadableNavigationBar.overrideBackButtonStyle.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of FadableNavigationBar.overrideBackButtonStyle.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of FadableNavigationBar.setBackgroundOpacity(opacity:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of FadableNavigationBar.barButtonItems(navigationItem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t sub_1F897C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_BA0E8(&qword_3DC510, &qword_3DC508);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_3DC508);
          v13 = sub_91954(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1F8B90(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC518);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1F8BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UberScrollConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1F8C14(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_BA0E8(&qword_3DC558, &qword_3DC550);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_3DC550);
          v13 = sub_91954(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1F8E28(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_BA0E8(&qword_3DC538, &qword_3DC530);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_3DC530);
          v13 = sub_919AC(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_E710(0, (unint64_t *)&unk_3D4C80, UIMenuElement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1F903C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_BA0E8(&qword_3DC528, &qword_3DC520);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_3DC520);
          v13 = sub_91954(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_E710(0, &qword_3DA868, UILabel_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1F9250(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_BA0E8(&qword_3DC548, &qword_3DC540);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_3DC540);
          v13 = sub_91954(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_QWORD *sub_1F9464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  Class isa;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC518);
  __chkstk_darwin(v0);
  v42 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for UberScrollConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  v46 = v3;
  __chkstk_darwin(v2);
  v44 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (uint64_t)&v42 - v6;
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v9 = (_QWORD *)sub_D4E28((uint64_t)_swiftEmptyArrayStorage);
  v10 = static UberStyle.allCases.getter();
  if (*(_QWORD *)(v10 + 16))
    __asm { BR              X8 }
  v11 = swift_bridgeObjectRelease(v10);
  v12 = (id)ASKBuildTypeGetCurrent(v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF990);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_2EFA20;
  v15 = (void *)ASKBuildTypeDebug;
  v16 = (void *)ASKBuildTypeInternal;
  *(_QWORD *)(v14 + 32) = ASKBuildTypeDebug;
  *(_QWORD *)(v14 + 40) = v16;
  type metadata accessor for BuildType(0);
  v17 = v15;
  v18 = v16;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v20 = swift_bridgeObjectRelease(v14);
  LODWORD(v14) = ASKBuildTypeIsAnyOf(v12, isa, v20);

  v21 = (uint64_t)v42;
  if ((_DWORD)v14)
  {
    v22 = static UberStyle.allCases.getter();
    v23 = v22;
    v24 = *(_QWORD *)(v22 + 16);
    if (v24)
    {
      v25 = (unsigned __int8 *)(v22 + 32);
      do
      {
        while (1)
        {
          v27 = *v25++;
          v26 = v27;
          sub_19F818(v27, v21);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v21, 1, v45) != 1)
            break;
          sub_1F8B90(v21);
          if (!--v24)
            goto LABEL_20;
        }
        v28 = v43;
        sub_1F8BD0(v21, v43);
        sub_1A0280(v28, v44);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
        v47 = v9;
        v31 = sub_36FE4(v26);
        v32 = v9[2];
        v33 = (v30 & 1) == 0;
        v34 = v32 + v33;
        if (__OFADD__(v32, v33))
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UberStyle);
          __break(1u);
          JUMPOUT(0x1F9A28);
        }
        v35 = v30;
        if (v9[3] >= v34)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v9 = v47;
            if ((v30 & 1) == 0)
              goto LABEL_17;
          }
          else
          {
            sub_161790();
            v9 = v47;
            if ((v35 & 1) == 0)
              goto LABEL_17;
          }
        }
        else
        {
          sub_15DBD0(v34, isUniquelyReferenced_nonNull_native);
          v36 = sub_36FE4(v26);
          if ((v35 & 1) != (v37 & 1))
            goto LABEL_24;
          v31 = v36;
          v9 = v47;
          if ((v35 & 1) == 0)
          {
LABEL_17:
            v9[(v31 >> 6) + 8] |= 1 << v31;
            *(_BYTE *)(v9[6] + v31) = v26;
            sub_1F8BD0(v44, v9[7] + *(_QWORD *)(v46 + 72) * v31);
            v38 = v9[2];
            v39 = __OFADD__(v38, 1);
            v40 = v38 + 1;
            if (v39)
              goto LABEL_23;
            v9[2] = v40;
            goto LABEL_19;
          }
        }
        sub_1F9A40(v44, v9[7] + *(_QWORD *)(v46 + 72) * v31);
LABEL_19:
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_1A02C4(v43);
        v21 = (uint64_t)v42;
        --v24;
      }
      while (v24);
    }
LABEL_20:
    swift_bridgeObjectRelease(v23);
  }
  return v9;
}

uint64_t sub_1F9A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UberScrollConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1F9A8C()
{
  return sub_1F9AB4(&OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton____lazy_storage___loadingIndicator, (Class *)UIActivityIndicatorView_ptr);
}

id sub_1F9AA0()
{
  return sub_1F9AB4(&OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton____lazy_storage___overlayGlyphView, (Class *)UIImageView_ptr);
}

id sub_1F9AB4(uint64_t *a1, Class *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = objc_msgSend(objc_allocWithZone(*a2), "init");
    objc_msgSend(v6, "setUserInteractionEnabled:", 0);
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_1F9B44(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  objc_super v15;

  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_presenter] = 0;
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_backgroundView;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  objc_msgSend(v12, "setUserInteractionEnabled:", 0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v9] = v12;
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton____lazy_storage___loadingIndicator] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton____lazy_storage___overlayGlyphView] = 0;
  v11[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState] = 3;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for ExpandableFollowButton();
  v13 = objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
  sub_1FA870();
  objc_msgSend(v13, "addTarget:action:forControlEvents:", v13, "didTapButton", 64);
  sub_1FA0B4();

  return v13;
}

void *sub_1F9DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *Strong;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  CGSize size;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE v32[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E80);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83E8);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - v13;
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a2);
  v16 = Strong;
  if (Strong)
  {
    v17 = *(_QWORD *)&Strong[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_presenter];
    if (v17)
    {
      v18 = type metadata accessor for PresentationSource(0);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
      v19(v14, 1, 1, v18);
      swift_retain(v17);
      v20 = v16;
      v21 = UIView.mt_viewController.getter(v20);

      if (v21)
      {
        *(_QWORD *)v8 = v20;
        size = CGRectNull.size;
        *(CGPoint *)(v8 + 8) = CGRectNull.origin;
        *(CGSize *)(v8 + 24) = size;
        v31 = v19;
        v23 = enum case for PresentationSource.Position.view(_:);
        v24 = type metadata accessor for PresentationSource.Position(0);
        v30 = v18;
        v25 = *(_QWORD *)(v24 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v8, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v8, 0, 1, v24);
        v26 = v20;
        PresentationSource.init(viewController:position:)(v21, v8);
        sub_D1D4((uint64_t)v14, &qword_3D83E8);
        v31(v11, 0, 1, v30);
        sub_13EABC((uint64_t)v11, (uint64_t)v14);
      }
      v27 = type metadata accessor for InteractionContext(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v5, 1, 1, v27);
      v16 = (void *)dispatch thunk of FollowButtonPresenter.unfollowMenu(with:from:)(v5, v14);

      swift_release(v17);
      sub_D1D4((uint64_t)v5, &qword_3D83F0);
      sub_D1D4((uint64_t)v14, &qword_3D83E8);
    }
    else
    {

      return 0;
    }
  }
  return v16;
}

id sub_1FA0B4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for Glyph(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36E8);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState;
  sub_1FA31C(v1[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState]);
  v13 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 0, 1, v13);
  UIButton.configuration.setter(v11);
  objc_msgSend(v1, "setHidden:", v1[v12] == 3);
  objc_msgSend(v1, "setUserInteractionEnabled:", ((v1[v12] - 3) & 0xFD) != 0);
  objc_msgSend(v1, "setShowsMenuAsPrimaryAction:", v1[v12] - 6 < 0xFFFFFFFD);
  objc_msgSend(v1, "setContextMenuInteractionEnabled:", v1[v12] - 6 < 0xFFFFFFFD);
  if (v1[v12] == 5)
  {
    sub_1FABCC();
    v14 = v1[v12];
    if ((v14 & 1) == 0)
      goto LABEL_7;
  }
  else
  {
    v15 = sub_1F9A8C();
    objc_msgSend(v15, "removeFromSuperview");

    v14 = v1[v12];
    if ((v14 & 1) == 0)
    {
LABEL_7:
      v18 = sub_1F9AA0();
      objc_msgSend(v18, "removeFromSuperview");

      return objc_msgSend(v1, "invalidateIntrinsicContentSize");
    }
  }
  if ((v14 - 2) < 4u)
    goto LABEL_7;
  static Glyph.HeaderButtons.pause.getter();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  v16 = sub_1F9AA0();
  v17 = (void *)Glyph.image.getter(v16);
  objc_msgSend(v16, "setImage:", v17);

  sub_1FAE44();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return objc_msgSend(v1, "invalidateIntrinsicContentSize");
}

uint64_t sub_1FA31C(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t (*v22)(_BYTE *, _QWORD);
  _BYTE v24[32];
  Swift::String v25;

  v2 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  __chkstk_darwin(v3);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static UIButton.Configuration.plain()(v6);
  if (v2 == 4)
  {
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v25._object = (void *)0xE000000000000000;
    v8._object = (void *)0x800000000030D840;
    v8._countAndFlagsBits = 0xD00000000000001BLL;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v25._countAndFlagsBits = 0;
    v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v25);
    countAndFlagsBits = v10._countAndFlagsBits;
    object = v10._object;

  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  UIButton.Configuration.title.setter(countAndFlagsBits, object);
  sub_100A64(a1, (uint64_t)v5);
  v13 = type metadata accessor for Glyph(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v5, 1, v13);
  if ((_DWORD)v15 == 1)
  {
    sub_D1D4((uint64_t)v5, (uint64_t *)&unk_3D9F00);
    v16 = 0;
  }
  else
  {
    v17 = (void *)Glyph.image.getter(v15);
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v5, v13);
    v18 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
    v16 = objc_msgSend(v17, "imageWithTintColor:", v18);

  }
  UIButton.Configuration.image.setter(v16);
  v19 = (void *)objc_opt_self(UIColor);
  v20 = UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v19, "tintColor"));
  UIButton.Configuration.imagePadding.setter(v20, 4.0);
  v21 = objc_msgSend(v19, "clearColor");
  v22 = (uint64_t (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v24);
  UIBackgroundConfiguration.backgroundColor.setter(v21);
  return v22(v24, 0);
}

void sub_1FA564()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  id v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;

  v1 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_backgroundView];
  if (objc_msgSend(v0, "state") == (char *)&dword_0 + 1)
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v2 = objc_msgSend((id)qword_3D0890, "colorWithAlphaComponent:", 0.1);
  }
  else
  {
    v4 = objc_allocWithZone((Class)UIColor);
    v6[4] = sub_F5394;
    v7 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    v6[2] = sub_EBBFC;
    v6[3] = &block_descriptor_3_2;
    v5 = _Block_copy(v6);
    v2 = objc_msgSend(v4, "initWithDynamicProvider:", v5);
    _Block_release(v5);
    *(_QWORD *)&v3 = swift_release(v7).n128_u64[0];
  }
  objc_msgSend(v1, "setBackgroundColor:", v2, v3);

}

void sub_1FA6A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1188);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_presenter);
  if (v10)
  {
    v11 = type metadata accessor for InteractionContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
    v12 = type metadata accessor for PresentationSource(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = type metadata accessor for ChildAndParentLocation(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 1, 1, v13);
    swift_retain(v10);
    dispatch thunk of FollowButtonPresenter.performPrimaryAction(with:from:location:)(v9, v6, v3);
    swift_release(v10);
    sub_D1D4((uint64_t)v3, &qword_3D1188);
    sub_D1D4((uint64_t)v6, &qword_3D83E8);
    sub_D1D4((uint64_t)v9, &qword_3D83F0);
  }
}

void sub_1FA870()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  _QWORD v26[5];
  uint64_t v27;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_backgroundView;
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_backgroundView]);
  objc_msgSend(v0, "sendSubviewToBack:", *(_QWORD *)&v0[v1]);
  objc_msgSend(*(id *)&v0[v1], "setClipsToBounds:", 1);
  v2 = *(void **)&v0[v1];
  v3 = objc_allocWithZone((Class)UIColor);
  v26[4] = sub_F5394;
  v27 = 0;
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 1107296256;
  v26[2] = sub_EBBFC;
  v26[3] = &block_descriptor_48;
  v4 = _Block_copy(v26);
  v5 = v2;
  v6 = objc_msgSend(v3, "initWithDynamicProvider:", v4);
  _Block_release(v4);
  objc_msgSend(v5, "setBackgroundColor:", v6, swift_release(v27).n128_f64[0]);

  v7 = objc_msgSend(*(id *)&v0[v1], "layer");
  objc_msgSend(v7, "setCornerRadius:", 14.0);

  v8 = (void *)objc_opt_self(NSLayoutConstraint);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_2F0A20;
  v11 = objc_msgSend(*(id *)&v0[v1], "topAnchor");
  v12 = objc_msgSend(v0, "topAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(*(id *)&v0[v1], "bottomAnchor");
  v15 = objc_msgSend(v0, "bottomAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v10 + 40) = v16;
  v17 = objc_msgSend(*(id *)&v0[v1], "leadingAnchor");
  v18 = objc_msgSend(v0, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v10 + 48) = v19;
  v20 = objc_msgSend(*(id *)&v0[v1], "trailingAnchor");
  v21 = objc_msgSend(v0, "trailingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v10 + 56) = v22;
  v26[0] = v10;
  specialized Array._endMutation()(v23);
  v24 = v26[0];
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "activateConstraints:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

}

void sub_1FABCC()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  Class isa;
  id v22;

  v1 = v0;
  v2 = sub_1F9A8C();
  objc_msgSend(v1, "addSubview:", v2);

  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_2F0A20;
  v6 = sub_1F9A8C();
  v7 = objc_msgSend(v6, "centerXAnchor");

  v8 = objc_msgSend(v1, "centerXAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v5 + 32) = v9;
  v10 = sub_1F9A8C();
  v11 = objc_msgSend(v10, "centerYAnchor");

  v12 = objc_msgSend(v1, "centerYAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v5 + 40) = v13;
  v14 = sub_1F9A8C();
  v15 = objc_msgSend(v14, "heightAnchor");

  v16 = objc_msgSend(v15, "constraintEqualToConstant:", 14.0);
  *(_QWORD *)(v5 + 48) = v16;
  v17 = sub_1F9A8C();
  v18 = objc_msgSend(v17, "widthAnchor");

  v19 = objc_msgSend(v18, "constraintEqualToConstant:", 14.0);
  *(_QWORD *)(v5 + 56) = v19;
  specialized Array._endMutation()(v20);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  v22 = sub_1F9A8C();
  objc_msgSend(v22, "startAnimating");

}

void sub_1FAE44()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  Class isa;

  v1 = sub_1F9AA0();
  objc_msgSend(v0, "addSubview:", v1);

  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_2EFC90;
  v5 = sub_1F9AA0();
  v6 = objc_msgSend(v5, "leadingAnchor");

  v7 = objc_msgSend(v0, "trailingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, -10.0);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = sub_1F9AA0();
  v10 = objc_msgSend(v9, "topAnchor");

  v11 = objc_msgSend(v0, "bottomAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v11, -12.0);

  *(_QWORD *)(v4 + 40) = v12;
  specialized Array._endMutation()(v13);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

id sub_1FB008()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpandableFollowButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ExpandableFollowButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews22ExpandableFollowButton);
}

id sub_1FB0B0(id result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  char v7;
  uint64_t v8;
  int v9;
  int v10;

  v4 = (int)result;
  if (result == 3)
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState) = 5;
    return sub_1FA0B4();
  }
  if (result == 2)
  {
    v5 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState);
    *(_BYTE *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState) = 4;
    if (v5 == 4)
      return result;
    return sub_1FA0B4();
  }
  v7 = MTPodcastEpisodeLimit.allowsAutomaticDownloads.getter(a2);
  v8 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(a3);
  result = (id)DeviceCapacityMonitor.CapacityLevel.rawValue.getter(0);
  if ((v7 & 1) == 0)
  {
    v10 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState);
    *(_BYTE *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState) = 2;
    if (v10 == 2)
      return result;
    return sub_1FA0B4();
  }
  v9 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState) = v4 & 1 | (v8 != (_QWORD)result);
  if ((v9 - 3) < 3 || v9 == 2 || (((v4 | (v8 != (_QWORD)result)) ^ ((v9 & 1) == 0)) & 1) == 0)
    return sub_1FA0B4();
  return result;
}

id sub_1FB208(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;

  v4 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_E710(0, (unint64_t *)&unk_3D4C80, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v8 = (void *)v4(v6, v7);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v8;
}

double sub_1FB280(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_presenter;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_presenter];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_presenter] = a1;
  swift_retain(a1);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  v5 = *(_QWORD *)&v1[v2];
  if (v5)
  {
    v6 = sub_1FB384();
    v7 = v1;
    swift_retain(v5);
    v8 = dispatch thunk of FollowButtonPresenter.delegate.setter(v1, v6);
    v9 = dispatch thunk of FollowButtonPresenter.currentState.getter(v8);
    v12 = sub_100BBC(v9, v10, v11);
    v13 = v7[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState];
    v7[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_followState] = v12;
    if (v12 != 3 && v12 != 5)
    {
      if (v12 == 4)
      {
        if (v13 == 4)
          goto LABEL_8;
      }
      else if ((v13 - 3) >= 3)
      {
        if (v12 == 2)
        {
          if (v13 == 2)
            goto LABEL_8;
        }
        else if (v13 != 2 && ((((v12 & 1) == 0) ^ v13) & 1) != 0)
        {
          goto LABEL_8;
        }
      }
    }
    sub_1FA0B4();
LABEL_8:
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

unint64_t sub_1FB384()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DC5B0;
  if (!qword_3DC5B0)
  {
    v1 = type metadata accessor for ExpandableFollowButton();
    result = swift_getWitnessTable(&unk_2FF868, v1);
    atomic_store(result, (unint64_t *)&qword_3DC5B0);
  }
  return result;
}

uint64_t block_copy_helper_48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_48(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1FB3E0()
{
  char *v0;
  uint64_t v1;
  id v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_presenter] = 0;
  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton_backgroundView;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v2, "setUserInteractionEnabled:", 0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton____lazy_storage___loadingIndicator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22ExpandableFollowButton____lazy_storage___overlayGlyphView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ExpandableFollowButton.swift", 52, 2, 63, 0);
  __break(1u);
}

id sub_1FB4B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD v7[5];
  uint64_t v8;

  v1 = swift_allocObject(&unk_38B130, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16, v0);
  v2 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v7[4] = sub_1FB5D4;
  v8 = v1;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1FB208;
  v7[3] = &block_descriptor_6_7;
  v3 = _Block_copy(v7);
  v4 = v8;
  swift_retain_n(v1, 2);
  v5 = objc_msgSend(v2, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v3, swift_release(v4).n128_f64[0]);
  swift_release(v1);
  _Block_release(v3);
  swift_release(v1);
  return v5;
}

uint64_t sub_1FB5B0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void *sub_1FB5D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1F9DB8(a1, v1);
}

id sub_1FB67C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StaticTransitionAnimator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StaticTransitionAnimator()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24StaticTransitionAnimator);
}

void sub_1FB6CC(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;

  v5 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (v5)
  {
    v2 = objc_msgSend(a1, "containerView");
    v3 = objc_msgSend(v5, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v2, "addSubview:", v3);

      objc_msgSend(a1, "completeTransition:", objc_msgSend(a1, "transitionWasCancelled") ^ 1);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    objc_msgSend(a1, "completeTransition:", objc_msgSend(a1, "transitionWasCancelled") ^ 1);
  }
}

uint64_t CollectionConverter.init(cellForIndexPath:sectionForIndexPath:indexPathForSection:itemForIndexPath:reloadItem:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t CollectionConverter.section(before:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t result;
  void (*v19)(char *);
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(uint64_t, __n128))(v2 + 32);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v13, 1, 1, v6, v11);
    goto LABEL_7;
  }
  v14(a1, v11);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6);
  if ((_DWORD)v15 == 1)
  {
LABEL_7:
    sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D1A00);
    goto LABEL_8;
  }
  v16 = IndexPath.section.getter(v15);
  v17 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  result = v17(v13, v6);
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
    return result;
  }
  v19 = *(void (**)(char *))(v3 + 16);
  if (v19)
  {
    IndexPath.init(row:section:)(0, v16 - 1);
    v19(v9);
    return v17(v9, v6);
  }
LABEL_8:
  v20 = type metadata accessor for ModernShelf(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
}

uint64_t CollectionConverter.section(after:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t result;
  void (*v19)(char *);
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(uint64_t, __n128))(v2 + 32);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v13, 1, 1, v6, v11);
    goto LABEL_7;
  }
  v14(a1, v11);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6);
  if ((_DWORD)v15 == 1)
  {
LABEL_7:
    sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D1A00);
    goto LABEL_8;
  }
  v16 = IndexPath.section.getter(v15);
  v17 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  result = v17(v13, v6);
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    return result;
  }
  v19 = *(void (**)(char *))(v3 + 16);
  if (v19)
  {
    IndexPath.init(row:section:)(0, v16 + 1);
    v19(v9);
    return v17(v9, v6);
  }
LABEL_8:
  v20 = type metadata accessor for ModernShelf(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
}

uint64_t CollectionConverter.reload(_:from:)()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 64);
  if (v1)
    return v1();
  return result;
}

_QWORD *CollectionConverter.indexPath(for:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *(*v3)(_QWORD *__return_ptr);
  uint64_t v5;

  v3 = *(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 32);
  if (v3)
    return v3(a1);
  v5 = type metadata accessor for IndexPath(0);
  return (_QWORD *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
}

double CollectionConverter.item(for:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void (*v2)(void);
  double result;

  v2 = *(void (**)(void))(v1 + 48);
  if (v2)
  {
    v2();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t CollectionConverter.objectGraph(for:)()
{
  uint64_t (**v0)(void);
  uint64_t v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!*v0)
    return 0;
  v1 = (*v0)();
  if (!v1)
    return 0;
  v2 = (void *)v1;
  ObjectType = swift_getObjectType();
  v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ShelfUIKitCell);
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    v6 = v2;
  else
    v6 = 0;
  if (v6)
  {
    v7 = swift_getObjectType();
    v8 = dispatch thunk of ShelfUIKitCell.objectGraph.getter(v7, v5);
  }
  else
  {
    v9 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
    v10 = swift_dynamicCastClass(v2, v9);
    if (v10)
    {
      v8 = *(_QWORD *)(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph);
      swift_retain(v8);
    }
    else
    {
      v8 = 0;
    }
  }

  return v8;
}

_QWORD *CollectionConverter.section(for:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *(*v3)(_QWORD *__return_ptr);
  uint64_t v5;

  v3 = *(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 16);
  if (v3)
    return v3(a1);
  v5 = type metadata accessor for ModernShelf(0);
  return (_QWORD *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
}

double CollectionConverter.objectGraph(for:)(void *a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  double result;
  uint64_t v9;
  uint64_t v10;

  ObjectType = swift_getObjectType();
  v3 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ShelfUIKitCell);
  if (v3)
    v4 = v3;
  else
    v4 = 0;
  if (v3)
    v5 = a1;
  else
    v5 = 0;
  if (v5)
  {
    v6 = swift_getObjectType();
    v7 = a1;
    dispatch thunk of ShelfUIKitCell.objectGraph.getter(v6, v4);

  }
  else
  {
    v9 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
    v10 = swift_dynamicCastClass(a1, v9);
    if (v10)
      *(_QWORD *)&result = swift_retain(*(_QWORD *)(v10
                                                  + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph)).n128_u64[0];
  }
  return result;
}

_QWORD *CollectionConverter.shelfItem(for:with:in:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(_BYTE *__return_ptr, uint64_t);
  uint64_t (*v15)(char *);
  __int128 v16;
  __int128 v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  id v20;
  uint64_t v21;
  __n128 v22;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[40];
  uint64_t v40;
  void (*v41)(_QWORD *__return_ptr, _QWORD);
  __int128 v42;
  uint64_t v43;
  _QWORD v44[6];

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - v12;
  v14 = *(void (**)(_BYTE *__return_ptr, uint64_t))(v3 + 48);
  if (!v14)
  {
    memset(v39, 0, sizeof(v39));
    goto LABEL_8;
  }
  v15 = *(uint64_t (**)(char *))v3;
  v16 = *(_OWORD *)(v3 + 8);
  v37 = *(_OWORD *)(v3 + 24);
  v38 = v16;
  v35 = *(_QWORD *)(v3 + 40);
  v17 = *(_OWORD *)(v3 + 56);
  v34 = *(_QWORD *)(v3 + 72);
  v36 = v17;
  v14(v39, a1);
  if (!*(_QWORD *)&v39[24])
  {
LABEL_8:
    sub_D1D4((uint64_t)v39, &qword_3D1A10);
    return 0;
  }
  v33 = a3;
  sub_1B738((__int128 *)v39, (uint64_t)v44);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v18(v13, a1, v7);
  if (!a2)
  {
    if (v15)
    {
      v20 = (id)v15(v13);
      v19 = *(void (**)(char *, uint64_t))(v8 + 8);
      v19(v13, v7);
      if (v20)
        goto LABEL_5;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
    __swift_destroy_boxed_opaque_existential_0(v44);
    return 0;
  }
  v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20 = a2;
  v19(v13, v7);
LABEL_5:
  v18(v10, a1, v7);
  v21 = v33;
  if (v33)
  {
    v22 = swift_retain(v33);
    ((void (*)(char *, uint64_t, __n128))v19)(v10, v7, v22);
LABEL_14:
    sub_1D5D4((uint64_t)v44, (uint64_t)v39);
    v25 = IndexPath.row.getter(v24);
    __swift_destroy_boxed_opaque_existential_0(v44);
    v26 = type metadata accessor for CollectionConverter.ShelfItem(0);
    v23 = (_QWORD *)swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
    v23[10] = 0;
    v27 = (char *)v23
        + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___impressionMetrics;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
    v29 = (char *)v23
        + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___clickLocationElement;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
    v23[2] = v21;
    sub_1B738((__int128 *)v39, (uint64_t)(v23 + 3));
    v23[8] = v20;
    v23[9] = v25;
    return v23;
  }
  *(_QWORD *)v39 = v15;
  *(_OWORD *)&v39[8] = v38;
  *(_OWORD *)&v39[24] = v37;
  v40 = v35;
  v41 = (void (*)(_QWORD *__return_ptr, _QWORD))v14;
  v42 = v36;
  v43 = v34;
  v21 = CollectionConverter.shelf(for:)((uint64_t)v10);
  v19(v10, v7);
  if (v21)
    goto LABEL_14;
  __swift_destroy_boxed_opaque_existential_0(v44);

  return 0;
}

uint64_t CollectionConverter.shelf(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t, __n128);
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ModernShelf(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v25 - v12;
  v14 = *(void (**)(uint64_t, __n128))(v1 + 16);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v11);
    goto LABEL_5;
  }
  v14(a1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_5:
    sub_D1D4((uint64_t)v5, (uint64_t *)&unk_3D3010);
    return 0;
  }
  v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v15(v13, v5, v6);
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  v17 = IndexPath.section.getter(v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v18 = type metadata accessor for CollectionConverter.Shelf(0);
  v19 = swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v20 = v19 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___impressionMetrics;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = v19
      + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___clickLocationElement;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v15((char *)(v19 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_model), v9, v6);
  *(_QWORD *)(v19 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_index) = v17;
  return v19;
}

uint64_t CollectionConverter.Shelf.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1FC2D0(&qword_3DC608, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___impressionMetrics, &qword_3D0EE0, (void (*)(uint64_t))sub_1FCA28, a1);
}

uint64_t CollectionConverter.ShelfItem.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1FC2D0(&qword_3DC608, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___impressionMetrics, &qword_3D0EE0, (void (*)(uint64_t))sub_1FD204, a1);
}

uint64_t sub_1FC2D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];
  _BYTE v22[24];

  v11 = __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin(v11);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v21[-v15];
  v17 = v5 + *a2;
  swift_beginAccess(v17, v22, 0, 0);
  sub_D184(v17, (uint64_t)v16, a1);
  v18 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) != 1)
    return sub_D210((uint64_t)v16, a5, a3);
  sub_D1D4((uint64_t)v16, a1);
  a4(v5);
  sub_D184(a5, (uint64_t)v13, a3);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
  swift_beginAccess(v17, v21, 33, 0);
  sub_1EB00((uint64_t)v13, v17, a1);
  return swift_endAccess(v21);
}

_QWORD *sub_1FC448()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[10];
  if (v1)
  {
    v2 = (_QWORD *)v0[10];
  }
  else
  {
    v3 = v0;
    v4 = v0[6];
    v5 = v0[7];
    __swift_project_boxed_opaque_existential_1(v0 + 3, v4);
    v6 = dispatch thunk of ModernShelfItem.impressionableActions.getter(v4, v5);
    swift_retain(v0);
    v2 = sub_1FED58(v6, (uint64_t)v0);
    swift_bridgeObjectRelease(v6);
    swift_release(v3);
    v7 = v3[10];
    v3[10] = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v7);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

uint64_t CollectionConverter.ShelfItem.Button.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1FC2D0(&qword_3DC608, &OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___impressionMetrics, &qword_3D0EE0, (void (*)(uint64_t))sub_1FD9CC, a1);
}

uint64_t CollectionConverter.ShelfItem.clickLocationElement.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1FC2D0(&qword_3DC618, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___clickLocationElement, &qword_3D56E0, (void (*)(uint64_t))sub_1FD608, a1);
}

uint64_t CollectionConverter.ShelfItem.Button.clickLocationElement.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1FC2D0(&qword_3DC618, &OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___clickLocationElement, &qword_3D56E0, (void (*)(uint64_t))sub_1FDEE0, a1);
}

uint64_t CollectionConverter.Shelf.clickLocationElement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];
  _BYTE v21[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC618);
  __chkstk_darwin(v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v20[-v11];
  v13 = v2
      + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___clickLocationElement;
  swift_beginAccess(v2 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___clickLocationElement, v21, 0, 0);
  sub_D184(v13, (uint64_t)v12, &qword_3DC618);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
    return sub_D210((uint64_t)v12, a1, &qword_3D56E0);
  sub_D1D4((uint64_t)v12, &qword_3DC618);
  CollectionConverter.Shelf.impressionMetrics.getter((uint64_t)v6);
  v17 = ModernShelf.id.getter(v16);
  ClickLocationElement.init(impressionMetrics:uniqueID:parentUniqueID:position:)(v6, v17, v18, 0, 0, *(_QWORD *)(v2 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_index));
  sub_D184(a1, (uint64_t)v9, &qword_3D56E0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  swift_beginAccess(v13, v20, 33, 0);
  sub_1EB00((uint64_t)v9, v13, &qword_3DC618);
  return swift_endAccess(v20);
}

uint64_t CollectionConverter.section(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *);
  uint64_t v11;
  uint64_t v12;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(v2 + 16);
  if (v9)
  {
    IndexPath.init(row:section:)(0, a1);
    v9(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v11 = type metadata accessor for ModernShelf(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t CollectionConverter.cell(for:)()
{
  uint64_t (**v0)(void);

  if (*v0)
    return (*v0)();
  else
    return 0;
}

uint64_t CollectionConverter.index(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t, __n128);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(uint64_t, __n128))(v1 + 32);
  if (!v7)
  {
    v12 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    goto LABEL_5;
  }
  v7(a1, v4);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  if ((_DWORD)v10 == 1)
  {
LABEL_5:
    sub_D1D4((uint64_t)v6, (uint64_t *)&unk_3D1A00);
    return 0;
  }
  v11 = IndexPath.section.getter(v10);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  return v11;
}

uint64_t type metadata accessor for CollectionConverter.ShelfItem(uint64_t a1)
{
  return sub_AE00(a1, qword_3DC728, (uint64_t)&nominal type descriptor for CollectionConverter.ShelfItem);
}

uint64_t type metadata accessor for CollectionConverter.Shelf(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3DC650, (uint64_t)&nominal type descriptor for CollectionConverter.Shelf);
}

uint64_t CollectionConverter.Shelf.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_model;
  v4 = type metadata accessor for ModernShelf(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CollectionConverter.Shelf.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_index);
}

double CollectionConverter.Shelf.impressionMetrics.setter(uint64_t a1)
{
  return sub_1FCDD0(a1, &qword_3DC608, &qword_3D0EE0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___impressionMetrics);
}

uint64_t sub_1FCA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  double (*v15)(char *, uint64_t);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ModernShelf(0);
  v12 = sub_89A0(&qword_3DC8B8, (uint64_t (*)(uint64_t))&type metadata accessor for ModernShelf, (uint64_t)&protocol conformance descriptor for ModernShelf);
  ViewModel.getImpressionMetrics(with:)(7, v11, v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_D1D4((uint64_t)v6, &qword_3D0EE0);
    v14 = 1;
  }
  else
  {
    ImpressionMetrics.withIndex(_:)(*(_QWORD *)(a1
                                              + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_index));
    v15 = *(double (**)(char *, uint64_t))(v8 + 8);
    v16.n128_f64[0] = v15(v6, v7);
    v17 = ModernShelf.id.getter(v16);
    v19 = v18;
    ImpressionMetrics.withUniqueID(_:)(v17);
    v20 = swift_bridgeObjectRelease(v19);
    ((void (*)(char *, uint64_t, __n128))v15)(v10, v7, v20);
    v14 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v14, 1, v7);
}

void (*CollectionConverter.Shelf.impressionMetrics.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC608);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  CollectionConverter.Shelf.impressionMetrics.getter((uint64_t)v8);
  return sub_1FCC68;
}

void sub_1FCC68(uint64_t a1, char a2)
{
  sub_1FCF68(a1, a2, &qword_3D0EE0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___impressionMetrics, &qword_3DC608);
}

double sub_1FCC84(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, _QWORD *a7)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  _BYTE v23[24];

  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  __chkstk_darwin(v12);
  v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v23[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_D184(a1, (uint64_t)v18, a6);
  v19 = *a2;
  sub_D210((uint64_t)v18, (uint64_t)v14, a6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v20 = v19 + *a7;
  swift_beginAccess(v20, v23, 33, 0);
  sub_1EB00((uint64_t)v14, v20, a5);
  *(_QWORD *)&result = swift_endAccess(v23).n128_u64[0];
  return result;
}

double CollectionConverter.Shelf.clickLocationElement.setter(uint64_t a1)
{
  return sub_1FCDD0(a1, &qword_3DC618, &qword_3D56E0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___clickLocationElement);
}

double sub_1FCDD0(uint64_t a1, uint64_t *a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  _BYTE v16[24];

  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  __chkstk_darwin(v9);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_D210(a1, (uint64_t)v11, a3);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  v13 = v4 + *a4;
  swift_beginAccess(v13, v16, 33, 0);
  sub_1EB00((uint64_t)v11, v13, a2);
  *(_QWORD *)&result = swift_endAccess(v16).n128_u64[0];
  return result;
}

void (*CollectionConverter.Shelf.clickLocationElement.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC618);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  CollectionConverter.Shelf.clickLocationElement.getter((uint64_t)v8);
  return sub_1FCF4C;
}

void sub_1FCF4C(uint64_t a1, char a2)
{
  sub_1FCF68(a1, a2, &qword_3D56E0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___clickLocationElement, &qword_3DC618);
}

void sub_1FCF68(uint64_t a1, char a2, uint64_t *a3, _QWORD *a4, uint64_t *a5)
{
  _QWORD *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = *(_QWORD **)a1;
  v10 = *(void **)(*(_QWORD *)a1 + 80);
  v9 = *(void **)(*(_QWORD *)a1 + 88);
  if ((a2 & 1) != 0)
  {
    v12 = v8[8];
    v11 = v8[9];
    v14 = v8[6];
    v13 = (void *)v8[7];
    sub_D184(v8[11], v8[10], a3);
    sub_D210((uint64_t)v10, (uint64_t)v13, a3);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v12);
    v15 = v14 + *a4;
    swift_beginAccess(v15, v8, 33, 0);
    sub_1EB00((uint64_t)v13, v15, a5);
    swift_endAccess(v8);
    sub_D1D4((uint64_t)v9, a3);
  }
  else
  {
    v16 = v8[8];
    v17 = v8[9];
    v18 = v8[6];
    v13 = (void *)v8[7];
    sub_D210(v8[11], (uint64_t)v13, a3);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    v19 = v18 + *a4;
    swift_beginAccess(v19, v8 + 3, 33, 0);
    sub_1EB00((uint64_t)v13, v19, a5);
    swift_endAccess(v8 + 3);
  }
  free(v9);
  free(v10);
  free(v13);
  free(v8);
}

uint64_t CollectionConverter.Shelf.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_model;
  v2 = type metadata accessor for ModernShelf(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_D1D4(v0 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___impressionMetrics, &qword_3DC608);
  sub_D1D4(v0 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___clickLocationElement, &qword_3DC618);
  return v0;
}

uint64_t CollectionConverter.Shelf.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_model;
  v2 = type metadata accessor for ModernShelf(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_D1D4(v0 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___impressionMetrics, &qword_3DC608);
  sub_D1D4(v0 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___clickLocationElement, &qword_3DC618);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t CollectionConverter.ShelfItem.shelf.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t CollectionConverter.ShelfItem.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D5D4(v1 + 24, a1);
}

id CollectionConverter.ShelfItem.cell.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 64);
}

uint64_t CollectionConverter.ShelfItem.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

double CollectionConverter.ShelfItem.impressionMetrics.setter(uint64_t a1)
{
  return sub_1FCDD0(a1, &qword_3DC608, &qword_3D0EE0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___impressionMetrics);
}

uint64_t sub_1FD204@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v54 = a2;
  v3 = type metadata accessor for ImpressionMetrics.ID(0);
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  __chkstk_darwin(v3);
  v46 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for InteractionContext(0);
  v5 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v8);
  v50 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v49 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v17 = a1[6];
  v18 = a1[7];
  v51 = a1 + 3;
  v52 = (char *)&v45 - v19;
  v20 = __swift_project_boxed_opaque_existential_1(a1 + 3, v17);
  v21 = UIView.interactionContext.getter(v20);
  v22 = InteractionContext.view.getter(v21);
  v23.n128_f64[0] = (*(double (**)(char *, uint64_t))(v5 + 8))(v7, v53);
  v24 = v14;
  v25 = v13;
  ViewModel.getImpressionMetrics(with:)(v22, v17, *(_QWORD *)(v18 + 8), v23);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v26((uint64_t)v12, 1, v25) == 1)
  {
    sub_D1D4((uint64_t)v12, &qword_3D0EE0);
    v27 = 1;
    v28 = v54;
  }
  else
  {
    v29 = v49;
    ImpressionMetrics.withIndex(_:)(a1[9]);
    v30 = *(void (**)(char *, uint64_t))(v24 + 8);
    v30(v12, v25);
    v31 = a1[2];
    v32 = v50;
    CollectionConverter.Shelf.impressionMetrics.getter(v50);
    if (v26(v32, 1, v25))
    {
      sub_D1D4(v32, &qword_3D0EE0);
      v33 = 0;
      v34 = 0;
    }
    else
    {
      v35 = v46;
      v36 = ImpressionMetrics.id.getter();
      v33 = ImpressionMetrics.ID.element.getter(v36);
      v34 = v37;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
      sub_D1D4(v32, &qword_3D0EE0);
    }
    v38 = v52;
    ImpressionMetrics.withParentID(_:)(v33, v34);
    v39 = swift_bridgeObjectRelease(v34);
    ((void (*)(char *, uint64_t, __n128))v30)(v29, v25, v39);
    v40 = static ModernShelf.collectionUniqueItemIdFor(section:item:)(v31 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_model, v51);
    v42 = v41;
    v28 = v54;
    ImpressionMetrics.withUniqueID(_:)(v40);
    v43 = swift_bridgeObjectRelease(v42);
    ((void (*)(char *, uint64_t, __n128))v30)(v38, v25, v43);
    v27 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v28, v27, 1, v25);
}

void (*CollectionConverter.ShelfItem.impressionMetrics.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC608);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  CollectionConverter.ShelfItem.impressionMetrics.getter((uint64_t)v8);
  return sub_1FD5D0;
}

void sub_1FD5D0(uint64_t a1, char a2)
{
  sub_1FCF68(a1, a2, &qword_3D0EE0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___impressionMetrics, &qword_3DC608);
}

double CollectionConverter.ShelfItem.clickLocationElement.setter(uint64_t a1)
{
  return sub_1FCDD0(a1, &qword_3DC618, &qword_3D56E0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___clickLocationElement);
}

uint64_t sub_1FD608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  _QWORD v26[2];

  v26[1] = a2;
  v3 = type metadata accessor for ClickLocationElement(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  __chkstk_darwin(v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v26 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  CollectionConverter.Shelf.clickLocationElement.getter((uint64_t)v26 - v14);
  CollectionConverter.ShelfItem.impressionMetrics.getter((uint64_t)v9);
  v17 = static ModernShelf.collectionUniqueItemIdFor(section:item:)(v16 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_model, a1 + 24);
  v26[0] = v18;
  sub_D184((uint64_t)v15, (uint64_t)v12, &qword_3D56E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    sub_D1D4((uint64_t)v12, &qword_3D56E0);
    v19 = 0;
    v20 = 0;
  }
  else
  {
    v19 = ClickLocationElement._uniqueID.getter();
    v20 = v21;
    v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
    if (!v20)
    {
      v19 = ClickLocationElement.id.getter(v22);
      v20 = v23;
    }
    v24 = *(void (**)(char *, uint64_t))(v4 + 8);
    v24(v6, v3);
    v24(v12, v3);
  }
  ClickLocationElement.init(impressionMetrics:uniqueID:parentUniqueID:position:)(v9, v17, v26[0], v19, v20, *(_QWORD *)(a1 + 72));
  return sub_D1D4((uint64_t)v15, &qword_3D56E0);
}

void (*CollectionConverter.ShelfItem.clickLocationElement.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC618);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  CollectionConverter.ShelfItem.clickLocationElement.getter((uint64_t)v8);
  return sub_1FD8B8;
}

void sub_1FD8B8(uint64_t a1, char a2)
{
  sub_1FCF68(a1, a2, &qword_3D56E0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___clickLocationElement, &qword_3DC618);
}

uint64_t CollectionConverter.ShelfItem.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  sub_D1D4(v0 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___impressionMetrics, &qword_3DC608);
  sub_D1D4(v0+ OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___clickLocationElement, &qword_3DC618);
  return v0;
}

uint64_t CollectionConverter.ShelfItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  sub_D1D4(v0 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___impressionMetrics, &qword_3DC608);
  sub_D1D4(v0+ OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___clickLocationElement, &qword_3DC618);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t CollectionConverter.ShelfItem.Button.model.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 24));
}

double CollectionConverter.ShelfItem.Button.impressionMetrics.setter(uint64_t a1)
{
  return sub_1FCDD0(a1, &qword_3DC608, &qword_3D0EE0, &OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___impressionMetrics);
}

uint64_t sub_1FD9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  __n128 v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v60 = a2;
  v3 = type metadata accessor for ImpressionMetrics(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v61 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v57 = (char *)&v56 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - v15;
  v17 = type metadata accessor for ImpressionMetrics.ID(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC8A8);
  __chkstk_darwin(v21);
  v58 = (uint64_t)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v56 - v24;
  v59 = a1;
  v26 = *(_QWORD *)(a1 + 16);
  CollectionConverter.ShelfItem.impressionMetrics.getter((uint64_t)v16);
  v62 = v4;
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v4 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v27)(v16, 1, v3))
  {
    sub_D1D4((uint64_t)v16, &qword_3D0EE0);
    v29 = *(_QWORD *)(v26 + 16);
    swift_retain(v29);
    CollectionConverter.Shelf.impressionMetrics.getter((uint64_t)v13);
    v30 = swift_release(v29);
    if (v27(v13, 1, v3, v30))
    {
      sub_D1D4((uint64_t)v13, &qword_3D0EE0);
      v32 = 1;
      goto LABEL_7;
    }
    ImpressionMetrics.id.getter(v31);
    sub_D1D4((uint64_t)v13, &qword_3D0EE0);
  }
  else
  {
    ImpressionMetrics.id.getter(v28);
    sub_D1D4((uint64_t)v16, &qword_3D0EE0);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v25, v20, v17);
  }
  v32 = 0;
LABEL_7:
  v33 = v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v25, v32, 1, v17);
  v63 = *(_QWORD *)(v33 + 24);
  v34 = type metadata accessor for Action(0);
  v35 = sub_89A0(&qword_3DC8B0, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
  ViewModel.getImpressionMetrics(with:)(7, v34, v35, v36);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v27)(v10, 1, v3) == 1)
  {
    sub_D1D4((uint64_t)v25, &qword_3DC8A8);
    sub_D1D4((uint64_t)v10, &qword_3D0EE0);
    v37 = 1;
    v38 = v62;
    v39 = v60;
  }
  else
  {
    ImpressionMetrics.withIndex(_:)(0);
    v38 = v62;
    v40 = *(void (**)(char *, uint64_t))(v62 + 8);
    v40(v10, v3);
    v41 = v58;
    sub_D184((uint64_t)v25, v58, &qword_3DC8A8);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v41, 1, v17);
    if ((_DWORD)v42 == 1)
    {
      sub_D1D4(v41, &qword_3DC8A8);
      v43 = 0;
      v44 = 0;
    }
    else
    {
      v43 = ImpressionMetrics.ID.element.getter(v42);
      v44 = v45;
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v41, v17);
    }
    v46 = v57;
    v47 = v43;
    v39 = v60;
    v48 = v61;
    ImpressionMetrics.withParentID(_:)(v47, v44);
    v49 = swift_bridgeObjectRelease(v44);
    v50.n128_f64[0] = ((double (*)(char *, uint64_t, __n128))v40)(v48, v3, v49);
    v51 = Action.uniqueId.getter(v50);
    v53 = v52;
    ImpressionMetrics.withUniqueID(_:)(v51);
    v54 = swift_bridgeObjectRelease(v53);
    ((void (*)(char *, uint64_t, __n128))v40)(v46, v3, v54);
    sub_D1D4((uint64_t)v25, &qword_3DC8A8);
    v37 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v39, v37, 1, v3);
}

void (*CollectionConverter.ShelfItem.Button.impressionMetrics.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC608);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  CollectionConverter.ShelfItem.Button.impressionMetrics.getter((uint64_t)v8);
  return sub_1FDEA8;
}

void sub_1FDEA8(uint64_t a1, char a2)
{
  sub_1FCF68(a1, a2, &qword_3D0EE0, &OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___impressionMetrics, &qword_3DC608);
}

double CollectionConverter.ShelfItem.Button.clickLocationElement.setter(uint64_t a1)
{
  return sub_1FCDD0(a1, &qword_3DC618, &qword_3D56E0, &OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___clickLocationElement);
}

uint64_t sub_1FDEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  _QWORD v34[2];

  v34[1] = a2;
  v3 = type metadata accessor for ClickLocationElement(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v7);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  __chkstk_darwin(v10);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v34 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)v34 - v17;
  v19 = *(_QWORD *)(a1 + 16);
  CollectionConverter.ShelfItem.clickLocationElement.getter((uint64_t)v15);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v20(v15, 1, v3) == 1)
  {
    v21 = *(_QWORD *)(v19 + 16);
    swift_retain(v21);
    CollectionConverter.Shelf.clickLocationElement.getter((uint64_t)v18);
    swift_release(v21);
    sub_D1D4((uint64_t)v15, &qword_3D56E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v18, v15, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v18, 0, 1, v3);
  }
  CollectionConverter.ShelfItem.Button.impressionMetrics.getter((uint64_t)v9);
  v23 = Action.uniqueId.getter(v22);
  v25 = v24;
  sub_D184((uint64_t)v18, (uint64_t)v12, &qword_3D56E0);
  if (v20(v12, 1, v3) == 1)
  {
    sub_D1D4((uint64_t)v12, &qword_3D56E0);
    v27 = 0;
    v28 = 0;
  }
  else
  {
    v27 = ClickLocationElement._uniqueID.getter(v26);
    v28 = v29;
    v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
    if (!v28)
    {
      v27 = ClickLocationElement.id.getter(v30);
      v28 = v31;
    }
    v32 = *(void (**)(char *, uint64_t))(v4 + 8);
    v32(v6, v3);
    v32(v12, v3);
  }
  ClickLocationElement.init(impressionMetrics:uniqueID:parentUniqueID:position:)(v9, v23, v25, v27, v28, 0);
  return sub_D1D4((uint64_t)v18, &qword_3D56E0);
}

void (*CollectionConverter.ShelfItem.Button.clickLocationElement.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DC618);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  CollectionConverter.ShelfItem.Button.clickLocationElement.getter((uint64_t)v8);
  return sub_1FE214;
}

void sub_1FE214(uint64_t a1, char a2)
{
  sub_1FCF68(a1, a2, &qword_3D56E0, &OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___clickLocationElement, &qword_3DC618);
}

uint64_t CollectionConverter.ShelfItem.Button.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  sub_D1D4(v0+ OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___impressionMetrics, &qword_3DC608);
  sub_D1D4(v0+ OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___clickLocationElement, &qword_3DC618);
  return v0;
}

uint64_t CollectionConverter.ShelfItem.Button.__deallocating_deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  sub_D1D4((uint64_t)v0+ OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___impressionMetrics, &qword_3DC608);
  sub_D1D4((uint64_t)v0+ OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___clickLocationElement, &qword_3DC618);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1FE2E4@<X0>(uint64_t a1@<X8>)
{
  return CollectionConverter.Shelf.impressionMetrics.getter(a1);
}

double sub_1FE304(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1FCC84(a1, a2, a3, a4, &qword_3DC608, &qword_3D0EE0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___impressionMetrics);
}

uint64_t sub_1FE330@<X0>(uint64_t a1@<X8>)
{
  return CollectionConverter.Shelf.clickLocationElement.getter(a1);
}

double sub_1FE350(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1FCC84(a1, a2, a3, a4, &qword_3DC618, &qword_3D56E0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___clickLocationElement);
}

uint64_t sub_1FE37C@<X0>(uint64_t a1@<X8>)
{
  return CollectionConverter.ShelfItem.impressionMetrics.getter(a1);
}

double sub_1FE39C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1FCC84(a1, a2, a3, a4, &qword_3DC608, &qword_3D0EE0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___impressionMetrics);
}

uint64_t sub_1FE3C8@<X0>(uint64_t a1@<X8>)
{
  return CollectionConverter.ShelfItem.clickLocationElement.getter(a1);
}

double sub_1FE3E8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1FCC84(a1, a2, a3, a4, &qword_3DC618, &qword_3D56E0, &OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___clickLocationElement);
}

uint64_t sub_1FE414@<X0>(uint64_t a1@<X8>)
{
  return CollectionConverter.ShelfItem.Button.impressionMetrics.getter(a1);
}

double sub_1FE434(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1FCC84(a1, a2, a3, a4, &qword_3DC608, &qword_3D0EE0, &OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___impressionMetrics);
}

uint64_t sub_1FE460@<X0>(uint64_t a1@<X8>)
{
  return CollectionConverter.ShelfItem.Button.clickLocationElement.getter(a1);
}

double sub_1FE480(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1FCC84(a1, a2, a3, a4, &qword_3DC618, &qword_3D56E0, &OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___clickLocationElement);
}

_QWORD *destroy for CollectionConverter(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (*result)
    result = (_QWORD *)swift_release(result[1]);
  if (v1[2])
    result = (_QWORD *)swift_release(v1[3]);
  if (v1[4])
    result = (_QWORD *)swift_release(v1[5]);
  if (v1[6])
    result = (_QWORD *)swift_release(v1[7]);
  if (v1[8])
    return (_QWORD *)swift_release(v1[9]);
  return result;
}

_QWORD *initializeWithCopy for CollectionConverter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*a2)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain(v4);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = a2[2];
  if (v5)
  {
    v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain(v6);
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  v7 = a2[4];
  if (v7)
  {
    v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain(v8);
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  v9 = a2[6];
  if (v9)
  {
    v10 = a2[7];
    a1[6] = v9;
    a1[7] = v10;
    swift_retain(v10);
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  v11 = a2[8];
  if (v11)
  {
    v12 = a2[9];
    a1[8] = v11;
    a1[9] = v12;
    swift_retain(v12);
  }
  else
  {
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  }
  return a1;
}

_QWORD *assignWithCopy for CollectionConverter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      v6 = a1[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain(v5);
      swift_release(v6);
      goto LABEL_8;
    }
    swift_release(a1[1]);
  }
  else if (v4)
  {
    v7 = a2[1];
    *a1 = v4;
    a1[1] = v7;
    swift_retain(v7);
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v8 = a2[2];
  if (a1[2])
  {
    if (v8)
    {
      v9 = a2[3];
      v10 = a1[3];
      a1[2] = v8;
      a1[3] = v9;
      swift_retain(v9);
      swift_release(v10);
      goto LABEL_15;
    }
    swift_release(a1[3]);
  }
  else if (v8)
  {
    v11 = a2[3];
    a1[2] = v8;
    a1[3] = v11;
    swift_retain(v11);
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  v12 = a2[4];
  if (a1[4])
  {
    if (v12)
    {
      v13 = a2[5];
      v14 = a1[5];
      a1[4] = v12;
      a1[5] = v13;
      swift_retain(v13);
      swift_release(v14);
      goto LABEL_22;
    }
    swift_release(a1[5]);
  }
  else if (v12)
  {
    v15 = a2[5];
    a1[4] = v12;
    a1[5] = v15;
    swift_retain(v15);
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  v16 = a2[6];
  if (a1[6])
  {
    if (v16)
    {
      v17 = a2[7];
      v18 = a1[7];
      a1[6] = v16;
      a1[7] = v17;
      swift_retain(v17);
      swift_release(v18);
      goto LABEL_29;
    }
    swift_release(a1[7]);
  }
  else if (v16)
  {
    v19 = a2[7];
    a1[6] = v16;
    a1[7] = v19;
    swift_retain(v19);
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  v20 = a2[8];
  if (!a1[8])
  {
    if (v20)
    {
      v23 = a2[9];
      a1[8] = v20;
      a1[9] = v23;
      swift_retain(v23);
      return a1;
    }
LABEL_35:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v20)
  {
    swift_release(a1[9]);
    goto LABEL_35;
  }
  v21 = a2[9];
  v22 = a1[9];
  a1[8] = v20;
  a1[9] = v21;
  swift_retain(v21);
  swift_release(v22);
  return a1;
}

_QWORD *assignWithTake for CollectionConverter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      v6 = a1[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release(v6);
      goto LABEL_8;
    }
    swift_release(a1[1]);
  }
  else if (v4)
  {
    v7 = a2[1];
    *a1 = v4;
    a1[1] = v7;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v8 = a2[2];
  if (a1[2])
  {
    if (v8)
    {
      v9 = a2[3];
      v10 = a1[3];
      a1[2] = v8;
      a1[3] = v9;
      swift_release(v10);
      goto LABEL_15;
    }
    swift_release(a1[3]);
  }
  else if (v8)
  {
    v11 = a2[3];
    a1[2] = v8;
    a1[3] = v11;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  v12 = a2[4];
  if (a1[4])
  {
    if (v12)
    {
      v13 = a2[5];
      v14 = a1[5];
      a1[4] = v12;
      a1[5] = v13;
      swift_release(v14);
      goto LABEL_22;
    }
    swift_release(a1[5]);
  }
  else if (v12)
  {
    v15 = a2[5];
    a1[4] = v12;
    a1[5] = v15;
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  v16 = a2[6];
  if (a1[6])
  {
    if (v16)
    {
      v17 = a2[7];
      v18 = a1[7];
      a1[6] = v16;
      a1[7] = v17;
      swift_release(v18);
      goto LABEL_29;
    }
    swift_release(a1[7]);
  }
  else if (v16)
  {
    v19 = a2[7];
    a1[6] = v16;
    a1[7] = v19;
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  v20 = a2[8];
  if (!a1[8])
  {
    if (v20)
    {
      v23 = a2[9];
      a1[8] = v20;
      a1[9] = v23;
      return a1;
    }
LABEL_35:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v20)
  {
    swift_release(a1[9]);
    goto LABEL_35;
  }
  v21 = a2[9];
  v22 = a1[9];
  a1[8] = v20;
  a1[9] = v21;
  swift_release(v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionConverter(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionConverter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionConverter()
{
  return &type metadata for CollectionConverter;
}

uint64_t sub_1FEA54()
{
  return type metadata accessor for CollectionConverter.Shelf(0);
}

void sub_1FEA5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v2 = type metadata accessor for ModernShelf(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_1FEB34(319, &qword_3DC660, &qword_3D0EE0);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1FEB34(319, (unint64_t *)&unk_3DC668, &qword_3D56E0);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 4, v8, a1 + 80);
      }
    }
  }
}

uint64_t method lookup function for CollectionConverter.Shelf(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for CollectionConverter.Shelf);
}

void sub_1FEB34(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1FEB80()
{
  return type metadata accessor for CollectionConverter.ShelfItem(0);
}

void sub_1FEB88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[1] = &unk_2FF9C8;
  v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[4] = &unk_2FF9E0;
  sub_1FEB34(319, &qword_3DC660, &qword_3D0EE0);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    sub_1FEB34(319, (unint64_t *)&unk_3DC668, &qword_3D56E0);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for CollectionConverter.ShelfItem(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for CollectionConverter.ShelfItem);
}

uint64_t sub_1FEC78()
{
  return type metadata accessor for CollectionConverter.ShelfItem.Button(0);
}

uint64_t type metadata accessor for CollectionConverter.ShelfItem.Button(uint64_t a1)
{
  return sub_AE00(a1, qword_3DC808, (uint64_t)&nominal type descriptor for CollectionConverter.ShelfItem.Button);
}

void sub_1FEC94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1FEB34(319, &qword_3DC660, &qword_3D0EE0);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1FEB34(319, (unint64_t *)&unk_3DC668, &qword_3D56E0);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for CollectionConverter.ShelfItem.Button(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for CollectionConverter.ShelfItem.Button);
}

_QWORD *sub_1FED58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v4)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v4);
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v6 = 0;
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * v6 + 32);
        swift_retain(v7);
      }
      ++v6;
      v8 = type metadata accessor for CollectionConverter.ShelfItem.Button(0);
      v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
      v10 = v9
          + OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___impressionMetrics;
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
      v12 = v9
          + OBJC_IVAR____TtCCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem6Button____lazy_storage___clickLocationElement;
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
      *(_QWORD *)(v9 + 16) = a2;
      *(_QWORD *)(v9 + 24) = v7;
      v14 = swift_retain(a2);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v15 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v9);
      specialized ContiguousArray._endMutation()(v16);
      if (v4 == v6)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

uint64_t static UIHoverStyle.defaultFloatingView(subtractingInternalPadding:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v16;

  v0 = type metadata accessor for UIShape(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FF210();
  if (qword_3CFB10 != -1)
    swift_once(&qword_3CFB10, sub_1FF0A8);
  UIEdgeInsets.init(allSides:)(*(double *)&qword_3DC8C0);
  v8 = UIEdgeInsets.subtracting(other:)(v7);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)(0, -1, 1.0);
  UIShape.inset(by:)(v8, v10, v12, v14);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
  return UIHoverStyle.init(shape:)(v6);
}

void sub_1FF0A8()
{
  qword_3DC8C0 = 0x4024000000000000;
}

double static UIShape.floatingViewsDefaultHoverPadding.getter()
{
  if (qword_3CFB10 != -1)
    swift_once(&qword_3CFB10, sub_1FF0A8);
  return *(double *)&qword_3DC8C0;
}

uint64_t static UIShape.defaultFloatingHoverRoundedRect(subtractingInternalPadding:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v13;

  v0 = type metadata accessor for UIShape(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CFB10 != -1)
    swift_once(&qword_3CFB10, sub_1FF0A8);
  UIEdgeInsets.init(allSides:)(*(double *)&qword_3DC8C0);
  v5 = UIEdgeInsets.subtracting(other:)(v4);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)(0, -1, 1.0);
  UIShape.inset(by:)(v5, v7, v9, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

unint64_t sub_1FF210()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D36D0;
  if (!qword_3D36D0)
  {
    v1 = objc_opt_self(UIHoverStyle);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D36D0);
  }
  return result;
}

void sub_1FF24C()
{
  qword_3DC8D0 = 0x4030000000000000;
}

uint64_t sub_1FF404(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_presenter);
    swift_retain(v6);

    AccountPresenter.didSelectFooter(at:)(a2);
    return swift_release(v6);
  }
  return result;
}

void sub_1FF578(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  void (*v24)(uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  void *v51;
  uint64_t v52;
  NSString v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  char *v58;
  id v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double (*v65)(uint64_t, uint64_t, __n128);
  id v66;
  __n128 v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  uint64_t *v78;
  uint64_t v79;
  NSString v80;
  uint64_t v81;
  double v82;
  void *v83;
  uint64_t v84;
  NSString v85;
  uint64_t v86;
  double v87;
  void *v88;
  uint64_t v89;
  NSString v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, _QWORD, uint64_t);
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  __n128 v98;
  void (*v99)(char *, uint64_t, __n128);
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  char v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char **v111;
  void *v112;
  uint64_t v113;
  uint64_t *v114;
  id v115;
  void *v116;
  _QWORD v117[2];
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  void *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v4 = v3;
  v130 = a2;
  v123 = a1;
  v124 = type metadata accessor for AccountLink.LinkDisplayType(0);
  v121 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v126 = (char *)v117 - v8;
  __chkstk_darwin(v9);
  v125 = (char *)v117 - v10;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v117 - v13;
  v15 = type metadata accessor for AccountLink(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for IndexPath(0);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117[0] = v19;
  v117[1] = (char *)v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits];
  v21 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits];
  v22 = *((_QWORD *)v20 + 1);
  v127 = (uint64_t *)v20;
  ObjectType = swift_getObjectType();
  v24 = *(void (**)(uint64_t, uint64_t, __n128))(v22 + 16);
  v25 = swift_unknownObjectRetain(v21);
  v24(ObjectType, v22, v25);
  swift_unknownObjectRelease(v21);
  v120 = v4;
  v26 = *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_presenter];
  v129 = a3;
  v28 = IndexPath.section.getter(v27);
  v128 = v26;
  v29 = AccountPresenter.accountSection(for:)(v28);
  v31 = v29;
  if (!v30)
  {
    v120 = v14;
    v54 = v124;
    v118 = v16;
    v119 = v15;
    v55 = type metadata accessor for AccountDetailCollectionViewCell();
    v56 = v130;
    v57 = swift_dynamicCastClass(v130, v55);
    if (!v57)
    {
      sub_10A8B0(v31, 0);
      return;
    }
    v58 = (char *)v57;
    v59 = v56;
    v60 = IndexPath.item.getter(v59);
    if ((v60 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v60 < *(_QWORD *)(v31 + 16))
    {
      v61 = v18;
      (*(void (**)(char *, unint64_t, uint64_t))(v118 + 16))(v18, v31+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(_QWORD *)(v118 + 72) * v60, v119);
      sub_10A8B0(v31, 0);
      v62 = *v127;
      v63 = v127[1];
      v64 = swift_getObjectType();
      v65 = *(double (**)(uint64_t, uint64_t, __n128))(v63 + 16);
      v66 = v59;
      v67 = swift_unknownObjectRetain(v62);
      v68 = v65(v64, v63, v67);
      v70 = v69;
      v72 = v71;
      v74 = v73;
      swift_unknownObjectRelease(v62);
      objc_msgSend(v58, "setLayoutMargins:", v68, v70, v72, v74);
      v130 = v66;

      sub_14E1CC(0);
      v58[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showBottomDivider] = 1;
      objc_msgSend(*(id *)&v58[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDivider], "setHidden:", 0);
      objc_msgSend(v58, "setNeedsLayout");
      v75 = v129;
      AccountPresenter.itemText(at:)(v129);
      v78 = *(uint64_t **)&v58[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_titleLabel];
      if (v76)
      {
        v79 = v76;
        v80 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v77 = swift_bridgeObjectRelease(v79).n128_u64[0];
      }
      else
      {
        v80 = 0;
      }
      v127 = v78;
      objc_msgSend(v78, "setText:", v80, v77);

      objc_msgSend(v58, "setNeedsLayout");
      AccountPresenter.itemDetail(at:)(v75);
      v88 = *(void **)&v58[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_detailLabel];
      if (v86)
      {
        v89 = v86;
        v90 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v87 = swift_bridgeObjectRelease(v89).n128_u64[0];
      }
      else
      {
        v90 = 0;
      }
      v91 = v54;
      v92 = v121;
      objc_msgSend(v88, "setText:", v90, v87);

      ((void (*)(void))AccountLink.displayType.getter)();
      v93 = *(void (**)(char *, _QWORD, uint64_t))(v92 + 104);
      v93(v125, enum case for AccountLink.LinkDisplayType.action(_:), v54);
      v94 = sub_202C10();
      dispatch thunk of RawRepresentable.rawValue.getter(&v133, v54, v94);
      dispatch thunk of RawRepresentable.rawValue.getter(&v131, v54, v94);
      v95 = v134;
      v96 = v132;
      if (v133 == v131 && v134 == v132)
      {
        v97 = 1;
        v96 = v134;
      }
      else
      {
        v97 = _stringCompareWithSmolCheck(_:_:expecting:)(v133, v134, v131, v132, 0);
      }
      swift_bridgeObjectRelease(v95);
      v98 = swift_bridgeObjectRelease(v96);
      v99 = *(void (**)(char *, uint64_t, __n128))(v92 + 8);
      v99(v125, v54, v98);
      v100 = ((uint64_t (*)(char *, uint64_t))v99)(v120, v54);
      AccountLink.displayType.getter(v100);
      v101 = v122;
      v93(v122, enum case for AccountLink.LinkDisplayType.navigation(_:), v54);
      v102 = v101;
      dispatch thunk of RawRepresentable.rawValue.getter(&v133, v54, v94);
      dispatch thunk of RawRepresentable.rawValue.getter(&v131, v54, v94);
      v103 = v134;
      v104 = v132;
      if (v133 == v131 && v134 == v132)
      {
        v105 = swift_bridgeObjectRelease_n(v134, 2);
        v106 = 0;
      }
      else
      {
        v107 = _stringCompareWithSmolCheck(_:_:expecting:)(v133, v134, v131, v132, 0);
        swift_bridgeObjectRelease(v103);
        v105 = swift_bridgeObjectRelease(v104);
        v106 = v107 ^ 1;
      }
      v108 = v119;
      v99(v102, v91, v105);
      ((void (*)(char *, uint64_t))v99)(v126, v91);
      if ((v97 & 1) != 0)
      {
        v109 = 0;
        v110 = -1;
        v111 = &selRef_tintColor;
        v112 = v123;
      }
      else
      {
        v112 = (void *)objc_opt_self(UIColor);
        v110 = 4;
        v109 = 2;
        v111 = &selRef_labelColor;
      }
      v113 = v118;
      v114 = v127;
      v115 = objc_msgSend(v112, *v111);
      objc_msgSend(v114, "setTextColor:", v115);

      sub_14DEF0(v109, 0, v110);
      v116 = *(void **)&v58[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryView];
      if (v116)
      {
        objc_msgSend(v116, "setHidden:", v106 & 1);

        (*(void (**)(char *, uint64_t))(v113 + 8))(v61, v108);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v113 + 8))(v61, v108);

      }
      return;
    }
    __break(1u);
    JUMPOUT(0x200EA0);
  }
  if (v30 != 1)
    __asm { BR              X9 }
  sub_10A8B0(v29, 1u);
  v32 = type metadata accessor for AccountDetailCollectionViewCell();
  v33 = v130;
  v34 = swift_dynamicCastClass(v130, v32);
  if (v34)
  {
    v35 = (char *)v34;
    v36 = *v127;
    v37 = v127[1];
    v38 = swift_getObjectType();
    v39 = *(double (**)(uint64_t, uint64_t, __n128))(v37 + 16);
    v130 = v33;
    v40 = swift_unknownObjectRetain(v36);
    v41 = v39(v38, v37, v40);
    v43 = v42;
    v45 = v44;
    v47 = v46;
    swift_unknownObjectRelease(v36);
    objc_msgSend(v35, "setLayoutMargins:", v41, v43, v45, v47);
    sub_14E1CC(0);
    v48 = v129;
    AccountPresenter.itemText(at:)(v129);
    v51 = *(void **)&v35[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_titleLabel];
    if (v49)
    {
      v52 = v49;
      v53 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v50 = swift_bridgeObjectRelease(v52).n128_u64[0];
    }
    else
    {
      v53 = 0;
    }
    objc_msgSend(v51, "setText:", v53, v50);

    objc_msgSend(v35, "setNeedsLayout");
    AccountPresenter.itemSubtitle(at:)(v48);
    v83 = *(void **)&v35[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_subtitleLabel];
    if (v81)
    {
      v84 = v81;
      v85 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v82 = swift_bridgeObjectRelease(v84).n128_u64[0];
    }
    else
    {
      v85 = 0;
    }
    objc_msgSend(v83, "setText:", v85, v82);

    if ((sub_1500FC() & 1) != 0)
      objc_msgSend(v35, "setNeedsLayout");
    sub_14DEF0(2, 0, 4);
    objc_msgSend(*(id *)&v35[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryView], "setHidden:", 0);
    v35[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showBottomDivider] = 1;
    objc_msgSend(*(id *)&v35[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDivider], "setHidden:", 0);
    objc_msgSend(v35, "setNeedsLayout");

  }
}

void sub_200EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  Swift::Int v30;
  void (*v31)(_BYTE *, uint64_t);
  Class isa;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void (*v38)(_BYTE *, uint64_t);
  _BYTE v39[24];
  _BYTE v40[24];

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v39[-v11];
  v14 = IndexPath.item.getter(v13);
  v15 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    return;
  }
  v16 = a3 + 16;
  v17 = IndexPath.section.getter(v14);
  IndexPath.init(item:section:)(v15, v17);
  swift_beginAccess(v16, v40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v16);
  if (!Strong)
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
    return;
  }
  v19 = (char *)Strong;
  swift_beginAccess(a4 + 16, v39, 0, 0);
  v20 = swift_unknownObjectWeakLoadStrong(a4 + 16);
  if (!v20)
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);

    return;
  }
  v21 = (void *)v20;
  v22 = IndexPath.section.getter(v20);
  v23 = *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_presenter];
  swift_retain(v23);
  v25 = AccountPresenter.sectionCount.getter(v24);
  v26 = swift_release(v23);
  v27 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v7 + 16))(v9, v12, v6, v26);
  if (v22 >= v25)
  {

    v38 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v38(v9, v6);
    v38(v12, v6);
    return;
  }
  v28 = IndexPath.item.getter(v27);
  v29 = IndexPath.section.getter(v28);
  v30 = AccountPresenter.numberOfItems(in:)(v29);
  v31 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v31(v9, v6);
  if (v28 < v30)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v33 = objc_msgSend(v21, "cellForItemAtIndexPath:", isa);

    if (v33)
    {
      v34 = type metadata accessor for TextInputCollectionViewCell();
      v35 = swift_dynamicCastClass(v33, v34);
      if (v35)
      {
        v36 = (void *)v35;
        v37 = v33;
        objc_msgSend(v36, "becomeFirstResponder");

        goto LABEL_13;
      }

    }
    v31(v12, v6);

    return;
  }

LABEL_13:
  v31(v12, v6);
}

uint64_t sub_201150(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = *(_QWORD *)(result + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_presenter);
    swift_retain(v10);

    swift_bridgeObjectRetain(a2);
    a4(a1, a2);
    return swift_release(v10);
  }
  return result;
}

void sub_2011EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_presenter;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_presenter);
    v7 = swift_retain(v6);
    v8 = AccountPresenter.canSignIn.getter(v7);
    swift_release(v6);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)&v4[v5];
      swift_retain(v9);
      AccountPresenter.signIn()();

      swift_release(v9);
    }
    else
    {

    }
  }
}

uint64_t type metadata accessor for AccountCollectionViewDelegate()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate);
}

void sub_20170C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unsigned __int8 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)();
  uint64_t v42;
  uint64_t v43;
  void *v44;
  Swift::String_optional v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  double (*v55)(uint64_t, uint64_t, __n128);
  id v56;
  __n128 v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, __n128);
  __n128 v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, __n128);
  __n128 v80;
  double v81;
  double v82;
  _QWORD *v83;
  void *v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  id v92;
  char *v93;

  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = IndexPath.safeSection.getter(v11);
  if ((v13 & 1) != 0)
    return;
  v14 = v12;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  v17 = v15 == a2 && v16 == a3;
  v92 = a1;
  if (v17)
  {
    v19 = v8;
    v20 = (void *)v14;
    swift_bridgeObjectRelease(a3);
LABEL_14:
    v28 = type metadata accessor for AccountSectionSupplementaryView();
    v29 = swift_dynamicCastClass(v92, v28);
    if (!v29)
      return;
    v30 = (_BYTE *)v29;
    v31 = v20;
    v32 = v19;
    v33 = v92;
    v34 = AccountPresenter.accountSection(for:)(v31);
    if (v35 == 2)
    {
      if (v34 == 3)
      {
        v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_displayType] = 3;
        v91 = *(void **)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_tapGestureRecognizer];
        if (v91)
          objc_msgSend(v91, "setEnabled:", 0);
        sub_185648();
        objc_msgSend(v30, "setNeedsLayout");
        v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_isCentered] = 1;
        goto LABEL_24;
      }
      if (v34 == 1)
      {
        v92 = v31;
        v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_displayType] = 0;
        v36 = *(void **)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_tapGestureRecognizer];
        if (v36)
          objc_msgSend(v36, "setEnabled:", 1);
        sub_185648();
        objc_msgSend(v30, "setNeedsLayout");
        v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_isCentered] = 1;
        sub_185648();
        v37 = swift_allocObject(&unk_38B290, 24, 7);
        swift_unknownObjectWeakInit(v37 + 16, v93);
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v32);
        v38 = *(unsigned __int8 *)(v9 + 80);
        v39 = (v38 + 24) & ~v38;
        v40 = swift_allocObject(&unk_38B308, v39 + v10, v38 | 7);
        *(_QWORD *)(v40 + 16) = v37;
        (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v40 + v39, (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v32);
        v41 = (uint64_t (**)())&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_buttonAction];
        v42 = *(_QWORD *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_buttonAction];
        v43 = *(_QWORD *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_buttonAction
                            + 8];
        *v41 = sub_202E20;
        v41[1] = (uint64_t (*)())v40;
        sub_1D618(v42, v43);
        v31 = v92;
        goto LABEL_25;
      }
    }
    sub_10A8B0(v34, v35);
    v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_displayType] = 3;
    v44 = *(void **)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_tapGestureRecognizer];
    if (v44)
      objc_msgSend(v44, "setEnabled:", 0);
    sub_185648();
    objc_msgSend(v30, "setNeedsLayout");
    v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_isCentered] = 0;
LABEL_24:
    sub_185648();
LABEL_25:
    v45 = AccountPresenter.footerText(in:)((Swift::Int)v31);
    v46 = *(_QWORD *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_text + 8];
    *(Swift::String_optional *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_text] = v45;
    swift_bridgeObjectRelease(v46);
    sub_185648();
    v47 = objc_msgSend((id)objc_opt_self(UIColor), "systemGroupedBackgroundColor");
    objc_msgSend(v30, "setBackgroundColor:", v47);

    v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasTopSeparator] = 0;
    sub_185B00(v48, v49);
    v30[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasBottomSeparator] = 0;
    sub_185D80(v50, v51);
    v53 = *(_QWORD *)&v93[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits];
    v52 = *(_QWORD *)&v93[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits + 8];
    ObjectType = swift_getObjectType();
    v55 = *(double (**)(uint64_t, uint64_t, __n128))(v52 + 16);
    v56 = v33;
    v57 = swift_unknownObjectRetain(v53);
    v58 = v55(ObjectType, v52, v57);
    v60 = v59;
    v62 = v61;
    v64 = v63;
    swift_unknownObjectRelease(v53);
    objc_msgSend(v30, "setLayoutMargins:", v58, v60, v62, v64);

    return;
  }
  v18 = v16;
  v19 = v8;
  v20 = (void *)v14;
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, a2, a3, 0);
  swift_bridgeObjectRelease(v18);
  if ((v21 & 1) != 0)
    goto LABEL_14;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v22 == a2 && v23 == a3)
  {
    swift_bridgeObjectRelease(a3);
    v27 = v92;
  }
  else
  {
    v25 = v23;
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, a2, a3, 0);
    swift_bridgeObjectRelease(v25);
    v27 = v92;
    if ((v26 & 1) == 0)
      return;
  }
  v65 = type metadata accessor for AccountSectionSupplementaryView();
  v66 = swift_dynamicCastClass(v27, v65);
  if (v66)
  {
    v67 = (_BYTE *)v66;
    v68 = &v93[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits];
    v70 = *(_QWORD *)&v93[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits];
    v69 = *(_QWORD *)&v93[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits + 8];
    v71 = swift_getObjectType();
    v72 = *(void (**)(uint64_t, uint64_t, __n128))(v69 + 16);
    v93 = (char *)v27;
    v73 = swift_unknownObjectRetain(v70);
    v72(v71, v69, v73);
    v75 = v74;
    swift_unknownObjectRelease(v70);
    v77 = *(_QWORD *)v68;
    v76 = *((_QWORD *)v68 + 1);
    v78 = swift_getObjectType();
    v79 = *(void (**)(uint64_t, uint64_t, __n128))(v76 + 16);
    v80 = swift_unknownObjectRetain(v77);
    v79(v78, v76, v80);
    v82 = v81;
    swift_unknownObjectRelease(v77);
    v67[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_isCentered] = 0;
    v83 = &v67[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_text];
    sub_185648();
    v67[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_displayType] = 2;
    v84 = *(void **)&v67[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_tapGestureRecognizer];
    if (v84)
      objc_msgSend(v84, "setEnabled:", 0);
    sub_185648();
    objc_msgSend(v67, "setNeedsLayout");
    v85 = v83[1];
    *v83 = 0;
    v83[1] = 0;
    swift_bridgeObjectRelease(v85);
    sub_185648();
    v86 = objc_msgSend((id)objc_opt_self(UIColor), "systemGroupedBackgroundColor");
    objc_msgSend(v67, "setBackgroundColor:", v86);

    v67[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasTopSeparator] = 0;
    sub_185B00(v87, v88);
    v67[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasBottomSeparator] = 0;
    sub_185D80(v89, v90);
    objc_msgSend(v67, "setLayoutMargins:", 0.0, v75, 0.0, v82);

  }
}

double sub_201D94(void *a1, Swift::Int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String_optional v10;
  uint64_t v11;
  unsigned __int8 v12;
  void *v13;
  uint64_t v15;
  unsigned __int8 v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  id v22;
  char v23;
  void *v24;
  double v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t ObjectType;
  void (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  double v32;
  double v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, __n128);
  __n128 v38;
  double v39;
  double v40;
  double v41;
  unint64_t v42;
  unint64_t v43;
  double v44;
  double v45;
  void *v46;
  __n128 v47;
  void *v48;
  double v49;
  double v50;
  __n128 v51;
  void *v52;
  __n128 v53;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  void *v62;
  uint64_t v63;
  uint64_t countAndFlagsBits;
  void *object;
  id v66;

  v3 = v2;
  v6 = type metadata accessor for FloatingPointRoundingRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (AccountPresenter.numberOfItems(in:)(a2) < 1)
    return 0.0;
  v10 = AccountPresenter.footerText(in:)(a2);
  countAndFlagsBits = v10.value._countAndFlagsBits;
  v11 = AccountPresenter.accountSection(for:)(a2);
  object = v10.value._object;
  v66 = a1;
  if (v10.value._object)
    LODWORD(v13) = 1;
  else
    LODWORD(v13) = 3;
  if (v12 == 2 && v11 == 1)
  {
    LOBYTE(v13) = 0;
    v20 = 0.0;
  }
  else
  {
    v15 = v11;
    v16 = v12;
    if (qword_3CF998 != -1)
      swift_once(&qword_3CF998, sub_1BE5A4);
    v17 = *(double *)&xmmword_3FCD00;
    if (byte_3FCD10 == 1)
    {
      v57 = (unsigned __int16)word_3FCD70;
      v61 = xmmword_3FCD58;
      v62 = (void *)qword_3FCD48;
      v63 = qword_3FCD50;
      HIDWORD(v55) = (_DWORD)v13;
      v60 = qword_3FCD40;
      v58 = qword_3FCD68;
      v59 = qword_3FCD38;
      v18 = qword_3FCD28;
      v56 = qword_3FCD30;
      v13 = (void *)qword_3FCD18;
      v19 = qword_3FCD20;
      v21 = *((double *)&xmmword_3FCD00 + 1);
      v20 = *(double *)&xmmword_3FCD00;
      sub_1FEB8();
      v22 = sub_1472C(v13, v19, v18, v56, v59, v60, v62, v63, v61, *((uint64_t *)&v61 + 1), v58, v57);
      v23 = static UITraitCollection.interfaceIdiomIsMac.getter(v22);
      sub_10A8B0(v15, v16);
      v24 = v13;
      LOBYTE(v13) = BYTE4(v55);
      sub_14788(v24, v19, v18, v56, v59, v60, v62, v63, v61, *((uint64_t *)&v61 + 1), v58, v57);
      if ((v23 & 1) == 0)
        v20 = v21;
    }
    else
    {
      sub_10A8B0(v15, v16);
      v20 = v17;
    }
  }
  v26 = (_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
  v27 = (void *)*v26;
  v28 = v26[1];
  ObjectType = swift_getObjectType();
  v30 = *(void (**)(uint64_t, uint64_t, __n128))(v28 + 16);
  v31 = swift_unknownObjectRetain(v27);
  v30(ObjectType, v28, v31);
  v33 = v32;
  swift_unknownObjectRelease(v27);
  v34 = (void *)*v26;
  v35 = v26[1];
  v36 = swift_getObjectType();
  v37 = *(void (**)(uint64_t, uint64_t, __n128))(v35 + 16);
  v38 = swift_unknownObjectRetain(v34);
  v37(v36, v35, v38);
  v40 = v39;
  *(_QWORD *)&v41 = swift_unknownObjectRelease(v34).n128_u64[0];
  objc_msgSend(v66, "frame", v41);
  v43 = v42;
  v45 = v44;
  v46 = (void *)*v26;
  v47 = swift_unknownObjectRetain(*v26);
  v48 = object;
  v47.n128_u64[0] = v43;
  sub_187280(countAndFlagsBits, (uint64_t)object, v13, 0, 0, v46, v47, v45, 0.0, v33, v20, v40);
  v50 = v49;
  swift_unknownObjectRelease(v46);
  v51 = swift_bridgeObjectRelease(v48);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v7 + 104))(v9, enum case for FloatingPointRoundingRule.up(_:), v6, v51);
  v52 = (void *)*v26;
  swift_getObjectType();
  swift_unknownObjectRetain(v52);
  v25 = sub_21E73C((uint64_t)v9, v52, v50);
  v53 = swift_unknownObjectRelease(v52);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v53);
  return v25;
}

void sub_202148(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = AccountPresenter.sectionCount.getter(a1);
  if (v2 >= 1)
  {
    v3 = AccountPresenter.sectionCount.getter(v2);
    if (__OFSUB__(v3, 1))
    {
      __break(1u);
    }
    else
    {
      sub_201D94(a1, v3 - 1);
      if (qword_3CF9A0 == -1)
        goto LABEL_4;
    }
    swift_once(&qword_3CF9A0, sub_1BE5F0);
LABEL_4:
    if (byte_3FCD88 == 1)
    {
      v4 = sub_1FEB8();
      static UITraitCollection.interfaceIdiomIsMac.getter(v4);
    }
  }
}

double sub_20223C(void *a1, Swift::Int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unsigned __int8 v11;
  double v13;
  double v14;
  double v15;
  unint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  void (*v21)(uint64_t, uint64_t, __n128);
  __n128 v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(uint64_t, _QWORD *, __n128);
  __n128 v27;
  void *v28;
  __n128 v29;
  uint64_t v31;

  v3 = v2;
  v6 = type metadata accessor for FloatingPointRoundingRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (AccountPresenter.numberOfItems(in:)(a2) < 1)
    return 0.0;
  v10 = AccountPresenter.accountSection(for:)(a2);
  if (v11 == 2 && v10 == 2)
  {
    if (qword_3CF998 != -1)
      swift_once(&qword_3CF998, sub_1BE5A4);
    if (byte_3FCD10 == 1)
    {
      v13 = *((double *)&xmmword_3FCD00 + 1);
      v15 = *(double *)&xmmword_3FCD00;
      v16 = sub_1FEB8();
      if ((static UITraitCollection.interfaceIdiomIsMac.getter(v16) & 1) != 0)
        v13 = v15;
    }
    else
    {
      v13 = *(double *)&xmmword_3FCD00;
    }
  }
  else
  {
    sub_10A8B0(v10, v11);
    v13 = 0.0;
  }
  v17 = (void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
  v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits + 8);
  ObjectType = swift_getObjectType();
  v21 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 16);
  v22 = swift_unknownObjectRetain(v18);
  v21(ObjectType, v19, v22);
  swift_unknownObjectRelease(v18);
  v23 = *v17;
  v24 = v17[1];
  v25 = swift_getObjectType();
  v26 = (void (*)(uint64_t, _QWORD *, __n128))v24[2];
  v27 = swift_unknownObjectRetain(v23);
  v26(v25, v24, v27);
  objc_msgSend(a1, "frame", swift_unknownObjectRelease(v23).n128_f64[0]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for FloatingPointRoundingRule.up(_:), v6);
  v28 = *v17;
  swift_getObjectType();
  swift_unknownObjectRetain(v28);
  v14 = sub_21E73C((uint64_t)v9, v28, v13 + 0.0);
  v29 = swift_unknownObjectRelease(v28);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v29);
  return v14;
}

void sub_202464(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  void *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  char v52;
  char *v53;
  uint64_t v54;
  void **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double (*v59)(uint64_t, uint64_t, __n128);
  __n128 v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  char v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, __n128);
  __n128 v79;
  void *v80;
  double v81;
  double v82;
  void (*v83)(_BYTE *, uint64_t, __n128);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t ObjectType;
  double (*v91)(uint64_t, uint64_t, __n128);
  __n128 v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  void *v105;
  uint64_t v106;
  char v107;
  __n128 v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  void **v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double (*v119)(uint64_t, uint64_t, __n128);
  __n128 v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  void *v133;
  _BYTE v134[12];
  int v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v141 = a1;
  v4 = type metadata accessor for AccountLink.LinkDisplayType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v134[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v8);
  v11 = &v134[-v10];
  v12 = type metadata accessor for AccountLink(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v134[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v139 = (char *)IndexPath.item.getter(v16);
  v140 = v2;
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_presenter);
  v18 = IndexPath.section.getter(v139);
  v138 = v17;
  v19 = AccountPresenter.accountSection(for:)(v18);
  v21 = v19;
  if (!v20)
  {
    v136 = v15;
    v137 = v12;
    v45 = IndexPath.item.getter(v19);
    if ((v45 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v45 < *(_QWORD *)(v21 + 16))
    {
      v46 = v13;
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v13 + 16))(v136, v21+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v45, v137);
      v47 = sub_10A8B0(v21, 0);
      AccountLink.displayType.getter(v47);
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for AccountLink.LinkDisplayType.action(_:), v4);
      v48 = sub_202C10();
      dispatch thunk of RawRepresentable.rawValue.getter(&v144, v4, v48);
      dispatch thunk of RawRepresentable.rawValue.getter(&v142, v4, v48);
      v49 = v145;
      v50 = v143;
      if (v144 == v142 && v145 == v143)
      {
        v51 = swift_bridgeObjectRelease_n(v145, 2);
        v135 = 1;
      }
      else
      {
        v135 = _stringCompareWithSmolCheck(_:_:expecting:)(v144, v145, v142, v143, 0);
        swift_bridgeObjectRelease(v49);
        v51 = swift_bridgeObjectRelease(v50);
      }
      LODWORD(v139) = v139 == 0;
      v83 = *(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8);
      v83(v7, v4, v51);
      ((void (*)(_BYTE *, uint64_t))v83)(v11, v4);
      v84 = (char *)AccountPresenter.itemText(at:)(a2);
      v86 = v85;
      type metadata accessor for AccountDetailCollectionViewCell();
      v87 = (void **)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
      v88 = *(_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
      v89 = *(_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits + 8);
      ObjectType = swift_getObjectType();
      v91 = *(double (**)(uint64_t, uint64_t, __n128))(v89 + 16);
      v92 = swift_unknownObjectRetain(v88);
      v93 = v91(ObjectType, v89, v92);
      v95 = v94;
      v97 = v96;
      v99 = v98;
      *(_QWORD *)&v100 = swift_unknownObjectRelease(v88).n128_u64[0];
      objc_msgSend(v141, "frame", v100);
      v102 = v101;
      v104 = v103;
      v105 = *v87;
      swift_getObjectType();
      swift_unknownObjectRetain(v105);
      if ((v135 & 1) != 0)
        v106 = 0;
      else
        v106 = 2;
      if ((v135 & 1) != 0)
        v107 = -1;
      else
        v107 = 4;
      sub_150F0C(0, 0, 0, 1, v84, v86, 0, 0, v93, v95, v97, v99, v102, v104, 0, v106, 0, v107, (char)v139,
        1,
        v105);
      swift_unknownObjectRelease(v105);
      sub_151834(v106, 0, v107);
      v108 = swift_bridgeObjectRelease(v86);
      (*(void (**)(_BYTE *, uint64_t, __n128))(v46 + 8))(v136, v137, v108);
      return;
    }
    __break(1u);
    return;
  }
  if (v20 == 1)
  {
    v22 = v139 == 0;
    sub_10A8B0(v19, 1u);
    type metadata accessor for AccountDetailCollectionViewCell();
    v23 = (char *)AccountPresenter.itemText(at:)(a2);
    v25 = v24;
    v26 = (void **)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
    v27 = *(_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
    v28 = *(_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits + 8);
    v29 = swift_getObjectType();
    v30 = *(double (**)(uint64_t, uint64_t, __n128))(v28 + 16);
    v31 = swift_unknownObjectRetain(v27);
    v32 = v30(v29, v28, v31);
    v34 = v33;
    v36 = v35;
    v38 = v37;
    *(_QWORD *)&v39 = swift_unknownObjectRelease(v27).n128_u64[0];
    objc_msgSend(v141, "frame", v39);
    v41 = v40;
    v43 = v42;
    v44 = *v26;
    swift_getObjectType();
    swift_unknownObjectRetain(v44);
    sub_150F0C(0, 0, 0, 1, v23, v25, 0, 0, v32, v34, v36, v38, v41, v43, 0, 0, 0, 255, v22, 1, v44);
LABEL_11:
    swift_unknownObjectRelease(v44);
    swift_bridgeObjectRelease(v25);
    return;
  }
  if ((unint64_t)(v19 - 1) < 2)
  {
    v52 = v139 == 0;
    type metadata accessor for AccountDetailCollectionViewCell();
    v53 = (char *)AccountPresenter.itemText(at:)(a2);
    v25 = v54;
    v55 = (void **)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
    v56 = *(_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
    v57 = *(_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits + 8);
    v58 = swift_getObjectType();
    v59 = *(double (**)(uint64_t, uint64_t, __n128))(v57 + 16);
    v60 = swift_unknownObjectRetain(v56);
    v61 = v59(v58, v57, v60);
    v63 = v62;
    v65 = v64;
    v67 = v66;
    *(_QWORD *)&v68 = swift_unknownObjectRelease(v56).n128_u64[0];
    objc_msgSend(v141, "frame", v68);
    v70 = v69;
    v72 = v71;
    v44 = *v55;
    swift_getObjectType();
    swift_unknownObjectRetain(v44);
    sub_150F0C(0, 0, 0, 1, v53, v25, 0, 0, v61, v63, v65, v67, v70, v72, 0, 0, 0, 255, v52, 1, v44);
    goto LABEL_11;
  }
  if (v19)
  {
    LODWORD(v137) = v139 == 0;
    type metadata accessor for AccountDetailCollectionViewCell();
    v109 = (void *)AccountPresenter.profilePicture.getter();
    v139 = (char *)AccountPresenter.itemText(at:)(a2);
    v111 = v110;
    v112 = AccountPresenter.itemSubtitle(at:)(a2);
    v114 = v113;
    v115 = (void **)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
    v116 = *(_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
    v117 = *(_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits + 8);
    v118 = swift_getObjectType();
    v119 = *(double (**)(uint64_t, uint64_t, __n128))(v117 + 16);
    v120 = swift_unknownObjectRetain(v116);
    v121 = v119(v118, v117, v120);
    v123 = v122;
    v125 = v124;
    v127 = v126;
    *(_QWORD *)&v128 = swift_unknownObjectRelease(v116).n128_u64[0];
    objc_msgSend(v141, "frame", v128);
    v130 = v129;
    v132 = v131;
    v133 = *v115;
    swift_getObjectType();
    swift_unknownObjectRetain(v133);
    sub_150F0C(v109, 0, 0, 1, v139, v111, 0, v112, v121, v123, v125, v127, v130, v132, v114, 2, 0, 4, v137,
      1,
      v133);
    swift_unknownObjectRelease(v133);
    swift_bridgeObjectRelease(v114);
    swift_bridgeObjectRelease(v111);

  }
  else
  {
    v73 = v139 == 0;
    v74 = (_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
    v75 = *(_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits);
    v76 = *(_QWORD *)(v140 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits + 8);
    v77 = swift_getObjectType();
    v78 = *(void (**)(uint64_t, uint64_t, __n128))(v76 + 16);
    v79 = swift_unknownObjectRetain(v75);
    v78(v77, v76, v79);
    swift_unknownObjectRelease(v75);
    v80 = (void *)*v74;
    *(_QWORD *)&v81 = swift_unknownObjectRetain(*v74).n128_u64[0];
    objc_msgSend(v141, "frame", v81);
    sub_2D4BF0(v73, 1, v80, v82);
    swift_unknownObjectRelease(v80);
  }
}

unint64_t sub_202C10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DC978;
  if (!qword_3DC978)
  {
    v1 = type metadata accessor for AccountLink.LinkDisplayType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AccountLink.LinkDisplayType, v1);
    atomic_store(result, (unint64_t *)&qword_3DC978);
  }
  return result;
}

uint64_t sub_202C58()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_202C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_201150(a1, a2, v2, (void (*)(uint64_t, uint64_t))&AccountPresenter.passwordInputValue.setter);
}

void sub_202C9C(uint64_t a1)
{
  uint64_t v1;

  sub_2011EC(a1, v1);
}

uint64_t sub_202CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_201150(a1, a2, v2, (void (*)(uint64_t, uint64_t))&AccountPresenter.accountName.setter);
}

uint64_t sub_202CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_202D50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_200EC8(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_202DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_202E20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_1FF404(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void sub_202E54(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_202E94(uint64_t a1)
{
  double result;

  String.hash(into:)(a1, 0x746E6F4379616C70, 0xEC000000736C6F72);
  *(_QWORD *)&result = swift_bridgeObjectRelease(0xEC000000736C6F72).n128_u64[0];
  return result;
}

Swift::Int sub_202F64(uint64_t a1, char a2)
{
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_2FFB60[a2]);
  return Hasher._finalize()();
}

void sub_202FB0(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_202FFC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x746E6F4379616C70, 0xEC000000736C6F72);
  swift_bridgeObjectRelease(0xEC000000736C6F72);
  return Hasher._finalize()();
}

BOOL sub_2030E0(char *a1, char *a2)
{
  return dbl_2FFB80[*a1] == dbl_2FFB80[*a2];
}

Swift::Int sub_203104()
{
  char *v0;

  return sub_202F64(0, *v0);
}

void sub_203110()
{
  char *v0;

  Hasher._combine(_:)(qword_2FFB60[*v0]);
}

Swift::Int sub_203144(uint64_t a1)
{
  char *v1;

  return sub_202F64(a1, *v1);
}

uint64_t sub_20314C@<X0>(double *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_203890(*a1);
  *a2 = result;
  return result;
}

double sub_203174@<D0>(double *a1@<X8>)
{
  char *v1;
  double result;

  result = dbl_2FFB80[*v1];
  *a1 = result;
  return result;
}

char *sub_20318C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  id v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  double v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  objc_super v25;

  *(_DWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_rating] = 1080033280;
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_color;
  sub_1B68C8();
  v10 = v4;
  *(UIColor *)&v4[v9] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.99608, 0.5098, 0.027451, 1.0);
  v10[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_starSize] = 2;
  v10[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_hideEmptyStars] = 0;
  v10[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_reverseAlignment] = 0;
  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_label] = v11;

  v25.receiver = v10;
  v25.super_class = (Class)type metadata accessor for RatingView();
  v12 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", a1, a2, a3, a4);
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_label;
  v14 = *(void **)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_label];
  v15 = v12;
  objc_msgSend(v14, "setNumberOfLines:", 1);
  objc_msgSend(v14, "setLineBreakMode:", 2);
  objc_msgSend(v14, "setTextAlignment:", 1);
  objc_msgSend(v15, "addSubview:", v14);
  v16 = dbl_2FFB80[v15[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_starSize]];
  v17 = (void *)objc_opt_self(UIFont);
  v18 = v14;
  v19 = objc_msgSend(v17, "systemFontOfSize:", v16);
  objc_msgSend(v18, "setFont:", v19);

  v20 = *(void **)&v12[v13];
  objc_msgSend(v20, "setTextColor:", *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_color]);
  sub_2038E0(v15[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_hideEmptyStars], *(float *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_rating]);
  v22 = v21;
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setText:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  objc_msgSend(v15, "invalidateIntrinsicContentSize");
  return v15;
}

void sub_203560()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t inited;
  void *v5;
  NSString *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;

  v1._countAndFlagsBits = 8755426;
  v1._object = (void *)0xA300000000000000;
  v2 = String.init(repeating:count:)(v1, 5);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
  inited = swift_initStackObject(v3, &v9);
  *(_OWORD *)(inited + 16) = xmmword_2F03C0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews10RatingView_label);
  v6 = NSFontAttributeName;
  v7 = objc_msgSend(v5, "font");
  if (v7)
  {
    *(_QWORD *)(inited + 40) = v7;
    v8 = sub_D47A0(inited);
    sub_21A7CC(v2._countAndFlagsBits, (uint64_t)v2._object, 0, v8, 0, 1.79769313e308, 1.79769313e308);
    swift_bridgeObjectRelease(v2._object);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    __break(1u);
  }
}

id sub_2036F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RatingView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RatingView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews10RatingView);
}

uint64_t storeEnumTagSinglePayload for RatingView.StarSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2037C8 + 4 * byte_2FFA85[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2037FC + 4 * byte_2FFA80[v4]))();
}

uint64_t sub_2037FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_203804(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20380CLL);
  return result;
}

uint64_t sub_203818(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x203820);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_203824(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20382C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RatingView.StarSize()
{
  return &type metadata for RatingView.StarSize;
}

unint64_t sub_20384C()
{
  unint64_t result;

  result = qword_3DC9D8;
  if (!qword_3DC9D8)
  {
    result = swift_getWitnessTable(&unk_2FFB34, &type metadata for RatingView.StarSize);
    atomic_store(result, (unint64_t *)&qword_3DC9D8);
  }
  return result;
}

uint64_t sub_203890(double a1)
{
  unsigned int v2;

  if (a1 == 8.0)
    return 0;
  if (a1 == 12.0)
    return 1;
  if (a1 == 20.0)
    v2 = 3;
  else
    v2 = 4;
  if (a1 == 15.0)
    return 2;
  else
    return v2;
}

void sub_2038E0(char a1, float a2)
{
  float v3;
  uint64_t v4;
  uint64_t v6;
  Swift::String v7;
  float v8;
  uint64_t v9;
  unint64_t v10;
  float v11;
  uint64_t v12;
  Swift::String v13;

  v3 = floorf(a2);
  if ((~LODWORD(v3) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v3 <= -9.2234e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v3 >= 9.2234e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v4 = (uint64_t)v3;
  if ((uint64_t)v3 < 0)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v4)
  {
    v6 = (uint64_t)v3;
    do
    {
      v7._countAndFlagsBits = 8755426;
      v7._object = (void *)0xA300000000000000;
      String.append(_:)(v7);
      --v6;
    }
    while (v6);
  }
  v8 = a2 - (float)v4;
  if (v8 >= 0.75)
  {
    v9 = 48834;
  }
  else if (v8 >= 0.5)
  {
    v9 = 48578;
  }
  else
  {
    if (v8 < 0.25)
      goto LABEL_15;
    v9 = 48322;
  }
  v10 = 0xA200000000000000;
  String.append(_:)(*(Swift::String *)&v9);
LABEL_15:
  if ((a1 & 1) != 0)
    return;
  v11 = 5.0 - ceilf(a2);
  if ((~LODWORD(v11) & 0x7F800000) == 0)
    goto LABEL_27;
  if (v11 <= -9.2234e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= 9.2234e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v12 = (uint64_t)v11;
  if ((uint64_t)v11 < 0)
  {
LABEL_30:
    __break(1u);
    return;
  }
  for (; v12; --v12)
  {
    v13._countAndFlagsBits = 8820962;
    v13._object = (void *)0xA300000000000000;
    String.append(_:)(v13);
  }
}

id sub_203A64(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  NSNumber v13;
  uint64_t v14;
  Class v15;

  v2 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
  v4 = swift_allocObject(v3, 96, 7);
  *(_OWORD *)(v4 + 16) = xmmword_2EFA20;
  v5 = objc_msgSend(a1, "colorWithAlphaComponent:", 0.0);
  v6 = objc_msgSend(v5, "CGColor");

  type metadata accessor for CGColor(0);
  v8 = v7;
  *(_QWORD *)(v4 + 56) = v7;
  *(_QWORD *)(v4 + 32) = v6;
  v9 = objc_msgSend(a1, "CGColor");
  *(_QWORD *)(v4 + 88) = v8;
  *(_QWORD *)(v4 + 64) = v9;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setColors:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_2EFC90;
  sub_203C48();
  *(NSNumber *)(v12 + 32) = NSNumber.init(integerLiteral:)(0);
  v13.super.super.isa = NSNumber.init(floatLiteral:)(0.8).super.super.isa;
  *(NSNumber *)(v12 + 40) = v13;
  specialized Array._endMutation()(v13.super.super.isa);
  v14 = v12;
  v15 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setLocations:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend(v2, "setStartPoint:", 0.0, 0.5);
  objc_msgSend(v2, "setEndPoint:", 1.0, 0.5);
  return v2;
}

unint64_t sub_203C48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D5AF8;
  if (!qword_3D5AF8)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D5AF8);
  }
  return result;
}

uint64_t sub_203C84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *boxed_opaque_existential_0;
  Swift::String v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[5];

  v4 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v52[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OSLogger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v52[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  v12 = BaseObjectGraph.injectIfAvailable<A>(_:)(v52, v11, v11);
  v13 = v52[0];
  if (!v52[0])
  {
    static OSLogger.actions.getter(v12);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
    v24 = type metadata accessor for LogMessage(0);
    v25 = swift_allocObject(v23, ((*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) | 7);
    *(_OWORD *)(v25 + 16) = xmmword_2F03C0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(48, 1);
    v26._object = (void *)0x8000000000314F90;
    v26._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    v27 = a1[3];
    v28 = __swift_project_boxed_opaque_existential_1(a1, v27);
    v52[3] = v27;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(boxed_opaque_existential_0, v28, v27);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v52);
    sub_D1D4((uint64_t)v52, &qword_3D1A70);
    v30._countAndFlagsBits = 0x6D206B63696C6320;
    v30._object = (void *)0xEF21736369727465;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)(v6);
    Logger.warning(_:)(v25, v7, &protocol witness table for OSLogger);
    v31 = swift_bridgeObjectRelease(v25);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v31);
    v32 = type metadata accessor for EpisodePlayState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a2, 1, 1, v32);
  }
  sub_1D5D4((uint64_t)a1, (uint64_t)v52);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
  v16 = type metadata accessor for PlayPauseAction(0, v15);
  if (swift_dynamicCast(&v51, v52, v14, v16, 0))
  {
    v17 = v51;
    v18 = PlayPauseAction.contentId.getter();
    v20 = EpisodeStateController.stateMachine(for:)(v18, v19);
    dispatch thunk of EpisodeStateMachine.currentState.getter(v21);
    swift_release(v20);
    swift_release(v13);
    v22 = v17;
  }
  else
  {
    v34 = type metadata accessor for PlayPauseQueueAction(0);
    if (swift_dynamicCast(&v51, v52, v14, v34, 0))
    {
      v35 = v51;
      v36 = PlayPauseQueueAction.contentId.getter();
      v38 = EpisodeStateController.stateMachine(for:)(v36, v37);
      dispatch thunk of EpisodeStateMachine.currentState.getter(v39);
      swift_release(v38);
    }
    else
    {
      v40 = type metadata accessor for LibraryPlayPauseAction(0);
      if (!swift_dynamicCast(&v51, v52, v14, v40, 0))
      {
        swift_release(v13);
        v50 = type metadata accessor for EpisodePlayState(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(a2, 1, 1, v50);
        return __swift_destroy_boxed_opaque_existential_0(v52);
      }
      v35 = v51;
      v42 = LibraryPlayPauseAction.episodeUuid.getter(v41);
      v44 = v43;
      v45 = EpisodeStateController.stateMachine(for:)(v42, v43);
      v46 = swift_bridgeObjectRelease(v44);
      dispatch thunk of EpisodeStateMachine.currentState.getter(v46);
      v47 = swift_release(v45);
      v48 = EpisodePlayState.playPauseState.getter(v47);
      LibraryPlayPauseAction.playState.setter(v48);
    }
    swift_release(v35);
    v22 = v13;
  }
  swift_release(v22);
  v49 = type metadata accessor for EpisodePlayState(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(a2, 0, 1, v49);
  return __swift_destroy_boxed_opaque_existential_0(v52);
}

uint64_t RootActionRunner.performEffects(of:asPartOf:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t Strong;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(_QWORD);
  uint64_t (*v62)(uint64_t);
  const char *v63;
  void (*v64)(_QWORD);
  __n128 v65;
  uint64_t refreshed;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85[5];
  uint64_t v86;
  char v87[24];
  _OWORD v88[2];
  uint64_t v89;

  v2 = v1;
  v84 = a1;
  v74 = type metadata accessor for DismissInlineModuleAction(0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v71 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v73 = (char *)&v70 - v6;
  v80 = type metadata accessor for UnfavoriteInterestAction(0, v5);
  v76 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v75 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v79 = (char *)&v70 - v10;
  v81 = type metadata accessor for FavoriteInterestAction(0, v9);
  v78 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v77 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - v13;
  v15 = type metadata accessor for ActionOutcome(0);
  v82 = *(_QWORD *)(v15 - 8);
  v83 = v15;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SearchAction(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v70 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  v27 = dispatch thunk of BaseObjectGraph.subtracting(dependencyFor:)();
  swift_beginAccess(v1 + 24, v87, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
  if (Strong)
  {
    v29 = (void *)Strong;
    UIResponder.nearestFlowController.getter((uint64_t)v88);

  }
  else
  {
    v89 = 0;
    memset(v88, 0, sizeof(v88));
  }
  v30 = BaseObjectGraph.satisfyingIfPresent<A>(_:with:)(v26, v88, v26);
  swift_release(v27);
  sub_D1D4((uint64_t)v88, &qword_3D31A0);
  sub_1D5D4((uint64_t)v84, (uint64_t)v88);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
  v32 = type metadata accessor for ExternalUrlAction(0);
  if (swift_dynamicCast(v85, v88, v31, v32, 0))
  {
    v33 = v85[0];
    sub_2049C4(v85[0], v30);
LABEL_37:
    v56 = v33;
LABEL_38:
    swift_release(v56);
    goto LABEL_39;
  }
  v34 = type metadata accessor for HttpAction(0);
  if (swift_dynamicCast(&v86, v88, v31, v34, 0))
  {
    v33 = v86;
    v35 = HttpAction.start()();
    v36 = (_QWORD *)swift_allocObject(&unk_38B418, 40, 7);
    v36[2] = v33;
    v36[3] = v2;
    v36[4] = v30;
    v37 = (_QWORD *)swift_allocObject(&unk_38B440, 40, 7);
    v37[2] = v33;
    v37[3] = v2;
    v37[4] = v30;
    v38 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
    swift_retain_n(v33, 2);
    swift_retain_n(v2, 2);
    swift_retain_n(v30, 2);
    v40 = static OS_dispatch_queue.main.getter(v39);
    v85[3] = v38;
    v85[4] = (uint64_t)&protocol witness table for OS_dispatch_queue;
    v85[0] = v40;
    Promise.then(perform:orCatchError:on:)(sub_209CE8, v36, sub_209D2C, v37, v85);
    swift_release(v35);
    swift_release(v36);
    swift_release(v37);
    __swift_destroy_boxed_opaque_existential_0(v85);
    goto LABEL_37;
  }
  v41 = type metadata accessor for HttpTemplateAction(0);
  if (swift_dynamicCast(v85, v88, v31, v41, 0))
  {
    v33 = v85[0];
    sub_204D08(v85[0], v30);
    goto LABEL_37;
  }
  v42 = type metadata accessor for PodcastOfferAction(0);
  if (swift_dynamicCast(v85, v88, v31, v42, 0))
  {
    v33 = v85[0];
    sub_20826C(v85[0]);
    goto LABEL_37;
  }
  v43 = type metadata accessor for EpisodeOfferAction(0);
  if (swift_dynamicCast(v85, v88, v31, v43, 0))
  {
    v33 = v85[0];
    sub_208478();
    goto LABEL_37;
  }
  v44 = type metadata accessor for LibraryEpisodeOfferAction(0);
  if (swift_dynamicCast(v85, v88, v31, v44, 0))
  {
    v33 = v85[0];
    sub_208760();
    goto LABEL_37;
  }
  v45 = type metadata accessor for LibraryPodcastOfferAction(0);
  if (swift_dynamicCast(v85, v88, v31, v45, 0))
  {
    v33 = v85[0];
    sub_208A54();
    goto LABEL_37;
  }
  v46 = type metadata accessor for LibraryPodcastUnfollowAction(0);
  if (swift_dynamicCast(v85, v88, v31, v46, 0))
  {
    v33 = v85[0];
    sub_208C44(v85[0]);
    goto LABEL_37;
  }
  v47 = type metadata accessor for ChannelOfferAction(0);
  if (swift_dynamicCast(v85, v88, v31, v47, 0))
  {
    v33 = v85[0];
    sub_208EC4(v85[0]);
    goto LABEL_37;
  }
  if (swift_dynamicCast(v25, v88, v31, v19, 0))
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v25, v19);
    sub_204E50((uint64_t)v22);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
LABEL_39:
    __swift_destroy_boxed_opaque_existential_0(v88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D62B0);
    (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v18, enum case for ActionOutcome.performed(_:), v83);
    v53 = Promise.__allocating_init(value:)(v18);
    swift_release(v30);
    return v53;
  }
  v48 = type metadata accessor for PopToRootAction(0);
  if (swift_dynamicCast(v85, v88, v31, v48, 0))
  {
    v33 = v85[0];
    sub_2093D4();
    goto LABEL_37;
  }
  v49 = type metadata accessor for OpenExternalAppAction(0);
  if (swift_dynamicCast(v85, v88, v31, v49, 0))
  {
    v33 = v85[0];
    sub_204FF0(v85[0], v30);
    goto LABEL_37;
  }
  v50 = type metadata accessor for OAuthAction(0);
  if (swift_dynamicCast(v85, v88, v31, v50, 0))
  {
    v33 = v85[0];
    sub_20526C(v85[0], v30);
    goto LABEL_37;
  }
  v51 = type metadata accessor for UpsellDismissingAction(0);
  if (!swift_dynamicCast(v85, v88, v31, v51, 0))
  {
    v54 = type metadata accessor for ResumeOAuthAction(0);
    if (swift_dynamicCast(v85, v88, v31, v54, 0))
    {
      v33 = v85[0];
      sub_209544(v85[0]);
      goto LABEL_37;
    }
    v55 = type metadata accessor for RefollowAllRecentlyUnfollowedShowsAction(0);
    if (swift_dynamicCast(v85, v88, v31, v55, 0))
    {
      v33 = v85[0];
      sub_2097F0();
      goto LABEL_37;
    }
    if (swift_dynamicCast(v14, v88, v31, v81, 0))
    {
      v58 = v78;
      v59 = (uint64_t)v77;
      v60 = v81;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v14, v81);
      v61 = (uint64_t (*)(_QWORD))&type metadata accessor for FavoriteInterestAction;
      v62 = (uint64_t (*)(uint64_t))&FavoriteInterestAction.adamID.getter;
      v63 = "Favorite for interest with adamID: %s";
      v64 = (void (*)(_QWORD))&InterestRepository.favoriteInterest(forAdamID:);
    }
    else
    {
      if (!swift_dynamicCast(v79, v88, v31, v80, 0))
      {
        refreshed = type metadata accessor for RefreshRecommendationsAction(0);
        if (swift_dynamicCast(v85, v88, v31, refreshed, 0))
        {
          v67 = v85[0];
          v68 = type metadata accessor for RecommendationsMetadataProvider(0);
          BaseObjectGraph.inject<A>(_:)(&v86, v68, v68);
          v69 = v86;
          RecommendationsMetadataProvider.refreshMetadata()();
          swift_release(v67);
          v56 = v69;
          goto LABEL_38;
        }
        if (!swift_dynamicCast(v73, v88, v31, v74, 0))
        {
          v52 = sub_2B77A8(v84);
          goto LABEL_32;
        }
        v58 = v72;
        v59 = (uint64_t)v71;
        v60 = v74;
        (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v71, v73, v74);
        sub_209B94();
LABEL_46:
        (*(void (**)(uint64_t, uint64_t, __n128))(v58 + 8))(v59, v60, v65);
        goto LABEL_39;
      }
      v58 = v76;
      v59 = (uint64_t)v75;
      v60 = v80;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v79, v80);
      v61 = (uint64_t (*)(_QWORD))&type metadata accessor for UnfavoriteInterestAction;
      v62 = (uint64_t (*)(uint64_t))&UnfavoriteInterestAction.adamID.getter;
      v63 = "Unfavorite for interest with adamID: %s";
      v64 = (void (*)(_QWORD))&InterestRepository.unfavoriteInterest(forAdamID:);
    }
    v65.n128_f64[0] = sub_209924(v59, v30, v61, v62, v63, v64);
    goto LABEL_46;
  }
  swift_release(v85[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D62B0);
  (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v18, enum case for ActionOutcome.performed(_:), v83);
  v52 = Promise.__allocating_init(value:)(v18);
LABEL_32:
  v53 = v52;
  swift_release(v30);
  __swift_destroy_boxed_opaque_existential_0(v88);
  return v53;
}

void sub_2049C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  NSURL *v17;
  void *v18;
  void *v19;
  id v20;
  NSURL *v21;
  void *v22;
  void *v23;
  unint64_t v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[5];

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v32[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionMetricsBehavior(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_E710(0, &qword_3DCBF0, ACAccountStore_ptr);
  v12 = BaseObjectGraph.inject<A>(_:)(v32, v11, v11);
  v13 = (void *)v32[0];
  if ((ExternalUrlAction.requiresSignedInUser.getter(v12) & 1) != 0)
  {
    v14 = objc_msgSend(v13, "ams_activeiTunesAccount");

    if (!v14)
    {
      v26 = type metadata accessor for AlertAction(0);
      v27 = static AlertAction.alertAuthenticationActionAccountCreationEnabled.getter();
      v32[3] = v26;
      v32[4] = sub_239FC(&qword_3DCBF8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AlertAction, (uint64_t)&protocol conformance descriptor for Action);
      v32[0] = v27;
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for ActionMetricsBehavior.notProcessed(_:), v7);
      v28 = type metadata accessor for FlowActionRunner();
      v29 = sub_239FC(&qword_3D31F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
      v30 = ActionRunner.perform(_:withMetrics:asPartOf:)(v32, v10, a2, v28, v29);
      swift_release(v30);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      __swift_destroy_boxed_opaque_existential_0(v32);
      return;
    }
  }
  if ((ExternalUrlAction.isSensitive.getter() & 1) != 0)
  {
    v15 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (!v15)
    {
      __break(1u);
      return;
    }
    v16 = v15;
    ExternalUrlAction.url.getter();
    URL._bridgeToObjectiveC()(v17);
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    objc_msgSend(v16, "openSensitiveURL:withOptions:", v19, 0);

  }
  else
  {
    v20 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    ExternalUrlAction.url.getter();
    URL._bridgeToObjectiveC()(v21);
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v24 = sub_D4A3C((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_239FC(&qword_3D0410, 255, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2EF6A0);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v20, "openURL:options:completionHandler:", v23, isa, 0, swift_bridgeObjectRelease(v24).n128_f64[0]);

  }
}

uint64_t sub_204D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  objc_class *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double v12;
  id v13;
  objc_super v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[5];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v16, v6, v6);
  if (!v17)
    return sub_D1D4((uint64_t)&v16, &qword_3D31A0);
  sub_1B738(&v16, (uint64_t)v18);
  v7 = (objc_class *)type metadata accessor for HttpTemplateController();
  v8 = objc_allocWithZone(v7);
  v10 = sub_239FC(&qword_3DCC00, v9, (uint64_t (*)(uint64_t))type metadata accessor for RootActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_textFields] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_okAction] = 0;
  v8[OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_hasRequiredParameters] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_objectGraph] = a2;
  v11 = &v8[OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_actionRunner];
  *v11 = v3;
  v11[1] = v10;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_templateAction] = a1;
  v15.receiver = v8;
  v15.super_class = v7;
  swift_retain(a2);
  swift_retain(a1);
  *(_QWORD *)&v12 = swift_retain(v3).n128_u64[0];
  v13 = objc_msgSendSuper2(&v15, "init", v12);
  sub_26A754(v18);

  return __swift_destroy_boxed_opaque_existential_0(v18);
}

uint64_t sub_204E50(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[2];
  _BYTE v10[24];
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];

  BaseObjectGraph.injectIfAvailable<A>(_:)(v17, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  swift_beginAccess(v1 + 24, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
  if (!Strong
    || (v14[0] = Strong,
        v4 = sub_E710(0, &qword_3D4020, UIResponder_ptr),
        v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8CD8),
        (swift_dynamicCast(&v11, v14, v4, v5, 6) & 1) == 0))
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    goto LABEL_7;
  }
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_7:
    sub_D1D4((uint64_t)v17, (uint64_t *)&unk_3D30E0);
    return sub_D1D4((uint64_t)&v11, &qword_3D8CD0);
  }
  sub_1B738(&v11, (uint64_t)v14);
  v6 = v15;
  v7 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  sub_D184((uint64_t)v17, (uint64_t)&v11, (uint64_t *)&unk_3D30E0);
  if (*((_QWORD *)&v12 + 1) == 1)
  {
    sub_D1D4((uint64_t)&v11, (uint64_t *)&unk_3D30E0);
    memset(v9, 0, sizeof(v9));
  }
  else
  {
    sub_D184((uint64_t)&v11, (uint64_t)v9, &qword_3D1A70);
    sub_1D628((uint64_t)&v11);
  }
  dispatch thunk of SearchPerforming.perform(searchAction:sender:)(a1, v9, v6, v7);
  sub_D1D4((uint64_t)v9, &qword_3D1A70);
  sub_D1D4((uint64_t)v17, (uint64_t *)&unk_3D30E0);
  return __swift_destroy_boxed_opaque_existential_0(v14);
}

void sub_204FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[3];
  void *v25;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for ActionMetricsBehavior(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_E710(0, &qword_3DCBF0, ACAccountStore_ptr);
  v9 = BaseObjectGraph.inject<A>(_:)(aBlock, v8, v8);
  v10 = (void *)aBlock[0];
  if ((OpenExternalAppAction.requiresSignedInUser.getter(v9) & 1) != 0
    && (v11 = objc_msgSend(v10, "ams_activeiTunesAccount"), v11, !v11))
  {
    v19 = type metadata accessor for AlertAction(0);
    v20 = static AlertAction.alertAuthenticationActionAccountCreationEnabled.getter();
    v25 = (void *)v19;
    v26 = sub_239FC(&qword_3DCBF8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AlertAction, (uint64_t)&protocol conformance descriptor for Action);
    aBlock[0] = v20;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ActionMetricsBehavior.notProcessed(_:), v4);
    v21 = type metadata accessor for FlowActionRunner();
    v22 = sub_239FC(&qword_3D31F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
    v23 = ActionRunner.perform(_:withMetrics:asPartOf:)(aBlock, v7, a2, v21, v22);
    swift_release(v23);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_0(aBlock);
  }
  else
  {
    v12 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (v12)
    {
      v13 = v12;
      OpenExternalAppAction.bundleId.getter();
      v15 = v14;
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      v26 = (uint64_t)sub_20AA7C;
      v27 = a1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2071F8;
      v25 = &block_descriptor_49;
      v17 = _Block_copy(aBlock);
      v18 = v27;
      swift_retain(a1);
      objc_msgSend(v13, "openApplicationWithBundleIdentifier:usingConfiguration:completionHandler:", v16, 0, v17, swift_release(v18).n128_f64[0]);
      _Block_release(v17);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_20526C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char *v30;
  __n128 v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  __int128 *v49;
  void (*v50)(char *, char *, uint64_t);
  void *v51;
  void *v52;
  char *v53;
  __n128 v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  __n128 v72;
  void *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  char *v77;
  __n128 v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  id v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[5];
  _QWORD v100[6];

  v91 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v3);
  v5 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v87 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = v8;
  __chkstk_darwin(v9);
  v90 = (char *)&v84 - v10;
  v11 = type metadata accessor for ActionMetricsBehavior(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v92 = *(_QWORD *)(v15 - 8);
  v93 = v15;
  __chkstk_darwin(v15);
  v88 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v84 = (char *)&v84 - v18;
  __chkstk_darwin(v19);
  v85 = (char *)&v84 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v84 - v22;
  v24 = sub_E710(0, &qword_3DCBF0, ACAccountStore_ptr);
  BaseObjectGraph.inject<A>(_:)(v100, v24, v24);
  v25 = (void *)v100[0];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  BaseObjectGraph.inject<A>(_:)(v100, v26, v26);
  v27 = type metadata accessor for OAuthController(0);
  BaseObjectGraph.inject<A>(_:)(v99, v27, v27);
  v94 = v99[0];
  BaseObjectGraph.injectIfAvailable<A>(_:)(v99, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  v95 = v25;
  v28 = objc_msgSend(v25, "ams_activeiTunesAccount");

  if (v28)
  {
    v29 = v91;
    OAuthAction.authorizationURL.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_D1D4((uint64_t)v5, (uint64_t *)&unk_3D2D70);
      sub_E710(0, &qword_3D3810, OS_os_log_ptr);
      v30 = v88;
      v32 = static OS_os_log.purchases.getter(v31);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.error.getter(v33);
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_0, v33, v34, "Unable to get authorizationURL from OAuthAction.", v35, 2u);
        swift_slowDealloc(v35, -1, -1);
      }

      swift_release(v94);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v30, v93);
    }
    else
    {
      v50 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v50(v90, v5, v6);
      sub_207258((uint64_t)v99);
      if (v51)
      {
        v52 = v51;
        sub_E710(0, &qword_3D3810, OS_os_log_ptr);
        v89 = v52;
        v53 = v85;
        v55 = static OS_os_log.purchases.getter(v54);
        v56 = Logger.logObject.getter(v55);
        v57 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v56, v57))
        {
          v58 = v29;
          v59 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v59 = 0;
          _os_log_impl(&dword_0, v56, v57, "User is signed-in and authorizationURL is present. Starting OAuthSession.", v59, 2u);
          v60 = v59;
          v29 = v58;
          swift_slowDealloc(v60, -1, -1);
        }

        v61 = (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v53, v93);
        v92 = OAuthAction.oAuthAdamId.getter(v61);
        v63 = v62;
        v64 = v87;
        v65 = v90;
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v87, v90, v6);
        sub_1D5D4((uint64_t)v100, (uint64_t)&v96);
        v66 = *(unsigned __int8 *)(v7 + 80);
        v67 = v29;
        v68 = (v66 + 16) & ~v66;
        v69 = (v86 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
        v93 = v7;
        v70 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
        v71 = swift_allocObject(&unk_38B4E0, v70 + 40, v66 | 7);
        v50((char *)(v71 + v68), v64, v6);
        *(_QWORD *)(v71 + v69) = v67;
        sub_1B738(&v96, v71 + v70);
        v72 = swift_retain(v67);
        v73 = v89;
        v74 = v94;
        OAuthController.authenticateThirdPartySubscription(authorizationURL:oAuthAdamId:window:completion:)(v65, v92, v63, v89, sub_20AB28, v71, v72);

        swift_bridgeObjectRelease(v63);
        swift_release(v71);

        swift_release(v74);
        v75 = *(void (**)(char *, uint64_t))(v93 + 8);
        v76 = v65;
      }
      else
      {
        sub_E710(0, &qword_3D3810, OS_os_log_ptr);
        v77 = v84;
        v79 = static OS_os_log.purchases.getter(v78);
        v80 = Logger.logObject.getter(v79);
        v81 = static os_log_type_t.error.getter(v80);
        if (os_log_type_enabled(v80, v81))
        {
          v82 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v82 = 0;
          _os_log_impl(&dword_0, v80, v81, "Could not provide a UIWindow for OAuth. Unable to present the ASWebAuthenticationSession web view.", v82, 2u);
          swift_slowDealloc(v82, -1, -1);
        }

        swift_release(v94);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v77, v93);
        v75 = *(void (**)(char *, uint64_t))(v7 + 8);
        v76 = v90;
      }
      v75(v76, v6);
    }
    sub_D1D4((uint64_t)v99, (uint64_t *)&unk_3D30E0);
    v49 = (__int128 *)v100;
  }
  else
  {
    v36 = v14;
    v37 = v12;
    sub_E710(0, &qword_3D3810, OS_os_log_ptr);
    v39 = static OS_os_log.purchases.getter(v38);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_0, v40, v41, "User is not signed-in. Presenting AMS Auth sheet and not starting OAuth.", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v92 + 8))(v23, v93);
    v43 = type metadata accessor for AlertAction(0);
    v44 = static AlertAction.alertAuthenticationActionAccountCreationEnabled.getter();
    v97 = v43;
    v98 = sub_239FC(&qword_3DCBF8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AlertAction, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)&v96 = v44;
    (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, enum case for ActionMetricsBehavior.notProcessed(_:), v11);
    v45 = type metadata accessor for FlowActionRunner();
    v46 = sub_239FC(&qword_3D31F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
    v47 = ActionRunner.perform(_:withMetrics:asPartOf:)(&v96, v36, a2, v45, v46);

    swift_release(v94);
    v48 = swift_release(v47);
    (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v36, v11, v48);
    sub_D1D4((uint64_t)v99, (uint64_t *)&unk_3D30E0);
    __swift_destroy_boxed_opaque_existential_0(v100);
    v49 = &v96;
  }
  return __swift_destroy_boxed_opaque_existential_0(v49);
}

double RootActionRunner.processMetrics(of:using:asPartOf:)(_QWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *v13;
  uint64_t v14;
  double result;
  uint64_t v16;
  unint64_t *v17;
  _BYTE v18[16];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4328);
  __chkstk_darwin(v6);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for EpisodePlayState(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_209D38(a1, a2, a3);
  v14 = (uint64_t)v13;
  if (v13[2])
  {
    sub_203C84(a1, (uint64_t)v8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_D1D4((uint64_t)v8, &qword_3D4328);
    }
    else
    {
      v16 = sub_AF608((uint64_t)v8, (uint64_t)v12);
      __chkstk_darwin(v16);
      *(_QWORD *)&v18[-16] = v12;
      v17 = sub_1876E0((void (*)(uint64_t))sub_20A974, (uint64_t)&v18[-32], v14, (uint64_t)v18);
      swift_bridgeObjectRelease(v14);
      sub_AEEF0((uint64_t)v12);
      v14 = (uint64_t)v17;
    }
    sub_20A4B8(v14, (uint64_t)a2);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  return result;
}

uint64_t sub_205C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_BYTE *, _QWORD);
  _QWORD v15[4];
  _BYTE v16[32];

  v4 = type metadata accessor for MetricsData(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  v6 = static MetricsField<>.actionType.getter(v5);
  v8 = v7;
  v10 = EpisodePlayState.playPauseState.getter(v9);
  v12 = v11;
  v13 = (uint64_t (*)(_BYTE *, _QWORD))MetricsData.fields.modify(v16);
  v15[3] = &type metadata for String;
  v15[0] = v10;
  v15[1] = v12;
  sub_207B4C((uint64_t)v15, v6, v8);
  return v13(v16, 0);
}

uint64_t sub_205CD4(_BYTE *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83E8);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PresentationSource(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    v32 = a3;
    v33 = a2;
    v18 = static Logger.following.getter(v15);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      v31 = v12;
      v22 = v21;
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "Unsubscribe unsuccessful", v21, 2u);
      v23 = v22;
      v12 = v31;
      swift_slowDealloc(v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    a3 = v32;
  }
  LibraryPodcastUnfollowAction.source.getter(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_D1D4((uint64_t)v8, &qword_3D83E8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  v25 = LibraryPodcastUnfollowAction.podcastUuid.getter();
  v27 = v26;
  v28 = (void *)dispatch thunk of LibraryRemovalControllerProtocol.removalOptionsAfterUnfollow(uuid:)(v25);
  v29 = swift_bridgeObjectRelease(v27);
  if (v28)
  {
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v28, 1, 15, 1, 0, 0);

  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v29);
}

uint64_t sub_205F24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  _BYTE v21[8];
  uint64_t v22;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.following.getter(v4);
  swift_errorRetain(a1);
  v7 = swift_errorRetain(a1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    v18 = v2;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc(32, -1);
    v22 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_getErrorValue(a1, v21, v20);
    v13 = Error.localizedDescription.getter(v20[1], v20[2]);
    v15 = v14;
    v19 = sub_37E78(v13, v14, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v8, v9, "%s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v18);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

void sub_20610C(uint64_t a1, uint8_t *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void *v20;
  __n128 v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __n128 v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint8_t *v57;
  uint64_t v58;
  _QWORD v59[2];
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v6);
  v8 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v59 - v14;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)v59 - v18;
  if (a1)
  {
    v20 = (void *)_convertErrorToNSError(_:)(a1);
    sub_E710(0, &qword_3D3810, OS_os_log_ptr);
    static OS_os_log.purchases.getter(v21);
    v22 = v20;
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v62 = v10;
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v61 = swift_slowAlloc(32, -1);
      v65 = v61;
      *(_DWORD *)v25 = 136315138;
      v60 = v25 + 4;
      v26 = objc_msgSend(v22, "localizedDescription");
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v63 = v9;
      v29 = v28;

      v64 = sub_37E78(v27, v29, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65);

      swift_bridgeObjectRelease(v29);
      _os_log_impl(&dword_0, v23, v24, "ChannelOfferAction: purchase failed with error: %s", v25, 0xCu);
      v30 = v61;
      swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v62 + 8))(v19, v63);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    }
    type metadata accessor for ChannelOfferAction(0);
    CompletableAction.performCompletionHandlers(success:)(0);

  }
  else
  {
    v31 = ChannelOfferAction.showAdamId.getter(v17);
    if ((v32 & 1) == 0)
    {
      v61 = v31;
      v63 = v9;
      sub_E710(0, &qword_3D3810, OS_os_log_ptr);
      v34 = static OS_os_log.purchases.getter(v33);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = swift_slowAlloc(12, -1);
        v60 = a2;
        v38 = (uint8_t *)v37;
        v39 = swift_slowAlloc(32, -1);
        v62 = v10;
        *(_DWORD *)v38 = 136315138;
        v59[1] = v38 + 4;
        v64 = v61;
        v65 = v39;
        v40 = sub_5AE80();
        v41 = BinaryInteger.description.getter(&type metadata for UInt64, v40);
        v43 = v42;
        v64 = sub_37E78(v41, v42, &v65);
        v10 = v62;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65);
        swift_bridgeObjectRelease(v43);
        _os_log_impl(&dword_0, v35, v36, "Following show %s for new subscription.", v38, 0xCu);
        swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v39, -1, -1);
        swift_slowDealloc(v38, -1, -1);

        v44 = v15;
        v45 = v61;
        v9 = v63;
        (*(void (**)(char *, uint64_t))(v10 + 8))(v44, v63);
      }
      else
      {

        v9 = v63;
        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v63);
        v45 = v61;
      }
      v46 = v10;
      v47 = a3[3];
      v48 = a3[4];
      __swift_project_boxed_opaque_existential_1(a3, v47);
      v49 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v8, 1, 1, v49);
      v58 = v48;
      v10 = v46;
      v50 = LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)(v8, v45, 0, 0, 0, 0, 1, v47, v58);
      swift_release(v50);
      sub_D1D4((uint64_t)v8, (uint64_t *)&unk_3D2D70);
    }
    sub_E710(0, &qword_3D3810, OS_os_log_ptr);
    v52 = static OS_os_log.purchases.getter(v51);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = v10;
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_0, v53, v54, "Successfully purchased item.", v56, 2u);
      v57 = v56;
      v10 = v55;
      swift_slowDealloc(v57, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    type metadata accessor for ChannelOfferAction(0);
    CompletableAction.performCompletionHandlers(success:)(1);
  }
}

uint64_t sub_2066B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint8_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[5];

  v43 = a4;
  v44 = a3;
  v5 = type metadata accessor for ActionMetricsBehavior(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v45 = *(_QWORD *)(v12 - 8);
  v46 = v12;
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.navigation.getter(v13);
  v16 = a2;
  v17 = swift_retain_n(a2, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v39 = v8;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc(32, -1);
    v41 = v5;
    v38 = v22;
    v48[0] = v22;
    v40 = v6;
    *(_DWORD *)v21 = 136315138;
    v37 = v21 + 4;
    v23 = HttpAction.url.getter(v22);
    v24 = URL.absoluteString.getter(v23);
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v42);
    v47 = sub_37E78(v24, v26, v48);
    v6 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48);
    swift_release_n(v16, 2);
    swift_bridgeObjectRelease(v26);
    _os_log_impl(&dword_0, v18, v19, "Completed %s", v21, 0xCu);
    v27 = v38;
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    v5 = v41;
    swift_slowDealloc(v27, -1, -1);
    v28 = v21;
    v8 = v39;
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

    swift_release_n(v16, 2);
  }
  v29 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v15, v46);
  result = HttpAction.successAction.getter(v29);
  if (result)
  {
    v31 = result;
    v48[3] = type metadata accessor for Action(0);
    v48[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v48[0] = v31;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionMetricsBehavior.fromAction(_:), v5);
    v32 = type metadata accessor for RootActionRunner();
    v34 = sub_239FC(&qword_3DCC00, v33, (uint64_t (*)(uint64_t))type metadata accessor for RootActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
    swift_retain(v31);
    v35 = ActionRunner.perform(_:withMetrics:asPartOf:)(v48, v8, v43, v32, v34);
    swift_release(v31);
    v36 = swift_release(v35);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v36);
    return __swift_destroy_boxed_opaque_existential_0(v48);
  }
  return result;
}

uint64_t sub_2069FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[3];
  char v55[8];
  uint64_t v56;
  uint64_t v57[6];

  v51 = a4;
  v52 = a3;
  v6 = type metadata accessor for ActionMetricsBehavior(0);
  v53 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v50 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.navigation.getter(v14);
  swift_retain(a2);
  swift_errorRetain(a1);
  swift_retain(a2);
  v17 = swift_errorRetain(a1);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.error.getter(v18);
  v49 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v47 = v13;
    v21 = v20;
    v22 = swift_slowAlloc(64, -1);
    v45 = v22;
    v57[0] = v22;
    *(_DWORD *)v21 = 136315394;
    v46 = v12;
    v44 = v18;
    v23 = HttpAction.url.getter(v22);
    v24 = URL.absoluteString.getter(v23);
    v48 = v6;
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v56 = sub_37E78(v24, v26, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57);
    swift_release_n(a2, 2);
    v27 = v26;
    v6 = v48;
    swift_bridgeObjectRelease(v27);
    *(_WORD *)(v21 + 12) = 2080;
    swift_getErrorValue(a1, v55, v54);
    v28 = Error.localizedDescription.getter(v54[1], v54[2]);
    v30 = v29;
    v56 = sub_37E78(v28, v29, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57);
    swift_bridgeObjectRelease(v30);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    v31 = v44;
    _os_log_impl(&dword_0, v44, (os_log_type_t)v49, "Could not complete %s, reason: %s", (uint8_t *)v21, 0x16u);
    v32 = v45;
    swift_arrayDestroy(v45, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    v33 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v16, v46);
  }
  else
  {
    swift_release_n(a2, 2);
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    v33 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  result = HttpAction.failureAction.getter(v33);
  if (result)
  {
    v35 = result;
    v57[3] = type metadata accessor for Action(0);
    v57[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v57[0] = v35;
    v36 = v53;
    v37 = v50;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v50, enum case for ActionMetricsBehavior.fromAction(_:), v6);
    v38 = type metadata accessor for RootActionRunner();
    v40 = sub_239FC(&qword_3DCC00, v39, (uint64_t (*)(uint64_t))type metadata accessor for RootActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
    swift_retain(v35);
    v41 = ActionRunner.perform(_:withMetrics:asPartOf:)(v57, v37, v51, v38, v40);
    swift_release(v35);
    v42 = swift_release(v41);
    (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v37, v6, v42);
    return __swift_destroy_boxed_opaque_existential_0(v57);
  }
  return result;
}

uint64_t sub_206DE4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t (*v23)(char *, uint64_t);
  char *v24;
  __n128 v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  char v40[8];
  uint64_t v41;
  uint64_t v42;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - v11;
  if (a2 && (a1 & 1) == 0)
  {
    sub_E710(0, &qword_3D3810, OS_os_log_ptr);
    swift_errorRetain(a2);
    static OS_os_log.purchases.getter(v25);
    swift_errorRetain(a2);
    swift_retain(a3);
    swift_errorRetain(a2);
    swift_retain(a3);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc(22, -1);
      v37 = swift_slowAlloc(64, -1);
      v42 = v37;
      *(_DWORD *)v29 = 136315394;
      v30 = OpenExternalAppAction.bundleId.getter();
      v32 = v31;
      v41 = sub_37E78(v30, v31, &v42);
      v38 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
      swift_release_n(a3, 2);
      swift_bridgeObjectRelease(v32);
      *(_WORD *)(v29 + 12) = 2080;
      swift_getErrorValue(a2, v40, v39);
      v33 = Error.localizedDescription.getter(v39[1], v39[2]);
      v35 = v34;
      v41 = sub_37E78(v33, v34, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
      swift_bridgeObjectRelease(v35);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl(&dword_0, v27, v28, "Failed to open application with bundleId: %s with error: %s", (uint8_t *)v29, 0x16u);
      v36 = v37;
      swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v29, -1, -1);

      swift_errorRelease(a2);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v38);
    }
    swift_errorRelease(a2);
    swift_release_n(a3, 2);
    swift_errorRelease(a2);
    swift_errorRelease(a2);

    v23 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v24 = v12;
  }
  else
  {
    sub_E710(0, &qword_3D3810, OS_os_log_ptr);
    static OS_os_log.purchases.getter(v13);
    v14 = swift_retain_n(a3, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v42 = v18;
      v38 = v6;
      *(_DWORD *)v17 = 136315138;
      v19 = OpenExternalAppAction.bundleId.getter();
      v21 = v20;
      v41 = sub_37E78(v19, v20, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
      swift_release_n(a3, 2);
      swift_bridgeObjectRelease(v21);
      _os_log_impl(&dword_0, v15, v16, "Opened external application with bundleId: %s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v38);
    }

    swift_release_n(a3, 2);
    v23 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v24 = v9;
  }
  return v23(v24, v6);
}

void sub_2071F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_207258(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  id v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _BYTE v28[24];
  uint64_t v29;
  id v30;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v28[-v7 - 8];
  sub_D184(a1, (uint64_t)v28, (uint64_t *)&unk_3D30E0);
  if (v29 == 1)
  {
    sub_D1D4((uint64_t)v28, (uint64_t *)&unk_3D30E0);
  }
  else
  {
    v9 = v30;
    v10 = v30;
    sub_1D628((uint64_t)v28);
    if (v9)
    {
      v11 = objc_msgSend(v10, "window");

      if (v11)
      {
        sub_E710(0, &qword_3D3810, OS_os_log_ptr);
        v13 = static OS_os_log.purchases.getter(v12);
        v14 = Logger.logObject.getter(v13);
        v15 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v16 = 0;
          _os_log_impl(&dword_0, v14, v15, "Successfully got the view's window for the OAuthSession.", v16, 2u);
          swift_slowDealloc(v16, -1, -1);
        }

        (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
        return;
      }
    }
  }
  sub_E710(0, &qword_3D3810, OS_os_log_ptr);
  v18 = static OS_os_log.purchases.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.error.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "Unable to get the view's window for the OAuthSession. This is bad and the OAuthSession may fail.", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
  v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v23 = objc_msgSend(v22, "windows");

  v24 = sub_E710(0, &qword_3D7CD0, UIWindow_ptr);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  if ((v25 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v25);
    goto LABEL_13;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFF8)))
  {
    v26 = *(id *)(v25 + 32);
LABEL_13:
    swift_bridgeObjectRelease(v25);
    return;
  }
  __break(1u);
}

void sub_207550(char a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t *v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Logger(0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v46 = v18;
    v47 = v17;
    sub_E710(0, &qword_3D3810, OS_os_log_ptr);
    swift_errorRetain(a2);
    static OS_os_log.purchases.getter(v22);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
    swift_errorRetain(a2);
    v23 = swift_errorRetain(a2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(22, -1);
      v44 = (uint64_t *)swift_slowAlloc(8, -1);
      v45 = swift_slowAlloc(32, -1);
      v49 = v45;
      *(_DWORD *)v26 = 136315394;
      v43 = v24;
      v27 = URL.absoluteString.getter();
      v29 = v28;
      v48 = sub_37E78(v27, v28, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
      v30 = swift_bridgeObjectRelease(v29);
      (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v30);
      *(_WORD *)(v26 + 12) = 2112;
      v31 = _convertErrorToNSError(_:)(a2);
      v48 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
      v32 = v44;
      *v44 = v31;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      v33 = v43;
      _os_log_impl(&dword_0, v43, v25, "OAuthSession Authentication failed for authorizationURL: %s with error: %@", (uint8_t *)v26, 0x16u);
      v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F50);
      swift_arrayDestroy(v32, 1, v34);
      swift_slowDealloc(v32, -1, -1);
      v35 = v45;
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v47);
  }
  else if ((a1 & 1) != 0)
  {
    v36 = OAuthAction.showAdamId.getter(v19);
    if ((v37 & 1) == 0)
    {
      v38 = v36;
      v39 = a5[3];
      v40 = a5[4];
      __swift_project_boxed_opaque_existential_1(a5, v39);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
      v41 = dispatch thunk of LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)(v11, v38, 0, 0, 0, 0, 0, v39, v40);
      swift_release(v41);
      sub_D1D4((uint64_t)v11, (uint64_t *)&unk_3D2D70);
    }
  }
}

uint64_t RootActionRunner.__allocating_init(target:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = swift_allocObject(v1, 32, 7);
  *(_QWORD *)(v3 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ModelViewOverflowTransitioning(0)), "init");
  v4 = swift_unknownObjectWeakInit(v3 + 24, 0);
  swift_beginAccess(v4, v6, 1, 0);
  swift_unknownObjectWeakAssign(v3 + 24, a1);

  return v3;
}

uint64_t RootActionRunner.init(target:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  *(_QWORD *)(v1 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ModelViewOverflowTransitioning(0)), "init");
  v3 = swift_unknownObjectWeakInit(v1 + 24, 0);
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v1 + 24, a1);

  return v1;
}

uint64_t RootActionRunner.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 24);
  return v0;
}

uint64_t RootActionRunner.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 24);
  return swift_deallocClassInstance(v0, 32, 7);
}

double sub_207A5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_1D358(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_207D50();
      v12 = v15;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    sub_1D65C((_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v9), a3);
    sub_B7D28(v9, v12);
    v13 = *v4;
    *v4 = v12;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_207B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1D65C((_OWORD *)a1, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    *v3 = 0x8000000000000000;
    sub_207C20(v10, a2, a3, isUniquelyReferenced_nonNull_native);
    v8 = *v3;
    *v4 = v9;
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_D1D4(a1, &qword_3D1A70);
    sub_207A5C(a2, a3, v10);
    swift_bridgeObjectRelease(a3);
    sub_D1D4((uint64_t)v10, &qword_3D1A70);
  }
}

void sub_207C20(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  char v5;
  _QWORD **v6;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  _QWORD *v20;

  v6 = (_QWORD **)v4;
  v11 = (_QWORD *)*v4;
  v13 = sub_1D358(a2, a3);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = v12;
  if (v11[3] >= v16)
  {
    if ((a4 & 1) != 0)
    {
      v19 = *v6;
      if ((v12 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_15FEAC(v13, a2, a3, a1, v19);
      swift_bridgeObjectRetain(a3);
      return;
    }
LABEL_10:
    sub_207D50();
    v19 = *v6;
    if ((v5 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
  sub_207F44(v16, a4 & 1);
  v17 = sub_1D358(a2, a3);
  if ((v5 & 1) == (v18 & 1))
  {
    v13 = v17;
    v19 = *v6;
    if ((v5 & 1) == 0)
      goto LABEL_11;
LABEL_8:
    v20 = (_QWORD *)(v19[7] + 32 * v13);
    __swift_destroy_boxed_opaque_existential_0(v20);
    sub_1D65C(a1, v20);
    return;
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_207D50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5570);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_29:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v13)
      goto LABEL_27;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_27;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_27;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
        {
          v9 = v22 + 3;
          if (v22 + 3 >= v13)
          {
LABEL_27:
            swift_release(v2);
            v1 = v25;
            goto LABEL_29;
          }
          v23 = *(_QWORD *)(v6 + 8 * v9);
          v24 = v22 + 3;
          if (!v23)
            break;
        }
      }
    }
LABEL_26:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1D66C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1D65C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain(v18);
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_27;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_26;
  }
LABEL_31:
  __break(1u);
}

void sub_207F44(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t i;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  int64_t v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5570);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v34 = v3;
    v35 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v18 >= v36)
          goto LABEL_38;
        v19 = v35[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v36)
            goto LABEL_38;
          v19 = v35[v13];
          if (!v19)
          {
            v13 = v18 + 2;
            if (v18 + 2 >= v36)
              goto LABEL_38;
            v19 = v35[v13];
            if (!v19)
            {
              v13 = v18 + 3;
              if (v18 + 3 >= v36)
              {
LABEL_38:
                swift_release(v5);
                v3 = v34;
                if ((a2 & 1) != 0)
                {
                  v33 = 1 << *(_BYTE *)(v5 + 32);
                  if (v33 >= 64)
                    bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  else
                    *v35 = -1 << v33;
                  *(_QWORD *)(v5 + 16) = 0;
                }
                break;
              }
              v19 = v35[v13];
              for (i = v18 + 3; !v19; ++i)
              {
                v13 = i + 1;
                if (__OFADD__(i, 1))
                  goto LABEL_45;
                if (v13 >= v36)
                  goto LABEL_38;
                v19 = v35[v13];
              }
            }
          }
        }
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1D65C(v24, v38);
      }
      else
      {
        sub_1D66C((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain(v22);
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_1D65C(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

uint64_t sub_20826C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v2);
  v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ShowOffer(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  v10 = BaseObjectGraph.inject<A>(_:)(v35, v9, v9);
  PodcastOfferAction.podcastOffer.getter(v10);
  v11 = v36;
  v33 = v37;
  v34 = __swift_project_boxed_opaque_existential_1(v35, v36);
  v12 = ShowOffer.feedUrl.getter();
  v32 = ShowOffer.adamId.getter(v12);
  v13 = ShowOffer.dzcPageLocation.getter();
  v15 = v14;
  v16 = ShowOffer.contentRating.getter();
  if (v16 == 2)
  {
    v17 = 0;
  }
  else
  {
    v29[1] = a1;
    v30 = v6;
    v31 = v5;
    v18 = ContentRating.rawValue.getter(v16 & 1);
    v20 = v19;
    v17 = 1;
    v21 = ContentRating.rawValue.getter(1);
    v23 = v18 == v21 && v20 == v22;
    v24 = v20;
    if (!v23)
    {
      v25 = v22;
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
      v24 = v25;
    }
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v24);
    v6 = v30;
    v5 = v31;
  }
  v26 = dispatch thunk of PodcastOfferAction.displaySuccessHUD.getter();
  v27 = dispatch thunk of LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)(v4, v32, 0, v13, v15, v17 & 1, v26 & 1, v11, v33);
  swift_release(v27);
  swift_bridgeObjectRelease(v15);
  sub_D1D4((uint64_t)v4, (uint64_t *)&unk_3D2D70);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return __swift_destroy_boxed_opaque_existential_0(v35);
}

uint64_t sub_208478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[5];
  __int128 v22;
  __int128 v23;
  _QWORD v24[5];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v0 = type metadata accessor for EpisodeDownloadState(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (_QWORD *)((char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCC08);
  BaseObjectGraph.inject<A>(_:)(v25, v4, v4);
  v5 = v25[0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  BaseObjectGraph.inject<A>(_:)(v25, v6, v6);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v24, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  sub_D184((uint64_t)v24, (uint64_t)v21, (uint64_t *)&unk_3D30E0);
  if (v21[3] == 1)
  {
    sub_D1D4((uint64_t)v21, (uint64_t *)&unk_3D30E0);
    v22 = 0u;
    v23 = 0u;
LABEL_7:
    swift_release(v5);
    sub_D1D4((uint64_t)&v22, &qword_3D1A70);
LABEL_8:
    sub_D1D4((uint64_t)v24, (uint64_t *)&unk_3D30E0);
    return __swift_destroy_boxed_opaque_existential_0(v25);
  }
  sub_D184((uint64_t)v21, (uint64_t)&v22, &qword_3D1A70);
  sub_1D628((uint64_t)v21);
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_7;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCC10);
  if ((swift_dynamicCast(v21, &v22, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
  {
    swift_release(v5);
    goto LABEL_8;
  }
  v9 = v21[0];
  dispatch thunk of EpisodeStateMachine.currentState.getter(v8);
  v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 88))(v3, v0);
  if (v10 == enum case for EpisodeDownloadState.downloadable(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v1 + 96))(v3, v0);
    v11 = *v3;
    v12 = v3[1];
    v13 = v26;
    v14 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    dispatch thunk of LibraryActionControllerProtocol.download(episode:isFromSaving:)(v11, v12, 0, v13, v14);
    swift_bridgeObjectRelease(v12);
LABEL_13:
    swift_release(v5);
    swift_release(v9);
    goto LABEL_8;
  }
  if (v10 == enum case for EpisodeDownloadState.downloading(_:))
  {
    v16 = v26;
    v17 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    v18 = EpisodeOfferAction.contentId.getter();
    dispatch thunk of LibraryActionControllerProtocol.cancel(download:)(v18, v16, v17);
    goto LABEL_13;
  }
  if (v10 == enum case for EpisodeDownloadState.unknown(_:))
  {
    sub_D1D4((uint64_t)v24, (uint64_t *)&unk_3D30E0);
    swift_release(v5);
    swift_release(v9);
  }
  else
  {
    v19 = EpisodeOfferAction.contentId.getter();
    dispatch thunk of EpisodeStateController.refreshState(for:)(v19, 0, 0);
    swift_release(v5);
    swift_release(v9);
    sub_D1D4((uint64_t)v24, (uint64_t *)&unk_3D30E0);
    (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  }
  return __swift_destroy_boxed_opaque_existential_0(v25);
}

uint64_t sub_208760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[5];
  __int128 v24;
  __int128 v25;
  _QWORD v26[5];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v0 = type metadata accessor for EpisodeDownloadState(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v23[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCC08);
  BaseObjectGraph.inject<A>(_:)(v27, v4, v4);
  v5 = v27[0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  BaseObjectGraph.inject<A>(_:)(v27, v6, v6);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v26, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  sub_D184((uint64_t)v26, (uint64_t)v23, (uint64_t *)&unk_3D30E0);
  if (v23[3] == 1)
  {
    sub_D1D4((uint64_t)v23, (uint64_t *)&unk_3D30E0);
    v24 = 0u;
    v25 = 0u;
LABEL_7:
    swift_release(v5);
    sub_D1D4((uint64_t)&v24, &qword_3D1A70);
LABEL_8:
    sub_D1D4((uint64_t)v26, (uint64_t *)&unk_3D30E0);
    return __swift_destroy_boxed_opaque_existential_0(v27);
  }
  sub_D184((uint64_t)v23, (uint64_t)&v24, &qword_3D1A70);
  sub_1D628((uint64_t)v23);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_7;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCC10);
  if ((swift_dynamicCast(v23, &v24, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
  {
    swift_release(v5);
    goto LABEL_8;
  }
  v9 = v23[0];
  dispatch thunk of EpisodeStateMachine.currentState.getter(v8);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v10 == enum case for EpisodeDownloadState.downloadable(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    v11 = v28;
    v12 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v13 = LibraryEpisodeOfferAction.episodeUuid.getter();
    v15 = v14;
    dispatch thunk of LibraryActionControllerProtocol.download(episode:isFromSaving:)(v13, v14, 0, v11, v12);
LABEL_13:
    swift_bridgeObjectRelease(v15);
    swift_release(v5);
    swift_release(v9);
    goto LABEL_8;
  }
  if (v10 == enum case for EpisodeDownloadState.downloading(_:))
  {
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v17 = LibraryEpisodeOfferAction.episodeUuid.getter();
    v15 = v18;
    dispatch thunk of LibraryActionControllerProtocol.cancel(download:)(v17);
    goto LABEL_13;
  }
  if (v10 == enum case for EpisodeDownloadState.unknown(_:))
  {
    sub_D1D4((uint64_t)v26, (uint64_t *)&unk_3D30E0);
    swift_release(v5);
    swift_release(v9);
  }
  else
  {
    v19 = LibraryEpisodeOfferAction.episodeUuid.getter();
    v21 = v20;
    dispatch thunk of EpisodeStateController.refreshState(for:)(v19, v20, 1);
    swift_bridgeObjectRelease(v21);
    swift_release(v5);
    swift_release(v9);
    sub_D1D4((uint64_t)v26, (uint64_t *)&unk_3D30E0);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return __swift_destroy_boxed_opaque_existential_0(v27);
}

uint64_t sub_208A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v12[5];
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  BaseObjectGraph.inject<A>(_:)(v13, v0, v0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v12, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  sub_D184((uint64_t)v12, (uint64_t)v18, (uint64_t *)&unk_3D30E0);
  if (v20 == 1)
  {
    sub_D1D4((uint64_t)v18, (uint64_t *)&unk_3D30E0);
    v16 = 0u;
    v17 = 0u;
LABEL_10:
    sub_D1D4((uint64_t)&v16, &qword_3D1A70);
    goto LABEL_11;
  }
  sub_D184((uint64_t)v18, (uint64_t)&v16, &qword_3D1A70);
  sub_1D628((uint64_t)v18);
  if (!*((_QWORD *)&v17 + 1))
    goto LABEL_10;
  v1 = type metadata accessor for PodcastStateMachine(0);
  if ((swift_dynamicCast(v18, &v16, (char *)&type metadata for Any + 8, v1, 6) & 1) == 0)
  {
LABEL_11:
    sub_D1D4((uint64_t)v12, (uint64_t *)&unk_3D30E0);
    return __swift_destroy_boxed_opaque_existential_0(v13);
  }
  v2 = v18[0];
  dispatch thunk of PodcastStateMachine.currentState.getter(&v16);
  sub_20A9B0((uint64_t)&v16, (uint64_t)v18);
  if (!v19)
    goto LABEL_13;
  if (v19 == 1)
  {
    swift_release(v2);
    goto LABEL_11;
  }
  if (v19 == 2 || (v3 = v18[0], sub_20A9EC((uint64_t)&v16), (v3 & 1) == 0))
  {
LABEL_13:
    v5 = v14;
    v6 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    v7 = LibraryPodcastOfferAction.podcastUuid.getter();
    v9 = v8;
    v10 = dispatch thunk of PodcastOfferAction.displaySuccessHUD.getter();
    v11 = dispatch thunk of LibraryActionControllerProtocol.subscribe(podcast:displaySuccessHUD:)(v7, v9, v10 & 1, v5, v6);
    swift_release(v2);
    swift_release(v11);
    swift_bridgeObjectRelease(v9);
    goto LABEL_11;
  }
  sub_D1D4((uint64_t)v12, (uint64_t *)&unk_3D30E0);
  swift_release(v2);
  return __swift_destroy_boxed_opaque_existential_0(v13);
}

uint64_t sub_208C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[5];
  _QWORD v19[5];
  _QWORD v20[4];
  __int128 v21;
  __int128 v22;
  _QWORD v23[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  BaseObjectGraph.inject<A>(_:)(v20, v2, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCC18);
  BaseObjectGraph.inject<A>(_:)(v19, v3, v3);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v18, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  sub_D184((uint64_t)v18, (uint64_t)v23, (uint64_t *)&unk_3D30E0);
  if (v23[3] == 1)
  {
    sub_D1D4((uint64_t)v23, (uint64_t *)&unk_3D30E0);
    v21 = 0u;
    v22 = 0u;
LABEL_8:
    sub_D1D4((uint64_t)&v21, &qword_3D1A70);
    goto LABEL_9;
  }
  sub_D184((uint64_t)v23, (uint64_t)&v21, &qword_3D1A70);
  sub_1D628((uint64_t)v23);
  if (!*((_QWORD *)&v22 + 1))
    goto LABEL_8;
  v4 = type metadata accessor for PodcastStateMachine(0);
  if ((swift_dynamicCast(v23, &v21, (char *)&type metadata for Any + 8, v4, 6) & 1) != 0)
  {
    v5 = v23[0];
    dispatch thunk of PodcastStateMachine.currentState.getter(&v21);
    sub_20A9B0((uint64_t)&v21, (uint64_t)v23);
    if (v23[2] >= 3uLL && LOBYTE(v23[0]) == 1)
    {
      __swift_project_boxed_opaque_existential_1(v20, v20[3]);
      v6 = LibraryPodcastUnfollowAction.podcastUuid.getter();
      v8 = v7;
      v9 = dispatch thunk of LibraryActionControllerProtocol.unsubscribe(podcast:)(v6);
      swift_bridgeObjectRelease(v8);
      sub_1D5D4((uint64_t)v19, (uint64_t)&v15);
      v10 = swift_allocObject(&unk_38B468, 64, 7);
      *(_QWORD *)(v10 + 16) = a1;
      sub_1B738(&v15, v10 + 24);
      v11 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
      v12 = swift_retain(a1);
      v13 = static OS_dispatch_queue.main.getter(v12);
      v16 = v11;
      v17 = &protocol witness table for OS_dispatch_queue;
      *(_QWORD *)&v15 = v13;
      Promise.then(perform:orCatchError:on:)(sub_20AA34, v10, sub_205F24, 0, &v15);
      swift_release(v5);
      swift_release(v9);
      swift_release(v10);
      sub_20A9EC((uint64_t)&v21);
      __swift_destroy_boxed_opaque_existential_0(&v15);
    }
    else
    {
      swift_release(v5);
      sub_20A9EC((uint64_t)&v21);
    }
  }
LABEL_9:
  sub_D1D4((uint64_t)v18, (uint64_t *)&unk_3D30E0);
  __swift_destroy_boxed_opaque_existential_0(v19);
  return __swift_destroy_boxed_opaque_existential_0(v20);
}

void sub_208EC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  char v17;
  __n128 v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  id v48;
  _QWORD v49[5];
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[6];

  v2 = type metadata accessor for PurchaseOptions(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  BaseObjectGraph.inject<A>(_:)(v53, v9, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2128);
  BaseObjectGraph.inject<A>(_:)(v50, v10, v10);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v49, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  sub_E710(0, &qword_3D3810, OS_os_log_ptr);
  static OS_os_log.purchases.getter(v11);
  swift_retain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v13, v14))
    goto LABEL_5;
  v15 = (uint8_t *)swift_slowAlloc(12, -1);
  *(_DWORD *)v15 = 134217984;
  v16 = ChannelOfferAction.channelAdamId.getter();
  if ((v17 & 1) != 0)
  {
    v16 = 0;
  }
  else if (v16 < 0)
  {
    __break(1u);
LABEL_5:

    v18 = swift_release(a1);
    goto LABEL_8;
  }
  *(_QWORD *)&v46 = v16;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, (char *)&v46 + 8);
  swift_release(a1);
  _os_log_impl(&dword_0, v13, v14, "Handling ChannelOfferAction for channel: %lld", v15, 0xCu);
  swift_slowDealloc(v15, -1, -1);

LABEL_8:
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v18);
  sub_D184((uint64_t)v49, (uint64_t)&v46, (uint64_t *)&unk_3D30E0);
  v42 = v2;
  v41 = v3;
  if (v47 == 1)
  {
    sub_D1D4((uint64_t)&v46, (uint64_t *)&unk_3D30E0);
  }
  else
  {
    v19 = v48;
    v20 = v48;
    sub_1D628((uint64_t)&v46);
    if (v19)
    {
      v21 = objc_msgSend(v20, "window");

      if (v21)
        goto LABEL_16;
    }
  }
  v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v23 = objc_msgSend(v22, "delegate");

  if (!v23)
  {
    v27 = 0;
    v29 = 0;
    v21 = 0;
    goto LABEL_20;
  }
  if ((objc_msgSend(v23, "respondsToSelector:", "window") & 1) == 0)
  {
    swift_unknownObjectRelease(v23);
    __break(1u);
    return;
  }
  v21 = objc_msgSend(v23, "window");
  swift_unknownObjectRelease(v23);
  if (!v21)
    goto LABEL_18;
LABEL_16:
  v21 = v21;
  v24 = objc_msgSend(v21, "windowScene");

  if (!v24)
  {
LABEL_18:
    v27 = 0;
    v29 = 0;
    goto LABEL_20;
  }
  v25 = objc_msgSend(v24, "session");

  v26 = objc_msgSend(v25, "persistentIdentifier");
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

LABEL_20:
  v31 = v51;
  v30 = v52;
  __swift_project_boxed_opaque_existential_1(v50, v51);
  v32 = ChannelOfferAction.buyParams.getter();
  v34 = v33;
  static PurchaseOptions.default.getter();
  if (v21)
  {
    *((_QWORD *)&v45 + 1) = sub_E710(0, &qword_3D7CD0, UIWindow_ptr);
    *(_QWORD *)&v44 = v21;
  }
  else
  {
    v45 = 0u;
    v44 = 0u;
  }
  sub_1D5D4((uint64_t)v53, (uint64_t)&v46);
  v35 = swift_allocObject(&unk_38B490, 64, 7);
  *(_QWORD *)(v35 + 16) = a1;
  sub_1B738(&v46, v35 + 24);
  swift_retain(a1);
  v36 = v21;
  v39 = v30;
  v37 = v43;
  dispatch thunk of PurchaseControllerProtocol.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)(v32, v34, v27, v29, v43, 0, &v44, sub_20AA70, v35, v31, v39);

  swift_bridgeObjectRelease(v34);
  swift_release(v35);
  v38 = swift_bridgeObjectRelease(v29);
  (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v37, v42, v38);
  sub_D1D4((uint64_t)v49, (uint64_t *)&unk_3D30E0);
  __swift_destroy_boxed_opaque_existential_0(v53);
  sub_D1D4((uint64_t)&v44, &qword_3D1A70);
  __swift_destroy_boxed_opaque_existential_0(v50);
}

uint64_t sub_2093D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = PopToRootAction.animationBehavior.getter();
  v3 = FlowAnimationBehavior.rawValue.getter(v2);
  v5 = v4;
  v7 = FlowAnimationBehavior.rawValue.getter(1);
  v8 = v6;
  if (v3 == v7 && v5 == v6)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    v9 = 0;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v7, v6, 0);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v8);
    v9 = v10 ^ 1;
  }
  v11 = v1 + 24;
  swift_beginAccess(v11, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong
    && (v22[0] = Strong,
        v13 = sub_E710(0, &qword_3D4020, UIResponder_ptr),
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3830),
        (swift_dynamicCast(&v19, v22, v13, v14, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v20 + 1))
    {
      sub_1B738(&v19, (uint64_t)v22);
      v15 = v23;
      v16 = v24;
      __swift_project_boxed_opaque_existential_1(v22, v23);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v16 + 8))(v9 & 1, v15, v16);
      return __swift_destroy_boxed_opaque_existential_0(v22);
    }
  }
  else
  {
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
  }
  return sub_D1D4((uint64_t)&v19, (uint64_t *)&unk_3D3820);
}

uint64_t sub_209544(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OAuthController(0);
  BaseObjectGraph.inject<A>(_:)(&v36, v10, v10);
  v34 = v36;
  sub_E710(0, &qword_3D3810, OS_os_log_ptr);
  static OS_os_log.purchases.getter(v11);
  v12 = swift_retain_n(a1, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.info.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v32 = v3;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    v33 = v2;
    v18 = v17;
    v36 = v17;
    v31 = v7;
    *(_DWORD *)v16 = 136315138;
    v29 = v16 + 4;
    v19 = ResumeOAuthAction.redirectURL.getter(v17);
    v20 = URL.absoluteString.getter(v19);
    v30 = v6;
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
    v35 = sub_37E78(v20, v22, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v22);
    _os_log_impl(&dword_0, v13, v14, "Resuming OAuth session with redirectURL: %s", v16, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    v23 = v18;
    v2 = v33;
    swift_slowDealloc(v23, -1, -1);
    v24 = v16;
    v3 = v32;
    swift_slowDealloc(v24, -1, -1);

    v25 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v9, v30);
  }
  else
  {

    swift_release_n(a1, 2);
    v25 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  ResumeOAuthAction.redirectURL.getter(v25);
  v26 = v34;
  OAuthController.resumeThirdPartySubscription(redirectURL:)(v5);
  v27 = swift_release(v26);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v27);
}

uint64_t sub_2097F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  v5 = BaseObjectGraph.inject<A>(_:)(v14, v4, v4);
  v6 = static Logger.podcastsStatesCoordination.getter(v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "Refollowing all recently unfollowed shows", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = v15;
  v11 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  dispatch thunk of LibraryActionControllerProtocol.refollowAllRecentlyUnfollowedShows()(v10, v11);
  return __swift_destroy_boxed_opaque_existential_0(v14);
}

double sub_209924(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t), const char *a5, void (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double result;
  _QWORD v37[2];
  void (*v38)(_QWORD);
  const char *v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v39 = a5;
  v9 = a3(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v37 - v11;
  v13 = type metadata accessor for Logger(0);
  v42 = *(_QWORD *)(v13 - 8);
  v43 = v13;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for InterestRepository(0, v14);
  v18 = BaseObjectGraph.inject<A>(_:)(&v45, v17, v17);
  v41 = v45;
  static Logger.interests.getter(v18);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v40 = a4;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc(32, -1);
    v38 = a6;
    v25 = v24;
    v45 = v24;
    v37[1] = a1;
    *(_DWORD *)v23 = 136315138;
    v37[0] = v23 + 4;
    v44 = v40(v24);
    v26 = sub_5AE80();
    v27 = BinaryInteger.description.getter(&type metadata for UInt64, v26);
    v29 = v28;
    v44 = sub_37E78(v27, v28, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v30);
    _os_log_impl(&dword_0, v20, v21, v39, v23, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    v31 = v25;
    a6 = v38;
    swift_slowDealloc(v31, -1, -1);
    v32 = v23;
    a4 = v40;
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  v33 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v16, v43);
  v34 = a4(v33);
  v35 = v41;
  a6(v34);
  *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  return result;
}

void sub_209B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Logger.interests.getter(v2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "User just dismissed the Inline Selection Module. Set the user default key to true.", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  type metadata accessor for InterestObserverProvider(0);
  static InterestObserverProvider.alreadyDismissedInlineSelectionModuleUserDefaultKey.getter();
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setBool:forKey:", 1, v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

}

uint64_t sub_209CE8(uint64_t a1)
{
  uint64_t *v1;

  return sub_2066B0(a1, v1[2], v1[3], v1[4]);
}

uint64_t objectdestroyTm_4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_209D2C(uint64_t a1)
{
  uint64_t *v1;

  return sub_2069FC(a1, v1[2], v1[3], v1[4]);
}

_QWORD *sub_209D38(_QWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  void **v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(void **, uint64_t, uint64_t);
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  __n128 v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  id v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  _QWORD v80[3];
  uint64_t v81;
  id v82;
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[6];

  v75 = a3;
  v76 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1188);
  __chkstk_darwin(v4);
  v74 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1180);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCBE0);
  v72 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v9);
  v11 = (void **)((char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (char *)&v67 - v13;
  v15 = type metadata accessor for ActionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = dispatch thunk of ActionModel.actionMetrics.getter(v19, v20);
  v22 = ActionMetrics.data.getter(v21);
  v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v18, v15);
  v24 = *(_QWORD *)(v22 + 16);
  swift_bridgeObjectRelease(v22);
  if (v24)
  {
    v25 = a1[3];
    v26 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v25);
    v27 = dispatch thunk of ActionModel.actionMetrics.getter(v25, v26);
    v28 = ActionMetrics.data.getter(v27);
    v23(v18, v15);
    return (_QWORD *)v28;
  }
  v29 = (void **)v14;
  v30 = v11;
  v68 = v8;
  v31 = v73;
  v32 = v74;
  BaseObjectGraph.injectIfAvailable<A>(_:)(v86, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  sub_1D5D4((uint64_t)a1, (uint64_t)v83);
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
  v35 = type metadata accessor for FlowAction(0, v34);
  v36 = swift_dynamicCast(v80, v83, v33, v35, 6);
  if ((v36 & 1) != 0)
  {
    v75 = v80[0];
    dispatch thunk of FlowAction.destination.getter(v36);
    v37 = v29;
    v38 = type metadata accessor for FlowDestination(0);
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v39 + 48);
    if (v40(v37, 1, v38) == 1)
    {
      v41 = sub_D1D4((uint64_t)v37, &qword_3D2B30);
    }
    else
    {
      if ((*(unsigned int (**)(void **, uint64_t))(v39 + 88))(v37, v38) == enum case for FlowDestination.longDescription(_:))
      {
        (*(void (**)(void **, uint64_t))(v39 + 96))(v37, v38);
        swift_release(*v37);
        v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D30F0);
        v47 = type metadata accessor for MetricsData(0);
        v28 = swift_allocObject(v46, ((*(unsigned __int8 *)(*(_QWORD *)(v47 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v47 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v47 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v47 - 8) + 80) | 7);
        *(_OWORD *)(v28 + 16) = xmmword_2F03C0;
        type metadata accessor for ClickMetricsEvent(0);
        v48 = static ClickMetricsEvent.moreButtonClickEvent()();
        dispatch thunk of MetricsEvent.metricsData.getter(v48);
        swift_release(v75);
        swift_release(v48);
        sub_D1D4((uint64_t)v86, (uint64_t *)&unk_3D30E0);
        return (_QWORD *)v28;
      }
      v41 = (*(uint64_t (**)(void **, uint64_t))(v39 + 8))(v37, v38);
    }
    v49 = v75;
    dispatch thunk of FlowAction.destination.getter(v41);
    if (v40(v30, 1, v38) == 1)
    {
      swift_release(v49);
      sub_D1D4((uint64_t)v30, &qword_3D2B30);
    }
    else
    {
      if ((*(unsigned int (**)(void **, uint64_t))(v39 + 88))(v30, v38) == enum case for FlowDestination.upsell(_:))
      {
        (*(void (**)(void **, uint64_t))(v39 + 96))(v30, v38);
        v50 = *v30;
        swift_release(v49);

LABEL_26:
        sub_D1D4((uint64_t)v86, (uint64_t *)&unk_3D30E0);
        return _swiftEmptyArrayStorage;
      }
      v51 = swift_release(v49);
      (*(void (**)(void **, uint64_t, __n128))(v39 + 8))(v30, v38, v51);
    }
    v42 = v32;
    v43 = v31;
    v44 = v72;
    v45 = v68;
  }
  else
  {
    v42 = v32;
    v43 = v31;
    v44 = v72;
    v45 = v68;
  }
  sub_1D5D4((uint64_t)a1, (uint64_t)v80);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1198);
  if ((swift_dynamicCast(&v77, v80, v33, v52, 6) & 1) == 0)
  {
    v79 = 0;
    v77 = 0u;
    v78 = 0u;
    sub_D1D4((uint64_t)&v77, &qword_3D11A0);
    goto LABEL_26;
  }
  sub_1B738(&v77, (uint64_t)v83);
  sub_D184((uint64_t)v86, (uint64_t)v80, (uint64_t *)&unk_3D30E0);
  if (v81 == 1)
  {
    sub_D1D4((uint64_t)v80, (uint64_t *)&unk_3D30E0);
LABEL_25:
    __swift_destroy_boxed_opaque_existential_0(v83);
    goto LABEL_26;
  }
  v53 = v82;
  v54 = v82;
  v55 = sub_1D628((uint64_t)v80);
  if (!v53)
    goto LABEL_25;
  v76 = v54;
  static MetricsFieldsContext.Property<A>.impressionsTracker.getter(v55);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCBE8);
  MetricsFieldsContext.subscript.getter(v80, v45, v56);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
  v57 = v80[0];
  if (v80[0])
    swift_unknownObjectRelease(v80[0]);
  v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D30F0);
  v59 = *(_QWORD *)(type metadata accessor for MetricsData(0) - 8);
  v28 = swift_allocObject(v58, ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(_QWORD *)(v59 + 72), *(unsigned __int8 *)(v59 + 80) | 7);
  *(_OWORD *)(v28 + 16) = xmmword_2F03C0;
  v60 = v84;
  v61 = v85;
  __swift_project_boxed_opaque_existential_1(v83, v84);
  sub_D184((uint64_t)v86, (uint64_t)v80, (uint64_t *)&unk_3D30E0);
  if (v81 == 1)
  {
    v62 = sub_D1D4((uint64_t)v80, (uint64_t *)&unk_3D30E0);
    v77 = 0u;
    v78 = 0u;
  }
  else
  {
    sub_D184((uint64_t)v80, (uint64_t)&v77, &qword_3D1A70);
    v62 = sub_1D628((uint64_t)v80);
  }
  v64 = v69;
  static MetricsFieldsContext.Property<A>.locationFields.getter(v62);
  v65 = type metadata accessor for ChildAndParentLocation(0);
  MetricsFieldsContext.subscript.getter(v42, v64, v65);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v64, v71);
  v66 = v76;
  NativeClickMetricsItem.generateMetricsData(view:enableImpressionsSnapshot:sender:locationFields:)(v76, v57 != 0, &v77, v42, v60, v61);
  sub_D1D4((uint64_t)v42, &qword_3D1188);
  sub_D1D4((uint64_t)&v77, &qword_3D1A70);

  sub_D1D4((uint64_t)v86, (uint64_t *)&unk_3D30E0);
  __swift_destroy_boxed_opaque_existential_0(v83);
  return (_QWORD *)v28;
}

uint64_t sub_20A4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v33;
  __n128 v34;
  void *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t (*v40)(char *, uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v55 = a2;
  v64 = a1;
  v60 = type metadata accessor for OSLogger(0);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCBD0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  __chkstk_darwin(v4);
  v61 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B50);
  v57 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v56 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3100);
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for MetricsFieldsContext(0);
  v54 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCBD8);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = type metadata accessor for MetricsPipeline(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v20, v25, v25);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    v26 = sub_D1D4((uint64_t)v20, &qword_3DCBD8);
    static OSLogger.actions.getter(v26);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
    v28 = type metadata accessor for LogMessage(0);
    v29 = swift_allocObject(v27, ((*(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80) | 7);
    *(_OWORD *)(v29 + 16) = xmmword_2F03C0;
    LogMessage.init(stringLiteral:)(0xD000000000000021, 0x8000000000314F60);
    v30 = v60;
    Logger.warning(_:)(v29, v60, &protocol witness table for OSLogger);
    v31 = swift_bridgeObjectRelease(v29);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v58 + 8))(v3, v30, v31);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v22 + 32))(v24, v20, v21);
    v33 = type metadata accessor for PageContextTracker(0);
    v66 = static PageContextTracker.shared.getter();
    static MetricsFieldsContext.Property<A>.pageContextTracker.getter(v34);
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v66, v9, v33);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v53);
    swift_release(v66);
    type metadata accessor for MetricsActivity(0);
    v35 = (void *)static MetricsActivity.shared.getter();
    v36 = MetricsActivity.currentPageFields.getter();

    v66 = v36;
    v37 = v56;
    static MetricsFieldsContext.Property<A>.pageFields.getter();
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B60);
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v66, v37, v38);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v59);
    v39 = swift_bridgeObjectRelease(v66);
    v40 = *(uint64_t (**)(char *, uint64_t, __n128))(v54 + 8);
    v41 = v65;
    v42 = v40(v11, v65, v39);
    LOBYTE(v66) = 0;
    v43 = v61;
    static MetricsFieldsContext.Property<A>.participatingInCrossfireReferral.getter(v42);
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v66, v43, &type metadata for Bool);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v63);
    ((void (*)(char *, uint64_t))v40)(v14, v41);
    v44 = v64;
    v45 = *(_QWORD *)(v64 + 16);
    if (v45)
    {
      v46 = *(_QWORD *)(type metadata accessor for MetricsData(0) - 8);
      v47 = v44 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
      v48 = *(_QWORD *)(v46 + 72);
      swift_bridgeObjectRetain(v44);
      do
      {
        v49 = MetricsPipeline.process(_:using:)(v47, v17);
        swift_release(v49);
        v47 += v48;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease(v44);
      v41 = v65;
    }
    ((void (*)(char *, uint64_t))v40)(v17, v41);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v22 + 8))(v24, v21, v50);
  }
}

uint64_t sub_20A974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_205C10(a1, a2);
}

uint64_t type metadata accessor for RootActionRunner()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews16RootActionRunner);
}

uint64_t sub_20A9B0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for PodcastState - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_20A9EC(uint64_t a1)
{
  sub_20AA1C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return a1;
}

double sub_20AA1C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  double result;

  if (a3 >= 3)
    *(_QWORD *)&result = swift_bridgeObjectRelease(a3).n128_u64[0];
  return result;
}

uint64_t sub_20AA34(_BYTE *a1)
{
  uint64_t v1;

  return sub_205CD4(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_20AA70(uint64_t a1)
{
  uint64_t v1;

  sub_20610C(a1, *(uint8_t **)(v1 + 16), (_QWORD *)(v1 + 24));
}

uint64_t sub_20AA7C(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_206DE4(a1, a2, v2);
}

uint64_t block_copy_helper_49(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_49(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_20AA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 40, v5);
}

void sub_20AB28(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_207550(a1, a2, v2 + v6, *(_QWORD *)(v2 + v7), (_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_20AB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_20AB9C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_20ABC0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 88))(a1, a2, a3 & 1);
}

uint64_t sub_20ABCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t (*v4)(_OWORD *);
  __int128 v5;
  _OWORD v7[3];
  char v8;

  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(uint64_t (**)(_OWORD *))(a3 + 112);
  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  v7[2] = *(_OWORD *)(a1 + 32);
  v8 = v3;
  return v4(v7);
}

void destroy for HoverStyle(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));

  }
}

uint64_t initializeWithCopy for HoverStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  __int128 v13;
  __int128 v14;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  v8 = v4;
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    v11 = *(void **)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v11;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    v12 = v11;
  }
  else
  {
    v13 = v7[1];
    *(_OWORD *)(a1 + 32) = *v7;
    *(_OWORD *)(a1 + 48) = v13;
    v14 = v7[3];
    *(_OWORD *)(a1 + 64) = v7[2];
    *(_OWORD *)(a1 + 80) = v14;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for HoverStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = (_OWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v10 = (__int128 *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 32);
  if (v8)
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 32) = v9;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRelease(v8);
      v11 = *(_QWORD *)(a1 + 40);
      v12 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v12;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRelease(v11);
      v13 = *(_QWORD *)(a1 + 48);
      v14 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v14;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease(v13);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      v15 = *(void **)(a2 + 88);
      v16 = *(void **)(a1 + 88);
      *(_QWORD *)(a1 + 88) = v15;
      v17 = v15;

    }
    else
    {
      sub_20AE94(a1 + 32);
      v22 = *(_OWORD *)(a2 + 80);
      v24 = *v10;
      v23 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v22;
      *v7 = v24;
      *(_OWORD *)(a1 + 48) = v23;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 32) = v9;
    v18 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v18;
    v19 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    v20 = *(void **)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v20;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    v21 = v20;
  }
  else
  {
    v25 = *v10;
    v26 = *(_OWORD *)(a2 + 48);
    v27 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v27;
    *v7 = v25;
    *(_OWORD *)(a1 + 48) = v26;
  }
  v28 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v28;
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  return a1;
}

uint64_t sub_20AE94(uint64_t a1)
{
  destroy for Gradient(a1);
  return a1;
}

__n128 __swift_memcpy106_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 90) = *(__int128 *)((char *)a2 + 90);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for HoverStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  __int128 v11;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  if (!v6)
    goto LABEL_5;
  if (!v5)
  {
    sub_20AE94(a1 + 32);
LABEL_5:
    v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v8);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v9 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);

LABEL_6:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for HoverStyle(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 106))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HoverStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 106) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 106) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HoverStyle()
{
  return &type metadata for HoverStyle;
}

uint64_t sub_20B0AC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  __int128 v8;

  if (qword_3CFA98 != -1)
    swift_once(&qword_3CFA98, sub_1D6678);
  v8 = unk_3FCF40;
  v0 = qword_3FCF50;
  v1 = qword_3CFB70;
  v2 = (id)qword_3FCF38;
  if (v1 != -1)
    swift_once(&qword_3CFB70, sub_21307C);
  v3 = qword_3FD2E0;
  v4 = qword_3FD2E8;
  v5 = (void *)qword_3FD318;
  *(_QWORD *)&xmmword_3FD068 = v2;
  *(__int128 *)((char *)&xmmword_3FD068 + 8) = v8;
  qword_3FD080 = v0;
  qword_3FD088 = qword_3FD2E0;
  qword_3FD090 = qword_3FD2E8;
  xmmword_3FD098 = xmmword_3FD2F0;
  *(_OWORD *)&qword_3FD0A8 = unk_3FD300;
  qword_3FD0B8 = qword_3FD310;
  unk_3FD0C0 = qword_3FD318;
  qword_3FD0C8 = 0;
  word_3FD0D0 = 513;
  swift_bridgeObjectRetain(xmmword_3FD2F0);
  v6 = v5;
  swift_bridgeObjectRetain(v3);
  return swift_bridgeObjectRetain(v4);
}

id sub_20B1A8()
{
  if (qword_3CFA98 != -1)
    swift_once(&qword_3CFA98, sub_1D6678);
  qword_3FD0D8 = qword_3FCF38;
  unk_3FD0E0 = unk_3FCF40;
  qword_3FD0F0 = qword_3FCF50;
  xmmword_3FD0F8 = 0u;
  unk_3FD108 = 0u;
  xmmword_3FD118 = 0u;
  unk_3FD128 = 0u;
  qword_3FD138 = 0;
  word_3FD140 = 513;
  return (id)qword_3FCF38;
}

uint64_t sub_20B220()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  if (qword_3CFB78 != -1)
    swift_once(&qword_3CFB78, sub_21318C);
  v0 = qword_3FD320;
  v1 = qword_3FD328;
  v2 = (void *)qword_3FD358;
  xmmword_3FD148 = 0u;
  *(_OWORD *)&qword_3FD158 = 0u;
  qword_3FD168 = qword_3FD320;
  qword_3FD170 = qword_3FD328;
  xmmword_3FD178 = xmmword_3FD330;
  unk_3FD188 = unk_3FD340;
  qword_3FD198 = qword_3FD350;
  qword_3FD1A0 = qword_3FD358;
  qword_3FD1A8 = 0;
  word_3FD1B0 = 513;
  swift_bridgeObjectRetain(xmmword_3FD330);
  v3 = v2;
  swift_bridgeObjectRetain(v0);
  return swift_bridgeObjectRetain(v1);
}

uint64_t sub_20B2BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  if (qword_3CFB78 != -1)
    swift_once(&qword_3CFB78, sub_21318C);
  v0 = qword_3FD320;
  v1 = qword_3FD328;
  v2 = (void *)qword_3FD358;
  xmmword_3FD1B8 = 0u;
  unk_3FD1C8 = 0u;
  qword_3FD1D8 = qword_3FD320;
  unk_3FD1E0 = qword_3FD328;
  xmmword_3FD1E8 = xmmword_3FD330;
  *(_OWORD *)&qword_3FD1F8 = unk_3FD340;
  qword_3FD208 = qword_3FD350;
  unk_3FD210 = qword_3FD358;
  qword_3FD218 = 0;
  word_3FD220 = 513;
  swift_bridgeObjectRetain(xmmword_3FD330);
  v3 = v2;
  swift_bridgeObjectRetain(v0);
  return swift_bridgeObjectRetain(v1);
}

double sub_20B358()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  double result;

  if (qword_3CFB78 != -1)
    swift_once(&qword_3CFB78, sub_21318C);
  v0 = qword_3FD320;
  v1 = qword_3FD328;
  v2 = (void *)qword_3FD358;
  xmmword_3FD228 = 0u;
  unk_3FD238 = 0u;
  qword_3FD248 = qword_3FD320;
  unk_3FD250 = qword_3FD328;
  xmmword_3FD258 = xmmword_3FD330;
  *(_OWORD *)&qword_3FD268 = unk_3FD340;
  qword_3FD278 = qword_3FD350;
  unk_3FD280 = qword_3FD358;
  qword_3FD288 = 0;
  word_3FD290 = 513;
  swift_bridgeObjectRetain(xmmword_3FD330);
  v3 = v2;
  swift_bridgeObjectRetain(v0);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v1).n128_u64[0];
  return result;
}

BOOL sub_20B3F4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  double v11;
  char v12;
  int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  double v23;
  int v24;
  int v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  id v33;
  char v34;
  _BOOL8 result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  int v64;
  int v65;
  char v66;
  char v67;
  int v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[8];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;

  v2 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(void **)(a1 + 88);
  v11 = *(double *)(a1 + 96);
  v12 = *(_BYTE *)(a1 + 104);
  v13 = *(unsigned __int8 *)(a1 + 105);
  v14 = *(void **)a2;
  v16 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a2 + 48);
  v18 = *(_QWORD *)(a2 + 56);
  v20 = *(_QWORD *)(a2 + 64);
  v19 = *(_QWORD *)(a2 + 72);
  v21 = *(_QWORD *)(a2 + 80);
  v22 = *(void **)(a2 + 88);
  v23 = *(double *)(a2 + 96);
  v24 = *(unsigned __int8 *)(a2 + 104);
  v25 = *(unsigned __int8 *)(a2 + 105);
  if (!*(_QWORD *)a1)
  {
    if (v14)
      return 0;
    goto LABEL_9;
  }
  if (!v14)
    return 0;
  v53 = *(_QWORD *)(a2 + 72);
  v55 = *(_QWORD *)(a2 + 80);
  v57 = *(void **)(a2 + 88);
  v59 = *(_QWORD *)(a1 + 56);
  v64 = *(unsigned __int8 *)(a2 + 104);
  v66 = *(_BYTE *)(a1 + 104);
  v68 = *(unsigned __int8 *)(a2 + 105);
  v70 = *(unsigned __int8 *)(a1 + 105);
  v49 = *(_QWORD *)(a1 + 40);
  v50 = *(_QWORD *)(a1 + 48);
  v61 = *(_QWORD *)(a1 + 64);
  v72 = *(_QWORD *)(a1 + 72);
  v51 = *(_QWORD *)(a1 + 80);
  v52 = *(void **)(a1 + 88);
  v27 = *(double *)(a1 + 8);
  v26 = *(double *)(a1 + 16);
  v28 = *(double *)(a1 + 24);
  v30 = *(double *)(a2 + 8);
  v29 = *(double *)(a2 + 16);
  v31 = *(double *)(a2 + 24);
  sub_20B7A0();
  v32 = v2;
  v33 = v14;
  v34 = static NSObject.== infix(_:_:)(v32, v33);

  result = 0;
  if ((v34 & 1) != 0 && v27 == v30 && v26 == v29)
  {
    v9 = v51;
    v10 = v52;
    v7 = v72;
    v5 = v59;
    v8 = v61;
    v3 = v49;
    v6 = v50;
    v25 = v68;
    v13 = v70;
    v24 = v64;
    v12 = v66;
    v21 = v55;
    v22 = v57;
    v19 = v53;
    if (v28 == v31)
    {
LABEL_9:
      if (v4)
      {
        v75 = v4;
        v76 = v3;
        v77 = v6;
        v78 = v5;
        v79 = v8;
        v80 = v7;
        v81 = v9;
        v82 = v10;
        v73 = v7;
        if (v16)
        {
          v74[0] = v16;
          v74[1] = v15;
          v74[2] = v17;
          v74[3] = v18;
          v74[4] = v20;
          v74[5] = v19;
          v74[6] = v21;
          v74[7] = v22;
          v36 = v6;
          v37 = v5;
          v38 = v8;
          v69 = v25;
          v71 = v13;
          v39 = v3;
          v65 = v24;
          v67 = v12;
          sub_B7A24(v4, v3, v6, v5, v8, v7, v9, v10);
          swift_bridgeObjectRetain(v36);
          v40 = v10;
          swift_bridgeObjectRetain(v4);
          swift_bridgeObjectRetain(v39);
          v62 = _s23ShelfKitCollectionViews8GradientV2eeoiySbAC_ACtFZ_0((uint64_t)&v75, (uint64_t)v74);
          v41 = v9;
          v42 = v75;
          v43 = v76;
          v44 = v77;

          swift_bridgeObjectRelease(v42);
          swift_bridgeObjectRelease(v43);
          swift_bridgeObjectRelease(v44);
          sub_B7AE8(v4, v39, v36, v37, v38, v73, v41, v10);
          v24 = v65;
          v12 = v67;
          v25 = v69;
          v13 = v71;
          if ((v62 & 1) == 0)
            return 0;
          goto LABEL_14;
        }
        v60 = v5;
        v63 = v8;
        v45 = v6;
        v46 = v3;
        v56 = v21;
        v58 = v22;
        v54 = v19;
        swift_bridgeObjectRetain(v4);
        swift_bridgeObjectRetain(v46);
        swift_bridgeObjectRetain(v45);
        v47 = v10;
        v19 = v54;
        v21 = v56;
        v22 = v58;
        v5 = v60;
        v3 = v46;
        v6 = v45;
        v8 = v63;
        v7 = v73;
      }
      else if (!v16)
      {
LABEL_14:
        if ((v12 & 1) != 0)
        {
          if (!v24)
            return 0;
        }
        else
        {
          if (v11 == v23)
            v48 = v24;
          else
            v48 = 1;
          if ((v48 & 1) != 0)
            return 0;
        }
        if (v13 != 2)
          return v25 != 2 && ((v25 ^ v13) & 1) == 0;
        return v25 == 2;
      }
      v75 = v4;
      v76 = v3;
      v77 = v6;
      v78 = v5;
      v79 = v8;
      v80 = v7;
      v81 = v9;
      v82 = v10;
      v83 = v16;
      v84 = v15;
      v85 = v17;
      v86 = v18;
      v87 = v20;
      v88 = v19;
      v89 = v21;
      v90 = v22;
      sub_B7A24(v16, v15, v17, v18, v20, v19, v21, v22);
      sub_20B714((uint64_t)&v75);
      return 0;
    }
  }
  return result;
}

uint64_t sub_20B714(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(void **)(a1 + 120);
  sub_B7AE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56));
  sub_B7AE8(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

unint64_t sub_20B7A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D4D10;
  if (!qword_3D4D10)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D4D10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HoverStyle.GrowthDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20B828 + 4 * byte_2FFC05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20B85C + 4 * byte_2FFC00[v4]))();
}

uint64_t sub_20B85C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20B864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20B86CLL);
  return result;
}

uint64_t sub_20B878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20B880);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20B884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20B88C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HoverStyle.GrowthDirection()
{
  return &type metadata for HoverStyle.GrowthDirection;
}

unint64_t sub_20B8AC()
{
  unint64_t result;

  result = qword_3DCC20;
  if (!qword_3DCC20)
  {
    result = swift_getWitnessTable(&unk_2FFC7C, &type metadata for HoverStyle.GrowthDirection);
    atomic_store(result, (unint64_t *)&qword_3DCC20);
  }
  return result;
}

uint64_t FlowDestination.init(testUrl:)@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v38;
  Swift::String v39;
  void *object;
  __n128 v41;
  Swift::String v42;
  void *v43;
  __n128 v44;
  Swift::String v45;
  void *v46;
  unint64_t v47;
  unint64_t v48;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - v9;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v47 - v13;
  v15 = URL.scheme.getter(v12);
  if (!v16)
    goto LABEL_10;
  v17 = v16;
  if (v15 == 0x7374736163646F70 && v16 == 0xEC0000007470702DLL)
  {
    swift_bridgeObjectRelease(0xEC0000007470702DLL);
    goto LABEL_6;
  }
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, 0x7374736163646F70, 0xEC0000007470702DLL, 0);
  swift_bridgeObjectRelease(v17);
  if ((v19 & 1) == 0)
  {
LABEL_10:
    v24 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DD0) + 48);
    v25.n128_f64[0] = (*(double (**)(uint64_t, unint64_t *, uint64_t))(v5 + 32))(a2, a1, v4);
    v26 = enum case for FlowOrigin.inapp(_:);
    v27 = type metadata accessor for FlowOrigin(0, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v24, v26, v27);
    v28 = (unsigned int *)&enum case for FlowDestination.unknown(_:);
    goto LABEL_22;
  }
LABEL_6:
  v20 = URL.host.getter(v18);
  if (!v21)
    goto LABEL_23;
  v22 = v21;
  if (v20 != 0x7972617262696CLL || v21 != 0xE700000000000000)
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, 0x7972617262696CLL, 0xE700000000000000, 0);
    v23 = swift_bridgeObjectRelease(v22);
    if ((v29 & 1) != 0)
      goto LABEL_12;
LABEL_23:
    (*(void (**)(char *, unint64_t *, uint64_t))(v5 + 16))(v7, a1, v4);
    v47 = 0;
    v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v38 = swift_bridgeObjectRelease(v48);
    v47 = 0xD000000000000012;
    v48 = 0x8000000000315020;
    v39._countAndFlagsBits = URL.path.getter(v38);
    object = v39._object;
    a1 = &v47;
    String.append(_:)(v39);
    swift_bridgeObjectRelease(object);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v47, v48, "ShelfKitCollectionViews/FlowDestination+PPT.swift", 49, 2, 16, 0);
    goto LABEL_25;
  }
  v23 = swift_bridgeObjectRelease(0xE700000000000000);
LABEL_12:
  v30 = URL.lastPathComponent.getter(v23);
  v32 = v31;
  if (String.count.getter(v30, v31) < 1)
  {
    (*(void (**)(char *, unint64_t *, uint64_t))(v5 + 16))(v10, a1, v4);
    v47 = 0;
    v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v41 = swift_bridgeObjectRelease(v48);
    v47 = 0xD000000000000012;
    v48 = 0x8000000000315020;
    v42._countAndFlagsBits = URL.path.getter(v41);
    v43 = v42._object;
    a1 = &v47;
    String.append(_:)(v42);
    swift_bridgeObjectRelease(v43);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v47, v48, "ShelfKitCollectionViews/FlowDestination+PPT.swift", 49, 2, 21, 0);
    goto LABEL_25;
  }
  if (v30 == 0x6B72616D6B6F6F62 && v32 == 0xE900000000000073
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6B72616D6B6F6F62, 0xE900000000000073, v30, v32, 0) & 1) != 0)
  {
    (*(void (**)(unint64_t *, uint64_t))(v5 + 8))(a1, v4);
    swift_bridgeObjectRelease(v32);
    *(_QWORD *)a2 = 3;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_QWORD *)(a2 + 56) = 0;
    *(_BYTE *)(a2 + 64) = 9;
    v28 = (unsigned int *)&enum case for FlowDestination.episodeList(_:);
  }
  else
  {
    if (v30 == 0x73776F6873 && v32 == 0xE500000000000000)
    {
      v33 = swift_bridgeObjectRelease(0xE500000000000000);
    }
    else
    {
      v34 = _stringCompareWithSmolCheck(_:_:expecting:)(0x73776F6873, 0xE500000000000000, v30, v32, 0);
      v33 = swift_bridgeObjectRelease(v32);
      if ((v34 & 1) == 0)
      {
        while (1)
        {
          (*(void (**)(char *, unint64_t *, uint64_t, __n128))(v5 + 16))(v14, a1, v4, v33);
          v47 = 0;
          v48 = 0xE000000000000000;
          _StringGuts.grow(_:)(20);
          v44 = swift_bridgeObjectRelease(v48);
          v47 = 0xD000000000000012;
          v48 = 0x8000000000315020;
          v45._countAndFlagsBits = URL.path.getter(v44);
          v46 = v45._object;
          a1 = &v47;
          String.append(_:)(v45);
          swift_bridgeObjectRelease(v46);
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v47, v48, "ShelfKitCollectionViews/FlowDestination+PPT.swift", 49, 2, 30, 0);
LABEL_25:
          __break(1u);
        }
      }
    }
    (*(void (**)(unint64_t *, uint64_t, __n128))(v5 + 8))(a1, v4, v33);
    v28 = (unsigned int *)&enum case for FlowDestination.shows(_:);
  }
LABEL_22:
  v35 = *v28;
  v36 = type metadata accessor for FlowDestination(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(a2, v35, v36);
}

void sub_20BDD8(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  double v15;
  char v16;
  void *v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  double v35;
  double v36;
  id v37;
  double v38;
  double v39;
  double v40;
  _BYTE v41[24];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  swift_beginAccess(v2 + 24, v41, 0, 0);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
    return;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 24));
  v7 = 0x7FFFFFFFFFFFFFFFLL;
  v8 = 32;
  v9 = a2;
  while (1)
  {
    v12 = *(_OWORD *)(v5 + v8 + 32);
    v11 = *(_OWORD *)(v5 + v8 + 48);
    v13 = *(_OWORD *)(v5 + v8 + 16);
    v42 = *(_OWORD *)(v5 + v8);
    v43 = v13;
    v44 = v12;
    v45 = v11;
    v14 = (void *)v42;
    v15 = *((double *)&v13 + 1);
    v16 = v12;
    if ((v12 & 1) != 0)
    {
      v17 = (void *)v43;
      sub_20C6DC((uint64_t)&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20C15C);
      v18 = v17;
    }
    else
    {
      sub_20C6DC((uint64_t)&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20C15C);
      v19 = objc_msgSend(v14, "font");
      if (!v19)
        goto LABEL_45;
      v18 = v19;
      sub_20C6DC((uint64_t)&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20C18C);
    }
    objc_msgSend(v18, "lineHeight");
    v21 = v20;

    v22 = floor(v9 / v21);
    if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
      break;
    if (v22 <= -9.22337204e18)
      goto LABEL_42;
    if (v22 >= 9.22337204e18)
      goto LABEL_43;
    v23 = *((_QWORD *)&v44 + 1);
    if (v7 < *((uint64_t *)&v44 + 1))
      v23 = v7;
    if (v23 >= (uint64_t)v22)
      v24 = (uint64_t)v22;
    else
      v24 = v23;
    v25 = sub_20C3E0((uint64_t)&v42, v24, a1);
    if ((v16 & 1) != 0)
    {
      v26 = 0;
    }
    else
    {
      v27 = v14;
      v26 = v14;
    }
    objc_msgSend(v26, "setNumberOfLines:", v25);

    v28 = v7 - v25;
    if (__OFSUB__(v7, v25))
      goto LABEL_44;
    v29 = v21 * (double)v25;
    if ((v16 & 1) != 0)
    {
      sub_20C6DC((uint64_t)&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20C18C);
      v30 = floor(v15 * v29);
      v31 = ceil(v15 * v29);
      if (COERCE__INT64(v15 * v29) >= 0)
        v32 = v31;
      else
        v32 = v30;
      v33 = v32 / v15;
      if (v25 >= 1)
        goto LABEL_36;
    }
    else
    {
      v34 = objc_msgSend(v14, "traitCollection");
      objc_msgSend(v34, "displayScale");
      v36 = v35;
      if (v35 >= COERCE_DOUBLE(1))
      {

      }
      else
      {
        v37 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        objc_msgSend(v37, "scale");
        v36 = v38;

      }
      sub_20C6DC((uint64_t)&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20C18C);
      sub_20C6DC((uint64_t)&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20C18C);
      v39 = v29 * v36;
      if ((COERCE_UNSIGNED_INT64(v29 * v36) & 0x8000000000000000) != 0)
        v40 = floor(v39);
      else
        v40 = ceil(v39);
      v33 = v40 / v36;
      if (v25 >= 1)
      {
LABEL_36:
        if (v33 + *((double *)&v45 + 1) < v9)
          v33 = v33 + *((double *)&v45 + 1);
      }
    }
    v7 = v28 & ~(v28 >> 63);
    v10 = v9 - v33;
    if (v10 > 0.0)
      v9 = v10;
    else
      v9 = 0.0;
    v8 += 64;
    if (!--v6)
    {
      swift_bridgeObjectRelease(v5);
      return;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

uint64_t sub_20C118()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for LineCountLayoutGroup()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews20LineCountLayoutGroup);
}

id sub_20C15C(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
    a1 = a3;
  }
  return a1;
}

void sub_20C18C(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    a1 = a3;
  }

}

uint64_t initializeWithCopy for LineCountLayoutGroup.Item(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_20C15C(*(void **)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for LineCountLayoutGroup.Item(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_20C15C(*(void **)a2, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  sub_20C18C(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LineCountLayoutGroup.Item(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  __int128 v10;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 32) = v4;
  sub_20C18C(v5, v6, v7, v8, v9);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for LineCountLayoutGroup.Item(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LineCountLayoutGroup.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LineCountLayoutGroup.Item()
{
  return &type metadata for LineCountLayoutGroup.Item;
}

uint64_t sub_20C3E0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  double v11;
  void *v12;
  double v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  id v26;
  double v27;
  double v28;
  double v29;
  uint64_t result;
  __int128 v31[2];
  id v32[4];
  char v33;

  v6 = type metadata accessor for FloatingPointRoundingRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return 0;
  if (static CGFloat.epsilon.getter(v8) > a3)
  {
    sub_20C714((__int128 *)a1, (uint64_t)v31);
    sub_20C714(v31, (uint64_t)v32);
    if ((v33 & 1) == 0)
    {
      objc_msgSend(v32[0], "bounds");
      a3 = v11;
    }
  }
  v12 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v13 = *(double *)(a1 + 24);
    v16 = a1 + 8;
    v14 = *(_QWORD *)(a1 + 8);
    v15 = *(void **)(v16 + 8);
    swift_bridgeObjectRetain(v14);
    v17 = v15;
    sub_21A9C4(v17, a2, (uint64_t)v12, v14, a3, 1.79769313e308, v13);
    v19 = v18;
    swift_bridgeObjectRelease(v14);

    v20 = v17;
  }
  else
  {
    v21 = objc_allocWithZone((Class)NSStringDrawingContext);
    v22 = v12;
    v23 = objc_msgSend(v21, "init");
    if (a2 < 0)
    {
LABEL_22:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
      __break(1u);
      return result;
    }
    v24 = v23;
    objc_msgSend(v23, "setMaximumNumberOfLines:", a2);
    objc_msgSend(v24, "setWrapsForTruncationMode:", a2 != 1);
    sub_21B824(v22, v24, a3, 1.79769313e308);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for FloatingPointRoundingRule.awayFromZero(_:), v6);
    sub_2CDB88((int)v10, v22);
    v19 = v25;

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    sub_20C6DC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20C18C);
    v26 = objc_msgSend(v22, "font");
    if (!v26)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    v20 = v26;
    sub_20C6DC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20C18C);
  }
  objc_msgSend(v20, "lineHeight");
  v28 = v27;

  if (v19 <= 0.0)
    return 0;
  v29 = round((v19 - v28) / v28);
  if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v29 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  result = (uint64_t)v29 + 1;
  if (__OFADD__((uint64_t)v29, 1))
  {
    __break(1u);
    return 0;
  }
  return result;
}

uint64_t sub_20C6DC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_20C714(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void _s23ShelfKitCollectionViews20LineCountLayoutGroupC7ContentOwxx_0(uint64_t a1)
{
  sub_20C18C(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for LineCountLayoutGroup.Content(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_20C15C(*(void **)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for LineCountLayoutGroup.Content(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_20C15C(*(void **)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(void **)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_20C18C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for LineCountLayoutGroup.Content(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_20C18C(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LineCountLayoutGroup.Content(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LineCountLayoutGroup.Content(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_20C8E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_20C8F0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LineCountLayoutGroup.Content()
{
  return &type metadata for LineCountLayoutGroup.Content;
}

_QWORD *EnvironmentValues.shelfImpressionMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_20C940();
  return EnvironmentValues.subscript.getter(a1, &type metadata for ShelfImpressionMetricsEnvironmentKey, &type metadata for ShelfImpressionMetricsEnvironmentKey, v2);
}

unint64_t sub_20C940()
{
  unint64_t result;

  result = qword_3DCD08;
  if (!qword_3DCD08)
  {
    result = swift_getWitnessTable(&unk_2FFD98, &type metadata for ShelfImpressionMetricsEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_3DCD08);
  }
  return result;
}

_QWORD *sub_20C984@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_20C940();
  return EnvironmentValues.subscript.getter(a1, &type metadata for ShelfImpressionMetricsEnvironmentKey, &type metadata for ShelfImpressionMetricsEnvironmentKey, v2);
}

uint64_t sub_20C9C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - v6;
  sub_20CB0C(a1, (uint64_t)&v10 - v6);
  sub_20CB0C((uint64_t)v7, (uint64_t)v4);
  v8 = sub_20C940();
  EnvironmentValues.subscript.setter(v4, &type metadata for ShelfImpressionMetricsEnvironmentKey, &type metadata for ShelfImpressionMetricsEnvironmentKey, v8);
  return sub_20CB54((uint64_t)v7);
}

uint64_t EnvironmentValues.shelfImpressionMetrics.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20CB0C(a1, (uint64_t)v4);
  v5 = sub_20C940();
  EnvironmentValues.subscript.setter(v4, &type metadata for ShelfImpressionMetricsEnvironmentKey, &type metadata for ShelfImpressionMetricsEnvironmentKey, v5);
  return sub_20CB54(a1);
}

uint64_t sub_20CB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20CB54(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20CB94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for ImpressionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_20CBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_20CDCC();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void (*EnvironmentValues.shelfImpressionMetrics.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  unint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v5 = malloc(v4);
  v3[3] = v5;
  v6 = sub_20C940();
  v3[4] = v6;
  EnvironmentValues.subscript.getter(v5, &type metadata for ShelfImpressionMetricsEnvironmentKey, &type metadata for ShelfImpressionMetricsEnvironmentKey, v6);
  return sub_20CCC0;
}

void sub_20CCC0(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v3 = *a1;
  sub_20CB0C((*a1)[3], (*a1)[2]);
  v4 = (void *)v3[3];
  v5 = v3[4];
  v6 = (void *)v3[1];
  v7 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_20CB0C(v3[2], v3[1]);
    EnvironmentValues.subscript.setter(v6, &type metadata for ShelfImpressionMetricsEnvironmentKey, &type metadata for ShelfImpressionMetricsEnvironmentKey, v5);
    sub_20CB54((uint64_t)v7);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3[2], &type metadata for ShelfImpressionMetricsEnvironmentKey, &type metadata for ShelfImpressionMetricsEnvironmentKey, v3[4]);
  }
  sub_20CB54((uint64_t)v4);
  free(v4);
  free(v7);
  free(v6);
  free(v3);
}

_QWORD *sub_20CD7C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_20C940();
  return EnvironmentValues.subscript.getter(a1, &type metadata for ShelfImpressionMetricsEnvironmentKey, &type metadata for ShelfImpressionMetricsEnvironmentKey, v2);
}

ValueMetadata *type metadata accessor for ShelfImpressionMetricsEnvironmentKey()
{
  return &type metadata for ShelfImpressionMetricsEnvironmentKey;
}

unint64_t sub_20CDCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DCD10;
  if (!qword_3DCD10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0EE0);
    sub_20CE30();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_3DCD10);
  }
  return result;
}

unint64_t sub_20CE30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DCD18;
  if (!qword_3DCD18)
  {
    v1 = type metadata accessor for ImpressionMetrics(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ImpressionMetrics, v1);
    atomic_store(result, (unint64_t *)&qword_3DCD18);
  }
  return result;
}

id sub_20CE78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController____lazy_storage___continueButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController____lazy_storage___continueButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController____lazy_storage___continueButton);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 127);
    objc_msgSend(v4, "setRole:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_20CF08(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_class *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  objc_super v14;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (objc_class *)type metadata accessor for WelcomeViewController();
  v14.receiver = v1;
  v14.super_class = v7;
  v8 = objc_msgSendSuper2(&v14, "viewWillAppear:", a1 & 1);
  v9 = static Logger.privacy.getter(v8);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "Showing welcome screen.", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for WelcomeViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21WelcomeViewController);
}

uint64_t sub_20D078(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  __n128 v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  os_log_type_t v19;
  char v22[24];
  objc_super v23;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v22[-v8 - 8];
  v10 = (objc_class *)type metadata accessor for WelcomeViewController();
  v23.receiver = v1;
  v23.super_class = v10;
  objc_msgSendSuper2(&v23, "viewWillDisappear:", a1 & 1);
  v11 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired];
  swift_beginAccess(v11, v22, 0, 0);
  if (*v11 == 1)
  {
    v13 = static Logger.privacy.getter(v12);
    v14 = Logger.logObject.getter(v13);
    v16 = static os_log_type_t.fault.getter(v15);
    if (!os_log_type_enabled(v14, v16))
    {
      v6 = v9;
      goto LABEL_8;
    }
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_0, v14, v16, "Dismissing welcome screen BUT USER HAS NOT ACKNOWLEDGED", v17, 2u);
    v6 = v9;
    goto LABEL_6;
  }
  v18 = static Logger.privacy.getter(v12);
  v14 = Logger.logObject.getter(v18);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v19))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_0, v14, v19, "Dismissing welcome screen after user has acknowledged", v17, 2u);
LABEL_6:
    swift_slowDealloc(v17, -1, -1);
  }
LABEL_8:

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_20D28C()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  void *object;
  NSString v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  void *v24;
  NSString v25;
  id v26;
  NSString v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void *v83;
  Class isa;
  id v85;
  id v86;
  id v87;
  double v88;
  id v89;
  void *v90;
  __n128 v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  double v98;
  id v99;
  id v100;
  id v101;
  int v102;
  int v103;
  int v104;
  uint64_t v105;
  objc_super v106;
  Swift::String v107;
  Swift::String v108;

  v1 = v0;
  v106.receiver = v0;
  v106.super_class = (Class)type metadata accessor for WelcomeViewController();
  objc_msgSendSuper2(&v106, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = objc_msgSend((id)objc_opt_self(OBPrivacyLinkController), "linkWithBundleIdentifier:", kMTPodcastsPrivacyIdentifier);
  if (!v5)
    return;
  v6 = v5;
  objc_msgSend(v5, "setDisplayLargeIcon:", 1);
  objc_msgSend(v1, "addChildViewController:", v6);
  v7 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_rootStackView];
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setAxis:", 1);
  objc_msgSend(v7, "setDistribution:", 4);
  objc_msgSend(v7, "setAlignment:", 3);
  objc_msgSend(v7, "setSpacing:", 0.0);
  v8 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_iconImageView];
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v9);

  objc_msgSend(v8, "setImage:", v10);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "addArrangedSubview:", v8);
  v11 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_headerLabel];
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = objc_msgSend(v12, "mainBundle");
  v107._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0x5F454D4F434C4557;
  v14._object = (void *)0xED0000454C544954;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v107._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v107)._object;

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setText:", v17, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setTextAlignment:", 1);
  v101 = v11;
  objc_msgSend(v7, "addArrangedSubview:", v11);
  v100 = sub_211450();
  objc_msgSend(v7, "addArrangedSubview:");
  v18 = objc_msgSend(v6, "view");
  if (!v18)
    goto LABEL_17;
  v19 = v18;
  objc_msgSend(v7, "addArrangedSubview:", v18);

  objc_msgSend(v6, "didMoveToParentViewController:", v1);
  v20 = sub_20CE78();
  v21 = objc_msgSend(v12, "mainBundle");
  v22._countAndFlagsBits = 0xD00000000000001ALL;
  v108._object = (void *)0xE000000000000000;
  v22._object = (void *)0x80000000003150D0;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v108._countAndFlagsBits = 0;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v108)._object;

  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setTitle:forState:", v25, 0, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v26 = sub_20CE78();
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "setAccessibilityIdentifier:", v27);

  v28 = sub_20CE78();
  objc_msgSend(v28, "addTarget:action:forControlEvents:", v1, "didTapStart:", 64);

  v29 = sub_20CE78();
  objc_msgSend(v7, "addArrangedSubview:", v29);

  v30 = objc_msgSend(v1, "view");
  if (!v30)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v31 = v30;
  objc_msgSend(v30, "addSubview:", v7);

  v32 = objc_msgSend(v1, "view");
  if (!v32)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v33 = v32;
  objc_msgSend(v32, "setLayoutMargins:", 58.0, 70.0, 24.0, 70.0);

  v34 = objc_msgSend(v1, "view");
  if (!v34)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, "layoutMarginsGuide");

  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v38 = swift_allocObject(v37, 112, 7);
  *(_OWORD *)(v38 + 16) = xmmword_2F5BD0;
  v39 = objc_msgSend(v7, "leadingAnchor");
  v40 = objc_msgSend(v36, "leadingAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v38 + 32) = v41;
  v42 = objc_msgSend(v7, "trailingAnchor");
  v43 = objc_msgSend(v36, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v38 + 40) = v44;
  v45 = objc_msgSend(v8, "widthAnchor");
  v46 = objc_msgSend(v45, "constraintEqualToConstant:", 80.0);

  *(_QWORD *)(v38 + 48) = v46;
  v47 = objc_msgSend(v8, "heightAnchor");
  v48 = objc_msgSend(v47, "constraintEqualToConstant:", 80.0);

  *(_QWORD *)(v38 + 56) = v48;
  v49 = objc_msgSend(v101, "firstBaselineAnchor");
  v50 = objc_msgSend(v8, "bottomAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v50, 40.0);

  *(_QWORD *)(v38 + 64) = v51;
  v52 = objc_msgSend(v6, "view");
  if (!v52)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v53 = v52;
  v54 = objc_msgSend(v52, "topAnchor");

  v55 = objc_msgSend(v100, "bottomAnchor");
  v56 = objc_msgSend(v54, "constraintGreaterThanOrEqualToAnchor:constant:", v55, 20.0);

  *(_QWORD *)(v38 + 72) = v56;
  v57 = sub_20CE78();
  v58 = objc_msgSend(v57, "topAnchor");

  v59 = objc_msgSend(v6, "view");
  if (!v59)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v60 = v59;
  v61 = objc_msgSend(v59, "bottomAnchor");

  v62 = objc_msgSend(v58, "constraintEqualToAnchor:constant:", v61, 18.0);
  *(_QWORD *)(v38 + 80) = v62;
  v63 = sub_20CE78();
  v64 = objc_msgSend(v63, "widthAnchor");

  v65 = objc_msgSend(v64, "constraintGreaterThanOrEqualToConstant:", 200.0);
  *(_QWORD *)(v38 + 88) = v65;
  v66 = sub_20CE78();
  v67 = objc_msgSend(v66, "bottomAnchor");

  v68 = objc_msgSend(v36, "bottomAnchor");
  v69 = objc_msgSend(v67, "constraintEqualToAnchor:constant:", v68, 0.0);

  *(_QWORD *)(v38 + 96) = v69;
  v70 = objc_msgSend(v1, "view");
  if (!v70)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v71 = v70;
  v72 = objc_msgSend(v70, "heightAnchor");

  v73 = objc_msgSend(v72, "constraintEqualToConstant:", *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_sheetHeight]);
  *(_QWORD *)(v38 + 104) = v73;
  v105 = v38;
  specialized Array._endMutation()(v74);
  v75 = objc_msgSend(v1, "view");
  if (!v75)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
  v76 = v75;
  v77 = objc_msgSend(v75, "widthAnchor");

  v78 = objc_msgSend(v77, "constraintEqualToConstant:", *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_sheetWidth]);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
  v81 = *(_QWORD *)((char *)&dword_10 + (v105 & 0xFFFFFFFFFFFFFF8));
  v80 = *(_QWORD *)((char *)&dword_18 + (v105 & 0xFFFFFFFFFFFFFF8));
  if (v81 >= v80 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
  v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v78);
  specialized Array._endMutation()(v82);
  v83 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v105);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v83, "activateConstraints:", isa, swift_bridgeObjectRelease(v105).n128_f64[0]);

  v85 = objc_msgSend(v7, "topAnchor");
  v86 = objc_msgSend(v36, "topAnchor");
  v87 = objc_msgSend(v85, "constraintEqualToAnchor:", v86);

  LODWORD(v88) = 1132068864;
  objc_msgSend(v87, "setPriority:", v88);
  objc_msgSend(v87, "setActive:", 1);
  v89 = objc_msgSend(v6, "view");
  if (!v89)
    goto LABEL_25;
  v90 = v89;
  v91 = swift_bridgeObjectRelease(v105);
  v91.n128_u32[0] = 1148846080;
  objc_msgSend(v90, "setContentCompressionResistancePriority:forAxis:", 1, v91.n128_f64[0]);

  v92 = objc_msgSend(v100, "topAnchor");
  v93 = objc_msgSend(v101, "lastBaselineAnchor");
  v94 = objc_msgSend(v92, "constraintEqualToAnchor:constant:", v93, 44.0);

  type metadata accessor for UILayoutPriority(0);
  v96 = v95;
  v102 = 1065353216;
  v103 = 1132068864;
  v97 = sub_211618();
  static _UIKitNumericRawRepresentable.+ infix(_:_:)(&v104, &v103, &v102, v96, v97);
  LODWORD(v98) = v104;
  objc_msgSend(v94, "setPriority:", v98);
  objc_msgSend(v94, "setActive:", 1);
  v99 = objc_msgSend(v1, "navigationController");
  objc_msgSend(v99, "setNavigationBarHidden:animated:", 1, 0);

}

uint64_t sub_20E058()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v1 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v1 + 16) = xmmword_2F11D0;
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIKeyCommand), "keyCommandWithInput:modifierFlags:action:", v2, 0, "acknowledgeTerms");

  *(_QWORD *)(v1 + 32) = v3;
  specialized Array._endMutation()(v4);
  return v1;
}

void sub_20E108()
{
  char *v0;
  NSString v1;
  char *v2;
  uint64_t v3;
  void *v4;
  _QWORD aBlock[5];
  uint64_t v6;
  char v7[24];

  v1 = String._bridgeToObjectiveC()();
  ASKLog(v1, 0);

  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired], v7, 1, 0);
  *v2 = 0;
  v3 = swift_allocObject(&unk_38B818, 24, 7);
  *(_QWORD *)(v3 + 16) = v0;
  aBlock[4] = sub_211B8C;
  v6 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_50;
  v4 = _Block_copy(aBlock);
  objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, v4, swift_release(v6).n128_f64[0]);
  _Block_release(v4);
}

double sub_20E210(uint64_t a1)
{
  uint64_t *v1;
  double result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_acknowledgementCompletionBlocks);
  *(_QWORD *)&result = swift_beginAccess(a1+ OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_acknowledgementCompletionBlocks, v9, 0, 0).n128_u64[0];
  v3 = *v1;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(v3);
    v5 = (_QWORD *)(v3 + 40);
    do
    {
      v7 = (void (*)(uint64_t))*(v5 - 1);
      v6 = *v5;
      v8 = swift_retain(*v5);
      v7(v8);
      swift_release(v6);
      v5 += 2;
      --v4;
    }
    while (v4);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  }
  return result;
}

double sub_20E330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD **v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  double result;
  _BYTE v13[24];

  v5 = swift_allocObject(&unk_38B7E0, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (_QWORD **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_acknowledgementCompletionBlocks);
  swift_beginAccess(v6, v13, 33, 0);
  v7 = *v6;
  swift_retain(a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
  *v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_20EE00(0, v7[2] + 1, 1, v7, &qword_3DCDE8, &qword_3DCDF0);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_20EE00((_QWORD *)(v9 > 1), v10 + 1, 1, v7, &qword_3DCDE8, &qword_3DCDF0);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_43920;
  v11[5] = v5;
  *(_QWORD *)&result = swift_endAccess(v13).n128_u64[0];
  return result;
}

uint64_t sub_20E454()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired, v3, 0, 0);
  return *v1;
}

void sub_20E498(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*sub_20E4E0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired, a1, 33, 0);
  return j__swift_endAccess;
}

id WelcomeViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  NSString v13;
  id v14;
  objc_super v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  char v27;
  char v28;

  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_acknowledgementCompletionBlocks] = _swiftEmptyArrayStorage;
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_rootStackView;
  v7 = objc_allocWithZone((Class)UIStackView);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_iconImageView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_tourButton;
  v28 = 5;
  v27 = 2;
  *(_QWORD *)&v17 = 6;
  v11 = objc_allocWithZone((Class)type metadata accessor for MacButton());
  *(_QWORD *)&v8[v10] = sub_F3EC0(&v28, (uint64_t *)&v17, &v27);
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_headerLabel;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF548 != -1)
    swift_once(&qword_3CF548, sub_140364);
  v17 = xmmword_3FBB50;
  v18 = qword_3FBB60;
  v19 = qword_3FBB68;
  v20 = qword_3FBB70;
  v21 = *(_QWORD *)byte_3FBB78;
  v22 = xmmword_3FBB80;
  v23 = qword_3FBB90;
  v24 = unk_3FBB98;
  v25 = qword_3FBBA0;
  v26 = word_3FBBA8;
  sub_DDA0((void *)xmmword_3FBB50, *((uint64_t *)&xmmword_3FBB50 + 1), qword_3FBB60, qword_3FBB68, qword_3FBB70, byte_3FBB78[0], (void *)xmmword_3FBB80, *((uint64_t *)&xmmword_3FBB80 + 1), qword_3FBB90, unk_3FBB98, qword_3FBBA0, word_3FBBA8, SHIBYTE(word_3FBBA8));
  *(_QWORD *)&v8[v12] = sub_A96AC((uint64_t)&v17, 2, 4, 0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_sheetWidth] = 0x4084000000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_sheetHeight] = 0x4082200000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController____lazy_storage___continueButton] = 0;
  v8[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired] = 1;

  if (a2)
  {
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v13 = 0;
  }
  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for WelcomeViewController();
  v14 = objc_msgSendSuper2(&v16, "initWithNibName:bundle:", v13, a3);

  return v14;
}

id WelcomeViewController.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  objc_super v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  char v23;
  char v24;

  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_acknowledgementCompletionBlocks] = _swiftEmptyArrayStorage;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_rootStackView;
  v4 = objc_allocWithZone((Class)UIStackView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_iconImageView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_tourButton;
  v24 = 5;
  v23 = 2;
  *(_QWORD *)&v13 = 6;
  v8 = objc_allocWithZone((Class)type metadata accessor for MacButton());
  *(_QWORD *)&v5[v7] = sub_F3EC0(&v24, (uint64_t *)&v13, &v23);
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_headerLabel;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF548 != -1)
    swift_once(&qword_3CF548, sub_140364);
  v13 = xmmword_3FBB50;
  v14 = qword_3FBB60;
  v15 = qword_3FBB68;
  v16 = qword_3FBB70;
  v17 = *(_QWORD *)byte_3FBB78;
  v18 = xmmword_3FBB80;
  v19 = qword_3FBB90;
  v20 = unk_3FBB98;
  v21 = qword_3FBBA0;
  v22 = word_3FBBA8;
  sub_DDA0((void *)xmmword_3FBB50, *((uint64_t *)&xmmword_3FBB50 + 1), qword_3FBB60, qword_3FBB68, qword_3FBB70, byte_3FBB78[0], (void *)xmmword_3FBB80, *((uint64_t *)&xmmword_3FBB80 + 1), qword_3FBB90, unk_3FBB98, qword_3FBBA0, word_3FBBA8, SHIBYTE(word_3FBBA8));
  *(_QWORD *)&v5[v9] = sub_A96AC((uint64_t)&v13, 2, 4, 0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_sheetWidth] = 0x4084000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_sheetHeight] = 0x4082200000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController____lazy_storage___continueButton] = 0;
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired] = 1;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for WelcomeViewController();
  v10 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);

  return v10;
}

id WelcomeViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WelcomeViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_QWORD *sub_20EA84(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_20EE00(a1, a2, a3, a4, &qword_3DCDE0, &qword_3D5800);
}

_QWORD *sub_20EA98(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE08);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_21024C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20EBB8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_20F6E8(a1, a2, a3, a4, &qword_3DCE10, &qword_3DCE18);
}

uint64_t sub_20EBCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20EBF4(a1, a2, a3, a4, (uint64_t *)&unk_3D30F0, (uint64_t (*)(_QWORD))&type metadata accessor for MetricsData);
}

uint64_t sub_20EBE0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20EBF4(a1, a2, a3, a4, &qword_3DCDD8, (uint64_t (*)(_QWORD))&type metadata accessor for Header.PrimaryAction);
}

uint64_t sub_20EBF4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = _swift_stdlib_malloc_size_0(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23, v25);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_21186C(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

_QWORD *sub_20EE00(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
      v15 = _swift_stdlib_malloc_size_0(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 17;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 4);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[2 * v11 + 4])
          memmove(v17, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_210ADC(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20EF18(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DB350);
      v11 = (_QWORD *)swift_allocObject(v10, 120 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 120);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[15 * v8 + 4])
          memmove(v13, a4 + 4, 120 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_21062C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_20F038(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20EBF4(a1, a2, a3, a4, &qword_3DCE20, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_20F04C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20EBF4(a1, a2, a3, a4, &qword_3D5480, (uint64_t (*)(_QWORD))&type metadata accessor for UICellAccessory);
}

_QWORD *sub_20F060(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE00);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_210720(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20F184(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_210448(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20F290(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCDC0);
      v11 = (_QWORD *)swift_allocObject(v10, (v9 << 7) | 0x20, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 + 95;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 7);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[16 * v8 + 4])
          memmove(v14, a4 + 4, v8 << 7);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_210814(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20F39C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCD90);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2109F4(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20F4A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22D8);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2109F4(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20F5B4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCDB8);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_210BE0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20F6D4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_20F6E8(a1, a2, a3, a4, &qword_3D5708, (uint64_t *)&unk_3D1E90);
}

_QWORD *sub_20F6E8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
      v15 = _swift_stdlib_malloc_size_0(v14);
      v14[2] = v11;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      v16 = v14 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v11 + 4])
          memmove(v16, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v16 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_210340(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20F814(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_20EE00(a1, a2, a3, a4, &qword_3DCDA0, &qword_3DCDA8);
}

_QWORD *sub_20F828(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE48);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_210904(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_20F934(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20EBF4(a1, a2, a3, a4, &qword_3DCE50, type metadata accessor for LockupRow);
}

_QWORD *sub_20F948(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D80);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21053C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20FA54(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_20EE00(a1, a2, a3, a4, &qword_3DCDC8, &qword_3DCDD0);
}

uint64_t sub_20FA68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20EBF4(a1, a2, a3, a4, &qword_3DCE28, (uint64_t (*)(_QWORD))&type metadata accessor for Category);
}

uint64_t sub_20FA7C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20EBF4(a1, a2, a3, a4, &qword_3D7B20, (uint64_t (*)(_QWORD))&type metadata accessor for CategorySection);
}

_QWORD *sub_20FA90(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9490);
      v11 = (_QWORD *)swift_allocObject(v10, 56 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v8 + 4])
          memmove(v13, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_210CD4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_20FBB8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20EBF4(a1, a2, a3, a4, &qword_3D9E88, type metadata accessor for OutlineItem);
}

_QWORD *sub_20FBCC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51F0);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_210DE0(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_20FCD8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20EBF4(a1, a2, a3, a4, &qword_3DCDF8, (uint64_t (*)(_QWORD))&type metadata accessor for TabMenu.Item);
}

uint64_t sub_20FCEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20EBF4(a1, a2, a3, a4, &qword_3DCE58, type metadata accessor for CategorySelectionGridLayout.SubviewPlacement);
}

_QWORD *sub_20FD00(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCDB0);
      v11 = (_QWORD *)swift_allocObject(v10, (v9 << 6) | 0x20, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 + 31;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 6);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[8 * v8 + 4])
          memmove(v14, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_210ED0(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20FE0C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE30);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_211984(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20FF18(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCD98);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_211A74(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_21003C(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE38);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DCE40) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = _swift_stdlib_malloc_size_0(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE40);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20, v22);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_211BAC(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

uint64_t sub_21024C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 40 * a1 + 32;
  v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_210340(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v7 = a4 + 40 * a1 + 32;
  v8 = a3 + 40 * v5;
  if (v7 >= v8 || v7 + 40 * v5 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    swift_arrayInitWithCopy(a3);
    return v8;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_210448(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_21053C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_21062C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 120 * a1 + 32;
  v6 = a3 + 120 * v4;
  if (v5 >= v6 || v5 + 120 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_210720(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 24 * a1 + 32;
  v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_210814(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + (a1 << 7) + 32;
    v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_210904(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_2109F4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_210ADC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 16 * a1 + 32;
    v8 = a3 + 16 * v5;
    if (v7 >= v8 || v7 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_210BE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 24 * a1 + 32;
  v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_210CD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 56 * a1 + 32;
  v7 = a3 + 56 * v4;
  if (v6 >= v7 || v6 + 56 * v4 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D9468);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_210DE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_210ED0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

id sub_210FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  NSString v11;
  void *v12;
  NSString v13;
  id v14;
  NSString v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;

  v7 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 6, 2, 30.0);
  v8 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v8, "setAxis:", 0);
  objc_msgSend(v8, "setDistribution:", 4);
  objc_msgSend(v8, "setAlignment:", 3);
  objc_msgSend(v8, "setSpacing:", 10.0);
  v9 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v9, "setAxis:", 1);
  objc_msgSend(v9, "setAlignment:", 1);
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF530 != -1)
    swift_once(&qword_3CF530, sub_14025C);
  v24 = xmmword_3FBA30;
  v25 = qword_3FBA40;
  v26 = qword_3FBA48;
  v27 = qword_3FBA50;
  v28 = *(_QWORD *)byte_3FBA58;
  v29 = qword_3FBA60;
  v30 = qword_3FBA68;
  v31 = qword_3FBA70;
  v32 = qword_3FBA78;
  v33 = qword_3FBA80;
  v34 = word_3FBA88;
  sub_DDA0((void *)xmmword_3FBA30, *((uint64_t *)&xmmword_3FBA30 + 1), qword_3FBA40, qword_3FBA48, qword_3FBA50, byte_3FBA58[0], (void *)qword_3FBA60, qword_3FBA68, qword_3FBA70, qword_3FBA78, qword_3FBA80, word_3FBA88, SHIBYTE(word_3FBA88));
  v10 = sub_A96AC((uint64_t)&v24, 2, 4, 0);
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setText:", v11);

  objc_msgSend(v9, "addArrangedSubview:", v10);
  if (qword_3CF528 != -1)
    swift_once(&qword_3CF528, sub_1401F8);
  v24 = xmmword_3FB9D0;
  v25 = qword_3FB9E0;
  v26 = qword_3FB9E8;
  v27 = qword_3FB9F0;
  v28 = *(_QWORD *)byte_3FB9F8;
  v29 = qword_3FBA00;
  v30 = qword_3FBA08;
  v31 = qword_3FBA10;
  v32 = qword_3FBA18;
  v33 = qword_3FBA20;
  v34 = word_3FBA28;
  sub_DDA0((void *)xmmword_3FB9D0, *((uint64_t *)&xmmword_3FB9D0 + 1), qword_3FB9E0, qword_3FB9E8, qword_3FB9F0, byte_3FB9F8[0], (void *)qword_3FBA00, qword_3FBA08, qword_3FBA10, qword_3FBA18, qword_3FBA20, word_3FBA28, SHIBYTE(word_3FBA28));
  v12 = sub_A96AC((uint64_t)&v24, 0, 0, 0);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setText:", v13);

  objc_msgSend(v9, "addArrangedSubview:", v12);
  v14 = v7;
  if (a6)
  {
    swift_bridgeObjectRetain(a6);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
  }
  else
  {
    v15 = 0;
  }
  v16 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v15, v7);

  if (v16)
  {
    v17 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v16);
    objc_msgSend(v8, "addArrangedSubview:", v17);
    v18 = objc_msgSend(v17, "leadingAnchor");
    v19 = objc_msgSend(v8, "leadingAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, 10.0);

    objc_msgSend(v20, "setActive:", 1);
    v21 = objc_msgSend(v17, "widthAnchor");
    v22 = objc_msgSend(v21, "constraintEqualToConstant:", 42.0);

    objc_msgSend(v22, "setActive:", 1);
    objc_msgSend(v17, "setContentMode:", 1);

  }
  objc_msgSend(v8, "addArrangedSubview:", v9);

  return v8;
}

id sub_211450()
{
  id v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  id v10;
  Swift::String v12;
  Swift::String v13;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v0, "setAxis:", 1);
  objc_msgSend(v0, "setDistribution:", 4);
  objc_msgSend(v0, "setAlignment:", 1);
  objc_msgSend(v0, "setSpacing:", 30.0);
  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v12._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000000003152E0;
  v3._countAndFlagsBits = 0xD000000000000013;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v12._countAndFlagsBits = 0;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v12);

  v6 = objc_msgSend(v1, "mainBundle");
  v7._countAndFlagsBits = 0xD000000000000019;
  v13._object = (void *)0xE000000000000000;
  v7._object = (void *)0x8000000000315300;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v13);

  v10 = sub_210FC0(v5._countAndFlagsBits, (uint64_t)v5._object, v9._countAndFlagsBits, (uint64_t)v9._object, 0xD00000000000001FLL, 0x8000000000315320);
  swift_bridgeObjectRelease(v5._object);
  objc_msgSend(v0, "addArrangedSubview:", v10, swift_bridgeObjectRelease(v9._object).n128_f64[0]);

  return v0;
}

unint64_t sub_211618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DAE38;
  if (!qword_3DAE38)
  {
    type metadata accessor for UILayoutPriority(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UILayoutPriority, v1);
    atomic_store(result, (unint64_t *)&qword_3DAE38);
  }
  return result;
}

uint64_t sub_211660()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_211684(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_2116D4(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

uint64_t method lookup function for WelcomeViewController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for WelcomeViewController);
}

uint64_t dispatch thunk of WelcomeViewController.deferUntilAcknowledged(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of WelcomeViewController.isAcknowledgementRequired.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

void sub_211764()
{
  char *v0;
  NSString v1;
  char *v2;
  uint64_t v3;
  void *v4;
  _QWORD aBlock[5];
  uint64_t v6;
  char v7[24];

  v1 = String._bridgeToObjectiveC()();
  ASKLog(v1, 0);

  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21WelcomeViewController_isAcknowledgementRequired], v7, 1, 0);
  *v2 = 0;
  v3 = swift_allocObject(&unk_38B868, 24, 7);
  *(_QWORD *)(v3 + 16) = v0;
  aBlock[4] = sub_211CD0;
  v6 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_10;
  v4 = _Block_copy(aBlock);
  objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, v4, swift_release(v6).n128_f64[0]);
  _Block_release(v4);
}

uint64_t sub_21186C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_211984(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_211A74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 24 * a1 + 32;
  v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_211B68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_211B8C()
{
  uint64_t v0;

  return sub_20E210(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_50(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_211BAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DCE40) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_211CD8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&off_2FFF38);
  v4 = swift_getKeyPath(&unk_2FFF60);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_211D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC23ShelfKitCollectionViews21WaveformIndicatorViewP33_867BA4BABBECB87EA7CB6FC491DEFC239ViewModel__state;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCF70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_211D90@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = ObservableObject<>.objectWillChange.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_211DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = type metadata accessor for WaveformColorPalette(0);
  v3 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WaveformState(0);
  v7 = __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for WaveformView(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&off_2FFF38);
  v15 = swift_getKeyPath(&unk_2FFF60);
  swift_retain(a2);
  static Published.subscript.getter(v9, v16, KeyPath, v15);
  swift_release(a2);
  swift_release(KeyPath);
  v17 = swift_release(v15);
  v18 = WaveformView.init(state:)(v9, v17);
  v19 = static Color.accentColor.getter(v18);
  v20 = static Color.accentColor.getter(v19);
  v21 = static Color.accentColor.getter(v20);
  v22 = static Color.accentColor.getter(v21);
  WaveformColorPalette.init(playingColor:pausedColor:bufferingColorMin:bufferingColorMax:)(v19, v20, v21, v22);
  v23 = sub_89A0(&qword_3DCF68, (uint64_t (*)(uint64_t))&type metadata accessor for WaveformView, (uint64_t)&protocol conformance descriptor for WaveformView);
  View.waveformColorPalette(_:)(v5, v10, v23);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_211F88()
{
  uint64_t *v0;

  return sub_211DB8(*v0, v0[1]);
}

uint64_t sub_211F90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  void (*v14)(char *, char *, uint64_t, __n128);
  uint64_t KeyPath;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v24[24];

  v1 = v0;
  v2 = type metadata accessor for WaveformState(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v8 = &v24[-v7 - 8];
  v9 = objc_msgSend(v1, "superview");

  if (v9 && (v10 = objc_msgSend(v1, "window"), v10, v10))
  {
    v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_viewModel];
    v12 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_state];
    v13 = swift_beginAccess(v12, v24, 0, 0);
    v14 = *(void (**)(char *, char *, uint64_t, __n128))(v3 + 16);
    v14(v8, v12, v2, v13);
    KeyPath = swift_getKeyPath(&off_2FFF38);
    v16 = swift_getKeyPath(&unk_2FFF60);
    ((void (*)(char *, char *, uint64_t))v14)(v6, v8, v2);
    swift_retain(v11);
    v17 = v6;
    v18 = v11;
    v19 = KeyPath;
  }
  else
  {
    v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_viewModel];
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, enum case for WaveformState.hidden(_:), v2);
    v21 = swift_getKeyPath(&off_2FFF38);
    v16 = swift_getKeyPath(&unk_2FFF60);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    swift_retain(v20);
    v17 = v6;
    v18 = v20;
    v19 = v21;
  }
  static Published.subscript.setter(v17, v18, v19, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

char *sub_212178()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __n128 v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  Class isa;
  uint64_t v54;
  objc_class *ObjectType;
  objc_super v56;
  _QWORD v57[3];
  char v58[24];

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for WaveformState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - v7;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v54 - v11;
  v13 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_state];
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_state], enum case for WaveformState.hidden(_:), v2, v10);
  v14 = swift_beginAccess(v13, v58, 0, 0);
  v15 = *(void (**)(char *, char *, uint64_t, __n128))(v3 + 16);
  v15(v12, v13, v2, v14);
  v16 = type metadata accessor for WaveformIndicatorView.ViewModel(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  ((void (*)(char *, char *, uint64_t))v15)(v8, v12, v2);
  v18 = swift_beginAccess(v17+ OBJC_IVAR____TtCC23ShelfKitCollectionViews21WaveformIndicatorViewP33_867BA4BABBECB87EA7CB6FC491DEFC239ViewModel__state, v57, 33, 0);
  v15(v5, v8, v2, v18);
  v19 = v1;
  Published.init(initialValue:)(v5, v2);
  v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v8, v2);
  v21 = swift_endAccess(v57);
  ((void (*)(char *, uint64_t, __n128))v20)(v12, v2, v21);
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_viewModel] = v17;
  v22 = sub_89A0(&qword_3DCF78, type metadata accessor for WaveformIndicatorView.ViewModel, (uint64_t)&unk_2FFEFC);
  swift_retain(v17);
  v57[0] = ObservedObject.init(wrappedValue:)(v23, v16, v22);
  v57[1] = v24;
  v25 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3DCF80));
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_contentView] = _UIHostingView.init(rootView:)(v57);

  v56.receiver = v19;
  v56.super_class = ObjectType;
  v26 = (char *)objc_msgSendSuper2(&v56, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_contentView;
  v28 = *(void **)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_contentView];
  v29 = v26;
  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v29, "addSubview:", v28);
  v30 = (void *)objc_opt_self(NSLayoutConstraint);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v32 = swift_allocObject(v31, 80, 7);
  *(_OWORD *)(v32 + 16) = xmmword_2EFC70;
  v33 = objc_msgSend(v28, "leadingAnchor");
  v34 = objc_msgSend(v29, "leadingAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v32 + 32) = v35;
  v36 = objc_msgSend(*(id *)&v26[v27], "trailingAnchor");
  v37 = objc_msgSend(v29, "trailingAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v32 + 40) = v38;
  v39 = objc_msgSend(*(id *)&v26[v27], "topAnchor");
  v40 = objc_msgSend(v29, "topAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v32 + 48) = v41;
  v42 = objc_msgSend(*(id *)&v26[v27], "bottomAnchor");
  v43 = objc_msgSend(v29, "bottomAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v32 + 56) = v44;
  v45 = objc_msgSend(v29, "widthAnchor");
  v46 = objc_msgSend(v45, "constraintEqualToConstant:", 16.0);

  *(_QWORD *)(v32 + 64) = v46;
  v47 = objc_msgSend(v29, "heightAnchor");
  v48 = objc_msgSend(v29, "widthAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v32 + 72) = v49;
  v57[0] = v32;
  specialized Array._endMutation()(v50);
  v51 = v57[0];
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "activateConstraints:", isa, swift_bridgeObjectRelease(v51).n128_f64[0]);

  return v29;
}

void sub_212788(void *a1, uint64_t a2, const char **a3)
{
  const char *v4;
  id v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType();
  v4 = *a3;
  v5 = v6.receiver;
  objc_msgSendSuper2(&v6, v4);
  sub_211F90();

}

uint64_t sub_212864()
{
  return type metadata accessor for WaveformIndicatorView(0);
}

uint64_t type metadata accessor for WaveformIndicatorView(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3DCE98, (uint64_t)&nominal type descriptor for WaveformIndicatorView);
}

uint64_t sub_212880(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for WaveformState(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_212908()
{
  return type metadata accessor for WaveformIndicatorView.ViewModel(0);
}

uint64_t type metadata accessor for WaveformIndicatorView.ViewModel(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3DCED8, (uint64_t)&nominal type descriptor for WaveformIndicatorView.ViewModel);
}

void sub_212924(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_212990(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_212990(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3DCEE8)
  {
    v2 = type metadata accessor for WaveformState(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3DCEE8);
  }
}

ValueMetadata *type metadata accessor for WaveformIndicatorView.WrapperView()
{
  return &type metadata for WaveformIndicatorView.WrapperView;
}

uint64_t sub_2129F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_332010, 1);
}

void *sub_212A04()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_212A10@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&off_2FFF38);
  v5 = swift_getKeyPath(&unk_2FFF60);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_212A7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v16;

  v4 = type metadata accessor for WaveformState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v16 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v16 - v9, a1, v4);
  v12 = *a2;
  KeyPath = swift_getKeyPath(&off_2FFF38);
  v14 = swift_getKeyPath(&unk_2FFF60);
  v11(v8, (uint64_t)v10, v4);
  swift_retain(v12);
  static Published.subscript.setter(v8, v12, KeyPath, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_212B84(__n128 a1)
{
  _QWORD v2[2];

  v2[0] = type metadata accessor for WaveformView(255, a1);
  v2[1] = sub_89A0(&qword_3DCF68, (uint64_t (*)(uint64_t))&type metadata accessor for WaveformView, (uint64_t)&protocol conformance descriptor for WaveformView);
  return swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.waveformColorPalette(_:)>>, 1);
}

id sub_212CEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeCellDoubleClickGestureRecognizer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EpisodeCellDoubleClickGestureRecognizer()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews39EpisodeCellDoubleClickGestureRecognizer);
}

id sub_212DEC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.2, 0.2, 0.2, 0.08);
  qword_3DCFB8 = (uint64_t)result;
  return result;
}

id sub_212E34()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.2, 0.2, 0.2, 0.3);
  qword_3DCFC0 = (uint64_t)result;
  return result;
}

uint64_t sub_212E80()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_2F0A20;
  *(_QWORD *)(v1 + 32) = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  *(_QWORD *)(v1 + 40) = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.0, 0.0, 0.07);
  *(_QWORD *)(v1 + 48) = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.0, 0.0, 0.14);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.0, 0.0, 0.14);
  *(_QWORD *)(v1 + 56) = v2;
  result = specialized Array._endMutation()(v2);
  qword_3DCFC8 = v1;
  return result;
}

void sub_212F90()
{
  qword_3DCFD0 = (uint64_t)&off_379CA0;
}

CAGradientLayerType sub_212FA4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_2EFC90;
  *(_QWORD *)(v1 + 32) = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.25);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.0);
  *(_QWORD *)(v1 + 40) = v2;
  specialized Array._endMutation()(v2);
  qword_3FD2A8 = 0;
  *(_QWORD *)&xmmword_3FD2B0 = 0;
  qword_3FD2A0 = v1;
  *(__int128 *)((char *)&xmmword_3FD2B0 + 8) = xmmword_2F1D40;
  unk_3FD2C8 = xmmword_2F1D50;
  qword_3FD2D8 = (uint64_t)kCAGradientLayerAxial;
  return kCAGradientLayerAxial;
}

CAGradientLayerType sub_21307C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_2EFC90;
  if (qword_3CFB48 != -1)
    swift_once(&qword_3CFB48, sub_212DEC);
  v2 = (void *)qword_3DCFB8;
  *(_QWORD *)(v1 + 32) = qword_3DCFB8;
  v3 = qword_3CFB50;
  v4 = v2;
  if (v3 != -1)
    v4 = (id)swift_once(&qword_3CFB50, sub_212E34);
  v5 = (void *)qword_3DCFC0;
  *(_QWORD *)(v1 + 40) = qword_3DCFC0;
  specialized Array._endMutation()(v4);
  qword_3FD2E8 = 0;
  *(_QWORD *)&xmmword_3FD2F0 = 0;
  qword_3FD2E0 = v1;
  *(__int128 *)((char *)&xmmword_3FD2F0 + 8) = xmmword_2F1D40;
  unk_3FD308 = xmmword_2F1D50;
  qword_3FD318 = (uint64_t)kCAGradientLayerAxial;
  v6 = v5;
  return kCAGradientLayerAxial;
}

CAGradientLayerType sub_21318C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_2EFC90;
  if (qword_3CFB48 != -1)
    swift_once(&qword_3CFB48, sub_212DEC);
  v2 = (void *)qword_3DCFB8;
  *(_QWORD *)(v1 + 32) = qword_3DCFB8;
  v3 = qword_3CFB50;
  v4 = v2;
  if (v3 != -1)
    v4 = (id)swift_once(&qword_3CFB50, sub_212E34);
  v5 = (void *)qword_3DCFC0;
  *(_QWORD *)(v1 + 40) = qword_3DCFC0;
  specialized Array._endMutation()(v4);
  qword_3FD328 = 0;
  *(_QWORD *)&xmmword_3FD330 = 0;
  qword_3FD320 = v1;
  *(__int128 *)((char *)&xmmword_3FD330 + 8) = xmmword_2F1D40;
  unk_3FD348 = xmmword_2F1D50;
  qword_3FD358 = (uint64_t)kCAGradientLayerAxial;
  v6 = v5;
  return kCAGradientLayerAxial;
}

CAGradientLayerType sub_21329C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_3CFB58 != -1)
    swift_once(&qword_3CFB58, sub_212E80);
  v0 = qword_3DCFC8;
  v1 = qword_3CFB60;
  swift_bridgeObjectRetain(qword_3DCFC8);
  if (v1 != -1)
    swift_once(&qword_3CFB60, sub_212F90);
  qword_3FD360 = v0;
  *(_QWORD *)algn_3FD368 = 0;
  *(_QWORD *)&xmmword_3FD370 = qword_3DCFD0;
  *(__int128 *)((char *)&xmmword_3FD370 + 8) = xmmword_2F1D40;
  unk_3FD388 = xmmword_2F1D50;
  qword_3FD398 = (uint64_t)kCAGradientLayerAxial;
  swift_bridgeObjectRetain(qword_3DCFD0);
  return kCAGradientLayerAxial;
}

uint64_t _s23ShelfKitCollectionViews8GradientV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  BOOL v18;
  char v19;
  BOOL v20;
  BOOL v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v5 = *(double *)(a1 + 24);
  v4 = *(double *)(a1 + 32);
  v7 = *(double *)(a1 + 40);
  v6 = *(double *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v12 = *(double *)(a2 + 24);
  v11 = *(double *)(a2 + 32);
  v14 = *(double *)(a2 + 40);
  v13 = *(double *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  if ((sub_1772F4(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    goto LABEL_26;
  if (v2)
  {
    if (!v9)
      goto LABEL_26;
    swift_bridgeObjectRetain(v9);
    v16 = swift_bridgeObjectRetain(v2);
    v17 = sub_1772F4(v16, v9);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v9);
    if ((v17 & 1) == 0)
      goto LABEL_26;
  }
  else if (v9)
  {
    goto LABEL_26;
  }
  if (v3)
  {
    if (v10)
    {
      v18 = sub_1775E8(v3, v10);
      v19 = 0;
      if (!v18 || v5 != v12 || v4 != v11 || v7 != v14 || v6 != v13)
        return v19 & 1;
      goto LABEL_28;
    }
LABEL_26:
    v19 = 0;
    return v19 & 1;
  }
  if (v10)
    goto LABEL_26;
  v20 = v5 == v12 && v4 == v11;
  v21 = v20 && v7 == v14;
  if (!v21 || v6 != v13)
    goto LABEL_26;
LABEL_28:
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v26 = v25;
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v29 = v27;
  if (v24 == v28 && v26 == v27)
    v19 = 1;
  else
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v28, v27, 0);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v29);
  return v19 & 1;
}

void destroy for Gradient(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)a1);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));

}

uint64_t initializeWithCopy for Gradient(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  v6 = (void *)a2[7];
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for Gradient(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a1[1];
  v7 = a2[1];
  a1[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v6);
  v8 = a1[2];
  v9 = a2[2];
  a1[2] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v8);
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  v10 = (void *)a2[7];
  v11 = (void *)a1[7];
  a1[7] = (uint64_t)v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for Gradient(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for Gradient(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Gradient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Gradient()
{
  return &type metadata for Gradient;
}

void sub_213750()
{
  qword_3DCFD8 = 0x4020000000000000;
}

void sub_213760()
{
  qword_3DCFE0 = 0x4024000000000000;
}

char *sub_213848()
{
  char *v0;
  char *v1;
  char *v2;
  id v3;
  char *v4;
  id v5;
  id v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  objc_super v26;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_videoControlButton] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_progressType];
  *(_OWORD *)v1 = xmmword_300030;
  v1[16] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_incrementalProgress] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_continuousProgress] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_displayLink] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_lastTimestamp];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  v3 = objc_allocWithZone((Class)UIView);
  v4 = v0;
  v5 = objc_msgSend(v3, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_backgroundBar] = v5;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_progressBar] = v6;

  v26.receiver = v4;
  v26.super_class = (Class)type metadata accessor for ProgressBarControl();
  v7 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_backgroundBar;
  v9 = *(void **)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_backgroundBar];
  v10 = qword_3CFB88;
  v11 = v7;
  v12 = v9;
  if (v10 != -1)
    swift_once(&qword_3CFB88, sub_213750);
  objc_msgSend(v12, "_setCornerRadius:", *(double *)&qword_3DCFD8 * 0.5);

  v13 = *(void **)&v7[v8];
  objc_msgSend(v13, "setClipsToBounds:", 1);
  v14 = (void *)objc_opt_self(UIColor);
  v15 = v13;
  v16 = objc_msgSend(v14, "systemMidGrayColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.8);

  objc_msgSend(v15, "setBackgroundColor:", v17);
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_progressBar;
  v19 = *(id *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_progressBar];
  v20 = objc_msgSend(v14, "_externalSystemWhiteColor");
  objc_msgSend(v19, "setBackgroundColor:", v20);

  v21 = *(void **)&v7[v8];
  objc_msgSend(v11, "addSubview:", v21);
  v22 = *(void **)&v11[v18];
  v23 = v21;
  v24 = v22;
  objc_msgSend(v23, "addSubview:", v24);

  return v11;
}

id sub_213BAC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double Height;
  double v13;
  double v14;
  double Width;
  void *v16;
  void *v17;
  objc_super v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for ProgressBarControl();
  objc_msgSendSuper2(&v19, "layoutSubviews");
  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_videoControlButton;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_videoControlButton];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v3, "sizeThatFits:", v4, v5);
    v7 = v6;
    v9 = v8;

    v10 = *(void **)&v0[v1];
    if (v10)
      objc_msgSend(v10, "setFrame:", 0.0, 0.0, v7, v9);
    if (qword_3CFB90 != -1)
      swift_once(&qword_3CFB90, sub_213760);
    v11 = *(double *)&qword_3DCFE0;
    objc_msgSend(v0, "bounds");
    Height = CGRectGetHeight(v20);
    if (qword_3CFB88 != -1)
      swift_once(&qword_3CFB88, sub_213750);
    v13 = v7 + v11;
    v14 = (Height - *(double *)&qword_3DCFD8) * 0.5;
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v21) - (v7 + *(double *)&qword_3DCFE0);
  }
  else
  {
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v22);
    v13 = 0.0;
    v14 = 0.0;
  }
  v16 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_backgroundBar];
  if (qword_3CFB88 != -1)
    swift_once(&qword_3CFB88, sub_213750);
  objc_msgSend(v16, "setFrame:", v13, v14, Width, *(double *)&qword_3DCFD8);
  v17 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_progressBar];
  objc_msgSend(v17, "frame");
  objc_msgSend(v17, "setFrame:", 0.0, 0.0);
  objc_msgSend(v0, "bounds");
  CGRectGetHeight(v23);
  objc_msgSend(v17, "frame");
  return objc_msgSend(v17, "setFrame:");
}

id sub_213ECC(id result)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  uint64_t v8;
  CGRect v9;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_progressType + 16) == 1)
  {
    v2 = result;
    v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_lastTimestamp;
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_lastTimestamp + 8) & 1) == 0)
    {
      v4 = *(double *)v3;
      v5 = *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_progressType + 8);
      objc_msgSend(result, "targetTimestamp");
      *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_continuousProgress) = *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_continuousProgress) + (v6 - v4) / v5;
      v7 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_progressBar);
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_backgroundBar), "bounds");
      CGRectGetWidth(v9);
      objc_msgSend(v7, "frame");
      objc_msgSend(v7, "setFrame:");
    }
    result = objc_msgSend(v2, "timestamp");
    *(_QWORD *)v3 = v8;
    *(_BYTE *)(v3 + 8) = 0;
  }
  return result;
}

id sub_21404C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressBarControl();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProgressBarControl()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews18ProgressBarControl);
}

uint64_t getEnumTagSinglePayload for ProgressType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProgressType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_214180(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_214188(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ProgressType()
{
  return &type metadata for ProgressType;
}

void sub_2141A4()
{
  char *v0;
  char *v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_videoControlButton] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_progressType];
  *(_OWORD *)v1 = xmmword_300030;
  v1[16] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_incrementalProgress] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_continuousProgress] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_displayLink] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ProgressBarControl_lastTimestamp];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ProgressBarControl.swift", 48, 2, 105, 0);
  __break(1u);
}

uint64_t ModernPageViewController.interactionContextPage.getter()
{
  return sub_21427C((uint64_t (*)(_QWORD, _QWORD))&dispatch thunk of ModernPagePresenter.interactionContextPage.getter);
}

uint64_t ModernPageViewController.interactionContextOrigin.getter()
{
  return sub_21427C((uint64_t (*)(_QWORD, _QWORD))&dispatch thunk of ModernPagePresenter.interactionContextOrigin.getter);
}

uint64_t sub_21427C(uint64_t (*a1)(_QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(*(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v1)), *(_QWORD *)((char *)&stru_20.maxprot + (swift_isaMask & *v1)));
}

uint64_t sub_2142C4()
{
  return ModernPageViewController.interactionContextPage.getter();
}

uint64_t sub_2142E4()
{
  return ModernPageViewController.interactionContextOrigin.getter();
}

uint64_t ModernPageViewController<>.perform(searchAction:sender:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return dispatch thunk of SearchPerforming.perform(searchAction:sender:)(a1, a2, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v3)), a3);
}

uint64_t sub_21435C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ModernPageViewController<>.perform(searchAction:sender:)(a1, a2, *(_QWORD *)(a4 - 8));
}

uint64_t sub_214380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  char v13;
  char v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39[5];
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _QWORD v47[5];
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _QWORD v55[5];
  uint64_t v56;
  _QWORD v57[5];
  unsigned __int8 v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  _BYTE v66[104];

  sub_143650(a2, (uint64_t)v55);
  v37 = v55[1];
  v38 = v55[0];
  v35 = v55[3];
  v36 = v55[2];
  v6 = v56;
  v34 = v55[4];
  sub_143650(a1, (uint64_t)v47);
  v7 = (void *)v47[0];
  v8 = v47[1];
  v9 = v47[2];
  v10 = v47[3];
  v11 = v47[4];
  v12 = v48;
  v32 = v50;
  v33 = v49;
  v30 = v52;
  v31 = v51;
  v29 = v53;
  v28 = v54;
  sub_143650(a1, (uint64_t)v57);
  sub_143650(a1, (uint64_t)v66);
  if (v66[89] == 1)
  {
    v25 = v57[1];
    v26 = (void *)v57[0];
    v23 = v57[3];
    v24 = v57[2];
    v21 = v59;
    v22 = v57[4];
    v19 = v61;
    v20 = v60;
    v17 = v63;
    v18 = v62;
    v27 = v6;
    v13 = v64;
    v14 = v12;
    v12 = v58;
    sub_DE20(v7, v8, v9, v10, v11, v14);
    sub_DE20(v33, v32, v31, v30, v29, v28);
    v15 = v13;
    v6 = v27;
    sub_DD48(v21, v20, v19, v18, v17, v15);
    v8 = v25;
    v7 = v26;
    v10 = v23;
    v9 = v24;
    v11 = v22;
  }
  else
  {
    sub_DE20(v7, v8, v9, v10, v11, v12);
  }
  sub_143650(a2, (uint64_t)v39);
  sub_143650(a2, (uint64_t)v57);
  if (v65 == 1)
  {
    v37 = v42;
    v38 = v41;
    v35 = v44;
    v36 = v43;
    v34 = v45;
    v6 = v46;
    sub_DD48(v39[0], (uint64_t)v39[1], (uint64_t)v39[2], (uint64_t)v39[3], (uint64_t)v39[4], v40);
  }
  result = sub_1D62F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DCC8);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v8;
  *(_QWORD *)(a3 + 16) = v9;
  *(_QWORD *)(a3 + 24) = v10;
  *(_QWORD *)(a3 + 32) = v11;
  *(_QWORD *)(a3 + 40) = v12;
  *(_QWORD *)(a3 + 48) = v38;
  *(_QWORD *)(a3 + 56) = v37;
  *(_QWORD *)(a3 + 64) = v36;
  *(_QWORD *)(a3 + 72) = v35;
  *(_QWORD *)(a3 + 80) = v34;
  *(_BYTE *)(a3 + 88) = v6;
  *(_BYTE *)(a3 + 89) = 1;
  return result;
}

uint64_t sub_2145C4()
{
  uint64_t v0;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD050);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = Cache.init(invalidateOnAppBackground:)(1);
  qword_3FD3A0 = result;
  return result;
}

Swift::Int sub_214608()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD v8[9];

  v1 = *v0;
  v2 = (void *)*((_QWORD *)v0 + 1);
  Hasher.init(_seed:)(v8, 0);
  Hasher._combine(_:)(v1);
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;
  v6 = v2;
  String.hash(into:)(v8, v3, v5);

  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

double sub_21468C(uint64_t a1)
{
  unsigned __int8 *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double result;

  v3 = (void *)*((_QWORD *)v1 + 1);
  Hasher._combine(_:)(*v1);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;
  v7 = v3;
  String.hash(into:)(a1, v4, v6);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

Swift::Int sub_2146F0(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD v9[9];

  v2 = *v1;
  v3 = (void *)*((_QWORD *)v1 + 1);
  Hasher.init(_seed:)(v9, a1);
  Hasher._combine(_:)(v2);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;
  v7 = v3;
  String.hash(into:)(v9, v4, v6);

  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

uint64_t sub_214770(uint64_t a1, uint64_t a2)
{
  return sub_214F78(*(_BYTE *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)a2, *(_QWORD *)(a2 + 8));
}

void sub_214788(char a1)
{
  __asm { BR              X10 }
}

void sub_2147CC()
{
  void *v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v17[11];
  __int16 v18;

  if (qword_3CFBA0 != -1)
    swift_once(&qword_3CFBA0, sub_2149B8);
  v1 = HIBYTE(word_3FD400);
  v2 = word_3FD400;
  v3 = qword_3FD3F8;
  v11 = qword_3FD3E8;
  v12 = qword_3FD3F0;
  v5 = qword_3FD3C0;
  v4 = qword_3FD3C8;
  v7 = qword_3FD3B0;
  v6 = qword_3FD3B8;
  v8 = (void *)qword_3FD3A8;
  v17[0] = qword_3FD3A8;
  v17[1] = qword_3FD3B0;
  v17[2] = qword_3FD3B8;
  v17[3] = qword_3FD3C0;
  v17[4] = qword_3FD3C8;
  v17[5] = qword_3FD3D0;
  v13 = qword_3FD3D0;
  v14 = (void *)qword_3FD3D8;
  v17[6] = qword_3FD3D8;
  v17[7] = qword_3FD3E0;
  v15 = qword_3FD3E0;
  v17[8] = qword_3FD3E8;
  v17[9] = qword_3FD3F0;
  v17[10] = qword_3FD3F8;
  v18 = word_3FD400;
  sub_DDA0((void *)qword_3FD3A8, qword_3FD3B0, qword_3FD3B8, qword_3FD3C0, qword_3FD3C8, qword_3FD3D0, (void *)qword_3FD3D8, qword_3FD3E0, qword_3FD3E8, qword_3FD3F0, qword_3FD3F8, word_3FD400, SHIBYTE(word_3FD400));
  v9 = sub_1D5728((uint64_t)v17, v0);
  v10 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v9, 0.0);

  sub_DCC8(v8, v7, v6, v5, v4, v13, v14, v15, v11, v12, v3, v2, v1);
  *v16 = v10;
}

uint64_t sub_2149B8()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF4C0 != -1)
    swift_once(&qword_3CF4C0, sub_13FD20);
  sub_143650((uint64_t)&qword_3FB4F0, (uint64_t)v1);
  sub_1D62F8((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  if (qword_3CF4F0 != -1)
    swift_once(&qword_3CF4F0, sub_13FF60);
  sub_143650((uint64_t)&qword_3FB730, (uint64_t)v2);
  sub_1D62F8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FD3A8);
}

uint64_t sub_214A74()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF478 != -1)
    swift_once(&qword_3CF478, sub_13F9C0);
  sub_143650((uint64_t)&qword_3FB190, (uint64_t)v1);
  sub_1D62F8((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  if (qword_3CF490 != -1)
    swift_once(&qword_3CF490, sub_13FAE0);
  sub_143650((uint64_t)&qword_3FB2B0, (uint64_t)v2);
  sub_1D62F8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FD408);
}

uint64_t sub_214B30()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF480 != -1)
    swift_once(&qword_3CF480, sub_13FA20);
  sub_143650((uint64_t)&qword_3FB1F0, (uint64_t)v1);
  sub_1D62F8((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  if (qword_3CF498 != -1)
    swift_once(&qword_3CF498, sub_13FB40);
  sub_143650((uint64_t)&qword_3FB310, (uint64_t)v2);
  sub_1D62F8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FD468);
}

uint64_t sub_214BEC()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF4A8 != -1)
    swift_once(&qword_3CF4A8, sub_13FC00);
  sub_143650((uint64_t)&qword_3FB3D0, (uint64_t)v1);
  sub_1D62F8((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  sub_143650((uint64_t)&qword_3FB490, (uint64_t)v2);
  sub_1D62F8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FD4C8);
}

uint64_t sub_214CA8()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF4A8 != -1)
    swift_once(&qword_3CF4A8, sub_13FC00);
  sub_143650((uint64_t)&qword_3FB3D0, (uint64_t)v1);
  sub_1D62F8((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  if (qword_3CF4D0 != -1)
    swift_once(&qword_3CF4D0, sub_13FDE0);
  sub_143650((uint64_t)&qword_3FB5B0, (uint64_t)v2);
  sub_1D62F8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FD528);
}

uint64_t storeEnumTagSinglePayload for EpisodeInfoViewElement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_214DB0 + 4 * byte_3000FD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_214DE4 + 4 * byte_3000F8[v4]))();
}

uint64_t sub_214DE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_214DEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x214DF4);
  return result;
}

uint64_t sub_214E00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x214E08);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_214E0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_214E14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeInfoViewElement()
{
  return &type metadata for EpisodeInfoViewElement;
}

uint64_t initializeBufferWithCopyOfBuffer for EpisodeInfoViewElement.EpisodeInfoViewElementKey(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for EpisodeInfoViewElement.EpisodeInfoViewElementKey(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for EpisodeInfoViewElement.EpisodeInfoViewElementKey(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for EpisodeInfoViewElement.EpisodeInfoViewElementKey()
{
  return &type metadata for EpisodeInfoViewElement.EpisodeInfoViewElementKey;
}

unint64_t sub_214EEC()
{
  unint64_t result;

  result = qword_3DD058;
  if (!qword_3DD058)
  {
    result = swift_getWitnessTable(&unk_30016C, &type metadata for EpisodeInfoViewElement.EpisodeInfoViewElementKey);
    atomic_store(result, (unint64_t *)&qword_3DD058);
  }
  return result;
}

unint64_t sub_214F34()
{
  unint64_t result;

  result = qword_3DD060;
  if (!qword_3DD060)
  {
    result = swift_getWitnessTable(&unk_300214, &type metadata for EpisodeInfoViewElement);
    atomic_store(result, (unint64_t *)&qword_3DD060);
  }
  return result;
}

uint64_t sub_214F78(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  if (a1 == a3)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v7 = v6;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v10 = v8;
    if (v5 == v9 && v7 == v8)
      v11 = 1;
    else
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v9, v8, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

void sub_215018(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  Class v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _BYTE *v22;
  char isEscapingClosureAtFileLocation;
  _QWORD v24[5];
  uint64_t v25;

  v2 = v1;
  v4 = sub_21526C();
  v5 = SizeClass.rawValue.getter(a1);
  if (v5 != SizeClass.rawValue.getter(v4))
  {
    v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_bannerView];
    v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell____lazy_storage___sizeClass;
    v8 = *(unsigned __int8 *)(v6 + qword_3D96C0);
    *(_BYTE *)(v6 + qword_3D96C0) = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell____lazy_storage___sizeClass];
    sub_17D3E4(v8);
    LODWORD(v6) = v2[v7];
    v9 = (void *)objc_opt_self(NSLayoutConstraint);
    v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_viewConstraints;
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_viewConstraints];
    sub_12D34();
    swift_bridgeObjectRetain(v11);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

    v13 = sub_2154F0(v6);
    v14 = *(_QWORD *)&v2[v10];
    *(_QWORD *)&v2[v10] = v13;
    swift_bridgeObjectRelease(v14);
    v15 = *(_QWORD *)&v2[v10];
    swift_bridgeObjectRetain(v15);
    v16 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "activateConstraints:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

    v17 = (void *)objc_opt_self(UIView);
    v18 = swift_allocObject(&unk_38BC48, 24, 7);
    *(_QWORD *)(v18 + 16) = v2;
    v19 = swift_allocObject(&unk_38BC70, 32, 7);
    *(_QWORD *)(v19 + 16) = sub_181678;
    *(_QWORD *)(v19 + 24) = v18;
    v24[4] = sub_101EC;
    v25 = v19;
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 1107296256;
    v24[2] = sub_920D4;
    v24[3] = &block_descriptor_51;
    v20 = _Block_copy(v24);
    v21 = v25;
    v22 = v2;
    swift_retain(v19);
    objc_msgSend(v17, "performWithoutAnimation:", v20, swift_release(v21).n128_f64[0]);
    _Block_release(v20);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v19, "", 128, 32, 44, 1);
    swift_release(v18);
    swift_release(v19);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_21526C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t result;
  double Width;
  CGRect v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell____lazy_storage___sizeClass;
  result = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell____lazy_storage___sizeClass];
  if ((_DWORD)result == 8)
  {
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v4);
    result = SizeClass.init(width:)(Width);
    v0[v1] = result;
  }
  return result;
}

char *sub_2152B4(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  unsigned int v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  Class isa;
  objc_super v29;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_imageProvider];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_bannerView;
  v15 = objc_allocWithZone((Class)type metadata accessor for UpsellBannerView(0));
  v16 = v4;
  *(_QWORD *)&v4[v14] = sub_17D618(0);
  v16[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell____lazy_storage___sizeClass] = 8;
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_viewConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_objectGraph] = 0;

  v29.receiver = v16;
  v29.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v29, "initWithFrame:", a1, a2, a3, a4);
  static UIBackgroundConfiguration.clear()(v17);
  v18 = type metadata accessor for UIBackgroundConfiguration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 0, 1, v18);
  UICollectionViewCell.backgroundConfiguration.setter(v12);
  v19 = *(void **)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_bannerView];
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = objc_msgSend(v17, "contentView");
  objc_msgSend(v20, "addSubview:", v19);

  v21 = sub_21526C();
  v22 = sub_2154F0(v21);
  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_viewConstraints;
  v24 = *(_QWORD *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_viewConstraints];
  *(_QWORD *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_viewConstraints] = v22;
  swift_bridgeObjectRelease(v24);
  v25 = (void *)objc_opt_self(NSLayoutConstraint);
  v26 = *(_QWORD *)&v17[v23];
  sub_12D34();
  swift_bridgeObjectRetain(v26);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "activateConstraints:", isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

  return v17;
}

_QWORD *sub_2154F0(unsigned int a1)
{
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v39;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_bannerView];
  v4 = objc_msgSend(v3, "topAnchor");
  v5 = objc_msgSend(v1, "contentView");
  v6 = objc_msgSend(v5, "topAnchor");

  v7 = objc_msgSend(v4, "constraintEqualToAnchor:", v6);
  v8 = objc_msgSend(v3, "bottomAnchor");
  v9 = objc_msgSend(v1, "contentView");
  v10 = objc_msgSend(v9, "bottomAnchor");

  v11 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);
  v12 = objc_msgSend(v3, "leadingAnchor");
  v13 = objc_msgSend(v1, "contentView");
  v14 = objc_msgSend(v13, "leadingAnchor");

  v15 = objc_msgSend(v12, "constraintEqualToAnchor:", v14);
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v39 = _swiftEmptyArrayStorage;
    else
      v39 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v17 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v18 = v17 + 3;
    if (!__OFADD__(v17, 3))
    {
LABEL_3:
      v19 = sub_215E80(v18, 1);
      specialized Array._endMutation()(v19);
      v7 = v7;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v17 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      v16 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      if (v17 < v16 >> 1)
        goto LABEL_4;
      goto LABEL_22;
    }
  }
  else
  {
    v16 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8;
    v17 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8));
    v18 = v17 + 3;
    if (!__OFADD__(v17, 3))
      goto LABEL_3;
  }
  __break(1u);
LABEL_22:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
LABEL_4:
  v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v7);
  specialized Array._endMutation()(v20);
  v21 = v11;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
  v23 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v22 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v23 >= v22 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
  v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
  specialized Array._endMutation()(v24);
  v25 = v15;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
  v27 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v26 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v27 >= v26 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
  v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
  specialized Array._endMutation()(v28);

  if ((SizeClass.isWideHorizontal.getter(a1) & 1) != 0)
  {
    v29 = objc_msgSend(v3, "widthAnchor");
    if (qword_3CF768 != -1)
      swift_once(&qword_3CF768, sub_17D3D0);
    v30 = objc_msgSend(v29, "constraintEqualToConstant:", *(double *)&qword_3FCA98);

  }
  else
  {
    v32 = objc_msgSend(v3, "trailingAnchor");
    v33 = objc_msgSend(v2, "contentView");
    v34 = objc_msgSend(v33, "trailingAnchor");

    v30 = objc_msgSend(v32, "constraintEqualToAnchor:", v34);
  }
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v36 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v35 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v36 >= v35 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
  v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v30);
  specialized Array._endMutation()(v37);
  return _swiftEmptyArrayStorage;
}

void sub_2159A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  _BYTE v14[24];
  _QWORD v15[5];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_objectGraph) = a1;
  swift_release(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v15, v5, v5);
  v6 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_imageProvider;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_imageProvider, v14, 33, 0);
  sub_215DEC((uint64_t)v15, v6);
  swift_endAccess(v14);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_bannerView);
  v8 = *(_QWORD *)(v7 + qword_3D9750);
  *(_QWORD *)(v7 + qword_3D9750) = a1;
  swift_release(v8);
  v9 = (uint64_t *)(*(_QWORD *)(v7 + qword_3D96E8)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph);
  swift_beginAccess(v9, v15, 1, 0);
  v10 = *v9;
  *v9 = a1;
  swift_retain_n(a1, 2);
  swift_release(v10);
  v11 = (char *)SubscriptionNameAreaView.channelLinkButton.getter();
  v12 = &v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph];
  swift_beginAccess(&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph], v14, 1, 0);
  v13 = *(_QWORD *)v12;
  *(_QWORD *)v12 = a1;
  swift_release(v13);
  swift_retain(a1);

}

uint64_t type metadata accessor for UpsellBannerCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews16UpsellBannerCell);
}

void sub_215B70(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_bannerView);
  sub_17C3DC(*a1);
  v3 = sub_21526C();
  v4 = *(unsigned __int8 *)(v2 + qword_3D96C0);
  *(_BYTE *)(v2 + qword_3D96C0) = v3;
  sub_17D3E4(v4);
}

uint64_t sub_215BD4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_objectGraph));
}

void sub_215BE4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = ShelfAttributes.sizeClass.getter();
  v2 = sub_21526C();
  *(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell____lazy_storage___sizeClass) = v1;
  sub_215018(v2);
}

uint64_t sub_215C2C(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DD0D8, v3, (uint64_t (*)(uint64_t))type metadata accessor for UpsellBannerCell, (uint64_t)&unk_3003CC);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_215C84()
{
  if (qword_3CF760 != -1)
    swift_once(&qword_3CF760, sub_17D3BC);
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, *(double *)&qword_3FCA90);
}

uint64_t sub_215CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DD0D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for UpsellBannerCell, (uint64_t)&unk_3003CC);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_215D0C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DD0B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for UpsellBannerCell, (uint64_t)&unk_3002A4);
}

uint64_t sub_215D38(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C10, a2, (uint64_t (*)(uint64_t))type metadata accessor for UpsellBannerCell, (uint64_t)&unk_30032C);
}

uint64_t sub_215D64(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DD0C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for UpsellBannerCell, (uint64_t)&unk_300304);
}

uint64_t sub_215D90(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DD0C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for UpsellBannerCell, (uint64_t)&unk_30035C);
}

uint64_t sub_215DBC()
{
  return sub_239FC(&qword_3DD0D0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UpsellBanner, (uint64_t)&protocol conformance descriptor for UpsellBanner);
}

uint64_t sub_215DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_215E34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_215E58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_51(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_51(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_215E80(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((char *)&dword_18 + (v5 & 0xFFFFFFFFFFFFF8)) >> 1)
      return result;
    v7 = 1;
  }
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

void sub_215F3C()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  id v3;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_imageProvider];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_bannerView;
  v3 = objc_allocWithZone((Class)type metadata accessor for UpsellBannerView(0));
  *(_QWORD *)&v0[v2] = sub_17D618(0);
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell____lazy_storage___sizeClass] = 8;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_viewConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16UpsellBannerCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UpsellBannerCell.swift", 46, 2, 59, 0);
  __break(1u);
}

uint64_t sub_21602C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1230);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_21606C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v0 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v1 = (void *)static UIFont.body.getter(v0);
  v2 = (void *)static UIFont.title3.getter(v1);
  v3 = static UIFont.preferredFont(iOS:mac:)(v1, v2);

  qword_3DD0E0 = v3;
}

void sub_2160D8()
{
  qword_3DD0E8 = 0x4024000000000000;
}

void sub_2160E8()
{
  qword_3DD0F0 = 0;
}

id sub_2160F4()
{
  NSString v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v0);

  v2 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v1);
  v3 = qword_3CFBC8;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_3CFBC8, sub_21606C);
  v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", qword_3DD0E0, 2);
  objc_msgSend(v4, "setPreferredSymbolConfiguration:", v5);

  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v4;
}

id sub_216214()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell____lazy_storage___iconForcedToTrailingEdgeConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell____lazy_storage___iconForcedToTrailingEdgeConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell____lazy_storage___iconForcedToTrailingEdgeConstraint];
  }
  else
  {
    v4 = objc_msgSend(v0, "contentView");
    v5 = objc_msgSend(v4, "layoutMarginsGuide");

    v6 = objc_msgSend(v5, "trailingAnchor");
    v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_iconView], "trailingAnchor");
    if (qword_3CFBD8 != -1)
      swift_once(&qword_3CFBD8, sub_2160E8);
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, *(double *)&qword_3DD0F0);

    v9 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

char *sub_216344(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(_QWORD *, _QWORD);
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD);
  uint64_t v22;
  id v23;
  void (*v24)(_QWORD *, _QWORD);
  id v25;
  void (*v26)(_QWORD *, _QWORD);
  void *v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  Class isa;
  double v64;
  uint64_t v66;
  objc_class *ObjectType;
  objc_super v68;
  _QWORD v69[4];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for UIListContentConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v66 - v15;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_objectGraph] = 0;
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_listContent;
  v18 = v4;
  static UIListContentConfiguration.cell()();
  UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter(0);
  v19 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.directionalLayoutMargins.modify(v69);
  *(_QWORD *)(v20 + 8) = 0;
  v19(v69, 0);
  v21 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.directionalLayoutMargins.modify(v69);
  *(_QWORD *)(v22 + 24) = 0;
  v21(v69, 0);
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  v23 = (id)qword_3D0890;
  v24 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v69);
  UIListContentConfiguration.TextProperties.color.setter(v23);
  v24(v69, 0);
  if (qword_3CFBC8 != -1)
    swift_once(&qword_3CFBC8, sub_21606C);
  v25 = (id)qword_3DD0E0;
  v26 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v69);
  UIListContentConfiguration.TextProperties.font.setter(v25);
  v26(v69, 0);
  sub_E710(0, &qword_3DD170, UIListContentView_ptr);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  v27 = (void *)UIListContentView.init(configuration:)(v13);
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  *(_QWORD *)&v5[v17] = v27;
  v28 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_iconView;
  *(_QWORD *)&v18[v28] = sub_2160F4();
  *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell____lazy_storage___iconForcedToTrailingEdgeConstraint] = 0;

  v68.receiver = v18;
  v68.super_class = ObjectType;
  v29 = (char *)objc_msgSendSuper2(&v68, "initWithFrame:", a1, a2, a3, a4);
  v30 = objc_msgSend(v29, "contentView");
  v31 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_listContent;
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_listContent]);

  v32 = objc_msgSend(v29, "contentView");
  v33 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_iconView;
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_iconView]);

  ObjectType = (objc_class *)objc_opt_self(NSLayoutConstraint);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v35 = swift_allocObject(v34, 80, 7);
  *(_OWORD *)(v35 + 16) = xmmword_2EFC70;
  v36 = objc_msgSend(v29, "contentView");
  v37 = objc_msgSend(v36, "topAnchor");

  v38 = objc_msgSend(*(id *)&v29[v31], "topAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v35 + 32) = v39;
  v40 = objc_msgSend(v29, "contentView");
  v41 = objc_msgSend(v40, "layoutMarginsGuide");

  v42 = objc_msgSend(v41, "leadingAnchor");
  v43 = objc_msgSend(*(id *)&v29[v31], "leadingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v35 + 40) = v44;
  v45 = objc_msgSend(v29, "contentView");
  v46 = objc_msgSend(v45, "bottomAnchor");

  v47 = objc_msgSend(*(id *)&v29[v31], "bottomAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

  *(_QWORD *)(v35 + 48) = v48;
  v49 = objc_msgSend(*(id *)&v29[v33], "leadingAnchor");
  v50 = objc_msgSend(*(id *)&v29[v31], "trailingAnchor");
  if (qword_3CFBD0 != -1)
    swift_once(&qword_3CFBD0, sub_2160D8);
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v50, *(double *)&qword_3DD0E8);

  *(_QWORD *)(v35 + 56) = v51;
  v52 = objc_msgSend(v29, "contentView");
  v53 = objc_msgSend(v52, "centerYAnchor");

  v54 = objc_msgSend(*(id *)&v29[v33], "centerYAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v35 + 64) = v55;
  v56 = objc_msgSend(v29, "contentView");
  v57 = objc_msgSend(v56, "layoutMarginsGuide");

  v58 = objc_msgSend(v57, "trailingAnchor");
  v59 = objc_msgSend(*(id *)&v29[v33], "trailingAnchor");
  if (qword_3CFBD8 != -1)
    swift_once(&qword_3CFBD8, sub_2160E8);
  v60 = objc_msgSend(v58, "constraintGreaterThanOrEqualToAnchor:constant:", v59, *(double *)&qword_3DD0F0);

  *(_QWORD *)(v35 + 72) = v60;
  v69[0] = v35;
  specialized Array._endMutation()(v61);
  v62 = v69[0];
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v64 = swift_bridgeObjectRelease(v62).n128_u64[0];
  -[objc_class activateConstraints:](ObjectType, "activateConstraints:", isa, v64);

  return v29;
}

uint64_t type metadata accessor for ExternalLinkCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews16ExternalLinkCell);
}

uint64_t sub_216C00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  _QWORD *boxed_opaque_existential_0;
  id v16;
  _QWORD v19[5];

  v2 = v1;
  v4 = type metadata accessor for UIListContentConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_listContent;
  v11 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_listContent);
  swift_bridgeObjectRetain(v9);
  v12 = v11;
  UIListContentView.configuration.getter(v19);

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD160);
  swift_dynamicCast(v7, v19, v13, v4, 7);
  UIListContentConfiguration.text.setter(v8);
  v14 = *(void **)(v2 + v10);
  v19[3] = v4;
  v19[4] = &protocol witness table for UIListContentConfiguration;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v19);
  (*(void (**)(_QWORD *, char *, uint64_t))(v5 + 16))(boxed_opaque_existential_0, v7, v4);
  v16 = v14;
  UIListContentView.configuration.setter(v19);

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_216D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShelfCellListSeparatorMode(0);
  __swift_allocate_value_buffer(v8, qword_3FD588);
  __swift_project_value_buffer(v8, (uint64_t)qword_3FD588);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ShelfCellListSeparatorMode.Layout.marginToMargin(_:), v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Placement.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v3, v7);
}

uint64_t sub_216E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3CFBE0 != -1)
    swift_once(&qword_3CFBE0, sub_216D24);
  v2 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_3FD588);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_216EB0()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_objectGraph));
}

uint64_t sub_216EC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_216EF4(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DD168, v3, (uint64_t (*)(uint64_t))type metadata accessor for ExternalLinkCell, (uint64_t)&unk_300644);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

void sub_216F4C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000315770, "ShelfKitCollectionViews/ExternalLinkCell.swift", 46, 2, 134, 0);
  __break(1u);
}

uint64_t sub_216FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DD168, a2, (uint64_t (*)(uint64_t))type metadata accessor for ExternalLinkCell, (uint64_t)&unk_300644);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_216FD8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DD140, a2, (uint64_t (*)(uint64_t))type metadata accessor for ExternalLinkCell, (uint64_t)&unk_3004C4);
}

uint64_t sub_217004(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5CC8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ExternalLinkCell, (uint64_t)&unk_30054C);
}

uint64_t sub_217030(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DD148, a2, (uint64_t (*)(uint64_t))type metadata accessor for ExternalLinkCell, (uint64_t)&unk_300524);
}

uint64_t sub_21705C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DD150, a2, (uint64_t (*)(uint64_t))type metadata accessor for ExternalLinkCell, (uint64_t)&unk_30057C);
}

uint64_t sub_217088(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DD158, a2, (uint64_t (*)(uint64_t))type metadata accessor for ExternalLinkCell, (uint64_t)&unk_3005A4);
}

void sub_2170B4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t *, _QWORD);
  uint64_t v12;
  void (*v13)(uint64_t *, _QWORD);
  uint64_t v14;
  id v15;
  void (*v16)(uint64_t *, _QWORD);
  id v17;
  void (*v18)(uint64_t *, _QWORD);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for UIListContentConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v21 - v8;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_objectGraph] = 0;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_listContent;
  static UIListContentConfiguration.cell()(v7);
  UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter(0);
  v11 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.directionalLayoutMargins.modify(&v21);
  *(_QWORD *)(v12 + 8) = 0;
  v11(&v21, 0);
  v13 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.directionalLayoutMargins.modify(&v21);
  *(_QWORD *)(v14 + 24) = 0;
  v13(&v21, 0);
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  v15 = (id)qword_3D0890;
  v16 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.textProperties.modify(&v21);
  UIListContentConfiguration.TextProperties.color.setter(v15);
  v16(&v21, 0);
  if (qword_3CFBC8 != -1)
    swift_once(&qword_3CFBC8, sub_21606C);
  v17 = (id)qword_3DD0E0;
  v18 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.textProperties.modify(&v21);
  UIListContentConfiguration.TextProperties.font.setter(v17);
  v18(&v21, 0);
  sub_E710(0, &qword_3DD170, UIListContentView_ptr);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  v19 = (void *)UIListContentView.init(configuration:)(v5);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  *(_QWORD *)&v1[v10] = v19;
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell_iconView;
  *(_QWORD *)&v1[v20] = sub_2160F4();
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ExternalLinkCell____lazy_storage___iconForcedToTrailingEdgeConstraint] = 0;

  v21 = 0;
  v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v22);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ExternalLinkCell.swift", 46, 2, 105, 0);
  __break(1u);
}

_QWORD *EpisodeStateControlsPresenter.deinit()
{
  _QWORD *v0;

  sub_10DBC8((uint64_t)(v0 + 2));
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 9);
  return v0;
}

uint64_t EpisodeStateControlsPresenter.__deallocating_deinit()
{
  _QWORD *v0;

  sub_10DBC8((uint64_t)(v0 + 2));
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 9);
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t sub_2173C4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = v1;
  v4 = type metadata accessor for DownloadButtonPresenter.Data(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for BookmarkButtonPresenter.Data(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = v1[5];
  v1[5] = a1;
  v13 = swift_release(v12);
  v14 = type metadata accessor for LibraryEpisodeLockup(0, v13);
  v15 = swift_dynamicCastClass(a1, v14);
  v16 = swift_retain(a1);
  if (v15)
  {
    *v11 = LibraryEpisodeLockup.uuid.getter(v16);
    v11[1] = v17;
    v18 = (unsigned int *)&enum case for BookmarkButtonPresenter.Data.uuid(_:);
  }
  else
  {
    *v11 = LegacyLockup.adamId.getter(v16);
    v18 = (unsigned int *)&enum case for BookmarkButtonPresenter.Data.adamId(_:);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *v18, v8);
  v19 = v2[8];
  v20 = type metadata accessor for BookmarkButtonPresenter(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = swift_retain(v19);
  v22 = BookmarkButtonPresenter.init(data:graph:)(v11, v19, v21);
  v23 = v2[6];
  v2[6] = v22;
  swift_retain(v22);
  swift_release(v23);
  v25 = v2[6];
  if (v25)
  {
    sub_239FC(&qword_3DD268, v24, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeStateControlsPresenter, (uint64_t)&protocol conformance descriptor for EpisodeStateControlsPresenter);
    swift_retain(v25);
    v26 = swift_retain(v2);
    dispatch thunk of BookmarkButtonPresenter.delegate.setter(v26);
    swift_release(v22);
    v27 = v25;
  }
  else
  {
    v27 = v22;
  }
  swift_release(v27);
  if (swift_dynamicCastClass(a1, v14))
  {
    v28 = swift_retain(a1);
    v29 = LibraryEpisodeLockup.uuid.getter(v28);
    v31 = v30;
    v32 = swift_release(a1);
    *v7 = v29;
    v7[1] = v31;
    (*(void (**)(uint64_t *, _QWORD, uint64_t, __n128))(v5 + 104))(v7, enum case for DownloadButtonPresenter.Data.uuid(_:), v4, v32);
  }
  else
  {
    *v7 = a1;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DownloadButtonPresenter.Data.lockup(_:), v4);
    v33 = swift_retain(a1);
  }
  v34 = type metadata accessor for DownloadButtonPresenter(0, v33);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v35 = swift_retain(v19);
  v36 = DownloadButtonPresenter.init(data:graph:)(v7, v19, v35);
  v37 = v2[7];
  v2[7] = v36;
  swift_retain(v36);
  swift_release(v37);
  v39 = v2[7];
  if (v39)
  {
    v40 = sub_239FC(&qword_3DD270, v38, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeStateControlsPresenter, (uint64_t)&protocol conformance descriptor for EpisodeStateControlsPresenter);
    swift_retain(v2);
    v41 = swift_retain(v39);
    dispatch thunk of DownloadButtonPresenter.delegate.setter(v2, v40, v41);
    swift_release(v36);
    v42 = v39;
  }
  else
  {
    v42 = v36;
  }
  swift_release(v42);
  result = swift_unknownObjectWeakLoadStrong(v2 + 2);
  if (result)
  {
    v44 = result;
    v45 = *(char **)(result + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge);
    v47 = v2[6];
    v46 = v2[7];
    v48 = OBJC_IVAR____TtC23ShelfKitCollectionViews13BookmarkBadge_bookmarkButtonPresenter;
    v49 = *(_QWORD *)&v45[OBJC_IVAR____TtC23ShelfKitCollectionViews13BookmarkBadge_bookmarkButtonPresenter];
    *(_QWORD *)&v45[OBJC_IVAR____TtC23ShelfKitCollectionViews13BookmarkBadge_bookmarkButtonPresenter] = v47;
    swift_retain_n(v47, 3);
    swift_retain(v46);
    swift_release(v49);
    v50 = *(_QWORD *)&v45[v48];
    if (v50)
    {
      v51 = sub_239FC(&qword_3DD278, 255, type metadata accessor for BookmarkBadge, (uint64_t)&unk_304EF0);
      swift_retain(v50);
      v52 = v45;
      dispatch thunk of BookmarkButtonPresenter.view.setter(v45, v51);
      swift_release(v47);
      v53 = v50;
    }
    else
    {
      v53 = v47;
    }
    swift_release(v53);
    swift_retain(v46);
    sub_FB04C(v54);
    swift_release(v47);
    swift_unknownObjectRelease(v44);
    return swift_release_n(v46, 2);
  }
  return result;
}

uint64_t EpisodeStateControlsPresenter.downloadButtonPresenter(_:didWireViewWithInitialState:)()
{
  return sub_217D44();
}

uint64_t EpisodeStateControlsPresenter.downloadButtonPresenter(_:stateDidChange:)()
{
  return sub_217DC4();
}

double sub_2177B0()
{
  uint64_t v0;
  uint64_t Strong;
  double result;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  _BYTE v15[24];

  if (*(_BYTE *)(v0 + 34) == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
    if (!Strong)
      return result;
    v3 = Strong;
    v15[0] = 1;
    sub_2B671C(v15);
    v4 = v3;
LABEL_12:
    *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
    return result;
  }
  v5 = *(unsigned __int8 *)(v0 + 33);
  v6 = swift_unknownObjectWeakLoadStrong(v0 + 16);
  v7 = v6;
  if (v5 != 1)
  {
    if (!v6)
      return result;
    v15[0] = 0;
    sub_2B671C(v15);
    v4 = v7;
    goto LABEL_12;
  }
  if (v6)
  {
    v8 = *(void **)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge);
    if (qword_3CEFE8 != -1)
    {
      v14 = *(void **)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge);
      swift_once(&qword_3CEFE8, sub_DF80);
      v8 = v14;
    }
    v9 = qword_3D0890;
    objc_msgSend(v8, "setTintColor:", qword_3D0890);
    objc_msgSend(*(id *)(*(_QWORD *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton)+ OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_button), "setTintColor:", v9);
    v10 = *(_BYTE **)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge);
    v10[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_episodeCellState] = 2;
    objc_msgSend(v10, "setTintColor:", v9);
    v11 = *(char **)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressView];
    if (v11)
    {
      v12 = &v11[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState];
      swift_beginAccess(&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState], v15, 1, 0);
      *v12 = 2;
      v13 = v11;
      sub_15370C();
      swift_unknownObjectRelease(v7);

    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
    }
  }
  return result;
}

void sub_217968(char a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  char v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 48);
  if (v2)
  {
    v4 = swift_retain(*(_QWORD *)(v1 + 48));
    if ((dispatch thunk of BookmarkButtonPresenter.currentState.getter(v4) & 1) != 0)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (Strong)
      {
        v8 = Strong;
LABEL_9:
        v10 = *(void **)(v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge);
        v11 = a1 & 1;
        v12 = 0;
LABEL_10:
        sub_2B68F8(v12, v10, v11);
        swift_release(v2);
        swift_unknownObjectRelease(v8);
        return;
      }
    }
    else
    {
      v5 = *(unsigned __int8 *)(v1 + 32);
      v6 = *(unsigned __int8 *)(v1 + 33);
      v7 = swift_unknownObjectWeakLoadStrong(v1 + 16);
      v8 = v7;
      if (v6 == 1)
      {
        if (!v7)
          goto LABEL_16;
        goto LABEL_9;
      }
      if (v5)
      {
        if (v7)
        {
          v10 = *(void **)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge);
          v11 = a1 & 1;
          v12 = 1;
          goto LABEL_10;
        }
      }
      else if (v7)
      {
        v10 = *(void **)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge);
        v11 = a1 & 1;
        v12 = 2;
        goto LABEL_10;
      }
    }
LABEL_16:
    swift_release(v2);
  }
}

uint64_t sub_217A74(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t Strong;
  uint64_t v10;
  void *v11;
  char v12;
  unsigned __int8 v13;
  uint64_t v14;
  char v15;
  int v16;
  int v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v1 + 40);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 56);
    if (v3)
    {
      v4 = result;
      swift_retain(*(_QWORD *)(v1 + 40));
      v5 = swift_retain(v3);
      v6 = LegacyEpisodeLockup.episodeEntitlementState.getter(v5);
      v7 = dispatch thunk of DownloadButtonPresenter.currentState.getter();
      if (v6 == 2)
      {
        Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
        if (Strong)
        {
          v10 = Strong;
LABEL_6:
          v11 = *(void **)(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge);
          v12 = v4 & 1;
          v13 = 2;
LABEL_13:
          sub_2B68F8(v13, v11, v12);
          swift_release(v3);
          swift_unknownObjectRelease(v10);
          return swift_release(v2);
        }
      }
      else
      {
        v14 = v7;
        v15 = v8;
        v16 = *(unsigned __int8 *)(v1 + 33);
        v17 = *(unsigned __int8 *)(v1 + 32);
        v18 = swift_unknownObjectWeakLoadStrong(v1 + 16);
        v10 = v18;
        if ((v15 & 1) == 0 || v14 || v16)
        {
          if (v18)
          {
            v11 = *(void **)(v18 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge);
            v12 = v4 & 1;
            v13 = 0;
            goto LABEL_13;
          }
        }
        else if (v17)
        {
          if (v18)
          {
            v11 = *(void **)(v18 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge);
            v12 = v4 & 1;
            v13 = 1;
            goto LABEL_13;
          }
        }
        else if (v18)
        {
          goto LABEL_6;
        }
      }
      swift_release(v3);
      return swift_release(v2);
    }
  }
  return result;
}

uint64_t sub_217BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[5];

  v4 = v3[5];
  if (!v4)
    return 0;
  v8 = v3 + 9;
  v10 = v3[12];
  v9 = v3[13];
  __swift_project_boxed_opaque_existential_1(v8, v10);
  v13[3] = type metadata accessor for LegacyEpisodeLockup(0);
  v13[4] = sub_239FC((unint64_t *)&qword_3D7600, 255, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
  v13[0] = v4;
  swift_retain_n(v4, 2);
  v11 = EpisodeControllerProtocol.contextMenuConfiguration(asPartOf:for:selectedModels:presentationSource:interactionContext:)(a1, v13, _swiftEmptyArrayStorage, a2, a3, v10, v9);
  swift_release(v4);
  __swift_destroy_boxed_opaque_existential_0(v13);
  return v11;
}

uint64_t sub_217CA8(char a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  __int128 v9[2];

  v4 = a1 & 1;
  *(_QWORD *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit(v2 + 16, 0);
  *(_WORD *)(v2 + 33) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  v6 = type metadata accessor for BaseObjectGraph(0);
  v7 = swift_retain(a2);
  inject<A, B>(_:from:)(v9, v5, a2, v5, v6, v7);
  sub_1B738(v9, v2 + 72);
  return v2;
}

uint64_t sub_217D44()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    v3 = *(unsigned __int8 *)(v0 + 33);
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge), "setUserInteractionEnabled:", v3);
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge), "setUserInteractionEnabled:", v3);
    swift_unknownObjectRelease(v2);
  }
  sub_2177B0();
  sub_217968(0);
  return sub_217A74(0);
}

uint64_t sub_217DC4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    v3 = *(unsigned __int8 *)(v0 + 33);
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge), "setUserInteractionEnabled:", v3);
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge), "setUserInteractionEnabled:", v3);
    swift_unknownObjectRelease(v2);
  }
  sub_2177B0();
  sub_217968(1);
  return sub_217A74(1);
}

uint64_t type metadata accessor for EpisodeStateControlsPresenter()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews29EpisodeStateControlsPresenter);
}

uint64_t method lookup function for EpisodeStateControlsPresenter(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for EpisodeStateControlsPresenter);
}

uint64_t storeEnumTagSinglePayload for BadgeVisibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_217EBC + 4 * byte_300695[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_217EF0 + 4 * byte_300690[v4]))();
}

uint64_t sub_217EF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_217EF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x217F00);
  return result;
}

uint64_t sub_217F0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x217F14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_217F18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_217F20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BadgeVisibility()
{
  return &type metadata for BadgeVisibility;
}

uint64_t storeEnumTagSinglePayload for EpisodeStateControlsLayoutType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_217F88 + 4 * byte_30069F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_217FBC + 4 * byte_30069A[v4]))();
}

uint64_t sub_217FBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_217FC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x217FCCLL);
  return result;
}

uint64_t sub_217FD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x217FE0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_217FE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_217FEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeStateControlsLayoutType()
{
  return &type metadata for EpisodeStateControlsLayoutType;
}

unint64_t sub_21800C()
{
  unint64_t result;

  result = qword_3DD258;
  if (!qword_3DD258)
  {
    result = swift_getWitnessTable(&unk_300850, &type metadata for EpisodeStateControlsLayoutType);
    atomic_store(result, (unint64_t *)&qword_3DD258);
  }
  return result;
}

unint64_t sub_218054()
{
  unint64_t result;

  result = qword_3DD260;
  if (!qword_3DD260)
  {
    result = swift_getWitnessTable(&unk_3008B8, &type metadata for BadgeVisibility);
    atomic_store(result, (unint64_t *)&qword_3DD260);
  }
  return result;
}

void sub_2181F8(void *a1)
{
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;

  _StringGuts.grow(_:)(45);
  ObjectType = swift_getObjectType();
  v2 = _typeName(_:qualified:)(ObjectType, 0);
  v4 = v3;
  swift_bridgeObjectRelease(0xE000000000000000);
  v5._object = (void *)0x8000000000315910;
  v5._countAndFlagsBits = 0xD00000000000002BLL;
  String.append(_:)(v5);
  NSLog(_:_:)(v2, v4, &_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v4);

}

uint64_t type metadata accessor for BorderView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews10BorderView);
}

double sub_218300()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  double result;

  _StringGuts.grow(_:)(41);
  ObjectType = swift_getObjectType();
  v1 = _typeName(_:qualified:)(ObjectType, 0);
  v3 = v2;
  swift_bridgeObjectRelease(0xE000000000000000);
  v4._object = (void *)0x80000000003158E0;
  v4._countAndFlagsBits = 0xD000000000000027;
  String.append(_:)(v4);
  NSLog(_:_:)(v1, v3, &_swiftEmptyArrayStorage);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

void sub_2183A0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  id v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews12FilterButton_hoverRecognizer] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews12FilterButton_isHovering] = 0;
  v16.receiver = v4;
  v16.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  v11 = objc_allocWithZone((Class)UIHoverGestureRecognizer);
  v12 = (char *)v10;
  v13 = objc_msgSend(v11, "initWithTarget:action:", v12, "didHover:");
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews12FilterButton_hoverRecognizer;
  v15 = *(void **)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews12FilterButton_hoverRecognizer];
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews12FilterButton_hoverRecognizer] = v13;

  if (*(_QWORD *)&v12[v14])
  {
    objc_msgSend(v12, "addGestureRecognizer:");

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21853C()
{
  uint64_t v0;

  v0 = type metadata accessor for UIButton.Configuration(0);
  __swift_allocate_value_buffer(v0, qword_3FD5A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_3FD5A0);
  return sub_218584();
}

uint64_t sub_218584()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = type metadata accessor for UIButton.Configuration(0);
  v30 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v1 = (char *)&v27 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for UIBackgroundConfiguration(0);
  v29 = *(_QWORD *)(v31 - 8);
  v2 = __chkstk_darwin(v31);
  v28 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - v4;
  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIButton.Configuration.TitleAlignment(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.plain()(v12);
  v15 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v16 = UIButton.Configuration.baseForegroundColor.setter(v15);
  UIButton.Configuration.imagePadding.setter(v16, 4.0);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v10);
  v17 = UIButton.Configuration.titleAlignment.setter(v14);
  v18 = static Glyph.HeaderButtons.chevron.getter(v17);
  v19 = Glyph.image.getter(v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  UIButton.Configuration.image.setter(v19);
  v20 = UIButton.Configuration.imagePlacement.setter(8);
  v21 = static UIButton.Configuration.plain()(v20);
  UIButton.Configuration.background.getter(v21);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v1, v32);
  UIBackgroundConfiguration.cornerRadius.setter(v22, 6.0);
  v23 = v28;
  v24 = v29;
  v25 = v31;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v28, v5, v31);
  UIButton.Configuration.background.setter(v23);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v5, v25);
}

uint64_t sub_2187D0()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  id v23;
  char *v24;
  double v25;
  uint64_t v26;
  void *v27;
  int *v28;
  int v29;
  id v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  id v38;
  uint64_t (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v2 = type metadata accessor for UIBackgroundConfiguration(0);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36E8);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - v12;
  v14 = type metadata accessor for UIButton.Configuration(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v39 - v20;
  UIButton.configuration.getter(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_218D14((uint64_t)v13);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v13, v14);
  v23 = objc_msgSend(v0, "traitCollection");
  v24 = (char *)objc_msgSend(v23, "userInterfaceStyle");

  if (v24 == (_BYTE *)&dword_0 + 1)
    v25 = 0.0;
  else
    v25 = 1.0;
  v39 = *(uint64_t (**)(char *, char *, uint64_t))(v15 + 16);
  v26 = v39(v17, v21, v14);
  UIButton.Configuration.background.getter(v26);
  v27 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v27, "labelColor"));
  UIBackgroundConfiguration.backgroundColor.setter(objc_msgSend(v27, "clearColor"));
  v28 = (int *)objc_msgSend(v1, "state");
  v29 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12FilterButton_isHovering];
  v40 = v4;
  if (v29 != 1)
  {
    if (v28 != &dword_4)
    {
      if (v28 != (int *)((char *)&dword_0 + 1))
        goto LABEL_17;
LABEL_13:
      v30 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", v25, 0.1);
      goto LABEL_20;
    }
LABEL_14:
    UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v27, "whiteColor"));
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v31 = qword_3D0890;
    v32 = (id)qword_3D0890;
    v30 = (id)v31;
    goto LABEL_20;
  }
  if (v28 == &dword_4)
    goto LABEL_14;
  if (v28 == (int *)((char *)&dword_0 + 1))
    goto LABEL_13;
  if (!v28)
  {
    v30 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", v25, 0.05);
    goto LABEL_20;
  }
LABEL_17:
  if ((objc_msgSend(v1, "state") & 4) != 0 && (objc_msgSend(v1, "state") & 1) != 0)
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v37 = qword_3D0890;
    v38 = (id)qword_3D0890;
    UIBackgroundConfiguration.backgroundColor.setter(v37);
    UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v27, "whiteColor"));
    goto LABEL_21;
  }
  v30 = objc_msgSend(v27, "clearColor");
LABEL_20:
  UIBackgroundConfiguration.backgroundColor.setter(v30);
LABEL_21:
  v33 = v40;
  v34 = v41;
  v35 = v42;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v40, v7, v42);
  UIButton.Configuration.background.setter(v33);
  v39(v10, v17, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  UIButton.configuration.setter(v10);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v35);
  v36 = *(void (**)(char *, uint64_t))(v15 + 8);
  v36(v17, v14);
  return ((uint64_t (*)(char *, uint64_t))v36)(v21, v14);
}

uint64_t type metadata accessor for FilterButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews12FilterButton);
}

uint64_t sub_218D14(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_218D54(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

char *sub_218D98()
{
  uint64_t v0;
  char *v1;
  char *v2;
  NSString v8;

  v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HeaderButton()), "init");
  v2 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12HeaderButton_touchOutsideMargin];
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)v2 = _Q0;
  *((_OWORD *)v2 + 1) = _Q0;
  if (v0)
    v8 = String._bridgeToObjectiveC()();
  else
    v8 = 0;
  objc_msgSend(v1, "setTitle:forState:", v8, 0);

  return v1;
}

void sub_2193F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

double sub_219434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  double result;

  if (v3)
    v4 = a2;
  else
    v4 = 0;
  if (v3)
    v5 = v3;
  else
    v5 = 0xE000000000000000;
  v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v5);
  String.hash(into:)(v2, 0x6C6C41656573, 0xE600000000000000);
  *(_QWORD *)&result = swift_bridgeObjectRelease(0xE600000000000000).n128_u64[0];
  return result;
}

void sub_2195AC(uint64_t a1)
{
  sub_219FD8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

Swift::Int sub_2195C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  Hasher.init(_seed:)(v5, 0);
  sub_2193F8((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_219620(uint64_t a1)
{
  uint64_t v1;

  sub_2193F8(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

Swift::Int sub_21962C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  Hasher.init(_seed:)(v6, a1);
  sub_2193F8((uint64_t)v6, v2, v3, v4);
  return Hasher._finalize()();
}

char *sub_219680(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  NSString v18;
  objc_super v20;
  _QWORD v21[11];
  __int16 v22;

  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_accessoryTextLabel;
  type metadata accessor for DynamicTypeLabel();
  v5 = qword_3CF588;
  v6 = v2;
  if (v5 != -1)
    swift_once(&qword_3CF588, sub_1407F0);
  v21[0] = qword_3FBE50;
  v21[1] = *(_QWORD *)algn_3FBE58;
  v21[2] = qword_3FBE60;
  v21[3] = qword_3FBE68;
  v21[4] = qword_3FBE70;
  v21[5] = *(_QWORD *)byte_3FBE78;
  v21[6] = qword_3FBE80;
  v21[7] = qword_3FBE88;
  v21[8] = qword_3FBE90;
  v21[9] = qword_3FBE98;
  v21[10] = qword_3FBEA0;
  v22 = word_3FBEA8;
  sub_DDA0((void *)qword_3FBE50, *(uint64_t *)algn_3FBE58, qword_3FBE60, qword_3FBE68, qword_3FBE70, byte_3FBE78[0], (void *)qword_3FBE80, qword_3FBE88, qword_3FBE90, qword_3FBE98, qword_3FBEA0, word_3FBEA8, SHIBYTE(word_3FBEA8));
  *(_QWORD *)&v2[v4] = sub_A96AC((uint64_t)v21, 1, 0, 1);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_imageView;
  sub_21A0F4();
  *(_QWORD *)&v6[v7] = v8;

  v20.receiver = v6;
  v20.super_class = (Class)type metadata accessor for DisclosureView();
  v9 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_accessoryTextLabel;
  v11 = *(void **)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_accessoryTextLabel];
  v12 = qword_3CF048;
  v13 = v9;
  v14 = v11;
  if (v12 != -1)
    swift_once(&qword_3CF048, sub_E358);
  objc_msgSend(v14, "setTextColor:", qword_3FA8A8);

  v15 = *(void **)&v9[v10];
  v16 = v15;
  if (a2)
  {
    v18 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v15, "setText:", v18, v17);

  objc_msgSend(v13, "addSubview:", *(_QWORD *)&v9[v10]);
  objc_msgSend(v13, "addSubview:", *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_imageView]);

  return v13;
}

id sub_2198BC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  double v15;
  double v16;
  double v17;
  void (*v18)(char *, uint64_t);
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  char *v29;
  char *v30;
  double v31;
  double v32;
  double v33;
  uint64_t v35;
  char *v36;
  objc_super v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for DisclosureView();
  v37.receiver = v0;
  v37.super_class = v5;
  objc_msgSendSuper2(&v37, "layoutSubviews");
  v36 = (char *)objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v6 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_accessoryTextLabel];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v6, "sizeThatFits:", v7, v8);
  v10 = v9;
  v12 = v11;
  v13 = enum case for FloatingPointRoundingRule.up(_:);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v14(v4, enum case for FloatingPointRoundingRule.up(_:), v1);
  v15 = sub_2C348((uint64_t)v4, v10, v12);
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v2 + 8);
  v18(v4, v1);
  v19 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_imageView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v19, "sizeThatFits:", v20, v21);
  v23 = v22;
  v25 = v24;
  v14(v4, v13, v1);
  v26 = sub_2C348((uint64_t)v4, v23, v25);
  v28 = v27;
  v29 = v4;
  v30 = v36;
  v18(v29, v1);
  v31 = 0.0;
  v32 = 0.0;
  if (v30 == (_BYTE *)&dword_0 + 1)
  {
    objc_msgSend(v0, "bounds");
    v32 = CGRectGetMaxX(v38) - v15;
  }
  objc_msgSend(v0, "bounds");
  objc_msgSend(v6, "setFrame:", v32, CGRectGetMaxY(v39) - v17, v15, v17);
  if (v30 != (_BYTE *)&dword_0 + 1)
  {
    objc_msgSend(v0, "bounds");
    v31 = CGRectGetMaxX(v40) - v26;
  }
  objc_msgSend(v6, "lastBaselineMaxY");
  return objc_msgSend(v19, "setFrame:", v31, v33 - v28, v26, v28);
}

double sub_219B3C(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v19;

  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_accessoryTextLabel), "sizeThatFits:", a1, a2);
  v10 = v9;
  v12 = v11;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_imageView), "sizeThatFits:", a1, a2);
  v15 = v10 + v14 + fabs(v14 + -20.0);
  if (v13 > v12)
    v16 = v13;
  else
    v16 = v12;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FloatingPointRoundingRule.up(_:), v5);
  v17 = sub_2C348((uint64_t)v8, v15, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v17;
}

id sub_219D44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisclosureView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DisclosureView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView);
}

double destroy for Accessory(uint64_t a1)
{
  return sub_151848(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s23ShelfKitCollectionViews9AccessoryOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_151860(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Accessory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_151860(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_151848(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Accessory(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_151848(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Accessory(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Accessory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_219F50(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_219F68(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Accessory()
{
  return &type metadata for Accessory;
}

unint64_t sub_219F94()
{
  unint64_t result;

  result = qword_3DD320;
  if (!qword_3DD320)
  {
    result = swift_getWitnessTable(&unk_3009D4, &type metadata for Accessory);
    atomic_store(result, (unint64_t *)&qword_3DD320);
  }
  return result;
}

void sub_219FD8(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_219FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a2)
  {
    if (!a5)
      return 0;
    if (a1 != a4 || a2 != a5)
      return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
  }
  else if (a5)
  {
    sub_151848(a1, 0, 0);
    return 0;
  }
  return 1;
}

void sub_21A0F4()
{
  void *v0;
  NSString v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v0 = (void *)objc_opt_self(UIImage);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "kitImageNamed:", v1);

  if (v2)
  {
    v3 = objc_msgSend(v2, "imageWithRenderingMode:", 2);

    v4 = objc_msgSend(v3, "imageFlippedForRightToLeftLayoutDirection");
    v5 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v4);
    if (qword_3CF050 != -1)
      swift_once(&qword_3CF050, sub_E36C);
    objc_msgSend(v5, "setTintColor:", qword_3FA8B0);

  }
  else
  {
    __break(1u);
  }
}

double sub_21A21C(uint64_t a1, uint64_t a2, char a3)
{
  double v3;
  void *v4;
  NSString v5;
  id v6;
  NSString v7;
  double v8;

  v3 = 0.0;
  if (a3 == 4)
  {
    if (a1 ^ 2 | a2)
    {
      if (!(a1 ^ 1 | a2))
      {
        v4 = (void *)objc_opt_self(UIImage);
        v5 = String._bridgeToObjectiveC()();
        v6 = objc_msgSend(v4, "kitImageNamed:", v5);

        if (!v6)
        {
          __break(1u);
          return v3;
        }
        goto LABEL_8;
      }
    }
    else
    {
      v7 = String._bridgeToObjectiveC()();
      v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v7);

      if (v6)
      {
LABEL_8:
        objc_msgSend(v6, "size");
        v3 = v8;

      }
    }
  }
  return v3;
}

void sub_21A354()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[11];
  __int16 v6;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_accessoryTextLabel;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF588 != -1)
    swift_once(&qword_3CF588, sub_1407F0);
  v5[0] = qword_3FBE50;
  v5[1] = *(_QWORD *)algn_3FBE58;
  v5[2] = qword_3FBE60;
  v5[3] = qword_3FBE68;
  v5[4] = qword_3FBE70;
  v5[5] = *(_QWORD *)byte_3FBE78;
  v5[6] = qword_3FBE80;
  v5[7] = qword_3FBE88;
  v5[8] = qword_3FBE90;
  v5[9] = qword_3FBE98;
  v5[10] = qword_3FBEA0;
  v6 = word_3FBEA8;
  sub_DDA0((void *)qword_3FBE50, *(uint64_t *)algn_3FBE58, qword_3FBE60, qword_3FBE68, qword_3FBE70, byte_3FBE78[0], (void *)qword_3FBE80, qword_3FBE88, qword_3FBE90, qword_3FBE98, qword_3FBEA0, word_3FBEA8, SHIBYTE(word_3FBEA8));
  *(_QWORD *)&v0[v2] = sub_A96AC((uint64_t)v5, 1, 0, 1);
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3A8437458FA0C4629A859D072288700F14DisclosureView_imageView;
  sub_21A0F4();
  *(_QWORD *)&v1[v3] = v4;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/Accessory.swift", 39, 2, 200, 0);
  __break(1u);
}

double CGFloat.rounded(_:toScaleOf:)(uint64_t a1, void *a2, double a3)
{
  swift_getObjectType();
  return sub_21E73C(a1, a2, a3);
}

double CGFloat.rounded(_:toScale:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  int v11;
  double v12;
  double v13;
  uint64_t v15;
  double v16;

  v6 = type metadata accessor for FloatingPointRoundingRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2 * a3;
  v16 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:))
  {
    v12 = round(v10);
  }
  else if (v11 == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
  {
    v12 = rint(v10);
  }
  else if (v11 == enum case for FloatingPointRoundingRule.up(_:))
  {
    v12 = ceil(v10);
  }
  else if (v11 == enum case for FloatingPointRoundingRule.down(_:))
  {
    v12 = floor(v10);
  }
  else if (v11 == enum case for FloatingPointRoundingRule.towardZero(_:))
  {
    v12 = trunc(v10);
  }
  else if (v11 == enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    Double._roundSlowPath(_:)(a1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v16;
  }
  return v12 / a2;
}

double static CGSize.+ infix(_:_:)(double a1, double a2, double a3)
{
  return a1 + a3;
}

double sub_21A650(double a1, double a2, double a3, double a4)
{
  Swift::Int v6;
  double v7;

  v6 = sub_F387C((uint64_t)&off_37A188);
  if (sub_310B0(0, v6))
    v7 = 0.0 - a2 - a4;
  else
    v7 = 0.0;
  sub_310B0(1uLL, v6);
  swift_bridgeObjectRelease(v6);
  return v7;
}

double CGFloat.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3)
{
  double v5;
  double v6;
  id v7;
  double v8;

  objc_msgSend(a2, "displayScale");
  v6 = v5;
  if (v5 < COERCE_DOUBLE(1))
  {
    v7 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v7, "scale");
    v6 = v8;

  }
  return CGFloat.rounded(_:toScale:)(a1, v6, a3);
}

double CGSize.rounded(_:toScaleOf:)(uint64_t a1, void *a2, double a3, double a4)
{
  swift_getObjectType();
  return sub_21E800(a1, a2, a3, a4);
}

double sub_21A7CC(uint64_t a1, uint64_t a2, Swift::UInt a3, uint64_t a4, void *a5, double a6, double a7)
{
  Class isa;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD v33[4];
  char v34;

  if (!a2)
    return 0.0;
  isa = (Class)a4;
  if (a4)
  {
    sub_21AC5C(a4);
    v15 = v14;
  }
  else
  {
    v15 = 0;
  }
  sub_21B000(a1, a2, a3, v15, a5, a6, a7);
  v18 = v17;
  swift_bridgeObjectRelease(v15);
  if (qword_3CFBF0 != -1)
    swift_once(&qword_3CFBF0, sub_21B78C);
  v19 = qword_3DD328;
  v32 = v18;
  swift_retain(qword_3DD328);
  Cache.subscript.getter(v33, &v32);
  swift_release(v19);
  if ((v34 & 1) == 0)
    return *(double *)v33;
  v20 = String._bridgeToObjectiveC()();
  if (isa)
  {
    sub_21AC5C((uint64_t)isa);
    v22 = v21;
    type metadata accessor for Key(0);
    sub_152348();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v22);
  }
  objc_msgSend(v20, "boundingRectWithSize:options:attributes:context:", a3, isa, a5, a6, a7, v32);
  v16 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  v30 = qword_3DD328;
  *(double *)v33 = v16;
  v33[1] = v25;
  v33[2] = v27;
  v33[3] = v29;
  v34 = 0;
  v32 = v18;
  swift_retain(qword_3DD328);
  Cache.subscript.setter(v33, &v32);
  swift_release(v30);
  return v16;
}

uint64_t sub_21A9C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  NSString *v22;
  id v23;
  unint64_t v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t result;
  char v31;
  _BYTE v32[48];

  v14 = type metadata accessor for FloatingPointRoundingRule(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v32[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
  if (a2 < 0)
  {
    v31 = 2;
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v31, 3451, 0);
    __break(1u);
  }
  else
  {
    v19 = v18;
    objc_msgSend(v18, "setMaximumNumberOfLines:", a2);
    objc_msgSend(v19, "setWrapsForTruncationMode:", a2 != 1);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
    inited = swift_initStackObject(v20, v32);
    *(_OWORD *)(inited + 16) = xmmword_2F03C0;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 40) = a1;
    v22 = NSFontAttributeName;
    v23 = a1;
    v24 = sub_D47A0(inited);
    v25 = v19;
    sub_21A7CC(a3, a4, 1uLL, v24, v19, a5, a6);
    v27 = v26;
    v29 = v28;
    swift_bridgeObjectRelease(v24);

    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for FloatingPointRoundingRule.awayFromZero(_:), v14);
    CGFloat.rounded(_:toScale:)((uint64_t)v17, a7, v27);
    CGFloat.rounded(_:toScale:)((uint64_t)v17, a7, v29);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
  }
  return result;
}

void sub_21ABF4(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_21D168(v2);
  v3 = v2[2];
  v4[0] = v2 + 4;
  v4[1] = v3;
  sub_21D22C(v4);
  *a1 = v2;
}

void sub_21AC5C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  _OWORD v34[4];
  _OWORD v35[2];
  _OWORD v36[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D5520);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v31 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v32 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v32 << 6);
      goto LABEL_28;
    }
    v11 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v30)
      goto LABEL_37;
    v12 = *(_QWORD *)(v31 + 8 * v11);
    v13 = v32 + 1;
    if (!v12)
    {
      v13 = v32 + 2;
      if (v32 + 2 >= v30)
        goto LABEL_37;
      v12 = *(_QWORD *)(v31 + 8 * v13);
      if (!v12)
      {
        v13 = v32 + 3;
        if (v32 + 3 >= v30)
          goto LABEL_37;
        v12 = *(_QWORD *)(v31 + 8 * v13);
        if (!v12)
        {
          v13 = v32 + 4;
          if (v32 + 4 >= v30)
            goto LABEL_37;
          v12 = *(_QWORD *)(v31 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v32 = v13;
LABEL_28:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v36[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    *(_QWORD *)&v35[0] = v15;
    v16 = *(id *)&v36[0];
    swift_unknownObjectRetain(v15);
    swift_dynamicCast((char *)v36 + 8, v35, (char *)&type metadata for Swift.AnyObject + 8, (char *)&type metadata for Any + 8, 7);
    v17 = *(_QWORD *)&v36[0];
    sub_1D65C((_OWORD *)((char *)v36 + 8), v34);
    sub_1D65C(v34, v36);
    sub_1D65C(v36, v35);
    v18 = v3[5];
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v21 = v20;
    Hasher.init(_seed:)(&v33, v18);
    String.hash(into:)(&v33, v19, v21);
    v22 = Hasher._finalize()();
    swift_bridgeObjectRelease(v21);
    v23 = -1 << *((_BYTE *)v3 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)&v7[8 * (v24 >> 6)]) != 0)
    {
      v8 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)&v7[8 * (v24 >> 6)])) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)&v7[8 * v25];
      }
      while (v29 == -1);
      v8 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)&v7[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(_QWORD *)(v3[6] + 8 * v8) = v17;
    sub_1D65C(v35, (_OWORD *)(v3[7] + 32 * v8));
    ++v3[2];
  }
  v14 = v32 + 5;
  if (v32 + 5 >= v30)
  {
LABEL_37:
    swift_release(v3);
    sub_F9918(a1);
    return;
  }
  v12 = *(_QWORD *)(v31 + 8 * v14);
  if (v12)
  {
    v13 = v32 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v30)
      goto LABEL_37;
    v12 = *(_QWORD *)(v31 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_21B000(uint64_t a1, uint64_t a2, Swift::UInt a3, uint64_t a4, void *a5, double a6, double a7)
{
  float v14;
  float v15;
  float v16;
  float v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Swift::UInt64 v28;
  Swift::UInt64 v29;
  Swift::UInt64 v30;
  Swift::UInt64 v31;
  Swift::UInt64 v32;
  Swift::UInt64 v33;
  Swift::UInt64 v34;
  Swift::UInt64 v35;
  Swift::UInt64 v36;
  Swift::UInt64 v37;
  Swift::UInt64 v38;
  Swift::UInt64 v39;
  void *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  _BYTE v44[32];
  _OWORD v45[2];
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _OWORD v49[4];
  uint64_t v50;
  _OWORD v51[4];
  uint64_t v52;

  Hasher.init()(v49);
  String.hash(into:)(v49, a1, a2);
  v14 = a6;
  if ((LODWORD(v14) & 0x7FFFFFFF) != 0)
    v15 = a6;
  else
    v15 = 0.0;
  Hasher._combine(_:)(LODWORD(v15));
  v16 = a7;
  if ((LODWORD(v16) & 0x7FFFFFFF) != 0)
    v17 = a7;
  else
    v17 = 0.0;
  Hasher._combine(_:)(LODWORD(v17));
  Hasher._combine(_:)(a3);
  if (a4)
  {
    v40 = a5;
    swift_bridgeObjectRetain(a4);
    v19 = sub_15B2B4(v18);
    swift_bridgeObjectRelease(a4);
    *(_QWORD *)&v51[0] = v19;
    v20 = 0;
    sub_21ABF4(v51);
    v21 = *(_QWORD *)&v51[0];
    v22 = *(_QWORD *)(*(_QWORD *)&v51[0] + 16);
    if (v22)
      goto LABEL_11;
LABEL_13:
    v48 = 0;
    v20 = v22;
    v46 = 0u;
    v47 = 0u;
    while (1)
    {
      sub_21EA00((uint64_t)&v46, (uint64_t)v51);
      v23 = *(void **)&v51[0];
      if (!*(_QWORD *)&v51[0])
      {
        swift_release(v21);
        a5 = v40;
        goto LABEL_19;
      }
      sub_1D65C((_OWORD *)((char *)v51 + 8), v45);
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;
      String.hash(into:)(v49, v24, v25);
      swift_bridgeObjectRelease(v26);
      sub_1D66C((uint64_t)v45, (uint64_t)v44);
      if (swift_dynamicCast(&v41, v44, (char *)&type metadata for Any + 8, &type metadata for AnyHashable, 6))
      {
        v46 = v41;
        v47 = v42;
        v48 = v43;
        AnyHashable.hash(into:)(v49);

        sub_3D5CC((uint64_t)&v46);
        __swift_destroy_boxed_opaque_existential_0(v45);
        if (v20 == v22)
          goto LABEL_13;
      }
      else
      {
        v43 = 0;
        v41 = 0u;
        v42 = 0u;

        __swift_destroy_boxed_opaque_existential_0(v45);
        sub_D1D4((uint64_t)&v41, &qword_3D1E40);
        if (v20 == v22)
          goto LABEL_13;
      }
LABEL_11:
      if (v20 >= *(_QWORD *)(v21 + 16))
        break;
      sub_21E9B8(v21 + 32 + 40 * v20++, (uint64_t)&v46);
    }
    __break(1u);
    swift_release(v21);
    __break(1u);
  }
  else
  {
LABEL_19:
    if (a5)
    {
      v27 = a5;
      objc_msgSend(v27, "minimumScaleFactor");
      if ((v28 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v29 = v28;
      else
        v29 = 0;
      Hasher._combine(_:)(v29);
      objc_msgSend(v27, "actualScaleFactor");
      if ((v30 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v31 = v30;
      else
        v31 = 0;
      Hasher._combine(_:)(v31);
      Hasher._combine(_:)((Swift::UInt8)objc_msgSend(v27, "wantsNumberOfLineFragments"));
      Hasher._combine(_:)((Swift::UInt)objc_msgSend(v27, "numberOfLineFragments"));
      Hasher._combine(_:)((Swift::UInt)objc_msgSend(v27, "maximumNumberOfLines"));
      Hasher._combine(_:)((Swift::UInt8)objc_msgSend(v27, "wantsBaselineOffset"));
      objc_msgSend(v27, "baselineOffset");
      if ((v32 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v33 = v32;
      else
        v33 = 0;
      Hasher._combine(_:)(v33);
      Hasher._combine(_:)((Swift::UInt8)objc_msgSend(v27, "wantsScaledBaselineOffset"));
      objc_msgSend(v27, "scaledBaselineOffset");
      if ((v34 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v35 = v34;
      else
        v35 = 0;
      Hasher._combine(_:)(v35);
      Hasher._combine(_:)((Swift::UInt8)objc_msgSend(v27, "wantsScaledLineHeight"));
      objc_msgSend(v27, "scaledLineHeight");
      if ((v36 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v37 = v36;
      else
        v37 = 0;
      Hasher._combine(_:)(v37);
      objc_msgSend(v27, "firstBaselineOffset");
      if ((v38 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v39 = v38;
      else
        v39 = 0;
      Hasher._combine(_:)(v39);

    }
    v51[2] = v49[2];
    v51[3] = v49[3];
    v52 = v50;
    v51[0] = v49[0];
    v51[1] = v49[1];
    Hasher.finalize()();
  }
}

double sub_21B3E4(void *a1, Swift::UInt a2, void *a3, void *a4, double a5, double a6)
{
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  id v18;
  NSString *v19;
  char isUniquelyReferenced_nonNull_native;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  void *v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v42;
  _OWORD v43[2];
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  if (!a1)
    return 0.0;
  v11 = a1;
  if ((uint64_t)objc_msgSend(v11, "length") < 1)
  {
    v16 = sub_D4784((uint64_t)_swiftEmptyArrayStorage);
    if (!a4)
      goto LABEL_5;
    goto LABEL_4;
  }
  v12 = objc_msgSend(v11, "attributesAtIndex:effectiveRange:", 0, 0);
  type metadata accessor for Key(0);
  v14 = v13;
  v15 = sub_152348();
  v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, v14, (char *)&type metadata for Any + 8, v15);

  if (a4)
  {
LABEL_4:
    v46 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    *(_QWORD *)&v44 = a4;
    sub_1D65C(&v44, v43);
    v18 = a4;
    v19 = NSFontAttributeName;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
    v42 = v16;
    sub_15EB78(v43, v19, isUniquelyReferenced_nonNull_native);

    *(_QWORD *)&v17 = swift_bridgeObjectRelease(0x8000000000000000).n128_u64[0];
  }
LABEL_5:
  v21 = objc_msgSend(v11, "string", v17, v42);
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  sub_21B000(v22, v24, a2, v16, a3, a5, a6);
  v26 = v25;
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v16);
  if (qword_3CFBF0 != -1)
    swift_once(&qword_3CFBF0, sub_21B78C);
  v27 = qword_3DD328;
  *(_QWORD *)&v43[0] = v26;
  swift_retain(qword_3DD328);
  Cache.subscript.getter(&v44, v43);
  swift_release(v27);
  if ((v47 & 1) != 0)
  {
    if (a4)
    {
      v28 = v11;
      v29 = a4;
      v30 = objc_msgSend(v28, "mutableCopy");
      _bridgeAnyObjectToAny(_:)(&v44, v30, v31);
      swift_unknownObjectRelease(v30);
      v32 = sub_E710(0, (unint64_t *)&qword_3D46A8, NSMutableAttributedString_ptr);
      if ((swift_dynamicCast(v43, &v44, (char *)&type metadata for Any + 8, v32, 6) & 1) != 0)
      {
        v33 = *(void **)&v43[0];
        v34 = v29;
        objc_msgSend(v33, "addAttribute:value:range:", NSFontAttributeName, v34, 0, objc_msgSend(v33, "length"));

        v28 = v33;
      }
      else
      {

      }
    }
    else
    {
      v28 = v11;
    }
    objc_msgSend(v28, "boundingRectWithSize:options:context:", a2, a3, a5, a6);
    v35 = v36;
    v37 = qword_3DD328;
    *(double *)&v44 = v36;
    *((_QWORD *)&v44 + 1) = v38;
    v45 = v39;
    v46 = v40;
    v47 = 0;
    *(_QWORD *)&v43[0] = v26;
    swift_retain(qword_3DD328);
    Cache.subscript.setter(&v44, v43);

    swift_release(v37);
  }
  else
  {
    v35 = *(double *)&v44;

  }
  return v35;
}

uint64_t sub_21B78C()
{
  uint64_t v0;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD330);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = Cache.init(invalidateOnAppBackground:)(1);
  qword_3DD328 = result;
  return result;
}

double CGSize.rounded(_:toScale:)(uint64_t a1, double a2, double a3, double a4)
{
  double v7;

  v7 = CGFloat.rounded(_:toScale:)(a1, a2, a3);
  CGFloat.rounded(_:toScale:)(a1, a2, a4);
  return v7;
}

void sub_21B824(void *a1, void *a2, double a3, double a4)
{
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  NSString *v19;
  id v20;
  unint64_t v21;
  uint64_t v22;

  v8 = objc_msgSend(a1, "attributedText");
  if (v8)
  {
    v9 = v8;
    v10 = v8;
    v11 = objc_msgSend(a1, "font");
    sub_21B3E4(v9, 1uLL, a2, v11, a3, a4);

  }
  else
  {
    v12 = objc_msgSend(a1, "text");
    if (v12)
    {
      v13 = v12;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v16 = v15;

    }
    else
    {
      v14 = 0;
      v16 = 0;
    }
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
    inited = swift_initStackObject(v17, &v22);
    *(_OWORD *)(inited + 16) = xmmword_2F03C0;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v19 = NSFontAttributeName;
    v20 = objc_msgSend(a1, "font");
    if (v20)
    {
      *(_QWORD *)(inited + 40) = v20;
      v21 = sub_D47A0(inited);
      sub_21A7CC(v14, v16, 1uLL, v21, a2, a3, a4);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_21B9E4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF9A0);
    v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 40 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21BB58(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51F0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21BCC0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21BE2C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D48);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3DD338);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21BFCC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21CF74(a1, a2, a3, a4, (uint64_t *)&unk_3D30F0, (uint64_t (*)(_QWORD))&type metadata accessor for MetricsData);
}

uint64_t sub_21BFE0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21CF74(a1, a2, a3, a4, &qword_3D7B20, (uint64_t (*)(_QWORD))&type metadata accessor for CategorySection);
}

uint64_t sub_21BFF4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21CF74(a1, a2, a3, a4, &qword_3DCE28, (uint64_t (*)(_QWORD))&type metadata accessor for Category);
}

uint64_t sub_21C008(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22D8);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21C164(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD378);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3DD380);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21C2EC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D80);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21C454(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD350);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3DD358);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21C5DC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD368);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3DD370);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21C764(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCDC8);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3DCDD0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21C8EC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD360);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21CA8C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21CF74(a1, a2, a3, a4, &qword_3D9E88, type metadata accessor for OutlineItem);
}

uint64_t sub_21CAA0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21CF74(a1, a2, a3, a4, &qword_3DCDF8, (uint64_t (*)(_QWORD))&type metadata accessor for TabMenu.Item);
}

uint64_t sub_21CAB4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21CF74(a1, a2, a3, a4, &qword_3DCE58, type metadata accessor for CategorySelectionGridLayout.SubviewPlacement);
}

uint64_t sub_21CAC8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD390);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    memcpy(v14, v15, 16 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21CC24(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCDB0);
    v11 = (char *)swift_allocObject(v10, (v9 << 6) | 0x20, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 + 31;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 6);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[64 * v8])
      memmove(v14, v15, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[64 * v8] || v14 >= &v15[64 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21CD8C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE38);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DCE40) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = _swift_stdlib_malloc_size_0(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE40);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v15 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v21, v22);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v8;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21CF74(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = _swift_stdlib_malloc_size_0(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24, v25);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_21D154(uint64_t a1)
{
  return sub_21BB58(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21D168(_QWORD *a1)
{
  return sub_21BE2C(0, a1[2], 0, a1);
}

uint64_t sub_21D17C(_QWORD *a1)
{
  return sub_21CF74(0, a1[2], 0, a1, &qword_3DCE28, (uint64_t (*)(_QWORD))&type metadata accessor for Category);
}

uint64_t sub_21D1B0(_QWORD *a1)
{
  return sub_21CF74(0, a1[2], 0, a1, &qword_3DCE20, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_21D1E4(uint64_t a1)
{
  return sub_21CC24(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21D1F8(_QWORD *a1)
{
  return sub_21CF74(0, a1[2], 0, a1, &qword_3DD388, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutSubview);
}

void sub_21D22C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  Swift::Int v12;
  _BYTE *v13;
  char *v14;
  unint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  int v38;
  uint64_t v39;
  __int128 *v40;
  Swift::Int v41;
  Swift::Int v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  Swift::Int v48;
  uint64_t v49;
  Swift::Int v50;
  Swift::Int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  _QWORD *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  unint64_t v132;
  _QWORD *v133;
  Swift::Int v134;
  uint64_t v135;
  char *v136;
  Swift::Int v137;
  Swift::Int v138;
  int v139;
  Swift::Int v140;
  Swift::Int v141;
  char *__dst;
  uint64_t v143;
  _QWORD *v144;
  _BYTE v145[32];
  uint64_t v146;
  _QWORD v147[4];
  uint64_t v148;
  _BYTE v149[32];
  uint64_t v150;
  _BYTE v151[40];
  _BYTE *v152;

  v2 = v1;
  v3 = a1;
  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_152;
    if (v4)
      sub_21DC08(0, v4, 1, v3);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_160;
  v134 = v5;
  if (v4 < 2)
  {
    v11 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v4 != 1)
    {
      v15 = _swiftEmptyArrayStorage[2];
      v14 = (char *)_swiftEmptyArrayStorage;
LABEL_116:
      v133 = v11;
      if (v15 >= 2)
      {
        v126 = *v3;
        do
        {
          v127 = v15 - 2;
          if (v15 < 2)
            goto LABEL_147;
          if (!v126)
            goto LABEL_159;
          v115 = v14;
          v128 = v14 + 32;
          v129 = *(_QWORD *)&v14[16 * v127 + 32];
          v130 = *(_QWORD *)&v14[16 * v15 + 24];
          sub_21DE10((char *)(v126 + 40 * v129), (char *)(v126 + 40 * *(_QWORD *)&v128[16 * v15 - 16]), v126 + 40 * v130, __dst);
          if (v2)
            goto LABEL_114;
          if (v130 < v129)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native(v115) & 1) == 0)
            v115 = sub_21E728((uint64_t)v115);
          if (v127 >= *((_QWORD *)v115 + 2))
            goto LABEL_149;
          v131 = &v115[16 * v127 + 32];
          *(_QWORD *)v131 = v129;
          *((_QWORD *)v131 + 1) = v130;
          v132 = *((_QWORD *)v115 + 2);
          if (v15 > v132)
            goto LABEL_150;
          v14 = v115;
          memmove(&v115[16 * v15 + 16], &v115[16 * v15 + 32], 16 * (v132 - v15));
          *((_QWORD *)v115 + 2) = v132 - 1;
          v15 = v132 - 1;
        }
        while (v132 > 2);
      }
      swift_bridgeObjectRelease(v14);
      v125 = v133;
      v133[2] = 0;
LABEL_128:
      swift_bridgeObjectRelease(v125);
      return;
    }
    v133 = _swiftEmptyArrayStorage;
    v143 = v1;
  }
  else
  {
    v143 = v1;
    v7 = v3;
    v8 = v6 >> 1;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD338);
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)(v10 + 16) = v8;
    v3 = v7;
    v133 = (_QWORD *)v10;
    __dst = (char *)(v10 + 32);
  }
  v12 = 0;
  v13 = v145;
  v14 = (char *)_swiftEmptyArrayStorage;
  v152 = v145;
  v144 = v3;
  while (1)
  {
    v16 = v12;
    v17 = v12 + 1;
    if (v12 + 1 < v4)
    {
      v18 = *v3;
      sub_21E9B8(*v3 + 40 * v17, (uint64_t)&v150);
      v135 = v18;
      sub_21E9B8(v18 + 40 * v16, (uint64_t)&v148);
      v19 = v150;
      v146 = v150;
      sub_1D66C((uint64_t)v151, (uint64_t)v147);
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;
      v23 = v148;
      sub_1D66C((uint64_t)v149, (uint64_t)v13);
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v24;
      if (v20 == v25 && v22 == v24)
      {
        v139 = 0;
        v26 = v22;
      }
      else
      {
        v139 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v25, v24, 1);
      }
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v22);
      __swift_destroy_boxed_opaque_existential_0(v13);
      __swift_destroy_boxed_opaque_existential_0(v147);
      sub_D1D4((uint64_t)&v148, &qword_3DD338);
      sub_D1D4((uint64_t)&v150, &qword_3DD338);
      v17 = v16 + 2;
      if (v16 + 2 < v4)
      {
        v137 = v16;
        v27 = v135 + 40 * v16 + 40;
        while (1)
        {
          v28 = v17;
          sub_21E9B8(v27 + 40, (uint64_t)&v150);
          sub_21E9B8(v27, (uint64_t)&v148);
          v29 = v150;
          v146 = v150;
          sub_1D66C((uint64_t)v151, (uint64_t)v147);
          v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
          v32 = v31;
          v33 = v148;
          sub_1D66C((uint64_t)v149, (uint64_t)v13);
          v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
          if (v30 == v34 && v32 == v35)
          {
            v38 = 0;
            v37 = v32;
          }
          else
          {
            v37 = v35;
            v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v34, v35, 1);
          }
          swift_bridgeObjectRelease(v37);
          swift_bridgeObjectRelease(v32);
          __swift_destroy_boxed_opaque_existential_0(v13);
          __swift_destroy_boxed_opaque_existential_0(v147);
          sub_D1D4((uint64_t)&v148, &qword_3DD338);
          sub_D1D4((uint64_t)&v150, &qword_3DD338);
          if (((v139 ^ v38) & 1) != 0)
            break;
          v17 = v28 + 1;
          v27 += 40;
          if (v4 == v28 + 1)
          {
            v17 = v4;
            goto LABEL_33;
          }
        }
        v17 = v28;
LABEL_33:
        v16 = v137;
      }
      v3 = v144;
      if ((v139 & 1) != 0)
      {
        if (v17 < v16)
          goto LABEL_153;
        if (v16 < v17)
        {
          v39 = v135 + 40 * v17 - 40;
          v40 = (__int128 *)(v135 + 40 * v16);
          v41 = v17;
          v42 = v16;
          do
          {
            if (v42 != --v41)
            {
              if (!v135)
                goto LABEL_158;
              v43 = *v40;
              v44 = v40[1];
              v45 = *((_QWORD *)v40 + 4);
              v46 = *(_QWORD *)(v39 + 32);
              v47 = *(_OWORD *)(v39 + 16);
              *v40 = *(_OWORD *)v39;
              v40[1] = v47;
              *((_QWORD *)v40 + 4) = v46;
              *(_QWORD *)(v39 + 32) = v45;
              *(_OWORD *)v39 = v43;
              *(_OWORD *)(v39 + 16) = v44;
            }
            ++v42;
            v39 -= 40;
            v40 = (__int128 *)((char *)v40 + 40);
          }
          while (v42 < v41);
        }
      }
    }
    if (v17 >= v4)
      goto LABEL_66;
    if (__OFSUB__(v17, v16))
      goto LABEL_151;
    if (v17 - v16 >= v134)
      goto LABEL_66;
    if (__OFADD__(v16, v134))
      goto LABEL_154;
    v48 = v16 + v134 >= v4 ? v4 : v16 + v134;
    if (v48 < v16)
      break;
    if (v17 != v48)
    {
      v136 = v14;
      v138 = v16;
      v49 = 40 * v17;
      v140 = v48;
      do
      {
        v50 = v17;
        v51 = v138;
        v52 = v49;
        while (1)
        {
          v53 = *v3 + v52;
          sub_21E9B8(v53, (uint64_t)&v150);
          sub_21E9B8(v53 - 40, (uint64_t)&v148);
          v54 = v150;
          v146 = v150;
          sub_1D66C((uint64_t)v151, (uint64_t)v147);
          v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
          v57 = v56;
          v58 = v148;
          v59 = v152;
          sub_1D66C((uint64_t)v149, (uint64_t)v152);
          v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
          if (v55 == v60 && v57 == v61)
            break;
          v63 = v61;
          v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v57, v60, v61, 1);
          swift_bridgeObjectRelease(v63);
          swift_bridgeObjectRelease(v57);
          __swift_destroy_boxed_opaque_existential_0(v59);
          __swift_destroy_boxed_opaque_existential_0(v147);
          sub_D1D4((uint64_t)&v148, &qword_3DD338);
          sub_D1D4((uint64_t)&v150, &qword_3DD338);
          if ((v64 & 1) == 0)
            goto LABEL_54;
          v3 = v144;
          if (!*v144)
            goto LABEL_156;
          v65 = *v144 + v52;
          v66 = *(_QWORD *)(v65 + 32);
          v68 = *(_OWORD *)v65;
          v67 = *(_OWORD *)(v65 + 16);
          v69 = *(_OWORD *)(v65 - 24);
          *(_OWORD *)v65 = *(_OWORD *)(v65 - 40);
          *(_OWORD *)(v65 + 16) = v69;
          *(_QWORD *)(v65 + 32) = *(_QWORD *)(v65 - 8);
          *(_OWORD *)(v65 - 40) = v68;
          *(_OWORD *)(v65 - 24) = v67;
          *(_QWORD *)(v65 - 8) = v66;
          v52 -= 40;
          if (v50 == ++v51)
            goto LABEL_55;
        }
        swift_bridgeObjectRelease_n(v57, 2);
        __swift_destroy_boxed_opaque_existential_0(v59);
        __swift_destroy_boxed_opaque_existential_0(v147);
        sub_D1D4((uint64_t)&v148, &qword_3DD338);
        sub_D1D4((uint64_t)&v150, &qword_3DD338);
LABEL_54:
        v3 = v144;
LABEL_55:
        v17 = v50 + 1;
        v49 += 40;
      }
      while (v50 + 1 != v140);
      v17 = v140;
      v13 = v152;
      v14 = v136;
      v16 = v138;
    }
LABEL_66:
    if (v17 < v16)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_21E2F8(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v71 = *((_QWORD *)v14 + 2);
    v70 = *((_QWORD *)v14 + 3);
    v15 = v71 + 1;
    if (v71 >= v70 >> 1)
      v14 = sub_21E2F8((char *)(v70 > 1), v71 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v15;
    v72 = v14 + 32;
    v73 = &v14[16 * v71 + 32];
    *(_QWORD *)v73 = v16;
    *((_QWORD *)v73 + 1) = v17;
    v141 = v17;
    if (v71)
    {
      v3 = v144;
      while (1)
      {
        v74 = v15 - 1;
        if (v15 >= 4)
        {
          v79 = &v72[16 * v15];
          v80 = *((_QWORD *)v79 - 8);
          v81 = *((_QWORD *)v79 - 7);
          v85 = __OFSUB__(v81, v80);
          v82 = v81 - v80;
          if (v85)
            goto LABEL_135;
          v84 = *((_QWORD *)v79 - 6);
          v83 = *((_QWORD *)v79 - 5);
          v85 = __OFSUB__(v83, v84);
          v77 = v83 - v84;
          v78 = v85;
          if (v85)
            goto LABEL_136;
          v86 = v15 - 2;
          v87 = &v72[16 * v15 - 32];
          v89 = *(_QWORD *)v87;
          v88 = *((_QWORD *)v87 + 1);
          v85 = __OFSUB__(v88, v89);
          v90 = v88 - v89;
          if (v85)
            goto LABEL_138;
          v85 = __OFADD__(v77, v90);
          v91 = v77 + v90;
          if (v85)
            goto LABEL_141;
          if (v91 >= v82)
          {
            v109 = &v72[16 * v74];
            v111 = *(_QWORD *)v109;
            v110 = *((_QWORD *)v109 + 1);
            v85 = __OFSUB__(v110, v111);
            v112 = v110 - v111;
            if (v85)
              goto LABEL_145;
            v102 = v77 < v112;
            goto LABEL_104;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v103 = *((_QWORD *)v14 + 4);
            v104 = *((_QWORD *)v14 + 5);
            v85 = __OFSUB__(v104, v103);
            v96 = v104 - v103;
            v97 = v85;
            goto LABEL_98;
          }
          v76 = *((_QWORD *)v14 + 4);
          v75 = *((_QWORD *)v14 + 5);
          v85 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          v78 = v85;
        }
        if ((v78 & 1) != 0)
          goto LABEL_137;
        v86 = v15 - 2;
        v92 = &v72[16 * v15 - 32];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v95 = __OFSUB__(v93, v94);
        v96 = v93 - v94;
        v97 = v95;
        if (v95)
          goto LABEL_140;
        v98 = &v72[16 * v74];
        v100 = *(_QWORD *)v98;
        v99 = *((_QWORD *)v98 + 1);
        v85 = __OFSUB__(v99, v100);
        v101 = v99 - v100;
        if (v85)
          goto LABEL_143;
        if (__OFADD__(v96, v101))
          goto LABEL_144;
        if (v96 + v101 >= v77)
        {
          v102 = v77 < v101;
LABEL_104:
          if (v102)
            v74 = v86;
          goto LABEL_106;
        }
LABEL_98:
        if ((v97 & 1) != 0)
          goto LABEL_139;
        v105 = &v72[16 * v74];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v85 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v85)
          goto LABEL_142;
        if (v108 < v96)
          goto LABEL_15;
LABEL_106:
        v113 = v74 - 1;
        if (v74 - 1 >= v15)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        v114 = *v3;
        if (!*v3)
          goto LABEL_157;
        v115 = v14;
        v116 = v3;
        v117 = &v72[16 * v113];
        v118 = v72;
        v119 = *(_QWORD *)v117;
        v120 = v118;
        v121 = v74;
        v122 = &v118[16 * v74];
        v123 = *((_QWORD *)v122 + 1);
        sub_21DE10((char *)(v114 + 40 * *(_QWORD *)v117), (char *)(v114 + 40 * *(_QWORD *)v122), v114 + 40 * v123, __dst);
        if (v143)
        {
LABEL_114:
          swift_bridgeObjectRelease(v115);
          v133[2] = 0;
          v125 = v133;
          goto LABEL_128;
        }
        if (v123 < v119)
          goto LABEL_132;
        if (v121 > *((_QWORD *)v115 + 2))
          goto LABEL_133;
        *(_QWORD *)v117 = v119;
        *(_QWORD *)&v120[16 * v113 + 8] = v123;
        v124 = *((_QWORD *)v115 + 2);
        if (v121 >= v124)
          goto LABEL_134;
        v72 = v120;
        v14 = v115;
        v15 = v124 - 1;
        memmove(v122, v122 + 16, 16 * (v124 - 1 - v121));
        *((_QWORD *)v115 + 2) = v124 - 1;
        v102 = v124 > 2;
        v3 = v116;
        v13 = v152;
        if (!v102)
          goto LABEL_15;
      }
    }
    v15 = 1;
    v3 = v144;
LABEL_15:
    v4 = v3[1];
    v12 = v141;
    if (v141 >= v4)
    {
      v2 = v143;
      v11 = v133;
      goto LABEL_116;
    }
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_21DC08(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  _QWORD v28[4];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v25 = result;
  if (a3 != a2)
  {
    v5 = a3;
    v33 = &v32;
    v6 = 40 * a3;
LABEL_6:
    v7 = v25;
    v26 = v6;
    while (1)
    {
      v8 = *a4 + v6;
      sub_21E9B8(v8, (uint64_t)&v31);
      sub_21E9B8(v8 - 40, (uint64_t)&v29);
      v9 = v31;
      v27[4] = v31;
      sub_1D66C((uint64_t)v33, (uint64_t)v28);
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;
      v13 = v29;
      sub_1D66C((uint64_t)&v30, (uint64_t)v27);
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      if (v10 == v14 && v12 == v15)
      {
        swift_bridgeObjectRelease_n(v12, 2);
        __swift_destroy_boxed_opaque_existential_0(v27);
        __swift_destroy_boxed_opaque_existential_0(v28);
        sub_D1D4((uint64_t)&v29, &qword_3DD338);
        result = sub_D1D4((uint64_t)&v31, &qword_3DD338);
LABEL_5:
        ++v5;
        v6 = v26 + 40;
        if (v5 == a2)
          return result;
        goto LABEL_6;
      }
      v17 = v15;
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v15, 1);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v12);
      __swift_destroy_boxed_opaque_existential_0(v27);
      __swift_destroy_boxed_opaque_existential_0(v28);
      sub_D1D4((uint64_t)&v29, &qword_3DD338);
      result = sub_D1D4((uint64_t)&v31, &qword_3DD338);
      if ((v18 & 1) == 0)
        goto LABEL_5;
      if (!*a4)
        break;
      v19 = *a4 + v6;
      v20 = *(_QWORD *)(v19 + 32);
      v22 = *(_OWORD *)v19;
      v21 = *(_OWORD *)(v19 + 16);
      v23 = *(_OWORD *)(v19 - 24);
      *(_OWORD *)v19 = *(_OWORD *)(v19 - 40);
      *(_OWORD *)(v19 + 16) = v23;
      *(_QWORD *)(v19 + 32) = *(_QWORD *)(v19 - 8);
      *(_OWORD *)(v19 - 40) = v22;
      *(_OWORD *)(v19 - 24) = v21;
      *(_QWORD *)(v19 - 8) = v20;
      v6 -= 40;
      if (v5 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21DE10(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _OWORD *v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  char *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char v43;
  char *v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  uint64_t result;
  _QWORD v50[4];
  uint64_t v51;
  _QWORD v52[4];
  uint64_t v53;
  _BYTE v54[32];
  uint64_t v55;
  _BYTE v56[32];
  char *v57;
  char *v58;
  char *v59;

  v4 = __dst;
  v5 = a2;
  v7 = a2 - __src;
  v8 = (a2 - __src) / 40;
  v9 = a3 - (_QWORD)a2;
  v10 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v59 = __src;
  v58 = __dst;
  if (v8 >= v10)
  {
    if (v9 >= -39)
    {
      if (__dst != a2 || &a2[40 * v10] <= __dst)
        memmove(__dst, a2, 40 * v10);
      v29 = &v4[40 * v10];
      v57 = v29;
      v59 = v5;
      if (__src < v5 && v9 >= 40)
      {
        v30 = a3 - 40;
        do
        {
          sub_21E9B8((uint64_t)(v29 - 40), (uint64_t)&v55);
          v33 = v5 - 40;
          sub_21E9B8((uint64_t)(v5 - 40), (uint64_t)&v53);
          v34 = v55;
          v51 = v55;
          sub_1D66C((uint64_t)v56, (uint64_t)v52);
          v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
          v37 = v36;
          v38 = v53;
          sub_1D66C((uint64_t)v54, (uint64_t)v50);
          v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
          if (v35 == v39 && v37 == v40)
          {
            v43 = 0;
            v42 = v37;
          }
          else
          {
            v42 = v40;
            v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v39, v40, 1);
          }
          v44 = (char *)(v30 + 40);
          swift_bridgeObjectRelease(v42);
          swift_bridgeObjectRelease(v37);
          __swift_destroy_boxed_opaque_existential_0(v50);
          __swift_destroy_boxed_opaque_existential_0(v52);
          sub_D1D4((uint64_t)&v53, &qword_3DD338);
          sub_D1D4((uint64_t)&v55, &qword_3DD338);
          if ((v43 & 1) != 0)
          {
            if (v44 != v5 || v30 >= (unint64_t)v5)
            {
              v31 = *(_OWORD *)v33;
              v32 = *(_OWORD *)(v5 - 24);
              *(_QWORD *)(v30 + 32) = *((_QWORD *)v5 - 1);
              *(_OWORD *)v30 = v31;
              *(_OWORD *)(v30 + 16) = v32;
            }
            v59 -= 40;
            v29 = v57;
            if (v57 <= v4)
              break;
          }
          else
          {
            v45 = v57;
            v29 = v57 - 40;
            v57 -= 40;
            if (v44 < v45 || v30 >= (unint64_t)v45 || v44 != v45)
            {
              v46 = *(_OWORD *)v29;
              v47 = *(_OWORD *)(v45 - 24);
              *(_QWORD *)(v30 + 32) = *((_QWORD *)v45 - 1);
              *(_OWORD *)v30 = v46;
              *(_OWORD *)(v30 + 16) = v47;
            }
            v33 = v5;
            if (v29 <= v4)
              break;
          }
          v30 -= 40;
          v5 = v33;
        }
        while (v33 > __src);
      }
LABEL_51:
      sub_21E498((void **)&v59, (const void **)&v58, &v57);
      return 1;
    }
  }
  else if (v7 >= -39)
  {
    if (__dst != __src || &__src[40 * v8] <= __dst)
      memmove(__dst, __src, 40 * v8);
    v11 = (unint64_t)&v4[40 * v8];
    v57 = (char *)v11;
    if ((unint64_t)v5 < a3 && v7 >= 40)
    {
      while (1)
      {
        sub_21E9B8((uint64_t)v5, (uint64_t)&v55);
        sub_21E9B8((uint64_t)v4, (uint64_t)&v53);
        v12 = v55;
        v51 = v55;
        sub_1D66C((uint64_t)v56, (uint64_t)v52);
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v15 = v14;
        v16 = v53;
        sub_1D66C((uint64_t)v54, (uint64_t)v50);
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        if (v13 == v17 && v15 == v18)
          break;
        v20 = v18;
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v18, 1);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v15);
        __swift_destroy_boxed_opaque_existential_0(v50);
        __swift_destroy_boxed_opaque_existential_0(v52);
        sub_D1D4((uint64_t)&v53, &qword_3DD338);
        sub_D1D4((uint64_t)&v55, &qword_3DD338);
        if ((v21 & 1) == 0)
          goto LABEL_18;
        v22 = v59;
        v23 = (unint64_t)(v5 + 40);
        if (v59 >= v5 && (unint64_t)v59 < v23 && v59 == v5)
        {
          v22 = v5;
        }
        else
        {
          v24 = *(_OWORD *)v5;
          v25 = *((_OWORD *)v5 + 1);
          *((_QWORD *)v59 + 4) = *((_QWORD *)v5 + 4);
          *v22 = v24;
          v22[1] = v25;
        }
LABEL_22:
        v59 = (char *)v22 + 40;
        v4 = v58;
        if ((unint64_t)v58 < v11)
        {
          v5 = (char *)v23;
          if (v23 < a3)
            continue;
        }
        goto LABEL_51;
      }
      swift_bridgeObjectRelease_n(v15, 2);
      __swift_destroy_boxed_opaque_existential_0(v50);
      __swift_destroy_boxed_opaque_existential_0(v52);
      sub_D1D4((uint64_t)&v53, &qword_3DD338);
      sub_D1D4((uint64_t)&v55, &qword_3DD338);
LABEL_18:
      v22 = v59;
      v26 = v58 + 40;
      if (v59 != v58 || v59 >= v26)
      {
        v27 = *(_OWORD *)v58;
        v28 = *((_OWORD *)v58 + 1);
        *((_QWORD *)v59 + 4) = *((_QWORD *)v58 + 4);
        *v22 = v27;
        v22[1] = v28;
      }
      v58 = v26;
      v23 = (unint64_t)v5;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_21E2F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD348);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_21E3F0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_21E498(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

uint64_t sub_21E550(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_21E61C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for Category);
}

uint64_t sub_21E55C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_21E61C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

char *sub_21E568(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 63;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -64)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
      return (char *)memmove(result, v3, v7 << 6);
  }
  return result;
}

uint64_t sub_21E610(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_21E61C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutSubview);
}

uint64_t sub_21E61C(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  v11 = v9 / v8;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v11 * v8)
    return swift_arrayInitWithTakeFrontToBack(v4, v5, v11, result);
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront(v4, v5);
  return result;
}

char *sub_21E728(uint64_t a1)
{
  return sub_21E2F8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

double sub_21E73C(uint64_t a1, id a2, double a3)
{
  id v5;
  double v6;
  double v7;
  id v8;
  double v9;
  double v10;

  v5 = objc_msgSend(a2, "traitCollection");
  objc_msgSend(v5, "displayScale");
  v7 = v6;
  if (v6 < COERCE_DOUBLE(1))
  {
    v8 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v8, "scale");
    v7 = v9;

  }
  v10 = CGFloat.rounded(_:toScale:)(a1, v7, a3);

  return v10;
}

double sub_21E800(uint64_t a1, void *a2, double a3, double a4)
{
  double v7;

  v7 = sub_21E73C(a1, a2, a3);
  sub_21E73C(a1, a2, a4);
  return v7;
}

double _sSo6CGRectV23ShelfKitCollectionViewsE10containing6pointsABSo7CGPointVd_tFZ_0(double *a1)
{
  uint64_t v1;
  double v2;
  double v4;
  CGFloat v5;
  uint64_t v6;
  CGFloat *v7;
  double v8;
  double v9;
  double v10;
  double MinX;
  double v12;
  double MinY;
  double v14;
  double v15;
  double v16;
  CGPoint v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v1 = *((_QWORD *)a1 + 2);
  v2 = 0.0;
  if (!v1)
    return 0.0;
  v4 = a1[4];
  v5 = a1[5];
  v6 = v1 - 1;
  if (v1 != 1)
  {
    swift_bridgeObjectRetain(a1);
    v7 = a1 + 7;
    v8 = 0.0;
    do
    {
      v10 = *(v7 - 1);
      v9 = *v7;
      v19.origin.x = v4;
      v19.origin.y = v5;
      v19.size.width = v2;
      v19.size.height = v8;
      v18.x = v10;
      v18.y = *v7;
      if (!CGRectContainsPoint(v19, v18))
      {
        v20.origin.x = v4;
        v20.origin.y = v5;
        v20.size.width = v2;
        v20.size.height = v8;
        MinX = CGRectGetMinX(v20);
        if (v10 >= MinX)
          v12 = MinX;
        else
          v12 = v10;
        v21.origin.x = v4;
        v21.origin.y = v5;
        v21.size.width = v2;
        v21.size.height = v8;
        MinY = CGRectGetMinY(v21);
        if (v9 >= MinY)
          v14 = MinY;
        else
          v14 = v9;
        v22.origin.x = v4;
        v22.origin.y = v5;
        v22.size.width = v2;
        v22.size.height = v8;
        v15 = v2 + CGRectGetMinX(v22);
        if (v15 > v10)
          v10 = v15;
        v23.origin.x = v4;
        v23.origin.y = v5;
        v23.size.width = v2;
        v23.size.height = v8;
        v16 = v8 + CGRectGetMinY(v23);
        if (v16 <= v9)
          v16 = v9;
        v2 = v10 - v12;
        v8 = v16 - v14;
        v4 = v12;
        v5 = v14;
      }
      v7 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(a1);
  }
  return v4;
}

uint64_t sub_21E9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21EA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21EA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t result;
  uint64_t *v23;
  __int128 v24;

  *(_QWORD *)a3 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v24, v6, v6);
  *(_OWORD *)(a3 + 8) = v24;
  v7 = type metadata accessor for CategorySelectionChip(0);
  v8 = a3 + *(int *)(v7 + 24);
  v9 = type metadata accessor for Category(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  v11 = type metadata accessor for InterestStateController(0);
  v12 = BaseObjectGraph.inject<A>(_:)(&v24, v11, v11);
  v13 = v24;
  v14 = Category.id.getter(v12);
  v15 = InterestStateController.stateMachine(for:)(v14);
  v16 = type metadata accessor for InterestStateMachine(0);
  v17 = sub_89A0(&qword_3D85F8, (uint64_t (*)(uint64_t))&type metadata accessor for InterestStateMachine, (uint64_t)&protocol conformance descriptor for InterestStateMachine);
  v18 = ObservedObject.init(wrappedValue:)(v15, v16, v17);
  v20 = v19;
  swift_release(a1);
  v21 = swift_release(v13);
  result = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 8))(a2, v9, v21);
  v23 = (uint64_t *)(a3 + *(int *)(v7 + 28));
  *v23 = v18;
  v23[1] = v20;
  return result;
}

uint64_t type metadata accessor for CategorySelectionChip(uint64_t a1)
{
  uint64_t result;

  result = qword_3DD3F0;
  if (!qword_3DD3F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CategorySelectionChip);
  return result;
}

uint64_t sub_21EBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_21EBE8);
}

uint64_t sub_21EBE8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Category(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_21EC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_21EC70);
}

char *sub_21EC70(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Category(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21ECE4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_300A58;
  result = type metadata accessor for Category(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_300A58;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_21ED64(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_3323E8, 1);
}

uint64_t sub_21ED74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __n128 v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char *v74;
  __n128 v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  unsigned int *v86;
  char v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t OpaqueTypeConformance2;
  char *v108;
  __n128 v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v135;
  char *v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  _OWORD v166[7];

  v2 = v1;
  v163 = a1;
  v162 = type metadata accessor for AccessibilityTraits(0);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v160 = (char *)&v135 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for AccessibilityChildBehavior(0);
  v153 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v152 = (char *)&v135 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for CategorySelectionChip(0);
  v149 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v150 = v5;
  v151 = (uint64_t)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v148);
  v137 = (uint64_t *)((char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v143 = type metadata accessor for BlendMode(0);
  v142 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v141 = (char *)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD430);
  __chkstk_darwin(v8);
  v10 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD438);
  __chkstk_darwin(v11);
  v13 = (char *)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD440);
  __chkstk_darwin(v14);
  v16 = (char *)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD448);
  __chkstk_darwin(v17);
  v19 = (char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD450);
  __chkstk_darwin(v138);
  v21 = (char *)&v135 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD458);
  __chkstk_darwin(v140);
  v136 = (char *)&v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD460);
  __chkstk_darwin(v145);
  v144 = (char *)&v135 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD468);
  v147 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v146 = (char *)&v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD470);
  v158 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v157 = (char *)&v135 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD478);
  __chkstk_darwin(v26);
  v155 = (char *)&v135 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v28);
  *((_QWORD *)v10 + 1) = 0x4014000000000000;
  v10[16] = 0;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD480);
  v30 = sub_21F99C(v2, &v10[*(int *)(v29 + 44)]);
  v32 = static Alignment.center.getter(v30, v31);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v166, 0, 1, 0, 1, 0, 1, 0x4041800000000000, 0, 0, 1, 0, 1, v32, v33);
  sub_D184((uint64_t)v10, (uint64_t)v13, &qword_3DD430);
  v34 = &v13[*(int *)(v11 + 36)];
  v35 = v166[5];
  *((_OWORD *)v34 + 4) = v166[4];
  *((_OWORD *)v34 + 5) = v35;
  *((_OWORD *)v34 + 6) = v166[6];
  v36 = v166[1];
  *(_OWORD *)v34 = v166[0];
  *((_OWORD *)v34 + 1) = v36;
  v37 = v166[3];
  *((_OWORD *)v34 + 2) = v166[2];
  *((_OWORD *)v34 + 3) = v37;
  v38 = sub_D1D4((uint64_t)v10, &qword_3DD430);
  LOBYTE(v11) = static Edge.Set.leading.getter(v38);
  v39 = EdgeInsets.init(_all:)(8.0);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  sub_D184((uint64_t)v13, (uint64_t)v16, &qword_3DD438);
  v46 = &v16[*(int *)(v14 + 36)];
  *v46 = v11;
  *((double *)v46 + 1) = v39;
  *((_QWORD *)v46 + 2) = v41;
  *((_QWORD *)v46 + 3) = v43;
  *((_QWORD *)v46 + 4) = v45;
  v46[40] = 0;
  v47 = sub_D1D4((uint64_t)v13, &qword_3DD438);
  LOBYTE(v11) = static Edge.Set.trailing.getter(v47);
  v48 = EdgeInsets.init(_all:)(10.0);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  sub_D184((uint64_t)v16, (uint64_t)v19, &qword_3DD440);
  v55 = &v19[*(int *)(v17 + 36)];
  *v55 = v11;
  *((double *)v55 + 1) = v48;
  *((_QWORD *)v55 + 2) = v50;
  *((_QWORD *)v55 + 3) = v52;
  *((_QWORD *)v55 + 4) = v54;
  v55[40] = 0;
  sub_D1D4((uint64_t)v16, &qword_3DD440);
  v57 = InterestStateMachine.currentState.getter(v56);
  v59 = InterestState.rawValue.getter(v57, v58);
  v61 = v60;
  v64 = InterestState.rawValue.getter(2, v62);
  v65 = v63;
  if (v59 == v64 && v61 == v63)
  {
    v66 = swift_bridgeObjectRelease_n(v61, 2);
  }
  else
  {
    v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, v61, v64, v63, 0);
    swift_bridgeObjectRelease(v61);
    v66 = swift_bridgeObjectRelease(v65);
    if ((v67 & 1) == 0)
    {
      v70 = static Color.white.getter(v66);
      v69 = Color.opacity(_:)(0.18);
      swift_release(v70);
      goto LABEL_7;
    }
  }
  v68 = static Color.white.getter(v66);
  v69 = v68;
LABEL_7:
  v71 = v156;
  v72 = (uint64_t)v136;
  v73 = static Edge.Set.all.getter(v68);
  sub_D184((uint64_t)v19, (uint64_t)v21, &qword_3DD448);
  v74 = &v21[*(int *)(v138 + 36)];
  *(_QWORD *)v74 = v69;
  v74[8] = v73;
  sub_D1D4((uint64_t)v19, &qword_3DD448);
  v76 = InterestStateMachine.currentState.getter(v75);
  v78 = InterestState.rawValue.getter(v76, v77);
  v80 = v79;
  v83 = InterestState.rawValue.getter(2, v81);
  v84 = v82;
  if (v78 == v83 && v80 == v82)
  {
    v85 = swift_bridgeObjectRelease_n(v80, 2);
    v86 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  else
  {
    v87 = _stringCompareWithSmolCheck(_:_:expecting:)(v78, v80, v83, v82, 0);
    swift_bridgeObjectRelease(v80);
    v85 = swift_bridgeObjectRelease(v84);
    v86 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    if ((v87 & 1) != 0)
      v86 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  v88 = v142;
  v89 = v141;
  v90 = v143;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v142 + 104))(v141, *v86, v143, v85);
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v72 + *(int *)(v140 + 36), v89, v90);
  sub_D184((uint64_t)v21, v72, &qword_3DD450);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);
  sub_D1D4((uint64_t)v21, &qword_3DD450);
  if (qword_3CF8B8 != -1)
    swift_once(&qword_3CF8B8, sub_1B01FC);
  v91 = qword_3FCCC0;
  v92 = v137;
  v93 = (char *)v137 + *(int *)(v148 + 20);
  v94 = enum case for RoundedCornerStyle.continuous(_:);
  v95 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 104))(v93, v94, v95);
  *v92 = v91;
  v92[1] = v91;
  v96 = v145;
  v97 = (uint64_t)v144;
  v98 = (uint64_t)&v144[*(int *)(v145 + 36)];
  sub_19C4C((uint64_t)v92, v98, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v98 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D2640) + 36)) = 256;
  sub_D184(v72, v97, &qword_3DD458);
  sub_FA4C((uint64_t)v92, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_D1D4(v72, &qword_3DD458);
  v99 = v151;
  sub_19C4C(v2, v151, type metadata accessor for CategorySelectionChip);
  v100 = *(unsigned __int8 *)(v149 + 80);
  v101 = (v100 + 16) & ~v100;
  v102 = swift_allocObject(&unk_38C158, v101 + v150, v100 | 7);
  sub_220564(v99, v102 + v101);
  v103 = sub_2205D4();
  v104 = v146;
  View.onTapGesture(count:perform:)(1, sub_2205A8, v102, v96, v103);
  swift_release(v102);
  v105 = sub_D1D4(v97, &qword_3DD460);
  v106 = v152;
  static AccessibilityChildBehavior.combine.getter(v105);
  v164 = v96;
  v165 = v103;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v164, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v108 = v157;
  View.accessibilityElement(children:)(v106, v71, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v106, v154);
  v109.n128_f64[0] = (*(double (**)(char *, uint64_t))(v147 + 8))(v104, v71);
  v110 = InterestStateMachine.currentState.getter(v109);
  v112 = InterestState.rawValue.getter(v110, v111);
  v114 = v113;
  v117 = InterestState.rawValue.getter(2, v115);
  v118 = v116;
  if (v112 == v117 && v114 == v116)
  {
    swift_bridgeObjectRelease_n(v114, 2);
    v119 = v161;
    v120 = v160;
  }
  else
  {
    v121 = _stringCompareWithSmolCheck(_:_:expecting:)(v112, v114, v117, v116, 0);
    swift_bridgeObjectRelease(v114);
    swift_bridgeObjectRelease(v118);
    v119 = v161;
    v120 = v160;
    if ((v121 & 1) == 0)
    {
      v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86E8);
      v123 = swift_allocObject(v125, ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(_QWORD *)(v119 + 72), *(unsigned __int8 *)(v119 + 80) | 7);
      *(_OWORD *)(v123 + 16) = xmmword_2F03C0;
      static AccessibilityTraits.isButton.getter(v123);
      goto LABEL_20;
    }
  }
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86E8);
  v123 = swift_allocObject(v122, ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ 2 * *(_QWORD *)(v119 + 72), *(unsigned __int8 *)(v119 + 80) | 7);
  *(_OWORD *)(v123 + 16) = xmmword_2EFA20;
  v124 = static AccessibilityTraits.isButton.getter(v123);
  static AccessibilityTraits.isSelected.getter(v124);
LABEL_20:
  v164 = v123;
  v126 = sub_89A0(&qword_3D86F0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86F8);
  v128 = sub_10EDC(&qword_3D8700, &qword_3D86F8, (uint64_t)&protocol conformance descriptor for [A]);
  v129 = v127;
  v130 = v162;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v164, v129, v128, v162, v126);
  v164 = v71;
  v165 = OpaqueTypeConformance2;
  v131 = swift_getOpaqueTypeConformance2(&v164, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v132 = (uint64_t)v155;
  v133 = v159;
  View.accessibilityAddTraits(_:)(v120, v159, v131);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v130);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v108, v133);
  return sub_2207C4(v132, v163);
}

uint64_t sub_21F99C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  char v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  __n128 v89;
  void (*v90)(char *, uint64_t, __n128);
  uint64_t v91;
  __n128 v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[3];

  v105 = a2;
  v3 = type metadata accessor for BorderlessButtonStyle(0);
  v101 = *(_QWORD *)(v3 - 8);
  v102 = v3;
  __chkstk_darwin(v3);
  v100 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  __chkstk_darwin(v96);
  v6 = (uint64_t *)((char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Image.Scale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD4D0);
  __chkstk_darwin(v95);
  v12 = (uint64_t *)((char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD4D8);
  __chkstk_darwin(v99);
  v14 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD4E0);
  v107 = *(_QWORD *)(v15 - 8);
  v108 = v15;
  __chkstk_darwin(v15);
  v104 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v98 = (char *)&v94 - v18;
  __chkstk_darwin(v19);
  v106 = (char *)&v94 - v20;
  v97 = type metadata accessor for CategorySelectionChip(0);
  v103 = a1;
  v22 = InterestStateMachine.currentState.getter(v21);
  v24 = InterestState.rawValue.getter(v22, v23);
  v26 = v25;
  v29 = InterestState.rawValue.getter(2, v27);
  v30 = v28;
  if (v24 == v29 && v26 == v28)
  {
    swift_bridgeObjectRelease_n(v26, 2);
  }
  else
  {
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v29, v28, 0);
    swift_bridgeObjectRelease(v26);
    v32 = swift_bridgeObjectRelease(v30);
    if ((v31 & 1) == 0)
    {
      v33 = static Color.white.getter(v32);
      goto LABEL_9;
    }
  }
  if (qword_3CF8D0 != -1)
    swift_once(&qword_3CF8D0, sub_1B03B0);
  v33 = qword_3FCCF0;
  v34 = swift_retain(qword_3FCCF0);
LABEL_9:
  v35 = InterestStateMachine.currentState.getter(v34);
  v37 = InterestState.rawValue.getter(v35, v36);
  v39 = v38;
  v42 = InterestState.rawValue.getter(2, v40);
  v43 = v41;
  if (v37 == v42 && v39 == v41)
  {
    swift_bridgeObjectRelease_n(v39, 2);
    v44 = "star.circle.fill";
  }
  else
  {
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v42, v41, 0);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v43);
    v44 = "plus.circle.fill";
    if ((v45 & 1) != 0)
      v44 = "star.circle.fill";
  }
  v46 = Image.init(systemName:)(0xD000000000000010, (unint64_t)(v44 - 32) | 0x8000000000000000);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Image.Scale.small(_:), v7);
  KeyPath = swift_getKeyPath(&unk_300AC0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v96 + 28), v10, v7);
  *v6 = KeyPath;
  sub_D184((uint64_t)v6, (uint64_t)v12 + *(int *)(v95 + 36), &qword_3D2620);
  *v12 = v46;
  swift_retain(v46);
  sub_D1D4((uint64_t)v6, &qword_3D2620);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release(v46);
  sub_D184((uint64_t)v12, (uint64_t)v14, &qword_3DD4D0);
  v48 = v99;
  *(_QWORD *)&v14[*(int *)(v99 + 36)] = v33;
  swift_retain(v33);
  v49 = sub_D1D4((uint64_t)v12, &qword_3DD4D0);
  v50 = v100;
  BorderlessButtonStyle.init()(v49);
  v51 = sub_220814();
  v52 = sub_89A0(&qword_3D8750, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v53 = v98;
  v54 = v102;
  View.buttonStyle<A>(_:)(v50, v48, v102, v51, v52);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v50, v54);
  sub_D1D4((uint64_t)v14, &qword_3DD4D8);
  v55 = *(uint64_t (**)(char *, char *, uint64_t))(v107 + 32);
  v94 = v33;
  v56 = v55(v106, v53, v108);
  v109[0] = Category.title.getter(v56);
  v109[1] = v57;
  v58 = sub_D254();
  v59 = Text.init<A>(_:)(v109, &type metadata for String, v58);
  v61 = v60;
  v63 = v62;
  LOBYTE(v53) = v64 & 1;
  v65 = static Font.subheadline.getter(v59);
  v66 = Font.bold()(v65);
  v67 = swift_release(v65);
  v68 = Text.font(_:)(v67);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  swift_release(v66);
  sub_D170(v59, v61, (char)v53);
  swift_bridgeObjectRelease(v63);
  v109[0] = v33;
  v75 = Text.foregroundStyle<A>(_:)(v109, v68, v70, v72 & 1, v74, &type metadata for Color, &protocol witness table for Color);
  v77 = v76;
  v103 = v78;
  LOBYTE(v53) = v79 & 1;
  sub_D170(v68, v70, v72 & 1);
  swift_bridgeObjectRelease(v74);
  v80 = swift_getKeyPath(&unk_300AF0);
  v81 = v106;
  v82 = v107;
  v83 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  v84 = v104;
  v85 = v108;
  v83(v104, v106, v108);
  v86 = v105;
  v83(v105, v84, v85);
  v87 = &v86[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DD4F8) + 48)];
  sub_D130(v75, v77, (char)v53);
  v88 = v103;
  swift_bridgeObjectRetain(v103);
  swift_retain(v80);
  v89 = swift_release(v94);
  *(_QWORD *)v87 = v75;
  *((_QWORD *)v87 + 1) = v77;
  v87[16] = (char)v53;
  *((_QWORD *)v87 + 3) = v88;
  *((_QWORD *)v87 + 4) = v80;
  *((_QWORD *)v87 + 5) = 1;
  v87[48] = 0;
  v90 = *(void (**)(char *, uint64_t, __n128))(v82 + 8);
  v91 = v108;
  v90(v81, v108, v89);
  sub_D170(v75, v77, (char)v53);
  swift_release(v80);
  v92 = swift_bridgeObjectRelease(v88);
  return ((uint64_t (*)(char *, uint64_t, __n128))v90)(v84, v91, v92);
}

void sub_220034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  char *v6;

  v0 = type metadata accessor for CategorySelectionChip(0);
  __chkstk_darwin(v0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for Logger(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for ActionMetricsBehavior(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for ActionMetrics(0);
  v5 = __chkstk_darwin(v4);
  v6 = (char *)sub_22017C + 4 * byte_300A10[InterestStateMachine.currentState.getter(v5)];
  __asm { BR              X10 }
}

uint64_t sub_22017C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;

  v6 = v1[2];
  ObjectType = swift_getObjectType();
  v8 = Category.id.getter(ObjectType);
  static ActionMetrics.notInstrumented.getter(v8);
  *(_QWORD *)(v5 - 104) = type metadata accessor for FavoriteInterestAction(0, v9);
  *(_QWORD *)(v5 - 96) = sub_89A0(&qword_3D8710, (uint64_t (*)(uint64_t))&type metadata accessor for FavoriteInterestAction, (uint64_t)&protocol conformance descriptor for FavoriteInterestAction);
  __swift_allocate_boxed_opaque_existential_0((_QWORD *)(v5 - 128));
  ((void (*)(uint64_t, uint64_t))FavoriteInterestAction.init(adamID:actionMetrics:))(v8, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v3, enum case for ActionMetricsBehavior.notProcessed(_:), v2);
  v10 = ActionRunner.perform(_:withMetrics:asPartOf:)(v5 - 128, v3, *v1, ObjectType, v6);
  v11 = swift_release(v10);
  (*(void (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v3, v2, v11);
  return __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v5 - 128));
}

uint64_t sub_2204C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CategorySelectionChip(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  swift_unknownObjectRelease(*(_QWORD *)(v7 + 8));
  v8 = v7 + *(int *)(v1 + 24);
  v9 = type metadata accessor for Category(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_220564(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CategorySelectionChip(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2205A8()
{
  type metadata accessor for CategorySelectionChip(0);
  sub_220034();
}

unint64_t sub_2205D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DD488;
  if (!qword_3DD488)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DD460);
    sub_104B60(&qword_3DD490, &qword_3DD458, (void (*)(void))sub_220678);
    sub_10EDC(&qword_3D2690, &qword_3D2640, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DD488);
  }
  return result;
}

unint64_t sub_220678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DD498;
  if (!qword_3DD498)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DD450);
    sub_104B60(&qword_3DD4A0, &qword_3DD448, (void (*)(void))sub_22071C);
    sub_10EDC(&qword_3DD4C0, &qword_3DD4C8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DD498);
  }
  return result;
}

uint64_t sub_22071C()
{
  return sub_104B60(&qword_3DD4A8, &qword_3DD440, (void (*)(void))sub_220740);
}

unint64_t sub_220740()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DD4B0;
  if (!qword_3DD4B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DD438);
    sub_10EDC(&qword_3DD4B8, &qword_3DD430, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DD4B0);
  }
  return result;
}

uint64_t sub_2207C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_220814()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DD4E8;
  if (!qword_3DD4E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DD4D8);
    sub_220898();
    sub_10EDC(&qword_3D25D0, &qword_3D25D8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DD4E8);
  }
  return result;
}

unint64_t sub_220898()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DD4F0;
  if (!qword_3DD4F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DD4D0);
    sub_10EDC(&qword_3D2630, &qword_3D2620, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DD4F0);
  }
  return result;
}

unint64_t sub_220928()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_3DD500;
  if (!qword_3DD500)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DD478);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DD468);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DD460);
    v5 = sub_2205D4();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_89A0(&qword_3D0D28, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DD500);
  }
  return result;
}

uint64_t ChevronButton.bind(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_release(v4);
  return swift_retain(a1);
}

id ChevronButton.adjustsFontSizeToFitWidth.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  double v4;
  _BYTE v6[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth);
  *(_QWORD *)&v4 = swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth, v6, 1, 0).n128_u64[0];
  *v3 = a1;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel), "setAdjustsFontSizeToFitWidth:", a1 & 1, v4);
}

void ChevronButton.useTopBottomMargin.setter(char a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class v11;
  _BYTE v12[24];

  v3 = (char *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_useTopBottomMargin);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_useTopBottomMargin, v12, 1, 0);
  *v3 = a1;
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_viewConstraints;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_viewConstraints);
  sub_12D34();
  swift_bridgeObjectRetain(v6);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v8 = sub_2210F4(*v3);
  v9 = *(_QWORD *)(v1 + v5);
  *(_QWORD *)(v1 + v5) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(v1 + v5);
  swift_bridgeObjectRetain(v10);
  v11 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "activateConstraints:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

}

void ChevronButton.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v5;
  double v6;
  id v7;
  NSString v8;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel);
  if (a2)
  {
    v5 = v3;
    v8 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v6 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v7 = v3;
    v8 = 0;
  }
  objc_msgSend(v3, "setText:", v8, v6);

}

double ChevronButton.setAction(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  double result;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSString v12;
  double v13;
  id v14;
  _QWORD v15[5];
  _BYTE v16[24];

  v2 = v1;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph);
  *(_QWORD *)&result = swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph, v16, 0, 0).n128_u64[0];
  v6 = *v4;
  if (v6)
  {
    v7 = swift_retain(v6);
    Action.title.getter(v7);
    v9 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel);
    if (v8)
    {
      v10 = v8;
      v11 = v9;
      v12 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v13 = swift_bridgeObjectRelease(v10).n128_u64[0];
    }
    else
    {
      v14 = v9;
      v12 = 0;
    }
    objc_msgSend(v9, "setText:", v12, v13);

    v15[3] = type metadata accessor for Action(0);
    v15[4] = sub_221308();
    v15[0] = a1;
    swift_retain(a1);
    UIControl.setAction(_:for:asPartOf:)(v15, 64, v6);
    __swift_destroy_boxed_opaque_existential_0(v15);
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView), "setHidden:", 0, v15[0]);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void ChevronButton.tintColor.setter(void *a1)
{
  uint64_t v1;
  id v2;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView), "setTintColor:", a1);
  v2 = *(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel);
  objc_msgSend(v2, "setTextColor:", a1);

}

uint64_t ChevronButton.title.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel), "text"));
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void sub_220E58(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*a1
                                                             + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel), "text"));
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_220EC8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  id v6;
  NSString v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(void **)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel);
  if (v2)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
    v4 = v3;
    v7 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v5 = swift_bridgeObjectRelease(v2).n128_u64[0];
  }
  else
  {
    v6 = v3;
    v7 = 0;
  }
  objc_msgSend(v3, "setText:", v7, v5);

}

void (*ChevronButton.title.modify(uint64_t *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel;
  a1[2] = v1;
  a1[3] = v3;
  v4 = objc_msgSend(*(id *)(v1 + v3), "text");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a1 = v6;
  a1[1] = v8;
  return sub_220FD4;
}

void sub_220FD4(_QWORD *a1, char a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSString v5;
  double v6;
  id v7;
  double v8;
  id v9;
  id v10;

  v2 = a1[1];
  v3 = *(void **)(a1[2] + a1[3]);
  v10 = v3;
  if ((a2 & 1) != 0)
  {
    if (v2)
    {
      swift_bridgeObjectRetain(v2);
      v4 = v10;
      v5 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(v2).n128_u64[0];
    }
    else
    {
      v9 = v3;
      v5 = 0;
    }
    objc_msgSend(v10, "setText:", v5, v6);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v7 = v3;
    if (v2)
    {
      v5 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v8 = swift_bridgeObjectRelease(v2).n128_u64[0];
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v10, "setText:", v5, v8);
  }

}

uint64_t ChevronButton.useTopBottomMargin.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_useTopBottomMargin);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_useTopBottomMargin, v3, 0, 0);
  return *v1;
}

uint64_t sub_2210F4(char a1)
{
  char *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;

  v2 = 0.0;
  if ((a1 & 1) != 0)
    v2 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_defaultTopBottomMargin];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_2F0A20;
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_stackView;
  v6 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_stackView], "leadingAnchor");
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(*(id *)&v1[v5], "trailingAnchor");
  v10 = objc_msgSend(v1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(*(id *)&v1[v5], "topAnchor");
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, v2);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(*(id *)&v1[v5], "bottomAnchor");
  v16 = objc_msgSend(v1, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -v2);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  return v4;
}

unint64_t sub_221308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D9C10;
  if (!qword_3D9C10)
  {
    v1 = type metadata accessor for Action(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_3D9C10);
  }
  return result;
}

void (*ChevronButton.useTopBottomMargin.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_useTopBottomMargin;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_2213A8;
}

void sub_2213A8(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class v13;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = v3[4];
    v6 = (void *)objc_opt_self(NSLayoutConstraint);
    v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_viewConstraints;
    v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_viewConstraints);
    sub_12D34();
    swift_bridgeObjectRetain(v8);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

    v10 = sub_2210F4(*(_BYTE *)(v4 + v5));
    v11 = *(_QWORD *)(v4 + v7);
    *(_QWORD *)(v4 + v7) = v10;
    swift_bridgeObjectRelease(v11);
    v12 = *(_QWORD *)(v4 + v7);
    swift_bridgeObjectRetain(v12);
    v13 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "activateConstraints:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

  }
  free(v3);
}

uint64_t ChevronButton.adjustsFontSizeToFitWidth.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth, v3, 0, 0);
  return *v1;
}

void (*ChevronButton.adjustsFontSizeToFitWidth.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_22153C;
}

void sub_22153C(_QWORD *a1, char a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
    objc_msgSend(*(id *)(v3[3] + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel), "setAdjustsFontSizeToFitWidth:", *(unsigned __int8 *)(v3[3] + v3[4]));
  free(v3);
}

void sub_22158C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  char *v10;
  char *v11;
  void *v12;
  unsigned int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int16 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  objc_super v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int16 v73;

  v59 = *(_QWORD *)(a1 + 16);
  v60 = *(_QWORD *)(a1 + 8);
  v58 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(void **)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(unsigned __int16 *)(a1 + 88);
  v10 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel);
  v11 = &v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v52 = *(void **)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v50 = *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 8];
  v48 = *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 16];
  v46 = *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 24];
  v44 = *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 32];
  v42 = *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 40];
  v40 = *(void **)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 48];
  v38 = *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 56];
  v37 = *(_OWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 64];
  v36 = *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 80];
  v35 = *(_WORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 88];
  v12 = *(void **)a1;
  *(_QWORD *)v11 = *(_QWORD *)a1;
  *((_QWORD *)v11 + 1) = v60;
  *((_QWORD *)v11 + 2) = v59;
  *((_QWORD *)v11 + 3) = v58;
  *((_QWORD *)v11 + 4) = v2;
  *((_QWORD *)v11 + 5) = v3;
  *((_QWORD *)v11 + 6) = v4;
  *((_QWORD *)v11 + 7) = v5;
  *((_QWORD *)v11 + 8) = v6;
  *((_QWORD *)v11 + 9) = v7;
  *((_QWORD *)v11 + 10) = v8;
  *((_WORD *)v11 + 44) = v9;
  v55 = v12;
  v56 = v10;
  v57 = v9;
  v31 = v8;
  v32 = v7;
  v33 = v6;
  v34 = v2;
  v54 = v3;
  sub_222254(v12, v60, v59, v58, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_DC94(v52, v50, v48, v46, v44, v42, v40, v38, v37, *((uint64_t *)&v37 + 1), v36, v35);
  v13 = *((unsigned __int16 *)v11 + 44);
  if (v13 >> 8 <= 0xFE)
  {
    v41 = *((_QWORD *)v11 + 9);
    v43 = *((_QWORD *)v11 + 10);
    v39 = *((_QWORD *)v11 + 8);
    v15 = *((_QWORD *)v11 + 5);
    v14 = (void *)*((_QWORD *)v11 + 6);
    v16 = *((_QWORD *)v11 + 4);
    v47 = *(void **)v11;
    v49 = *((_QWORD *)v11 + 1);
    v51 = *((_QWORD *)v11 + 2);
    v53 = *((_QWORD *)v11 + 3);
    v45 = *((_QWORD *)v11 + 7);
    sub_DDA0(*(void **)v11, v49, v51, v53, v16, v15, v14, v45, v39, v41, v43, v13, (unsigned __int16)(v13 & 0x1FF) >> 8);
    v62 = v47;
    v63 = v49;
    v64 = v51;
    v65 = v53;
    v66 = v16;
    v67 = v15;
    v68 = v14;
    v69 = v45;
    v70 = v39;
    v71 = v41;
    v72 = v43;
    v73 = v13 & 0x1FF;
    v17 = objc_msgSend(v56, "traitCollection");
    v18 = sub_1D5728((uint64_t)&v62, v17);
    v19 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v18, 0.0);

    v61.receiver = v56;
    v61.super_class = (Class)type metadata accessor for DynamicTypeLabel();
    objc_msgSendSuper2(&v61, "setFont:", v19);

    sub_DC94(v47, v49, v51, v53, v16, v15, v14, v45, v39, v41, v43, v13);
  }
  else
  {

  }
  if (v57 >> 8 <= 0xFE)
  {
    v20 = objc_msgSend((id)objc_opt_self(UIContentSizeCategoryPreference), "system");
    v21 = objc_msgSend(v20, "preferredContentSizeCategory");

    v22 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v21);
    v62 = v55;
    v63 = v60;
    v64 = v59;
    v65 = v58;
    v66 = v34;
    v67 = v54;
    v68 = v4;
    v69 = v5;
    v70 = v33;
    v71 = v32;
    v72 = v31;
    v73 = v57 & 0x1FF;
    v23 = sub_1D5728((uint64_t)&v62, v22);
    v24 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v23, 0.0);

    v25 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v24, 1);
    v26 = *(id *)(v30 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView);
    v27 = v25;
    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v28, v27);

    objc_msgSend(v26, "setImage:", v29);
    sub_DC94(v55, v60, v59, v58, v34, v54, v4, v5, v33, v32, v31, v57);
  }
}

char *sub_221A5C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  Class isa;
  objc_super v31;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel;
  v12 = type metadata accessor for DynamicTypeLabel();
  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12));
  v14 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v13, "init");
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_stackView;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView;
  *(_QWORD *)&v14[v16] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_viewConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_defaultTopBottomMargin] = 0x4018000000000000;
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_useTopBottomMargin] = 1;
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph] = 0;

  v31.receiver = v14;
  v31.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v31, "initWithFrame:", a1, a2, a3, a4);
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_stackView;
  v19 = *(void **)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_stackView];
  v20 = v17;
  objc_msgSend(v19, "setSpacing:", 4.0);
  objc_msgSend(*(id *)&v17[v18], "setAxis:", 0);
  objc_msgSend(*(id *)&v17[v18], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v17[v18]);
  objc_msgSend(*(id *)&v17[v18], "setUserInteractionEnabled:", 0);
  v21 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel;
  objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel], "setUserInteractionEnabled:", 0);
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView;
  objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView], "setUserInteractionEnabled:", 0);
  LODWORD(v23) = 1148846080;
  objc_msgSend(*(id *)&v20[v21], "setContentCompressionResistancePriority:forAxis:", 1, v23);
  objc_msgSend(*(id *)&v17[v18], "addArrangedSubview:", *(_QWORD *)&v20[v21]);
  objc_msgSend(*(id *)&v17[v18], "addArrangedSubview:", *(_QWORD *)&v20[v22]);
  objc_msgSend(*(id *)&v20[v22], "setContentMode:", 4);
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(*(id *)&v20[v22], "setHidden:", 1);
  v24 = sub_2210F4(1);
  v25 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_viewConstraints;
  v26 = *(_QWORD *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_viewConstraints];
  *(_QWORD *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_viewConstraints] = v24;
  swift_bridgeObjectRelease(v26);
  v27 = (void *)objc_opt_self(NSLayoutConstraint);
  v28 = *(_QWORD *)&v20[v25];
  sub_12D34();
  swift_bridgeObjectRetain(v28);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "activateConstraints:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

  return v20;
}

id ChevronButton.tintColor.getter()
{
  uint64_t v0;

  return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel), "tintColor"));
}

void (*ChevronButton.tintColor.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = objc_msgSend(*(id *)(v1 + v2), "tintColor");
  return sub_221EA0;
}

void sub_221EA0(uint64_t a1, char a2)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v2 = *(id *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView);
  v5 = *(_QWORD *)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    v2 = v2;
    objc_msgSend(v4, "setTintColor:", v2);
    v6 = *(id *)(v3 + v5);
    objc_msgSend(v6, "setTextColor:", v2);

  }
  else
  {
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView), "setTintColor:", v2);
    v6 = *(id *)(v3 + v5);
    objc_msgSend(v6, "setTextColor:", v2);
  }

}

id ChevronButton.forLastBaselineLayout.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel);
}

uint64_t ChevronButton.objectGraph.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph, v3, 0, 0);
  return swift_retain(*v1);
}

void sub_222054(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  keypath_get_13Tm(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_useTopBottomMargin, a2);
}

void sub_222060(char *a1)
{
  ChevronButton.useTopBottomMargin.setter(*a1);
}

void sub_222084(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  keypath_get_13Tm(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth, a2);
}

id sub_222090(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  double v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = *a2;
  v4 = (_BYTE *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth);
  *(_QWORD *)&v5 = swift_beginAccess(v4, v7, 1, 0).n128_u64[0];
  *v4 = v2;
  return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel), "setAdjustsFontSizeToFitWidth:", v2, v5);
}

uint64_t type metadata accessor for ChevronButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews13ChevronButton);
}

void sub_222120()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel;
  v2 = type metadata accessor for DynamicTypeLabel();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_stackView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_viewConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_defaultTopBottomMargin] = 0x4018000000000000;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_useTopBottomMargin] = 1;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ChevronButton.swift", 43, 2, 120, 0);
  __break(1u);
}

id sub_222254(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int16 a12)
{
  if (HIBYTE(a12) <= 0xFEu)
    return sub_DDA0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (unsigned __int16)(a12 & 0x1FF) >> 8);
  return result;
}

NSString sub_222294()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_3DD570 = (uint64_t)result;
  return result;
}

id DownloadsCVCLibraryActionControllerBridge.__allocating_init(libraryActionController:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_1D5D4((uint64_t)a1, (uint64_t)v3+ OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, "init");
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

id DownloadsCVCLibraryActionControllerBridge.init(libraryActionController:)(_QWORD *a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D5D4((uint64_t)a1, (uint64_t)v1+ OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, "init");
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

void DownloadsCVCLibraryActionControllerBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.DownloadsCVCLibraryActionControllerBridge", 65, "init()", 6, 0);
  __break(1u);
}

Swift::Void __swiftcall DownloadsCVCLibraryActionControllerBridge.cancelDownload(forEpisodeUuid:)(Swift::String forEpisodeUuid)
{
  sub_2224F8(forEpisodeUuid._countAndFlagsBits, (uint64_t)forEpisodeUuid._object, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of LibraryActionControllerProtocol.cancel(download:));
}

Swift::Void __swiftcall DownloadsCVCLibraryActionControllerBridge.cancelAllDownloads(userInitiated:)(Swift::Bool userInitiated)
{
  uint64_t v1;
  _BOOL8 v2;
  uint64_t v3;
  uint64_t v4;

  v2 = userInitiated;
  v3 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController
                 + 24);
  v4 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1+ OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController), v3);
  dispatch thunk of LibraryActionControllerProtocol.cancelAllDownloads(userInitiated:)(v2, v3, v4);
}

Swift::Void __swiftcall DownloadsCVCLibraryActionControllerBridge.resumeOrPauseEpisodeDownload(withUuid:)(Swift::String withUuid)
{
  sub_2224F8(withUuid._countAndFlagsBits, (uint64_t)withUuid._object, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of LibraryActionControllerProtocol.resumeOrPauseEpisodeDownload(withUuid:));
}

uint64_t sub_2224F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(v3
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController
                 + 24);
  v8 = *(_QWORD *)(v3
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3+ OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController), v7);
  return a3(a1, a2, v7, v8);
}

uint64_t type metadata accessor for DownloadsCVCLibraryActionControllerBridge()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge);
}

uint64_t method lookup function for DownloadsCVCLibraryActionControllerBridge(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DownloadsCVCLibraryActionControllerBridge);
}

uint64_t dispatch thunk of DownloadsCVCLibraryActionControllerBridge.__allocating_init(libraryActionController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

double sub_22259C(char *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double result;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v8 = v7;
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController
                    + 24];
  v10 = *(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController
                     + 32];
  __swift_project_boxed_opaque_existential_1(&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController], v9);
  v11 = a1;
  a4(v6, v8, v9, v10);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

id MiniPlayerHostViewController.__allocating_init(asPartOf:wrapping:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  id v7;
  objc_super v9;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_playerHeight] = 0x4057400000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController] = a2;
  v9.receiver = v5;
  v9.super_class = v2;
  v7 = objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
  swift_release(a1);
  return v7;
}

id MiniPlayerHostViewController.init(asPartOf:wrapping:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  id v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_playerHeight] = 0x4057400000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController] = a2;
  v9.receiver = v2;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
  swift_release(a1);
  return v7;
}

char *MiniPlayerHostViewController.__allocating_init(asPartOf:wrapping:miniPlayerController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  void *v13;
  objc_super v15;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_playerHeight] = 0x4057400000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController] = a2;
  v15.receiver = v9;
  v15.super_class = v4;
  v11 = (char *)objc_msgSendSuper2(&v15, "initWithNibName:bundle:", 0, 0);
  swift_release(a1);
  v12 = &v11[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController];
  v13 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController];
  *(_QWORD *)v12 = a3;
  *((_QWORD *)v12 + 1) = a4;

  return v11;
}

Swift::Void __swiftcall MiniPlayerHostViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "viewDidLoad");
  sub_222864();
}

void sub_222864()
{
  char *v0;
  char *v1;
  id *v2;
  id v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  char v25[24];

  v1 = v0;
  v2 = (id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController];
  v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController], "parentViewController", swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController], v25, 0, 0).n128_f64[0]);
  if (v3)
  {
    v4 = v3;
    sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
    v5 = v1;
    v6 = v4;
    LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

    if ((v4 & 1) != 0)
      goto LABEL_9;
  }
  objc_msgSend(v1, "addChildViewController:", *v2);
  v7 = objc_msgSend(v1, "view");
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  v8 = v7;
  v9 = objc_msgSend(*v2, "view");
  if (!v9)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = v9;
  objc_msgSend(v8, "insertSubview:atIndex:", v9, 0);

  v11 = objc_msgSend(*v2, "view");
  if (!v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v12 = v11;
  objc_msgSend(v11, "setAutoresizingMask:", 18);

  v13 = objc_msgSend(*v2, "view");
  if (!v13)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v14 = v13;
  v15 = objc_msgSend(v1, "view");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "bounds");
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;

    objc_msgSend(v14, "setFrame:", v18, v20, v22, v24);
    objc_msgSend(*v2, "didMoveToParentViewController:", v1);
    objc_msgSend(*v2, "setAdditionalSafeAreaInsets:", 0.0, 0.0, *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_playerHeight], 0.0);
LABEL_9:
    sub_22305C();
    return;
  }
LABEL_14:
  __break(1u);
}

Swift::Void __swiftcall MiniPlayerHostViewController.viewDidLayoutSubviews()()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double Width;
  void *v24;
  double v25;
  uint64_t v26;
  uint64_t ObjectType;
  id v28;
  uint64_t v29;
  double v30;
  _BYTE v31[24];
  objc_super v32;
  CGRect v33;

  v32.receiver = v0;
  v32.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v32, "viewDidLayoutSubviews");
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController], "view", swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController], v31, 0, 0).n128_f64[0]);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = v3;
  objc_msgSend(v3, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(v2, "setFrame:", v6, v8, v10, v12);
  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v14 = v13;
  objc_msgSend(v13, "bounds");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;

  v33.origin.x = v16;
  v33.origin.y = v18;
  v33.size.width = v20;
  v33.size.height = v22;
  Width = CGRectGetWidth(v33);
  v24 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController];
  if (v24)
  {
    v25 = Width;
    v26 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController
                       + 8];
    ObjectType = swift_getObjectType();
    v28 = v24;
    v29 = SizeClass.init(width:)(v25);
    v30 = SizeClass.margins(width:)(v29, v25);
    UIEdgeInsets.init(topBottom:sides:)(0.0, v30);
    (*(void (**)(uint64_t, uint64_t))(v26 + 16))(ObjectType, v26);

  }
}

void MiniPlayerHostViewController.tearDown()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController);
  if (v1)
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController
                   + 8);
    ObjectType = swift_getObjectType();
    v4 = *(void (**)(uint64_t, uint64_t))(v2 + 32);
    v5 = v1;
    v4(ObjectType, v2);

  }
  else
  {
    __break(1u);
  }
}

void MiniPlayerHostViewController.setUp(interaction:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  id v8;

  v2 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController);
  if (v3)
  {
    v5 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType();
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
    v8 = v3;
    v7(a1, ObjectType, v5);

  }
}

id MiniPlayerHostViewController.contentViewController.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController, v3, 0, 0);
  return *v1;
}

void MiniPlayerHostViewController.contentViewController.setter(void *a1)
{
  char *v1;
  void *v2;
  void **v4;
  void *v5;
  id v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  id v13;
  void *v14;
  char v15[24];

  v2 = v1;
  v4 = (void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController];
  swift_beginAccess(v4, v15, 1, 0);
  v5 = *v4;
  *v4 = a1;
  sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v6 = a1;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  if ((v7 & 1) != 0)
    goto LABEL_9;
  v8 = objc_msgSend(v5, "parentViewController");
  if (!v8
    || (v9 = v8,
        v10 = v2,
        v11 = v9,
        v12 = static NSObject.== infix(_:_:)(v11, v10),
        v11,
        v11,
        v10,
        (v12 & 1) == 0))
  {
LABEL_8:
    sub_222864();
LABEL_9:

    return;
  }
  objc_msgSend(v5, "willMoveToParentViewController:", 0);
  if (!objc_msgSend(v10, "isViewLoaded"))
  {
LABEL_7:
    objc_msgSend(v5, "removeFromParentViewController");
    goto LABEL_8;
  }
  v13 = objc_msgSend(v5, "view");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "removeFromSuperview");

    goto LABEL_7;
  }
  __break(1u);
}

void (*MiniPlayerHostViewController.contentViewController.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController, v3, 0, 0);
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  return sub_22300C;
}

void sub_22300C(void **a1, char a2)
{
  void *v2;
  id v3;
  id *v4;

  v2 = *a1;
  v4 = (id *)((char *)*a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    MiniPlayerHostViewController.contentViewController.setter(v3);

  }
  else
  {
    MiniPlayerHostViewController.contentViewController.setter(v3);
  }
  free(v2);
}

void sub_22305C()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  Class isa;
  id v40;

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController];
  if (v1)
  {
    v2 = v0;
    v40 = v1;
    v3 = objc_msgSend(v40, "parentViewController");
    if (v3)
    {
      v4 = v3;
      sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
      v5 = v2;
      v6 = v4;
      LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

      if ((v4 & 1) != 0)
      {

        return;
      }
    }
    objc_msgSend(v2, "addChildViewController:", v40);
    v7 = objc_msgSend(v2, "view");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v40, "view");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v8, "addSubview:", v9);

        v11 = objc_msgSend(v40, "view");
        if (v11)
        {
          v12 = v11;
          objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
          v14 = swift_allocObject(v13, 64, 7);
          *(_OWORD *)(v14 + 16) = xmmword_2F0A20;
          v15 = objc_msgSend(v12, "leadingAnchor");
          v16 = objc_msgSend(v2, "view");
          if (v16)
          {
            v17 = v16;
            v18 = objc_msgSend(v16, "leadingAnchor");

            v19 = objc_msgSend(v15, "constraintEqualToAnchor:", v18);
            *(_QWORD *)(v14 + 32) = v19;
            v20 = objc_msgSend(v12, "trailingAnchor");
            v21 = objc_msgSend(v2, "view");
            if (v21)
            {
              v22 = v21;
              v23 = objc_msgSend(v21, "trailingAnchor");

              v24 = objc_msgSend(v20, "constraintEqualToAnchor:", v23);
              *(_QWORD *)(v14 + 40) = v24;
              v25 = objc_msgSend(v12, "bottomAnchor");
              v26 = objc_msgSend(v2, "view");
              if (v26)
              {
                v27 = v26;
                v28 = objc_msgSend(v26, "bottomAnchor");

                v29 = objc_msgSend(v25, "constraintEqualToAnchor:", v28);
                *(_QWORD *)(v14 + 48) = v29;
                v30 = objc_msgSend(v12, "topAnchor");
                v31 = objc_msgSend(v2, "view");
                if (v31)
                {
                  v32 = v31;
                  v33 = (void *)objc_opt_self(NSLayoutConstraint);
                  v34 = objc_msgSend(v32, "safeAreaLayoutGuide");

                  v35 = objc_msgSend(v34, "bottomAnchor");
                  v36 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v35, -*(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_playerHeight]);

                  *(_QWORD *)(v14 + 56) = v36;
                  specialized Array._endMutation()(v37);
                  v38 = v14;
                  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
                  isa = Array._bridgeToObjectiveC()().super.isa;
                  objc_msgSend(v33, "activateConstraints:", isa, swift_bridgeObjectRelease(v38).n128_f64[0]);

                  return;
                }
                goto LABEL_20;
              }
LABEL_19:
              __break(1u);
LABEL_20:
              __break(1u);
              return;
            }
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
}

void *MiniPlayerHostViewController.childForStatusBarStyle.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MiniPlayerHostViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.MiniPlayerHostViewController", 52, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_2235E0@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_contentViewController);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_223630(id *a1)
{
  MiniPlayerHostViewController.contentViewController.setter(*a1);
}

uint64_t type metadata accessor for MiniPlayerHostViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews28MiniPlayerHostViewController);
}

uint64_t method lookup function for MiniPlayerHostViewController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for MiniPlayerHostViewController);
}

uint64_t dispatch thunk of MiniPlayerHostViewController.__allocating_init(asPartOf:wrapping:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_22368C()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_miniPlayerViewController];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28MiniPlayerHostViewController_playerHeight] = 0x4057400000000000;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/MiniPlayerHostViewController.swift", 58, 2, 55, 0);
  __break(1u);
}

void sub_223734()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _BYTE v20[24];
  char v21[24];

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - v6;
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_presenter;
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_presenter];
  if (!v9)
    goto LABEL_5;
  *(_QWORD *)(v9 + 40) = &off_38C258;
  v10 = swift_unknownObjectWeakAssign(v9 + 32, v0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(v9 + 40);
    ObjectType = swift_getObjectType();
    v14 = v9 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
    swift_beginAccess(v9 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v21, 0, 0);
    sub_F8BC(v14, (uint64_t)v7);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 8);
    swift_retain(v9);
    v16 = v1;
    v15(v7, ObjectType, v13);
    swift_unknownObjectRelease(v12);
    sub_FA4C((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    swift_release(v9);

  }
  if (!*(_QWORD *)&v1[v8])
  {
LABEL_5:
    swift_storeEnumTagMultiPayload(v7, v2, 5);
    sub_F8BC((uint64_t)v7, (uint64_t)v4);
    v17 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_episodePlayState];
    swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_episodePlayState], v20, 33, 0);
    sub_F900((uint64_t)v4, v17);
    swift_endAccess(v20);
    sub_223954();
    sub_FA4C((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    sub_FA4C((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  }
}

uint64_t sub_223904@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource);
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

id sub_223920(__int128 *a1)
{
  void *v1;
  __int128 v3;

  v3 = *a1;
  return objc_msgSend(v1, "setNeedsLayout", sub_1BE658((uint64_t *)&v3));
}

id sub_223954()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  double v6;
  float v7;
  float v8;
  char v9;
  _BYTE v12[24];

  v1 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v1);
  v3 = (double *)&v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = (uint64_t)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_episodePlayState];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_episodePlayState], v12, 0, 0);
  sub_F8BC(v4, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  switch(EnumCaseMultiPayload)
  {
    case 1:
      goto LABEL_4;
    case 2:
      *(_DWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progress] = 1065353216;
      objc_msgSend(v0, "setNeedsLayout");
      sub_D1D4((uint64_t)v3, &qword_3D0A50);
      v9 = 2;
      break;
    case 3:
LABEL_4:
      v6 = v3[1];
      if (v6 <= 0.0)
        goto LABEL_8;
      v7 = *v3 / v6;
      v8 = 1.0;
      if (v7 >= 1.0)
      {
        v9 = 2;
        goto LABEL_12;
      }
      if (v7 <= 0.0)
      {
LABEL_8:
        v9 = 0;
        v8 = 0.0;
      }
      else
      {
        v9 = 1;
        v8 = v7;
      }
LABEL_12:
      *(float *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progress] = v8;
      objc_msgSend(v0, "setNeedsLayout");
      break;
    default:
      sub_FA4C((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
      v9 = 0;
      break;
  }
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlayStyle] = v9;
  objc_msgSend(v0, "setNeedsLayout");
  return objc_msgSend(v0, "setNeedsLayout");
}

void sub_223AD8()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  unsigned __int8 (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  objc_super v9;

  v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for LegacyArtworkWithPlaybackStatusView(0);
  objc_msgSendSuper2(&v9, "layoutSubviews");
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlay];
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlay];
  if (v3)
  {
    v4 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType();
    v6 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v4 + 8);
    v7 = v3;
    if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlayStyle] != v6(ObjectType, v4))
    {
      if (*(_QWORD *)v2)
      {
        objc_msgSend(*(id *)v2, "removeFromSuperview");
        v8 = *(id *)v2;
      }
      else
      {
        v8 = 0;
      }
      *(_QWORD *)v2 = 0;
      *((_QWORD *)v2 + 1) = 0;

      v7 = v8;
    }

  }
  sub_223BF8();
  sub_223DE0();
}

void sub_223BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _UNKNOWN **v9;
  id v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  double v14;
  uint64_t v15;
  void (*v16)(uint64_t, double);
  _QWORD *v17;
  double v18;

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlay;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlay))
  {
    v2 = v0;
    v3 = (id)*(unsigned __int8 *)(v0
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlayStyle);
    if (*(_BYTE *)(v0
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlayStyle))
    {
      v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_dataProvider);
      v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_dataProvider + 8);
      v6 = *(_QWORD *)(v2
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_imageStoreProvider);
      v7 = *(_QWORD *)(v2
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_imageStoreProvider
                     + 8);
      if ((_DWORD)v3 == 1)
      {
        v8 = objc_allocWithZone((Class)type metadata accessor for LegacyArtworkProgressBarOverlay());
        swift_unknownObjectRetain_n(v5, 2);
        swift_unknownObjectRetain_n(v6, 2);
        v3 = sub_1299D8(v5, v4, v6, v7);
        v9 = &off_383EA8;
      }
      else
      {
        v10 = objc_allocWithZone((Class)type metadata accessor for LegacyArtworkCheckmarkProgressOverlay());
        swift_unknownObjectRetain(v5);
        swift_unknownObjectRetain(v6);
        sub_149268(v5, v4, v6, v7);
        v3 = v11;
        v9 = &off_385498;
      }
      swift_unknownObjectRelease(v5);
      swift_unknownObjectRelease(v6);
    }
    else
    {
      v9 = (_UNKNOWN **)*(unsigned __int8 *)(v0
                                           + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlayStyle);
    }
    v12 = *(_QWORD **)v1;
    *(_QWORD *)v1 = v3;
    *(_QWORD *)(v1 + 8) = v9;

    v13 = *(_QWORD **)v1;
    if (*(_QWORD *)v1)
    {
      v14 = *(double *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius);
      v15 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle);
      v16 = *(void (**)(uint64_t, double))((char *)&stru_68.reserved2 + (swift_isaMask & *v13));
      v17 = v13;
      v16(v15, v14);

      if (*(_QWORD *)v1)
      {
        v18 = 1.0;
        if (*(_BYTE *)(v2
                      + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressHidden))
          v18 = 0.0;
        objc_msgSend(*(id *)v1, "setAlpha:", v18);
      }
    }
  }
}

void sub_223DE0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  id v9;
  float v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t, uint64_t, __n128);
  __n128 v20;
  id v21;
  id v22;
  void *v23;
  char *v24;
  id v25;
  _QWORD v26[2];
  id v27;
  id v28[3];

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlay];
  v6 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlay];
  if (v6)
  {
    v7 = *((_QWORD *)v5 + 1);
    ObjectType = swift_getObjectType();
    v9 = v6;
    objc_msgSend(v1, "bounds");
    objc_msgSend(v9, "setFrame:");

    v10 = *(float *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progress];
    v28[0] = v9;
    (*(void (**)(uint64_t, uint64_t, float))(v7 + 48))(ObjectType, v7, v10);
    v11 = v28[0];
    v12 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_episodePlayState];
    swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_episodePlayState], v28, 0, 0);
    v13 = sub_F8BC(v12, (uint64_t)v4);
    LOBYTE(v12) = EpisodePlayState.isEpisodePlaying.getter(v13);
    sub_FA4C((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    v14 = swift_getObjectType();
    v26[0] = v11;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 72))(v12 & 1, v14, v7);
    v15 = (void *)v26[0];
    v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource];
    v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24LegacyCachingArtworkView_imageSource + 8];
    v18 = swift_getObjectType();
    v26[1] = v16;
    v27 = v15;
    v26[0] = v17;
    v19 = *(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v7 + 24);
    v20 = swift_bridgeObjectRetain(v16);
    v19(v26, v18, v7, v20);
    v21 = v27;
    v22 = objc_msgSend(v21, "superview");
    if (!v22)
      goto LABEL_4;
    v23 = v22;
    sub_FA88();
    v24 = v1;
    v25 = v23;
    LOBYTE(v23) = static NSObject.== infix(_:_:)(v25, v24);

    if ((v23 & 1) == 0)
LABEL_4:
      objc_msgSend(v1, "addSubview:", v21);

  }
}

void sub_22400C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30[2];
  char v31[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v4);
  v6 = (char *)&v30[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(&off_3D3FF8, v31, 0, 0);
  if (off_3D3FF8)
  {
    v7 = *(_QWORD *)&stru_68.sectname[(_QWORD)off_3D3FF8];
    v8 = *(_QWORD *)&stru_68.segname[(_QWORD)off_3D3FF8 - 8];
    ObjectType = swift_getObjectType();
    v10 = swift_unknownObjectRetain(v7);
    v11 = dispatch thunk of LibraryDataProviderProtocol.episodePlayStateController.getter(ObjectType, v8, v10);
    v12 = swift_unknownObjectRelease(v7);
    v13 = type metadata accessor for LibraryEpisodeLockup(0, v12);
    if (swift_dynamicCastClass(a1, v13))
    {
      v14 = swift_retain(a1);
      v15 = LibraryEpisodeLockup.uuid.getter(v14);
      v17 = v16;
      v18 = type metadata accessor for PlaybackStatusPresenter(0);
      swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
      swift_retain(v11);
      v19 = sub_276AA0(v15, v17, v11);
      sub_2249E0();
      v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_presenter];
      *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_presenter] = v19;
      swift_retain(v19);
      swift_release(v20);
      sub_223734();
      swift_release(a1);
      swift_release(v19);
    }
    else
    {
      sub_2249E0();
      v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_presenter];
      *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_presenter] = 0;
      swift_release(v21);
      sub_223734();
    }
    v30[0] = 0;
    v30[1] = 0;
    v22 = objc_msgSend(v2, "setNeedsLayout", sub_1BE658(v30));
    LegacyLockup.artwork.getter(v22);
    v23 = type metadata accessor for ArtworkModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v6, 1, v23) == 1)
    {
      sub_D1D4((uint64_t)v6, &qword_3D0A58);
      v24 = 0;
      v25 = 0;
    }
    else
    {
      v26 = &v6[*(int *)(v23 + 48)];
      v24 = *(_QWORD *)v26;
      v25 = *((_QWORD *)v26 + 1);
      swift_bridgeObjectRetain(v25);
      sub_FA4C((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    }
    v27 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle];
    v28 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle + 8];
    *(_QWORD *)v27 = v24;
    *((_QWORD *)v27 + 1) = v25;
    objc_msgSend(v2, "setNeedsLayout", swift_bridgeObjectRelease(v28).n128_f64[0]);
    swift_release(v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_224270()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_presenter));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_imageStoreProvider));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlay));
  return sub_FA4C(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_episodePlayState, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
}

id sub_2242C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LegacyArtworkWithPlaybackStatusView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_224360()
{
  return type metadata accessor for LegacyArtworkWithPlaybackStatusView(0);
}

uint64_t type metadata accessor for LegacyArtworkWithPlaybackStatusView(uint64_t a1)
{
  uint64_t result;

  result = qword_3DD638;
  if (!qword_3DD638)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LegacyArtworkWithPlaybackStatusView);
  return result;
}

uint64_t sub_2243A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "\b";
  v4[1] = &unk_300D30;
  v4[2] = (char *)&value witness table for Builtin.Int32 + 64;
  v4[3] = &unk_300D48;
  v4[4] = &unk_300D60;
  v4[5] = &unk_300D78;
  result = type metadata accessor for EpisodePlayState(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 1120);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_224450(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_F8BC(a1, (uint64_t)v5);
  v6 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_episodePlayState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_episodePlayState, v9, 33, 0);
  sub_F900((uint64_t)v5, v6);
  swift_endAccess(v9);
  sub_223954();
  return sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
}

id sub_224508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  id v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  unint64_t v27;
  NSString v28;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&a6[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_presenter] = 0;
  *(_DWORD *)&a6[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progress] = 0;
  a6[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressHidden] = 0;
  a6[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlayStyle] = 0;
  v19 = &a6[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlay];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v20 = &a6[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_episodePlayState];
  v21 = type metadata accessor for EpisodePlayState(0);
  swift_storeEnumTagMultiPayload(v20, v21, 4);
  v22 = (uint64_t *)&a6[OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_imageStoreProvider];
  *v22 = a3;
  v22[1] = a8;
  sub_224998(a5, (uint64_t)v18);
  swift_unknownObjectRetain(a3);
  v23 = sub_1BFBA0(a1, a2, a3, a4, (uint64_t)v18, a6, a7, a8);
  v32 = 0;
  v33 = 0xE000000000000000;
  v24 = v23;
  v25._object = (void *)0x80000000003078F0;
  v25._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  v31 = 4;
  _print_unlocked<A, B>(_:_:)(&v31, &v32, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v27 = v33;
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "setAccessibilityIdentifier:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

  sub_D1D4(a5, &qword_3D5918);
  return v24;
}

void sub_224704()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  int *v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  __n128 v11;
  _BYTE *v12;
  uint64_t v13;
  char v14[24];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v0);
  v2 = &v14[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(&off_3D3FF8, v14, 0, 0);
  v3 = off_3D3FF8;
  if (off_3D3FF8)
  {
    v4 = (objc_class *)type metadata accessor for LegacyArtworkWithPlaybackStatusView(0);
    v5 = *(_QWORD *)&stru_68.sectname[(_QWORD)v3];
    v6 = *(_QWORD *)&stru_68.segname[(_QWORD)v3 - 8];
    ObjectType = swift_getObjectType();
    v8 = type metadata accessor for ImageBlur(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
    v9 = *(_QWORD *)(v6 + 8);
    swift_unknownObjectRetain_n(v5, 2);
    v10 = sub_224508(v5, v6, v5, 0, (uint64_t)v2, (char *)objc_allocWithZone(v4), ObjectType, v9);
    swift_unknownObjectRelease_n(v5, 2, v11);
    HIBYTE(v13) = v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
    v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
    v12 = v10;
    sub_EB33C((unsigned __int8 *)&v13 + 7);

  }
  else
  {
    __break(1u);
  }
}

id sub_224850(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t ObjectType;
  char *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  _QWORD v22[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D80);
  BaseObjectGraph.inject<A>(_:)(v22, v6, v6);
  v7 = v22[0];
  v8 = v22[1];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD648);
  BaseObjectGraph.inject<A>(_:)(v21, v9, v9);
  v10 = v21[0];
  v11 = v21[1];
  v12 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.optional<A>(_:)(&v20, v12, v12, v13);
  v14 = v20;
  sub_224998(a2, (uint64_t)v5);
  ObjectType = swift_getObjectType();
  v16 = (char *)objc_allocWithZone((Class)type metadata accessor for LegacyArtworkWithPlaybackStatusView(0));
  v17 = sub_224508(v7, v8, v10, v14, (uint64_t)v5, v16, ObjectType, v11);
  swift_unknownObjectRelease(v7);
  swift_unknownObjectRelease(v10);
  swift_release(v14);
  sub_D1D4(a2, &qword_3D5918);
  return v17;
}

uint64_t sub_224998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_2249E0()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, __n128);
  __n128 v13;
  _BYTE v15[24];

  v1 = type metadata accessor for EpisodePlayState(0);
  *(_QWORD *)&result = __chkstk_darwin(v1).n128_u64[0];
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_presenter);
  if (v5)
  {
    *(_QWORD *)(v5 + 40) = 0;
    v6 = swift_unknownObjectWeakAssign(v5 + 32, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      v8 = Strong;
      v9 = *(_QWORD *)(v5 + 40);
      ObjectType = swift_getObjectType();
      v11 = v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
      swift_beginAccess(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v15, 0, 0);
      sub_F8BC(v11, (uint64_t)v4);
      v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 8);
      v13 = swift_retain(v5);
      v12(v4, ObjectType, v9, v13);
      swift_unknownObjectRelease(v8);
      sub_FA4C((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_224AE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for ModernImpressionsScrollCoordinator()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews34ModernImpressionsScrollCoordinator);
}

uint64_t sub_224B2C(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  swift_retain(v3);
  DynamicImpressionsCalculator.viewBounds.setter(objc_msgSend(a1, "bounds"));
  return swift_release(v3);
}

uint64_t sub_224B6C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 16);
  swift_retain(v4);
  v5 = objc_msgSend(a2, "container");
  objc_msgSend(v5, "contentSize");
  swift_unknownObjectRelease(v5);
  DynamicImpressionsCalculator.viewBounds.setter(v6);
  return swift_release(v4);
}

void sub_224BFC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  double v20;
  double v21;
  CGRect v22;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_isEnabled) == 1)
  {
    v2 = v1;
    objc_msgSend(a1, "contentSize");
    v5 = v4;
    if ((*(_BYTE *)(v1
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_shouldPrepareNextPageWithoutContent) & 1) != 0
      || v4 >= COERCE_DOUBLE(1))
    {
      v6 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_paginatedPresenter;
      Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_paginatedPresenter);
      if (Strong)
      {
        v8 = Strong;
        v9 = *(_QWORD *)(v6 + 8);
        ObjectType = swift_getObjectType();
        if ((dispatch thunk of PaginatedPresenter.isPreparingNextPage.getter(ObjectType, v9) & 1) == 0
          && (dispatch thunk of PaginatedPresenter.shouldPrepareNextPage()(ObjectType, v9) & 1) != 0)
        {
          objc_msgSend(a1, "frame");
          v12 = v11;
          v14 = v13;
          v16 = v15;
          v18 = v17;
          if (*(double *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_distance) >= v5)
            v19 = 0.0;
          else
            v19 = *(double *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_distance);
          objc_msgSend(a1, "contentOffset");
          v21 = v20;
          v22.origin.x = v12;
          v22.origin.y = v14;
          v22.size.width = v16;
          v22.size.height = v18;
          if (v5 - (v21 + CGRectGetHeight(v22)) <= v19)
            dispatch thunk of PaginatedPresenter.prepareNextPage()(ObjectType, v9);
        }
        swift_unknownObjectRelease(v8);
      }
    }
  }
}

id sub_224DA4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InfiniteScrollCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for InfiniteScrollCoordinator()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator);
}

void sub_224E2C()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_isDecelerating) = 1;
}

double sub_224E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  double result;

  v1 = v0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_isDecelerating) = 0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_afterDecelerationBlocks;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_afterDecelerationBlocks);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_afterDecelerationBlocks));
    v5 = (_QWORD *)(v3 + 40);
    do
    {
      v7 = (void (*)(uint64_t))*(v5 - 1);
      v6 = *v5;
      v8 = swift_retain(*v5);
      v7(v8);
      swift_release(v6);
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v3);
    v3 = *(_QWORD *)(v1 + v2);
  }
  *(_QWORD *)(v1 + v2) = &_swiftEmptyArrayStorage;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

void sub_224EE8()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)sub_224F3C + 4 * byte_300E60[(*(unsigned __int8 (**)(void))&stru_108.segname[swift_isaMask & *v0])()];
  __asm { BR              X10 }
}

char *sub_224F3C()
{
  char v0;
  id v1;

  v1 = objc_allocWithZone((Class)type metadata accessor for UberBackgroundView());
  return sub_156DB0(v0, 0.0, 0.0, 0.0, 0.0);
}

id sub_224FA0(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  double v6;
  double v7;
  double Height;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  char *v14;
  void *v15;
  double v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t, uint64_t, double);
  id v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, double);
  id v29;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v2 = v1;
  v4 = objc_msgSend(a1, "refreshControl");
  if (v4)
  {
    v5 = v4;
    if (objc_msgSend(v4, "isRefreshing"))
    {
      objc_msgSend(a1, "_systemContentInset");
      v7 = v6;
      objc_msgSend(v5, "frame");
      Height = CGRectGetHeight(v31);

      v9 = v7 - Height;
      goto LABEL_6;
    }

  }
  objc_msgSend(a1, "_systemContentInset");
  v9 = v10;
LABEL_6:
  objc_msgSend(a1, "contentOffset");
  v12 = -v9;
  if (v11 <= -v9)
    v12 = v11;
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_yOffset;
  *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_yOffset] = v12;
  v14 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView];
  v15 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView];
  if (v15)
  {
    v16 = v11;
    v17 = *((_QWORD *)v14 + 1);
    ObjectType = swift_getObjectType();
    v19 = *(void (**)(uint64_t, uint64_t, double))(v17 + 64);
    v20 = v15;
    v19(ObjectType, v17, v9 + v16);

  }
  objc_msgSend(v2, "bounds");
  v21 = CGRectGetHeight(v32);
  v22 = *(double *)&v2[v13];
  objc_msgSend(v2, "bounds");
  v23 = CGRectGetHeight(v33);
  v24 = *(void **)v14;
  if (*(_QWORD *)v14)
  {
    v25 = *((_QWORD *)v14 + 1);
    v26 = (v21 - v22) / (v9 + v23);
    v27 = swift_getObjectType();
    v28 = *(void (**)(uint64_t, uint64_t, double))(v25 + 40);
    v29 = v24;
    v28(v27, v25, v26);

  }
  return objc_msgSend(v2, "setNeedsLayout", v23);
}

void (*sub_225154(double *a1))(double *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  double (*v7)(uint64_t, uint64_t);
  id v8;
  double v9;

  *((_QWORD *)a1 + 1) = v1;
  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView);
  if (v4)
  {
    v5 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType();
    v7 = *(double (**)(uint64_t, uint64_t))(v5 + 8);
    v8 = v4;
    v9 = v7(ObjectType, v5);

  }
  else
  {
    v9 = 0.0;
  }
  *a1 = v9;
  return sub_2251E8;
}

void sub_2251E8(double *a1)
{
  void *v1;
  double v2;
  id v3;
  id v4;

  v1 = (void *)*((_QWORD *)a1 + 1);
  v2 = *a1;
  v3 = sub_225254();
  objc_msgSend(v1, "bringSubviewToFront:", v3);

  v4 = sub_225254();
  objc_msgSend(v4, "setAlpha:", v2);

}

id sub_225254()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell____lazy_storage___fadeOutView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell____lazy_storage___fadeOutView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell____lazy_storage___fadeOutView];
  }
  else
  {
    objc_msgSend(v0, "bounds");
    v8 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v4, v5, v6, v7);
    objc_msgSend(v8, "setAutoresizingMask:", 18);
    v9 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v8, "setBackgroundColor:", v9);

    objc_msgSend(v8, "setAlpha:", 0.0);
    v10 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

void sub_225368(void *a1)
{
  _QWORD *v1;
  char v2;
  char *v3;
  void *v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(void *, _QWORD, uint64_t, uint64_t);
  void *v10;
  unsigned int v11;
  id v12;
  id v13;

  if (a1)
  {
    v13 = a1;
    if (*((unsigned __int8 *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background + 8) > 0x3Fu)
    {
      v2 = (*(uint64_t (**)(void))((char *)&stru_108.reloff + (swift_isaMask & *v1)))() & 1;
      a1 = v13;
    }
    else
    {
      v2 = 0;
    }
    sub_226094(a1, v2);
    goto LABEL_10;
  }
  v3 = (char *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background;
  v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background);
  *(_QWORD *)v3 = 0;
  v5 = v3[8];
  v3[8] = 0x80;
  sub_27F60(v4, v5);
  v6 = *(void **)((char *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView);
  if (v6)
  {
    v7 = *(_QWORD *)((char *)v1
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView
                   + 8);
    ObjectType = swift_getObjectType();
    v9 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 88);
    v13 = v6;
    v9(0, 0, ObjectType, v7);
    v10 = *(void **)v3;
    v11 = v3[8];
    if (v11 >> 6)
    {
      if (v11 >> 6 != 1)
      {
LABEL_10:

        return;
      }
      objc_msgSend(v13, "setBackgroundColor:", v10);
    }
    else
    {
      v12 = v10;
      v9(v10, v11 & 1, ObjectType, v7);
    }

    sub_27F60(v10, v11);
  }
}

void (*sub_2254E8(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  id *v3;
  id v4;
  id v5;

  a1[1] = v1;
  v3 = (id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background);
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background + 8) > 0x3Fu)
  {
    v4 = 0;
  }
  else
  {
    v4 = *v3;
    v5 = *v3;
  }
  *a1 = v4;
  return sub_225540;
}

void sub_225540(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    sub_225368(v2);

  }
  else
  {
    sub_225368(*a1);
  }
}

double sub_225594()
{
  void *v0;
  double v1;

  objc_msgSend(v0, "alpha");
  return 1.0 - v1;
}

_QWORD *sub_2255BC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  id v11;
  void *v12;
  _QWORD *v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  _QWORD *v22;
  id v23;
  _QWORD *v24;
  id v25;
  objc_super v27;

  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_yOffset] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_backgroundHeight] = 0;
  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background];
  *(_QWORD *)v10 = 0;
  v10[8] = 0x80;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell____lazy_storage___fadeOutView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_requestCancellable] = 0;
  v27.receiver = v4;
  v27.super_class = (Class)type metadata accessor for UberCollectionViewCell();
  v11 = objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  v12 = (void *)objc_opt_self(UIColor);
  v13 = v11;
  v14 = objc_msgSend(v12, "clearColor");
  objc_msgSend(v13, "setBackgroundColor:", v14);

  (*(void (**)(void))&stru_108.segname[swift_isaMask & *v13])();
  sub_224EE8();
  if (v15)
  {
    v17 = v15;
    v18 = v16;
    objc_msgSend(v15, "setAccessibilityIgnoresInvertColors:", 1);
    v19 = (_QWORD *)((char *)v13 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView);
    v20 = *(void **)((char *)v13 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView);
    *v19 = v17;
    v19[1] = v18;
    v21 = v17;

    objc_msgSend(v13, "insertSubview:atIndex:", v21, 0);
    v22 = v13;
    v23 = sub_225254();
    objc_msgSend(v22, "addSubview:", v23);

    v24 = v22;
    v25 = sub_225254();
    objc_msgSend(v24, "bringSubviewToFront:", v25);

  }
  return v13;
}

void sub_225874()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Height;
  uint64_t v13;
  uint64_t v14;
  id v15;
  double v16;
  double v17;
  double v18;
  objc_super v19;
  CGRect v20;
  CGRect v21;

  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for UberCollectionViewCell();
  objc_msgSendSuper2(&v19, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "contentView");
    objc_msgSend(v3, "frame");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v20.origin.x = v5;
    v20.origin.y = v7;
    v20.size.width = v9;
    v20.size.height = v11;
    Height = CGRectGetHeight(v20);
    v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_yOffset;
    if (Height <= Height - *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_yOffset])
      Height = Height - *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_yOffset];
    v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_backgroundHeight;
    *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_backgroundHeight] = Height;
    v15 = v2;
    objc_msgSend(v0, "safeAreaInsets");
    v17 = v16;
    v18 = *(double *)&v0[v13];
    objc_msgSend(v0, "bounds");
    objc_msgSend(v15, "setFrame:", v17, v18, CGRectGetWidth(v21), *(double *)&v0[v14]);

  }
}

id sub_2259E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UberCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UberCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews22UberCollectionViewCell);
}

uint64_t sub_225A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t initializeBufferWithCopyOfBuffer for UberCollectionViewCell.Background(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_27F54(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for UberCollectionViewCell.Background(uint64_t a1)
{
  sub_27F60(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for UberCollectionViewCell.Background(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_27F54(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_27F60(v5, v6);
  return a1;
}

uint64_t assignWithTake for UberCollectionViewCell.Background(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_27F60(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for UberCollectionViewCell.Background(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for UberCollectionViewCell.Background(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_225C20(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_225C40(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_225C50(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_BYTE *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for UberCollectionViewCell.Background()
{
  return &type metadata for UberCollectionViewCell.Background;
}

void sub_225C90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView + 8);
    ObjectType = swift_getObjectType();
    v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v5 = v1;
    v4(ObjectType, v2);

  }
}

void sub_225D10(double a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = sub_225254();
  objc_msgSend(v1, "bringSubviewToFront:", v3);

  v4 = sub_225254();
  objc_msgSend(v4, "setAlpha:", a1);

}

void (*sub_225D78(double **a1))(_QWORD *)
{
  double *v2;

  v2 = (double *)malloc(0x28uLL);
  *a1 = v2;
  *((_QWORD *)v2 + 4) = sub_225154(v2);
  return sub_919A8;
}

double sub_225DBC()
{
  void *v0;
  id v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  CGRect v11;

  v1 = objc_msgSend(v0, "contentView");
  objc_msgSend(v1, "frame");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v11.origin.x = v3;
  v11.origin.y = v5;
  v11.size.width = v7;
  v11.size.height = v9;
  return CGRectGetHeight(v11);
}

id sub_225E30()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "contentView");
  v2 = objc_msgSend(v1, "overrideUserInterfaceStyle");

  return v2;
}

char *sub_225E7C()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView];
  if (v1)
  {
    v2 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView];
  }
  else
  {
    v2 = v0;
    v1 = 0;
  }
  v3 = v1;
  return v2;
}

id sub_225EC0()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;

  v1 = (id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background);
  if (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background + 8) > 0x3Fu)
    return 0;
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void (*sub_225F08(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2254E8(v2);
  return sub_919A8;
}

uint64_t sub_225F4C()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_requestCancellable);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_requestCancellable, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_225F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_requestCancellable);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_225FE4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_requestCancellable, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_226028(void *a1)
{
  id v2;

  v2 = a1;
  sub_225368(a1);
}

unint64_t sub_226050()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DD7A0;
  if (!qword_3DD7A0)
  {
    v1 = type metadata accessor for UberCollectionViewCell();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_3DD7A0);
  }
  return result;
}

void sub_226094(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(void *, _QWORD, uint64_t, uint64_t);
  void *v10;
  unsigned int v11;
  id v12;
  id v13;

  v3 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background);
  *(_QWORD *)v3 = a1;
  v5 = *(_BYTE *)(v3 + 8);
  *(_BYTE *)(v3 + 8) = a2;
  sub_27F54(a1, a2);
  sub_27F60(v4, v5);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView);
  if (v6)
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView + 8);
    ObjectType = swift_getObjectType();
    v9 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 88);
    v13 = v6;
    v9(0, 0, ObjectType, v7);
    v10 = *(void **)v3;
    v11 = *(unsigned __int8 *)(v3 + 8);
    if (!(v11 >> 6))
    {
      v12 = v10;
      v9(v10, v11 & 1, ObjectType, v7);
      goto LABEL_7;
    }
    if (v11 >> 6 == 1)
    {
      objc_msgSend(v13, "setBackgroundColor:", v10);
LABEL_7:

      sub_27F60(v10, v11);
      return;
    }

  }
}

void sub_2261E0()
{
  char *v0;
  char *v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_yOffset] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_backgroundHeight] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background];
  *(_QWORD *)v2 = 0;
  v2[8] = 0x80;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell____lazy_storage___fadeOutView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_requestCancellable] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UberCollectionViewCell.swift", 52, 2, 108, 0);
  __break(1u);
}

uint64_t sub_22629C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v5;
  void *v7;
  id v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 120);
  if (Strong)
  {
    v5 = (void *)Strong;
    UIResponder.nearestFlowController.getter((uint64_t)&v9);

    if (*((_QWORD *)&v10 + 1))
      return sub_1B738(&v9, a1);
  }
  else
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
  }
  v7 = (void *)swift_unknownObjectUnownedLoadStrong(v2 + 112);
  v8 = objc_msgSend(v7, "nextResponder");

  if (v8)
  {
    UIResponder.nearestFlowController.getter(a1);

  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return sub_3E038((uint64_t)&v9);
}

id sub_22635C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  NSObject *v17;
  __n128 v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  __int128 v27;
  uint64_t v28;
  uint64_t v29[3];
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22629C((uint64_t)&v27);
  if (v28)
  {
    sub_1B738(&v27, (uint64_t)v29);
    v12 = v30;
    v13 = v31;
    __swift_project_boxed_opaque_existential_1(v29, v30);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24))(a1, a2, a3, v12, v13);
    __swift_destroy_boxed_opaque_existential_0(v29);
  }
  else
  {
    sub_3E038((uint64_t)&v27);
    static Logger.navigation.getter(v15);
    v16 = swift_retain_n(v3, 2);
    v17 = Logger.logObject.getter(v16);
    v19 = static os_log_type_t.fault.getter(v18);
    if (os_log_type_enabled(v17, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      v29[0] = v21;
      *(_DWORD *)v20 = 136315138;
      v26[1] = v20 + 4;
      v22 = _typeName(_:qualified:)(*v4, 0);
      v24 = v23;
      *(_QWORD *)&v27 = sub_37E78(v22, v23, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, (char *)&v27 + 8);
      swift_release_n(v4, 2);
      swift_bridgeObjectRelease(v24);
      _os_log_impl(&dword_0, v17, v19, "%s asked for view controller without parent flow controller, this is undefined", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {

      swift_release_n(v4, 2);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
  }
  return (id)v14;
}

uint64_t sub_2265AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;
  _BYTE v30[40];
  _BYTE v31[40];

  v26 = a3;
  v27 = a4;
  v7 = type metadata accessor for FlowPresentationHints(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FlowDestination(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  sub_22629C((uint64_t)v31);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v4 + 112);
  sub_91F2C((uint64_t)v31, (uint64_t)v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  sub_54C0C(a2, (uint64_t)v10);
  v15 = *(unsigned __int8 *)(v12 + 80);
  v16 = (v15 + 56) & ~v15;
  v17 = *(unsigned __int8 *)(v8 + 80);
  v18 = (v13 + v17 + v16) & ~v17;
  v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_38C4E0, v19 + 16, v15 | v17 | 7);
  sub_226C40((uint64_t)v30, v20 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20 + v16, (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  sub_A7FA8((uint64_t)v10, v20 + v18);
  v21 = (_QWORD *)(v20 + v19);
  v22 = v27;
  *v21 = v26;
  v21[1] = v22;
  aBlock[4] = sub_226C88;
  v29 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_52;
  v23 = _Block_copy(aBlock);
  v24 = v29;
  swift_bridgeObjectRetain(v22);
  objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, v23, swift_release(v24).n128_f64[0]);
  _Block_release(v23);

  return sub_3E038((uint64_t)v31);
}

uint64_t sub_2267A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_91F2C(a1, (uint64_t)v12);
  v9 = v13;
  if (!v13)
    return sub_3E038((uint64_t)v12);
  v10 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32))(a2, a3, a4, a5, v9, v10);
  return __swift_destroy_boxed_opaque_existential_0(v12);
}

uint64_t sub_226840()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 4);
  __swift_destroy_boxed_opaque_existential_0(v0 + 9);
  swift_unknownObjectUnownedDestroy(v0 + 14);
  swift_unknownObjectWeakDestroy(v0 + 15);
  return swift_deallocClassInstance(v0, 128, 7);
}

uint64_t type metadata accessor for DismissingFlowController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24DismissingFlowController);
}

double sub_2268A4()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_unknownObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 16)).n128_u64[0];
  return result;
}

uint64_t sub_2268CC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1D5D4(*v1 + 32, a1);
}

id sub_2268DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22635C(a1, a2, a3);
}

uint64_t sub_2268FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2265AC(a1, a2, a3, a4);
}

uint64_t sub_22691C(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  sub_22629C((uint64_t)v17);
  v14 = v18;
  if (!v18)
    return sub_3E038((uint64_t)v17);
  v15 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v15 + 40))(a1, a2, a3 & 1, a4 & 1, a5 & 1, a6 & 1, a7, v14, v15);
  return __swift_destroy_boxed_opaque_existential_0(v17);
}

uint64_t sub_2269E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_22629C((uint64_t)v7);
  v4 = v8;
  if (!v8)
    return sub_3E038((uint64_t)v7);
  v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, a2, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0(v7);
}

uint64_t sub_226A6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  sub_22629C((uint64_t)v5);
  v2 = v6;
  if (!v6)
    return sub_3E038((uint64_t)v5);
  v3 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v2, v3);
  return __swift_destroy_boxed_opaque_existential_0(v5);
}

uint64_t sub_226AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;

  v1 = type metadata accessor for FlowDestination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (int *)type metadata accessor for FlowPresentationHints(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v11 = v0 + v9;
  v12 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v9, v12);
  v13 = v0 + v9 + v6[6];
  if (*(unsigned __int8 *)(v13 + 40) != 255)

  v14 = v11 + v6[7];
  v15 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);

  v16 = (_QWORD *)(v11 + v6[9]);
  if (v16[3])
    __swift_destroy_boxed_opaque_existential_0(v16);
  v17 = (v10 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = v17 + 16;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v17 + 8));
  return swift_deallocObject(v0, v18, v3 | v8 | 7);
}

uint64_t sub_226C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D31A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_226C88()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;

  v1 = *(_QWORD *)(type metadata accessor for FlowDestination(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for FlowPresentationHints(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (uint64_t *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_2267A4(v0 + 16, v0 + v2, v0 + v5, *v6, v6[1]);
}

uint64_t block_copy_helper_52(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_52(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_226D1C(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return _typeName(_:qualified:)(v1, 0);
}

unint64_t sub_226D44()
{
  unint64_t result;

  result = qword_3DD868;
  if (!qword_3DD868)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NowPlayingIndicatorState, &type metadata for NowPlayingIndicatorState);
    atomic_store(result, (unint64_t *)&qword_3DD868);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NowPlayingIndicatorState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_226DD4 + 4 * byte_301025[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_226E08 + 4 * byte_301020[v4]))();
}

uint64_t sub_226E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_226E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x226E18);
  return result;
}

uint64_t sub_226E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x226E2CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_226E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_226E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingIndicatorState()
{
  return &type metadata for NowPlayingIndicatorState;
}

void sub_226E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  NSString *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  NSString *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  __int128 v27;
  __int128 v28;

  if (*(_QWORD *)(a1 + 16))
  {
    v13 = NSFontAttributeName;
    v14 = sub_36C54(v13);
    if ((v15 & 1) != 0)
    {
      sub_1D66C(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v27);

      if (*((_QWORD *)&v28 + 1))
      {
        v16 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
        if ((swift_dynamicCast(&v26, &v27, (char *)&type metadata for Any + 8, v16, 6) & 1) == 0)
          return;
        v17 = v26;
        v18 = objc_msgSend(v26, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", a5);
        if (!v18)
        {
          __break(1u);
          return;
        }
        v19 = v18;
        objc_msgSend(a6, "removeAttribute:range:", v13, a2, a3);
        objc_msgSend(a6, "addAttribute:value:range:", v13, v19, a2, a3);
        if ((a7 & 1) == 0)
        {
LABEL_23:

          return;
        }
        if (*(_QWORD *)(a1 + 16))
        {
          v20 = NSParagraphStyleAttributeName;
          v21 = sub_36C54(v20);
          if ((v22 & 1) != 0)
          {
            sub_1D66C(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)&v27);
          }
          else
          {
            v27 = 0u;
            v28 = 0u;
          }

          if (*((_QWORD *)&v28 + 1))
          {
            v23 = sub_E710(0, &qword_3DD870, NSParagraphStyle_ptr);
            if ((swift_dynamicCast(&v26, &v27, (char *)&type metadata for Any + 8, v23, 6) & 1) == 0)
            {

              return;
            }
            v24 = v26;
            if ((NSParagraphStyle.isListItem.getter() & 1) != 0)
            {
              v25 = (void *)static NSParagraphStyle.listItem(withIndentation:)(objc_msgSend(v19, "pointSize"));
              objc_msgSend(a6, "removeAttribute:range:", v20, a2, a3);
              objc_msgSend(a6, "addAttribute:value:range:", v20, v25, a2, a3);

              return;
            }

            goto LABEL_23;
          }
        }
        else
        {
          v27 = 0u;
          v28 = 0u;
        }

      }
    }
    else
    {
      v27 = 0u;
      v28 = 0u;

    }
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  sub_1FE78((uint64_t)&v27);
}

void sub_227230()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  id v6;
  void *v7;
  double Width;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews9StackView_distribution + 8] & 1) != 0
    || *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews9StackView_distribution] != 3)
  {
    return;
  }
  sub_2273FC();
  v2 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (v3)
      goto LABEL_5;
LABEL_14:
    v5 = 0.0;
    goto LABEL_15;
  }
  v3 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
  if (!v3)
    goto LABEL_14;
LABEL_5:
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  v4 = 0;
  v5 = 0.0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    else
      v6 = *(id *)(v2 + 8 * v4 + 32);
    v7 = v6;
    ++v4;
    objc_msgSend(v6, "frame");
    Width = CGRectGetWidth(v16);

    v5 = v5 + Width;
  }
  while (v3 != v4);
LABEL_15:
  objc_msgSend(v0, "frame", swift_bridgeObjectRelease(v2).n128_f64[0]);
  if (v5 >= CGRectGetWidth(v17))
    return;
  sub_2273FC();
  v2 = v9;
  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8));
    goto LABEL_18;
  }
LABEL_25:
  if (v2 < 0)
    v15 = v2;
  else
    v15 = v2 & 0xFFFFFFFFFFFFFF8;
  v10 = _CocoaArrayWrapper.endIndex.getter(v15);
LABEL_18:
  swift_bridgeObjectRelease(v2);
  if (v10 >= 2)
  {
    sub_2273FC();
    v12 = v11;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 >= 0)
        v11 &= 0xFFFFFFFFFFFFFF8uLL;
      v13 = _CocoaArrayWrapper.endIndex.getter(v11);
    }
    else
    {
      v13 = *(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8));
    }
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v12).n128_u64[0];
    if (__OFSUB__(v13, 1))
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v0, "frame", v14);
      CGRectGetWidth(v18);
    }
  }
}

void sub_2273FC()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  __n128 v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, "subviews");
  v2 = sub_FA88();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
    if (v4)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v11 = v3;
  else
    v11 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_17;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v8 = *(id *)(v3 + 8 * i + 32);
      v9 = v8;
      if ((objc_msgSend(v8, "isHidden") & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v6 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
        v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v9);
        specialized ContiguousArray._endMutation()(v7);
      }
    }
    swift_bridgeObjectRelease(v3);
  }
}

void sub_2275CC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews9StackView_axis];
  sub_2273FC();
  v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = _CocoaArrayWrapper.endIndex.getter(v2);
    if (!v4)
      goto LABEL_17;
  }
  else
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
    if (!v4)
    {
LABEL_17:
      swift_bridgeObjectRelease(v3);
      return;
    }
  }
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v0, "frame");
      objc_msgSend(v7, "sizeThatFits:", v8, v9);
      v11 = v10;
      v13 = v12;
      objc_msgSend(v0, "frame");
      if (v1)
      {
        if (v14 < v11)
        {
          objc_msgSend(v0, "frame");
          v11 = v16;
        }
      }
      else if (v15 < v13)
      {
        objc_msgSend(v0, "frame");
        v13 = v17;
      }
      objc_msgSend(v7, "setFrame:", 0.0, 0.0, v11, v13);

    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_227734()
{
  char *v0;
  uint64_t v1;
  _BOOL4 v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double MaxX;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double MaxY;
  double MinX;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  CGRect v36;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews9StackView_axis];
  v3 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection") == (char *)&dword_0 + 1 && v1 == 0;
  sub_2273FC();
  v5 = v4;
  if (v4 >> 62)
    goto LABEL_37;
  v6 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  if (!v6)
  {
LABEL_41:
    swift_bridgeObjectRelease(v5);
    return;
  }
LABEL_9:
  if (v6 >= 1)
  {
    v7 = 0;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
      else
        v9 = *(id *)(v5 + 8 * v7 + 32);
      v10 = v9;
      MaxX = 0.0;
      if (v3)
      {
        objc_msgSend(v0, "bounds");
        MaxX = CGRectGetMaxX(v36);
      }
      if (!v7)
        goto LABEL_30;
      v11 = objc_msgSend(v0, "subviews");
      v12 = sub_FA88();
      v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

      v14 = v7 - 1;
      if ((v13 & 0xC000000000000001) != 0)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v13);
      }
      else
      {
        if (v14 >= *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)))
        {
          __break(1u);
LABEL_37:
          if (v5 < 0)
            v35 = v5;
          else
            v35 = v5 & 0xFFFFFFFFFFFFFF8;
          v6 = _CocoaArrayWrapper.endIndex.getter(v35);
          if (!v6)
            goto LABEL_41;
          goto LABEL_9;
        }
        v15 = *(id *)(v13 + 8 * v7 + 24);
      }
      v16 = v15;
      objc_msgSend(v15, "frame", swift_bridgeObjectRelease(v13).n128_f64[0]);
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v24 = v23;

      v25 = v18;
      v26 = v20;
      v27 = v22;
      v28 = v24;
      if (v1)
        break;
      if (!v3)
      {
        MaxY = CGRectGetMaxX(*(CGRect *)&v25);
        goto LABEL_28;
      }
      MinX = CGRectGetMinX(*(CGRect *)&v25);
      sub_227230();
      v32 = -v31;
LABEL_29:
      MaxX = v32 + MinX;
LABEL_30:
      if (v1)
        v33 = 0.0;
      else
        v33 = MaxX;
      if (v3)
      {
        objc_msgSend(v10, "frame");
        v33 = MaxX - v34;
      }
      ++v7;
      if (!v1)
        MaxX = 0.0;
      objc_msgSend(v10, "frame");
      objc_msgSend(v10, "setFrame:", v33, MaxX);

      if (v6 == v7)
        goto LABEL_41;
    }
    MaxY = CGRectGetMaxY(*(CGRect *)&v25);
LABEL_28:
    MinX = MaxY;
    sub_227230();
    goto LABEL_29;
  }
  __break(1u);
}

double sub_227998()
{
  char *v0;
  uint64_t v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char **p_name;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  double Width;
  double v23;
  void *v24;
  double v25;
  id v26;
  void *v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char **v39;
  uint64_t v40;
  uint64_t v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  double result;
  uint64_t v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;

  objc_msgSend(v0, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews9StackView_axis];
  sub_2273FC();
  v12 = v11;
  if ((unint64_t)v11 >> 62)
  {
    if (v11 >= 0)
      v11 &= 0xFFFFFFFFFFFFFF8uLL;
    v13 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (v13)
    {
LABEL_3:
      if (v13 >= 1)
      {
        v14 = 0;
        v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews9StackView_alignment;
        v16 = v12 & 0xC000000000000001;
        p_name = &stru_3B7FF8.name;
        v48 = v12;
        while (2)
        {
          if (v16)
            v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
          else
            v26 = *(id *)(v12 + 8 * v14 + 32);
          v27 = v26;
          switch(*(_QWORD *)&v0[v15])
          {
            case 0:
              v28 = v3;
              v29 = v5;
              v30 = v7;
              v31 = v9;
              if (v10)
                CGRectGetWidth(*(CGRect *)&v28);
              else
                CGRectGetHeight(*(CGRect *)&v28);
              goto LABEL_15;
            case 1:
              objc_msgSend(v26, p_name[218]);
              if (v10)
                v25 = 0.0;
              v24 = v27;
              goto LABEL_7;
            case 2:
              v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
              v34 = v13;
              v35 = v16;
              v36 = v15;
              v37 = v10;
              v38 = v1;
              v39 = p_name;
              v40 = swift_allocObject(v33, 64, 7);
              *(_OWORD *)(v40 + 16) = xmmword_2F03C0;
              *(_QWORD *)(v40 + 56) = &type metadata for String;
              *(_QWORD *)(v40 + 32) = 0xD00000000000002CLL;
              *(_QWORD *)(v40 + 40) = 0x8000000000316110;
              print(_:separator:terminator:)();
              v41 = v40;
              p_name = v39;
              v1 = v38;
              v10 = v37;
              v15 = v36;
              v16 = v35;
              v13 = v34;
              v12 = v48;
              swift_bridgeObjectRelease(v41);
              goto LABEL_8;
            case 3:
              v42 = v3;
              v43 = v5;
              v44 = v7;
              v45 = v9;
              if (v10)
              {
                v46 = CGRectGetWidth(*(CGRect *)&v42) * 0.5;
                objc_msgSend(v27, "center");
                objc_msgSend(v27, "setCenter:", v46);
              }
              else
              {
                CGRectGetHeight(*(CGRect *)&v42);
                objc_msgSend(v27, "center");
                objc_msgSend(v27, "setCenter:");
              }
              goto LABEL_8;
            case 4:
              v18 = v3;
              v19 = v5;
              v20 = v7;
              v21 = v9;
              if (v10)
              {
                Width = CGRectGetWidth(*(CGRect *)&v18);
                objc_msgSend(v27, p_name[218]);
                v23 = Width - CGRectGetWidth(v49);
                objc_msgSend(v27, p_name[218]);
                v24 = v27;
                v25 = v23;
LABEL_7:
                objc_msgSend(v24, "setFrame:", v25);
              }
              else
              {
                CGRectGetHeight(*(CGRect *)&v18);
                objc_msgSend(v27, p_name[218]);
                CGRectGetHeight(v52);
LABEL_15:
                objc_msgSend(v27, p_name[218]);
                objc_msgSend(v27, "setFrame:", v32);
              }
LABEL_8:
              ++v14;

              if (v13 != v14)
                continue;
              goto LABEL_31;
            case 5:
              if (v10)
                goto LABEL_8;
              v50.origin.x = v3;
              v50.origin.y = v5;
              v50.size.width = v7;
              v50.size.height = v9;
              CGRectGetHeight(v50);
              objc_msgSend(v27, p_name[218]);
              CGRectGetHeight(v51);
              objc_msgSend(v27, "lastBaselineFromBottom");
              goto LABEL_15;
            default:
              goto LABEL_8;
          }
        }
      }
      __break(1u);
      JUMPOUT(0x227D74);
    }
  }
  else
  {
    v13 = *(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8));
    if (v13)
      goto LABEL_3;
  }
LABEL_31:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

void sub_227D8C(double a1, double a2)
{
  char *v2;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;

  v5 = objc_msgSend(v2, "subviews");
  v6 = sub_FA88();
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v44 = v7;
    else
      v44 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease(v7);
  if (v8)
  {
    v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews9StackView_axis];
    sub_2273FC();
    v11 = v10;
    if ((unint64_t)v10 >> 62)
    {
      if (v10 >= 0)
        v10 &= 0xFFFFFFFFFFFFFF8uLL;
      v12 = _CocoaArrayWrapper.endIndex.getter(v10);
    }
    else
    {
      v12 = *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8));
    }
    v13 = 0.0;
    if (!v12)
      goto LABEL_36;
    if (v12 >= 1)
    {
      v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews9StackView_alignment;
      v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews9StackView_spacing;
      if ((v11 & 0xC000000000000001) != 0)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
      else
        v16 = *(id *)(v11 + 32);
      v17 = v16;
      objc_msgSend(v16, "sizeThatFits:", a1, a2);
      v20 = v19;
      if (v18 > a2 && v9 == 0)
        v22 = a2;
      else
        v22 = v18;
      if (*(_QWORD *)&v2[v14] == 5)
      {
        objc_msgSend(v17, "lastBaselineFromBottom");
        v24 = v23;

        v25 = v22 - v24;
      }
      else
      {

        if (v20 <= a1)
          v26 = v20;
        else
          v26 = a1;
        if (!v9)
          v26 = v20;
        if (v26 < 0.0)
          v13 = 0.0;
        else
          v13 = v26;
        v25 = v22;
      }
      if (v25 < 0.0)
        v27 = 0.0;
      else
        v27 = v25;
      if (v9)
        v28 = v22;
      else
        v28 = v20;
      v29 = v28 + 0.0;
      v30 = v12 - 1;
      if (v12 != 1)
      {
        v31 = 0;
        do
        {
          if ((v11 & 0xC000000000000001) != 0)
            v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31 + 1, v11);
          else
            v32 = *(id *)(v11 + 8 * v31 + 40);
          v33 = v32;
          objc_msgSend(v32, "sizeThatFits:", a1, a2);
          v36 = v35;
          if (v34 > a2 && v9 == 0)
            v38 = a2;
          else
            v38 = v34;
          if (*(_QWORD *)&v2[v14] == 5)
          {
            objc_msgSend(v33, "lastBaselineFromBottom");
            v40 = v39;

            v41 = v38 - v40;
          }
          else
          {

            if (v36 <= a1)
              v42 = v36;
            else
              v42 = a1;
            if (!v9)
              v42 = v36;
            if (v13 <= v42)
              v13 = v42;
            v41 = v38;
          }
          if (v27 <= v41)
            v27 = v41;
          if (v9)
            v43 = v38;
          else
            v43 = v36;
          v29 = v29 + v43;
          if (v43 > 0.0)
            v29 = v29 + *(double *)&v2[v15];
          ++v31;
        }
        while (v30 != v31);
      }
LABEL_36:
      swift_bridgeObjectRelease(v11);
      return;
    }
    __break(1u);
  }
}

id sub_2280FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StackView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews9StackView);
}

void sub_22814C()
{
  qword_3DD8C0 = 0x402C000000000000;
}

void sub_22815C()
{
  qword_3DD8C8 = 0x4038000000000000;
}

void sub_22816C()
{
  qword_3DD8D0 = 0x4038000000000000;
}

int64x2_t sub_22817C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4056800000000000uLL);
  xmmword_3DD8D8 = (__int128)result;
  return result;
}

void sub_228198()
{
  qword_3DD8E8 = 0x4030000000000000;
}

void sub_2281A8()
{
  qword_3DD8F0 = 0x4034000000000000;
}

id sub_2281B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell____lazy_storage___artworkTapGesture;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell____lazy_storage___artworkTapGesture);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell____lazy_storage___artworkTapGesture);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "artworkTapped");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_228238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_objectGraph) = a1;
  swift_release(v3);
  swift_retain(a1);
  sub_228D4C();
  v4 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView);
  if (v4)
  {
    v5 = v4;
    sub_1D6A8(a1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2282AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _QWORD v18[5];
  _BYTE v19[24];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for ShowEpisodeCountHeader(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_model;
  v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_model, v19, 0, 0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 48))(v7, 1, v3, v8);
  if (!(_DWORD)result)
  {
    v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
    v11 = ShowEpisodeCountHeader.action.getter(v10);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v18[3] = type metadata accessor for Action(0);
    v18[4] = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v18[0] = v11;
    v12 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView);
    if (v12)
    {
      *((_QWORD *)&v17 + 1) = type metadata accessor for CachingArtworkView(0);
      *(_QWORD *)&v16 = v12;
    }
    else
    {
      v16 = 0u;
      v17 = 0u;
    }
    v13 = sub_89A0(&qword_3DD970, type metadata accessor for ShowEpisodeCountHeaderCell, (uint64_t)&unk_301338);
    swift_retain(v11);
    v14 = v12;
    v15 = ShelfUIKitCell.perform(_:from:in:)(v18, &v16, v1, ObjectType, v13);
    swift_release(v15);
    swift_release(v11);
    sub_D1D4((uint64_t)&v16, &qword_3D1A70);
    return __swift_destroy_boxed_opaque_existential_0(v18);
  }
  return result;
}

id sub_2285A0(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_title] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_episodesCount] = 0;
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_model];
  v5 = type metadata accessor for ShowEpisodeCountHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell____lazy_storage___artworkTapGesture] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_objectGraph] = 0;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

uint64_t sub_22870C()
{
  return type metadata accessor for ShowEpisodeCountHeaderCell(0);
}

uint64_t type metadata accessor for ShowEpisodeCountHeaderCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3DD948;
  if (!qword_3DD948)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShowEpisodeCountHeaderCell);
  return result;
}

void sub_228750(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = "\b";
  sub_2287D0(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = "\b";
    v4[5] = "\b";
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_2287D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3DD958)
  {
    v2 = type metadata accessor for ShowEpisodeCountHeader(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3DD958);
  }
}

void sub_228824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  void *v19;
  id v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  void *v34;
  id v35;
  id v36;
  _BYTE v38[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v4);
  v6 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD980);
  __chkstk_darwin(v7);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_objectGraph);
  if (v10)
  {
    v11 = type metadata accessor for ShowEpisodeCountHeader(0);
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v9, a1, v11);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    v13 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_model;
    swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_model, v38, 33, 0);
    swift_retain(v10);
    sub_228D04((uint64_t)v9, v13);
    swift_endAccess(v38);
    v14 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_title);
    if (v14)
    {
      v15 = v14;
      ShowEpisodeCountHeader.title.getter();
      v17 = v16;
      v18 = String._bridgeToObjectiveC()();
      objc_msgSend(v15, "setText:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

      v19 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_episodesCount);
      if (v19)
      {
        v20 = v19;
        ShowEpisodeCountHeader.libraryEpisodesCountText.getter();
        if (v21)
        {
          v23 = v21;
          v24 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v22 = swift_bridgeObjectRelease(v23).n128_u64[0];
        }
        else
        {
          v24 = 0;
        }
        objc_msgSend(v20, "setText:", v24, v22);

        ShowEpisodeCountHeader.artwork.getter();
        v25 = type metadata accessor for ArtworkModel(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 0, 1, v25);
        sub_D8560((uint64_t)v6, v10);
        sub_D1D4((uint64_t)v6, &qword_3D0A58);
        v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView;
        v27 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView);
        if (v27)
        {
          v28 = objc_msgSend(v27, "gestureRecognizers");
          if (v28)
          {
            v29 = v28;
            v30 = sub_E710(0, &qword_3D9988, UIGestureRecognizer_ptr);
            v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

            v32 = sub_2281B8();
            v33 = sub_17C0C8((uint64_t)v32, v31);
            swift_bridgeObjectRelease(v31);

            if ((v33 & 1) != 0)
              goto LABEL_12;
          }
          v34 = *(void **)(v2 + v26);
          if (v34)
          {
            v35 = v34;
            v36 = sub_2281B8();
            objc_msgSend(v35, "addGestureRecognizer:", v36);

LABEL_12:
            swift_release(v10);
            return;
          }
LABEL_17:
          __break(1u);
          return;
        }
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
}

uint64_t sub_228B1C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_objectGraph));
}

uint64_t sub_228B30(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;

  ObjectType = swift_getObjectType();
  v3 = sub_89A0(&qword_3DD988, type metadata accessor for ShowEpisodeCountHeaderCell, (uint64_t)&unk_3013A8);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v3);
}

uint64_t sub_228B88()
{
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 128.0);
}

uint64_t sub_228B98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_89A0(&qword_3DD988, type metadata accessor for ShowEpisodeCountHeaderCell, (uint64_t)&unk_3013A8);
  return static TypedShelfUIKitCell.modelType.getter(v0, v1);
}

id sub_228BCC()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView);
  if (result)
    return result;
  __break(1u);
  return result;
}

double sub_228BE4()
{
  if (qword_3CFC18 != -1)
    swift_once(&qword_3CFC18, sub_22817C);
  return *(double *)&xmmword_3DD8D8;
}

uint64_t sub_228C28()
{
  return sub_89A0(&qword_3DD960, type metadata accessor for ShowEpisodeCountHeaderCell, (uint64_t)&unk_301280);
}

uint64_t sub_228C54()
{
  return sub_89A0(&qword_3D5C08, type metadata accessor for ShowEpisodeCountHeaderCell, (uint64_t)&unk_301308);
}

uint64_t sub_228C80()
{
  return sub_89A0(&qword_3DD968, type metadata accessor for ShowEpisodeCountHeaderCell, (uint64_t)&unk_3012E0);
}

uint64_t sub_228CAC()
{
  return sub_89A0(&qword_3DD970, type metadata accessor for ShowEpisodeCountHeaderCell, (uint64_t)&unk_301338);
}

uint64_t sub_228CD8()
{
  return sub_89A0(&qword_3DD978, (uint64_t (*)(uint64_t))&type metadata accessor for ShowEpisodeCountHeader, (uint64_t)&protocol conformance descriptor for ShowEpisodeCountHeader);
}

uint64_t sub_228D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DD980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_228D4C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  _BYTE *v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  __int128 v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  uint64_t *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  void *v97;
  id v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  void *v112;
  id v113;
  void *v114;
  id v115;
  id v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  void *v121;
  id v122;
  id v123;
  id v124;
  void *v125;
  void *v126;
  id v127;
  id v128;
  id v129;
  uint64_t v130;
  Class isa;
  unsigned __int8 v132;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView]
    || !*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_title]
    || !*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_episodesCount])
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CachingArtworkView(0)), "init");
    v4 = *(void **)&v0[v2];
    *(_QWORD *)&v0[v2] = v3;

    v5 = *(_BYTE **)&v0[v2];
    if (v5)
    {
      v132 = v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
      v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
      v6 = v5;
      sub_EB33C(&v132);

      v7 = *(void **)&v1[v2];
      if (v7)
      {
        v8 = qword_3CFA90;
        v9 = v7;
        if (v8 != -1)
          swift_once(&qword_3CFA90, sub_1D6620);
        v10 = (void *)qword_3FCF18;
        v11 = qword_3FCF30;
        v12 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v13 = *(void **)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v14 = unk_3FCF20;
        *(_QWORD *)v12 = qword_3FCF18;
        *(_OWORD *)(v12 + 8) = v14;
        *((_QWORD *)v12 + 3) = v11;
        v15 = v10;

        sub_E9020();
        v16 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
        v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_title;
        v18 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_title];
        *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_title] = v16;

        v19 = *(void **)&v1[v17];
        if (v19)
        {
          sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
          v20 = v19;
          v21 = (void *)static UIFont.title2Emph.getter(v20);
          objc_msgSend(v20, "setFont:", v21);

          v22 = *(void **)&v1[v17];
          if (v22)
          {
            v23 = (void *)objc_opt_self(UIColor);
            v24 = v22;
            v25 = objc_msgSend(v23, "labelColor");
            objc_msgSend(v24, "setTextColor:", v25);

            v26 = *(void **)&v1[v17];
            if (v26)
            {
              objc_msgSend(v26, "setNumberOfLines:", 2);
              v27 = *(void **)&v1[v17];
              if (v27)
              {
                objc_msgSend(v27, "setAdjustsFontForContentSizeCategory:", 1);
                v28 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
                v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_episodesCount;
                v30 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_episodesCount];
                *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_episodesCount] = v28;

                v31 = *(void **)&v1[v29];
                if (v31)
                {
                  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
                  v32 = v31;
                  v33 = static UITraitCollection.interfaceIdiomIsMac.getter(v32);
                  if ((v33 & 1) != 0)
                    v34 = static UIFont.body.getter(v33);
                  else
                    v34 = static UIFont.subhead.getter(v33);
                  v35 = (void *)v34;
                  objc_msgSend(v32, "setFont:", v34);

                  v36 = *(void **)&v1[v29];
                  if (v36)
                  {
                    v37 = v36;
                    v38 = objc_msgSend(v23, "secondaryLabelColor");
                    objc_msgSend(v37, "setTextColor:", v38);

                    v39 = *(void **)&v1[v29];
                    if (v39)
                    {
                      objc_msgSend(v39, "setAdjustsFontForContentSizeCategory:", 1);
                      v40 = objc_msgSend(v1, "contentView");
                      if (*(_QWORD *)&v1[v2])
                      {
                        v41 = v40;
                        objc_msgSend(v40, "addSubview:");

                        v42 = objc_msgSend(v1, "contentView");
                        if (*(_QWORD *)&v1[v17])
                        {
                          v43 = v42;
                          objc_msgSend(v42, "addSubview:");

                          v44 = objc_msgSend(v1, "contentView");
                          if (*(_QWORD *)&v1[v29])
                          {
                            v45 = v44;
                            objc_msgSend(v44, "addSubview:");

                            v46 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
                            v47 = objc_msgSend(v1, "contentView");
                            objc_msgSend(v47, "addLayoutGuide:", v46);

                            v48 = *(void **)&v1[v2];
                            if (v48)
                            {
                              objc_msgSend(v48, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                              v49 = *(void **)&v1[v17];
                              if (v49)
                              {
                                objc_msgSend(v49, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                v50 = *(void **)&v1[v29];
                                if (v50)
                                {
                                  objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
                                  v52 = swift_allocObject(v51, 176, 7);
                                  *(_OWORD *)(v52 + 16) = xmmword_301190;
                                  v53 = *(void **)&v1[v2];
                                  if (v53)
                                  {
                                    v54 = objc_msgSend(v53, "leadingAnchor");
                                    v55 = objc_msgSend(v1, "contentView");
                                    v56 = objc_msgSend(v55, "leadingAnchor");

                                    v57 = objc_msgSend(v54, "constraintEqualToAnchor:", v56);
                                    *(_QWORD *)(v52 + 32) = v57;
                                    v58 = *(void **)&v1[v2];
                                    if (v58)
                                    {
                                      v59 = objc_msgSend(v58, "centerYAnchor");
                                      v60 = objc_msgSend(v1, "contentView");
                                      v61 = objc_msgSend(v60, "centerYAnchor");

                                      v62 = objc_msgSend(v59, "constraintEqualToAnchor:", v61);
                                      *(_QWORD *)(v52 + 40) = v62;
                                      v63 = *(void **)&v1[v2];
                                      if (v63)
                                      {
                                        v64 = objc_msgSend(v63, "topAnchor");
                                        v65 = objc_msgSend(v1, "contentView");
                                        v66 = objc_msgSend(v65, "topAnchor");

                                        if (qword_3CFC00 != -1)
                                          swift_once(&qword_3CFC00, sub_22814C);
                                        v67 = objc_msgSend(v64, "constraintEqualToAnchor:constant:", v66, *(double *)&qword_3DD8C0);

                                        *(_QWORD *)(v52 + 48) = v67;
                                        v68 = objc_msgSend(v1, "contentView");
                                        v69 = objc_msgSend(v68, "bottomAnchor");

                                        v70 = *(void **)&v1[v2];
                                        if (v70)
                                        {
                                          v71 = objc_msgSend(v70, "bottomAnchor");
                                          if (qword_3CFC08 != -1)
                                            swift_once(&qword_3CFC08, sub_22815C);
                                          v72 = objc_msgSend(v69, "constraintGreaterThanOrEqualToAnchor:constant:", v71, *(double *)&qword_3DD8C8);

                                          *(_QWORD *)(v52 + 56) = v72;
                                          v73 = *(void **)&v1[v2];
                                          if (v73)
                                          {
                                            v74 = objc_msgSend(v73, "heightAnchor");
                                            if (qword_3CFC18 != -1)
                                              swift_once(&qword_3CFC18, sub_22817C);
                                            v75 = objc_msgSend(v74, "constraintEqualToConstant:", *((double *)&xmmword_3DD8D8 + 1));

                                            *(_QWORD *)(v52 + 64) = v75;
                                            v76 = *(void **)&v1[v2];
                                            if (v76)
                                            {
                                              v77 = objc_msgSend(v76, "widthAnchor");
                                              v78 = objc_msgSend(v77, "constraintEqualToConstant:", *(double *)&xmmword_3DD8D8);

                                              *(_QWORD *)(v52 + 72) = v78;
                                              v79 = objc_msgSend(v46, "leadingAnchor");
                                              v80 = *(void **)&v1[v2];
                                              if (v80)
                                              {
                                                v81 = objc_msgSend(v80, "trailingAnchor");
                                                if ((static UITraitCollection.interfaceIdiomIsMac.getter(v81) & 1) != 0)
                                                {
                                                  if (qword_3CFC28 != -1)
                                                    swift_once(&qword_3CFC28, sub_2281A8);
                                                  v82 = &qword_3DD8F0;
                                                }
                                                else
                                                {
                                                  if (qword_3CFC20 != -1)
                                                    swift_once(&qword_3CFC20, sub_228198);
                                                  v82 = &qword_3DD8E8;
                                                }
                                                v83 = objc_msgSend(v79, "constraintEqualToAnchor:constant:", v81, *(double *)v82);

                                                *(_QWORD *)(v52 + 80) = v83;
                                                v84 = objc_msgSend(v46, "trailingAnchor");
                                                v85 = objc_msgSend(v1, "contentView");
                                                v86 = objc_msgSend(v85, "trailingAnchor");

                                                v87 = objc_msgSend(v84, "constraintEqualToAnchor:", v86);
                                                *(_QWORD *)(v52 + 88) = v87;
                                                v88 = objc_msgSend(v46, "topAnchor");
                                                v89 = objc_msgSend(v1, "contentView");
                                                v90 = objc_msgSend(v89, "topAnchor");

                                                v91 = objc_msgSend(v88, "constraintGreaterThanOrEqualToAnchor:", v90);
                                                *(_QWORD *)(v52 + 96) = v91;
                                                v92 = objc_msgSend(v1, "contentView");
                                                v93 = objc_msgSend(v92, "bottomAnchor");

                                                v94 = objc_msgSend(v46, "bottomAnchor");
                                                v95 = objc_msgSend(v93, "constraintGreaterThanOrEqualToAnchor:", v94);

                                                *(_QWORD *)(v52 + 104) = v95;
                                                v96 = objc_msgSend(v46, "centerYAnchor");
                                                v97 = *(void **)&v1[v2];
                                                if (v97)
                                                {
                                                  v98 = objc_msgSend(v97, "centerYAnchor");
                                                  v99 = objc_msgSend(v96, "constraintEqualToAnchor:", v98);

                                                  *(_QWORD *)(v52 + 112) = v99;
                                                  v100 = *(void **)&v1[v17];
                                                  if (v100)
                                                  {
                                                    v101 = objc_msgSend(v100, "leadingAnchor");
                                                    v102 = objc_msgSend(v46, "leadingAnchor");
                                                    v103 = objc_msgSend(v101, "constraintEqualToAnchor:", v102);

                                                    *(_QWORD *)(v52 + 120) = v103;
                                                    v104 = *(void **)&v1[v17];
                                                    if (v104)
                                                    {
                                                      v105 = objc_msgSend(v104, "trailingAnchor");
                                                      v106 = objc_msgSend(v46, "trailingAnchor");
                                                      v107 = objc_msgSend(v105, "constraintEqualToAnchor:", v106);

                                                      *(_QWORD *)(v52 + 128) = v107;
                                                      v108 = *(void **)&v1[v17];
                                                      if (v108)
                                                      {
                                                        v109 = objc_msgSend(v108, "topAnchor");
                                                        v110 = objc_msgSend(v46, "topAnchor");
                                                        v111 = objc_msgSend(v109, "constraintEqualToAnchor:", v110);

                                                        *(_QWORD *)(v52 + 136) = v111;
                                                        v112 = *(void **)&v1[v29];
                                                        if (v112)
                                                        {
                                                          v113 = objc_msgSend(v112, "lastBaselineAnchor");
                                                          v114 = *(void **)&v1[v17];
                                                          if (v114)
                                                          {
                                                            v115 = objc_msgSend(v114, "lastBaselineAnchor");
                                                            if (qword_3CFC10 != -1)
                                                              swift_once(&qword_3CFC10, sub_22816C);
                                                            v116 = objc_msgSend(v113, "constraintEqualToAnchor:constant:", v115, *(double *)&qword_3DD8D0);

                                                            *(_QWORD *)(v52 + 144) = v116;
                                                            v117 = *(void **)&v1[v29];
                                                            if (v117)
                                                            {
                                                              v118 = objc_msgSend(v117, "leadingAnchor");
                                                              v119 = objc_msgSend(v46, "leadingAnchor");
                                                              v120 = objc_msgSend(v118, "constraintEqualToAnchor:", v119);

                                                              *(_QWORD *)(v52 + 152) = v120;
                                                              v121 = *(void **)&v1[v29];
                                                              if (v121)
                                                              {
                                                                v122 = objc_msgSend(v121, "trailingAnchor");
                                                                v123 = objc_msgSend(v46, "trailingAnchor");
                                                                v124 = objc_msgSend(v122, "constraintEqualToAnchor:", v123);

                                                                *(_QWORD *)(v52 + 160) = v124;
                                                                v125 = *(void **)&v1[v29];
                                                                if (v125)
                                                                {
                                                                  v126 = (void *)objc_opt_self(NSLayoutConstraint);
                                                                  v127 = objc_msgSend(v125, "bottomAnchor");
                                                                  v128 = objc_msgSend(v46, "bottomAnchor");
                                                                  v129 = objc_msgSend(v127, "constraintEqualToAnchor:", v128);

                                                                  *(_QWORD *)(v52 + 168) = v129;
                                                                  specialized Array._endMutation()(v130);
                                                                  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
                                                                  isa = Array._bridgeToObjectiveC()().super.isa;
                                                                  objc_msgSend(v126, "activateConstraints:", isa, swift_bridgeObjectRelease(v52).n128_f64[0]);

                                                                  return;
                                                                }
                                                                goto LABEL_86;
                                                              }
LABEL_85:
                                                              __break(1u);
LABEL_86:
                                                              __break(1u);
                                                              return;
                                                            }
LABEL_84:
                                                            __break(1u);
                                                            goto LABEL_85;
                                                          }
LABEL_83:
                                                          __break(1u);
                                                          goto LABEL_84;
                                                        }
LABEL_82:
                                                        __break(1u);
                                                        goto LABEL_83;
                                                      }
LABEL_81:
                                                      __break(1u);
                                                      goto LABEL_82;
                                                    }
LABEL_80:
                                                    __break(1u);
                                                    goto LABEL_81;
                                                  }
LABEL_79:
                                                  __break(1u);
                                                  goto LABEL_80;
                                                }
LABEL_78:
                                                __break(1u);
                                                goto LABEL_79;
                                              }
LABEL_77:
                                              __break(1u);
                                              goto LABEL_78;
                                            }
LABEL_76:
                                            __break(1u);
                                            goto LABEL_77;
                                          }
LABEL_75:
                                          __break(1u);
                                          goto LABEL_76;
                                        }
LABEL_74:
                                        __break(1u);
                                        goto LABEL_75;
                                      }
LABEL_73:
                                      __break(1u);
                                      goto LABEL_74;
                                    }
LABEL_72:
                                    __break(1u);
                                    goto LABEL_73;
                                  }
LABEL_71:
                                  __break(1u);
                                  goto LABEL_72;
                                }
LABEL_70:
                                __break(1u);
                                goto LABEL_71;
                              }
LABEL_69:
                              __break(1u);
                              goto LABEL_70;
                            }
LABEL_68:
                            __break(1u);
                            goto LABEL_69;
                          }
LABEL_67:
                          __break(1u);
                          goto LABEL_68;
                        }
LABEL_66:
                        __break(1u);
                        goto LABEL_67;
                      }
LABEL_65:
                      __break(1u);
                      goto LABEL_66;
                    }
LABEL_64:
                    __break(1u);
                    goto LABEL_65;
                  }
LABEL_63:
                  __break(1u);
                  goto LABEL_64;
                }
LABEL_62:
                __break(1u);
                goto LABEL_63;
              }
LABEL_61:
              __break(1u);
              goto LABEL_62;
            }
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_58;
  }
}

void sub_229B88(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSString v24;
  id v25;
  id v26;
  uint64_t v27;
  char *v28;
  void *v29;
  unint64_t v30;
  char *v31;
  id v32;
  objc_super v33;

  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for ErrorPresenter.ReachabilityType(0, v10);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_retryHandler];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v17.n128_f64[0] = (*(double (**)(char *, _QWORD, __n128))(v16 + 104))(v14, enum case for ErrorPresenter.ReachabilityType.network(_:), v12);
  type metadata accessor for NetworkObserver(0, v17);
  v18 = v4;
  v19 = NetworkObserver.__allocating_init()();
  v20 = objc_msgSend(objc_allocWithZone((Class)ASKAirplaneModeInquiry), "init");
  v21 = objc_msgSend(objc_allocWithZone((Class)ASKCellularDataInquiry), "init");
  v22 = objc_allocWithZone((Class)type metadata accessor for ErrorPresenter(0));
  *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_presenter] = ErrorPresenter.init(networkObserver:reachabilityType:airplaneModeInquiry:cellularDataInquiry:)(v19, v14, v20, v21);
  v23 = objc_allocWithZone((Class)_UIContentUnavailableView);
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v23, "initWithFrame:title:style:", v24, 0, 0.0, 0.0, 0.0, 0.0);

  if (v25)
  {
    *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_errorView] = v25;

    v33.receiver = v18;
    v33.super_class = ObjectType;
    v26 = objc_msgSendSuper2(&v33, "initWithFrame:", a1, a2, a3, a4);
    v27 = qword_3CEFF0;
    v28 = (char *)v26;
    if (v27 != -1)
      swift_once(&qword_3CEFF0, sub_DFAC);
    objc_msgSend(v28, "setBackgroundColor:", qword_3D0898);
    v29 = *(void **)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_presenter];
    v30 = sub_22A78C();
    v31 = v28;
    v32 = v29;
    ErrorPresenter.view.setter(v28, v30);

    objc_msgSend(v31, "addSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_errorView]);
  }
  else
  {
    __break(1u);
  }
}

void ErrorShieldView.init(coder:)()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_retryHandler];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ErrorShieldView.swift", 45, 2, 141, 0);
  __break(1u);
}

Swift::Void __swiftcall ErrorShieldView.willMove(toWindow:)(UIWindow_optional toWindow)
{
  void *v1;
  Class isa;
  objc_super v3;

  isa = toWindow.value.super.super.super.isa;
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "willMoveToWindow:", isa);
  if (isa)
    ErrorPresenter.update()();
}

Swift::Void __swiftcall ErrorShieldView.didMoveToWindow()()
{
  sub_95490((SEL *)&selRef_didMoveToWindow);
}

Swift::Void __swiftcall ErrorShieldView.layoutSubviews()()
{
  char *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_errorView], "setFrame:");
}

Swift::Void __swiftcall ErrorShieldView.reload()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  void *object;
  NSString v27;
  void *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  Swift::String v32;
  Swift::String v33;
  void *v34;
  NSString v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  void **aBlock;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  void (*v47)();
  uint64_t v48;
  Swift::String v49;
  Swift::String v50;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v42 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v41 - v10;
  v12 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_errorView);
  ErrorPresenter.title.getter(v9);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setTitle:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  ErrorPresenter.message.getter();
  if (v16)
  {
    v18 = v16;
    v19 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(v18).n128_u64[0];
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v12, "setMessage:", v19, v17);

  ErrorPresenter.settingsURL.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_E8C08((uint64_t)v4);
    v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_retryHandler);
    if (v20)
    {
      v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_retryHandler + 8);
      v22 = (void *)objc_opt_self(NSBundle);
      v23 = objc_msgSend(v22, "mainBundle", swift_retain(v21).n128_f64[0]);
      v49._object = (void *)0xE000000000000000;
      v24._countAndFlagsBits = 0x45525F524F525245;
      v24._object = (void *)0xEB00000000595254;
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      v49._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v49)._object;

      v27 = String._bridgeToObjectiveC()();
      objc_msgSend(v12, "setButtonTitle:", v27, swift_bridgeObjectRelease(object).n128_f64[0]);

      v47 = (void (*)())v20;
      v48 = v21;
      aBlock = _NSConcreteStackBlock;
      v44 = 1107296256;
      v45 = sub_24360;
      v46 = &block_descriptor_53;
      v28 = _Block_copy(&aBlock);
      v29 = v48;
      swift_retain(v21);
      objc_msgSend(v12, "setButtonAction:", v28, swift_release(v29).n128_f64[0]);
      _Block_release(v28);
      sub_1D618(v20, v21);
    }
    else
    {
      objc_msgSend(v12, "setButtonTitle:", 0);
      objc_msgSend(v12, "setButtonAction:", 0);
    }
  }
  else
  {
    v30 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v30(v11, v4, v5);
    v31 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v50._object = (void *)0xE000000000000000;
    v32._countAndFlagsBits = 0x535F4E4F49544341;
    v32._object = (void *)0xEF53474E49545445;
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v50._countAndFlagsBits = 0;
    v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v50)._object;

    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setButtonTitle:", v35, swift_bridgeObjectRelease(v34).n128_f64[0]);

    v36 = v42;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v42, v11, v5);
    v37 = *(unsigned __int8 *)(v6 + 80);
    v38 = (v37 + 16) & ~v37;
    v39 = swift_allocObject(&unk_38C7C8, v38 + v7, v37 | 7);
    v30((char *)(v39 + v38), v36, v5);
    v47 = sub_22A694;
    v48 = v39;
    aBlock = _NSConcreteStackBlock;
    v44 = 1107296256;
    v45 = sub_24360;
    v46 = &block_descriptor_3_3;
    v40 = _Block_copy(&aBlock);
    objc_msgSend(v12, "setButtonAction:", v40, swift_release(v48).n128_f64[0]);
    _Block_release(v40);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

uint64_t block_copy_helper_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_53(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_22A574()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  void *v4;
  unint64_t v5;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v0)
  {
    v2 = v0;
    URL._bridgeToObjectiveC()(v1);
    v4 = v3;
    v5 = sub_D4B54((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "openSensitiveURL:withOptions:", v4, isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22A634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_22A694()
{
  type metadata accessor for URL(0);
  sub_22A574();
}

Swift::Void __swiftcall ErrorShieldView.internetDidBecomeReachable()()
{
  uint64_t v0;
  void (*v1)(__n128);
  uint64_t v2;
  __n128 v3;

  v1 = *(void (**)(__n128))(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_retryHandler);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_retryHandler + 8);
    v3 = swift_retain(v2);
    v1(v3);
    sub_1D618((uint64_t)v1, v2);
  }
}

id ErrorShieldView.__deallocating_deinit()
{
  return sub_95490((SEL *)&selRef_dealloc);
}

uint64_t type metadata accessor for ErrorShieldView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews15ErrorShieldView);
}

unint64_t sub_22A78C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DD9D0;
  if (!qword_3DD9D0)
  {
    v1 = type metadata accessor for ErrorShieldView();
    result = swift_getWitnessTable(&protocol conformance descriptor for ErrorShieldView, v1);
    atomic_store(result, (unint64_t *)&qword_3DD9D0);
  }
  return result;
}

uint64_t type metadata accessor for StatusBarOverlayWindow()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B322StatusBarOverlayWindow);
}

void sub_22AB10()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;
  id v20;
  id v21;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_tintView];
  objc_msgSend(v2, "_setCornerRadius:", 10.0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v2);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_2F0A20;
  v6 = objc_msgSend(v2, "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v2, "leftAnchor");
  v10 = objc_msgSend(v1, "leftAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v2, "bottomAnchor");
  v13 = objc_msgSend(v1, "bottomAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v2, "rightAnchor");
  v16 = objc_msgSend(v1, "rightAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v5 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  objc_msgSend(v1, "_setCornerRadius:", 10.0);
  objc_msgSend(v1, "setLayoutMargins:", 8.0, 16.0, 8.0, 16.0);
  objc_msgSend(v1, "setClipsToBounds:", 1);
  v20 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v1, "setBackgroundColor:", v20);

  v21 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "didTapFrom:");
  objc_msgSend(v1, "addGestureRecognizer:", v21);

}

id sub_22AE64(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  id v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_tintView;
  v11 = objc_allocWithZone((Class)UIView);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_viewConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_view] = 0;
  v13 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_tapAction];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;

  v16.receiver = v12;
  v16.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  sub_22AB10();

  return v14;
}

id sub_22AF8C(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  char *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_tintView;
  v5 = objc_allocWithZone((Class)UIView);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_viewConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_view] = 0;
  v7 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_tapAction];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;

  v12.receiver = v6;
  v12.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);
  v9 = v8;
  if (v8)
  {
    v10 = v8;
    sub_22AB10();

  }
  return v9;
}

id sub_22B0A0()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  Class isa;
  uint64_t v30;
  uint64_t v31;
  NSArray v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  Class v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_view];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v0, "addSubview:", v3);
    v4 = objc_msgSend(v3, "bottomAnchor");
    v5 = objc_msgSend(v1, "layoutMarginsGuide");
    v6 = objc_msgSend(v5, "bottomAnchor");

    v7 = objc_msgSend(v4, "constraintEqualToAnchor:", v6);
    LODWORD(v8) = 1140457472;
    objc_msgSend(v7, "setPriority:", v8);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v10 = swift_allocObject(v9, 64, 7);
    *(_OWORD *)(v10 + 16) = xmmword_2F0A20;
    v11 = objc_msgSend(v3, "topAnchor");
    v12 = objc_msgSend(v1, "layoutMarginsGuide");
    v13 = objc_msgSend(v12, "topAnchor");

    v14 = objc_msgSend(v11, "constraintEqualToAnchor:", v13);
    *(_QWORD *)(v10 + 32) = v14;
    v15 = objc_msgSend(v3, "leftAnchor");
    v16 = objc_msgSend(v1, "layoutMarginsGuide");
    v17 = objc_msgSend(v16, "leftAnchor");

    v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);
    *(_QWORD *)(v10 + 40) = v18;
    *(_QWORD *)(v10 + 48) = v7;
    v19 = v7;
    v20 = objc_msgSend(v3, "rightAnchor");
    v21 = objc_msgSend(v1, "layoutMarginsGuide");
    v22 = objc_msgSend(v21, "rightAnchor");

    v23 = objc_msgSend(v20, "constraintEqualToAnchor:", v22);
    *(_QWORD *)(v10 + 56) = v23;
    specialized Array._endMutation()(v24);
    v25 = v10;
    v26 = (void *)objc_opt_self(NSLayoutConstraint);
    v27 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_viewConstraints;
    v28 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_viewConstraints];
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v28);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v26, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

    v30 = *(_QWORD *)&v1[v27];
    *(_QWORD *)&v1[v27] = v25;
    swift_bridgeObjectRelease(v30);
    v31 = *(_QWORD *)&v1[v27];
    swift_bridgeObjectRetain(v31);
    v32.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v26, "activateConstraints:", v32.super.isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

  }
  else
  {
    v33 = (void *)objc_opt_self(NSLayoutConstraint);
    v34 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_viewConstraints;
    v35 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_viewConstraints];
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v35);
    v36 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v33, "deactivateConstraints:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

    v37 = *(_QWORD *)&v1[v34];
    *(_QWORD *)&v1[v34] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v37);
    v38 = *(_QWORD *)&v1[v34];
    swift_bridgeObjectRetain(v38);
    v32.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v33, "activateConstraints:", v32.super.isa, swift_bridgeObjectRelease(v38).n128_f64[0]);
  }

  return objc_msgSend(v1, "invalidateIntrinsicContentSize");
}

uint64_t type metadata accessor for CardView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView);
}

void sub_22B5D4()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  Class isa;
  id v40;
  void *v41;
  void *v42;
  objc_super v43;

  v1 = v0;
  v43.receiver = v0;
  v43.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v43, "viewDidLoad");
  v2 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView;
  v4 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView] = v2;

  v5 = *(void **)&v0[v3];
  if (!v5)
  {
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v5, "setAxis:", 1);
  v6 = *(void **)&v0[v3];
  if (!v6)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(v6, "setAlignment:", 0);
  v7 = *(void **)&v0[v3];
  if (!v7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v7, "setDistribution:", 3);
  v8 = *(void **)&v0[v3];
  if (!v8)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(v8, "setSpacing:", 16.0);
  v9 = *(void **)&v0[v3];
  if (!v9)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = objc_msgSend(v0, "view");
  if (!v10)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (!*(_QWORD *)&v0[v3])
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = v10;
  objc_msgSend(v10, "addSubview:");

  v12 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = *(void **)&v1[v3];
  if (!v13)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  objc_msgSend(v13, "addArrangedSubview:", v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v15 = swift_allocObject(v14, 56, 7);
  *(_OWORD *)(v15 + 16) = xmmword_2EFC80;
  v16 = *(void **)&v1[v3];
  if (!v16)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v42 = v12;
  v17 = objc_msgSend(v16, "topAnchor");
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, "layoutMarginsGuide");

  v21 = objc_msgSend(v20, "topAnchor");
  v22 = objc_msgSend(v17, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v15 + 32) = v22;
  v23 = *(void **)&v1[v3];
  if (!v23)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v24 = objc_msgSend(v23, "leftAnchor");
  v25 = objc_msgSend(v1, "view");
  if (!v25)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "layoutMarginsGuide");

  v28 = objc_msgSend(v27, "leftAnchor");
  v29 = objc_msgSend(v24, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v15 + 40) = v29;
  v30 = *(void **)&v1[v3];
  if (!v30)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v31 = objc_msgSend(v30, "rightAnchor");
  v32 = objc_msgSend(v1, "view");
  if (!v32)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v33 = v32;
  v34 = (void *)objc_opt_self(NSLayoutConstraint);
  v35 = objc_msgSend(v33, "layoutMarginsGuide");

  v36 = objc_msgSend(v35, "rightAnchor");
  v37 = objc_msgSend(v31, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v15 + 48) = v37;
  specialized Array._endMutation()(v38);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "activateConstraints:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v40 = objc_msgSend(v1, "view");
  if (v40)
  {
    v41 = v40;
    objc_msgSend(v40, "layoutIfNeeded");

    return;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_22BA94()
{
  void *v0;
  void *v1;
  uint64_t Strong;
  uint64_t v3;
  int *v4;
  uint64_t ObjectType;
  void *v6;
  double v7;
  id v8;
  id v10;
  char *v11;

  v1 = v0;
  if (qword_3CFCF0 != -1)
    swift_once(&qword_3CFCF0, sub_2A27F8);
  Strong = swift_unknownObjectWeakLoadStrong(&unk_3E03A0);
  if (Strong
    && (v3 = Strong,
        v4 = off_3E03A8[0],
        ObjectType = swift_getObjectType(),
        v6 = (void *)(*(uint64_t (**)(uint64_t, int *))((char *)&dword_8 + (_QWORD)v4))(ObjectType, v4),
        *(_QWORD *)&v7 = swift_unknownObjectRelease(v3).n128_u64[0],
        v6))
  {
    v8 = objc_msgSend(v6, "supportedInterfaceOrientations", v7);

    return (uint64_t)v8;
  }
  else
  {
    v10 = objc_msgSend(v1, "traitCollection");
    v11 = (char *)objc_msgSend(v10, "userInterfaceIdiom");

    if (v11 == (_BYTE *)&dword_0 + 1)
      return 30;
    else
      return 2;
  }
}

void sub_22BB7C(void *a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void **v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;

  objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "popWithCard:", a1);
  v3 = (void *)objc_opt_self(UIView);
  v4 = swift_allocObject(&unk_38C848, 24, 7);
  *(_QWORD *)(v4 + 16) = a1;
  v17 = sub_22CEEC;
  v18 = v4;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_24360;
  v16 = &block_descriptor_54;
  v5 = _Block_copy(&v13);
  v6 = v18;
  v7 = a1;
  swift_release(v6);
  v8 = swift_allocObject(&unk_38C898, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v1;
  v17 = sub_22CF44;
  v18 = v8;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_1E3D64;
  v16 = &block_descriptor_6_8;
  v9 = _Block_copy(&v13);
  v10 = v18;
  v11 = v7;
  v12 = v1;
  swift_release(v10);
  objc_msgSend(v3, "animateWithDuration:animations:completion:", v5, v9, 0.3);
  _Block_release(v9);
  _Block_release(v5);
}

void sub_22BCF4(int a1, id a2, uint64_t a3)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  objc_msgSend(a2, "removeFromSuperview");
  v4 = *(void **)(a3
                + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView);
  if (!v4)
    goto LABEL_16;
  v5 = objc_msgSend(v4, "arrangedSubviews");
  v6 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v12 = v7;
    else
      v12 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease(v7);
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  if (v8 == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a3+ OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_delegate);
    if (Strong)
    {
      v10 = Strong;
      v11 = *(void **)(Strong + 16);
      if (v11)
        objc_msgSend(v11, "setHidden:", 1);
      swift_unknownObjectRelease(v10);
    }
  }
}

void sub_22BE6C()
{
  void **v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  void *v7;
  id v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void **aBlock;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;

  v35 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView;
  v2 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView];
  if (!v2)
    goto LABEL_38;
  v3 = objc_msgSend(v2, "arrangedSubviews");
  v34 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v34);

  if ((unint64_t)v4 >> 62)
  {
LABEL_25:
    if (v4 < 0)
      v32 = v4;
    else
      v32 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  }
  *(_QWORD *)&v6 = swift_bridgeObjectRelease(v4).n128_u64[0];
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  v0 = (void **)OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_maximumNumberOfCards;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_maximumNumberOfCards] < v5 - 1)
  {
    v7 = *(void **)&v1[v35];
    if (!v7)
    {
LABEL_39:
      __break(1u);
      return;
    }
    v8 = objc_msgSend(v7, "arrangedSubviews", v6);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v34);

    if (!((unint64_t)v4 >> 62))
    {
      v9 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
      goto LABEL_9;
    }
LABEL_30:
    if (v4 < 0)
      v33 = v4;
    else
      v33 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v4);
LABEL_9:
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v4).n128_u64[0];
    v11 = v9 - 1;
    if (__OFSUB__(v9, 1))
    {
      __break(1u);
    }
    else
    {
      v12 = *(uint64_t *)((char *)v0 + (_QWORD)v1);
      v13 = __OFSUB__(v11, v12);
      v14 = v11 - v12;
      if (!v13)
      {
        if (v14 >= 1)
        {
          v4 = 0;
          v15 = v9 - v12 - 2;
          v0 = _NSConcreteStackBlock;
          while (1)
          {
            v16 = *(void **)&v1[v35];
            if (!v16)
              goto LABEL_37;
            v17 = v4 + 1;
            v18 = objc_msgSend(v16, "arrangedSubviews", v10);
            v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v34);

            if ((v19 & 0xC000000000000001) != 0)
            {
              v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 + 1, v19);
            }
            else
            {
              if (v17 >= *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8)))
              {
                __break(1u);
LABEL_24:
                __break(1u);
                goto LABEL_25;
              }
              v20 = *(id *)(v19 + 8 * v4 + 40);
            }
            v21 = v20;
            swift_bridgeObjectRelease(v19);
            objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "popWithCard:", v21);
            v22 = (void *)objc_opt_self(UIView);
            v23 = swift_allocObject(&unk_38C988, 24, 7);
            *(_QWORD *)(v23 + 16) = v21;
            v40 = sub_22D048;
            v41 = v23;
            aBlock = _NSConcreteStackBlock;
            v37 = 1107296256;
            v38 = sub_24360;
            v39 = &block_descriptor_25_0;
            v24 = _Block_copy(&aBlock);
            v25 = v41;
            v26 = v21;
            swift_release(v25);
            v27 = swift_allocObject(&unk_38C9D8, 32, 7);
            *(_QWORD *)(v27 + 16) = v26;
            *(_QWORD *)(v27 + 24) = v1;
            v40 = sub_22D074;
            v41 = v27;
            aBlock = _NSConcreteStackBlock;
            v37 = 1107296256;
            v38 = sub_1E3D64;
            v39 = &block_descriptor_32_0;
            v28 = _Block_copy(&aBlock);
            v29 = v41;
            v30 = v26;
            v31 = v1;
            swift_release(v29);
            objc_msgSend(v22, "animateWithDuration:animations:completion:", v24, v28, 0.3);
            _Block_release(v28);
            _Block_release(v24);

            if (v15 == v4)
              return;
            ++v4;
            if (__OFADD__(v17, 1))
              goto LABEL_24;
          }
        }
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    __break(1u);
    goto LABEL_36;
  }
}

char *sub_22C208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)();
  void (**v15)();
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSString v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;

  v6 = v5;
  v10 = type metadata accessor for CardView();
  v11 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10)), "init");
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_tintView], "setBackgroundColor:", a3);
  v12 = swift_allocObject(&unk_38CA28, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v6);
  v13 = swift_allocObject(&unk_38CA50, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v11);
  v14 = (void (*)())swift_allocObject(&unk_38CA78, 48, 7);
  *((_QWORD *)v14 + 2) = v13;
  *((_QWORD *)v14 + 3) = v12;
  *((_QWORD *)v14 + 4) = a4;
  *((_QWORD *)v14 + 5) = a5;
  v15 = (void (**)())&v11[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_tapAction];
  v16 = *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_tapAction];
  v17 = *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_tapAction
                      + 8];
  *v15 = sub_22D014;
  v15[1] = v14;
  sub_2C690(a4, a5);
  sub_1D618(v16, v17);
  v18 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v19 = (void *)objc_opt_self(UIFont);
  v20 = objc_msgSend((id)objc_opt_self(UIContentSizeCategoryPreference), "system");
  v21 = objc_msgSend(v20, "preferredContentSizeCategory");

  v22 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v21);
  v23 = objc_msgSend(v19, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleBody, v22);

  objc_msgSend(v18, "setFont:", v23);
  objc_msgSend(v18, "setNumberOfLines:", 5);
  objc_msgSend(v18, "setLineBreakMode:", 0);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setText:", v24);

  v25 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_view;
  v26 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B38CardView_view];
  v27 = v18;
  if (v26)
  {
    objc_msgSend(v26, "removeFromSuperview");
    v28 = *(void **)&v11[v25];
  }
  else
  {
    v28 = 0;
  }
  *(_QWORD *)&v11[v25] = v18;
  v29 = v18;

  sub_22B0A0();
  return v11;
}

void sub_22C4A8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE v12[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = a2 + 16;
    swift_beginAccess(v8, &v11, 0, 0);
    v9 = swift_unknownObjectWeakLoadStrong(v8);
    if (v9)
    {
      v10 = (void *)v9;
      sub_22BB7C(v7);

    }
    if (a3)
      a3();

  }
}

void sub_22C548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  char *v6;
  uint64_t v8;
  void *v9;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  void *v21;
  char *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void **v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id (*v39)();
  uint64_t v40;

  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView;
  v9 = *(void **)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView];
  if (!v9)
    goto LABEL_17;
  v15 = objc_msgSend(v9, "arrangedSubviews");
  v16 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v34 = v17;
    else
      v34 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v18 = *(_QWORD *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease(v17);
  if (__OFSUB__(v18, 1))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v18 == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_delegate]);
    if (Strong)
    {
      v20 = Strong;
      v21 = *(void **)(Strong + 16);
      if (v21)
        objc_msgSend(v21, "setHidden:", 0);
      swift_unknownObjectRelease(v20);
    }
  }
  v22 = sub_22C208(a1, a2, a3, a4, a5);
  objc_msgSend(v22, "setHidden:", 1);
  v23 = *(void **)&v6[v8];
  if (v23)
  {
    objc_msgSend(v23, "addArrangedSubview:", v22);
    sub_22BE6C();
    v24 = (void *)objc_opt_self(UIView);
    v25 = swift_allocObject(&unk_38C8E8, 24, 7);
    *(_QWORD *)(v25 + 16) = v22;
    v39 = sub_22CF4C;
    v40 = v25;
    v35 = _NSConcreteStackBlock;
    v36 = 1107296256;
    v37 = sub_24360;
    v38 = &block_descriptor_12_1;
    v26 = _Block_copy(&v35);
    v27 = v40;
    v28 = v22;
    swift_release(v27);
    v29 = swift_allocObject(&unk_38C938, 40, 7);
    *(double *)(v29 + 16) = a6;
    *(_QWORD *)(v29 + 24) = v6;
    *(_QWORD *)(v29 + 32) = v28;
    v39 = sub_22CF8C;
    v40 = v29;
    v35 = _NSConcreteStackBlock;
    v36 = 1107296256;
    v37 = sub_1E3D64;
    v38 = &block_descriptor_18_0;
    v30 = _Block_copy(&v35);
    v31 = v40;
    v32 = v28;
    v33 = v6;
    swift_release(v31);
    objc_msgSend(v24, "animateWithDuration:animations:completion:", v26, v30, 0.3);
    _Block_release(v30);
    _Block_release(v26);

    return;
  }
LABEL_18:
  __break(1u);
}

void sub_22C7F4()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void **aBlock;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;

  v24 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView;
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView];
  if (v1)
  {
    v2 = objc_msgSend(v1, "arrangedSubviews");
    v3 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    if ((unint64_t)v4 >> 62)
      goto LABEL_19;
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    while (1)
    {
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(v4).n128_u64[0];
      if (__OFSUB__(v5, 1))
        break;
      if (v5 - 1 < 1)
        goto LABEL_24;
      if (v5 == 2)
        return;
      v4 = 0;
      v7 = v5 - 2;
      while (v7 != v4)
      {
        v8 = *(void **)&v0[v24];
        if (!v8)
          goto LABEL_25;
        v9 = objc_msgSend(v8, "arrangedSubviews", v6);
        v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v3);

        if ((v10 & 0xC000000000000001) != 0)
        {
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 + 1, v10);
        }
        else
        {
          if ((unint64_t)(v4 + 1) >= *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8)))
            goto LABEL_18;
          v11 = *(id *)(v10 + 8 * v4 + 40);
        }
        v12 = v11;
        swift_bridgeObjectRelease(v10);
        objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v0, "popWithCard:", v12);
        v13 = (void *)objc_opt_self(UIView);
        v14 = swift_allocObject(&unk_38CAA0, 24, 7);
        *(_QWORD *)(v14 + 16) = v12;
        v29 = sub_22D048;
        v30 = v14;
        aBlock = _NSConcreteStackBlock;
        v26 = 1107296256;
        v27 = sub_24360;
        v28 = &block_descriptor_48;
        v15 = _Block_copy(&aBlock);
        v16 = v30;
        v17 = v12;
        swift_release(v16);
        v18 = swift_allocObject(&unk_38CAF0, 32, 7);
        *(_QWORD *)(v18 + 16) = v17;
        *(_QWORD *)(v18 + 24) = v0;
        v29 = sub_22D074;
        v30 = v18;
        aBlock = _NSConcreteStackBlock;
        v26 = 1107296256;
        v27 = sub_1E3D64;
        v28 = &block_descriptor_55_0;
        v19 = _Block_copy(&aBlock);
        v20 = v30;
        v21 = v17;
        v22 = v0;
        swift_release(v20);
        objc_msgSend(v13, "animateWithDuration:animations:completion:", v15, v19, 0.3);
        _Block_release(v19);
        _Block_release(v15);

        if (v7 == ++v4)
          return;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      if (v4 < 0)
        v23 = v4;
      else
        v23 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v5 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v4);
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  __break(1u);
}

id sub_22CAE4(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v7;
  double v8;
  NSString v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView] = 0;
  v7 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_maximumNumberOfCards] = 3;
  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v8 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v3;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, "initWithNibName:bundle:", v9, a3, v8);

  return v10;
}

uint64_t type metadata accessor for CardStackViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController);
}

void sub_22CCE8()
{
  uint64_t v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  char *v19;
  void *v20;
  id v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;

  if (!*(_QWORD *)(v0 + 16))
  {
    v1 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v1, "bounds");
    v3 = v2;
    v5 = v4;
    v7 = v6;
    v9 = v8;

    v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StatusBarOverlayWindow()), "initWithFrame:", v3, v5, v7, v9);
    v11 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v10;

    v12 = type metadata accessor for CardStackViewController();
    v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)), "init");
    v14 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v13;

    v15 = *(void **)(v0 + 16);
    if (v15)
    {
      objc_msgSend(v15, "setRootViewController:", *(_QWORD *)(v0 + 24));
      v16 = *(char **)(v0 + 16);
      if (v16)
      {
        v17 = *(void **)(v0 + 24);
        if (v17)
        {
          v18 = v16;
          v19 = v17;
          objc_msgSend(v19, "loadViewIfNeeded");
          v20 = *(void **)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_cardStackView];
          if (!v20)
          {
            __break(1u);
            return;
          }
          v21 = v20;

        }
        else
        {
          v22 = v16;
          v20 = 0;
        }
        v23 = *(void **)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B322StatusBarOverlayWindow_interactionView];
        *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B322StatusBarOverlayWindow_interactionView] = v20;

      }
    }
    v24 = *(_QWORD *)(v0 + 24);
    if (v24)
    {
      v25 = v24
          + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_54B016D51452DD2A3640D0E0D7A300B323CardStackViewController_delegate;
      *(_QWORD *)(v25 + 8) = &off_38C820;
      swift_unknownObjectWeakAssign(v25, v0);
    }
  }
}

uint64_t sub_22CE7C()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for DebugNotificationCenter()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23DebugNotificationCenter);
}

uint64_t sub_22CEC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_22CEEC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setHidden:", 1);
}

uint64_t block_copy_helper_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_54(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_22CF18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_22CF44(int a1)
{
  uint64_t v1;

  sub_22BCF4(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_22CF4C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setHidden:", 0);
}

uint64_t sub_22CF60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_22CF8C()
{
  uint64_t v0;
  id result;

  if (*(double *)(v0 + 16) >= 0.0)
    return objc_msgSend(*(id *)(v0 + 24), "performSelector:withObject:afterDelay:", "popWithCard:", *(_QWORD *)(v0 + 32));
  return result;
}

uint64_t sub_22CFB4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_22CFD8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_22D014()
{
  uint64_t v0;

  sub_22C4A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(void))(v0 + 32));
}

uint64_t sub_22D078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, __n128 a9@<Q0>)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  __n128 v16;
  uint64_t result;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;

  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  v19 = 1;
  State.init(wrappedValue:)(&v19, &type metadata for Bool, a9);
  v10 = v21;
  *(_BYTE *)(a8 + 56) = v20;
  *(_QWORD *)(a8 + 64) = v10;
  *(_QWORD *)(a8 + 72) = swift_getKeyPath(&unk_301520);
  *(_BYTE *)(a8 + 80) = 0;
  v11 = type metadata accessor for MultipleSubscriptionConfirmationView(0);
  v12 = (void *)objc_opt_self(NSNotificationCenter);
  v13 = objc_msgSend(v12, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(MTApplicationDidBecomeActiveNotification, 0);

  v14 = objc_msgSend(v12, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(MTApplicationDidEnterBackgroundNotification, 0);

  v15 = a8 + *(int *)(v11 + 48);
  v19 = 0;
  result = State.init(wrappedValue:)(&v19, &type metadata for Bool, v16);
  v18 = v21;
  *(_BYTE *)v15 = v20;
  *(_QWORD *)(v15 + 8) = v18;
  return result;
}

uint64_t type metadata accessor for MultipleSubscriptionConfirmationView(uint64_t a1)
{
  uint64_t result;

  result = qword_3DDB90;
  if (!qword_3DDB90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MultipleSubscriptionConfirmationView);
  return result;
}

uint64_t sub_22D214(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    *(_QWORD *)(a1 + 8) = a2[1];
    v8 = a2[6];
    v21 = *((_OWORD *)a2 + 1);
    v22 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = v21;
    *(_OWORD *)(a1 + 32) = v22;
    *(_QWORD *)(a1 + 48) = v8;
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v9 = a2[8];
    v10 = a2[9];
    *(_QWORD *)(a1 + 64) = v9;
    v11 = *((_BYTE *)a2 + 80);
    swift_bridgeObjectRetain(v5);
    swift_retain(v21);
    swift_retain(v22);
    swift_retain(v8);
    swift_retain(v9);
    j__swift_retain(v10);
    *(_QWORD *)(a1 + 72) = v10;
    *(_BYTE *)(a1 + 80) = v11;
    v12 = a3[10];
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = type metadata accessor for NSNotificationCenter.Publisher(0);
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(a1 + a3[11], (uint64_t)a2 + a3[11], v15);
    v17 = a3[12];
    v18 = a1 + v17;
    v19 = (uint64_t)a2 + v17;
    *(_BYTE *)v18 = *(_BYTE *)v19;
    v5 = *(_QWORD *)(v19 + 8);
    *(_QWORD *)(v18 + 8) = v5;
  }
  swift_retain(v5);
  return a1;
}

uint64_t sub_22D35C(char *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  swift_release(*((_QWORD *)a1 + 2));
  swift_release(*((_QWORD *)a1 + 4));
  swift_release(*((_QWORD *)a1 + 6));
  swift_release(*((_QWORD *)a1 + 8));
  j__swift_release(*((_QWORD *)a1 + 9));
  v4 = &a1[a2[10]];
  v5 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(&a1[a2[11]], v5);
  return swift_release(*(_QWORD *)&a1[a2[12] + 8]);
}

uint64_t sub_22D404(uint64_t a1, __int128 *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;

  v6 = *a2;
  v21 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v21;
  v7 = *((_QWORD *)a2 + 6);
  v22 = a2[2];
  *(_OWORD *)(a1 + 32) = v22;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  v8 = *((_QWORD *)a2 + 8);
  v9 = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 64) = v8;
  v10 = *((_BYTE *)a2 + 80);
  swift_bridgeObjectRetain(v6);
  swift_retain(v21);
  swift_retain(v22);
  swift_retain(v7);
  swift_retain(v8);
  j__swift_retain(v9);
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = v10;
  v11 = a3[10];
  v12 = a1 + v11;
  v13 = (uint64_t)a2 + v11;
  v14 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  v15(a1 + a3[11], (uint64_t)a2 + a3[11], v14);
  v16 = a3[12];
  v17 = a1 + v16;
  v18 = (uint64_t)a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 8) = v19;
  swift_retain(v19);
  return a1;
}

uint64_t *sub_22D528(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[1] = a2[1];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[4];
  v11 = a1[4];
  a1[3] = a2[3];
  a1[4] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[6];
  v13 = a1[6];
  a1[5] = a2[5];
  a1[6] = v12;
  swift_retain(v12);
  swift_release(v13);
  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  v14 = a1[8];
  v15 = a2[8];
  a1[8] = v15;
  swift_retain(v15);
  swift_release(v14);
  v16 = a2[9];
  v17 = *((_BYTE *)a2 + 80);
  j__swift_retain(v16);
  v18 = a1[9];
  a1[9] = v16;
  *((_BYTE *)a1 + 80) = v17;
  j__swift_release(v18);
  v19 = a3[10];
  v20 = (uint64_t)a1 + v19;
  v21 = (uint64_t)a2 + v19;
  v22 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24);
  v23(v20, v21, v22);
  v23((uint64_t)a1 + a3[11], (uint64_t)a2 + a3[11], v22);
  v24 = a3[12];
  v25 = (uint64_t)a1 + v24;
  v26 = (uint64_t)a2 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v27 = *(_QWORD *)(v25 + 8);
  v28 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 8) = v28;
  swift_retain(v28);
  swift_release(v27);
  return a1;
}

uint64_t sub_22D680(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = a3[10];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 56) = v6;
  v10 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[11], a2 + a3[11], v10);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t *sub_22D748(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  swift_release(v7);
  v8 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  swift_release(v8);
  v9 = a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  swift_release(v9);
  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  v10 = a1[8];
  a1[8] = a2[8];
  swift_release(v10);
  v11 = *((_BYTE *)a2 + 80);
  v12 = a1[9];
  a1[9] = a2[9];
  *((_BYTE *)a1 + 80) = v11;
  j__swift_release(v12);
  v13 = a3[10];
  v14 = (uint64_t)a1 + v13;
  v15 = (uint64_t)a2 + v13;
  v16 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v17((uint64_t)a1 + a3[11], (uint64_t)a2 + a3[11], v16);
  v18 = a3[12];
  v19 = (uint64_t)a1 + v18;
  v20 = (uint64_t)a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  swift_release(v21);
  return a1;
}

uint64_t sub_22D864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_22D870);
}

uint64_t sub_22D870(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for NSNotificationCenter.Publisher(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 40)], a2, v8);
  }
}

uint64_t sub_22D8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22D8F8);
}

char *sub_22D8F8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for NSNotificationCenter.Publisher(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 40)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_22D96C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = (char *)&value witness table for () + 64;
  v4[2] = (char *)&value witness table for () + 64;
  v4[3] = (char *)&value witness table for () + 64;
  v4[4] = &unk_301598;
  v4[5] = &unk_3015B0;
  result = type metadata accessor for NSNotificationCenter.Publisher(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = &unk_301598;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_22DA0C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_332DD8, 1);
}

uint64_t sub_22DA1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double (**v35)(uint64_t);
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double (**v42)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = v1;
  v53 = a1;
  v3 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v50 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDBE8);
  __chkstk_darwin(v47);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for MultipleSubscriptionConfirmationView(0);
  v7 = *(_QWORD *)(v55 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v55);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDBF0);
  __chkstk_darwin(v10);
  v12 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDBF8);
  __chkstk_darwin(v49);
  v48 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22ED0C(v1, (uint64_t)v9);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v46 = ((v14 + 16) & ~v14) + v8;
  v15 = (v14 + 16) & ~v14;
  v54 = v14 | 7;
  v16 = swift_allocObject(&unk_38CB40, v46, v14 | 7);
  v17 = v15;
  v45 = v15;
  v18 = sub_22ED54((uint64_t)v9, v16 + v15);
  v19 = static HorizontalAlignment.center.getter(v18);
  sub_22E934(v2, (uint64_t)v6);
  v20 = VerticalEdge.rawValue.getter(1);
  v21 = Edge.init(rawValue:)((2 * v20));
  v22 = static SafeAreaRegions.container.getter();
  v23 = &v6[*(int *)(v47 + 36)];
  *(_QWORD *)v23 = v22;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = 1;
  v23[17] = v21;
  *((_QWORD *)v23 + 3) = v19;
  sub_D184((uint64_t)v6, (uint64_t)v12 + *(int *)(v10 + 36), &qword_3DDBE8);
  *v12 = sub_22ED98;
  v12[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v16;
  sub_D1D4((uint64_t)v6, &qword_3DDBE8);
  v24 = *(int *)(v55 + 40);
  v25 = v2;
  v44 = v2;
  v26 = v2 + v24;
  v27 = v50;
  v28 = v51;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  v30 = v52;
  v29(v50, v26, v52);
  sub_22ED0C(v25, (uint64_t)v9);
  v31 = v46;
  v32 = swift_allocObject(&unk_38CB68, v46, v54);
  sub_22ED54((uint64_t)v9, v32 + v17);
  v33 = v48;
  sub_D184((uint64_t)v12, v48, &qword_3DDBF0);
  v34 = v49;
  v29((char *)(v33 + *(int *)(v49 + 52)), (uint64_t)v27, v30);
  v35 = (double (**)(uint64_t))(v33 + *(int *)(v34 + 56));
  *v35 = sub_22EDE8;
  v35[1] = (double (*)(uint64_t))v32;
  v36 = *(void (**)(char *, uint64_t))(v28 + 8);
  v36(v27, v30);
  sub_D1D4((uint64_t)v12, &qword_3DDBF0);
  v37 = v44;
  v29(v27, v44 + *(int *)(v55 + 44), v30);
  sub_22ED0C(v37, (uint64_t)v9);
  v38 = swift_allocObject(&unk_38CB90, v31, v54);
  sub_22ED54((uint64_t)v9, v38 + v45);
  v39 = v33;
  v40 = v53;
  sub_D184(v33, v53, &qword_3DDBF8);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC00);
  v29((char *)(v40 + *(int *)(v41 + 52)), (uint64_t)v27, v30);
  v42 = (double (**)(uint64_t))(v40 + *(int *)(v41 + 56));
  *v42 = sub_22EDF4;
  v42[1] = (double (*)(uint64_t))v38;
  v36(v27, v30);
  return sub_D1D4(v39, &qword_3DDBF8);
}

uint64_t sub_22DDE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (**v25)();
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[16];
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];

  v33 = a3;
  v5 = type metadata accessor for MultipleSubscriptionConfirmationView(0);
  v32 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v32 + 64);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC38);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC40);
  v12 = __chkstk_darwin(v31);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1;
  v36 = a2;
  v15 = static Axis.Set.vertical.getter(v12);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC48);
  v17 = type metadata accessor for MultipleSubscriptionScrollableContentView(255);
  v18 = sub_22EF64();
  v37[0] = v17;
  v37[1] = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v37, &opaque type descriptor for <<opaque return type of View.withSizing(callback:)>>, 1);
  ScrollView.init(_:showsIndicators:content:)(v15, 1, sub_22EF5C, v34, v16, OpaqueTypeConformance2);
  sub_22ED0C(a2, (uint64_t)v7);
  v20 = *(unsigned __int8 *)(v32 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = v21 + v6;
  v23 = v20 | 7;
  v24 = swift_allocObject(&unk_38CBB8, v21 + v6, v20 | 7);
  sub_22ED54((uint64_t)v7, v24 + v21);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
  v25 = (uint64_t (**)())&v14[*(int *)(v31 + 36)];
  *v25 = sub_22EFB0;
  v25[1] = (uint64_t (*)())v24;
  v25[2] = 0;
  v25[3] = 0;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_22ED0C(a2, (uint64_t)v7);
  v26 = swift_allocObject(&unk_38CBE0, v22, v23);
  sub_22ED54((uint64_t)v7, v26 + v21);
  v27 = v33;
  sub_D184((uint64_t)v14, v33, &qword_3DDC40);
  v28 = (_QWORD *)(v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DDC58) + 36));
  *v28 = 0;
  v28[1] = 0;
  v28[2] = sub_22F0A4;
  v28[3] = v26;
  return sub_D1D4((uint64_t)v14, &qword_3DDC40);
}

uint64_t sub_22E04C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];

  v30 = a1;
  v34 = a3;
  v5 = type metadata accessor for GeometryProxy(0);
  v6 = *(_QWORD *)(v5 - 8);
  v33 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v32 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MultipleSubscriptionConfirmationView(0);
  v31 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v31 + 64);
  __chkstk_darwin(v8);
  v10 = (int *)type metadata accessor for MultipleSubscriptionScrollableContentView(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v14(v13, a1, v5, v11);
  v15 = *a2;
  v16 = a2[5];
  v17 = a2[6];
  *(_QWORD *)&v13[v10[5]] = *a2;
  v18 = &v13[v10[6]];
  *(_QWORD *)v18 = v16;
  *((_QWORD *)v18 + 1) = v17;
  v19 = &v13[v10[7]];
  v35[0] = 0;
  swift_bridgeObjectRetain(v15);
  v20 = swift_retain(v17);
  State.init(wrappedValue:)(v35, &type metadata for CGFloat, v20);
  v21 = v35[2];
  *(_QWORD *)v19 = v35[1];
  *((_QWORD *)v19 + 1) = v21;
  sub_22ED0C((uint64_t)a2, (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = v32;
  ((void (*)(char *, uint64_t, uint64_t))v14)(v32, v30, v5);
  v23 = *(unsigned __int8 *)(v31 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = *(unsigned __int8 *)(v6 + 80);
  v26 = (v9 + v25 + v24) & ~v25;
  v27 = swift_allocObject(&unk_38CC08, v26 + v33, v23 | v25 | 7);
  sub_22ED54((uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v27 + v26, v22, v5);
  v28 = sub_22EF64();
  View.withSizing(callback:)(sub_22F21C, v27, v10, v28);
  swift_release(v27);
  return sub_22F294((uint64_t)v13);
}

uint64_t sub_22E26C(uint64_t a1, __n128 a2, double a3)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE v9[9];
  uint64_t v10;

  GeometryProxy.size.getter(a2);
  v5 = *(_QWORD *)(a1 + 64);
  v9[1] = *(_BYTE *)(a1 + 56);
  v10 = v5;
  v9[0] = v6 >= a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  return State.wrappedValue.setter(v9, v7);
}

uint64_t sub_22E2DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[9];
  uint64_t v68;

  v2 = type metadata accessor for Logger(0);
  v65 = *(_QWORD *)(v2 - 8);
  v66 = v2;
  __chkstk_darwin(v2);
  v64 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for MetricsEventType(0);
  v60 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ScalarDictionary(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v54 - v12;
  v14 = type metadata accessor for MetricsPageFields(0, v11);
  v62 = *(_QWORD *)(v14 - 8);
  v63 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v17);
  v61 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_BYTE *)(a1 + 80);
  j__swift_retain(v19);
  v21 = sub_150E0(v19, v20);
  v22 = j__swift_release(v19);
  v59 = v21;
  if (v21)
  {
    v23 = static MetricsPageID.multipleSubscriptionsFound.getter(v22);
    v25 = v24;
    v26 = static MetricsPageType.prompt.getter();
    MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)(v23, v25, v26, v27, 0, 0, 0);
    ScalarDictionary.init()(v28);
    v56 = sub_272D78((uint64_t)_swiftEmptyArrayStorage);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E58);
    v30 = *(_QWORD *)(type metadata accessor for PageMetrics.Instruction(0) - 8);
    v31 = v58;
    v55 = v6;
    v32 = swift_allocObject(v29, ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ 2 * *(_QWORD *)(v30 + 72), *(unsigned __int8 *)(v30 + 80) | 7);
    *(_OWORD *)(v32 + 16) = xmmword_2EFA20;
    v57 = a1;
    v33 = *(void (**)(char *, _QWORD, uint64_t))(v60 + 104);
    v33(v5, enum case for MetricsEventType.page(_:), v31);
    PageMetrics.Instruction.init(eventType:)(v5);
    v33(v5, enum case for MetricsEventType.impressions(_:), v31);
    v34 = PageMetrics.Instruction.init(eventType:)(v5);
    v35 = MetricsPageFields.metricsFields.getter(v34);
    v36 = v55;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v55);
    v37 = v61;
    v38 = v35;
    a1 = v57;
    PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v32, v38, v9, v56);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v36);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v63);
    v39 = type metadata accessor for PageMetrics(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v37, 0, 1, v39);
    v40 = v59;
    MetricsController.pageMetrics.setter(v37);
    swift_release(v40);
    v19 = *(_QWORD *)(a1 + 72);
    v20 = *(_BYTE *)(a1 + 80);
  }
  j__swift_retain(v19);
  v41 = sub_150E0(v19, v20);
  j__swift_release(v19);
  if (v41)
  {
    MetricsController.observe(lifecycleEvent:)(0);
    swift_release(v41);
  }
  j__swift_retain(v19);
  v42 = sub_150E0(v19, v20);
  j__swift_release(v19);
  if (v42)
  {
    MetricsController.observe(lifecycleEvent:)(1);
    swift_release(v42);
  }
  v43 = (char *)(a1 + *(int *)(type metadata accessor for MultipleSubscriptionConfirmationView(0) + 48));
  v44 = *v43;
  v45 = *((_QWORD *)v43 + 1);
  v67[1] = v44;
  v68 = v45;
  v67[0] = 1;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  v47 = State.wrappedValue.setter(v67, v46);
  v48 = v64;
  v49 = static Logger.purchases.getter(v47);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    _os_log_impl(&dword_0, v50, v51, "Multiple Subscription Confirmation Sheet is now visible.", v52, 2u);
    swift_slowDealloc(v52, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v48, v66);
}

uint64_t sub_22E778(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _BYTE v21[9];
  uint64_t v22;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_BYTE *)(a1 + 80);
  j__swift_retain(v6);
  v8 = sub_150E0(v6, v7);
  j__swift_release(v6);
  if (v8)
  {
    MetricsController.observe(lifecycleEvent:)(2);
    swift_release(v8);
  }
  j__swift_retain(v6);
  v9 = sub_150E0(v6, v7);
  j__swift_release(v6);
  if (v9)
  {
    MetricsController.observe(lifecycleEvent:)(3);
    swift_release(v9);
  }
  v10 = (char *)(a1 + *(int *)(type metadata accessor for MultipleSubscriptionConfirmationView(0) + 48));
  v11 = *v10;
  v12 = *((_QWORD *)v10 + 1);
  v21[1] = v11;
  v22 = v12;
  v21[0] = 0;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  v14 = State.wrappedValue.setter(v21, v13);
  v15 = static Logger.purchases.getter(v14);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "Multiple Subscription Confirmation Sheet is no longer visible.", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_22E934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 v25;
  uint64_t v26;
  char v27;
  char v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;

  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC08);
  v4 = __chkstk_darwin(v39);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for Material(0, v4);
  v6 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC10);
  __chkstk_darwin(v43);
  v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v42 = (uint64_t)&v35 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC18);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)(a1 + 64);
  v44 = *(_BYTE *)(a1 + 56);
  v45 = v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  State.wrappedValue.getter(&v46, v17);
  v19 = *(_QWORD *)(a1 + 8);
  v18 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 24);
  v20 = *(_QWORD *)(a1 + 32);
  if (v46 == 1)
  {
    *v15 = v19;
    v15[1] = v18;
    v15[2] = v21;
    v15[3] = v20;
    swift_storeEnumTagMultiPayload(v15, v13, 0);
    v22 = sub_22EE94();
    v23 = sub_22EED8();
    swift_retain(v18);
    swift_retain(v20);
    return _ConditionalContent<>.init(storage:)(v15, &type metadata for MultipleSubscriptionConfirmationButtonView, v43, v22, v23);
  }
  else
  {
    swift_retain(v18);
    v25 = swift_retain(v20);
    v26 = static Material.regular.getter(v25);
    v27 = static Edge.Set.all.getter(v26);
    v37 = v13;
    v38 = a2;
    v28 = v27;
    v36 = v6;
    v29 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v31 = (uint64_t)v40;
    v30 = v41;
    v29(v40, v8, v41);
    *(_BYTE *)(v31 + *(int *)(v39 + 36)) = v28;
    sub_D184(v31, (uint64_t)v10 + *(int *)(v43 + 36), &qword_3DDC08);
    *v10 = v19;
    v10[1] = v18;
    v10[2] = v21;
    v10[3] = v20;
    swift_retain(v18);
    swift_retain(v20);
    sub_D1D4(v31, &qword_3DDC08);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v30);
    swift_release(v20);
    swift_release(v18);
    v32 = v42;
    sub_22EE4C((uint64_t)v10, v42);
    sub_D184(v32, (uint64_t)v15, &qword_3DDC10);
    swift_storeEnumTagMultiPayload(v15, v37, 1);
    v33 = sub_22EE94();
    v34 = sub_22EED8();
    _ConditionalContent<>.init(storage:)(v15, &type metadata for MultipleSubscriptionConfirmationButtonView, v43, v33, v34);
    return sub_D1D4(v32, &qword_3DDC10);
  }
}

double sub_22EC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  double result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for MultipleSubscriptionConfirmationView(0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  State.wrappedValue.getter(&v10, v5);
  if (v10 == 1)
  {
    v7 = *(_QWORD *)(a2 + 72);
    v8 = *(_BYTE *)(a2 + 80);
    j__swift_retain(v7);
    v9 = sub_150E0(v7, v8);
    j__swift_release(v7);
    if (v9)
    {
      MetricsController.observe(lifecycleEvent:)(a3);
      *(_QWORD *)&result = swift_release(v9).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_22ED0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MultipleSubscriptionConfirmationView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22ED54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MultipleSubscriptionConfirmationView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22ED98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MultipleSubscriptionConfirmationView(0) - 8) + 80);
  return sub_22DDE4(a1, v2 + ((v5 + 16) & ~v5), a2);
}

double sub_22EDE8(uint64_t a1)
{
  return sub_22EDFC(a1, 5);
}

double sub_22EDF4(uint64_t a1)
{
  return sub_22EDFC(a1, 4);
}

double sub_22EDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MultipleSubscriptionConfirmationView(0) - 8) + 80);
  return sub_22EC50(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_22EE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22EE94()
{
  unint64_t result;

  result = qword_3DDC20;
  if (!qword_3DDC20)
  {
    result = swift_getWitnessTable(&unk_306FBC, &type metadata for MultipleSubscriptionConfirmationButtonView);
    atomic_store(result, (unint64_t *)&qword_3DDC20);
  }
  return result;
}

unint64_t sub_22EED8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DDC28;
  if (!qword_3DDC28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DDC10);
    sub_22EE94();
    sub_10EDC(&qword_3DDC30, &qword_3DDC08, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DDC28);
  }
  return result;
}

uint64_t sub_22EF5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22E04C(*(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

unint64_t sub_22EF64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DDC50;
  if (!qword_3DDC50)
  {
    v1 = type metadata accessor for MultipleSubscriptionScrollableContentView(255);
    result = swift_getWitnessTable(&unk_2F64D8, v1);
    atomic_store(result, (unint64_t *)&qword_3DDC50);
  }
  return result;
}

uint64_t sub_22EFB0()
{
  return sub_22F0B0(sub_22E2DC);
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);

  v1 = (int *)type metadata accessor for MultipleSubscriptionConfirmationView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (char *)(v0 + v4);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4));
  swift_release(*((_QWORD *)v7 + 2));
  swift_release(*((_QWORD *)v7 + 4));
  swift_release(*((_QWORD *)v7 + 6));
  swift_release(*((_QWORD *)v7 + 8));
  j__swift_release(*((_QWORD *)v7 + 9));
  v8 = &v7[v1[10]];
  v9 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v10 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(&v7[v1[11]], v9);
  swift_release(*(_QWORD *)&v7[v1[12] + 8]);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_22F0A4()
{
  return sub_22F0B0(sub_22E778);
}

uint64_t sub_22F0B0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MultipleSubscriptionConfirmationView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_22F0EC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  __n128 v15;
  uint64_t v17;

  v1 = (int *)type metadata accessor for MultipleSubscriptionConfirmationView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v17 = v9 + *(_QWORD *)(v7 + 64);
  v10 = v3 | v8 | 7;
  v11 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 16));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  swift_release(*(_QWORD *)(v0 + v4 + 64));
  j__swift_release(*(_QWORD *)(v0 + v4 + 72));
  v12 = v0 + v4 + v1[10];
  v13 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v12, v13);
  v14(v11 + v1[11], v13);
  v15 = swift_release(*(_QWORD *)(v11 + v1[12] + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v9, v6, v15);
  return swift_deallocObject(v0, v17, v10);
}

uint64_t sub_22F21C(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v5 = type metadata accessor for MultipleSubscriptionConfirmationView(0);
  v6 = (*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  type metadata accessor for GeometryProxy(0);
  v7.n128_f64[0] = a1;
  return sub_22E26C(v2 + v6, v7, a2);
}

uint64_t sub_22F294(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MultipleSubscriptionScrollableContentView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22F2D0()
{
  return sub_10EDC(&qword_3DDC60, &qword_3DDC00, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
}

uint64_t destroy for TranscriptSearchResultView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[2]);
  return swift_release(a1[3]);
}

uint64_t *initializeWithCopy for TranscriptSearchResultView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  swift_retain(v3);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for TranscriptSearchResultView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

_QWORD *assignWithTake for TranscriptSearchResultView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *(_QWORD *)a2;
  swift_release(v4);
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for TranscriptSearchResultView()
{
  return &type metadata for TranscriptSearchResultView;
}

uint64_t sub_22F458(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_332E1C, 1);
}

uint64_t sub_22F468@<X0>(double (*a1)(void (**)(char *, char *, uint64_t), uint64_t, __n128)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  double (*v43)(void (**)(char *, char *, uint64_t), uint64_t, __n128);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v44 = a2;
  v45 = a3;
  v43 = a1;
  v47 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC70);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - v10;
  v12 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v12);
  v14 = (_OWORD *)((char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v42 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6BB0);
  __chkstk_darwin(v21);
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v42 - v25;
  v46 = a4;
  LegacyLockup.artwork.getter(v27);
  sub_D184((uint64_t)v20, (uint64_t)v17, &qword_3D0A58);
  if (qword_3CFCB0 != -1)
    swift_once(&qword_3CFCB0, sub_28E658);
  v28 = xmmword_3DF9D0;
  v29 = (char *)v14 + *(int *)(v12 + 20);
  v30 = enum case for RoundedCornerStyle.continuous(_:);
  v31 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v29, v30, v31);
  __asm { FMOV            V0.2D, #5.0 }
  *v14 = _Q0;
  sub_D1D4((uint64_t)v20, &qword_3D0A58);
  sub_D210((uint64_t)v17, (uint64_t)v26, &qword_3D0A58);
  *(_OWORD *)&v26[*(int *)(v21 + 36)] = v28;
  v37 = sub_10A2EC((uint64_t)v14, (uint64_t)&v26[*(int *)(v21 + 40)]);
  *(_QWORD *)v11 = static HorizontalAlignment.leading.getter(v37);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC78);
  sub_22F78C(v43, v45, v46, (uint64_t)&v11[*(int *)(v38 + 44)]);
  sub_D184((uint64_t)v26, (uint64_t)v23, &qword_3D6BB0);
  sub_D184((uint64_t)v11, (uint64_t)v8, &qword_3DDC70);
  v39 = v47;
  sub_D184((uint64_t)v23, v47, &qword_3D6BB0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC80);
  sub_D184((uint64_t)v8, v39 + *(int *)(v40 + 48), &qword_3DDC70);
  sub_D1D4((uint64_t)v11, &qword_3DDC70);
  sub_D1D4((uint64_t)v26, &qword_3D6BB0);
  sub_D1D4((uint64_t)v8, &qword_3DDC70);
  return sub_D1D4((uint64_t)v23, &qword_3D6BB0);
}

uint64_t sub_22F78C@<X0>(double (*a1)(void (**)(char *, char *, uint64_t), uint64_t, __n128)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (**v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (**v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void (**)(char *, char *, uint64_t), uint64_t);
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  void (**v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  void **v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  __n128 v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  char *v87;
  void *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  void (**v106)(char *, char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  __n128 v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  void (**v149)(char *, char *, uint64_t);
  char *v150;
  double (*v151)(void (**)(char *, char *, uint64_t), uint64_t, __n128);
  uint64_t v152;
  uint64_t v153;
  void **aBlock;
  uint64_t v155;
  double (*v156)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v157;
  uint64_t (*v158)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  unsigned __int8 v161;
  uint64_t v162;
  unsigned __int8 v163;
  uint64_t v164;
  uint64_t v165;

  v147 = a3;
  v145 = a2;
  v151 = a1;
  v140 = a4;
  v5 = type metadata accessor for NqmlConfiguration(0);
  __chkstk_darwin(v5);
  v137 = (char *)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v7);
  v139 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Image.Scale(0);
  v149 = *(void (***)(char *, char *, uint64_t))(v9 - 8);
  v150 = (char *)v9;
  __chkstk_darwin(v9);
  v148 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PUITextStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  __chkstk_darwin(v11);
  v15 = (void (**)(char *, char *, uint64_t))((char *)&v137 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (void (**)(char *, char *, uint64_t))((char *)&v137 - v17);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC88);
  __chkstk_darwin(v142);
  v20 = (char *)&v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC90);
  v144 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v22 = (char *)&v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC98);
  __chkstk_darwin(v141);
  v24 = (char *)&v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDCA0);
  __chkstk_darwin(v143);
  v26 = (char *)&v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v153 = (uint64_t)&v137 - v28;
  *(_QWORD *)v20 = static VerticalAlignment.center.getter(v29);
  *((_QWORD *)v20 + 1) = 0x4000000000000000;
  v20[16] = 0;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDCA8);
  v31 = sub_2301C4((uint64_t)v151, a3, &v20[*(int *)(v30 + 44)]);
  v32 = static PUITextStyle.caption2.getter(v31);
  PUITextStyle.emph.getter(v32);
  v33 = *(void (**)(void (**)(char *, char *, uint64_t), uint64_t))(v12 + 8);
  v152 = v13;
  v33(v18, v13);
  v151 = (double (*)(void (**)(char *, char *, uint64_t), uint64_t, __n128))v33;
  v34 = sub_10EDC(&qword_3DDCB0, &qword_3DDC88, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.puiFont(_:)(v15, v142, v34);
  v33(v15, v13);
  sub_D1D4((uint64_t)v20, &qword_3DDC88);
  v36 = static Color.secondary.getter(v35);
  KeyPath = swift_getKeyPath(&unk_3016B0);
  v38 = v144;
  v39 = v146;
  (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v24, v22, v146);
  v40 = (uint64_t *)&v24[*(int *)(v141 + 36)];
  *v40 = KeyPath;
  v40[1] = v36;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v39);
  v42 = v149;
  v41 = (uint64_t)v150;
  v43 = v148;
  v149[13](v148, (char *)enum case for Image.Scale.small(_:), (uint64_t)v150);
  v44 = swift_getKeyPath(&unk_3016E0);
  v45 = (uint64_t *)&v26[*(int *)(v143 + 36)];
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  v42[2]((char *)v45 + *(int *)(v46 + 28), v43, v41);
  *v45 = v44;
  sub_D184((uint64_t)v24, (uint64_t)v26, &qword_3DDC98);
  ((void (*)(char *, uint64_t))v42[1])(v43, v41);
  sub_D1D4((uint64_t)v24, &qword_3DDC98);
  v150 = v26;
  v47 = sub_D210((uint64_t)v26, v153, &qword_3DDCA0);
  v49 = static Alignment.center.getter(v47, v48);
  v51 = _FrameLayout.init(width:height:alignment:)(&v160, 0, 1, 0x4000000000000000, 0, v49, v50);
  v145 = v160;
  LODWORD(v144) = v161;
  v143 = v162;
  LODWORD(v142) = v163;
  v141 = v164;
  v138 = v165;
  v52 = LegacyLockup.title.getter(v51);
  if (v53)
    v54 = (void **)v52;
  else
    v54 = 0;
  v55 = 0xE000000000000000;
  if (v53)
    v55 = v53;
  aBlock = v54;
  v155 = v55;
  v56 = sub_D254();
  v57 = Text.init<A>(_:)(&aBlock, &type metadata for String, v56);
  v59 = v58;
  v75 = v60;
  v62 = v61 & 1;
  static PUITextStyle.subhead.getter(v57);
  v63 = Text.puiFont(_:)(v18, v57, v59, v62, v75);
  v65 = v64;
  v67 = v66;
  v69 = v68 & 1;
  sub_D170(v57, v59, v62);
  v70 = swift_bridgeObjectRelease(v75);
  v149 = v18;
  v71.n128_f64[0] = v151(v18, v152, v70);
  v72 = static Color.primary.getter(v71);
  v148 = (char *)Text.foregroundColor(_:)(v72, v63, v65, v69, v67);
  v146 = v73;
  LODWORD(v75) = v74;
  v77 = v76;
  swift_release(v72);
  sub_D170(v63, v65, v69);
  swift_bridgeObjectRelease(v67);
  v78 = swift_getKeyPath(&unk_301710);
  v80 = LegacyEpisodeLockup.transcript.getter(v79);
  if (!v80)
    goto LABEL_9;
  v81 = (void *)v80;
  v82 = LanguageAwareString.string.getter();
  LODWORD(v147) = v75;
  v83 = v82;
  v85 = v84;

  sub_23073C();
  v86 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 15.0);
  v87 = v137;
  NqmlConfiguration.init(font:)(v86);
  v88 = (void *)NSAttributedString.init(nqml:configuration:)(v83, v85, v87);
  v89 = objc_msgSend(v88, "fullRange");
  v91 = v90;
  v92 = swift_allocObject(&unk_38CCF0, 24, 7);
  *(_QWORD *)(v92 + 16) = v88;
  v75 = swift_allocObject(&unk_38CD18, 32, 7);
  *(_QWORD *)(v75 + 16) = sub_23079C;
  *(_QWORD *)(v75 + 24) = v92;
  v158 = sub_C93E0;
  v159 = v75;
  aBlock = _NSConcreteStackBlock;
  v155 = 1107296256;
  v156 = sub_152250;
  v157 = &block_descriptor_55;
  v93 = _Block_copy(&aBlock);
  v94 = v159;
  v95 = v88;
  swift_retain(v75);
  objc_msgSend(v95, "enumerateAttributesInRange:options:usingBlock:", v89, v91, 0, v93, swift_release(v94).n128_f64[0]);
  _Block_release(v93);
  LOBYTE(v94) = swift_isEscapingClosureAtFileLocation(v75, "", 181, 82, 86, 1);
  swift_release(v92);
  v96 = v75;
  LOBYTE(v75) = v147;
  swift_release(v96);
  if ((v94 & 1) != 0)
  {
    __break(1u);
LABEL_9:
    v95 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  }
  v97 = v75 & 1;
  v98 = v139;
  AttributedString.init(_:)(v95);
  v99 = Text.init(_:)(v98);
  v101 = v100;
  v103 = v102;
  v105 = v104 & 1;
  v106 = v149;
  static PUITextStyle.subhead.getter(v99);
  v107 = Text.puiFont(_:)(v106, v99, v101, v105, v103);
  v109 = v108;
  v147 = v77;
  v111 = v110;
  v139 = (char *)v78;
  v113 = v112 & 1;
  sub_D170(v99, v101, v105);
  v114 = swift_bridgeObjectRelease(v103);
  v115.n128_f64[0] = v151(v106, v152, v114);
  v116 = static Color.secondary.getter(v115);
  v117 = Text.foregroundColor(_:)(v116, v107, v109, v113, v111);
  v119 = v118;
  LOBYTE(v106) = v120;
  v152 = v121;
  swift_release(v116);
  LOBYTE(v106) = v106 & 1;
  sub_D170(v107, v109, v113);
  swift_bridgeObjectRelease(v111);
  v122 = swift_getKeyPath(&unk_301710);
  v123 = (uint64_t)v150;
  sub_D184(v153, (uint64_t)v150, &qword_3DDCA0);
  LOBYTE(v99) = v97;
  LOBYTE(aBlock) = v97;
  v124 = v140;
  sub_D184(v123, v140, &qword_3DDCA0);
  v125 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_3DDCB8);
  v126 = v124 + v125[12];
  *(_QWORD *)v126 = 0;
  *(_BYTE *)(v126 + 8) = 1;
  *(_QWORD *)(v126 + 16) = v145;
  *(_BYTE *)(v126 + 24) = v144;
  *(_QWORD *)(v126 + 32) = v143;
  *(_BYTE *)(v126 + 40) = v142;
  v127 = v138;
  *(_QWORD *)(v126 + 48) = v141;
  *(_QWORD *)(v126 + 56) = v127;
  v128 = v124 + v125[16];
  v129 = (uint64_t)v148;
  v130 = v146;
  *(_QWORD *)v128 = v148;
  *(_QWORD *)(v128 + 8) = v130;
  *(_BYTE *)(v128 + 16) = v99;
  v131 = v99;
  v132 = v147;
  v133 = v139;
  *(_QWORD *)(v128 + 24) = v147;
  *(_QWORD *)(v128 + 32) = v133;
  *(_QWORD *)(v128 + 40) = 1;
  *(_BYTE *)(v128 + 48) = 0;
  v134 = v124 + v125[20];
  *(_QWORD *)v134 = v117;
  *(_QWORD *)(v134 + 8) = v119;
  *(_BYTE *)(v134 + 16) = (_BYTE)v106;
  v135 = v152;
  *(_QWORD *)(v134 + 24) = v152;
  *(_QWORD *)(v134 + 32) = v122;
  *(_QWORD *)(v134 + 40) = 2;
  *(_BYTE *)(v134 + 48) = 0;
  *(_WORD *)(v134 + 49) = 256;
  sub_D130(v129, v130, v131);
  swift_bridgeObjectRetain(v132);
  swift_retain(v133);
  sub_D130(v117, v119, (char)v106);
  swift_bridgeObjectRetain(v135);
  swift_retain(v122);
  sub_D1D4(v153, &qword_3DDCA0);
  sub_D170(v117, v119, (char)v106);
  swift_release(v122);
  swift_bridgeObjectRelease(v135);
  sub_D170(v129, v130, (char)aBlock);
  swift_release(v133);
  swift_bridgeObjectRelease(v132);
  return sub_D1D4(v123, &qword_3DDCA0);
}

