uint64_t sub_2301C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char v35;
  char v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t, __n128);
  __n128 v40;
  __n128 v41;
  char *v43;
  char *v44;
  char v45;
  char v46;
  uint64_t v47;
  unint64_t v48;

  v44 = a3;
  v5 = type metadata accessor for EpisodeLibraryStateView(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  swift_retain(a2);
  v12 = swift_retain(a1);
  v13.n128_f64[0] = EpisodeLibraryStateView.init(episode:graph:)(a2, a1, v12);
  v14 = EpisodeCaptionGenerator.caption.getter(v13);
  if (v15)
  {
    v16 = v15;
    v47 = v14;
    v48 = v15;
    v17 = sub_D254();
    v18 = StringProtocol.localizedUppercase.getter(&type metadata for String, v17);
    v20 = v19;
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    v18 = 0;
    v20 = 0xE000000000000000;
  }
  v47 = v18;
  v48 = v20;
  v21 = sub_D254();
  v22 = Text.init<A>(_:)(&v47, &type metadata for String, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  KeyPath = swift_getKeyPath(&unk_301710);
  v30 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v30(v8, v11, v5);
  LOBYTE(v47) = v26 & 1;
  v46 = 0;
  v45 = 1;
  v43 = v11;
  v31 = v8;
  v32 = v44;
  v30(v44, v31, v5);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDCE8);
  v34 = &v32[*(int *)(v33 + 48)];
  v35 = v47;
  v36 = v46;
  *(_QWORD *)v34 = v22;
  *((_QWORD *)v34 + 1) = v24;
  v34[16] = v35;
  *((_QWORD *)v34 + 3) = v28;
  *((_QWORD *)v34 + 4) = KeyPath;
  *((_QWORD *)v34 + 5) = 1;
  v34[48] = v36;
  v37 = &v32[*(int *)(v33 + 64)];
  v38 = v45;
  *(_QWORD *)v37 = 0;
  v37[8] = v38;
  sub_D130(v22, v24, v35);
  v39 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
  swift_bridgeObjectRetain(v28);
  v40 = swift_retain(KeyPath);
  v39(v43, v5, v40);
  sub_D170(v22, v24, v47);
  swift_release(KeyPath);
  v41 = swift_bridgeObjectRelease(v28);
  return ((uint64_t (*)(char *, uint64_t, __n128))v39)(v31, v5, v41);
}

uint64_t sub_2303EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double (*v3)(void (**)(char *, char *, uint64_t), uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(double (**)(void (**)(char *, char *, uint64_t), uint64_t, __n128))v1;
  v4 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = static VerticalAlignment.top.getter();
  *(_QWORD *)(a1 + 8) = 0x4024000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC68);
  return sub_22F468(v3, v4, v6, v5, a1 + *(int *)(v7 + 44));
}

void sub_230458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *v29;
  char **v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v9 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return;
    }
    if (v17 >= v13)
      goto LABEL_25;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_25;
      v18 = *(_QWORD *)(v9 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_25;
        v18 = *(_QWORD *)(v9 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v13)
            goto LABEL_25;
          v18 = *(_QWORD *)(v9 + 8 * v14);
          if (!v18)
          {
            v14 = v17 + 4;
            if (v17 + 4 >= v13)
              goto LABEL_25;
            v18 = *(_QWORD *)(v9 + 8 * v14);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_24:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_5:
    objc_msgSend(a5, "removeAttribute:range:", *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v16), a2, a3);
  }
  v19 = v17 + 5;
  if (v19 < v13)
  {
    v18 = *(_QWORD *)(v9 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v14 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_29;
        if (v14 >= v13)
          goto LABEL_25;
        v18 = *(_QWORD *)(v9 + 8 * v14);
        ++v19;
        if (v18)
          goto LABEL_24;
      }
    }
    v14 = v19;
    goto LABEL_24;
  }
LABEL_25:
  swift_release(a1);
  v33 = a1;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDCC0);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_2F03C0;
  v22 = swift_bridgeObjectRetain(a1);
  *(_QWORD *)(v21 + 32) = static NSAttributedStringKey.marked.getter(v22);
  v32 = v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDCC8);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDCD0);
  v25 = sub_10EDC(&qword_3DDCD8, &qword_3DDCC8, (uint64_t)&protocol conformance descriptor for [A : B].Keys);
  v26 = sub_10EDC(&qword_3DDCE0, &qword_3DDCD0, (uint64_t)&protocol conformance descriptor for [A]);
  v27 = sub_2307CC();
  v28 = Collection<>.contains<A>(_:)(&v32, v23, v24, v25, v26, v27);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(v21);
  v29 = (void *)objc_opt_self(UIColor);
  v30 = &selRef_labelColor;
  if ((v28 & 1) == 0)
    v30 = &selRef_secondaryLabelColor;
  v31 = objc_msgSend(v29, *v30, v32, v33);
  objc_msgSend(a5, "addAttribute:value:range:", NSForegroundColorAttributeName, v31, a2, a3);

}

unint64_t sub_23073C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D46A8;
  if (!qword_3D46A8)
  {
    v1 = objc_opt_self(NSMutableAttributedString);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D46A8);
  }
  return result;
}

uint64_t sub_230778()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_23079C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_230458(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_2307A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_55(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_55(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_2307CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D00D0;
  if (!qword_3D00D0)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_2EDBF4, v1);
    atomic_store(result, (unint64_t *)&qword_3D00D0);
  }
  return result;
}

uint64_t sub_230814()
{
  return sub_10EDC(&qword_3DDCF0, &qword_3DDCF8, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

id sub_230840(uint64_t a1)
{
  char *v1;
  void *v2;
  id v4;
  unsigned __int8 *v5;
  char *v6;
  int v7;
  int v8;
  int v9;
  unsigned __int8 *v10;
  id v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  objc_class *v23;
  char *v24;
  id v25;
  int v26;
  objc_super v28;
  __int128 v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int16 v41;
  objc_super v42;

  v2 = v1;
  v42.receiver = v1;
  v42.super_class = (Class)swift_getObjectType();
  v4 = objc_msgSendSuper2(&v42, "preferredLayoutAttributesFittingAttributes:", a1);
  if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_axis] & 1) == 0)
  {
    v5 = *(unsigned __int8 **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView];
    if (v5)
    {
      v6 = *(char **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episode];
      if (v6)
      {
        v7 = v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style];
        v8 = v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style + 1];
        v9 = v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style + 2];
        v10 = v5;
        v11 = objc_msgSend(v1, "contentView", swift_retain(v6).n128_f64[0]);
        objc_msgSend(v11, "directionalLayoutMargins");
        v13 = v12;

        v14 = objc_msgSend(v2, "contentView");
        objc_msgSend(v14, "directionalLayoutMargins");
        v16 = v15;

        objc_msgSend(v4, "size");
        v18 = v17 - (v13 + v16);
        v19 = objc_msgSend(v2, "traitCollection");
        if ((UITraitCollection.interfaceIdiomIsMac.getter() & 1) != 0)
        {
          if (qword_3CF258 != -1)
            swift_once(&qword_3CF258, sub_AFA34);
        }
        else
        {
          if (qword_3CF250 != -1)
            swift_once(&qword_3CF250, sub_AF9E8);
          v29 = xmmword_3FAC10;
          v30 = byte_3FAC20;
          v31 = (id)qword_3FAC28;
          v32 = qword_3FAC30;
          v33 = qword_3FAC38;
          v34 = qword_3FAC40;
          v35 = qword_3FAC48;
          v36 = *(_QWORD *)byte_3FAC50;
          v37 = (void *)qword_3FAC58;
          v38 = qword_3FAC60;
          v39 = xmmword_3FAC68;
          v40 = qword_3FAC78;
          v41 = word_3FAC80;
          sub_1472C((id)qword_3FAC28, qword_3FAC30, qword_3FAC38, qword_3FAC40, qword_3FAC48, byte_3FAC50[0], (void *)qword_3FAC58, qword_3FAC60, xmmword_3FAC68, *((uint64_t *)&xmmword_3FAC68 + 1), qword_3FAC78, word_3FAC80);
          if (qword_3CFAB0 != -1)
            swift_once(&qword_3CFAB0, sub_1DD388);
          v20 = type metadata accessor for FloatingPointRoundingRule(0);
          v21 = __swift_project_value_buffer(v20, (uint64_t)qword_3FCFB0);
          sub_1DD06C((uint64_t)v19, v21, 0);
          sub_14788(v31, v32, v33, v34, v35, v36, v37, v38, v39, *((uint64_t *)&v39 + 1), v40, v41);
        }

        v22 = objc_msgSend(v2, "traitCollection");
        v23 = (objc_class *)type metadata accessor for _TraitEnvironmentWrapper();
        v24 = (char *)objc_allocWithZone(v23);
        *(_QWORD *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3B3149F5140CF30271827167208E639424_TraitEnvironmentWrapper_traitCollection] = v22;
        v28.receiver = v24;
        v28.super_class = v23;
        v25 = objc_msgSendSuper2(&v28, "init");
        if (v8)
          v26 = 256;
        else
          v26 = 0;
        sub_2316FC(v6, v25, v26 | (v9 << 16) | v7, v18);

        objc_msgSend(v4, "size");
        objc_msgSend(v4, "setSize:");

        swift_release(v6);
      }
    }
  }
  return v4;
}

void sub_230BF0()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unsigned __int16 v34;
  objc_super v35;

  v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v35, "layoutSubviews");
  v2 = objc_msgSend(v0, "traitCollection");
  if ((UITraitCollection.interfaceIdiomIsMac.getter() & 1) != 0)
  {
    if (qword_3CF258 != -1)
      swift_once(&qword_3CF258, sub_AFA34);
    v3 = *(double *)&qword_3FAC88;
  }
  else
  {
    if (qword_3CF250 != -1)
      swift_once(&qword_3CF250, sub_AF9E8);
    v24 = (void *)qword_3FAC28;
    v25 = qword_3FAC30;
    v26 = qword_3FAC38;
    v27 = qword_3FAC40;
    v28 = qword_3FAC48;
    v29 = byte_3FAC50[0];
    v30 = (void *)qword_3FAC58;
    v31 = qword_3FAC60;
    v32 = xmmword_3FAC68;
    v33 = qword_3FAC78;
    v34 = word_3FAC80;
    sub_1472C((id)qword_3FAC28, qword_3FAC30, qword_3FAC38, qword_3FAC40, qword_3FAC48, byte_3FAC50[0], (void *)qword_3FAC58, qword_3FAC60, xmmword_3FAC68, *((uint64_t *)&xmmword_3FAC68 + 1), qword_3FAC78, word_3FAC80);
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v4 = type metadata accessor for FloatingPointRoundingRule(0);
    v5 = __swift_project_value_buffer(v4, (uint64_t)qword_3FCFB0);
    sub_1DD06C((uint64_t)v2, v5, 0);
    v3 = v6;
    sub_14788(v24, v25, v26, v27, v28, v29, v30, v31, v32, *((uint64_t *)&v32 + 1), v33, v34);
  }

  v7 = objc_msgSend(v0, "contentView");
  objc_msgSend(v7, "bounds");
  v9 = v8;
  v11 = v10;

  v12 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView];
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v1, "contentView");
    objc_msgSend(v14, "directionalLayoutMargins");
    v16 = v15;

    v17 = objc_msgSend(v1, "contentView");
    objc_msgSend(v17, "directionalLayoutMargins");
    v19 = v18;

    v20 = v9 - v19;
    v21 = objc_msgSend(v1, "contentView");
    objc_msgSend(v21, "directionalLayoutMargins");
    v23 = v22;

    objc_msgSend(v13, "setFrame:", v16, v3, v20 - v23, v11 - (v3 + v3));
  }
}

id sub_230F88(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_objectGraph] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episode] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_axis] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView] = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

uint64_t type metadata accessor for OldEpisodeCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews14OldEpisodeCell);
}

void *sub_231098()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView);
  if (!v1)
    return 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback);
  v3 = v2;
  return v2;
}

uint64_t sub_2310E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView);
  if (v1)
    return *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style);
  __break(1u);
  return result;
}

id sub_23110C()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView);
  if (v1)
    return *(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback);
  __break(1u);
  return result;
}

void sub_231134()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView);
  if (v1)
  {
    v2 = v1;
    sub_2C4C40();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_231188()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView);
  if (v1)
  {
    v2 = v1;
    v3 = ArtworkCrop.preferredContentMode.getter();
    v4 = ContentMode.viewContentMode.getter(v3);

    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_2311E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  double result;
  id v6;
  char v7;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episode);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episode) = a1;
  swift_release(v3);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView);
  if (v4)
  {
    v7 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_axis);
    swift_retain(a1);
    v6 = v4;
    sub_2C35BC(a1, &v7);

  }
  else
  {
    *(_QWORD *)&result = swift_retain(a1).n128_u64[0];
  }
  return result;
}

void sub_231280(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  id v7;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_objectGraph);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_objectGraph) = a1;
  swift_release(v5);
  swift_retain(a1);
  sub_233D10(a2);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView);
  if (v6)
  {
    v7 = v6;
    sub_2C3504(a1);

  }
}

uint64_t sub_231314(uint64_t a1, void *a2)
{
  unsigned __int8 v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  objc_class *v12;
  char *v13;
  id v14;
  id v15;
  double v16;
  objc_super v18;
  __int128 v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  unsigned __int16 v31;

  v3 = ModernShelf.ItemPresentation.itemKind.getter(a1);
  if (v3 > 8u)
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
  }
  else
  {
    v4 = 4 * (char)v3;
    v5 = *(_DWORD *)((char *)&unk_301980 + v4);
    v6 = *(_DWORD *)((char *)&unk_3019A4 + v4);
    v7 = *(_DWORD *)((char *)&unk_3019C8 + v4);
  }
  if ((UITraitCollection.interfaceIdiomIsMac.getter() & 1) != 0)
  {
    if (qword_3CF258 != -1)
      swift_once(&qword_3CF258, sub_AFA34);
    v8 = *(double *)&qword_3FAC88;
  }
  else
  {
    if (qword_3CF250 != -1)
      swift_once(&qword_3CF250, sub_AF9E8);
    v19 = xmmword_3FAC10;
    v20 = byte_3FAC20;
    v21 = (id)qword_3FAC28;
    v22 = qword_3FAC30;
    v23 = qword_3FAC38;
    v24 = qword_3FAC40;
    v25 = qword_3FAC48;
    v26 = *(_QWORD *)byte_3FAC50;
    v27 = (void *)qword_3FAC58;
    v28 = qword_3FAC60;
    v29 = xmmword_3FAC68;
    v30 = qword_3FAC78;
    v31 = word_3FAC80;
    sub_1472C((id)qword_3FAC28, qword_3FAC30, qword_3FAC38, qword_3FAC40, qword_3FAC48, byte_3FAC50[0], (void *)qword_3FAC58, qword_3FAC60, xmmword_3FAC68, *((uint64_t *)&xmmword_3FAC68 + 1), qword_3FAC78, word_3FAC80);
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v9 = type metadata accessor for FloatingPointRoundingRule(0);
    v10 = __swift_project_value_buffer(v9, (uint64_t)qword_3FCFB0);
    sub_1DD06C((uint64_t)a2, v10, 0);
    v8 = v11;
    sub_14788(v21, v22, v23, v24, v25, v26, v27, v28, v29, *((uint64_t *)&v29 + 1), v30, v31);
  }
  v12 = (objc_class *)type metadata accessor for _TraitEnvironmentWrapper();
  v13 = (char *)objc_allocWithZone(v12);
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_3B3149F5140CF30271827167208E639424_TraitEnvironmentWrapper_traitCollection] = a2;
  v18.receiver = v13;
  v18.super_class = v12;
  v14 = a2;
  v15 = objc_msgSendSuper2(&v18, "init");
  v16 = sub_D91B0(v15, v6 | v5 | v7);

  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v8 + v8 + v16);
}

double sub_231554(uint64_t *a1)
{
  return sub_2311E0(*a1);
}

uint64_t sub_23155C(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = ModernShelf.ItemPresentation.itemKind.getter(a1);
  return (v1 < 9u) & (0x128u >> v1);
}

uint64_t sub_231598()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_objectGraph));
}

uint64_t sub_2315AC(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DDD60, v3, (uint64_t (*)(uint64_t))type metadata accessor for OldEpisodeCell, (uint64_t)&unk_3018D8);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_231604(uint64_t a1, void *a2)
{
  return sub_231314(a1, a2);
}

uint64_t sub_231618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DDD60, a2, (uint64_t (*)(uint64_t))type metadata accessor for OldEpisodeCell, (uint64_t)&unk_3018D8);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_23164C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DDD48, a2, (uint64_t (*)(uint64_t))type metadata accessor for OldEpisodeCell, (uint64_t)&unk_301778);
}

uint64_t sub_231678(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5CE0, a2, (uint64_t (*)(uint64_t))type metadata accessor for OldEpisodeCell, (uint64_t)&unk_3017D8);
}

uint64_t sub_2316A4(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DDD50, a2, (uint64_t (*)(uint64_t))type metadata accessor for OldEpisodeCell, (uint64_t)&unk_301938);
}

uint64_t sub_2316D0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DDD58, a2, (uint64_t (*)(uint64_t))type metadata accessor for OldEpisodeCell, (uint64_t)&unk_301808);
}

void sub_2316FC(char *a1, void *a2, int a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int128 v25;
  char v26;
  char v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  __n128 v48;
  id v49;
  uint64_t v50;
  objc_class *v51;
  char Attributed;
  id v53;
  unsigned __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int128 v60;
  uint64_t v61;
  unsigned __int128 v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  id *v71;
  id *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int128 v80;
  uint64_t v81;
  unsigned __int128 v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  _QWORD *v91;
  uint64_t v92;
  void *v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  id v101;
  id v102;
  void *v103;
  char v104;
  char v105;
  id v106;
  double v107;
  _QWORD *v108;
  id v109;
  objc_class *v110;
  char v111;
  id v112;
  uint64_t v113;
  unsigned int v114;
  double v115;
  double v116;
  uint64_t v117;
  double v118;
  int *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t ObjectType;
  __n128 v123;
  uint64_t v124;
  __n128 v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  unsigned __int128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned __int16 v137;
  id v138;
  double v139;
  double v140;
  uint64_t v141;
  char v142;
  __n128 v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  double v147;
  double v148;
  double v149;
  double *v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  void *v156;
  unsigned __int128 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned __int16 v161;
  id v162;
  double v163;
  double v164;
  uint64_t EnumCaseMultiPayload;
  double *v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  id v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  double v179;
  double v180;
  double *v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  char v185;
  void *v186;
  uint64_t v187;
  unsigned __int128 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unsigned __int16 v192;
  id v193;
  double v194;
  double v195;
  unint64_t v196;
  unint64_t v197;
  void *v198;
  uint64_t v199;
  double *v200;
  id v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  id v207;
  _QWORD *v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  unint64_t v213;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v215;
  unint64_t v216;
  void *v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  double v227;
  uint64_t v228;
  unint64_t v229;
  unint64_t v230;
  char v231;
  uint64_t v232;
  uint64_t v233;
  unsigned __int128 v234;
  uint64_t v235;
  char v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unsigned __int16 v240;
  id v241;
  double v242;
  unint64_t v243;
  unint64_t v244;
  char v245;
  id v246;
  id v247;
  id v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  id v252;
  id v253;
  char *v254;
  char *v255;
  void *v256;
  id v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  double v264;
  BOOL v265;
  char v266;
  unint64_t v267;
  unint64_t v268;
  _QWORD *v269;
  void *v270;
  id v271;
  uint64_t v272;
  uint64_t v273;
  double v274;
  double *v275;
  uint64_t v276;
  uint64_t v277;
  double *v278;
  double v279;
  uint64_t v280;
  uint64_t v281;
  double v282;
  double *v283;
  uint64_t v284;
  uint64_t v285;
  double *v286;
  double v287;
  uint64_t v288;
  id v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  id v293;
  char *v294;
  void *v295;
  id v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  id v301;
  double v302;
  unint64_t v303;
  unint64_t v304;
  uint64_t v305;
  char v306;
  void *v307;
  uint64_t v308;
  unsigned __int128 v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  unsigned __int16 v313;
  id v314;
  double v315;
  double v316;
  unint64_t v317;
  unint64_t v318;
  unsigned __int128 v319;
  char v320;
  char *v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  void *v326;
  uint64_t v327;
  void *v328;
  uint64_t v329;
  __int128 v330;
  id v331;
  id v332;
  _QWORD *v333;
  uint64_t v334;
  _QWORD *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  id *v339;
  uint64_t v340;
  double *v341;
  double *v342;
  id v343;
  id v344;
  uint64_t v345;
  void *v346;
  char *v347;
  __int128 v348;
  _BYTE v349[24];
  __int128 v350;
  uint64_t v351;
  uint64_t v352;
  __int128 v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  __int16 v357;
  unsigned __int128 v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  _QWORD *v366;
  id v367;
  char v368;
  char v369;

  LODWORD(v345) = BYTE2(a3);
  v8 = type metadata accessor for NqmlConfiguration(0);
  __chkstk_darwin(v8);
  v322 = (char *)&v321 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v323 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v323);
  v321 = (char *)&v321 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v324 = (uint64_t)&v321 - v12;
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v340 = (uint64_t)&v321 - v15;
  v346 = a2;
  v16 = objc_msgSend(a2, "traitCollection", v14);
  LODWORD(v334) = a3;
  LODWORD(v338) = a3 & 0xFF0101;
  v336 = sub_2C4D34(v16, a3 & 0xFF0101);

  v347 = a1;
  v325 = LegacyLockup.title.getter(v17);
  v335 = v18;
  if (qword_3CF5B8 != -1)
    swift_once(&qword_3CF5B8, sub_140C98);
  v19 = xmmword_3FC090;
  v20 = *((_QWORD *)&xmmword_3FC0A0 + 1);
  v326 = (void *)xmmword_3FC0A0;
  v21 = qword_3FC0B0;
  v341 = *(double **)byte_3FC0B8;
  v339 = (id *)xmmword_3FC0C0;
  v22 = qword_3FC0D0;
  v337 = *((_QWORD *)&xmmword_3FC0C0 + 1);
  v329 = qword_3FC0D0;
  v25 = xmmword_3FC0D8;
  v24 = v25 >> 64;
  v23 = v25;
  v330 = xmmword_3FC0D8;
  v26 = word_3FC0E8;
  LODWORD(v331) = word_3FC0E8;
  v27 = HIBYTE(word_3FC0E8);
  LODWORD(v332) = HIBYTE(word_3FC0E8);
  v28 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  v320 = v27;
  v319 = __PAIR128__(v24, v23);
  v327 = *((_QWORD *)&v19 + 1);
  v328 = (void *)v19;
  v29 = (uint64_t)v326;
  v30 = (uint64_t)v341;
  v31 = v339;
  v32 = v337;
  sub_DDA0((void *)v19, *((uint64_t *)&v19 + 1), (uint64_t)v326, v20, v21, (char)v341, v339, v337, v22, v319, *((uint64_t *)&v319 + 1), v26, v320);
  v343 = v28;
  v33 = objc_msgSend(v28, "system");
  v34 = objc_msgSend(v33, "preferredContentSizeCategory");

  v342 = (double *)objc_opt_self(UITraitCollection);
  v35 = objc_msgSend(v342, "traitCollectionWithPreferredContentSizeCategory:", v34);

  v348 = v19;
  *(_QWORD *)v349 = v29;
  *(_QWORD *)&v349[8] = v20;
  *(_QWORD *)&v349[16] = v21;
  *(_QWORD *)&v350 = v30;
  *((_QWORD *)&v350 + 1) = v31;
  v351 = v32;
  v36 = v329;
  v352 = v329;
  v37 = v330;
  v353 = v330;
  v38 = *((_QWORD *)&v330 + 1);
  LOBYTE(v31) = (_BYTE)v331;
  LOBYTE(v354) = (_BYTE)v331;
  LOBYTE(v32) = (_BYTE)v332;
  BYTE1(v354) = (_BYTE)v332;
  v39 = sub_1D5728((uint64_t)&v348, v35);
  v344 = (id)objc_opt_self(UIFont);
  v333 = objc_msgSend(v344, "fontWithDescriptor:size:", v39, 0.0);

  sub_DCC8(v328, v327, v29, v20, v21, (char)v341, v339, v337, v36, v37, v38, (char)v31, v32);
  v40 = v345;
  if ((_DWORD)v345 == 1)
  {
    v41 = 2;
  }
  else
  {
    v42 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
    v43 = static UITraitCollection.interfaceIdiomIsMac.getter(v42);
    v44 = 2;
    if (v40 != 2)
      v44 = 3;
    if ((v43 & 1) != 0)
      v41 = 3;
    else
      v41 = v44;
  }
  v45 = v335;
  v46 = type metadata accessor for EpisodeView.LabelConfig();
  v47 = (_QWORD *)swift_allocObject(v46, 40, 7);
  v49 = v343;
  v341 = (double *)v46;
  v50 = 0;
  if (v45)
  {
    v51 = (objc_class *)type metadata accessor for LanguageAwareString(0);
    Attributed = static LanguageAwareString.alwaysGenerateAttributedString.getter();
    v53 = objc_allocWithZone(v51);
    v50 = LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(v325, v45, 0, Attributed & 1);
  }
  v47[2] = v333;
  v47[3] = v50;
  v335 = v47;
  v47[4] = v41;
  v339 = (id *)LegacyEpisodeLockup.summary.getter(v48);
  sub_2C7BA8(v346, v338, (uint64_t)&v348);
  v54 = v348;
  v55 = *(_QWORD *)v349;
  *(_QWORD *)&v330 = *(_QWORD *)v349;
  v56 = *(_QWORD *)&v349[8];
  v329 = *(_QWORD *)&v349[8];
  v57 = *(_QWORD *)&v349[16];
  v328 = *(void **)&v349[16];
  v58 = v350;
  v60 = v350;
  v59 = v60 >> 64;
  v327 = v60;
  v326 = (void *)*((_QWORD *)&v350 + 1);
  v61 = v351;
  v325 = v351;
  v337 = v352;
  v62 = v353;
  v332 = (id)(v62 >> 64);
  v333 = (_QWORD *)v62;
  LODWORD(v331) = v354;
  DWORD2(v330) = BYTE1(v354);
  v63 = objc_msgSend(v49, "system");
  v64 = objc_msgSend(v63, "preferredContentSizeCategory");

  v65 = objc_msgSend(v342, "traitCollectionWithPreferredContentSizeCategory:", v64);
  v358 = v54;
  v359 = v55;
  v360 = v56;
  v361 = v57;
  v362 = v58;
  v363 = v59;
  v364 = v61;
  v66 = v337;
  v67 = (uint64_t)v333;
  v365 = v337;
  v366 = v333;
  v68 = (uint64_t)v332;
  v367 = v332;
  LOBYTE(v58) = (_BYTE)v331;
  v368 = (char)v331;
  LOBYTE(v59) = BYTE8(v330);
  v369 = BYTE8(v330);
  v69 = sub_1D5728((uint64_t)&v358, v65);
  v70 = objc_msgSend(v344, "fontWithDescriptor:size:", v69, 0.0);

  sub_DCC8((void *)v54, *((uint64_t *)&v54 + 1), v330, v329, (uint64_t)v328, v327, v326, v325, v66, v67, v68, v58, v59);
  v71 = (id *)swift_allocObject(v341, 40, 7);
  v72 = v339;
  v71[2] = v70;
  v71[3] = v72;
  v339 = v71;
  v71[4] = &dword_0 + 3;
  v337 = LegacyEpisodeLockup.secondSummary.getter();
  sub_2C7BA8(v346, v338, (uint64_t)&v348);
  v74 = *((_QWORD *)&v348 + 1);
  v73 = v348;
  *(_QWORD *)&v330 = v348;
  v75 = *(_QWORD *)v349;
  v76 = *(_QWORD *)&v349[8];
  v329 = *(_QWORD *)&v349[8];
  v77 = *(_QWORD *)&v349[16];
  v328 = *(void **)&v349[16];
  v78 = v350;
  v80 = v350;
  v79 = v80 >> 64;
  v327 = v80;
  v326 = (void *)*((_QWORD *)&v350 + 1);
  v81 = v351;
  v325 = v351;
  v338 = v352;
  v82 = v353;
  v332 = (id)(v82 >> 64);
  v333 = (_QWORD *)v82;
  LODWORD(v331) = v354;
  DWORD2(v330) = BYTE1(v354);
  v83 = objc_msgSend(v343, "system");
  v84 = objc_msgSend(v83, "preferredContentSizeCategory");

  v85 = objc_msgSend(v342, "traitCollectionWithPreferredContentSizeCategory:", v84);
  v358 = __PAIR128__(v74, v73);
  v359 = v75;
  v360 = v76;
  v361 = v77;
  v362 = v78;
  v363 = v79;
  v364 = v81;
  v86 = v338;
  v87 = (uint64_t)v333;
  v365 = v338;
  v366 = v333;
  v88 = (uint64_t)v332;
  v367 = v332;
  LOBYTE(v78) = (_BYTE)v331;
  v368 = (char)v331;
  LOBYTE(v79) = BYTE8(v330);
  v369 = BYTE8(v330);
  v89 = sub_1D5728((uint64_t)&v358, v85);
  v90 = objc_msgSend(v344, "fontWithDescriptor:size:", v89, 0.0);

  sub_DCC8((void *)v330, v74, v75, v329, (uint64_t)v328, v327, v326, v325, v86, v87, v88, v78, v79);
  v91 = (_QWORD *)swift_allocObject(v341, 40, 7);
  v92 = v337;
  v91[2] = v90;
  v91[3] = v92;
  v333 = v91;
  v91[4] = 1;
  v326 = (void *)LegacyEpisodeLockup.caption.getter();
  v332 = v93;
  if (qword_3CF5B0 != -1)
    swift_once(&qword_3CF5B0, sub_140BEC);
  v94 = xmmword_3FC030;
  v95 = xmmword_3FC040;
  v96 = *(_QWORD *)byte_3FC058;
  v337 = qword_3FC050;
  v338 = *((_QWORD *)&xmmword_3FC060 + 1);
  *(_QWORD *)&v330 = xmmword_3FC060;
  v97 = qword_3FC070;
  v98 = qword_3FC078;
  v99 = qword_3FC080;
  DWORD2(v330) = word_3FC088;
  LODWORD(v331) = HIBYTE(word_3FC088);
  v328 = (void *)xmmword_3FC030;
  v329 = *((_QWORD *)&xmmword_3FC040 + 1);
  v327 = *(_QWORD *)byte_3FC058;
  sub_DDA0((void *)xmmword_3FC030, *((uint64_t *)&xmmword_3FC030 + 1), xmmword_3FC040, *((uint64_t *)&xmmword_3FC040 + 1), qword_3FC050, byte_3FC058[0], (void *)xmmword_3FC060, *((uint64_t *)&xmmword_3FC060 + 1), qword_3FC070, qword_3FC078, qword_3FC080, word_3FC088, SHIBYTE(word_3FC088));
  v100 = objc_msgSend(v343, "system");
  v101 = objc_msgSend(v100, "preferredContentSizeCategory");

  v102 = objc_msgSend(v342, "traitCollectionWithPreferredContentSizeCategory:", v101);
  v348 = v94;
  *(_OWORD *)v349 = v95;
  *(_QWORD *)&v349[16] = v337;
  *(_QWORD *)&v350 = v96;
  v103 = (void *)v330;
  *((_QWORD *)&v350 + 1) = v330;
  v351 = v338;
  v352 = v97;
  *(_QWORD *)&v353 = v98;
  *((_QWORD *)&v353 + 1) = v99;
  v104 = BYTE8(v330);
  LOBYTE(v354) = BYTE8(v330);
  v105 = (char)v331;
  BYTE1(v354) = (_BYTE)v331;
  v106 = sub_1D5728((uint64_t)&v348, v102);
  v107 = 0.0;
  v342 = (double *)objc_msgSend(v344, "fontWithDescriptor:size:", v106, 0.0);

  sub_DCC8(v328, *((uint64_t *)&v94 + 1), v95, v329, v337, v327, v103, v338, v97, v98, v99, v104, v105);
  v108 = (_QWORD *)swift_allocObject(v341, 40, 7);
  v109 = v332;
  if (v332)
  {
    v110 = (objc_class *)type metadata accessor for LanguageAwareString(0);
    v111 = static LanguageAwareString.alwaysGenerateAttributedString.getter();
    v112 = objc_allocWithZone(v110);
    v113 = LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(v326, v109, 0, v111 & 1);
  }
  else
  {
    v113 = 0;
  }
  v114 = (v334 >> 8) & 1;
  v108[2] = v342;
  v108[3] = v113;
  v108[4] = 1;
  v115 = sub_23411C((uint64_t)v347, v346, v114);
  v116 = a4 - v115;
  if ((_BYTE)v336)
  {
    if (v336 != 1)
      goto LABEL_22;
    v116 = v116 + -12.0;
    *(double *)&v117 = 60.0;
  }
  else
  {
    v116 = v116 + -12.0;
    *(double *)&v117 = 102.0;
  }
  v107 = *(double *)&v117;
LABEL_22:
  if (v116 - v107 - v115 <= 0.0)
    v118 = 0.0;
  else
    v118 = 10.0;
  swift_beginAccess(&off_3D3FF8, &v358, 0, 0);
  v119 = off_3D3FF8;
  if (off_3D3FF8)
  {
    v343 = v108;
    __swift_instantiateConcreteTypeFromMangledName(&qword_3DA6A0);
    v120 = *(_QWORD *)&stru_68.sectname[(_QWORD)v119];
    v121 = *(_QWORD *)&stru_68.segname[(_QWORD)v119 - 8];
    ObjectType = swift_getObjectType();
    v123 = swift_unknownObjectRetain(v120);
    v124 = dispatch thunk of LibraryDataProviderProtocol.episodePlayStateController.getter(ObjectType, v121, v123);
    v125 = swift_unknownObjectRelease(v120);
    static EpisodeStateMachine<>.playState(episodeLockup:playStateController:)(v347, v124, v125);
    swift_release(v124);
    if (qword_3CFE38 != -1)
      swift_once(&qword_3CFE38, sub_2C53B0);
    v332 = (id)*((_QWORD *)&xmmword_3E1210 + 1);
    v337 = xmmword_3E1210;
    LODWORD(v331) = byte_3E1220;
    LODWORD(v338) = (unsigned __int16)word_3E1280;
    v341 = (double *)qword_3E1278;
    v342 = (double *)qword_3E1270;
    v126 = qword_3E1268;
    v127 = xmmword_3E1228;
    v128 = xmmword_3E1238;
    v129 = qword_3E1248;
    v130 = *(_QWORD *)byte_3E1250;
    v131 = xmmword_3E1258;
    sub_1472C((id)xmmword_3E1228, *((uint64_t *)&xmmword_3E1228 + 1), xmmword_3E1238, *((uint64_t *)&xmmword_3E1238 + 1), qword_3E1248, byte_3E1250[0], (void *)xmmword_3E1258, *((uint64_t *)&xmmword_3E1258 + 1), qword_3E1268, qword_3E1270, qword_3E1278, word_3E1280);
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v132 = type metadata accessor for FloatingPointRoundingRule(0);
    v133 = __swift_project_value_buffer(v132, (uint64_t)qword_3FCFB0);
    *(_QWORD *)&v348 = v337;
    *((_QWORD *)&v348 + 1) = v332;
    v349[0] = (_BYTE)v331;
    *(_OWORD *)&v349[8] = v127;
    *((_QWORD *)&v330 + 1) = *((_QWORD *)&v128 + 1);
    v350 = v128;
    *(_QWORD *)&v330 = v129;
    v351 = v129;
    v329 = v130;
    v352 = v130;
    v327 = v131 >> 64;
    v328 = (void *)v131;
    v353 = v131;
    v354 = v126;
    v134 = v126;
    v135 = (uint64_t)v342;
    v136 = (uint64_t)v341;
    v355 = (uint64_t)v342;
    v356 = (uint64_t)v341;
    v137 = v338;
    v357 = v338;
    v138 = objc_msgSend(v346, "traitCollection");
    v337 = v133;
    sub_1DD06C((uint64_t)v138, v133, 0);
    v140 = v139;

    sub_14788((id)v127, *((uint64_t *)&v127 + 1), v128, *((uint64_t *)&v330 + 1), v330, v329, v328, v327, v134, v135, v136, v137);
    v141 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
    v142 = static UITraitCollection.interfaceIdiomIsMac.getter(v141);
    v144 = v345;
    v145 = 3;
    if ((_DWORD)v345 != 2)
      v145 = 4;
    if ((v142 & 1) != 0)
      v145 = 4;
    v338 = v145;
    v146 = dispatch thunk of LegacyEpisodeLockup.summaryAction.getter(v143);
    if (v146)
    {
      *(_QWORD *)&v147 = swift_release(v146).n128_u64[0];
      if ((v144 | 2) == 2)
      {
        objc_msgSend(v339[2], "lineHeight", v147);
        v149 = v148;
        v150 = (double *)_swiftEmptyArrayStorage;
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          v150 = (double *)sub_20F4A8(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
        v152 = *((_QWORD *)v150 + 2);
        v151 = *((_QWORD *)v150 + 3);
        if (v152 >= v151 >> 1)
          v150 = (double *)sub_20F4A8((_QWORD *)(v151 > 1), v152 + 1, 1, v150);
        v334 = v141;
        *((_QWORD *)v150 + 2) = v152 + 1;
        v342 = v150;
        v150[v152 + 4] = v149;
        if (qword_3CFE50 != -1)
          swift_once(&qword_3CFE50, sub_2C55F4);
        v153 = qword_3E13B0;
        v154 = byte_3E13B8[0];
        v157 = xmmword_3E13C0;
        v155 = v157 >> 64;
        v156 = (void *)v157;
        v158 = qword_3E13D0;
        v159 = qword_3E13D8;
        v160 = qword_3E13E0;
        v161 = word_3E13E8;
        v348 = xmmword_3E1378;
        v349[0] = byte_3E1388;
        v347 = (char *)qword_3E1390;
        *(_QWORD *)&v349[8] = qword_3E1390;
        v341 = (double *)qword_3E1398;
        *(_QWORD *)&v349[16] = qword_3E1398;
        v332 = (id)xmmword_3E13A0;
        v350 = xmmword_3E13A0;
        v331 = (id)*((_QWORD *)&xmmword_3E13A0 + 1);
        v351 = qword_3E13B0;
        v352 = *(_QWORD *)byte_3E13B8;
        v353 = xmmword_3E13C0;
        v354 = qword_3E13D0;
        v355 = qword_3E13D8;
        v356 = qword_3E13E0;
        v357 = word_3E13E8;
        sub_1472C((id)qword_3E1390, qword_3E1398, xmmword_3E13A0, *((uint64_t *)&xmmword_3E13A0 + 1), qword_3E13B0, byte_3E13B8[0], (void *)xmmword_3E13C0, *((uint64_t *)&xmmword_3E13C0 + 1), qword_3E13D0, qword_3E13D8, qword_3E13E0, word_3E13E8);
        v162 = objc_msgSend(v346, "traitCollection");
        sub_1DD06C((uint64_t)v162, v337, 0);
        v164 = v163;

        sub_14788(v347, (uint64_t)v341, (uint64_t)v332, (uint64_t)v331, v153, v154, v156, v155, v158, v159, v160, v161);
        EnumCaseMultiPayload = (uint64_t)sub_20F4A8(0, 1, 1, _swiftEmptyArrayStorage);
        v166 = (double *)EnumCaseMultiPayload;
        v168 = *(_QWORD *)(EnumCaseMultiPayload + 16);
        v167 = *(_QWORD *)(EnumCaseMultiPayload + 24);
        if (v168 >= v167 >> 1)
        {
          EnumCaseMultiPayload = (uint64_t)sub_20F4A8((_QWORD *)(v167 > 1), v168 + 1, 1, (_QWORD *)EnumCaseMultiPayload);
          v166 = (double *)EnumCaseMultiPayload;
        }
        v169 = v340;
        v170 = v335;
        v144 = v345;
        v171 = v343;
        v141 = v334;
        *((_QWORD *)v166 + 2) = v168 + 1;
        v166[v168 + 4] = v164;
        v347 = (_BYTE *)(&dword_0 + 1);
        v172 = v342;
        goto LABEL_65;
      }
    }
    EnumCaseMultiPayload = static UITraitCollection.interfaceIdiomIsMac.getter(v146);
    v169 = v340;
    v170 = v335;
    v171 = v343;
    if ((EnumCaseMultiPayload & 1) != 0)
    {
      if (v144 == 1)
      {
        v173 = static UITraitCollection.interfaceIdiomIsMac.getter(EnumCaseMultiPayload);
        v347 = 0;
        v166 = (double *)_swiftEmptyArrayStorage;
        v172 = _swiftEmptyArrayStorage;
LABEL_67:
        v198 = (void *)*((_QWORD *)v171 + 3);
        if (v198)
        {
          v199 = v141;
          v200 = v166;
          v201 = v198;
          v202 = LanguageAwareString.string.getter();
          v204 = v203;
          v205 = *((_QWORD *)v171 + 4);
          v206 = v171;
          v207 = *((id *)v171 + 2);
          v208 = v172;
          v209 = v207;
          sub_2CE364(v202, v204, v205, v207, v118, 1.79769313e308);
          v211 = v210;
          swift_bridgeObjectRelease(v204);

          v172 = v208;
          if ((swift_isUniquelyReferenced_nonNull_native(v208) & 1) == 0)
            v172 = sub_20F4A8(0, v208[2] + 1, 1, v208);
          v213 = v172[2];
          v212 = v172[3];
          v166 = v200;
          v171 = v206;
          if (v213 >= v212 >> 1)
            v172 = sub_20F4A8((_QWORD *)(v212 > 1), v213 + 1, 1, v172);
          v141 = v199;
          v172[2] = v213 + 1;
          v172[v213 + 4] = v211;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v166);
          v169 = v340;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v166 = (double *)sub_20F4A8(0, *((_QWORD *)v166 + 2) + 1, 1, v166);
          v170 = v335;
          v216 = *((_QWORD *)v166 + 2);
          v215 = *((_QWORD *)v166 + 3);
          if (v216 >= v215 >> 1)
            v166 = (double *)sub_20F4A8((_QWORD *)(v215 > 1), v216 + 1, 1, v166);
          *((_QWORD *)v166 + 2) = v216 + 1;
          v166[v216 + 4] = v140;

        }
LABEL_77:
        v217 = (void *)v170[3];
        if (!v217)
          goto LABEL_94;
        v218 = v169;
        v341 = v166;
        v219 = v347;
        v220 = v338 - (_QWORD)v347;
        v332 = v217;
        v221 = LanguageAwareString.string.getter();
        v223 = v222;
        if (v170[4] < v220)
          v220 = v170[4];
        v224 = (id)v170[2];
        sub_2CE364(v221, v223, v220, v224, v118, 1.79769313e308);
        v226 = v225;
        v140 = v227;

        swift_bridgeObjectRelease(v223);
        v347 = &v219[v226];
        if (__OFADD__(v219, v226))
        {
          __break(1u);
        }
        else
        {
          v228 = swift_isUniquelyReferenced_nonNull_native(v172);
          if ((v228 & 1) != 0)
          {
LABEL_82:
            v166 = v341;
            v169 = v218;
            v230 = v172[2];
            v229 = v172[3];
            v171 = v343;
            if (v230 >= v229 >> 1)
            {
              v228 = (uint64_t)sub_20F4A8((_QWORD *)(v229 > 1), v230 + 1, 1, v172);
              v172 = (_QWORD *)v228;
            }
            v144 = v345;
            v172[2] = v230 + 1;
            *(double *)&v172[v230 + 4] = v140;
            v231 = static UITraitCollection.interfaceIdiomIsMac.getter(v228);
            if (v144 != 2 || (v231 & 1) != 0)
            {
              v334 = v141;
              v342 = (double *)v172;
              if (qword_3CFE40 != -1)
                swift_once(&qword_3CFE40, sub_2C5474);
              v234 = xmmword_3E12B0;
              v233 = v234 >> 64;
              v232 = v234;
              v235 = qword_3E12C0;
              v236 = byte_3E12C8[0];
              v237 = qword_3E12E0;
              v238 = qword_3E12E8;
              v239 = qword_3E12F0;
              v240 = word_3E12F8;
              v348 = xmmword_3E1288;
              v349[0] = byte_3E1298;
              v331 = (id)qword_3E12A0;
              *(_QWORD *)&v349[8] = qword_3E12A0;
              *((_QWORD *)&v330 + 1) = qword_3E12A8;
              *(_QWORD *)&v349[16] = qword_3E12A8;
              v350 = xmmword_3E12B0;
              v351 = qword_3E12C0;
              v352 = *(_QWORD *)byte_3E12C8;
              *(_QWORD *)&v330 = xmmword_3E12D0;
              v353 = xmmword_3E12D0;
              v329 = *((_QWORD *)&xmmword_3E12D0 + 1);
              v354 = qword_3E12E0;
              v355 = qword_3E12E8;
              v356 = qword_3E12F0;
              v357 = word_3E12F8;
              sub_1472C((id)qword_3E12A0, qword_3E12A8, xmmword_3E12B0, *((uint64_t *)&xmmword_3E12B0 + 1), qword_3E12C0, byte_3E12C8[0], (void *)xmmword_3E12D0, *((uint64_t *)&xmmword_3E12D0 + 1), qword_3E12E0, qword_3E12E8, qword_3E12F0, word_3E12F8);
              v241 = objc_msgSend(v346, "traitCollection");
              sub_1DD06C((uint64_t)v241, v337, 0);
              v140 = v242;

              sub_14788(v331, *((uint64_t *)&v330 + 1), v232, v233, v235, v236, (void *)v330, v329, v237, v238, v239, v240);
              v166 = v341;
              if ((swift_isUniquelyReferenced_nonNull_native(v341) & 1) == 0)
                v166 = (double *)sub_20F4A8(0, *((_QWORD *)v166 + 2) + 1, 1, v166);
              v244 = *((_QWORD *)v166 + 2);
              v243 = *((_QWORD *)v166 + 3);
              v169 = v340;
              v170 = v335;
              v144 = v345;
              v171 = v343;
              v172 = v342;
              if (v244 >= v243 >> 1)
                v166 = (double *)sub_20F4A8((_QWORD *)(v243 > 1), v244 + 1, 1, v166);
              *((_QWORD *)v166 + 2) = v244 + 1;
              v166[v244 + 4] = v140;
            }

LABEL_94:
            v245 = static UITraitCollection.interfaceIdiomIsMac.getter(v173);
            if (v144 == 2 && (v245 & 1) == 0)
            {
              v246 = v171;
LABEL_118:
              v269 = v333;
              goto LABEL_119;
            }
            v247 = v339[3];
            if (!v247)
            {
LABEL_114:
              v246 = v171;
              if (v144 != 1)
                goto LABEL_118;
              v269 = v333;
              v270 = (void *)v333[3];
              if (!v270)
                goto LABEL_119;
              v271 = v270;
              if ((dispatch thunk of LanguageAwareString.isEmpty.getter() & 1) != 0)
              {

                goto LABEL_119;
              }
              v341 = v166;
              v342 = (double *)v172;
              v288 = v338 - (_QWORD)v347;
              if (__OFSUB__(v338, v347))
              {
                __break(1u);
              }
              else
              {
                v289 = v344;
                if (v288 <= 0)
                {

                  v172 = v342;
                  v166 = v341;
                  goto LABEL_119;
                }
                sub_E710(0, (unint64_t *)&unk_3E1870, NSAttributedString_ptr);
                v290 = LanguageAwareString.string.getter();
                v292 = v291;
                v293 = objc_msgSend(v289, "systemFontOfSize:", 15.0);
                v294 = v322;
                NqmlConfiguration.init(font:)(v293);
                v295 = (void *)NSAttributedString.init(nqml:configuration:)(v290, v292, v294);
                v296 = objc_msgSend(v295, "string");

                v297 = static String._unconditionallyBridgeFromObjectiveC(_:)(v296);
                v299 = v298;

                if (v269[4] >= v288)
                  v300 = v288;
                else
                  v300 = v269[4];
                v301 = (id)v269[2];
                sub_2CE364(v297, v299, v300, v301, v118, 1.79769313e308);
                v118 = v302;

                swift_bridgeObjectRelease(v299);
                v166 = v342;
                if ((swift_isUniquelyReferenced_nonNull_native(v342) & 1) != 0)
                {
LABEL_144:
                  v304 = *((_QWORD *)v166 + 2);
                  v303 = *((_QWORD *)v166 + 3);
                  if (v304 >= v303 >> 1)
                    v166 = (double *)sub_20F4A8((_QWORD *)(v303 > 1), v304 + 1, 1, v166);
                  *((_QWORD *)v166 + 2) = v304 + 1;
                  v342 = v166;
                  v166[v304 + 4] = v118;

                  if (qword_3CFE48 != -1)
                    swift_once(&qword_3CFE48, sub_2C5530);
                  v305 = qword_3E1338;
                  v306 = byte_3E1340[0];
                  v309 = xmmword_3E1348;
                  v308 = v309 >> 64;
                  v307 = (void *)v309;
                  v310 = qword_3E1358;
                  v311 = qword_3E1360;
                  v312 = qword_3E1368;
                  v313 = word_3E1370;
                  v348 = xmmword_3E1300;
                  v349[0] = byte_3E1310;
                  v347 = (char *)qword_3E1318;
                  *(_QWORD *)&v349[8] = qword_3E1318;
                  v345 = qword_3E1320;
                  *(_QWORD *)&v349[16] = qword_3E1320;
                  v344 = (id)xmmword_3E1328;
                  v350 = xmmword_3E1328;
                  v338 = *((_QWORD *)&xmmword_3E1328 + 1);
                  v351 = qword_3E1338;
                  v352 = *(_QWORD *)byte_3E1340;
                  v353 = xmmword_3E1348;
                  v354 = qword_3E1358;
                  v355 = qword_3E1360;
                  v356 = qword_3E1368;
                  v357 = word_3E1370;
                  sub_1472C((id)qword_3E1318, qword_3E1320, xmmword_3E1328, *((uint64_t *)&xmmword_3E1328 + 1), qword_3E1338, byte_3E1340[0], (void *)xmmword_3E1348, *((uint64_t *)&xmmword_3E1348 + 1), qword_3E1358, qword_3E1360, qword_3E1368, word_3E1370);
                  v314 = objc_msgSend(v346, "traitCollection");
                  sub_1DD06C((uint64_t)v314, v337, 0);
                  v316 = v315;

                  sub_14788(v347, v345, (uint64_t)v344, v338, v305, v306, v307, v308, v310, v311, v312, v313);
                  v166 = v341;
                  if ((swift_isUniquelyReferenced_nonNull_native(v341) & 1) == 0)
                    v166 = (double *)sub_20F4A8(0, *((_QWORD *)v166 + 2) + 1, 1, v166);
                  v169 = v340;
                  v170 = v335;
                  v269 = v333;
                  v246 = v343;
                  v318 = *((_QWORD *)v166 + 2);
                  v317 = *((_QWORD *)v166 + 3);
                  v172 = v342;
                  if (v318 >= v317 >> 1)
                    v166 = (double *)sub_20F4A8((_QWORD *)(v317 > 1), v318 + 1, 1, v166);
                  *((_QWORD *)v166 + 2) = v318 + 1;
                  v166[v318 + 4] = v316;
LABEL_119:
                  v272 = v172[2];
                  if (!v272)
                    goto LABEL_128;
                  if (v272 == 1)
                  {
                    v273 = 0;
                    v274 = 0.0;
                  }
                  else
                  {
                    v273 = v272 & 0x7FFFFFFFFFFFFFFELL;
                    v275 = (double *)(v172 + 5);
                    v274 = 0.0;
                    v276 = v272 & 0x7FFFFFFFFFFFFFFELL;
                    do
                    {
                      v274 = v274 + *(v275 - 1) + *v275;
                      v275 += 2;
                      v276 -= 2;
                    }
                    while (v276);
                    if (v272 == v273)
                    {
LABEL_128:
                      v280 = *((_QWORD *)v166 + 2);
                      if (v280)
                      {
                        if (v280 == 1)
                        {
                          v281 = 0;
                          v282 = 0.0;
                        }
                        else
                        {
                          v281 = v280 & 0x7FFFFFFFFFFFFFFELL;
                          v283 = v166 + 5;
                          v282 = 0.0;
                          v284 = v280 & 0x7FFFFFFFFFFFFFFELL;
                          do
                          {
                            v282 = v282 + *(v283 - 1) + *v283;
                            v283 += 2;
                            v284 -= 2;
                          }
                          while (v284);
                          if (v280 == v281)
                            goto LABEL_137;
                        }
                        v285 = v280 - v281;
                        v286 = &v166[v281 + 4];
                        do
                        {
                          v287 = *v286++;
                          v282 = v282 + v287;
                          --v285;
                        }
                        while (v285);
                      }
LABEL_137:
                      swift_bridgeObjectRelease(v172);
                      swift_bridgeObjectRelease(v166);
                      swift_release(v339);
                      swift_release(v246);
                      swift_release(v170);
                      swift_release(v269);
                      sub_AEEF0(v169);
                      return;
                    }
                  }
                  v277 = v272 - v273;
                  v278 = (double *)&v172[v273 + 4];
                  do
                  {
                    v279 = *v278++;
                    v274 = v274 + v279;
                    --v277;
                  }
                  while (v277);
                  goto LABEL_128;
                }
              }
              v166 = (double *)sub_20F4A8(0, *((_QWORD *)v166 + 2) + 1, 1, v166);
              goto LABEL_144;
            }
            v248 = v247;
            if ((dispatch thunk of LanguageAwareString.isEmpty.getter() & 1) == 0)
            {
              v342 = (double *)v172;
              v172 = (_QWORD *)(v338 - (_QWORD)v347);
              if (__OFSUB__(v338, v347))
              {
                __break(1u);
                goto LABEL_157;
              }
              if ((uint64_t)v172 > 0)
              {
                v341 = v166;
                if (v144 == 1)
                {
                  sub_E710(0, (unint64_t *)&unk_3E1870, NSAttributedString_ptr);
                  v249 = LanguageAwareString.string.getter();
                  v251 = v250;
                  v252 = objc_msgSend(v344, "systemFontOfSize:", 15.0);
                  v253 = v171;
                  v254 = v322;
                  NqmlConfiguration.init(font:)(v252);
                  v255 = v254;
                  v171 = v253;
                  v256 = (void *)NSAttributedString.init(nqml:configuration:)(v249, v251, v255);
                  v257 = objc_msgSend(v256, "string");

                  v258 = static String._unconditionallyBridgeFromObjectiveC(_:)(v257);
                  v260 = v259;

                }
                else
                {
                  v258 = LanguageAwareString.string.getter();
                  v260 = v261;
                }
                if ((uint64_t)v339[4] >= (uint64_t)v172)
                  v166 = (double *)v172;
                else
                  v166 = (double *)v339[4];
                v172 = v339[2];
                sub_2CE364(v258, v260, (uint64_t)v166, v172, v118, 1.79769313e308);
                v263 = v262;
                v140 = v264;

                swift_bridgeObjectRelease(v260);
                v265 = __OFADD__(v347, v263);
                v347 += v263;
                if (!v265)
                {
                  v172 = v342;
                  v266 = swift_isUniquelyReferenced_nonNull_native(v342);
                  v166 = v341;
                  if ((v266 & 1) != 0)
                  {
LABEL_110:
                    v268 = v172[2];
                    v267 = v172[3];
                    if (v268 >= v267 >> 1)
                      v172 = sub_20F4A8((_QWORD *)(v267 > 1), v268 + 1, 1, v172);
                    v172[2] = v268 + 1;
                    *(double *)&v172[v268 + 4] = v140;
                    goto LABEL_113;
                  }
LABEL_158:
                  v172 = sub_20F4A8(0, v172[2] + 1, 1, v172);
                  goto LABEL_110;
                }
LABEL_157:
                __break(1u);
                goto LABEL_158;
              }
              v172 = v342;
            }
LABEL_113:

            goto LABEL_114;
          }
        }
        v228 = (uint64_t)sub_20F4A8(0, v172[2] + 1, 1, v172);
        v172 = (_QWORD *)v228;
        goto LABEL_82;
      }
      if ((v334 & 0x101) == 1)
        goto LABEL_52;
    }
    else if (v144)
    {
      goto LABEL_52;
    }
    v174 = v324;
    sub_F8BC(v340, v324);
    v175 = v174;
    v176 = v323;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v175, v323);
    if ((_DWORD)EnumCaseMultiPayload != 5)
    {
      v177 = (uint64_t)v321;
      swift_storeEnumTagMultiPayload(v321, v176, 4);
      v178 = static EpisodePlayState.== infix(_:_:)(v169, v177);
      sub_AEEF0(v177);
      if ((v178 & 1) != 0)
      {
        v347 = 0;
        v172 = _swiftEmptyArrayStorage;
        v166 = (double *)_swiftEmptyArrayStorage;
      }
      else
      {
        sub_2342AC(v169, 1);
        v180 = v179;
        v181 = (double *)_swiftEmptyArrayStorage;
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          v181 = (double *)sub_20F4A8(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
        v183 = *((_QWORD *)v181 + 2);
        v182 = *((_QWORD *)v181 + 3);
        if (v183 >= v182 >> 1)
          v181 = (double *)sub_20F4A8((_QWORD *)(v182 > 1), v183 + 1, 1, v181);
        v334 = v141;
        *((_QWORD *)v181 + 2) = v183 + 1;
        v342 = v181;
        v181[v183 + 4] = v180;
        if (qword_3CFE50 != -1)
          swift_once(&qword_3CFE50, sub_2C55F4);
        v184 = qword_3E13B0;
        v185 = byte_3E13B8[0];
        v188 = xmmword_3E13C0;
        v187 = v188 >> 64;
        v186 = (void *)v188;
        v189 = qword_3E13D0;
        v190 = qword_3E13D8;
        v191 = qword_3E13E0;
        v192 = word_3E13E8;
        v348 = xmmword_3E1378;
        v349[0] = byte_3E1388;
        v347 = (char *)qword_3E1390;
        *(_QWORD *)&v349[8] = qword_3E1390;
        v341 = (double *)qword_3E1398;
        *(_QWORD *)&v349[16] = qword_3E1398;
        v332 = (id)xmmword_3E13A0;
        v350 = xmmword_3E13A0;
        v331 = (id)*((_QWORD *)&xmmword_3E13A0 + 1);
        v351 = qword_3E13B0;
        v352 = *(_QWORD *)byte_3E13B8;
        v353 = xmmword_3E13C0;
        v354 = qword_3E13D0;
        v355 = qword_3E13D8;
        v356 = qword_3E13E0;
        v357 = word_3E13E8;
        sub_1472C((id)qword_3E1390, qword_3E1398, xmmword_3E13A0, *((uint64_t *)&xmmword_3E13A0 + 1), qword_3E13B0, byte_3E13B8[0], (void *)xmmword_3E13C0, *((uint64_t *)&xmmword_3E13C0 + 1), qword_3E13D0, qword_3E13D8, qword_3E13E0, word_3E13E8);
        v193 = objc_msgSend(v346, "traitCollection");
        sub_1DD06C((uint64_t)v193, v337, 0);
        v195 = v194;

        sub_14788(v347, (uint64_t)v341, (uint64_t)v332, (uint64_t)v331, v184, v185, v186, v187, v189, v190, v191, v192);
        v166 = (double *)sub_20F4A8(0, 1, 1, _swiftEmptyArrayStorage);
        v197 = *((_QWORD *)v166 + 2);
        v196 = *((_QWORD *)v166 + 3);
        if (v197 >= v196 >> 1)
          v166 = (double *)sub_20F4A8((_QWORD *)(v196 > 1), v197 + 1, 1, v166);
        v169 = v340;
        v170 = v335;
        v144 = v345;
        v171 = v343;
        v141 = v334;
        *((_QWORD *)v166 + 2) = v197 + 1;
        v166[v197 + 4] = v195;
        v347 = (_BYTE *)(&dword_0 + 1);
        v172 = v342;
      }
      EnumCaseMultiPayload = sub_AEEF0(v324);
LABEL_65:
      v173 = static UITraitCollection.interfaceIdiomIsMac.getter(EnumCaseMultiPayload);
      if (v144 == 2 && (v173 & 1) == 0)
        goto LABEL_77;
      goto LABEL_67;
    }
LABEL_52:
    v347 = 0;
    v172 = _swiftEmptyArrayStorage;
    v166 = (double *)_swiftEmptyArrayStorage;
    goto LABEL_65;
  }
  __break(1u);
}

double sub_233A20(uint64_t a1, char a2, void *a3)
{
  double v3;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  void *v33;
  id v34;
  _OWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;

  v3 = 0.0;
  if ((a2 & 1) == 0)
  {
    if (qword_3CF5E0 != -1)
      swift_once(&qword_3CF5E0, sub_141154);
    v6 = xmmword_3FC270;
    v7 = xmmword_3FC280;
    v8 = qword_3FC290;
    v9 = *(_QWORD *)byte_3FC298;
    v10 = xmmword_3FC2A0;
    v11 = qword_3FC2B0;
    v25 = qword_3FC2B8;
    v26 = qword_3FC2C0;
    v27 = word_3FC2C8;
    v28 = HIBYTE(word_3FC2C8);
    v32 = qword_3FC290;
    v33 = (void *)xmmword_3FC270;
    v30 = (void *)xmmword_3FC2A0;
    v31 = byte_3FC298[0];
    v29 = *((_QWORD *)&xmmword_3FC2A0 + 1);
    sub_DDA0((void *)xmmword_3FC270, *((uint64_t *)&xmmword_3FC270 + 1), xmmword_3FC280, *((uint64_t *)&xmmword_3FC280 + 1), qword_3FC290, byte_3FC298[0], (void *)xmmword_3FC2A0, *((uint64_t *)&xmmword_3FC2A0 + 1), qword_3FC2B0, qword_3FC2B8, qword_3FC2C0, word_3FC2C8, SHIBYTE(word_3FC2C8));
    v12 = objc_msgSend(a3, "traitCollection");
    v35[0] = v6;
    v35[1] = v7;
    v36 = v8;
    v37 = v9;
    v38 = v10;
    v13 = v11;
    v39 = v11;
    v40 = v25;
    v41 = v26;
    v42 = v27;
    v43 = v28;
    v14 = sub_1D5728((uint64_t)v35, v12);
    v34 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v14, 0.0);

    sub_DCC8(v33, *((uint64_t *)&v6 + 1), v7, *((uint64_t *)&v7 + 1), v32, v31, v30, v29, v13, v25, v26, v27, v28);
    v16 = static Localization.duration(_:)(v15, *(double *)&a1);
    if (v17)
    {
      v18 = v17;
      *(_QWORD *)&v35[0] = v16;
      *((_QWORD *)&v35[0] + 1) = v17;
      v19 = sub_D254();
      v20 = StringProtocol.localizedUppercase.getter(&type metadata for String, v19);
      v22 = v21;
      swift_bridgeObjectRelease(v18);
    }
    else
    {
      v20 = 0;
      v22 = 0xE000000000000000;
    }
    sub_2CE364(v20, v22, 1, v34, 1.79769313e308, 1.79769313e308);
    v3 = v23;
    swift_bridgeObjectRelease(v22);

  }
  return v3;
}

double sub_233C4C(uint64_t a1)
{
  unsigned __int8 v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  id v6;
  char v7;
  double result;

  v1 = ModernShelf.ItemPresentation.itemKind.getter(a1);
  if (v1 > 8u)
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
  }
  else
  {
    v2 = 4 * (char)v1;
    v3 = *(_DWORD *)((char *)&unk_301980 + v2);
    v4 = *(_DWORD *)((char *)&unk_3019A4 + v2);
    v5 = *(_DWORD *)((char *)&unk_3019C8 + v2);
  }
  v6 = objc_msgSend(objc_allocWithZone((Class)UITraitCollection), "init");
  v7 = sub_2C4D34(v6, v4 | v3 | v5);

  if (!v7)
    return 114.0;
  result = 0.0;
  if (v7 != 1)
    return result;
  return 72.0;
}

void sub_233D10(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  unsigned __int8 v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  id v9;
  int v10;
  int v11;
  char *v12;
  void *v13;
  void *v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  unsigned int v20;
  id v21;
  char v22;
  double v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView])
  {
    v3 = v1;
    v4 = ModernShelf.ItemPresentation.itemKind.getter(a1);
    if (v4 > 8u)
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
    }
    else
    {
      v5 = 4 * (char)v4;
      v6 = *(_DWORD *)((char *)&unk_301980 + v5);
      v7 = *(_DWORD *)((char *)&unk_3019A4 + v5);
      v8 = *(_DWORD *)((char *)&unk_3019C8 + v5);
    }
    v9 = objc_allocWithZone((Class)type metadata accessor for EpisodeView(0));
    v10 = v7 | v6;
    v11 = v7 | v6 | v8;
    v12 = sub_2C5CF8(v10 | v8);
    v13 = *(void **)&v3[v2];
    if (v13)
    {
      objc_msgSend(v13, "removeFromSuperview");
      v14 = *(void **)&v3[v2];
    }
    else
    {
      v14 = 0;
    }
    *(_QWORD *)&v3[v2] = v12;
    v15 = v12;

    v16 = *(void **)&v3[v2];
    if (v16)
    {
      v17 = v16;
      objc_msgSend(v17, "setAutoresizingMask:", 18);
      v18 = objc_msgSend(v3, "contentView");
      objc_msgSend(v18, "addSubview:", v17);

      objc_msgSend(v3, "setNeedsUpdateConstraints");
      v15 = (char *)v17;
    }

    v20 = ModernShelf.ItemPresentation.itemKind.getter(v19);
    if (v20 > 8 || ((1 << v20) & 0x128) == 0)
    {
      v3[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_axis] = 1;
      v25 = objc_msgSend(v3, "contentView");
      objc_msgSend(v25, "setEdgesPreservingSuperviewLayoutMargins:", 0);

      v26 = objc_msgSend(v3, "contentView");
      objc_msgSend(v26, "directionalLayoutMargins");
      objc_msgSend(v26, "setDirectionalLayoutMargins:");

      v36 = objc_msgSend(v3, "contentView");
      objc_msgSend(v36, "directionalLayoutMargins");
      objc_msgSend(v36, "setDirectionalLayoutMargins:");
LABEL_19:

      return;
    }
    v3[OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_axis] = 0;
    v21 = objc_msgSend(v3, "traitCollection");
    v22 = sub_2C4D34(v21, v11);

    if (v22)
    {
      v23 = 0.0;
      if (v22 != 1)
      {
LABEL_18:
        v27 = objc_msgSend(v3, "separatorLayoutGuide");
        v28 = objc_msgSend(v27, "leadingAnchor");

        v29 = objc_msgSend(v3, "layoutMarginsGuide");
        v30 = objc_msgSend(v29, "leadingAnchor");

        v31 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v30, v23);
        objc_msgSend(v31, "setActive:", 1);

        v32 = objc_msgSend(v3, "layoutMarginsGuide");
        v33 = objc_msgSend(v32, "trailingAnchor");

        v34 = objc_msgSend(v3, "separatorLayoutGuide");
        v35 = objc_msgSend(v34, "trailingAnchor");

        v36 = objc_msgSend(v33, "constraintEqualToAnchor:", v35);
        objc_msgSend(v36, "setActive:", 1);
        goto LABEL_19;
      }
      v24 = 0x4052000000000000;
    }
    else
    {
      v24 = 0x405C800000000000;
    }
    v23 = *(double *)&v24;
    goto LABEL_18;
  }
}

double sub_23411C(uint64_t a1, void *a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  char v13;
  double v14;
  double v15;
  double v16;
  double v17;

  v5 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v6 = static UITraitCollection.interfaceIdiomIsMac.getter(v5);
  v7 = 0.0;
  if ((v6 & 1) == 0 || (a3 & 1) == 0)
  {
    v8 = static UITraitCollection.interfaceIdiomIsMac.getter(v6);
    if ((v8 & 1) != 0)
    {
      v9 = static UITraitCollection.interfaceIdiomIsMac.getter(v8);
      v10 = 0.0;
      v11 = 0.0;
      if ((v9 & 1) != 0 && (a3 & 1) == 0)
      {
        v12 = LegacyEpisodeLockup.duration.getter(v9);
        v14 = sub_233A20(v12, v13 & 1, a2);
        v15 = sub_2CDB8C(a2);
        if (v14 <= v15)
          v14 = v15;
        if (qword_3CFE20 != -1)
          v9 = swift_once(&qword_3CFE20, sub_2C4E28);
        v10 = *(double *)&qword_3E11F8;
        v11 = v14 + *(double *)&qword_3E11F8 + 0.0;
      }
      if ((static UITraitCollection.interfaceIdiomIsMac.getter(v9) & 1) != 0)
      {
        if (qword_3CFE30 != -1)
          swift_once(&qword_3CFE30, sub_2C4E48);
        objc_msgSend((id)qword_3E1208, "size");
        v17 = v16;
        if (qword_3CFE28 != -1)
          swift_once(&qword_3CFE28, sub_2C4E38);
        if (v11 < v17 + *(double *)&qword_3E1200)
        {
          v10 = *(double *)&qword_3E1200;
          v11 = v17 + *(double *)&qword_3E1200;
        }
      }
      return v11 - v10;
    }
  }
  return v7;
}

void sub_2342AC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  __int128 v26;
  id v27;
  id v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  int v37;
  int v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _QWORD v43[8];
  __int128 v44;
  uint64_t v45;
  char v46;
  char v47;

  v4 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F8BC(a1, (uint64_t)v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
  if (EnumCaseMultiPayload != 5)
  {
    if (EnumCaseMultiPayload == 4)
    {
      if ((a2 & 1) == 0)
        return;
    }
    else
    {
      sub_AEEF0((uint64_t)v6);
    }
    if (qword_3CF5E8 != -1)
      swift_once(&qword_3CF5E8, sub_1411F8);
    v8 = xmmword_3FC2D0;
    v9 = *((_QWORD *)&xmmword_3FC2E0 + 1);
    v41 = xmmword_3FC2E0;
    v42 = (void *)xmmword_3FC2D0;
    v32 = xmmword_3FC2F0;
    v10 = *((_QWORD *)&xmmword_3FC300 + 1);
    v39 = (void *)xmmword_3FC300;
    v40 = *((_QWORD *)&xmmword_3FC2F0 + 1);
    v11 = xmmword_3FC310;
    v35 = xmmword_3FC310;
    v12 = qword_3FC320;
    v36 = qword_3FC320;
    v13 = word_3FC328;
    v14 = HIBYTE(word_3FC328);
    v37 = word_3FC328;
    v38 = HIBYTE(word_3FC328);
    v15 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
    v31 = v14;
    v30 = v13;
    v29 = v12;
    v33 = *((_QWORD *)&v8 + 1);
    v17 = v40;
    v16 = v41;
    v18 = v9;
    v19 = v9;
    v20 = v32;
    v21 = v39;
    v34 = v10;
    sub_DDA0((void *)v8, *((uint64_t *)&v8 + 1), v41, v18, v32, v40, v39, v10, v11, *((uint64_t *)&v11 + 1), v29, v30, v31);
    v22 = objc_msgSend(v15, "system");
    v23 = objc_msgSend(v22, "preferredContentSizeCategory");

    v24 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v23);
    v43[0] = v42;
    v43[1] = *((_QWORD *)&v8 + 1);
    v43[2] = v16;
    v43[3] = v19;
    v43[4] = v20;
    v43[5] = v17;
    v43[6] = v21;
    v43[7] = v10;
    v26 = v35;
    v25 = v36;
    v44 = v35;
    v45 = v36;
    LOBYTE(v15) = v37;
    LOBYTE(v10) = v38;
    v46 = v37;
    v47 = v38;
    v27 = sub_1D5728((uint64_t)v43, v24);
    v28 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v27, 0.0);

    sub_DCC8(v42, v33, v41, v19, v20, v40, v39, v34, v26, *((uint64_t *)&v26 + 1), v25, (char)v15, v10);
    objc_msgSend(v28, "lineHeight");

  }
}

char *sub_23458C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char *v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  NSString v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  Swift::String v33;

  if (qword_3CF610 != -1)
    swift_once(&qword_3CF610, sub_141C34);
  v20 = *((_QWORD *)&xmmword_3FC4B0 + 1);
  v21 = (void *)xmmword_3FC4B0;
  v1 = xmmword_3FC4C8;
  v19 = qword_3FC4C0;
  v2 = *((_QWORD *)&xmmword_3FC4C8 + 1);
  v3 = qword_3FC4D8;
  v4 = (void *)qword_3FC4E0;
  v5 = qword_3FC4E8;
  v6 = qword_3FC4F0;
  v7 = qword_3FC4F8;
  v8 = qword_3FC500;
  v9 = word_3FC508;
  v10 = HIBYTE(word_3FC508);
  v23 = xmmword_3FC4B0;
  v24 = qword_3FC4C0;
  v25 = xmmword_3FC4C8;
  v26 = qword_3FC4D8;
  v27 = qword_3FC4E0;
  v28 = qword_3FC4E8;
  v29 = qword_3FC4F0;
  v30 = qword_3FC4F8;
  v31 = qword_3FC500;
  v32 = word_3FC508;
  objc_allocWithZone((Class)type metadata accessor for FadeInDynamicTypeButton());
  sub_DDA0(v21, v20, v19, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  v11 = sub_49DE4(&v23, a1);
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v33._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0x4D5F4E4F49544341;
  v13._object = (void *)0xEB0000000045524FLL;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v33._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v33)._object;

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setTitle:forState:", v16, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v11, "setContentEdgeInsets:", COERCE_DOUBLE(1), 0.0, 0.0, 0.0);
  v17 = &v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_touchInsets];
  *(_OWORD *)v17 = xmmword_3019F0;
  *((_OWORD *)v17 + 1) = xmmword_301A00;
  v17[32] = 0;
  objc_msgSend(v11, "setAdjustsImageWhenHighlighted:", 0);
  return v11;
}

void *ModernPageViewController.__allocating_init(asPartOf:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t AssociatedTypeWitness;

  v4 = sub_240A80(a1, a2);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v2 + 88));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  return v4;
}

void *ModernPageViewController.__allocating_init<>(asPartOf:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  uint64_t v4;

  v3 = objc_allocWithZone(v1);
  return sub_23F6C8(a1, v4);
}

void sub_23483C()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  _BYTE v19[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators);
  swift_beginAccess(v1, v19, 33, 0);
  v2 = (_QWORD *)*v1;
  v3 = *(_QWORD *)(*v1 + 16);
  if (v3)
  {
    v4 = type metadata accessor for ModernUberScrollCoordinator();
    v5 = 0;
    v6 = 0;
    while (!swift_dynamicCastClass(v2[v5 + 4], v4))
    {
      ++v6;
      v5 += 2;
      if (v3 == v6)
      {
        v8 = v3;
        goto LABEL_24;
      }
    }
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_10;
    }
    while (v9 != v3)
    {
      if (v9 >= v3)
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v13 = v2[v5 + 6];
      if (!swift_dynamicCastClass(v13, v4))
      {
        if (v9 != v6)
        {
          if (v6 >= v3)
            goto LABEL_28;
          v14 = v2[v5 + 7];
          v18 = *(_OWORD *)&v2[2 * v6 + 4];
          swift_unknownObjectRetain(v2[2 * v6 + 4]);
          swift_unknownObjectRetain(v13);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
          *v1 = (uint64_t)v2;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v2 = sub_E1CF4(v2);
            *v1 = (uint64_t)v2;
          }
          v16 = &v2[2 * v6];
          v17 = v16[4];
          v16[4] = v13;
          v16[5] = v14;
          swift_unknownObjectRelease(v17);
          v7 = *v1;
          if (v9 >= *(_QWORD *)(*v1 + 16))
            goto LABEL_29;
LABEL_10:
          v10 = v7 + v5 * 8;
          v11 = *(_QWORD *)(v10 + 48);
          *(_OWORD *)(v10 + 48) = v18;
          swift_unknownObjectRelease(v11);
          v2 = (_QWORD *)*v1;
        }
        if (__OFADD__(v6++, 1))
          goto LABEL_26;
        v3 = v2[2];
      }
      ++v9;
      v5 += 2;
    }
    v8 = v3;
    v3 = v6;
    if (v8 >= v6)
      goto LABEL_24;
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
    v8 = 0;
LABEL_24:
    sub_E3D60(v3, v8);
    swift_endAccess(v19);
  }
}

void *sub_2349FC()
{
  return ModernPageViewController.showcaseView.getter();
}

void *ModernPageViewController.showcaseView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  Class isa;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  void *v13;
  char *v14;
  id v15;
  char v18[24];

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = v0 + qword_3DDD68;
  swift_beginAccess(v5, v18, 0, 0);
  if (!*(_QWORD *)v5)
    return 0;
  v6 = *(id *)(*(_QWORD *)v5 + 40);
  IndexPath.init(item:section:)(0, 0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v8 = objc_msgSend(v6, "cellForItemAtIndexPath:", isa);

  if (!v8)
    return 0;
  v9 = type metadata accessor for UberCollectionViewCell();
  v10 = (char *)swift_dynamicCastClass(v8, v9);
  if (v10)
  {
    v11 = v10;
    v12 = *(void **)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView];
    v13 = v12;
    if (!v12)
    {
      v14 = v10;
      v13 = v11;
    }
    v15 = v12;
  }
  else
  {
    v13 = 0;
  }

  return v13;
}

double ModernPageViewController.presenter.getter()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_unknownObjectRetain(*(_QWORD *)(v0 + qword_3DDD70)).n128_u64[0];
  return result;
}

uint64_t ModernPageViewController.pageHeaderHint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + qword_3FD5D8;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for FlowDestinationPageHeader(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ModernPageViewController.pageHeaderHint.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + qword_3FD5D8;
  swift_beginAccess(v3, v6, 33, 0);
  v4 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess(v6);
}

uint64_t (*ModernPageViewController.pageHeaderHint.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_3FD5D8, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_234C88(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint8_t *v26;
  id v27;
  uint64_t v28;
  id v29;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = qword_3DDDC8;
  v10 = *(_QWORD *)&v2[qword_3DDDC8];
  if (v10)
  {
    if (a1 && v10 == a1)
      return;
  }
  else if (!a1)
  {
    return;
  }
  if (objc_msgSend(v2, "isViewLoaded", v6))
  {
    v11 = *(void **)&v2[v9];
    if (v11)
    {
      v12 = type metadata accessor for AppEntityViewAnnotation(0);
      v13 = swift_dynamicCastClass(v11, v12);
      if (v13)
      {
        v14 = v13;
        v27 = v11;
        sub_234F0C(v14);

        return;
      }
      static Logger.appIntents.getter();
      v15 = v2;
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.error.getter(v16);
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(12, -1);
        v27 = (id)swift_slowAlloc(32, -1);
        v29 = v27;
        *(_DWORD *)v18 = 136315138;
        v26 = v18 + 4;
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F50);
        v20 = _typeName(_:qualified:)(v19, 0);
        v22 = v21;
        v28 = sub_37E78(v20, v21, (uint64_t *)&v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);

        swift_bridgeObjectRelease(v22);
        _os_log_impl(&dword_0, v16, v17, "entityAnnotation expected AppEntityViewAnnotation but found %s instead.", v18, 0xCu);
        v23 = v27;
        swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v23, -1, -1);
        swift_slowDealloc(v18, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v24 = objc_msgSend(v2, "view");
    if (v24)
    {
      v25 = v24;
      UIView.removeAnnotation()();

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_234F0C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id result;
  void *v9;
  void *v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for AppEntityVisualState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v2, "view");
  if (result)
  {
    v9 = result;
    UIView.annotate(with:)(a1);

    result = objc_msgSend(v2, "view");
    if (result)
    {
      v10 = result;
      static AppEntityVisualState.primary.getter();
      UIView.updateAppEntityAnnotation(with:)(v7);

      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_234FF8(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + qword_3DDDC8);
  *(_QWORD *)(v1 + qword_3DDDC8) = a1;
  v3 = a1;
  sub_234C88((uint64_t)v2);

}

uint64_t sub_235040(char a1)
{
  char v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for ViewControllerLifeCycleEvent);
}

uint64_t sub_23506C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_301CE8);
  v2 = swift_getKeyPath(&unk_301D20);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_235104(char a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_301CE8);
  v4 = swift_getKeyPath(&unk_301D20);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

double sub_23519C()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(v0 + qword_3DDE58, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

uint64_t sub_2351FC(char a1)
{
  _QWORD *v1;
  int v2;
  uint64_t result;

  v2 = a1 & 1;
  result = *((unsigned __int8 *)v1 + qword_3DDE68);
  if ((_DWORD)result != v2)
    return dispatch thunk of ModernPagePresenter.splitControllerCollapseDidChange(collapsed:)(result, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v1)), *(_QWORD *)((char *)&stru_20.maxprot + (swift_isaMask & *v1)));
  return result;
}

uint64_t ModernPageViewController.navigationTabIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ModernPageViewController.interactionContextPage.getter();
  if (swift_getEnumCaseMultiPayload(v3, v1) == 17)
    return 6;
  sub_FA4C((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  v4 = *(_QWORD *)(v0 + qword_3DDD78);
  sub_91F1C(v4);
  return v4;
}

uint64_t ModernPageViewController.navigationTabIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + qword_3DDD78);
  *(_QWORD *)(v1 + qword_3DDD78) = a1;
  return sub_91F0C(v2);
}

uint64_t (*ModernPageViewController.navigationTabIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ModernPageViewController.navigationTabIdentifier.getter();
  return sub_235348;
}

uint64_t sub_235348(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_91F1C(*a1);
    v4 = *(_QWORD *)(v3 + qword_3DDD78);
    *(_QWORD *)(v3 + qword_3DDD78) = v2;
    sub_91F0C(v4);
  }
  else
  {
    v5 = *(_QWORD *)(v3 + qword_3DDD78);
    *(_QWORD *)(v3 + qword_3DDD78) = v2;
    v2 = v5;
  }
  return sub_91F0C(v2);
}

void sub_2353A0()
{
  char *v0;
  id v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *boxed_opaque_existential_0;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[5];

  v1 = objc_msgSend(v0, "navigationItem");
  v2 = objc_msgSend(v1, "largeTitleDisplayMode");

  v4 = qword_3DDE70;
  if (*(_QWORD *)&v0[qword_3DDE70] != 3)
    goto LABEL_4;
  v5 = type metadata accessor for Podcasts(0, v3);
  v12[3] = v5;
  v12[4] = sub_89A0(&qword_3D2F80, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(boxed_opaque_existential_0, enum case for Podcasts.compactLargeTitles(_:), v5);
  LOBYTE(v5) = isFeatureEnabled(_:)(v12);
  __swift_destroy_boxed_opaque_existential_0(v12);
  if ((v5 & 1) == 0)
    goto LABEL_5;
  v7 = objc_msgSend(v0, "traitCollection");
  v8 = (char *)objc_msgSend(v7, "horizontalSizeClass");

  if (v8 == (_BYTE *)&dword_0 + 1)
  {
LABEL_4:
    v9 = objc_msgSend(v0, "navigationItem");
    objc_msgSend(v9, "setLargeTitleDisplayMode:", *(_QWORD *)&v0[v4]);
  }
  else
  {
LABEL_5:
    v9 = objc_msgSend(v0, "navigationItem");
    objc_msgSend(v9, "setLargeTitleDisplayMode:", 1);
  }

  v10 = objc_msgSend(v0, "navigationItem");
  v11 = objc_msgSend(v10, "largeTitleDisplayMode");

  if (v2 != v11)
    sub_2386C8();
}

uint64_t sub_235548()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = *v0;
  v2 = swift_isaMask;
  v3 = ModernPageViewController.navigationTabIdentifier.getter();
  if (v3 == 18)
  {
    v8 = 0;
    v9 = 0xE000000000000000;
    v7 = *(uint64_t *)((char *)v0 + qword_3DDD70);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(&v7, *(uint64_t *)((char *)&stru_20.filesize + (v2 & v1)));
    return v8;
  }
  else
  {
    v5 = v3;
    v4 = NavigationTab.description.getter(v3);
    sub_91F0C(v5);
  }
  return v4;
}

double ModernPageViewController.representedFlowDestinations.getter()
{
  uint64_t v0;
  double result;

  v0 = sub_23F63C();
  *(_QWORD *)&result = swift_bridgeObjectRetain(v0).n128_u64[0];
  return result;
}

double ModernPageViewController.representedFlowDestinations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + qword_3FD5E0);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t (*ModernPageViewController.representedFlowDestinations.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_3FD5E0, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *ModernPageViewController.init(asPartOf:with:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  uint64_t AssociatedTypeWitness;

  v4 = swift_isaMask & *v2;
  v5 = sub_23F6C8(a1, a2);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v4 + 88));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  return v5;
}

uint64_t sub_2356FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_5E124(a1, a2);
}

void sub_235710(_QWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v9 = a4 + 16;
  swift_beginAccess(a4 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    sub_2357B8(a1, a3, a2, a5);

  }
  else
  {
    v12 = type metadata accessor for ChildAndParentLocation(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a5, 1, 1, v12);
  }
}

void sub_2357B8(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  id (*v47)(uint64_t);
  id (*v48)(uint64_t);
  id (*v49)(uint64_t);
  id (*v50)(uint64_t);
  uint64_t v51;
  id (*v52)(uint64_t);
  id (*v53)(uint64_t);
  id (*v54)(uint64_t);
  id (*v55)(uint64_t);
  id (*v56)(uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  char *v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  id v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  id (*v96)(uint64_t);
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  id (*v101[10])(uint64_t);
  char v102[16];

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3008);
  __chkstk_darwin(v9);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ModernShelf(0);
  v94 = *(_QWORD *)(v12 - 8);
  v95 = v12;
  __chkstk_darwin(v12);
  v93 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for IndexPath(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v89 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v15);
  v92 = (uint64_t)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v99 = (uint64_t)&v81 - v18;
  v19 = type metadata accessor for InteractionContext(0);
  v96 = *(id (**)(uint64_t))(v19 - 8);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for LocationFields(0, v20);
  v98 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v88 = (char *)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v97 = (char *)&v81 - v26;
  __chkstk_darwin(v27);
  v100 = (char *)&v81 - v28;
  v29 = (_QWORD *)(v4 + qword_3DDD68);
  swift_beginAccess(v4 + qword_3DDD68, v102, 0, 0);
  v30 = *v29;
  if (*v29)
  {
    v85 = v19;
    v87 = v23;
    v31 = *(id *)(v30 + 40);
    v32 = a2;
    v86 = a3;
    v33 = sub_8D2F8(a2, a3, v31);
    if ((v35 & 0x100) != 0)
    {
      v44 = type metadata accessor for ChildAndParentLocation(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(a4, 1, 1, v44);

    }
    else
    {
      v36 = v33;
      v37 = v35;
      v81 = v34;
      v84 = v11;
      v82 = a4;
      v38 = a1[3];
      v39 = a1[4];
      v40 = __swift_project_boxed_opaque_existential_1(a1, v38);
      v83 = v31;
      if (v32)
      {
        v41 = UIView.interactionContext.getter(v40);
        v42 = InteractionContext.view.getter(v41);
        (*((void (**)(char *, uint64_t))v96 + 1))(v22, v85);
      }
      else
      {
        v42 = 7;
      }
      v45 = v100;
      dispatch thunk of NativeClickMetricsItem.generateItemLevelLocationFields(locationPosition:sender:interactionView:)(v36, v86, v42, v38, v39);
      if ((v37 & 1) != 0)
      {
        v59 = v97;
        v58 = v98;
        v60 = v87;
        (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v97, v45, v87);
        v61 = v84;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v84, 1, 1, v60);
        v62 = v82;
        ChildAndParentLocation.init(childFields:parentFields:)(v59, v61);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v45, v60);
        v63 = type metadata accessor for ChildAndParentLocation(0);
        v64 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56);
        v65 = v62;
      }
      else
      {
        v46 = *v29;
        if (*v29)
        {
          swift_retain(*v29);
          sub_16F4D0(v101);
          swift_release(v46);
          v47 = v101[0];
          v48 = v101[1];
          v50 = v101[2];
          v49 = v101[3];
          v51 = v36;
          v52 = v101[4];
          v53 = v101[5];
          v54 = v101[7];
          v96 = v101[6];
          v55 = v101[8];
          v56 = v101[9];
          v57 = v89;
          IndexPath.init(row:section:)(v51, v81);
          if (v50)
            v50((uint64_t)v57);
          else
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v99, 1, 1, v95);
          (*(void (**)(char *, uint64_t))(v90 + 8))(v57, v91);
          sub_1D618((uint64_t)v47, (uint64_t)v48);
          sub_1D618((uint64_t)v50, (uint64_t)v49);
          sub_1D618((uint64_t)v52, (uint64_t)v53);
          sub_1D618((uint64_t)v96, (uint64_t)v54);
          sub_1D618((uint64_t)v55, (uint64_t)v56);
          v69 = v82;
          v70 = v87;
          v67 = v94;
          v66 = v95;
          v68 = v99;
          v45 = v100;
        }
        else
        {
          v67 = v94;
          v66 = v95;
          v68 = v99;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v99, 1, 1, v95);
          v69 = v82;
          v70 = v87;
        }
        v71 = v92;
        sub_D184(v68, v92, (uint64_t *)&unk_3D3010);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v71, 1, v66) == 1)
        {
          sub_D1D4(v71, (uint64_t *)&unk_3D3010);
          v72 = v97;
          v73 = v98;
          (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v97, v45, v70);
          v74 = v84;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v84, 1, 1, v70);
          ChildAndParentLocation.init(childFields:parentFields:)(v72, v74);

          sub_D1D4(v68, (uint64_t *)&unk_3D3010);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v70);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v93, v71, v66);
          v75 = v97;
          ModernShelf.generateParentLocationFields(locationPosition:)(v81);
          v76 = v98;
          v77 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
          v78 = v88;
          v77(v88, v45, v70);
          v79 = v84;
          v77(v84, v75, v70);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v79, 0, 1, v70);
          ChildAndParentLocation.init(childFields:parentFields:)(v78, v79);

          v80 = *(void (**)(char *, uint64_t))(v76 + 8);
          v80(v75, v70);
          (*(void (**)(char *, uint64_t))(v67 + 8))(v93, v66);
          sub_D1D4(v99, (uint64_t *)&unk_3D3010);
          v80(v45, v70);
        }
        v63 = type metadata accessor for ChildAndParentLocation(0);
        v64 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56);
        v65 = v69;
      }
      v64(v65, 0, 1, v63);
    }
  }
  else
  {
    v43 = type metadata accessor for ChildAndParentLocation(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a4, 1, 1, v43);
  }
}

void sub_235EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  _BYTE v10[24];

  v4 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v4);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_19C4C(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_235F5C((uint64_t)v6);

  }
}

uint64_t sub_235F5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[24];
  _BYTE v9[24];

  v3 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1 + qword_3DDDB8;
  swift_beginAccess(v1 + qword_3DDDB8, v9, 0, 0);
  sub_19C4C(v6, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  swift_beginAccess(v6, v8, 33, 0);
  sub_8D288(a1, v6);
  swift_endAccess(v8);
  sub_2369C4((uint64_t)v5);
  sub_FA4C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  return sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
}

void sub_236044(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + qword_3DDE90);
    *(_QWORD *)(Strong + qword_3DDE90) = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v6);
    sub_2386C8();

  }
}

void sub_2360C0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  _BYTE v8[24];

  v2 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v3 = a2 + 16;
    v4 = *(_QWORD *)(a1 + 8);
    swift_beginAccess(a2 + 16, v8, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v6 = (void *)Strong;
      v7 = v2;
      sub_236134(v7, v4);

    }
  }
}

void sub_236134(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  double v16;
  _UNKNOWN **v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  char v30[8];

  v3 = v2;
  v6 = qword_3DDE20;
  v7 = *(_QWORD *)&v2[qword_3DDE20];
  if (v7)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_cell);
    if (Strong)
    {
      v9 = (void *)Strong;
      swift_unknownObjectRelease(Strong);
      if (v9 == a1)
        return;
    }
  }
  v10 = objc_msgSend(v3, "collectionView");
  if (!v10)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = v10;
  objc_msgSend(v10, "_setVisibleRectEdgeInsets:", -10000.0, 0.0, 0.0, 0.0);

  v12 = *(_QWORD *)&v3[qword_3DDDB0];
  sub_23483C();
  v13 = objc_msgSend(v3, "navigationController");
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, "navigationBar");

    v17 = &protocol witness table for UINavigationBar;
  }
  else
  {
    v15 = *(id *)&v3[qword_3DDD80];
    if (!v15)
      return;
    v17 = *(_UNKNOWN ***)&v3[qword_3DDD80 + 8];
    *(_QWORD *)&v16 = swift_unknownObjectRetain(*(_QWORD *)&v3[qword_3DDD80]).n128_u64[0];
  }
  v18 = objc_msgSend(v3, "navigationItem", v16);
  v19 = objc_msgSend(v3, "collectionView");
  swift_unknownObjectWeakInit(v30, v3);
  objc_allocWithZone((Class)type metadata accessor for ModernUberScrollCoordinator());
  v20 = a1;
  swift_unknownObjectRetain(v15);
  v21 = sub_1F76C4(v20, a2, (uint64_t)v15, (uint64_t)v17, v18, v19, (uint64_t)UINavigationBar.overrideBackButtonStyle.setter, 0);
  swift_unknownObjectWeakDestroy(v30);
  v22 = *(void **)&v3[v6];
  *(_QWORD *)&v3[v6] = v21;

  v23 = *(void **)&v3[v6];
  if (!v23)
    goto LABEL_16;
  v24 = v23;
  sub_E2054(v24, v12);

  v25 = objc_msgSend(v3, "collectionView");
  if (!v25)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "refreshControl");

  if (v27)
  {
    v28 = objc_msgSend(v20, "contentView");
    v29 = objc_msgSend(v28, "overrideUserInterfaceStyle");

    objc_msgSend(v27, "setOverrideUserInterfaceStyle:", v29);
  }
  *(_QWORD *)&v3[qword_3DDE70] = 2;
  sub_2353A0();
  swift_unknownObjectRelease(v15);
}

void sub_2363F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned int *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 20);
  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_23646C(v2, v3, v4 | (v5 << 32));

  }
}

void sub_23646C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v4 = HIDWORD(a3);
  PageHeader.title.getter();
  v5 = objc_msgSend(v3, "navigationController");
  v6 = v5;
  if (v5)
  {
    v7 = objc_msgSend(v5, "navigationBar");

    v8 = objc_msgSend(v7, "standardAppearance");
  }
  v9 = objc_msgSend(v3, "navigationController");
  v10 = v9;
  if (v9)
  {
    v11 = objc_msgSend(v9, "navigationBar");

    v12 = objc_msgSend(v11, "scrollEdgeAppearance");
  }
  __asm { BR              X10 }
}

void sub_236590()
{
  char *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t inited;
  void *v12;
  NSString *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  Class isa;
  id v20;
  void *v21;
  void *v22;
  id v23;
  char *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;

  v6 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
  objc_msgSend(v6, "configureWithDefaultBackground");
  v7 = objc_allocWithZone((Class)UIColor);
  v8 = v6;
  v9 = objc_msgSend(v7, "initWithRed:green:blue:alpha:", (double)v1 / 255.0, (double)BYTE1(v1) / 255.0, (double)BYTE2(v1) / 255.0, (double)HIBYTE(v1) / 255.0);
  objc_msgSend(v8, "setBackgroundColor:", v9);

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
  inited = swift_initStackObject(v10, &v30);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v12 = (void *)objc_opt_self(UIColor);
  v13 = NSForegroundColorAttributeName;
  v14 = objc_msgSend(v12, "whiteColor");
  v15 = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v14;
  *(_QWORD *)(inited + 64) = v15;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v16 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v17 = ((uint64_t (*)(const NSAttributedStringKey))static UIFont.title1Emph.getter)(NSFontAttributeName);
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 80) = v17;
  v18 = sub_D4784(inited);
  type metadata accessor for Key(0);
  sub_89A0((unint64_t *)&qword_3D0150, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "setTitleTextAttributes:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v20 = v8;
  v21 = v8;
  v22 = v8;
  v23 = 0;
  ModernPageViewController.titleAndView.setter(v3, v2, 0);
  v24 = &v0[qword_3DDE98];
  v25 = *(_QWORD *)&v0[qword_3DDE98 + 8];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  swift_bridgeObjectRelease(v25);
  sub_238C18();
  *(_QWORD *)&v0[qword_3DDE70] = 2;
  sub_2353A0();
  v26 = objc_msgSend(v0, "navigationItem");
  v27 = v21;
  objc_msgSend(v26, "setStandardAppearance:", v27);

  v28 = objc_msgSend(v0, "navigationItem");
  v29 = v22;
  objc_msgSend(v28, "setScrollEdgeAppearance:", v29);

}

void sub_236944(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = v2;
    sub_234FF8(v2);

  }
}

void sub_2369A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_240DDC();
}

uint64_t sub_2369C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for PageContent(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = v1 + qword_3DDDB8;
  swift_beginAccess(v1 + qword_3DDDB8, v13, 0, 0);
  sub_19C4C(v10, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  sub_236B24((uint64_t)v9);
  sub_FA4C((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  sub_19C4C(v10, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  sub_19C4C(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_23713C((uint64_t)v9, (uint64_t)v5);
  sub_D1D4((uint64_t)v5, &qword_3D2FB8);
  return sub_FA4C((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
}

void sub_236B24(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _BYTE v74[24];
  char v75[32];

  v73 = (char *)a1;
  v68 = *v1;
  v67 = swift_isaMask;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v2);
  v70 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for ViewWillDisappearReason(0);
  v4 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v61 - v12;
  v71 = type metadata accessor for PageID(0, v11);
  v14 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v73, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v64 = v6;
    v65 = v4;
    v66 = v21;
    v73 = v9;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v72;
    v27 = v72 + qword_3DDE78;
    swift_beginAccess(v72 + qword_3DDE78, v75, 0, 0);
    sub_D184(v27, (uint64_t)v13, &qword_3D2FF0);
    v28 = v71;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v71) == 1)
    {
      sub_D1D4((uint64_t)v13, &qword_3D2FF0);
      v29 = (uint64_t)v73;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v73, v23, v28);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v29, 0, 1, v28);
      swift_beginAccess(v27, v74, 33, 0);
      sub_1EB00(v29, v27, &qword_3D2FF0);
      swift_endAccess(v74);
      v30 = *(_QWORD *)(v26 + qword_3DDE08);
      v31 = &v23[*(int *)(v66 + 20)];
      v32 = type metadata accessor for PageMetrics(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = v70;
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v70, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v32);
      swift_retain(v30);
      MetricsController.pageMetrics.setter(v34);
      swift_release(v30);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v28);
      v37 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(v16, v23, v28, v37) & 1) == 0
        && sub_23506C() == 2)
      {
        v63 = v16;
        v38 = v67 & v68;
        v68 = v27;
        v39 = qword_3DDE08;
        v40 = *(_QWORD *)(v26 + qword_3DDE08);
        swift_retain(v40);
        MetricsController.observe(lifecycleEvent:)(2);
        v41 = swift_release(v40);
        v42 = *(_QWORD *)(v26 + qword_3DDD70);
        v43 = v64;
        static ViewWillDisappearReason.unspecified.getter(v41);
        v44 = *(_QWORD *)(v38 + 80);
        v45 = *(_QWORD *)(*(_QWORD *)(v38 + 88) + 8);
        v67 = v42;
        v61 = v45;
        v62 = v44;
        dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v43, v44, v45);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v69);
        v46 = *(_QWORD *)(v26 + v39);
        swift_retain(v46);
        MetricsController.observe(lifecycleEvent:)(3);
        v47 = swift_release(v46);
        dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v44, v45, v47);
        sub_23E320();
        v48 = *(_QWORD *)(v26 + v39);
        v49 = &v23[*(int *)(v66 + 20)];
        v50 = type metadata accessor for PageMetrics(0);
        v51 = *(_QWORD *)(v50 - 8);
        v52 = v70;
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v70, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v50);
        swift_retain(v48);
        MetricsController.pageMetrics.setter(v52);
        swift_release(v48);
        v53 = *(_QWORD *)(v26 + v39);
        swift_retain(v53);
        MetricsController.observe(lifecycleEvent:)(0);
        v54 = swift_release(v53);
        v56 = v61;
        v55 = v62;
        dispatch thunk of ViewControllerPresenter.viewWillAppear()(v62, v61, v54);
        v57 = *(_QWORD *)(v26 + v39);
        swift_retain(v57);
        MetricsController.observe(lifecycleEvent:)(1);
        v58 = swift_release(v57);
        dispatch thunk of ViewControllerPresenter.viewDidAppear()(v55, v56, v58);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v63, v28);
        v59 = (uint64_t)v73;
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v73, v23, v28);
        sub_FA4C((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v59, 0, 1, v28);
        v60 = v68;
        swift_beginAccess(v68, v74, 33, 0);
        sub_1EB00(v59, v60, &qword_3D2FF0);
        swift_endAccess(v74);
        return;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v28);
    }
    v35 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v36 = (uint64_t)v23;
  }
  else
  {
    v35 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v36 = (uint64_t)v20;
  }
  sub_FA4C(v36, v35);
}

id sub_23713C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD v38[7];
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v43 = a2;
  v55 = a1;
  v49 = *v2;
  v48 = swift_isaMask;
  v51 = type metadata accessor for AutomationSemantics(0);
  v47 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v46 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v50 = (char *)v38 - v5;
  __chkstk_darwin(v6);
  v8 = (char *)v38 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v9);
  v41 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v44 = (char *)v38 - v13;
  v42 = type metadata accessor for ModernPage(0, v12);
  __chkstk_darwin(v42);
  v45 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for InformationViewStyle(0);
  v53 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v52 = (char *)v38 - v19;
  v39 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v39);
  v40 = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v38[6] = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v38[5] = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  v27 = (char *)v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)v38 - v29;
  sub_240D14(0);
  result = objc_msgSend(v2, "isViewLoaded");
  if ((_DWORD)result)
  {
    v38[1] = v21;
    v38[2] = v17;
    v38[4] = v8;
    v38[3] = v48 & v49;
    v48 = (unint64_t)v2;
    v32 = *(uint64_t *)((char *)v2 + qword_3DDD90);
    v33 = v55;
    sub_19C4C(v55, (uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v34 = *(unsigned __int8 *)(v25 + 80);
    v35 = (v34 + 24) & ~v34;
    v36 = swift_allocObject(&unk_38D470, v35 + v26, v34 | 7);
    *(_QWORD *)(v36 + 16) = v32;
    v49 = v36;
    sub_1B79C((uint64_t)v30, v36 + v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v33, (uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v37 = (char *)&loc_2374C4 + dword_237F54[swift_getEnumCaseMultiPayload(v27, v24)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_237F74()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD v13[4];
  char v14;

  v1 = *(void **)&v0[qword_3FD5F0];
  v12 = v1;
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v13[0] = v5;
    v13[1] = v7;
    v13[2] = v9;
    v13[3] = v11;
    v14 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v1, v0, v13);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ModernPageViewController.willMove(toParent:)(UIViewController_optional toParent)
{
  char *v1;
  Class isa;
  id v3;
  void *v4;
  id v5;
  _UNKNOWN **v6;
  char *v7;
  uint64_t v8;
  objc_super v9;

  isa = toParent.value.super.super.isa;
  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "willMoveToParentViewController:", isa);
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "navigationBar");

    v6 = &protocol witness table for UINavigationBar;
  }
  else
  {
    v5 = 0;
    v6 = 0;
  }
  v7 = &v1[qword_3DDD80];
  v8 = *(_QWORD *)&v1[qword_3DDD80];
  *(_QWORD *)v7 = v5;
  *((_QWORD *)v7 + 1) = v6;
  swift_unknownObjectRelease(v8);
}

void sub_2380D8(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  UIViewController_optional v8;

  v5 = a3;
  v6 = a1;
  v8.is_nil = (char)v6;
  v7 = v6;
  v8.value.super.super.isa = (Class)a3;
  ModernPageViewController.willMove(toParent:)(v8);

}

void sub_238130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for PageRenderContentTypes(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v8);
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = (char *)&v14 - v10;
  if (a1)
  {
    v12 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    sub_19C4C(a2, (uint64_t)&v14 - v10, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    if (swift_getEnumCaseMultiPayload(v11, v8) == 3)
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v11[*(int *)(v13 + 48)], v4);
      PageRenderController.viewDidUpdate(with:)(v7);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    }
    sub_FA4C((uint64_t)v11, v12);
  }
}

void sub_23825C(uint64_t a1, void (*a2)(__n128), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  _BYTE v23[24];
  _BYTE v24[24];

  v6 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v23[-v11];
  a1 += 16;
  swift_beginAccess(a1, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (char *)Strong;
    v15 = (uint64_t *)(Strong + qword_3DDD68);
    swift_beginAccess(Strong + qword_3DDD68, v23, 0, 0);
    v17 = *v15;
    if (v17)
    {
      swift_retain(v17);
      sub_172BB8((uint64_t)_swiftEmptyArrayStorage, 1, a2, a3);
      swift_release(v17);
    }
    static JULoadingViewController.PresentationContext.fullCover.getter(v16);
    v18 = *(_QWORD *)&v14[qword_3DDD90];
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v12, v6);
    if (v18)
    {
      swift_retain(v18);
      v20 = PageRenderController.presenter.getter(v19);
    }
    else
    {
      v20 = 0;
    }
    type metadata accessor for JULoadingViewController(0);
    v21 = (void *)dispatch thunk of JULoadingViewController.__allocating_init(label:presentationContext:pageRenderMetrics:)(0, 0, v9, v20);
    v22 = swift_release(v18);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v12, v6, v22);
    sub_240D9C(v21);

  }
}

uint64_t ModernPageViewController.titleAndView.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  _BYTE v7[24];

  v1 = (uint64_t *)(v0 + qword_3FD5E8);
  swift_beginAccess(v0 + qword_3FD5E8, v7, 0, 0);
  v2 = *v1;
  v3 = v1[1];
  v4 = (void *)v1[2];
  swift_bridgeObjectRetain(v3);
  v5 = v4;
  return v2;
}

uint64_t sub_238474@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  id v6;
  _BYTE v8[24];

  v3 = (_QWORD *)(*a1 + qword_3FD5E8);
  swift_beginAccess(v3, v8, 0, 0);
  v4 = v3[1];
  v5 = (void *)v3[2];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  v6 = v5;
  return swift_bridgeObjectRetain(v4);
}

void sub_2384E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = *a1;
  v2 = a1[1];
  v3 = (void *)a1[2];
  v4 = v3;
  swift_bridgeObjectRetain(v2);
  ModernPageViewController.titleAndView.setter(v1, v2, (uint64_t)v3);
}

void ModernPageViewController.titleAndView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  _BYTE v10[24];

  v7 = (_QWORD *)(v3 + qword_3FD5E8);
  swift_beginAccess(v3 + qword_3FD5E8, v10, 1, 0);
  v8 = v7[1];
  v9 = (void *)v7[2];
  *v7 = a1;
  v7[1] = a2;
  v7[2] = a3;
  swift_bridgeObjectRelease(v8);

  sub_23859C();
}

void sub_23859C()
{
  char *v0;
  id v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  NSString v5;
  char v6[24];

  v1 = objc_msgSend(v0, "navigationItem");
  v2 = &v0[qword_3FD5E8];
  v3 = swift_beginAccess(v2, v6, 0, 0).n128_u64[0];
  v4 = *((_QWORD *)v2 + 1);
  if (v4)
  {
    swift_bridgeObjectRetain(v4);
    v5 = String._bridgeToObjectiveC()();
    v3 = swift_bridgeObjectRelease(v4).n128_u64[0];
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v1, "setTitle:", v5, *(double *)&v3);

}

void (*ModernPageViewController.titleAndView.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + qword_3FD5E8, a1, 33, 0);
  return sub_238698;
}

void sub_238698(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_23859C();
}

void sub_2386C8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  int v22;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  NSArray v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  unsigned int v50;
  char v51;

  v1 = v0;
  v2 = *(_QWORD *)v0;
  v3 = swift_isaMask;
  v4 = type metadata accessor for HeaderButtonItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F88);
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(v1, "navigationItem", v9);
  objc_msgSend(v12, "_setLargeTitleAccessoryView:", 0);

  v13 = objc_msgSend(v1, "navigationItem");
  v14 = (char *)objc_msgSend(v13, "largeTitleDisplayMode");

  if (v14 != (_BYTE *)&dword_0 + 3)
    goto LABEL_14;
  v15 = *(_QWORD *)&v1[qword_3DDE90];
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
LABEL_13:
    sub_D1D4((uint64_t)v11, &qword_3D2F88);
LABEL_14:
    v23 = (unsigned __int8 *)objc_msgSend(v1, "navigationItem");
    v24 = *(_QWORD *)&v1[qword_3DDE90];
    swift_bridgeObjectRetain(v24);
    sub_238F54(v25);
    v7 = v26;
    swift_bridgeObjectRelease(v24);
    sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    v27.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v23, "setRightBarButtonItems:", v27.super.isa, swift_bridgeObjectRelease(v7).n128_f64[0]);
    goto LABEL_15;
  }
  v46 = qword_3DDE90;
  v47 = v3;
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v44 = v4;
    v45 = v2;
    v17 = v15 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v18 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain_n(v15, 2);
    while (1)
    {
      sub_19C4C(v17, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
      if ((sub_23DB8C((int)v7, v1) & 1) != 0)
        break;
      sub_FA4C((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
      v17 += v18;
      if (!--v16)
      {
        v19 = swift_bridgeObjectRelease(v15);
        v20 = 1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease(v15);
    sub_1B79C((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
    v20 = 0;
LABEL_11:
    v4 = v44;
    v2 = v45;
  }
  else
  {
    v19 = swift_bridgeObjectRetain(v15);
    v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v11, v20, 1, v4, v19);
  v21 = swift_bridgeObjectRelease(v15);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v11, 1, v4, v21);
  v3 = v47;
  if (v22 == 1)
    goto LABEL_13;
  sub_D1D4((uint64_t)v11, &qword_3D2F88);
  v40 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v40, "setRightBarButtonItems:", 0);

  v41 = *(_QWORD *)&v1[v46];
  if (!v41 || !*(_QWORD *)(v41 + 16))
    goto LABEL_16;
  v42 = *(_QWORD *)&v1[qword_3DDD98];
  objc_allocWithZone((Class)type metadata accessor for LargeTitleAccessoryView());
  swift_bridgeObjectRetain(v41);
  swift_retain(v42);
  sub_E40CC(v41, v42);
  v23 = v43;
  v27.super.isa = (Class)objc_msgSend(v1, "navigationItem");
  -[objc_class _setLargeTitleAccessoryView:alignToBaseline:horizontalAlignment:](v27.super.isa, "_setLargeTitleAccessoryView:alignToBaseline:horizontalAlignment:", v23, v23[OBJC_IVAR____TtC23ShelfKitCollectionViews23LargeTitleAccessoryView_wantsBaselineAlignment], 0);
LABEL_15:

LABEL_16:
  v28 = objc_msgSend(v1, "navigationItem");
  v29 = objc_msgSend(v1, "navigationController");
  v30 = v29;
  if (v29)
  {
    v31 = objc_msgSend(v29, "navigationBar");

    v7 = (char *)objc_msgSend(v31, "_backdropViewLayerGroupName");
    if (v7)
    {
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v30 = v33;

    }
    else
    {
      v32 = 0;
      v30 = 0;
    }
  }
  else
  {
    v32 = 0;
  }
  sub_244354(v32, (uint64_t)v30);

  swift_bridgeObjectRelease(v30);
  v34 = dispatch thunk of ModernPagePresenter.pageHeader.getter(*(uint64_t *)((char *)&stru_20.filesize + (v3 & v2)), *(_QWORD *)((char *)&stru_20.maxprot + (v3 & v2)));
  CurrentValueSubject.value.getter(&v48);
  swift_release(v34);
  if (v51 == 2)
  {
    sub_8D250(v48, v49, v50, 2);
    v35 = *(void **)&v1[qword_3DDE20];
    if (v35)
    {
      v36 = v35;
      v37 = objc_msgSend(v1, "collectionView");
      if (v37)
      {
        v38 = v37;
        v39 = objc_msgSend(v1, "navigationItem");
        sub_1F7A8C(v38, v39);

      }
      else
      {
        __break(1u);
        sub_FA4C((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
        swift_bridgeObjectRelease(v3 & v2);
        __break(1u);
      }
    }
  }
  else
  {
    sub_8D250(v48, v49, v50, v51);
  }
}

uint64_t sub_238C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_8BA10((uint64_t)v3, v0);
  return sub_238E38((uint64_t)v3, v4 & 1);
}

double sub_238C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t *v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90);
  __chkstk_darwin(v1);
  v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v6 = &v19[-v5 - 8];
  __chkstk_darwin(v7);
  v9 = &v19[-v8 - 8];
  v10 = (uint64_t *)(v0 + qword_3DDD68);
  *(_QWORD *)&result = swift_beginAccess(v0 + qword_3DDD68, v21, 0, 0).n128_u64[0];
  v12 = *v10;
  if (v12)
  {
    v13 = v0 + qword_3DDDC0;
    swift_beginAccess(v13, v20, 0, 0);
    v14 = *(int *)(v1 + 48);
    sub_D184(v13, (uint64_t)v9, &qword_3D19E8);
    v15 = *(_BYTE *)(v13 + v14);
    v9[v14] = v15;
    sub_240AC0((uint64_t)v9, (uint64_t)v6);
    v16 = *(int *)(v1 + 48);
    v6[v16] = v15;
    sub_D184((uint64_t)v6, (uint64_t)v3, &qword_3D19E8);
    v3[v16] = v15;
    v17 = v12 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader;
    swift_beginAccess(v12 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader, v19, 33, 0);
    swift_retain(v12);
    sub_1EB00((uint64_t)v3, v17, &qword_3D19E8);
    *(_BYTE *)(v17 + *(int *)(v1 + 48)) = v15;
    swift_endAccess(v19);
    sub_1725E4();
    sub_D1D4((uint64_t)v6, (uint64_t *)&unk_3D2E90);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_238E38(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90);
  __chkstk_darwin(v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v15[-v9 - 8];
  sub_240AC0(a1, (uint64_t)&v15[-v9 - 8]);
  v11 = *(int *)(v5 + 48);
  v10[v11] = a2;
  sub_D184((uint64_t)v10, (uint64_t)v7, &qword_3D19E8);
  v7[v11] = a2;
  v12 = v2 + qword_3DDDC0;
  swift_beginAccess(v2 + qword_3DDDC0, v15, 33, 0);
  sub_1EB00((uint64_t)v7, v12, &qword_3D19E8);
  *(_BYTE *)(v12 + *(int *)(v5 + 48)) = a2;
  swift_endAccess(v15);
  sub_238C84();
  return sub_D1D4((uint64_t)v10, (uint64_t *)&unk_3D2E90);
}

void sub_238F54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  if (!a1)
    return;
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  v3 = (uint64_t)sub_7A4C((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_2415D0, (uint64_t)&v30, a1);
  swift_bridgeObjectRelease(a1);
  v36 = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
    if (v4)
      goto LABEL_4;
LABEL_21:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v29 = v3;
  else
    v29 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_21;
LABEL_4:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    v5 = 0;
    v6 = v2 - 1;
    v7 = v3 & 0xC000000000000001;
    v32 = xmmword_2EFC90;
    v33 = v4;
    v34 = v3;
    v31 = v3 & 0xC000000000000001;
    do
    {
      if (v7)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v9 = *(id *)(v3 + 8 * v5 + 32);
      v10 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = *(_QWORD *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFFF8));
      v11 = *(_QWORD *)((char *)&dword_18 + (v36 & 0xFFFFFFFFFFFFFF8));
      if (v12 >= v11 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
      v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized Array._endMutation()(v13);
      if (v5 < v6)
      {
        v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
        objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v15 = (void *)objc_opt_self(NSLayoutConstraint);
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
        v17 = swift_allocObject(v16, 48, 7);
        *(_OWORD *)(v17 + 16) = v32;
        v18 = objc_msgSend(v14, "widthAnchor");
        v19 = objc_msgSend(v18, "constraintEqualToConstant:", 0.0);

        *(_QWORD *)(v17 + 32) = v19;
        v20 = objc_msgSend(v14, "heightAnchor");
        v21 = objc_msgSend(v20, "constraintEqualToConstant:", 1.0);

        *(_QWORD *)(v17 + 40) = v21;
        v35 = v17;
        specialized Array._endMutation()(v22);
        v23 = v35;
        sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v15, "activateConstraints:", isa, swift_bridgeObjectRelease(v23).n128_f64[0]);

        v25 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v14);
        v26 = v25;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
        v28 = *(_QWORD *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFFF8));
        v27 = *(_QWORD *)((char *)&dword_18 + (v36 & 0xFFFFFFFFFFFFFF8));
        if (v28 >= v27 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
        v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
        specialized Array._endMutation()(v8);

        v7 = v31;
        v4 = v33;
        v3 = v34;
      }
      ++v5;

    }
    while (v4 != v5);
    swift_bridgeObjectRelease(v3);
  }
}

void sub_2392BC(char *a1@<X1>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v4, "horizontalSizeClass");

  v6 = *(_QWORD *)&a1[qword_3DDD98];
  swift_retain(v6);
  sub_2449C0((uint64_t)v5, v6);
  v8 = v7;
  swift_release(v6);
  *a2 = v8;
}

Swift::Void __swiftcall ModernPageViewController.viewDidLoad()()
{
  uint64_t *v0;
  uint64_t *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  double v123;
  id v124;
  char v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD v149[3];
  char v150[24];
  char v151[24];
  char v152[24];
  objc_super v153;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = *v1;
  v4 = swift_isaMask;
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDD88);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FA8);
  v138 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v137 = (char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v7);
  v9 = (char *)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90);
  __chkstk_darwin(v10);
  v135 = (uint64_t)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v136 = (uint64_t)&v132 - v13;
  __chkstk_darwin(v14);
  v134 = (uint64_t)&v132 - v15;
  v16 = type metadata accessor for PageContent(0);
  v146 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v148 = (uint64_t)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9518);
  *(_QWORD *)&v19 = __chkstk_darwin(v18).n128_u64[0];
  v21 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153.receiver = v1;
  v153.super_class = ObjectType;
  objc_msgSendSuper2(&v153, "viewDidLoad", v19);
  if (*(uint64_t *)((char *)v1 + qword_3DDD90))
    PageRenderController.viewDidLoad()();
  v22 = qword_3DDD98;
  v23 = *(uint64_t *)((char *)v1 + qword_3DDD98);
  swift_retain(v23);
  sub_239F14(v24);
  v25 = objc_msgSend(v1, "collectionView", swift_release(v23).n128_f64[0]);
  if (!v25)
  {
    __break(1u);
    goto LABEL_45;
  }
  v26 = v25;
  objc_msgSend(v25, "setKeyboardDismissMode:", 1);

  v27 = objc_msgSend(v1, "collectionView");
  if (!v27)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    return;
  }
  v28 = v27;
  v133 = v10;
  v144 = v16;
  v145 = v9;
  v29 = v4 & v3;
  v30 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v28, "setBackgroundColor:", v30);

  v31 = objc_msgSend(v1, "traitCollection");
  v32 = objc_msgSend(v31, "horizontalSizeClass");

  *(uint64_t *)((char *)v1 + qword_3DDDA0) = (uint64_t)v32;
  v33 = objc_msgSend(v1, "splitViewController");
  if (v33)
  {
    v34 = v33;
    v35 = objc_msgSend(v33, "isCollapsed");
    v37 = *(_QWORD *)(v29 + 80);
    v36 = *(_QWORD *)(v29 + 88);
    dispatch thunk of ModernPagePresenter.splitControllerCollapseDidChange(collapsed:)(v35, v37, v36);
    v38 = objc_msgSend(v34, "isCollapsed");
    v39 = *((_BYTE *)v1 + qword_3DDE68);
    *((_BYTE *)v1 + qword_3DDE68) = v38;
    sub_2351FC(v39);

  }
  else
  {
    v37 = *(_QWORD *)(v29 + 80);
    v36 = *(_QWORD *)(v29 + 88);
  }
  v40 = *(uint64_t *)((char *)v1 + qword_3DDD70);
  dispatch thunk of ViewControllerPresenter.viewDidLoad()(v37, *(_QWORD *)(v36 + 8));
  v41 = *(uint64_t *)((char *)v1 + v22);
  v42 = *(_QWORD **)((char *)v1 + qword_3DDDA8);
  swift_retain(v41);
  v43 = objc_msgSend(v1, "collectionView", swift_retain(v42).n128_f64[0]);
  if (!v43)
    goto LABEL_46;
  v44 = v43;
  v45 = v37;
  v46 = *(id *)((char *)v1 + qword_3DDDB0);
  dispatch thunk of ModernPagePresenter.reorderingExtension.getter(v45, v36);
  v143 = v45;
  v147 = v36;
  v47 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v45, v36);
  v48 = type metadata accessor for CollectionController(0);
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v49 = sub_178BBC(v41, v42, v44, v46, (uint64_t)v21, v47);
  swift_release(v41);
  swift_release(v42);

  swift_release(v47);
  v50 = (uint64_t *)((char *)v1 + qword_3DDD68);
  swift_beginAccess((char *)v1 + qword_3DDD68, v152, 1, 0);
  v51 = *v50;
  *v50 = v49;
  swift_release(v51);
  v52 = (uint64_t)v1 + qword_3DDDB8;
  swift_beginAccess((char *)v1 + qword_3DDDB8, v151, 0, 0);
  v53 = v148;
  sub_19C4C(v52, v148, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  sub_236B24(v53);
  sub_FA4C(v53, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  v54 = *v50;
  if (*v50)
  {
    v55 = (uint64_t)v1 + qword_3DDDC0;
    swift_beginAccess((char *)v1 + qword_3DDDC0, v150, 0, 0);
    v56 = v133;
    v57 = *(int *)(v133 + 48);
    v58 = v134;
    sub_D184(v55, v134, &qword_3D19E8);
    v59 = *(_BYTE *)(v55 + v57);
    *(_BYTE *)(v58 + v57) = v59;
    v60 = v136;
    sub_240AC0(v58, v136);
    v61 = *(int *)(v56 + 48);
    *(_BYTE *)(v60 + v61) = v59;
    v62 = v135;
    sub_D184(v60, v135, &qword_3D19E8);
    *(_BYTE *)(v62 + v61) = v59;
    v63 = v54 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader;
    swift_beginAccess(v54 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader, v149, 33, 0);
    swift_retain(v54);
    sub_1EB00(v62, v63, &qword_3D19E8);
    *(_BYTE *)(v63 + *(int *)(v56 + 48)) = v59;
    swift_endAccess(v149);
    sub_1725E4();
    sub_D1D4(v60, (uint64_t *)&unk_3D2E90);
    swift_release(v54);
  }
  v64 = v148;
  sub_19C4C(v52, v148, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  v65 = (uint64_t)v145;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v145, 1, 1, v144);
  sub_23713C(v64, v65);
  sub_D1D4(v65, &qword_3D2FB8);
  sub_FA4C(v64, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  v66 = swift_getObjectType();
  v67 = swift_conformsToProtocol2(v66, &protocol descriptor for EditablePresenter);
  if (v67)
    v68 = v67;
  else
    v68 = 0;
  if (v67)
    v69 = v40;
  else
    v69 = 0;
  v70 = v143;
  if (v69)
  {
    v71 = swift_getObjectType();
    v72 = swift_unknownObjectRetain(v40);
    v73 = dispatch thunk of EditablePresenter.isEditing.getter(v71, v68, v72);
    v149[0] = v73;
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
    v75 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    v76 = v137;
    Publisher<>.removeDuplicates()(v74, v75, &protocol witness table for Bool);
    swift_release(v73);
    v77 = swift_allocObject(&unk_38CF50, 24, 7);
    swift_unknownObjectWeakInit(v77 + 16, v1);
    v78 = (_QWORD *)swift_allocObject(&unk_38CFA0, 40, 7);
    v79 = v147;
    v78[2] = v70;
    v78[3] = v79;
    v78[4] = v77;
    v80 = sub_10EDC(&qword_3D8FF8, &qword_3D8FA8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v81 = v139;
    v82 = Publisher<>.sink(receiveValue:)(sub_240B7C, v78, v139, v80);
    v83 = swift_release(v78);
    (*(void (**)(char *, uint64_t, __n128))(v138 + 8))(v76, v81, v83);
    v84 = (char *)v1 + qword_3DDDF8;
    swift_beginAccess((char *)v1 + qword_3DDDF8, v149, 33, 0);
    v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
    v86 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v84, v85, v86);
    swift_endAccess(v149);
    swift_unknownObjectRelease(v40);
    swift_release(v82);
  }
  v87 = swift_getObjectType();
  v88 = swift_conformsToProtocol2(v87, &protocol descriptor for RefreshablePresenter);
  if (v88)
    v89 = v88;
  else
    v89 = 0;
  if (v88)
    v90 = v40;
  else
    v90 = 0;
  if (v90)
  {
    v91 = swift_getObjectType();
    swift_unknownObjectRetain(v40);
    v92 = dispatch thunk of RefreshablePresenter.refreshControls.getter(v91, v89);
    v149[0] = v92;
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDDD8);
    v94 = sub_10EDC(&qword_3DDDE0, &qword_3DDDD8, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    v95 = sub_240B08();
    v96 = v140;
    Publisher<>.removeDuplicates()(v93, v94, v95);
    swift_release(v92);
    v97 = swift_allocObject(&unk_38CF50, 24, 7);
    swift_unknownObjectWeakInit(v97 + 16, v1);
    v98 = (_QWORD *)swift_allocObject(&unk_38CF78, 40, 7);
    v99 = v147;
    v98[2] = v70;
    v98[3] = v99;
    v98[4] = v97;
    v100 = sub_10EDC(&qword_3DDDF0, &qword_3DDD88, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v101 = v142;
    v102 = Publisher<>.sink(receiveValue:)(sub_240B70, v98, v142, v100);
    v103 = swift_release(v98);
    (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v96, v101, v103);
    v104 = (char *)v1 + qword_3DDDF8;
    swift_beginAccess((char *)v1 + qword_3DDDF8, v149, 33, 0);
    v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
    v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v104, v105, v106);
    swift_endAccess(v149);
    swift_unknownObjectRelease(v40);
    swift_release(v102);
  }
  v107 = swift_getObjectType();
  v108 = swift_conformsToProtocol2(v107, &protocol descriptor for InterfaceModeAwarePresenter);
  if (v108)
    v109 = v108;
  else
    v109 = 0;
  if (v108)
    v110 = v40;
  else
    v110 = 0;
  if (v110)
  {
    v111 = qword_3DDDD0;
    v112 = *((unsigned __int8 *)v1 + qword_3DDDD0);
    v113 = objc_msgSend(v1, "traitCollection", swift_unknownObjectRetain(v40).n128_f64[0]);
    v114 = UITraitCollection.interfaceMode.getter();

    v115 = v114 & 1;
    v116 = InterfaceMode.rawValue.getter(v112);
    v118 = v117;
    v120 = InterfaceMode.rawValue.getter(v115);
    v121 = v119;
    if (v116 == v120 && v118 == v119)
    {
      swift_unknownObjectRelease(v40);
      swift_bridgeObjectRelease_n(v118, 2);
    }
    else
    {
      v122 = _stringCompareWithSmolCheck(_:_:expecting:)(v116, v118, v120, v119, 0);
      swift_bridgeObjectRelease(v118);
      *(_QWORD *)&v123 = swift_bridgeObjectRelease(v121).n128_u64[0];
      if ((v122 & 1) == 0)
      {
        v124 = objc_msgSend(v1, "traitCollection", v123);
        v125 = UITraitCollection.interfaceMode.getter();

        *((_BYTE *)v1 + v111) = v125 & 1;
        v126 = swift_getObjectType();
        dispatch thunk of InterfaceModeAwarePresenter.didTransition(to:)(v125 & 1, v126, v109);
      }
      swift_unknownObjectRelease(v40);
    }
  }
  v127 = *(void **)((char *)v1 + qword_3DDDC8);
  if (v127)
  {
    v128 = type metadata accessor for AppEntityViewAnnotation(0);
    v129 = swift_dynamicCastClass(v127, v128);
    if (v129)
    {
      v130 = v129;
      v131 = v127;
      sub_234F0C(v130);

    }
  }
}

uint64_t sub_239F14(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char v76[16];
  char *v77;
  uint64_t v78;
  _BYTE v79[24];
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v2 = v1;
  v4 = swift_isaMask & *(_QWORD *)v1;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDF68);
  v65 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v64 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDF70);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v67 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDF78);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v69 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDF80);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v75 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)&v2[qword_3DDD70];
  v13 = *(_QWORD *)(v4 + 80);
  v73 = *(_QWORD *)(v4 + 88);
  v14 = dispatch thunk of ModernPagePresenter.pageExtensions.getter(v13, v10);
  v77 = v2;
  v78 = a1;
  v15 = sub_187A3C((void (*)(_OWORD *__return_ptr, uint64_t *, __n128))sub_2419F0, (uint64_t)v76, v14);
  swift_bridgeObjectRelease(v14);
  v16 = &v2[qword_3DDE50];
  swift_beginAccess(&v2[qword_3DDE50], &v84, 33, 0);
  sub_1F6DB4(v15);
  v17 = objc_msgSend(v2, "traitCollection", swift_endAccess(&v84).n128_f64[0]);
  v18 = UITraitCollection.interfaceIdiomIsMac.getter();

  v84 = v12;
  v74 = v13;
  sub_9F67C((uint64_t)&v84, v13, (uint64_t)&v82);
  if (!v83)
    return sub_D1D4((uint64_t)&v82, &qword_3DDF88);
  v63 = v9;
  sub_1B738(&v82, (uint64_t)&v84);
  v19 = swift_allocObject(&unk_38D4E8, 56, 7);
  *(_OWORD *)(v19 + 16) = 0u;
  v20 = v19 + 16;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_QWORD *)(v19 + 48) = 0;
  v21 = v18;
  v22 = v8;
  if ((v21 & 1) == 0)
  {
    v62 = v8;
    v61 = a1;
    v23 = v86;
    __swift_project_boxed_opaque_existential_1(&v84, v85);
    v24 = objc_msgSend(v2, "navigationItem");
    (*(void (**)(__int128 *__return_ptr))(v23 + 16))(&v80);

    if (v81)
    {
      sub_1B738(&v80, (uint64_t)&v82);
      v25 = v83;
      v26 = __swift_project_boxed_opaque_existential_1(&v82, v83);
      v81 = v25;
      v27 = __swift_allocate_boxed_opaque_existential_0(&v80);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v27, v26, v25);
      swift_beginAccess(v16, v79, 33, 0);
      v28 = *(_QWORD **)v16;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v16);
      *(_QWORD *)v16 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v28 = sub_20F184(0, v28[2] + 1, 1, v28);
        *(_QWORD *)v16 = v28;
      }
      v22 = v62;
      v31 = v28[2];
      v30 = v28[3];
      if (v31 >= v30 >> 1)
      {
        v28 = sub_20F184((_QWORD *)(v30 > 1), v31 + 1, 1, v28);
        *(_QWORD *)v16 = v28;
      }
      v28[2] = v31 + 1;
      sub_1D65C(&v80, &v28[4 * v31 + 4]);
      swift_endAccess(v79);
      sub_D1D4(v20, &qword_3DDF90);
      sub_1D5D4((uint64_t)&v82, v20);
      __swift_destroy_boxed_opaque_existential_0(&v82);
      a1 = v61;
    }
    else
    {
      sub_D1D4((uint64_t)&v80, &qword_3DDF90);
      a1 = v61;
      v22 = v62;
    }
  }
  v33 = v85;
  v34 = v86;
  __swift_project_boxed_opaque_existential_1(&v84, v85);
  *(_QWORD *)&v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
  v35 = v64;
  sub_23519C();
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v37 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v38 = sub_10EDC(&qword_3DDF98, &qword_3DDF68, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v39 = v67;
  v40 = v36;
  v41 = v66;
  Publisher.combineLatest<A>(_:)(v35, v40, v66, v37, v38);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v41);
  swift_release(v82);
  v42 = swift_allocObject(&unk_38D510, 17, 7);
  LOBYTE(v37) = v21 & 1;
  *(_BYTE *)(v42 + 16) = v21 & 1;
  v43 = swift_allocObject(&unk_38D538, 32, 7);
  *(_QWORD *)(v43 + 16) = sub_241A48;
  *(_QWORD *)(v43 + 24) = v42;
  v44 = sub_10EDC(&qword_3DDFA0, &qword_3DDF70, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v45 = v69;
  v46 = v70;
  Publisher.map<A>(_:)(sub_241A94, v43, v70, &type metadata for Bool, v44);
  v47 = swift_release(v43);
  (*(void (**)(char *, uint64_t, __n128))(v68 + 8))(v39, v46, v47);
  v48 = sub_10EDC(&qword_3DDFA8, &qword_3DDF78, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v49 = v75;
  v50 = v72;
  Publisher<>.removeDuplicates()(v72, v48, &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v45, v50);
  v51 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16, v2);
  sub_1D5D4((uint64_t)&v84, (uint64_t)&v82);
  v52 = swift_allocObject(&unk_38D560, 104, 7);
  v53 = v73;
  *(_QWORD *)(v52 + 16) = v74;
  *(_QWORD *)(v52 + 24) = v53;
  *(_QWORD *)(v52 + 32) = v51;
  *(_BYTE *)(v52 + 40) = v37;
  sub_1B738(&v82, v52 + 48);
  *(_QWORD *)(v52 + 88) = a1;
  *(_QWORD *)(v52 + 96) = v19;
  v54 = sub_10EDC(&qword_3DDFB0, &qword_3DDF80, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  swift_retain(a1);
  swift_retain(v19);
  v55 = Publisher<>.sink(receiveValue:)(sub_241B08, v52, v22, v54);
  v56 = swift_release(v52);
  (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v49, v22, v56);
  v57 = &v2[qword_3DDDF8];
  swift_beginAccess(v57, &v82, 33, 0);
  v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v59 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v57, v58, v59);
  swift_endAccess(&v82);
  swift_release(v19);
  swift_release(v55);
  return __swift_destroy_boxed_opaque_existential_0(&v84);
}

void sub_23A6C8(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    ModernPageViewController.setEditing(_:animated:)(v2, 1);

  }
}

Swift::Void __swiftcall ModernPageViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  char *v2;
  id v5;
  void *v6;
  void (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  int v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;
  objc_super v27;

  v27.receiver = v2;
  v27.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v27, "setEditing:animated:", _, animated);
  if (!animated)
  {
    v9 = objc_opt_self(UIView);
    v8 = swift_allocObject(&unk_38CFC8, 25, 7);
    *(_QWORD *)(v8 + 16) = v2;
    *(_BYTE *)(v8 + 24) = _;
    v10 = swift_allocObject(&unk_38CFF0, 32, 7);
    v7 = sub_240BAC;
    *(_QWORD *)(v10 + 16) = sub_240BAC;
    *(_QWORD *)(v10 + 24) = v8;
    v25[4] = sub_101EC;
    v26 = v10;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 1107296256;
    v25[2] = sub_920D4;
    v25[3] = &block_descriptor_56;
    v11 = _Block_copy(v25);
    v12 = v26;
    v13 = v2;
    swift_retain(v10);
    objc_msgSend((id)v9, "performWithoutAnimation:", v11, swift_release(v12).n128_f64[0]);
    _Block_release(v11);
    LOBYTE(v9) = swift_isEscapingClosureAtFileLocation(v10, "", 163, 923, 44, 1);
    swift_release(v10);
    if ((v9 & 1) == 0)
      goto LABEL_5;
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  v5 = objc_msgSend(v2, "collectionView");
  if (!v5)
    goto LABEL_17;
  v6 = v5;
  objc_msgSend(v5, "setEditing:", _);

  v7 = 0;
  v8 = 0;
LABEL_5:
  v14 = *(_QWORD *)&v2[qword_3DDD70];
  ObjectType = swift_getObjectType();
  v16 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for EditablePresenter);
  if (v16)
    v17 = v14;
  else
    v17 = 0;
  if (v16)
    v18 = v16;
  else
    v18 = 0;
  if (v17)
  {
    v19 = swift_getObjectType();
    v20 = swift_unknownObjectRetain(v14);
    v21 = dispatch thunk of EditablePresenter.isEditing.getter(v19, v18, v20);
    CurrentValueSubject.value.getter(v25);
    v22 = swift_release(v21);
    v23 = _;
    if (LOBYTE(v25[0]) == v23)
    {
      swift_unknownObjectRelease(v14);
    }
    else
    {
      v24 = dispatch thunk of EditablePresenter.isEditing.getter(v19, v18, v22);
      LOBYTE(v25[0]) = v23;
      CurrentValueSubject.send(_:)(v25);
      swift_unknownObjectRelease(v14);
      swift_release(v24);
    }
  }
  sub_1D618((uint64_t)v7, v8);
}

void sub_23A994(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_23A9EC(v2);

  }
}

void sub_23A9EC(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  __n128 v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(UIMenuSystem), "mainSystem");
  objc_msgSend(v11, "setNeedsRevalidate");

  v12 = objc_msgSend(v1, "collectionView");
  if (!v12)
    return;
  v27 = v12;
  if (!(_BYTE)a1)
  {
    objc_msgSend(v12, "setRefreshControl:", 0);
    goto LABEL_9;
  }
  v13 = sub_23F048();
  if (!v13)
  {
LABEL_9:

    return;
  }
  v14 = v13;
  if ((static RefreshControls.== infix(_:_:)(a1, 2) & 1) != 0)
  {
    if ((objc_msgSend(v14, "isRefreshing") & 1) == 0)
      objc_msgSend(v14, "beginRefreshing");

    goto LABEL_9;
  }
  sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v26 = static OS_dispatch_queue.main.getter(v15);
  v16 = swift_allocObject(&unk_38D3D0, 24, 7);
  *(_QWORD *)(v16 + 16) = v14;
  aBlock[4] = sub_2417D8;
  v29 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_61;
  v17 = _Block_copy(aBlock);
  v18 = v29;
  v25 = v14;
  v19 = swift_release(v18);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  v20 = sub_89A0((unint64_t *)&qword_3D2FD0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v22 = sub_10EDC((unint64_t *)&qword_3D2FE0, (uint64_t *)&unk_3D4DA0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v3, v20);
  v23 = (void *)v26;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_23ACE0(void *a1)
{
  id v1;

  v1 = a1;
  ModernPageViewController.viewDidLoad()();

}

double sub_23AD14()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char **v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  double v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  double MidX;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  void **aBlock;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t (*v62)();
  uint64_t v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v1 = (uint64_t)v0;
  v2 = objc_msgSend(v0, "navigationItem");
  v3 = objc_msgSend(v2, "rightBarButtonItems");

  if (v3)
  {
    v5 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v5);

    if ((unint64_t)v6 >> 62)
      goto LABEL_45;
    v7 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
    while (v7)
    {
      v56 = (id)v1;
      v57 = v6;
      v8 = v6 & 0xC000000000000001;
      v1 = 4;
      v9 = &selRef_openURL_options_completionHandler_;
      while (1)
      {
        v10 = v8 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v1 - 4, v6) : *(id *)(v6 + 8 * v1);
        v11 = v10;
        v12 = v1 - 3;
        if (__OFADD__(v1 - 4, 1))
          break;
        v13 = objc_msgSend(v10, v9[358]);
        if (v13)
        {
          v14 = v13;
          v15 = type metadata accessor for FollowNavButton(0);
          v16 = swift_dynamicCastClass(v14, v15);
          if (v16
            && (v17 = (char *)v16,
                *(_BYTE *)(v16 + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_followState) == 4))
          {
            sub_1D5D4(v16 + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_headerButtonTipProvider, (uint64_t)&aBlock);
            v35 = v61;
            v36 = v62;
            __swift_project_boxed_opaque_existential_1(&aBlock, v61);
            v37 = dispatch thunk of HeaderButtonTipProviderProtocol.followBubbleTipController(metricsController:)(*(_QWORD *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_metricsController], v35, v36);
            if (v37)
            {
              v38 = (void *)v37;
              __swift_destroy_boxed_opaque_existential_0(&aBlock);
              v44 = objc_msgSend(v38, "popoverPresentationController");
              if (v44)
              {
                v45 = v44;
                objc_msgSend(v44, "setSourceView:", v17);

              }
              v46 = objc_msgSend(v38, "popoverPresentationController", v56);
              if (v46)
              {
                v47 = v46;
                objc_msgSend(v17, "frame");
                MidX = CGRectGetMidX(v66);
                objc_msgSend(v17, "frame");
                objc_msgSend(v47, "setSourceRect:", MidX, CGRectGetMaxY(v67), 0.0, 0.0);
                swift_bridgeObjectRelease(v57);

              }
              else
              {
                swift_bridgeObjectRelease(v57);
              }
              v51 = swift_allocObject(&unk_38D330, 24, 7);
              *(_QWORD *)(v51 + 16) = v17;
              v62 = sub_241658;
              v63 = v51;
              aBlock = _NSConcreteStackBlock;
              v59 = 1107296256;
              v50 = &block_descriptor_44;
              goto LABEL_43;
            }
            __swift_destroy_boxed_opaque_existential_0(&aBlock);

            v6 = v57;
            v9 = &selRef_openURL_options_completionHandler_;
          }
          else
          {

          }
        }
        v18 = objc_msgSend(v11, v9[358], v56);
        if (!v18)
          goto LABEL_6;
        v14 = v18;
        v19 = type metadata accessor for FavoriteNavButton(0);
        v20 = swift_dynamicCastClass(v14, v19);
        if (!v20)
        {

LABEL_6:
          goto LABEL_7;
        }
        v22 = (char *)v20;
        v23 = InterestState.rawValue.getter(*(unsigned __int8 *)(v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_currentState), v21);
        v25 = v24;
        v27 = InterestState.rawValue.getter(2, v26);
        if (v23 == v27 && v25 == v28)
        {

          swift_bridgeObjectRelease_n(v25, 2);
        }
        else
        {
          v30 = v28;
          v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v28, 0);
          swift_bridgeObjectRelease(v25);
          swift_bridgeObjectRelease(v30);
          if ((v31 & 1) == 0)
          {
            v32 = *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_headerButtonTipProvider
                                + 24];
            v33 = *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_headerButtonTipProvider
                                + 32];
            __swift_project_boxed_opaque_existential_1(&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_headerButtonTipProvider], v32);
            v34 = (void *)dispatch thunk of HeaderButtonTipProviderProtocol.favoriteBubbleTipController(metricsController:)(*(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_metricsController], v32, v33);
            if (v34)
            {
              v38 = v34;
              v39 = objc_msgSend(v34, "popoverPresentationController");
              if (v39)
              {
                v40 = v39;
                objc_msgSend(v39, "setSourceView:", v22);

              }
              v41 = objc_msgSend(v38, "popoverPresentationController");
              if (v41)
              {
                v42 = v41;
                objc_msgSend(v22, "frame");
                v43 = CGRectGetMidX(v64);
                objc_msgSend(v22, "frame");
                objc_msgSend(v42, "setSourceRect:", v43, CGRectGetMaxY(v65), 0.0, 0.0);
                swift_bridgeObjectRelease(v57);

              }
              else
              {
                swift_bridgeObjectRelease(v57);
              }
              v49 = swift_allocObject(&unk_38D2E0, 24, 7);
              *(_QWORD *)(v49 + 16) = v22;
              v62 = sub_24160C;
              v63 = v49;
              aBlock = _NSConcreteStackBlock;
              v59 = 1107296256;
              v50 = &block_descriptor_38_0;
LABEL_43:
              v60 = sub_24360;
              v61 = (uint64_t)v50;
              v52 = _Block_copy(&aBlock);
              v53 = v63;
              v54 = v14;
              objc_msgSend(v56, "presentViewController:animated:completion:", v38, 1, v52, swift_release(v53).n128_f64[0]);
              _Block_release(v52);

              return result;
            }
          }

        }
        v6 = v57;
        v9 = &selRef_openURL_options_completionHandler_;
LABEL_7:
        ++v1;
        if (v12 == v7)
        {
          *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
          return result;
        }
      }
      __break(1u);
LABEL_45:
      if (v6 < 0)
        v55 = v6;
      else
        v55 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v55);
      swift_bridgeObjectRelease(v6);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_23B2D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1D5D4(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_headerButtonTipProvider, (uint64_t)v4);
  v1 = v5;
  v2 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  dispatch thunk of HeaderButtonTipProviderProtocol.markFollowTipAsPresented()(v1, v2);
  return __swift_destroy_boxed_opaque_existential_0(v4);
}

void sub_23B334()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "presentedViewController");
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v1, "modalPresentationStyle") == (char *)&dword_4 + 3)
      objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

Swift::Void __swiftcall ModernPageViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t MetatypeMetadata;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  objc_super v46;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = swift_isaMask & *(_QWORD *)v1;
  v6 = type metadata accessor for ExtendedLaunchController.LoadingHandle(0);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v7;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v40 - v11;
  v13 = *(_QWORD *)(v5 + 80);
  v14 = *(_QWORD *)(v5 + 88);
  objc_msgSend(v2, "setClearsSelectionOnViewWillAppear:", dispatch thunk of ModernPagePresenter.clearsSelectionOnViewWillAppear.getter(v13, v14, v10) & 1);
  v46.receiver = v2;
  v46.super_class = ObjectType;
  objc_msgSendSuper2(&v46, "viewWillAppear:", a1);
  if (*(_QWORD *)&v2[qword_3DDD90])
    PageRenderController.viewWillAppear()();
  v2[qword_3DDE00] = 1;
  sub_23B728();
  sub_23B958();
  sub_235104(1);
  v15 = *(_QWORD *)&v2[qword_3DDE08];
  swift_retain(v15);
  MetricsController.observe(lifecycleEvent:)(0);
  v16 = swift_release(v15);
  dispatch thunk of ViewControllerPresenter.viewWillAppear()(v13, *(_QWORD *)(v14 + 8), v16);
  v17 = ModernPageViewController.navigationTabIdentifier.getter();
  if (v17 == 18)
  {
    v45[0] = swift_getObjectType();
    MetatypeMetadata = swift_getMetatypeMetadata(v13);
    v19 = String.init<A>(describing:)(v45, MetatypeMetadata);
    v21 = v20;
  }
  else
  {
    v22 = v17;
    v19 = NavigationTab.stringValue.getter();
    v21 = v23;
    sub_91F0C(v22);
  }
  type metadata accessor for ExtendedLaunchController(0);
  v24 = (void *)static ExtendedLaunchController.shared.getter();
  v41 = v12;
  dispatch thunk of ExtendedLaunchController.getLoadingHandle(name:)(v19, v21);

  v25 = swift_bridgeObjectRelease(v21);
  v45[0] = dispatch thunk of ModernPagePresenter.hasLoadedContent.getter(v13, v14, v25);
  v26 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16, v2);
  v27 = v43;
  v28 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v8, v12, v44);
  v29 = *(unsigned __int8 *)(v27 + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = (v42 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject(&unk_38D040, v31 + 8, v29 | 7);
  *(_QWORD *)(v32 + 16) = v13;
  *(_QWORD *)(v32 + 24) = v14;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v32 + v30, v8, v28);
  *(_QWORD *)(v32 + v31) = v26;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDE10);
  v34 = sub_10EDC(&qword_3DDE18, &qword_3DDE10, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v35 = Publisher<>.sink(receiveValue:)(sub_240C54, v32, v33, v34);
  swift_release(v32);
  swift_release(v45[0]);
  v36 = &v2[qword_3DDDF8];
  swift_beginAccess(&v2[qword_3DDDF8], v45, 33, 0);
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v38 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v36, v37, v38);
  swift_endAccess(v45);
  v39 = swift_release(v35);
  (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v41, v28, v39);
}

void sub_23B728()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  int v12;
  id v13;
  void *v14;
  BOOL v15;
  char *v16;
  __n128 v17;
  void (*v18)(char *, char *, uint64_t, __n128);
  uint64_t (*v19)(char *, uint64_t);
  int v20;
  int v21;
  void (*v22)(char *, uint64_t);
  char v23;
  char v24;
  int v25;
  int v26;
  uint64_t v27;
  void *v28;
  id v29;
  unsigned int v30;
  char v31;

  v1 = v0;
  v2 = swift_isaMask & *(_QWORD *)v0;
  v3 = type metadata accessor for FlowDestinationPageHeader(0);
  v4 = *(_QWORD **)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  v10 = dispatch thunk of ModernPagePresenter.pageHeader.getter(*(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
  CurrentValueSubject.value.getter(&v28);
  swift_release(v10);
  v11 = v30;
  if (v31 == 2)
  {
    v12 = v30;
    sub_8D250(v28, v29, v30, 2);
    v13 = objc_msgSend(v1, "traitCollection");
    v14 = v13;
    if (v12 == 1)
    {
      v15 = objc_msgSend(v13, "horizontalSizeClass") == (char *)&dword_0 + 1;

      v11 = 2 * v15;
    }
    else
    {

    }
    v23 = 0;
    v24 = v11;
  }
  else
  {
    sub_8D250(v28, v29, v30, v31);
    v16 = &v1[qword_3FD5D8];
    v17 = swift_beginAccess(&v1[qword_3FD5D8], &v28, 0, 0);
    v18 = (void (*)(char *, char *, uint64_t, __n128))v4[2];
    v18(v9, v16, v3, v17);
    v19 = (uint64_t (*)(char *, uint64_t))v4[11];
    v20 = v19(v9, v3);
    v21 = enum case for FlowDestinationPageHeader.uber(_:);
    v22 = (void (*)(char *, uint64_t))v4[1];
    v22(v9, v3);
    if (v20 == v21)
    {
      v23 = 0;
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v18)(v6, v16, v3);
      v25 = v19(v6, v3);
      v26 = enum case for FlowDestinationPageHeader.largeTitle(_:);
      v22(v6, v3);
      if (v25 == v26)
      {
        *(_QWORD *)&v1[qword_3DDE70] = 3;
        sub_2353A0();
      }
      v23 = 1;
    }
    v24 = 2;
  }
  sub_8C3E0(v23, v24);
}

double sub_23B958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v1 = *(_QWORD *)(v0 + qword_3DDD70);
  ObjectType = swift_getObjectType();
  v3 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for MenuBarPresenter);
  if (v3)
    v5 = v1;
  else
    v5 = 0;
  if (v3)
    v6 = v3;
  else
    v6 = 0;
  if (v5)
  {
    v7 = *(_QWORD *)(v0 + qword_3DDD98);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E70);
    swift_unknownObjectRetain(v1);
    swift_retain(v7);
    BaseObjectGraph.injectIfAvailable<A>(_:)(v13, v8, v8);
    swift_release(v7);
    v9 = v13[0];
    if (v13[0])
    {
      v10 = v13[1];
      v11 = swift_getObjectType();
      swift_unknownObjectRetain(v1);
      dispatch thunk of MenuBarProvider.menuBarPresenter.setter(v5, v6, v11, v10);
      swift_unknownObjectRelease(v1);
      v12 = v9;
    }
    else
    {
      v12 = v1;
    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  }
  return result;
}

void sub_23BA48(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t (*v26)(char *, uint64_t);
  int v27;
  int v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  __n128 v36;
  char *v37;
  __n128 v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  __n128 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void *v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t Strong;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  uint64_t v94;
  _QWORD aBlock[5];
  uint64_t v96;

  v89 = a2;
  v90 = a3;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  v86 = v4;
  v87 = v5;
  __chkstk_darwin(v4);
  v83 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v84 = *(_QWORD *)(v7 - 8);
  v85 = v7;
  __chkstk_darwin(v7);
  v82 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ExtendedLaunchController.LoadingHandle(0);
  v80 = *(_QWORD *)(v9 - 8);
  v81 = v9;
  v10 = __chkstk_darwin(v9);
  v88 = v11;
  v79 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for DispatchTime(0, v10);
  v78 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v77 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v93 = (char *)&v72 - v14;
  v15 = type metadata accessor for ExtendedLaunchStatus(0);
  v16 = *(_QWORD **)(v15 - 8);
  v17 = v16[8];
  __chkstk_darwin(v15);
  __chkstk_darwin(v18);
  v20 = (char *)&v72 - v19;
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v72 - v23;
  v25 = (void (*)(char *, uint64_t, uint64_t))v16[2];
  v94 = a1;
  v92 = v25;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v25)((char *)&v72 - v23, a1, v15, v22);
  v26 = (uint64_t (*)(char *, uint64_t))v16[11];
  v27 = v26(v24, v15);
  v28 = enum case for ExtendedLaunchStatus.loading(_:);
  v29 = (void (*)(char *, uint64_t))v16[1];
  v29(v24, v15);
  if (v27 != v28)
  {
    v74 = v17;
    v30 = v90;
    v75 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    v76 = v16;
    v32 = v88;
    v31 = v89;
    v92(v20, v94, v15);
    v33 = v26(v20, v15);
    v34 = enum case for ExtendedLaunchStatus.notImplementedError(_:);
    v35 = ((uint64_t (*)(char *, uint64_t))v29)(v20, v15);
    if (v33 == v34)
    {
      sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
      v73 = static OS_dispatch_queue.main.getter(v36);
      v37 = v77;
      static DispatchTime.now()(v38);
      type metadata accessor for DeferredLaunchTaskCoordinator(0);
      v39 = static DeferredLaunchTaskCoordinator.defaultDeferralDeadline.getter();
      + infix(_:_:)(v37, v39);
      v90 = *(char **)(v78 + 8);
      ((void (*)(char *, uint64_t))v90)(v37, v91);
      v41 = v80;
      v40 = v81;
      v42 = v79;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v31, v81);
      v43 = v75;
      v92(v75, v94, v15);
      v44 = *(unsigned __int8 *)(v41 + 80);
      v45 = (v44 + 16) & ~v44;
      v46 = v76;
      v47 = *((unsigned __int8 *)v76 + 80);
      v48 = (v32 + v47 + v45) & ~v47;
      v49 = swift_allocObject(&unk_38D380, v48 + v74, v44 | v47 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v49 + v45, v42, v40);
      ((void (*)(uint64_t, char *, uint64_t))v46[4])(v49 + v48, v43, v15);
      aBlock[4] = sub_241714;
      v96 = v49;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24360;
      aBlock[3] = &block_descriptor_50;
      v50 = _Block_copy(aBlock);
      v51 = swift_release(v96);
      v52 = v82;
      static DispatchQoS.unspecified.getter(v51);
      aBlock[0] = _swiftEmptyArrayStorage;
      v53 = sub_89A0((unint64_t *)&qword_3D2FD0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
      v55 = sub_10EDC((unint64_t *)&qword_3D2FE0, (uint64_t *)&unk_3D4DA0, (uint64_t)&protocol conformance descriptor for [A]);
      v56 = v83;
      v57 = v54;
      v58 = v86;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v57, v55, v86, v53);
      v59 = v93;
      v60 = (void *)v73;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v93, v52, v56, v50);
      _Block_release(v50);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v56, v58);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v85);
      ((void (*)(char *, uint64_t))v90)(v59, v91);
    }
    else
    {
      v61 = (void (*)(uint64_t))ExtendedLaunchController.LoadingHandle.finishedLoading.getter(v35);
      v63 = v62;
      v64 = ExtendedLaunchStatus.error.getter();
      if (v64)
      {
        v65 = v64;
        v66 = type metadata accessor for ExtendedLaunchStatus.ExtendedLaunchError(0);
        v67 = sub_89A0(&qword_3DDF58, (uint64_t (*)(uint64_t))&type metadata accessor for ExtendedLaunchStatus.ExtendedLaunchError, (uint64_t)&protocol conformance descriptor for ExtendedLaunchStatus.ExtendedLaunchError);
        v68 = swift_allocError(v66, v67, 0, 0);
        *v69 = v65;
      }
      else
      {
        v68 = 0;
      }
      v61(v68);
      swift_errorRelease(v68);
      swift_release(v63);
      swift_beginAccess(v30 + 16, aBlock, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v30 + 16);
      if (Strong)
      {
        v71 = (void *)Strong;
        sub_23C0B8(0x6F43646564616F4CLL, 0xED0000746E65746ELL, 1, 1);

      }
    }
  }
}

double sub_23C010()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  double result;

  v0 = (void (*)(uint64_t))ExtendedLaunchController.LoadingHandle.finishedLoading.getter();
  v2 = v1;
  v3 = ExtendedLaunchStatus.error.getter();
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for ExtendedLaunchStatus.ExtendedLaunchError(0);
    v6 = sub_89A0(&qword_3DDF58, (uint64_t (*)(uint64_t))&type metadata accessor for ExtendedLaunchStatus.ExtendedLaunchError, (uint64_t)&protocol conformance descriptor for ExtendedLaunchStatus.ExtendedLaunchError);
    v7 = swift_allocError(v5, v6, 0, 0);
    *v8 = v4;
  }
  else
  {
    v7 = 0;
  }
  v0(v7);
  swift_errorRelease(v7);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

double sub_23C0B8(uint64_t a1, unint64_t a2, char a3, int a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  double result;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  Swift::String v41;
  void *object;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  Swift::String v47;
  uint64_t v48;
  unint64_t v49;
  __n128 v50;
  uint64_t v51;
  _BYTE v52[4];
  int v53;
  _BYTE *v54;
  uint64_t v55;
  unint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[24];
  char v64[24];
  uint64_t v65;
  unint64_t v66;

  v55 = a1;
  v56 = a2;
  v7 = type metadata accessor for InteractionContext.Origin(0);
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  __chkstk_darwin(v7);
  v57 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDF50);
  __chkstk_darwin(v9);
  v11 = &v52[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDF40);
  __chkstk_darwin(v12);
  v58 = &v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v54 = &v52[-v15];
  __chkstk_darwin(v16);
  v18 = &v52[-v17];
  __chkstk_darwin(v19);
  v21 = &v52[-v20];
  v22 = type metadata accessor for InteractionContext.Page(0);
  v62 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = &v52[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  v27 = &v52[-v26];
  v61 = v4;
  ModernPageViewController.interactionContextPage.getter();
  if ((a3 & 1) != 0)
  {
    v53 = a4;
    sub_19C4C((uint64_t)v27, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
    v28 = v62;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v21, 0, 1, v22);
    v29 = v61 + qword_3DDE60;
    swift_beginAccess(v61 + qword_3DDE60, v63, 0, 0);
    v30 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_D184((uint64_t)v21, (uint64_t)v11, &qword_3DDF40);
    sub_D184(v29, v30, &qword_3DDF40);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    if (v31((uint64_t)v11, 1, v22) == 1)
    {
      sub_D1D4((uint64_t)v21, &qword_3DDF40);
      if (v31(v30, 1, v22) == 1)
      {
        sub_D1D4((uint64_t)v11, &qword_3DDF40);
LABEL_11:
        sub_FA4C((uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
        return result;
      }
      goto LABEL_7;
    }
    sub_D184((uint64_t)v11, (uint64_t)v18, &qword_3DDF40);
    if (v31(v30, 1, v22) == 1)
    {
      sub_D1D4((uint64_t)v21, &qword_3DDF40);
      sub_FA4C((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
LABEL_7:
      sub_D1D4((uint64_t)v11, &qword_3DDF50);
      LOBYTE(a4) = v53;
      goto LABEL_9;
    }
    sub_1B79C(v30, (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
    v32 = static InteractionContext.Page.== infix(_:_:)(v18, v24);
    sub_FA4C((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
    sub_D1D4((uint64_t)v21, &qword_3DDF40);
    sub_FA4C((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
    sub_D1D4((uint64_t)v11, &qword_3DDF40);
    LOBYTE(a4) = v53;
    if ((v32 & 1) != 0)
      goto LABEL_11;
  }
LABEL_9:
  v33 = v61;
  if ((a4 & 1) != 0)
  {
    v34 = v61 + qword_3DDE60;
    swift_beginAccess(v61 + qword_3DDE60, v64, 0, 0);
    v35 = v54;
    sub_D184(v34, (uint64_t)v54, &qword_3DDF40);
    LODWORD(v34) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v62 + 48))(v35, 1, v22);
    sub_D1D4((uint64_t)v35, &qword_3DDF40);
    if ((_DWORD)v34 == 1)
      goto LABEL_11;
  }
  v37 = ModernPageViewController.navigationTabIdentifier.getter();
  if (v37 == 18)
  {
    v38 = 0;
    v39 = (void *)0xE000000000000000;
  }
  else
  {
    v40 = v37;
    v65 = 32;
    v66 = 0xE100000000000000;
    v41._countAndFlagsBits = NavigationTab.description.getter(v37);
    object = v41._object;
    String.append(_:)(v41);
    swift_bridgeObjectRelease(object);
    sub_91F0C(v40);
    v38 = v65;
    v39 = (void *)v66;
  }
  v44 = v59;
  v43 = v60;
  v46 = v57;
  v45 = (uint64_t)v58;
  v65 = v55;
  v66 = v56;
  swift_bridgeObjectRetain(v56);
  v47._countAndFlagsBits = v38;
  v47._object = v39;
  String.append(_:)(v47);
  swift_bridgeObjectRelease(v39);
  v48 = v65;
  v49 = v66;
  ModernPageViewController.interactionContextOrigin.getter();
  InteractionContext.Page.log(preamble:origin:)(v48, v49, v46);
  v50 = swift_bridgeObjectRelease(v49);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v44 + 8))(v46, v43, v50);
  sub_1B79C((uint64_t)v27, v45, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v45, 0, 1, v22);
  v51 = v33 + qword_3DDE60;
  swift_beginAccess(v33 + qword_3DDE60, &v65, 33, 0);
  sub_1EB00(v45, v51, &qword_3DDF40);
  *(_QWORD *)&result = swift_endAccess(&v65).n128_u64[0];
  return result;
}

void sub_23C5C8(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  ModernPageViewController.viewWillAppear(_:)(a3);

}

Swift::Void __swiftcall ModernPageViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  uint64_t *v1;
  uint64_t *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  __n128 v29;
  void *v30;
  __n128 v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  __n128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD aBlock[5];
  _QWORD *v53;
  objc_super v54;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = *v2;
  v6 = swift_isaMask;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  __chkstk_darwin(v7);
  v49 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  v10 = __chkstk_darwin(v9);
  v46 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for DispatchTime(0, v10);
  v12 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v16 = __chkstk_darwin(v15).n128_u64[0];
  v18 = (char *)&v44 - v17;
  v54.receiver = v2;
  v54.super_class = ObjectType;
  objc_msgSendSuper2(&v54, "viewDidAppear:", a1, v16);
  if (*(uint64_t *)((char *)v2 + qword_3DDD90))
    PageRenderController.viewDidAppear()();
  v19 = v6 & v5;
  sub_235104(2);
  v21 = *(_QWORD *)(v19 + 80);
  v20 = *(_QWORD *)(v19 + 88);
  dispatch thunk of ViewControllerPresenter.viewDidAppear()(v21, *(_QWORD *)(v20 + 8), v22);
  v23 = *(uint64_t *)((char *)v2 + qword_3DDE08);
  swift_retain(v23);
  MetricsController.observe(lifecycleEvent:)(1);
  swift_release(v23);
  v24 = sub_23C0B8(0x4164694477656976, 0xED00007261657070, 0, 0);
  type metadata accessor for StoreReviewPromptController(0, v24);
  v25 = static StoreReviewPromptController.shared.getter();
  dispatch thunk of StoreReviewPromptController.modernPageControllerDidAppear(_:)(v2);
  swift_release(v25);
  v26 = (void *)objc_opt_self(NSNotificationCenter);
  v27 = objc_msgSend(v26, "defaultCenter");
  objc_msgSend(v27, "addObserver:selector:name:object:", v2, "appEnteredWhileAppeared", MTApplicationDidBecomeActiveNotification, 0);

  v28 = objc_msgSend(v26, "defaultCenter");
  objc_msgSend(v28, "addObserver:selector:name:object:", v2, "appExitedWhileAppeared", MTApplicationDidEnterBackgroundNotification, 0);

  sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v30 = (void *)static OS_dispatch_queue.main.getter(v29);
  static DispatchTime.now()(v31);
  v32 = v18;
  + infix(_:_:)(v14, 0.3);
  v44 = *(void (**)(char *, uint64_t))(v12 + 8);
  v33 = v45;
  v44(v14, v45);
  v34 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v34 + 16, v2);
  v35 = (_QWORD *)swift_allocObject(&unk_38D068, 40, 7);
  v35[2] = v21;
  v35[3] = v20;
  v35[4] = v34;
  aBlock[4] = sub_240CB8;
  v53 = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_24_0;
  v36 = _Block_copy(aBlock);
  v37 = swift_release(v53);
  v38 = v46;
  static DispatchQoS.unspecified.getter(v37);
  aBlock[0] = _swiftEmptyArrayStorage;
  v39 = sub_89A0((unint64_t *)&qword_3D2FD0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v41 = sub_10EDC((unint64_t *)&qword_3D2FE0, (uint64_t *)&unk_3D4DA0, (uint64_t)&protocol conformance descriptor for [A]);
  v42 = v49;
  v43 = v51;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v40, v41, v51, v39);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v32, v38, v42, v36);
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v43);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v38, v48);
  v44(v32, v33);
}

void sub_23CA74(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_23AD14();

  }
}

void sub_23CAC4(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  ModernPageViewController.viewDidAppear(_:)(a3);

}

Swift::Void __swiftcall ModernPageViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  uint64_t *v1;
  uint64_t *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  objc_super v9;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = *v2;
  v6 = swift_isaMask;
  v9.receiver = v2;
  v9.super_class = ObjectType;
  objc_msgSendSuper2(&v9, "viewDidDisappear:", a1);
  if (*(uint64_t *)((char *)v2 + qword_3DDD90))
    PageRenderController.viewDidDisappear()();
  sub_23CBC8();
  sub_235104(4);
  dispatch thunk of ViewControllerPresenter.viewDidDisappear()(*(uint64_t *)((char *)&stru_20.filesize + (v6 & v5)), *(_QWORD *)(*(_QWORD *)((char *)&stru_20.maxprot + (v6 & v5)) + 8), v7);
  v8 = *(uint64_t *)((char *)v2 + qword_3DDE08);
  swift_retain(v8);
  MetricsController.observe(lifecycleEvent:)(3);
  swift_release(v8);
}

double sub_23CBC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v1 = *(_QWORD *)(v0 + qword_3DDD70);
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for MenuBarPresenter))
    v4 = v1;
  else
    v4 = 0;
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + qword_3DDD98);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E70);
    swift_unknownObjectRetain(v1);
    swift_retain(v5);
    BaseObjectGraph.injectIfAvailable<A>(_:)(v13, v6, v6);
    swift_release(v5);
    v7 = v13[0];
    if (v13[0])
    {
      v8 = v13[1];
      v9 = swift_getObjectType();
      v10 = dispatch thunk of MenuBarProvider.menuBarPresenter.getter(v9, v8);
      if (v10)
      {
        v11 = v10;
        swift_unknownObjectRelease(v10);
        if (v4 == v11)
          dispatch thunk of MenuBarProvider.menuBarPresenter.setter(0, 0, v9, v8);
      }
      swift_unknownObjectRelease(v1);
      v12 = v7;
    }
    else
    {
      v12 = v1;
    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  }
  return result;
}

void sub_23CCC8(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  ModernPageViewController.viewDidDisappear(_:)(a3);

}

Swift::Void __swiftcall ModernPageViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  _QWORD *v1;
  _QWORD *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  objc_super v17;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = swift_isaMask & *v2;
  v6 = type metadata accessor for ViewWillDisappearReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.receiver = v2;
  v17.super_class = ObjectType;
  objc_msgSendSuper2(&v17, "viewWillDisappear:", a1, v8);
  if (*(_QWORD *)((char *)v2 + qword_3DDD90))
  {
    static ViewWillDisappearReason.inferred(for:)(v2);
    PageRenderController.viewWillDisappear(forReason:)(v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  *((_BYTE *)v2 + qword_3DDE00) = 0;
  sub_235104(3);
  static ViewWillDisappearReason.unspecified.getter(v11);
  dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v10, *(_QWORD *)(v5 + 80), *(_QWORD *)(*(_QWORD *)(v5 + 88) + 8));
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v12 = *(_QWORD *)((char *)v2 + qword_3DDE20);
  if (v12)
    *(_BYTE *)(v12 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_active) = 0;
  v13 = *(_QWORD *)((char *)v2 + qword_3DDE08);
  swift_retain(v13);
  MetricsController.observe(lifecycleEvent:)(2);
  objc_msgSend(*(id *)((char *)v2 + qword_3DDE28), "clearSharedItems", swift_release(v13).n128_f64[0]);
  sub_23CF28();
  v14 = (void *)objc_opt_self(NSNotificationCenter);
  v15 = objc_msgSend(v14, "defaultCenter");
  objc_msgSend(v15, "removeObserver:name:object:", v2, MTApplicationDidBecomeActiveNotification, 0);

  v16 = objc_msgSend(v14, "defaultCenter");
  objc_msgSend(v16, "removeObserver:name:object:", v2, MTApplicationDidEnterBackgroundNotification, 0);

  sub_23B334();
}

void sub_23CF28()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, "collectionView");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "refreshControl");

    if (v3)
    {
      if (objc_msgSend(v3, "isRefreshing"))
        objc_msgSend(v3, "endRefreshing");

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_23CFC8(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  ModernPageViewController.viewWillDisappear(_:)(a3);

}

Swift::Void __swiftcall ModernPageViewController.viewWillLayoutSubviews()()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, "viewWillLayoutSubviews");
  v1 = *(void **)&v0[qword_3FD5F0];
  if (v1)
  {
    v2 = objc_msgSend(v1, "view");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v0, "view");
      if (v4)
      {
        v5 = v4;
        objc_msgSend(v4, "bounds");
        v7 = v6;
        v9 = v8;
        v11 = v10;
        v13 = v12;

        objc_msgSend(v3, "setFrame:", v7, v9, v11, v13);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_23D0F0(void *a1)
{
  id v1;

  v1 = a1;
  ModernPageViewController.viewWillLayoutSubviews()();

}

Swift::Void __swiftcall ModernPageViewController.didMove(toParent:)(UIViewController_optional toParent)
{
  uint64_t *v1;
  uint64_t *v2;
  Class isa;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  objc_super v19;

  v2 = v1;
  isa = toParent.value.super.super.isa;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = *v2;
  v6 = swift_isaMask;
  v19.receiver = v2;
  v19.super_class = ObjectType;
  objc_msgSendSuper2(&v19, "didMoveToParentViewController:", isa);
  sub_23D2DC();
  if ((*((_BYTE *)v2 + qword_3DDE30) & 1) == 0)
  {
    v7 = v6 & v5;
    *((_BYTE *)v2 + qword_3DDE30) = 1;
    v8 = *(uint64_t *)((char *)&stru_20.filesize + (v6 & v5));
    v9 = *(_QWORD *)(v7 + 88);
    v18[0] = dispatch thunk of ModernPagePresenter.dismiss.getter(v8, v9);
    v10 = swift_allocObject(&unk_38CF50, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v2);
    v11 = (_QWORD *)swift_allocObject(&unk_38D0B8, 40, 7);
    v11[2] = v8;
    v11[3] = v9;
    v11[4] = v10;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
    v13 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    v14 = Publisher<>.sink(receiveValue:)(sub_240CC4, v11, v12, v13);
    swift_release(v11);
    swift_release(v18[0]);
    v15 = (char *)v2 + qword_3DDDF8;
    swift_beginAccess(v15, v18, 33, 0);
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
    v17 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v15, v16, v17);
    swift_endAccess(v18);
    swift_release(v14);
  }
}

void sub_23D2DC()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  char v3;
  id v4;

  v1 = objc_msgSend(v0, "splitViewController");
  if (v1)
  {
    v4 = v1;
    v2 = objc_msgSend(v1, "isCollapsed");
    v3 = *((_BYTE *)v0 + qword_3DDE68);
    *((_BYTE *)v0 + qword_3DDE68) = v2;
    sub_2351FC(v3);

  }
}

void sub_23D348(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  int v12;
  char *Strong;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  __n128 v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  _BYTE v32[32];
  _QWORD v33[5];
  _QWORD v34[4];
  char v35[24];

  v8 = type metadata accessor for ActionMetricsBehavior(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v14 = Strong;
    if (v12)
    {
      type metadata accessor for ActionRunnerOptions(0);
      v15 = swift_retain(*(_QWORD *)&v14[qword_3DDD98]);
      v16 = BaseObjectGraph.__allocating_init(_:)(v15);
      v34[3] = type metadata accessor for ModernPageViewController(0, a3, a4, v17);
      v34[0] = v14;
      v18 = v14;
      v19 = objc_msgSend(v18, "view");
      sub_D184((uint64_t)v34, (uint64_t)v32, &qword_3D1A70);
      v20 = v19;
      ActionOrigin.init(sender:view:)(v33, v32, v19);
      v21 = ActionRunnerOptions.withActionOrigin(_:)(v33);
      sub_D1D4((uint64_t)v33, (uint64_t *)&unk_3D30E0);

      swift_release(v16);
      sub_D1D4((uint64_t)v34, &qword_3D1A70);
      v23 = static Link.Presentation.textFollowsTintColor.getter(v22);
      v24 = Link.Presentation.init(rawValue:)(0);
      v25 = Link.Presentation.init(rawValue:)(v24);
      if (Link.Presentation.init(rawValue:)(v25 & v23) != v23)
        v24 = Link.Presentation.init(rawValue:)(v24 | v23);
      v26 = type metadata accessor for DismissAction(0);
      swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
      v27 = DismissAction.init(title:animationBehavior:presentationStyle:)(0, 0, 0, v24);
      v33[3] = v26;
      v33[4] = sub_89A0(&qword_3DDF48, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t)&protocol conformance descriptor for Action);
      v33[0] = v27;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for ActionMetricsBehavior.notProcessed(_:), v8);
      v28 = type metadata accessor for PageActionRunner();
      v29 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
      v30 = ActionRunner.perform(_:withMetrics:asPartOf:)(v33, v11, v21, v28, v29);
      swift_release(v21);
      v31 = swift_release(v30);
      (*(void (**)(_BYTE *, uint64_t, __n128))(v9 + 8))(v11, v8, v31);

      __swift_destroy_boxed_opaque_existential_0(v33);
    }
    else
    {

    }
  }
}

void sub_23D600(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  UIViewController_optional v8;

  v5 = a3;
  v6 = a1;
  v8.is_nil = (char)v6;
  v7 = v6;
  v8.value.super.super.isa = (Class)a3;
  ModernPageViewController.didMove(toParent:)(v8);

}

Swift::Void __swiftcall ModernPageViewController.didReceiveMemoryWarning()()
{
  uint64_t *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = *v0;
  v3 = swift_isaMask;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  objc_msgSendSuper2(&v4, "didReceiveMemoryWarning");
  if (*(uint64_t *)((char *)v0 + qword_3DDD90))
    PageRenderController.viewDidReceiveMemoryWarning()();
  dispatch thunk of ViewControllerPresenter.viewDidReceiveMemoryWarning()(*(uint64_t *)((char *)&stru_20.filesize + (v3 & v2)), *(_QWORD *)(*(_QWORD *)((char *)&stru_20.maxprot + (v3 & v2)) + 8));
}

void sub_23D6E0(void *a1)
{
  id v1;

  v1 = a1;
  ModernPageViewController.didReceiveMemoryWarning()();

}

double sub_23D714()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_3DDE08);
  swift_retain(v1);
  MetricsController.observe(lifecycleEvent:)(5);
  swift_release(v1);
  return sub_23C0B8(0x6D61636542707061, 0xEF65766974634165, 0, 0);
}

void sub_23D77C(void *a1)
{
  id v1;

  v1 = a1;
  sub_23D714();

}

uint64_t sub_23D7B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_3DDE08);
  swift_retain(v1);
  MetricsController.observe(lifecycleEvent:)(4);
  return swift_release(v1);
}

void sub_23D7E8(void *a1)
{
  id v1;

  v1 = a1;
  sub_23D7B0();

}

Swift::Void __swiftcall ModernPageViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  char *v2;
  Class isa;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  double v38;
  id v39;
  char v40;
  uint64_t v41;
  objc_super v42;

  v2 = v1;
  isa = a1.value.super.isa;
  v42.receiver = v1;
  v42.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v42, "traitCollectionDidChange:", isa);
  if (isa)
    v4 = -[objc_class horizontalSizeClass](isa, "horizontalSizeClass");
  else
    v4 = 0;
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = objc_msgSend(v5, "horizontalSizeClass");

  if (isa && v4 == v6 || (sub_2353A0(), sub_2386C8(), isa))
    v7 = -[objc_class userInterfaceStyle](isa, "userInterfaceStyle");
  else
    v7 = 0;
  v8 = objc_msgSend(v2, "traitCollection");
  v9 = objc_msgSend(v8, "userInterfaceStyle");

  if (!isa || v7 != v9)
    sub_23B728();
  v10 = *(_QWORD *)&v2[qword_3DDD70];
  ObjectType = swift_getObjectType();
  v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ExpandablePagePresenter);
  if (v12)
    v13 = v10;
  else
    v13 = 0;
  if (v12)
    v14 = v12;
  else
    v14 = 0;
  if (v13)
  {
    v15 = qword_3DDDA0;
    v16 = *(id *)&v2[qword_3DDDA0];
    v17 = objc_msgSend(v2, "traitCollection", swift_unknownObjectRetain(v10).n128_f64[0]);
    v18 = objc_msgSend(v17, "horizontalSizeClass");

    if (v16 == v18)
    {
      swift_unknownObjectRelease(v10);
    }
    else
    {
      if (*(_QWORD *)&v2[v15])
      {
        v19 = swift_getObjectType();
        dispatch thunk of ExpandablePagePresenter.didChangeHorizontalSizeClass()(v19, v14);
      }
      v20 = objc_msgSend(v2, "traitCollection");
      v21 = objc_msgSend(v20, "horizontalSizeClass");

      swift_unknownObjectRelease(v10);
      *(_QWORD *)&v2[v15] = v21;
    }
  }
  v22 = swift_getObjectType();
  v23 = swift_conformsToProtocol2(v22, &protocol descriptor for InterfaceModeAwarePresenter);
  if (v23)
    v24 = v23;
  else
    v24 = 0;
  if (v23)
    v25 = v10;
  else
    v25 = 0;
  if (v25)
  {
    v26 = qword_3DDDD0;
    v27 = v2[qword_3DDDD0];
    v28 = objc_msgSend(v2, "traitCollection", swift_unknownObjectRetain(v10).n128_f64[0]);
    v29 = UITraitCollection.interfaceMode.getter();

    v30 = v29 & 1;
    v31 = InterfaceMode.rawValue.getter(v27);
    v33 = v32;
    v35 = InterfaceMode.rawValue.getter(v30);
    v36 = v34;
    if (v31 == v35 && v33 == v34)
    {
      swift_unknownObjectRelease(v10);
      swift_bridgeObjectRelease_n(v33, 2);
    }
    else
    {
      v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v35, v34, 0);
      swift_bridgeObjectRelease(v33);
      *(_QWORD *)&v38 = swift_bridgeObjectRelease(v36).n128_u64[0];
      if ((v37 & 1) == 0)
      {
        v39 = objc_msgSend(v2, "traitCollection", v38);
        v40 = UITraitCollection.interfaceMode.getter();

        v2[v26] = v40 & 1;
        v41 = swift_getObjectType();
        dispatch thunk of InterfaceModeAwarePresenter.didTransition(to:)(v40 & 1, v41, v24);
      }
      swift_unknownObjectRelease(v10);
    }
  }
}

void sub_23DB34(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  UITraitCollection_optional v8;

  v5 = a3;
  v6 = a1;
  v8.is_nil = (char)v6;
  v7 = v6;
  v8.value.super.isa = (Class)a3;
  ModernPageViewController.traitCollectionDidChange(_:)(v8);

}

uint64_t sub_23DB8C(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "traitCollection");
  v3 = objc_msgSend(v2, "horizontalSizeClass");

  return HeaderButtonItem.prefersLargeTitleAccessoryView(horizontalSizeClass:)(v3) & 1;
}

void sub_23DBF8(void *a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "collectionView");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setEditing:", a2 & 1);

  }
  else
  {
    __break(1u);
  }
}

void sub_23DC50(void *a1, uint64_t a2, Swift::Bool a3, Swift::Bool a4)
{
  id v6;

  v6 = a1;
  ModernPageViewController.setEditing(_:animated:)(a3, a4);

}

void sub_23DC98(void *a1)
{
  id v1;

  v1 = a1;
  sub_23D2DC();

}

uint64_t ModernPageViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  objc_super v17;
  _QWORD v18[3];
  uint64_t v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = static MenuSelectors.refreshCommand.getter();
  if ((static Selector.== infix(_:_:)(a1, v6) & 1) != 0)
  {
    v7 = sub_23DE10();
    if ((static RefreshControls.== infix(_:_:)(v7, 0) & 1) == 0)
      return 1;
  }
  sub_D184(a2, (uint64_t)v18, &qword_3D1A70);
  v8 = v19;
  if (v19)
  {
    v9 = __swift_project_boxed_opaque_existential_1(v18, v19);
    v10 = *(_QWORD *)(v8 - 8);
    v11 = __chkstk_darwin(v9);
    v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
    v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v8);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
    __swift_destroy_boxed_opaque_existential_0(v18);
  }
  else
  {
    v14 = 0;
  }
  v17.receiver = v2;
  v17.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v17, "canPerformAction:withSender:", a1, v14);
  swift_unknownObjectRelease(v14);
  return (uint64_t)v15;
}

uint64_t sub_23DE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + qword_3DDD70);
  ObjectType = swift_getObjectType();
  v3 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for RefreshablePresenter);
  if (v3)
    v4 = v3;
  else
    v4 = 0;
  if (!v3)
    v1 = 0;
  if (!v1)
    return 0;
  v5 = swift_getObjectType();
  v6 = dispatch thunk of RefreshablePresenter.refreshControls.getter(v5, v4);
  CurrentValueSubject.value.getter(&v8);
  swift_release(v6);
  return v8;
}

uint64_t sub_23DE90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  __n128 v8;
  uint64_t v9;
  id v10;
  char v11;
  _OWORD v13[2];

  if (a4)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a4);
    _bridgeAnyObjectToAny(_:)(v13, v9, v8);
    swift_unknownObjectRelease(a4);
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    v10 = a1;
  }
  v11 = ModernPageViewController.canPerformAction(_:withSender:)(a3, (uint64_t)v13);

  sub_D1D4((uint64_t)v13, &qword_3D1A70);
  return v11 & 1;
}

Swift::Void __swiftcall ModernPageViewController.validate(_:)(UICommand a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  void *object;
  NSString v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  NSString v26;
  NSString v27;
  objc_super v28;
  Swift::String v29;
  Swift::String v30;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = -[objc_class action](a1.super.super.isa, "action");
  v5 = static MenuSelectors.refreshCommand.getter();
  if ((static Selector.== infix(_:_:)(v4, v5) & 1) == 0
    || (v6 = sub_23DE10(), (static RefreshControls.== infix(_:_:)(v6, 0) & 1) != 0))
  {
    v28.receiver = v1;
    v28.super_class = ObjectType;
    objc_msgSendSuper2(&v28, "validateCommand:", a1.super.super.isa);
    return;
  }
  v7 = sub_23DE10();
  if ((static RefreshControls.== infix(_:_:)(v7, 2) & 1) != 0)
  {
    v8 = (void *)objc_opt_self(NSBundle);
    v9 = objc_msgSend(v8, "mainBundle");
    v29._object = (void *)0xAD0000A680E2676ELL;
    v10._countAndFlagsBits = 0xD000000000000022;
    v10._object = (void *)0x80000000003164F0;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v29._countAndFlagsBits = 0x6968736572666552;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v29)._object;

    v13 = String._bridgeToObjectiveC()();
    -[objc_class setTitle:](a1.super.super.isa, "setTitle:", v13, swift_bridgeObjectRelease(object).n128_f64[0]);

    v14 = objc_msgSend(v8, "mainBundle");
    v30._object = (void *)0xAD0000A680E2676ELL;
    v15._countAndFlagsBits = 0xD000000000000022;
    v15._object = (void *)0x80000000003164F0;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v30._countAndFlagsBits = 0x6968736572666552;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v30)._object;

    v27 = String._bridgeToObjectiveC()();
    v18 = v17;
LABEL_14:
    -[objc_class setDiscoverabilityTitle:](a1.super.super.isa, "setDiscoverabilityTitle:", v27, swift_bridgeObjectRelease(v18).n128_f64[0]);

    return;
  }
  v19 = *(_QWORD *)&v1[qword_3DDD70];
  v20 = swift_getObjectType();
  v21 = swift_conformsToProtocol2(v20, &protocol descriptor for RefreshablePresenter);
  if (v21)
    v22 = v21;
  else
    v22 = 0;
  if (!v21)
    v19 = 0;
  if (v19)
  {
    v23 = swift_getObjectType();
    dispatch thunk of RefreshablePresenter.refreshCommandTitle.getter(v23, v22);
    v25 = v24;
    v26 = String._bridgeToObjectiveC()();
    -[objc_class setTitle:](a1.super.super.isa, "setTitle:", v26);

    v27 = String._bridgeToObjectiveC()();
    v18 = v25;
    goto LABEL_14;
  }
}

void sub_23E1A8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  ModernPageViewController.validate(_:)((UICommand)v4);

}

double sub_23E200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + qword_3DDD70);
  ObjectType = swift_getObjectType();
  v3 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for RefreshablePresenter);
  if (v3)
    v5 = v1;
  else
    v5 = 0;
  if (v3)
    v6 = v3;
  else
    v6 = 0;
  if (v5)
  {
    v7 = swift_getObjectType();
    swift_unknownObjectRetain(v1);
    v8 = dispatch thunk of RefreshablePresenter.refreshControls.getter(v7, v6);
    CurrentValueSubject.value.getter(&v11);
    swift_release(v8);
    if ((static RefreshControls.== infix(_:_:)(v11, 1) & 1) != 0)
    {
      v9 = dispatch thunk of RefreshablePresenter.refreshControls.getter(v7, v6);
      v10 = 2;
      CurrentValueSubject.send(_:)(&v10);
      swift_release(v9);
      dispatch thunk of RefreshablePresenter.reload()(v7, v6);
    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v1).n128_u64[0];
  }
  return result;
}

void sub_23E2EC(void *a1)
{
  id v1;

  v1 = a1;
  sub_23E1FC();

}

void sub_23E320()
{
  char *v0;
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[4];

  v1 = v0;
  v50[2] = *(_QWORD *)v0;
  v50[1] = swift_isaMask;
  v2 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = qword_3DDD98;
  v11 = *(_QWORD *)&v0[qword_3DDD98];
  v12 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = swift_retain(v11);
  v14 = ClickLocationTracker.init()(v13);
  v54[0] = v14;
  v50[0] = v12;
  v15 = BaseObjectGraph.satisfying<A>(_:with:)(v12, v54, v12);
  v16 = swift_retain(v14);
  v17 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_2419C8, v14, v16);
  swift_release(v11);
  swift_release(v15);
  v18 = swift_release_n(v14, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v18);
  v19 = BaseObjectGraph.addingImpressionsTracker(with:)(v9);
  v20 = swift_release(v17);
  v21 = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v20);
  static ImpressionsCalculator.Configuration.half.getter(v21);
  v22 = BaseObjectGraph.addingImpressionsCalculator(with:)(v5);
  v23 = swift_release(v19);
  (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v5, v52, v23);
  v24 = type metadata accessor for MetricsController(0);
  v25 = BaseObjectGraph.satisfying<A>(_:with:)(v24, sub_2356FC, 0, v24);
  swift_release(v22);
  v26 = *(_QWORD *)&v1[v10];
  *(_QWORD *)&v1[v10] = v25;
  swift_release(v26);
  v27 = *(_QWORD *)&v1[v10];
  v28 = type metadata accessor for DynamicImpressionsCalculator(0);
  swift_retain(v27);
  BaseObjectGraph.inject<A>(_:)(v54, v28, v28);
  swift_release(v27);
  v29 = qword_3DDE38;
  v30 = *(_QWORD *)&v1[qword_3DDE38];
  *(_QWORD *)&v1[qword_3DDE38] = v54[0];
  swift_release(v30);
  v31 = *(_QWORD *)&v1[v29];
  v32 = objc_msgSend(v1, "collectionView", swift_retain(v31).n128_f64[0]);
  if (v32)
  {
    v33 = v32;
    objc_msgSend(v32, "bounds");

    DynamicImpressionsCalculator.viewBounds.setter(v34);
    swift_release(v31);
    v35 = *(_QWORD *)&v1[v10];
    swift_retain(v35);
    BaseObjectGraph.inject<A>(_:)(v54, v24, v24);
    swift_release(v35);
    v36 = *(_QWORD *)&v1[qword_3DDE08];
    *(_QWORD *)&v1[qword_3DDE08] = v54[0];
    swift_release(v36);
    v37 = &v1[qword_3DDD68];
    swift_beginAccess(&v1[qword_3DDD68], v54, 0, 0);
    v38 = *(_QWORD **)v37;
    if (*(_QWORD *)v37)
    {
      v39 = *(_QWORD *)&v1[v10];
      v40 = v38[2];
      v38[2] = v39;
      swift_retain_n(v39, 2);
      swift_retain(v38);
      swift_release(v40);
      BaseObjectGraph.inject<A>(_:)(&v53, v50[0], v50[0]);
      v41 = v38[7];
      v38[7] = v53;
      swift_release(v41);
      BaseObjectGraph.inject<A>(_:)(&v53, v28, v28);
      v42 = v38[6];
      v38[6] = v53;
      swift_release(v38);
      swift_release(v39);
      swift_release(v42);
    }
    v43 = *(_QWORD *)&v1[v10];
    swift_retain(v43);
    ShelvesDelegate.dependenciesDidChange(_:)(v44);
    swift_release(v43);
    v45 = *(_QWORD *)&v1[qword_3DDDA8];
    v46 = *(_QWORD *)&v1[v10];
    v47 = *(_QWORD *)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph);
    *(_QWORD *)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph) = v46;
    swift_retain(v46);
    swift_release(v47);
    v48 = *(_QWORD *)&v1[v10];
    v49 = swift_retain(v48);
    dispatch thunk of ModernPagePresenter.dependenciesDidChange(_:)(v49);
    swift_release(v48);
  }
  else
  {
    __break(1u);
  }
}

id ModernPageViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCollectionViewLayout:", a1);

  return v3;
}

void ModernPageViewController.init(collectionViewLayout:)()
{
  sub_2410D0();
}

void sub_23E7A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_2410D0();
}

void ModernPageViewController.init(nibName:bundle:)()
{
  sub_2410FC();
}

void sub_23E7F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_2410FC();
}

uint64_t sub_23E834(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  swift_release(*(_QWORD *)(a1 + qword_3DDD98));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_3DDD70));
  swift_release(*(_QWORD *)(a1 + qword_3DDE38));
  swift_release(*(_QWORD *)(a1 + qword_3DDE08));
  swift_release(*(_QWORD *)(a1 + qword_3DDE40));
  swift_release(*(_QWORD *)(a1 + qword_3DDDA8));

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + qword_3DDE48));
  swift_release(*(_QWORD *)(a1 + qword_3DDD68));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_3DDE50));

  v2 = a1 + qword_3FD5D8;
  v3 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_3DDD80));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_3DDE28));
  sub_91F0C(*(_QWORD *)(a1 + qword_3DDD78));

  swift_release(*(_QWORD *)(a1 + qword_3DDD90));
  v4 = a1 + qword_3DDE58;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_D1D4(a1 + qword_3DDE60, &qword_3DDF40);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_3FD5E0));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_3DDDF8));
  sub_D1D4(a1 + qword_3DDE78, &qword_3D2FF0);
  sub_FA4C(a1 + qword_3DDDB8, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);

  swift_release(*(_QWORD *)(a1 + qword_3DDE88));
  v6 = *(void **)(a1 + qword_3FD5E8 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_3FD5E8 + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_3DDE90));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_3DDE98 + 8));
  return sub_D1D4(a1 + qword_3DDDC0, (uint64_t *)&unk_3D2E90);
}

uint64_t sub_23EA80@<X0>(uint64_t a1@<X8>)
{
  return ModernPageViewController.pageHeaderHint.getter(a1);
}

uint64_t sub_23EAA0(uint64_t a1)
{
  return ModernPageViewController.pageHeaderHint.setter(a1);
}

void (*sub_23EAC0(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ModernPageViewController.pageHeaderHint.modify((uint64_t)v2);
  return sub_919A8;
}

void (*sub_23EB10(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)ModernPageViewController.navigationTabIdentifier.modify(v2);
  return sub_919A8;
}

double sub_23EB54()
{
  uint64_t v0;
  double result;

  v0 = sub_23F63C();
  *(_QWORD *)&result = swift_bridgeObjectRetain(v0).n128_u64[0];
  return result;
}

double sub_23EB74(uint64_t a1)
{
  return ModernPageViewController.representedFlowDestinations.setter(a1);
}

uint64_t sub_23EB94@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char **a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  objc_class *v12;
  id v13;
  char *v14;
  uint64_t result;
  Swift::String v16;
  __int128 v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v19 = *a1;
  v7 = v19;
  v8 = type metadata accessor for PageExtension(0);
  swift_retain(v19);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDFB8);
  if (swift_dynamicCast(v17, &v19, v8, v9, 6))
  {
    sub_1B738(v17, (uint64_t)&v20);
    v10 = *__swift_project_boxed_opaque_existential_1(&v20, v22);
    v11 = objc_msgSend(a2, "navigationItem", swift_retain(v10).n128_f64[0]);
    v12 = (objc_class *)type metadata accessor for SearchExtensionHelper();
    v13 = objc_allocWithZone(v12);
    swift_retain(a3);
    v14 = sub_1661FC(v10, v11, a3);
    a4[3] = (char *)v12;
    *a4 = v14;
    return __swift_destroy_boxed_opaque_existential_0(&v20);
  }
  else
  {
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_D1D4((uint64_t)v17, &qword_3DDFC0);
    v20 = 0;
    v21 = 0xE000000000000000;
    swift_retain(v7);
    _StringGuts.grow(_:)(101);
    *(_QWORD *)&v17[0] = v7;
    _print_unlocked<A, B>(_:_:)(v17, &v20, v8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v16._object = (void *)0x8000000000316810;
    v16._countAndFlagsBits = 0xD000000000000063;
    String.append(_:)(v16);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v20, v21, "ShelfKitCollectionViews/ModernPageViewController.swift", 54, 2, 1111, 0);
    __break(1u);
  }
  return result;
}

void sub_23ED58(unsigned __int8 *a1, uint64_t a2, char a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  int v10;
  uint64_t v11;
  void *Strong;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  __int128 v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  char v41[24];

  v10 = *a1;
  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v41, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
  if (!Strong)
    return;
  v13 = Strong;
  if ((a3 & 1) == 0)
  {
    v28 = a6 + 16;
    if (v10)
    {
      swift_beginAccess(v28, &v36, 0, 0);
      if (*(_QWORD *)(a6 + 40))
      {
        sub_1D5D4(a6 + 16, (uint64_t)v38);
        v29 = v39;
        v30 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
LABEL_16:

LABEL_17:
        __swift_destroy_boxed_opaque_existential_0(v38);
        return;
      }
    }
    else
    {
      swift_beginAccess(v28, &v36, 0, 0);
      if (*(_QWORD *)(a6 + 40))
      {
        sub_1D5D4(a6 + 16, (uint64_t)v38);
        v31 = v39;
        v32 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        (*(void (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
        goto LABEL_16;
      }
    }

    return;
  }
  v14 = Strong;
  v15 = objc_msgSend(v14, "navigationController");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "navigationBar");

    if ((v10 & 1) != 0)
    {
      v18 = a4[3];
      v19 = a4[4];
      __swift_project_boxed_opaque_existential_1(a4, v18);
      (*(void (**)(__int128 *__return_ptr, id, _UNKNOWN **, char *, uint64_t, uint64_t, uint64_t))(v19 + 24))(&v36, v17, &protocol witness table for UINavigationBar, v14, a5, v18, v19);
      if (v37)
      {
        sub_1B738(&v36, (uint64_t)v38);
        v20 = v39;
        v21 = __swift_project_boxed_opaque_existential_1(v38, v39);
        v37 = v20;
        v22 = __swift_allocate_boxed_opaque_existential_0(&v36);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v22, v21, v20);
        v23 = &v14[qword_3DDE50];
        swift_beginAccess(&v14[qword_3DDE50], v35, 33, 0);
        v24 = *(_QWORD **)v23;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v23);
        *(_QWORD *)v23 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v24 = sub_20F184(0, v24[2] + 1, 1, v24);
          *(_QWORD *)v23 = v24;
        }
        v27 = v24[2];
        v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          v24 = sub_20F184((_QWORD *)(v26 > 1), v27 + 1, 1, v24);
          *(_QWORD *)v23 = v24;
        }
        v24[2] = v27 + 1;
        sub_1D65C(&v36, &v24[4 * v27 + 4]);
        swift_endAccess(v35);

        goto LABEL_17;
      }

      sub_D1D4((uint64_t)&v36, &qword_3DDF90);
    }
    else
    {
      v33 = a4[3];
      v34 = a4[4];
      __swift_project_boxed_opaque_existential_1(a4, v33);
      (*(void (**)(id, _UNKNOWN **, uint64_t, uint64_t))(v34 + 40))(v17, &protocol witness table for UINavigationBar, v33, v34);

    }
  }
  else
  {

  }
}

id sub_23F048()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;

  v1 = objc_msgSend(v0, "collectionView");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "refreshControl");
  if (v3)
  {
    v4 = v3;
  }
  else
  {
    v4 = sub_23F10C();
    objc_msgSend(v2, "setRefreshControl:", v4);
    v5 = objc_msgSend(v2, "refreshControl");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v2, "bringSubviewToFront:", v5);

      return v4;
    }
  }

  return v4;
}

id sub_23F10C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  void *v17;

  v1 = v0;
  v2 = *v0;
  v3 = swift_isaMask;
  v4 = *(_QWORD *)((char *)v0 + qword_3DDD70);
  ObjectType = swift_getObjectType();
  v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for RefreshablePresenter);
  if (v6)
    v7 = v6;
  else
    v7 = 0;
  if (v6)
    v8 = v4;
  else
    v8 = 0;
  if (!v8)
    return 0;
  v9 = swift_getObjectType();
  v10 = swift_unknownObjectRetain(v4);
  if ((dispatch thunk of RefreshablePresenter.supportsPullToRefresh.getter(v9, v7, v10) & 1) == 0)
  {
    swift_unknownObjectRelease(v4);
    return 0;
  }
  v11 = v3 & v2;
  v12 = objc_msgSend(objc_allocWithZone((Class)UIRefreshControl), "init");
  sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
  v13 = swift_allocObject(&unk_38D420, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v12);
  v14 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v1);
  v15 = (_QWORD *)swift_allocObject(&unk_38D448, 48, 7);
  v15[2] = *(_QWORD *)(v11 + 80);
  v15[3] = *(_QWORD *)(v11 + 88);
  v15[4] = v13;
  v15[5] = v14;
  v17 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v16, 0, 0, 0, sub_24184C, v15);
  objc_msgSend(v12, "addAction:forControlEvents:", v17, 4096);
  swift_unknownObjectRelease(v4);

  return v12;
}

void sub_23F2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE v12[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "isRefreshing");

    if (v7)
    {
      v8 = a3 + 16;
      swift_beginAccess(v8, &v11, 0, 0);
      v9 = swift_unknownObjectWeakLoadStrong(v8);
      if (v9)
      {
        v10 = (void *)v9;
        sub_23E200();

      }
    }
  }
}

double ModernPageViewController.actionRunner.getter()
{
  uint64_t v0;
  double result;

  v0 = sub_23F680();
  *(_QWORD *)&result = swift_unknownObjectRetain(v0).n128_u64[0];
  return result;
}

Swift::Void __swiftcall ModernPageViewController.handleNavigationPop(willScrollToTop:)(Swift::Bool willScrollToTop)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  Class isa;
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!willScrollToTop)
  {
    v8 = objc_msgSend(v2, "collectionView");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "numberOfSections");

      if ((uint64_t)v10 < 1)
        return;
      v11 = objc_msgSend(v2, "collectionView");
      if (v11)
      {
        v12 = v11;
        v13 = objc_msgSend(v11, "numberOfItemsInSection:", 0);

        if ((uint64_t)v13 < 1)
          return;
        v14 = objc_msgSend(v2, "collectionView");
        if (v14)
        {
          v15 = v14;
          IndexPath.init(item:section:)(0, 0);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          objc_msgSend(v15, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 0, 1);

          return;
        }
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

void sub_23F4F8(Swift::Bool a1)
{
  ModernPageViewController.handleNavigationPop(willScrollToTop:)(a1);
}

uint64_t sub_23F518@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23506C();
  *a1 = result;
  return result;
}

uint64_t sub_23F540(char *a1)
{
  return sub_235104(*a1);
}

uint64_t sub_23F564(uint64_t a1, _QWORD *a2)
{
  return sub_23F58C(a1, a2, &qword_3DDF60, (void (*)(__n128))&static MetricsFieldsContext.Property<A>.clickLocationTracker.getter);
}

uint64_t sub_23F578(uint64_t a1, _QWORD *a2)
{
  return sub_23F58C(a1, a2, &qword_3DDFC8, (void (*)(__n128))&static MetricsFieldsContext.Property<A>.searchFiltersSource.getter);
}

uint64_t sub_23F58C(uint64_t a1, _QWORD *a2, uint64_t *a3, void (*a4)(__n128))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  _QWORD *v14;

  v6 = *a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2;
  a4(v9);
  MetricsFieldsContext.addValue<A>(_:forProperty:)(&v14, v11, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_23F63C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + qword_3FD5E0;
  swift_beginAccess(v0 + qword_3FD5E0, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_23F680()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_3DDE40);
  sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  return v1;
}

void *sub_23F6C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  id v90;
  id v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  objc_class *v121;
  double v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  id v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __n128 v149;
  uint64_t v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char *v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  __n128 v164;
  objc_class *v165;
  char *v166;
  __n128 v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  void *v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  __n128 v179;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t AssociatedTypeWitness;
  char *v200;
  objc_class *ObjectType;
  uint64_t v202;
  uint64_t v203;
  id v204;
  _QWORD v205[3];
  objc_super v206;
  __int128 v207[2];
  uint64_t v208;

  v202 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = swift_isaMask & *v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v196 = *(_QWORD *)(v5 - 8);
  v197 = v5;
  __chkstk_darwin(v5);
  v195 = (char *)&v181 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v7);
  v191 = (char *)&v181 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v193 = *(_QWORD *)(v194 - 8);
  __chkstk_darwin(v194);
  v192 = (char *)&v181 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  __chkstk_darwin(v10);
  v200 = (char *)&v181 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v4 + 80);
  v203 = *(_QWORD *)(v4 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v203);
  v188 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v185 = (char *)&v181 - v13;
  v187 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v186 = *(_QWORD *)(v187 - 8);
  v14 = __chkstk_darwin(v187);
  v182 = (char *)&v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v14);
  v183 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v17 = (char *)&v181 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v181 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v2 + qword_3DDD68) = 0;
  *(_QWORD *)((char *)v2 + qword_3DDE50) = _swiftEmptyArrayStorage;
  *(_QWORD *)((char *)v2 + qword_3DDE20) = 0;
  v22 = (char *)v2 + qword_3FD5D8;
  v23 = enum case for FlowDestinationPageHeader.standard(_:);
  v24 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  v25 = (_QWORD *)((char *)v2 + qword_3DDD80);
  *v25 = 0;
  v25[1] = 0;
  *(_QWORD *)((char *)v2 + qword_3DDD78) = 18;
  *(_QWORD *)((char *)v2 + qword_3DDDC8) = 0;
  v26 = (char *)v2 + qword_3DDE58;
  v27 = v2;
  LOBYTE(v207[0]) = 0;
  Published.init(initialValue:)(v207, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v26, v21, v18);
  *((_BYTE *)v27 + qword_3DDE00) = 0;
  v28 = (char *)v27 + qword_3DDE60;
  v29 = type metadata accessor for InteractionContext.Page(0);
  v30.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *((_BYTE *)v27 + qword_3DDE68) = 1;
  *(_QWORD *)((char *)v27 + qword_3DDE70) = 0;
  *(_QWORD *)((char *)v27 + qword_3FD5E0) = _swiftEmptyArrayStorage;
  *(_QWORD *)((char *)v27 + qword_3DDDF8) = _swiftEmptyArrayStorage;
  v31 = (char *)v27 + qword_3DDE78;
  v32 = type metadata accessor for PageID(0, v30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v33 = (char *)v27 + qword_3DDDB8;
  *((_BYTE *)v27 + qword_3DDDB8) = 0;
  v34 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v33, v34, 0);
  *(_QWORD *)((char *)v27 + qword_3FD5F0) = 0;
  *(_QWORD *)((char *)v27 + qword_3DDE80) = 0x3FE0000000000000;
  *(_QWORD *)((char *)v27 + qword_3DDE88) = 0;
  v35 = (_QWORD *)((char *)v27 + qword_3FD5E8);
  v35[1] = 0;
  v35[2] = 0;
  *v35 = 0;
  *(_QWORD *)((char *)v27 + qword_3DDE90) = 0;
  v36 = (char *)v27 + qword_3DDE98;
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = 1;
  v37 = (char *)v27 + qword_3DDDC0;
  v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v40 = type metadata accessor for Header(0, v39);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v37, 1, 1, v40);
  v37[v38] = 1;
  *((_BYTE *)v27 + qword_3DDE30) = 0;
  *(_QWORD *)((char *)v27 + qword_3DDDA0) = 0;
  *((_BYTE *)v27 + qword_3DDDD0) = 0;
  v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(v207, v41, v41);
  *(_OWORD *)((char *)v27 + qword_3DDE28) = v207[0];
  v42 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v207, v42, v42);
  *(_QWORD *)((char *)v27 + qword_3DDD90) = *(_QWORD *)&v207[0];
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(v207, v43, v43);
  sub_1B738(v207, (uint64_t)v27 + qword_3DDE48);
  v44 = type metadata accessor for PageActionRunner();
  v45 = swift_allocObject(v44, 40, 7);
  swift_unknownObjectWeakInit(v45 + 16, 0);
  *(_QWORD *)(v45 + 24) = 0;
  *(_QWORD *)(v45 + 32) = 0;
  *(_QWORD *)((char *)v27 + qword_3DDE40) = v45;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v47 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  *(_QWORD *)&v207[0] = v45;
  *((_QWORD *)&v207[0] + 1) = v47;
  v190 = v45;
  swift_retain(v45);
  v198 = a1;
  v48 = BaseObjectGraph.satisfying<A>(_:with:)(v46, v207, v46);
  v49 = type metadata accessor for FreezableContentSubject(0);
  v189 = (id)objc_opt_self(NSNotificationCenter);
  v50 = objc_msgSend(v189, "defaultCenter");
  swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
  v51 = FreezableContentSubject.init(notificationCenter:)(v50);
  *(_QWORD *)&v207[0] = v51;
  v52 = BaseObjectGraph.satisfying<A>(_:with:)(v49, v207, v49);
  swift_release(v51);
  swift_release(v48);
  v53 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
  v55 = ClickLocationTracker.init()(v54);
  *(_QWORD *)&v207[0] = v55;
  v56 = BaseObjectGraph.satisfying<A>(_:with:)(v53, v207, v53);
  v57 = swift_retain(v55);
  v58 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_2419C8, v55, v57);
  swift_release(v52);
  swift_release(v56);
  v59 = swift_release_n(v55, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v59);
  v60 = BaseObjectGraph.addingImpressionsTracker(with:)(v17);
  v61 = swift_release(v58);
  v62 = (*(uint64_t (**)(char *, uint64_t, __n128))(v183 + 8))(v17, v184, v61);
  v63 = v182;
  static ImpressionsCalculator.Configuration.half.getter(v62);
  v64 = BaseObjectGraph.addingImpressionsCalculator(with:)(v63);
  v65 = swift_release(v60);
  (*(void (**)(char *, uint64_t, __n128))(v186 + 8))(v63, v187, v65);
  v66 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
  v67 = SearchFiltersSource.init()();
  *(_QWORD *)&v207[0] = v67;
  v68 = BaseObjectGraph.satisfying<A>(_:with:)(v66, v207, v66);
  v69 = swift_retain(v67);
  v70 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_241B20, v67, v69);
  swift_release(v64);
  swift_release(v68);
  swift_release_n(v67, 2);
  v71 = type metadata accessor for MetricsController(0);
  v72 = BaseObjectGraph.satisfying<A>(_:with:)(v71, sub_2356FC, 0, v71);
  swift_release(v70);
  v73 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(v207, v73, v73);
  *(_QWORD *)((char *)v27 + qword_3DDE38) = *(_QWORD *)&v207[0];
  BaseObjectGraph.inject<A>(_:)(v207, v71, v71);
  *(_QWORD *)((char *)v27 + qword_3DDE08) = *(_QWORD *)&v207[0];
  *(_QWORD *)((char *)v27 + qword_3DDD98) = v72;
  v74 = v185;
  (*(void (**)(char *, uint64_t, uint64_t))(v188 + 16))(v185, v202, AssociatedTypeWitness);
  v75 = swift_retain_n(v72, 2);
  v76 = v203;
  v77 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v75, v74, v12, v203);
  *(_QWORD *)((char *)v27 + qword_3DDD70) = v77;
  v78 = swift_unknownObjectRetain(v77);
  v79 = (uint64_t)v200;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v12, v76, v78);
  v80 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v12, v76);
  LOBYTE(v67) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v12, v76);
  LOBYTE(v68) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v12, v76);
  v81 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v81, *(unsigned int *)(v81 + 48), *(unsigned __int16 *)(v81 + 52));
  swift_retain(v72);
  v82 = sub_39E0C(v79, v80, v67 & 1, v68 & 1, v72);
  swift_release(v72);
  swift_release(v80);
  *(_QWORD *)((char *)v27 + qword_3DDDA8) = v82;
  v205[0] = v77;
  v83 = v77;
  swift_unknownObjectRetain(v77);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EB8);
  v85 = v12;
  if ((swift_dynamicCast(v207, v205, v12, v84, 6) & 1) == 0)
  {
    v208 = 0;
    memset(v207, 0, sizeof(v207));
  }
  v86 = v83;
  v87 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v85, v76);
  v88 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  swift_retain(v72);
  v90 = sub_E2290(v89, (uint64_t)v207, v87);
  swift_release(v72);
  swift_release(v87);
  *(_QWORD *)((char *)v27 + qword_3DDDB0) = v90;

  v91 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v206.receiver = v27;
  v206.super_class = ObjectType;
  v92 = (char *)objc_msgSendSuper2(&v206, "initWithCollectionViewLayout:", v91);

  v93 = *(_QWORD *)&v92[qword_3DDE40];
  swift_unknownObjectWeakAssign(v93 + 16, v92);
  v94 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v94 + 16, v92);
  v95 = (_QWORD *)swift_allocObject(&unk_38D588, 40, 7);
  v95[2] = v85;
  v95[3] = v76;
  v95[4] = v94;
  v96 = *(_QWORD *)(v93 + 24);
  v97 = *(_QWORD *)(v93 + 32);
  *(_QWORD *)(v93 + 24) = sub_241B48;
  *(_QWORD *)(v93 + 32) = v95;
  v98 = v92;
  sub_1D618(v96, v97);
  *(_QWORD *)&v207[0] = dispatch thunk of ModernPagePresenter.pageContent.getter(v85, v76);
  v99 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v99 + 16, v98);
  v100 = (_QWORD *)swift_allocObject(&unk_38D5B0, 40, 7);
  v100[2] = v85;
  v100[3] = v76;
  v100[4] = v99;
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_241B54, v100, v101, v102);
  swift_release(v100);
  swift_release(*(_QWORD *)&v207[0]);
  v104 = &v98[qword_3DDDF8];
  v105 = v98;
  AssociatedTypeWitness = (uint64_t)v98;
  swift_beginAccess(&v98[qword_3DDDF8], v207, 33, 0);
  v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v107 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  v200 = (char *)v106;
  ObjectType = (objc_class *)v107;
  AnyCancellable.store<A>(in:)(v104, v106, v107);
  swift_endAccess(v207);
  v108 = swift_release(v103);
  v202 = v86;
  v181 = v85;
  v109 = v203;
  v110 = dispatch thunk of ModernPagePresenter.pageRender.getter(v85, v203, v108);
  v112 = v111;
  v113 = swift_getObjectType();
  v188 = v72;
  v114 = v113;
  *(_QWORD *)&v207[0] = v110;
  v115 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v115 + 16, v105);
  v116 = (_QWORD *)swift_allocObject(&unk_38D5D8, 40, 7);
  v116[2] = v85;
  v116[3] = v109;
  v117 = v109;
  v116[4] = v115;
  v118 = Publisher<>.sink(receiveValue:)(sub_241B84, v116, v114, *(_QWORD *)(v112 + 8));
  swift_release(v116);
  swift_unknownObjectRelease(*(_QWORD *)&v207[0]);
  swift_beginAccess(v104, v207, 33, 0);
  v119 = v104;
  v120 = v104;
  v121 = ObjectType;
  AnyCancellable.store<A>(in:)(v119, v106, ObjectType);
  swift_endAccess(v207);
  *(_QWORD *)&v122 = swift_release(v118).n128_u64[0];
  v123 = objc_msgSend(v189, "defaultCenter", v122);
  v124 = AssociatedTypeWitness;
  objc_msgSend(v123, "addObserver:selector:name:object:", AssociatedTypeWitness, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  v125 = v181;
  *(_QWORD *)&v207[0] = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v181, v117);
  v126 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v126 + 16, v124);
  v127 = (_QWORD *)swift_allocObject(&unk_38D600, 40, 7);
  v127[2] = v125;
  v127[3] = v117;
  v128 = v125;
  v129 = v117;
  v127[4] = v126;
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v131 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v132 = Publisher<>.sink(receiveValue:)(sub_241B90, v127, v130, v131);
  swift_release(v127);
  swift_release(*(_QWORD *)&v207[0]);
  swift_beginAccess(v120, v207, 33, 0);
  v133 = v200;
  AnyCancellable.store<A>(in:)(v120, v200, v121);
  swift_endAccess(v207);
  swift_release(v132);
  v134 = qword_3DDDB0;
  v135 = *(id *)(v124 + qword_3DDDB0);
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v136 = (uint64_t *)(*(_QWORD *)(v124 + v134)
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v136, v207, 0, 0);
  v137 = *v136;
  v205[0] = v137;
  v138 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v138 + 16, v124);
  v139 = (_QWORD *)swift_allocObject(&unk_38D628, 40, 7);
  v140 = v128;
  v139[2] = v128;
  v139[3] = v129;
  v139[4] = v138;
  swift_retain(v137);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v142 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v143 = Publisher<>.sink(receiveValue:)(sub_241B9C, v139, v141, v142);
  swift_release(v139);
  swift_release(v205[0]);
  swift_beginAccess(v120, v205, 33, 0);
  AnyCancellable.store<A>(in:)(v120, v133, v121);
  swift_endAccess(v205);
  swift_release(v143);
  v205[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v128, v129);
  v144 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v124);
  v145 = (_QWORD *)swift_allocObject(&unk_38D650, 40, 7);
  v145[2] = v128;
  v145[3] = v129;
  v145[4] = v144;
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v147 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v148 = Publisher<>.sink(receiveValue:)(sub_241BA8, v145, v146, v147);
  swift_release(v145);
  swift_release(v205[0]);
  swift_beginAccess(v120, v205, 33, 0);
  AnyCancellable.store<A>(in:)(v120, v133, v121);
  swift_endAccess(v205);
  v149 = swift_release(v148);
  v205[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v128, v129, v149);
  v150 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v204 = (id)static OS_dispatch_queue.main.getter(v151);
  v152 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v153 = (uint64_t)v191;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v191, 1, 1, v152);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v155 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v156 = sub_1E2DC();
  v157 = v192;
  Publisher.receive<A>(on:options:)(&v204, v153, v154, v150, v155, v156);
  sub_D1D4(v153, &qword_3D2E70);

  swift_release(v205[0]);
  v158 = swift_allocObject(&unk_38CF50, 24, 7);
  swift_unknownObjectWeakInit(v158 + 16, v124);
  v159 = (_QWORD *)swift_allocObject(&unk_38D678, 40, 7);
  v159[2] = v140;
  v159[3] = v129;
  v160 = v129;
  v159[4] = v158;
  v161 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v162 = v194;
  v163 = Publisher<>.sink(receiveValue:)(sub_241BB4, v159, v194, v161);
  v164 = swift_release(v159);
  (*(void (**)(char *, uint64_t, __n128))(v193 + 8))(v157, v162, v164);
  swift_beginAccess(v120, v205, 33, 0);
  v166 = v200;
  v165 = ObjectType;
  AnyCancellable.store<A>(in:)(v120, v200, ObjectType);
  swift_endAccess(v205);
  v167 = swift_release(v163);
  v168 = v202;
  v169 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v140, v160, v167);
  v205[0] = v169;
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v171 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v172 = v195;
  Publisher.dropFirst(_:)(1, v170, v171);
  swift_release(v169);
  v173 = swift_allocObject(&unk_38CF50, 24, 7);
  v174 = (void *)AssociatedTypeWitness;
  swift_unknownObjectWeakInit(v173 + 16, AssociatedTypeWitness);
  v175 = (_QWORD *)swift_allocObject(&unk_38D6A0, 40, 7);
  v175[2] = v140;
  v175[3] = v160;
  v175[4] = v173;
  v176 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v177 = v197;
  v178 = Publisher<>.sink(receiveValue:)(sub_241BC0, v175, v197, v176);
  v179 = swift_release(v175);
  (*(void (**)(char *, uint64_t, __n128))(v196 + 8))(v172, v177, v179);
  swift_beginAccess(v120, v205, 33, 0);
  AnyCancellable.store<A>(in:)(v120, v166, v165);
  swift_endAccess(v205);
  swift_release(v190);
  swift_release(v188);
  swift_unknownObjectRelease(v168);
  swift_release(v198);
  swift_release(v178);

  return v174;
}

void *sub_240A80(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_23F6C8(a1, a2);
}

uint64_t sub_240AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_240B08()
{
  unint64_t result;

  result = qword_3DDDE8;
  if (!qword_3DDDE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for RefreshControls, &type metadata for RefreshControls);
    atomic_store(result, (unint64_t *)&qword_3DDDE8);
  }
  return result;
}

uint64_t sub_240B4C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_240B70(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_23A994(a1, *(_QWORD *)(v1 + 32));
}

void sub_240B7C(char *a1)
{
  uint64_t v1;

  sub_23A6C8(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_240B88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_240BAC()
{
  uint64_t v0;

  sub_23DBF8(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_240BB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_56(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_56(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_240BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ExtendedLaunchController.LoadingHandle(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_240C54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for ExtendedLaunchController.LoadingHandle(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_23BA48(a1, v1 + v4, *(char **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_240CB8()
{
  uint64_t v0;

  sub_23CA74(*(_QWORD *)(v0 + 32));
}

void sub_240CC4(unsigned __int8 *a1)
{
  uint64_t *v1;

  sub_23D348(a1, v1[4], v1[2], v1[3]);
}

void sub_240CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + qword_3DDE88);
  if (v1)
  {
    v2 = swift_retain(v1);
    dispatch thunk of DispatchWorkItem.cancel()(v2);
    swift_release(v1);
  }
}

void sub_240D14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_240CD0();
  v3 = *(_QWORD *)(v1 + qword_3DDE88);
  *(_QWORD *)(v1 + qword_3DDE88) = a1;
  swift_retain(a1);
  swift_release(v3);
  sub_8ACEC();
}

void sub_240D5C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + qword_3FD5F0);
  v2 = v1;
  static ViewControllerContainment.remove(_:)(v1);

}

void sub_240D9C(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;

  sub_240D5C();
  v3 = *(void **)(v1 + qword_3FD5F0);
  *(_QWORD *)(v1 + qword_3FD5F0) = a1;
  v4 = a1;

  sub_237F74();
}

void sub_240DDC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[qword_3DDD68] = 0;
  *(_QWORD *)&v0[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[qword_3DDE20] = 0;
  v5 = &v0[qword_3FD5D8];
  v6 = enum case for FlowDestinationPageHeader.standard(_:);
  v7 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = &v0[qword_3DDD80];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v0[qword_3DDD78] = 18;
  *(_QWORD *)&v0[qword_3DDDC8] = 0;
  v9 = &v0[qword_3DDE58];
  sub_235040(0);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v9, v4, v1);
  v0[qword_3DDE00] = 0;
  v10 = &v0[qword_3DDE60];
  v11 = type metadata accessor for InteractionContext.Page(0);
  v12.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v0[qword_3DDE68] = 1;
  *(_QWORD *)&v0[qword_3DDE70] = 0;
  *(_QWORD *)&v0[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v13 = &v0[qword_3DDE78];
  v14 = type metadata accessor for PageID(0, v12);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = &v0[qword_3DDDB8];
  v0[qword_3DDDB8] = 0;
  v16 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  *(_QWORD *)&v0[qword_3FD5F0] = 0;
  *(_QWORD *)&v0[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v0[qword_3DDE88] = 0;
  v17 = &v0[qword_3FD5E8];
  v17[1] = 0;
  v17[2] = 0;
  *v17 = 0;
  *(_QWORD *)&v0[qword_3DDE90] = 0;
  v18 = &v0[qword_3DDE98];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v19 = &v0[qword_3DDDC0];
  v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v22 = type metadata accessor for Header(0, v21);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 1, 1, v22);
  v19[v20] = 1;
  v0[qword_3DDE30] = 0;
  *(_QWORD *)&v0[qword_3DDDA0] = 0;
  v0[qword_3DDDD0] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ModernPageViewController.swift", 54, 2, 281, 0);
  __break(1u);
}

void sub_2410D0()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.ModernPageViewController", 48, "init(collectionViewLayout:)", 27, 0);
  __break(1u);
}

void sub_2410FC()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.ModernPageViewController", 48, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t sub_241128@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ModernPageViewController.navigationTabIdentifier.getter();
  *a1 = result;
  return result;
}

uint64_t sub_241150(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_91F1C(*a1);
  return ModernPageViewController.navigationTabIdentifier.setter(v1);
}

uint64_t sub_241180()
{
  return 16;
}

__n128 sub_24118C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2411A0()
{
  return 16;
}

__n128 sub_2411AC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void sub_2411B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE v14[32];
  _QWORD v15[36];

  v15[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v15[1] = "\b";
  v15[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v15[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v15[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v15[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v15[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v15[7] = &unk_301B58;
  v15[8] = &unk_301B70;
  v15[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v15[10] = &unk_301B70;
  v2 = type metadata accessor for FlowDestinationPageHeader(319);
  if (v3 <= 0x3F)
  {
    v15[11] = *(_QWORD *)(v2 - 8) + 64;
    v15[12] = &unk_301B88;
    v15[13] = &unk_301BA0;
    v15[14] = &unk_301BB8;
    v15[15] = &unk_301B70;
    v15[16] = &unk_301B70;
    sub_2413D8();
    if (v5 <= 0x3F)
    {
      v15[17] = *(_QWORD *)(v4 - 8) + 64;
      v15[18] = &unk_301BD0;
      sub_3D544(319, &qword_3DDF28, (uint64_t (*)(uint64_t))&type metadata accessor for InteractionContext.Page);
      if (v7 <= 0x3F)
      {
        v15[19] = *(_QWORD *)(v6 - 8) + 64;
        v15[20] = &unk_301BD0;
        v15[21] = (char *)&value witness table for Builtin.Int64 + 64;
        v15[22] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v15[23] = (char *)&value witness table for Builtin.BridgeObject + 64;
        sub_3D544(319, &qword_3DDF30, (uint64_t (*)(uint64_t))&type metadata accessor for PageID);
        if (v9 <= 0x3F)
        {
          v15[24] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for PageContent(319);
          if (v11 <= 0x3F)
          {
            v15[25] = *(_QWORD *)(v10 - 8) + 64;
            v15[26] = &unk_301B70;
            v15[27] = (char *)&value witness table for Builtin.Int64 + 64;
            v15[28] = &unk_301B70;
            v15[29] = &unk_301BE8;
            v15[30] = &unk_301B70;
            v15[31] = &unk_301C00;
            sub_3D544(319, (unint64_t *)&unk_3D92A8, (uint64_t (*)(uint64_t))&type metadata accessor for Header);
            if (v13 <= 0x3F)
            {
              swift_getTupleTypeLayout2(v14, *(_QWORD *)(v12 - 8) + 64, &unk_301BD0);
              v15[32] = v14;
              v15[33] = &unk_301BD0;
              v15[34] = (char *)&value witness table for Builtin.Int64 + 64;
              v15[35] = &unk_301BD0;
              swift_initClassMetadata2(a1, 0, 36, v15, a1 + 96);
            }
          }
        }
      }
    }
  }
}

uint64_t type metadata accessor for ModernPageViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ModernPageViewController);
}

uint64_t method lookup function for ModernPageViewController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ModernPageViewController);
}

uint64_t dispatch thunk of ModernPageViewController.__allocating_init(asPartOf:with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 384))();
}

void sub_2413D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_3DDF20)
  {
    v0 = type metadata accessor for Published(0, &type metadata for ViewControllerLifeCycleEvent);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_3DDF20);
  }
}

uint64_t getEnumTagSinglePayload for PlaybackStatusView.ProgressBarStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewControllerLifeCycleEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_241508 + 4 * byte_301A25[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_24153C + 4 * byte_301A20[v4]))();
}

uint64_t sub_24153C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241544(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24154CLL);
  return result;
}

uint64_t sub_241558(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241560);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_241564(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24156C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewControllerLifeCycleEvent()
{
  return &type metadata for ViewControllerLifeCycleEvent;
}

unint64_t sub_24158C()
{
  unint64_t result;

  result = qword_3DDF38;
  if (!qword_3DDF38)
  {
    result = swift_getWitnessTable(&unk_301CC0, &type metadata for ViewControllerLifeCycleEvent);
    atomic_store(result, (unint64_t *)&qword_3DDF38);
  }
  return result;
}

void sub_2415D0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_2392BC(*(char **)(v1 + 16), a1);
}

uint64_t sub_2415E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_24160C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16)
                + OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_headerButtonTipProvider);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return dispatch thunk of HeaderButtonTipProviderProtocol.markFavoriteTipAsPresented()(v2, v3);
}

uint64_t sub_241658()
{
  uint64_t v0;

  return sub_23B2D0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_241660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for ExtendedLaunchController.LoadingHandle(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for ExtendedLaunchStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

double sub_241714()
{
  type metadata accessor for ExtendedLaunchController.LoadingHandle(0);
  type metadata accessor for ExtendedLaunchStatus(0);
  return sub_23C010();
}

uint64_t sub_241774@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23506C();
  *a1 = result;
  return result;
}

uint64_t sub_24179C(char *a1)
{
  return sub_235104(*a1);
}

uint64_t sub_2417C0()
{
  return 16;
}

__n128 sub_2417CC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

id sub_2417D8()
{
  uint64_t v0;
  void *v1;
  id result;

  v1 = *(void **)(v0 + 16);
  result = objc_msgSend(v1, "isRefreshing");
  if ((_DWORD)result)
    return objc_msgSend(v1, "endRefreshing");
  return result;
}

uint64_t sub_241820()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_24184C(uint64_t a1)
{
  uint64_t v1;

  sub_23F2CC(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_241858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int EnumCaseMultiPayload;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for PageContent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = (_QWORD *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v9 = type metadata accessor for PageID(0, v8);
      v10.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
      v11 = type metadata accessor for ModernPage(0, v10);
      v12 = (char *)v6 + *(int *)(v11 + 20);
      v13 = type metadata accessor for PageMetrics(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + *(int *)(v11 + 24)));
      v6 = (_QWORD *)((char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48));
      v14 = type metadata accessor for PageRenderContentTypes(0);
LABEL_7:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v6, v14);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 2:
      v14 = type metadata accessor for InformationViewStyle(0);
      goto LABEL_7;
    case 1:
      swift_errorRelease(*v6);
      swift_release(v6[2]);
      break;
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_24198C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_2419B8()
{
  uint64_t v0;

  sub_23825C(*(_QWORD *)(v0 + 32), *(void (**)(__n128))(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_2419C8(uint64_t a1)
{
  _QWORD *v1;

  return sub_23F58C(a1, v1, &qword_3DDF60, (void (*)(__n128))&static MetricsFieldsContext.Property<A>.clickLocationTracker.getter);
}

uint64_t sub_2419F0@<X0>(uint64_t *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;

  return sub_23EB94(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_241A0C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_241A38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_241A48(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  char v3;

  v3 = (a2 - 1 < 2) & a1;
  if (*(_BYTE *)(v2 + 16) != 1)
    v3 = a1;
  return v3 & 1;
}

uint64_t sub_241A70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_241A94@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result & 1;
  return result;
}

uint64_t sub_241ACC()
{
  _QWORD *v0;

  swift_release(v0[4]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 6);
  swift_release(v0[11]);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

void sub_241B08(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_23ED58(a1, *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), (_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_241B20(uint64_t a1)
{
  _QWORD *v1;

  return sub_23F58C(a1, v1, &qword_3DDFC8, (void (*)(__n128))&static MetricsFieldsContext.Property<A>.searchFiltersSource.getter);
}

void sub_241B48(_QWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_235710(a1, a2, a3, *(_QWORD *)(v4 + 32), a4);
}

void sub_241B54(uint64_t a1)
{
  uint64_t v1;

  sub_235EAC(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_241B60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_241B84(uint64_t a1)
{
  uint64_t v1;

  sub_72B6C(a1, *(_QWORD *)(v1 + 32));
}

void sub_241B90(uint64_t *a1)
{
  uint64_t v1;

  sub_236044(a1, *(_QWORD *)(v1 + 32));
}

void sub_241B9C(uint64_t a1)
{
  uint64_t v1;

  sub_2360C0(a1, *(_QWORD *)(v1 + 32));
}

void sub_241BA8(uint64_t a1)
{
  uint64_t v1;

  sub_2363F0(a1, *(_QWORD *)(v1 + 32));
}

void sub_241BB4(void **a1)
{
  uint64_t v1;

  sub_236944(a1, *(_QWORD *)(v1 + 32));
}

void sub_241BC0(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_8CB6C(a1, *(_QWORD *)(v1 + 32));
}

char *sub_241C34(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  id v32;
  Swift::String v33;
  Swift::String v34;
  unint64_t v35;
  NSString v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  Class isa;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  objc_super v58;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for Glyph(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_configProvider];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15, 0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_glyph], 1, 1, v11);
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph] = 0;
  v16 = objc_allocWithZone((Class)UIButton);
  v17 = v5;
  v18 = objc_msgSend(v16, "initWithFrame:", a1, a2, a3, a4);
  v19 = OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_button;
  *(_QWORD *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_button] = v18;
  v20 = static Glyph.GenericContextMenuButton.more.getter();
  v21 = (void *)Glyph.image.getter(v20);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  objc_msgSend(v18, "setImage:forState:", v21, 0);

  v22 = *(void **)&v17[v19];
  objc_msgSend(v22, "setPointerInteractionEnabled:", 1);
  v23 = (void *)objc_opt_self(UIColor);
  v24 = v22;
  v25 = objc_msgSend(v23, "tertiaryLabelColor");
  objc_msgSend(v24, "setTintColor:", v25);

  v26 = objc_msgSend(*(id *)&v17[v19], "imageView");
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v26, "setContentMode:", 1);

  }
  v58.receiver = v17;
  v58.super_class = ObjectType;
  v28 = (char *)objc_msgSendSuper2(&v58, "initWithFrame:", a1, a2, a3, a4);
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_button;
  v30 = *(void **)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_button];
  v56 = 0;
  v57 = 0xE000000000000000;
  v31 = v28;
  v32 = v30;
  v33._object = (void *)0x80000000003078F0;
  v33._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 46;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  v55 = 3;
  _print_unlocked<A, B>(_:_:)(&v55, &v56, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v35 = v57;
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setAccessibilityIdentifier:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

  v37 = *(void **)&v28[v29];
  objc_msgSend(v31, "addSubview:", v37);
  objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v38 = (void *)objc_opt_self(NSLayoutConstraint);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v40 = swift_allocObject(v39, 56, 7);
  *(_OWORD *)(v40 + 16) = xmmword_2EFC80;
  v41 = objc_msgSend(v37, "centerYAnchor");
  v42 = objc_msgSend(v31, "centerYAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v40 + 32) = v43;
  v44 = objc_msgSend(*(id *)&v28[v29], "trailingAnchor");
  v45 = objc_msgSend(v31, "trailingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v40 + 40) = v46;
  v47 = objc_msgSend(*(id *)&v28[v29], "leadingAnchor");
  v48 = objc_msgSend(v31, "leadingAnchor");
  v49 = objc_msgSend(v47, "constraintGreaterThanOrEqualToAnchor:", v48);

  *(_QWORD *)(v40 + 48) = v49;
  v56 = v40;
  specialized Array._endMutation()(v50);
  v51 = v56;
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v38, "activateConstraints:", isa, swift_bridgeObjectRelease(v51).n128_f64[0]);

  objc_msgSend(v31, "setContextMenuInteractionEnabled:", 1);
  objc_msgSend(v31, "setShowsMenuAsPrimaryAction:", 1);

  return v31;
}

uint64_t sub_2421CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _BYTE v16[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_glyph;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_glyph, v16, 33, 0);
  sub_242534(a1, v10);
  swift_endAccess(v16);
  sub_1E1424(v10, (uint64_t)v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1E14F0((uint64_t)v5);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_button), "setHidden:", 1);
  }
  else
  {
    v11 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v5, v6);
    v12 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_button);
    v13 = (void *)Glyph.image.getter(v11);
    objc_msgSend(v12, "setImage:forState:", v13, 0);

    objc_msgSend(v12, "setHidden:", 0);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_1E14F0(a1);
}

uint64_t sub_242420()
{
  return type metadata accessor for DynamicContextMenuButton(0);
}

uint64_t type metadata accessor for DynamicContextMenuButton(uint64_t a1)
{
  uint64_t result;

  result = qword_3DE008;
  if (!qword_3DE008)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DynamicContextMenuButton);
  return result;
}

void sub_242464(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_301DF0;
  sub_1E0204(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_301E08;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_2424F0()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph));
}

uint64_t sub_242500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_242534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_24257C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_configProvider];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_glyph];
  v3 = type metadata accessor for Glyph(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/DynamicContextMenuButton.swift", 54, 2, 60, 0);
  __break(1u);
}

uint64_t sub_24264C(double a1, double a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;

  v5 = type metadata accessor for InteractionContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PresentationSource(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph];
  if (!v13)
    return 0;
  v14 = swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph]);
  v15 = UIView.mt_viewController.getter(v14);
  if (!v15)
  {
LABEL_6:
    swift_release(v13);
    return 0;
  }
  v16 = (void *)v15;
  v29 = v5;
  v17 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_configProvider];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_configProvider]);
  if (!Strong)
  {

    goto LABEL_6;
  }
  v19 = Strong;
  v27 = *((_QWORD *)v17 + 1);
  ObjectType = swift_getObjectType();
  v25 = a2;
  v26 = a1;
  v20 = v16;
  v2;
  v21 = PresentationSource.init(viewController:view:location:)(v20, v2, *(_QWORD *)&v26, *(_QWORD *)&v25, 0);
  UIView.interactionContext.getter(v21);
  v22 = (*(uint64_t (**)(uint64_t, char *, char *, uint64_t))(v27 + 8))(v13, v12, v8, ObjectType);

  swift_unknownObjectRelease(v19);
  swift_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v22;
}

unint64_t sub_242808()
{
  unint64_t result;

  result = qword_3DE018;
  if (!qword_3DE018)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EpisodeCellState, &type metadata for EpisodeCellState);
    atomic_store(result, (unint64_t *)&qword_3DE018);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EpisodeCellState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242898 + 4 * byte_301E55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2428CC + 4 * byte_301E50[v4]))();
}

uint64_t sub_2428CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2428D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2428DCLL);
  return result;
}

uint64_t sub_2428E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2428F0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2428F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2428FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeCellState()
{
  return &type metadata for EpisodeCellState;
}

uint64_t sub_242918(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  __n128 v9;
  __n128 v10;
  char *v11;
  _BYTE v14[24];

  v2 = v1;
  v4 = type metadata accessor for Glyph(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkGlyph];
  v9 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkGlyph], v14, 33, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 24))(v8, a1, v4, v9);
  v10 = swift_endAccess(v14);
  if ((dispatch thunk of BookmarkButtonPresenter.currentState.getter(v10) & 1) != 0)
  {
    v11 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkedGlyph];
    swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkedGlyph], v14, 0, 0);
    (*(void (**)(_BYTE *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
  }
  else
  {
    (*(void (**)(_BYTE *, char *, uint64_t))(v5 + 16))(v7, v8, v4);
  }
  sub_1E2B60(v7);
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

uint64_t sub_242A54(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  char *v12;
  __n128 v13;
  _BYTE v16[24];

  v2 = v1;
  v4 = type metadata accessor for Glyph(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkedGlyph];
  v9 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkedGlyph], v16, 33, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 24))(v8, a1, v4, v9);
  v10 = swift_endAccess(v16);
  if ((dispatch thunk of BookmarkButtonPresenter.currentState.getter(v10) & 1) != 0)
  {
    (*(void (**)(_BYTE *, char *, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v11);
  }
  else
  {
    v12 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkGlyph];
    v13 = swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkGlyph], v16, 0, 0);
    (*(void (**)(_BYTE *, char *, uint64_t, __n128))(v5 + 16))(v7, v12, v4, v13);
  }
  sub_1E2B60(v7);
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void sub_242B90(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  char v11[24];

  v3 = type metadata accessor for Glyph(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((a1 & 1) != 0)
    v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkedGlyph;
  else
    v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkGlyph;
  v8 = &v1[v7];
  v9 = swift_beginAccess(&v1[v7], v11, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v4 + 16))(v6, v8, v3, v9);
  sub_1E2B60(v6);
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v1);
}

uint64_t sub_242E5C()
{
  char v0;
  id v1;
  unint64_t v2;
  unint64_t v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t countAndFlagsBits;
  unint64_t v8;

  v0 = dispatch thunk of BookmarkButtonPresenter.currentState.getter();
  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((v0 & 1) != 0)
  {
    v8 = 0xE000000000000000;
    v3 = 0x80000000003169E0;
    v2 = 0xD00000000000001FLL;
  }
  else
  {
    v2 = 0xD000000000000020;
    v8 = 0xE000000000000000;
    v3 = 0x8000000000316A00;
  }
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, (NSBundle)v1, v4, *(Swift::String *)(&v8 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_242F44(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  objc_super v11;

  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v7 = v6;
    v8 = a1;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v10 = a1;
    v9 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for BookmarkNavButton(0);
  objc_msgSendSuper2(&v11, *a4, v9);

}

void sub_242FD4()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.BookmarkNavButton", 41, "init(frame:glyph:color:style:layout:autolayoutMode:)", 52, 0);
  __break(1u);
}

uint64_t sub_243000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkGlyph;
  v2 = type metadata accessor for Glyph(0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkedGlyph, v2);
  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_presenter));
}

id sub_24306C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookmarkNavButton(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_243110()
{
  return type metadata accessor for BookmarkNavButton(0);
}

uint64_t type metadata accessor for BookmarkNavButton(uint64_t a1)
{
  uint64_t result;

  result = qword_3DE050;
  if (!qword_3DE050)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookmarkNavButton);
  return result;
}

uint64_t sub_243154(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Glyph(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 880);
    if (!result)
      return 0;
  }
  return result;
}

void sub_2431D0(char a1)
{
  sub_242B90(a1 & 1);
}

char *sub_2431D8(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  NSString v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char v37[24];

  v33 = a2;
  v36 = a1;
  v35 = a3 & 1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for Glyph(0);
  v8 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BookmarkButtonPresenter.Data(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_bookmarkGlyph];
  v16 = v3;
  v17 = static Glyph.HeaderButtons.bookmark.getter(v16);
  static Glyph.HeaderButtons.bookmarked.getter(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  v18 = type metadata accessor for BookmarkButtonPresenter(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = v33;
  v20 = swift_retain(v33);
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_presenter] = BookmarkButtonPresenter.init(data:graph:)(v14, v19, v20);

  v21 = swift_beginAccess(v15, v37, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v8 + 16))(v10, v15, v34, v21);
  v22 = type metadata accessor for Glyph.Color(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v10, (uint64_t)v7, 2, 0, v35, 0.0, 0.0, 0.0, 0.0);
  v24 = v23;
  v25 = v23;
  objc_msgSend(v25, "addTarget:action:forControlEvents:", v25, "primaryActionTriggered", 0x2000);
  v26 = *(_QWORD *)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews17BookmarkNavButton_presenter];
  v27 = sub_24348C();
  v28 = v25;
  swift_retain(v26);
  dispatch thunk of BookmarkButtonPresenter.view.setter(v24, v27);
  swift_release(v26);
  v29 = v28;
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setAccessibilityIdentifier:", v30);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v36, v11);
  return v29;
}

unint64_t sub_24348C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE060;
  if (!qword_3DE060)
  {
    v1 = type metadata accessor for BookmarkNavButton(255);
    result = swift_getWitnessTable(&unk_301F84, v1);
    atomic_store(result, (unint64_t *)&qword_3DE060);
  }
  return result;
}

void sub_2434D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(_QWORD);
  char *v30;
  _QWORD v31[10];
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a2;
  v31[3] = a1;
  v40 = type metadata accessor for Logger(0);
  v38 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v37 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v3);
  v35 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for ActionMenu(0);
  v39 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v31[2] = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v31[1] = (char *)v31 - v7;
  __chkstk_darwin(v8);
  v36 = (char *)v31 - v9;
  v10 = type metadata accessor for Glyph(0);
  __chkstk_darwin(v10);
  v43 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for BookmarkButtonPresenter.Data(0);
  v31[9] = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v31[4] = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v31[7] = (char *)v31 - v14;
  v15 = type metadata accessor for DownloadButton.Style(0);
  __chkstk_darwin(v15);
  v31[5] = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v33 = (char *)v31 - v18;
  v32 = type metadata accessor for DownloadButtonPresenter.Data(0);
  v31[8] = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  __chkstk_darwin(v19);
  v31[6] = (char *)v31 - v20;
  v21 = type metadata accessor for FollowButtonPresenter.Data(0);
  __chkstk_darwin(v21);
  __chkstk_darwin(v22);
  v23 = type metadata accessor for ActionButton(0);
  __chkstk_darwin(v23);
  __chkstk_darwin(v24);
  v42 = (char *)v31 - v25;
  v26 = type metadata accessor for HeaderButtonItem(0);
  __chkstk_darwin(v26);
  v28 = (char *)v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C(v45, (uint64_t)v28, v29);
  v30 = (char *)&loc_24388C + *((int *)qword_244328 + swift_getEnumCaseMultiPayload(v28, v26));
  __asm { BR              X10 }
}

Class sub_24389C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  UIButton v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  void *v20;
  id v21;
  UIAction_optional v23;

  v6 = v4;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v8 = *(_QWORD *)(v5 - 208);
  v9 = v0;
  v7(v8, v2, v0);
  sub_E710(0, (unint64_t *)&qword_3E1860, UIButton_ptr);
  sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v8, v0);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v11 = (v10 + 24) & ~v10;
  v12 = swift_allocObject(&unk_38D8A8, v11 + v1, v10 | 7);
  v13 = *(_QWORD *)(v5 - 192);
  *(_QWORD *)(v12 + 16) = v13;
  v7(v12 + v11, v3, v0);
  v14 = swift_retain(v13);
  v23.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v14, 0, 0, 0, sub_244980, v12);
  v15.super.super.super.super.isa = UIButton.init(type:primaryAction:)(UIButtonTypeSystem, v23).super.super.super.super.isa;
  ActionButton.title.getter();
  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  -[objc_class setTitle:forState:](v15.super.super.super.super.isa, "setTitle:forState:", v18, 0, swift_bridgeObjectRelease(v17).n128_f64[0]);

  v19 = -[objc_class titleLabel](v15.super.super.super.super.isa, "titleLabel");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v20, "setFont:", v21);

  }
  (*(void (**)(_QWORD, uint64_t))(v6 + 8))(*(_QWORD *)(v5 - 208), v9);
  return v15.super.super.super.super.isa;
}

void sub_244354(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  id v35;
  __n128 v36;
  uint64_t v37;

  v3 = v2;
  v6 = objc_msgSend(v2, "leftBarButtonItems");
  if (v6)
  {
    v7 = v6;
    v8 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  }
  else
  {
    v9 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v10 = objc_msgSend(v3, "rightBarButtonItems");
  if (v10)
  {
    v11 = v10;
    v12 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    v13 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  }
  else
  {
    v13 = _swiftEmptyArrayStorage;
  }
  sub_1F70D0((uint64_t)v13);
  v37 = a1;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v28 = v9;
    else
      v28 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v14 = _CocoaArrayWrapper.endIndex.getter(v28);
    if (v14)
      goto LABEL_9;
LABEL_34:
    v16 = _swiftEmptyArrayStorage;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v9);
  if (!v14)
    goto LABEL_34;
LABEL_9:
  if (v14 < 1)
  {
    __break(1u);
    return;
  }
  v15 = 0;
  v16 = _swiftEmptyArrayStorage;
  do
  {
    if ((v9 & 0xC000000000000001) != 0)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v9);
    else
      v17 = *(id *)(v9 + 8 * v15 + 32);
    v18 = v17;
    v19 = objc_msgSend(v17, "customView", v37);
    if (v19)
    {
      v20 = v19;
      ObjectType = swift_getObjectType();
      v22 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for StyledHeaderButton);
      if (v22)
        v23 = v22;
      else
        v23 = 0;
      if (v22)
        v24 = v20;
      else
        v24 = 0;

      if (v24)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          v16 = sub_20F814(0, v16[2] + 1, 1, v16);
        v26 = v16[2];
        v25 = v16[3];
        if (v26 >= v25 >> 1)
          v16 = sub_20F814((_QWORD *)(v25 > 1), v26 + 1, 1, v16);
        v16[2] = v26 + 1;
        v27 = &v16[2 * v26];
        v27[4] = v24;
        v27[5] = v23;
      }
      else
      {

      }
    }
    else
    {

    }
    ++v15;
  }
  while (v14 != v15);
LABEL_35:
  swift_bridgeObjectRelease_n(v9, 2);
  v29 = v16[2];
  if (v29)
  {
    swift_bridgeObjectRetain(v16);
    v30 = v16 + 5;
    do
    {
      v31 = (void *)*(v30 - 1);
      v32 = *v30;
      v33 = swift_getObjectType();
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v32 + 96);
      v35 = v31;
      v36 = swift_bridgeObjectRetain(a2);
      v34(v37, a2, v33, v32, v36);

      v30 += 2;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease(v16);
  }
  swift_bridgeObjectRelease(v16);
}

uint64_t dispatch thunk of StyledHeaderButton.vevGroupName.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t sub_244638(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _BYTE v16[32];
  _QWORD v17[5];
  _OWORD v18[2];

  v3 = type metadata accessor for ActionPerformer(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for ActionRunnerOptions(0);
  v7 = swift_retain(a1);
  v8 = BaseObjectGraph.__allocating_init(_:)(v7);
  memset(v18, 0, sizeof(v18));
  sub_430E8((uint64_t)v18, (uint64_t)v16);
  ActionOrigin.init(sender:view:)(v17, v16, 0);
  v9 = ActionRunnerOptions.withActionOrigin(_:)(v17);
  sub_D1D4((uint64_t)v17, (uint64_t *)&unk_3D30E0);
  swift_release(v8);
  sub_D1D4((uint64_t)v18, &qword_3D1A70);
  ActionButton.action.getter(v17);
  v10 = swift_retain(v9);
  v11 = ActionPerformer.init(_:asPartOf:)(v17, v9, v10);
  v12 = ActionPerformer.callAsFunction()(v11);
  swift_release(v9);
  v13 = swift_release(v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v4 + 8))(v6, v3, v13);
}

double sub_244770()
{
  double result;

  if (qword_3CFAD0 != -1)
    swift_once(&qword_3CFAD0, sub_1E3E60);
  qword_3DE068 = 0;
  unk_3DE070 = 0;
  result = *(double *)&xmmword_3FCFE0;
  xmmword_3DE078 = xmmword_3FCFE0;
  return result;
}

uint64_t sub_2447C4(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _BYTE v17[32];
  _QWORD v18[5];
  _OWORD v19[2];

  v4 = type metadata accessor for ActionPerformer(0, a1);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for ActionRunnerOptions(0);
  v8 = swift_retain(a3);
  v9 = BaseObjectGraph.__allocating_init(_:)(v8);
  memset(v19, 0, sizeof(v19));
  sub_430E8((uint64_t)v19, (uint64_t)v17);
  ActionOrigin.init(sender:view:)(v18, v17, 0);
  v10 = ActionRunnerOptions.withActionOrigin(_:)(v18);
  sub_D1D4((uint64_t)v18, (uint64_t *)&unk_3D30E0);
  swift_release(v9);
  sub_D1D4((uint64_t)v19, &qword_3D1A70);
  ActionButton.action.getter(v18);
  v11 = swift_retain(v10);
  v12 = ActionPerformer.init(_:asPartOf:)(v18, v10, v11);
  v13 = ActionPerformer.callAsFunction()(v12);
  swift_release(v10);
  v14 = swift_release(v13);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v14);
}

uint64_t block_copy_helper_57(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_57(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_244914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FollowButtonPresenter.Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244958()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_244980(uint64_t a1)
{
  uint64_t v1;
  __n128 v3;

  type metadata accessor for ActionButton(0);
  return sub_2447C4(v3, a1, *(_QWORD *)(v1 + 16));
}

void sub_2449C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(_QWORD);
  char *v25;
  _QWORD v26[4];
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a2;
  v28 = a1;
  v43 = type metadata accessor for ActionMenu(0);
  v42 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v40 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v41 = (char *)v26 - v4;
  v27 = type metadata accessor for Logger(0);
  v26[3] = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v26[2] = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Glyph(0);
  __chkstk_darwin(v6);
  v36 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FollowButtonPresenter.Data(0);
  __chkstk_darwin(v8);
  v32 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v34 = (char *)v26 - v11;
  v30 = type metadata accessor for DownloadButton.Style(0);
  __chkstk_darwin(v30);
  v33 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v39 = (char *)v26 - v14;
  v38 = type metadata accessor for DownloadButtonPresenter.Data(0);
  v37 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v29 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v35 = (char *)v26 - v17;
  v18 = type metadata accessor for BookmarkButtonPresenter.Data(0);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  v31 = type metadata accessor for ActionButton(0);
  __chkstk_darwin(v31);
  __chkstk_darwin(v20);
  v21 = type metadata accessor for HeaderButtonItem(0);
  __chkstk_darwin(v21);
  v23 = (char *)v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C(v45, (uint64_t)v23, v24);
  v25 = (char *)&loc_244D34 + dword_245854[swift_getEnumCaseMultiPayload(v23, v21)];
  __asm { BR              X10 }
}

id sub_244D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  __n128 v20;
  void *v21;
  __n128 v22;

  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32);
  v7 = v0;
  v8 = *(_QWORD *)(v5 - 352);
  v9 = v6(v3, v4, v8);
  v10 = ((uint64_t (*)(uint64_t))ActionButton.title.getter)(v9);
  v12 = v11;
  *(_QWORD *)(v5 - 408) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, v3, v8);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_38D8F8, v14 + v1, v13 | 7);
  v16 = *(_QWORD *)(v5 - 248);
  *(_QWORD *)(v15 + 16) = v16;
  v6(v15 + v14, v2, v8);
  v17 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "init", swift_retain(v16).n128_f64[0]);
  sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
  v18 = swift_allocObject(&unk_38D920, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_245924;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = v17;
  v20 = swift_retain(v15);
  v21 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v10, v12, 0, 0, 0, 0, 0, 0, v20, 0, 0, 0, sub_245954, v18);
  objc_msgSend(v19, "setPrimaryAction:", v21);

  v22 = swift_release(v15);
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 408) + 8))(v3, v8, v22);
  return v19;
}

uint64_t sub_245880()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ActionButton(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_245924()
{
  uint64_t v0;
  __n128 v1;

  type metadata accessor for ActionButton(0);
  return sub_244638(*(_QWORD *)(v0 + 16), v1);
}

uint64_t sub_245954(uint64_t a1)
{
  uint64_t v1;

  return sub_43A44(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_2459FC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[5];
  uint64_t v9;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_38D988, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_38D9B0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_245DDC;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_101EC;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_920D4;
  v8[3] = &block_descriptor_58;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 143, 40, 40, 1);
  swift_release(v2);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

id sub_245B30(char *a1)
{
  uint64_t v2;
  id result;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  char *v9;
  double v10;
  double v14;
  double v15;
  CGFloat MaxX;
  id v17;
  void *v18;
  char *v19;
  id v20;
  CGRect v21;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_checkmarkImageView;
  result = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_checkmarkImageView], "image");
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "size");
    v6 = v5;
    v8 = v7;

    v9 = (char *)objc_msgSend(a1, "effectiveUserInterfaceLayoutDirection");
    objc_msgSend(a1, "bounds");
    if (v9 == (_BYTE *)&dword_0 + 1)
    {
      v14 = *(double *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_checkmarkInset];
      v15 = v10 + v14;
    }
    else
    {
      MaxX = CGRectGetMaxX(*(CGRect *)&v10);
      v14 = *(double *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_checkmarkInset];
      v15 = MaxX - v14 - v6;
    }
    objc_msgSend(a1, "bounds");
    objc_msgSend(*(id *)&a1[v2], "setFrame:", v15, CGRectGetMaxY(v21) - v14 - v8, v6, v8);
    v17 = objc_msgSend(*(id *)&a1[v2], "superview");
    if (!v17)
      goto LABEL_8;
    v18 = v17;
    sub_FA88();
    v19 = a1;
    v20 = v18;
    LOBYTE(v18) = static NSObject.== infix(_:_:)(v20, v19);

    if ((v18 & 1) == 0)
LABEL_8:
      objc_msgSend(a1, "addSubview:", *(_QWORD *)&a1[v2]);
    return objc_msgSend(a1, "bringSubviewToFront:", *(_QWORD *)&a1[v2]);
  }
  return result;
}

void sub_245D34()
{
  uint64_t v0;

}

uint64_t type metadata accessor for ArtworkCheckmarkProgressOverlay()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay);
}

uint64_t sub_245D74()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_progressStyle);
}

id sub_245D88(float a1)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *(float *)((char *)*v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_progress) = a1;
  return objc_msgSend(v2, "setNeedsLayout");
}

uint64_t sub_245DA4(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_playing) = result;
  return result;
}

uint64_t sub_245DB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_245DDC()
{
  uint64_t v0;

  return sub_245B30(*(char **)(v0 + 16));
}

uint64_t sub_245DE4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_58(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_245E0C()
{
  _BYTE *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  char *v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_progressStyle] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_checkmarkInset] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_progress] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_playing] = 0;
  v2 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2);
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = v0;
  v6 = objc_msgSend(v4, "bundleForClass:", ObjCClassFromMetadata);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v7, v6);

  if (v8)
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v8);

    *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews31ArtworkCheckmarkProgressOverlay_checkmarkImageView] = v9;
    v10.receiver = v5;
    v10.super_class = ObjectType;
    objc_msgSendSuper2(&v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_245F78()
{
  return sub_89A0(&qword_3DE0F8, type metadata accessor for ShowHeroCell, (uint64_t)&unk_3020A0);
}

uint64_t type metadata accessor for ShowHeroCell(uint64_t a1)
{
  return sub_AE00(a1, qword_3DE280, (uint64_t)&nominal type descriptor for ShowHeroCell);
}

uint64_t sub_245FB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a1;
  v37 = type metadata accessor for AccessibilityChildBehavior(0);
  v35 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE110);
  __chkstk_darwin(v31);
  v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE118);
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE120);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ShowHeroCell(0);
  v15 = v1 + *(int *)(v14 + 24);
  v16 = *(id *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_15E90(*(id *)v15, v17);
  v18 = (char *)sub_14A9C(v16, v17);
  sub_15E9C(v16, v17);
  if (v18)
  {
    v19 = Namespace.wrappedValue.getter(*(_QWORD *)(v1 + *(int *)(v14 + 28)));
    v20 = &v18[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_transitionNamespace];
    *(_QWORD *)v20 = v19;
    v20[8] = 0;

  }
  *v7 = static Alignment.bottomLeading.getter();
  v7[1] = v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE128);
  sub_246294(v1, (uint64_t)v7 + *(int *)(v22 + 44));
  v23 = Namespace.wrappedValue.getter(*(_QWORD *)(v1 + *(int *)(v14 + 28)));
  static HeroContainer.cardShape.getter(v23);
  v24 = sub_10EDC(&qword_3DE130, &qword_3DE110, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.asTransitionSourceView(in:clipShape:)(v23, v5, v31, v24);
  sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v25 = sub_D1D4((uint64_t)v7, &qword_3DE110);
  HeroContainerModifier.init()(v25);
  v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v13, v10, v33);
  v27 = v34;
  static AccessibilityChildBehavior.combine.getter(v26);
  v28 = sub_246A48();
  View.accessibilityElement(children:)(v27, v11, v28);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v37);
  return sub_D1D4((uint64_t)v13, &qword_3DE120);
}

uint64_t sub_246294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t OpaqueTypeConformance2;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[2];
  _QWORD v81[3];

  v61 = a1;
  v79 = a2;
  v3 = type metadata accessor for ShowHeroCell(0);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v73 = *(_QWORD *)(v3 - 8);
  v74 = v4;
  __chkstk_darwin(v3);
  v72 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE148);
  v77 = *(_QWORD *)(v6 - 8);
  v78 = v6;
  __chkstk_darwin(v6);
  v76 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v75 = (char *)&v61 - v9;
  v10 = type metadata accessor for AccessibilityChildBehavior(0);
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for HeroBackground(0, v11);
  v66 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE150);
  v18 = *(_QWORD *)(v17 - 8);
  v69 = v17;
  v70 = v18;
  __chkstk_darwin(v17);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE158);
  __chkstk_darwin(v21);
  v64 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v61 - v24;
  v25 = type metadata accessor for ShowHero(0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for HeroBackgroundVariant(0, v26);
  v71 = *(_QWORD *)(v29 - 8);
  v30 = v71;
  __chkstk_darwin(v29);
  v32 = (char *)&v61 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v61 - v34;
  sub_19C4C(a1, (uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  HeroBackgroundVariant.init(for:)(v28);
  v62 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v36 = v29;
  v63 = v29;
  v62(v32, v35, v29);
  v37 = HeroBackground.init(variant:)(v32);
  static AccessibilityChildBehavior.ignore.getter(v37);
  v38 = sub_89A0(&qword_3DE160, (uint64_t (*)(uint64_t))&type metadata accessor for HeroBackground, (uint64_t)&protocol conformance descriptor for HeroBackground);
  View.accessibilityElement(children:)(v13, v14, v38);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v68);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v16, v14);
  v39 = v61;
  v40 = *(_QWORD *)(v61 + 32);
  v81[0] = *(_QWORD *)(v61 + 24);
  v81[1] = v40;
  v80[0] = v14;
  v80[1] = v38;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v80, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v42 = sub_D254();
  v43 = (uint64_t)v64;
  v44 = v69;
  View.accessibilityLabel<A>(_:)(v81, v69, &type metadata for String, OpaqueTypeConformance2, v42);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v20, v44);
  v45 = v65;
  sub_D210(v43, v65, &qword_3DE158);
  v62(v32, v35, v36);
  v46 = v72;
  sub_19C4C(v39, v72, type metadata accessor for ShowHeroCell);
  v47 = *(unsigned __int8 *)(v73 + 80);
  v48 = (v47 + 16) & ~v47;
  v49 = swift_allocObject(&unk_38DA08, v48 + v74, v47 | 7);
  sub_1B79C(v46, v49 + v48, type metadata accessor for ShowHeroCell);
  v50 = type metadata accessor for ShowHeroChin(0);
  v51 = sub_89A0(&qword_3DE180, type metadata accessor for ShowHeroChin, (uint64_t)&unk_302250);
  v52 = v75;
  HeroChin.init(variant:content:)(v32, sub_246E70, v49, v50, v51);
  sub_D184(v45, v43, &qword_3DE158);
  v53 = v76;
  v54 = v77;
  v55 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  v56 = v78;
  v55(v76, v52, v78);
  v57 = v79;
  sub_D184(v43, v79, &qword_3DE158);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE188);
  v55((char *)(v57 + *(int *)(v58 + 48)), v53, v56);
  v59 = *(void (**)(char *, uint64_t))(v54 + 8);
  v59(v52, v56);
  sub_D1D4(v45, &qword_3DE158);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v63);
  v59(v53, v56);
  return sub_D1D4(v43, &qword_3DE158);
}

uint64_t sub_2467BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v18[5];

  v4 = type metadata accessor for ShowHero(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + *(int *)(type metadata accessor for ShowHeroCell(0) + 20);
  v8 = *(_QWORD *)v7;
  v9 = *(_BYTE *)(v7 + 8);
  swift_retain(*(_QWORD *)v7);
  v11 = sub_14A78(v10, v9);
  swift_release(v8);
  sub_19C4C(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  sub_19C4C((uint64_t)v6, a2, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  v12 = type metadata accessor for PodcastStateController(0);
  BaseObjectGraph.inject<A>(_:)(v18, v12, v12);
  v13 = v18[0];
  v14 = *((_QWORD *)v6 + 2);
  v18[0] = 0;
  v18[1] = 0;
  v18[3] = 0;
  v18[4] = 0;
  v18[2] = 2;
  v15 = dispatch thunk of PodcastStateController.stateMachine(for:initialState:)(v14, v18);
  swift_release(v11);
  swift_release(v13);
  sub_FA4C((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  result = type metadata accessor for ShowHeroChin(0);
  *(_QWORD *)(a2 + *(int *)(result + 20)) = v15;
  return result;
}

uint64_t sub_2468F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a4 + a3[5];
  *(_QWORD *)v8 = swift_getKeyPath(&unk_3021A0);
  *(_BYTE *)(v8 + 8) = 0;
  v9 = a4 + a3[6];
  *(_QWORD *)v9 = swift_getKeyPath(&unk_3021D0);
  *(_BYTE *)(v9 + 8) = 0;
  v10 = a3[7];
  v11 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  *(_QWORD *)(a4 + v10) = 0;
  return sub_1B79C(a2, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
}

uint64_t sub_246998(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_89A0(&qword_3DE190, type metadata accessor for ShowHeroCell, (uint64_t)&unk_302100);
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

uint64_t sub_2469E0()
{
  return sub_89A0(&qword_3DE100, type metadata accessor for ShowHeroCell, (uint64_t)&unk_302150);
}

uint64_t sub_246A0C()
{
  return sub_89A0(&qword_3DE108, (uint64_t (*)(uint64_t))&type metadata accessor for ShowHero, (uint64_t)&protocol conformance descriptor for ShowHero);
}

uint64_t sub_246A38(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_3331D8, 1);
}

unint64_t sub_246A48()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_3DE138;
  if (!qword_3DE138)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE120);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE110);
    v2[1] = sub_10EDC(&qword_3DE130, &qword_3DE110, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.asTransitionSourceView(in:clipShape:)>>, 1);
    sub_89A0(&qword_3DE140, (uint64_t (*)(uint64_t))&type metadata accessor for HeroContainerModifier, (uint64_t)&protocol conformance descriptor for HeroContainerModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE138);
  }
  return result;
}

uint64_t sub_246B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  int *v9;
  unsigned int (*v10)(uint64_t, uint64_t, int *);
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  v1 = type metadata accessor for ShowHeroCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));

  v7 = (int *)type metadata accessor for ShowHero(0);
  v8 = v0 + v4 + v7[8];
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
    v11 = *(unsigned __int8 *)(v8 + 32);
    if (v11 != 255)
      sub_108270(*(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), v11);
    v12 = *(unsigned __int8 *)(v8 + 64);
    if (v12 != 255)
      sub_27FA8(*(id *)(v8 + 56), v12);
    v13 = *(unsigned __int8 *)(v8 + 80);
    if (v13 != 255)
      sub_27FA8(*(id *)(v8 + 72), v13);
    v14 = *(unsigned __int8 *)(v8 + 96);
    if (v14 != 255)
      sub_27FA8(*(id *)(v8 + 88), v14);
    v41 = v0;
    v15 = *(unsigned __int8 *)(v8 + 112);
    if (v15 != 255)
      sub_27FA8(*(id *)(v8 + 104), v15);
    v16 = v5;
    v17 = *(unsigned __int8 *)(v8 + 128);
    if (v17 != 255)
      sub_27FA8(*(id *)(v8 + 120), v17);
    v18 = v8 + v9[11];
    v19 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[16] + 8));
    v5 = v16;
    v0 = v41;
  }
  v20 = v6 + v7[9];
  if (!v10(v20, 1, v9))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v20 + 8));
    v21 = *(unsigned __int8 *)(v20 + 32);
    if (v21 != 255)
      sub_108270(*(_QWORD *)(v20 + 16), *(_QWORD *)(v20 + 24), v21);
    v22 = *(unsigned __int8 *)(v20 + 64);
    if (v22 != 255)
      sub_27FA8(*(id *)(v20 + 56), v22);
    v23 = *(unsigned __int8 *)(v20 + 80);
    if (v23 != 255)
      sub_27FA8(*(id *)(v20 + 72), v23);
    v24 = *(unsigned __int8 *)(v20 + 96);
    if (v24 != 255)
      sub_27FA8(*(id *)(v20 + 88), v24);
    v25 = v0;
    v26 = *(unsigned __int8 *)(v20 + 112);
    if (v26 != 255)
      sub_27FA8(*(id *)(v20 + 104), v26);
    v27 = v5;
    v28 = *(unsigned __int8 *)(v20 + 128);
    if (v28 != 255)
      sub_27FA8(*(id *)(v20 + 120), v28);
    v29 = v20 + v9[11];
    v30 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
    swift_bridgeObjectRelease(*(_QWORD *)(v20 + v9[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v20 + v9[16] + 8));
    v5 = v27;
    v0 = v25;
  }
  v31 = v3 | 7;
  v32 = v4 + v5;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[12] + 8));
  v33 = v6 + v7[14];
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  v35 = v6 + v7[15];
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v37 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8);
  v37(v35, v36);
  v37(v6 + v7[16], v36);
  v37(v6 + v7[17], v36);
  v38 = v6 + v7[18];
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
  swift_release(*(_QWORD *)(v6 + *(int *)(v1 + 20)));
  sub_15E9C(*(id *)(v6 + *(int *)(v1 + 24)), *(_BYTE *)(v6 + *(int *)(v1 + 24) + 8));
  return swift_deallocObject(v0, v32, v31);
}

uint64_t sub_246E70()
{
  return sub_25DC88(type metadata accessor for ShowHeroCell, (uint64_t (*)(uint64_t))sub_2467BC);
}

uint64_t type metadata accessor for ShowHeroChin(uint64_t a1)
{
  return sub_AE00(a1, qword_3DE1F0, (uint64_t)&nominal type descriptor for ShowHeroChin);
}

_QWORD *sub_246EA8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  unsigned int (*v14)(uint64_t *, uint64_t, int *);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  int v23;
  id v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  id *v59;
  int v60;
  id v61;
  id *v62;
  int v63;
  id v64;
  id *v65;
  int v66;
  id v67;
  id *v68;
  int v69;
  id v70;
  id *v71;
  int v72;
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  void (*v86)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v7 = a2[4];
    v8 = (void *)a2[5];
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    v9 = (int *)type metadata accessor for ShowHero(0);
    v10 = v9[8];
    v11 = (_QWORD *)((char *)v4 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = (int *)type metadata accessor for ArtworkModel(0);
    v113 = *((_QWORD *)v13 - 1);
    v14 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(v113 + 48);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    v15 = v8;
    if (v14(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = v12[1];
      *v11 = *v12;
      v11[1] = v18;
      v19 = *((unsigned __int8 *)v12 + 32);
      swift_bridgeObjectRetain(v18);
      if (v19 == 255)
      {
        *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
        *((_BYTE *)v11 + 32) = *((_BYTE *)v12 + 32);
      }
      else
      {
        v20 = v12[2];
        v21 = v12[3];
        sub_108110(v20, v21, v19);
        v11[2] = v20;
        v11[3] = v21;
        *((_BYTE *)v11 + 32) = v19;
      }
      *(_OWORD *)(v11 + 5) = *(_OWORD *)(v12 + 5);
      v22 = (id *)(v12 + 7);
      v23 = *((unsigned __int8 *)v12 + 64);
      if (v23 == 255)
      {
        v11[7] = *v22;
        *((_BYTE *)v11 + 64) = *((_BYTE *)v12 + 64);
      }
      else
      {
        v24 = *v22;
        sub_27F80(*v22, *((_BYTE *)v12 + 64));
        v11[7] = v24;
        *((_BYTE *)v11 + 64) = v23;
      }
      v25 = (id *)(v12 + 9);
      v26 = *((unsigned __int8 *)v12 + 80);
      if (v26 == 255)
      {
        v11[9] = *v25;
        *((_BYTE *)v11 + 80) = *((_BYTE *)v12 + 80);
      }
      else
      {
        v27 = *v25;
        sub_27F80(*v25, *((_BYTE *)v12 + 80));
        v11[9] = v27;
        *((_BYTE *)v11 + 80) = v26;
      }
      v28 = (id *)(v12 + 11);
      v29 = *((unsigned __int8 *)v12 + 96);
      if (v29 == 255)
      {
        v11[11] = *v28;
        *((_BYTE *)v11 + 96) = *((_BYTE *)v12 + 96);
      }
      else
      {
        v30 = *v28;
        sub_27F80(*v28, *((_BYTE *)v12 + 96));
        v11[11] = v30;
        *((_BYTE *)v11 + 96) = v29;
      }
      v31 = (id *)(v12 + 13);
      v32 = *((unsigned __int8 *)v12 + 112);
      if (v32 == 255)
      {
        v11[13] = *v31;
        *((_BYTE *)v11 + 112) = *((_BYTE *)v12 + 112);
      }
      else
      {
        v33 = *v31;
        sub_27F80(*v31, *((_BYTE *)v12 + 112));
        v11[13] = v33;
        *((_BYTE *)v11 + 112) = v32;
      }
      v34 = (id *)(v12 + 15);
      v35 = *((unsigned __int8 *)v12 + 128);
      if (v35 == 255)
      {
        v11[15] = *v34;
        *((_BYTE *)v11 + 128) = *((_BYTE *)v12 + 128);
      }
      else
      {
        v36 = *v34;
        sub_27F80(*v34, *((_BYTE *)v12 + 128));
        v11[15] = v36;
        *((_BYTE *)v11 + 128) = v35;
      }
      *((_BYTE *)v11 + 129) = *((_BYTE *)v12 + 129);
      v37 = v13[11];
      v38 = (char *)v11 + v37;
      v39 = (char *)v12 + v37;
      v40 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      v41 = v13[12];
      v42 = (_QWORD *)((char *)v11 + v41);
      v43 = (_QWORD *)((char *)v12 + v41);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      *((_BYTE *)v11 + v13[13]) = *((_BYTE *)v12 + v13[13]);
      *((_BYTE *)v11 + v13[14]) = *((_BYTE *)v12 + v13[14]);
      *((_BYTE *)v11 + v13[15]) = *((_BYTE *)v12 + v13[15]);
      v45 = v13[16];
      v46 = (_QWORD *)((char *)v11 + v45);
      v47 = (_QWORD *)((char *)v12 + v45);
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v113 + 56);
      swift_bridgeObjectRetain(v44);
      v50 = swift_bridgeObjectRetain(v48);
      v49(v11, 0, 1, v13, v50);
    }
    v51 = v9[9];
    v52 = (_QWORD *)((char *)v4 + v51);
    v53 = (uint64_t *)((char *)a2 + v51);
    if (v14((uint64_t *)((char *)a2 + v51), 1, v13))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v55 = v53[1];
      *v52 = *v53;
      v52[1] = v55;
      v56 = *((unsigned __int8 *)v53 + 32);
      swift_bridgeObjectRetain(v55);
      if (v56 == 255)
      {
        *((_OWORD *)v52 + 1) = *((_OWORD *)v53 + 1);
        *((_BYTE *)v52 + 32) = *((_BYTE *)v53 + 32);
      }
      else
      {
        v57 = v53[2];
        v58 = v53[3];
        sub_108110(v57, v58, v56);
        v52[2] = v57;
        v52[3] = v58;
        *((_BYTE *)v52 + 32) = v56;
      }
      *(_OWORD *)(v52 + 5) = *(_OWORD *)(v53 + 5);
      v59 = (id *)(v53 + 7);
      v60 = *((unsigned __int8 *)v53 + 64);
      if (v60 == 255)
      {
        v52[7] = *v59;
        *((_BYTE *)v52 + 64) = *((_BYTE *)v53 + 64);
      }
      else
      {
        v61 = *v59;
        sub_27F80(*v59, *((_BYTE *)v53 + 64));
        v52[7] = v61;
        *((_BYTE *)v52 + 64) = v60;
      }
      v62 = (id *)(v53 + 9);
      v63 = *((unsigned __int8 *)v53 + 80);
      if (v63 == 255)
      {
        v52[9] = *v62;
        *((_BYTE *)v52 + 80) = *((_BYTE *)v53 + 80);
      }
      else
      {
        v64 = *v62;
        sub_27F80(*v62, *((_BYTE *)v53 + 80));
        v52[9] = v64;
        *((_BYTE *)v52 + 80) = v63;
      }
      v65 = (id *)(v53 + 11);
      v66 = *((unsigned __int8 *)v53 + 96);
      if (v66 == 255)
      {
        v52[11] = *v65;
        *((_BYTE *)v52 + 96) = *((_BYTE *)v53 + 96);
      }
      else
      {
        v67 = *v65;
        sub_27F80(*v65, *((_BYTE *)v53 + 96));
        v52[11] = v67;
        *((_BYTE *)v52 + 96) = v66;
      }
      v68 = (id *)(v53 + 13);
      v69 = *((unsigned __int8 *)v53 + 112);
      if (v69 == 255)
      {
        v52[13] = *v68;
        *((_BYTE *)v52 + 112) = *((_BYTE *)v53 + 112);
      }
      else
      {
        v70 = *v68;
        sub_27F80(*v68, *((_BYTE *)v53 + 112));
        v52[13] = v70;
        *((_BYTE *)v52 + 112) = v69;
      }
      v71 = (id *)(v53 + 15);
      v72 = *((unsigned __int8 *)v53 + 128);
      if (v72 == 255)
      {
        v52[15] = *v71;
        *((_BYTE *)v52 + 128) = *((_BYTE *)v53 + 128);
      }
      else
      {
        v73 = *v71;
        sub_27F80(*v71, *((_BYTE *)v53 + 128));
        v52[15] = v73;
        *((_BYTE *)v52 + 128) = v72;
      }
      *((_BYTE *)v52 + 129) = *((_BYTE *)v53 + 129);
      v74 = v13[11];
      v75 = (char *)v52 + v74;
      v76 = (char *)v53 + v74;
      v77 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v75, v76, v77);
      v78 = v13[12];
      v79 = (_QWORD *)((char *)v52 + v78);
      v80 = (_QWORD *)((char *)v53 + v78);
      v81 = v80[1];
      *v79 = *v80;
      v79[1] = v81;
      *((_BYTE *)v52 + v13[13]) = *((_BYTE *)v53 + v13[13]);
      *((_BYTE *)v52 + v13[14]) = *((_BYTE *)v53 + v13[14]);
      *((_BYTE *)v52 + v13[15]) = *((_BYTE *)v53 + v13[15]);
      v82 = v13[16];
      v83 = (_QWORD *)((char *)v52 + v82);
      v84 = (_QWORD *)((char *)v53 + v82);
      v85 = v84[1];
      *v83 = *v84;
      v83[1] = v85;
      v86 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v113 + 56);
      swift_bridgeObjectRetain(v81);
      v87 = swift_bridgeObjectRetain(v85);
      v86(v52, 0, 1, v13, v87);
    }
    v88 = v9[10];
    v89 = (char *)v4 + v88;
    v90 = (uint64_t)a2 + v88;
    *(_DWORD *)v89 = *(_DWORD *)v90;
    v89[4] = *(_BYTE *)(v90 + 4);
    v91 = v9[11];
    v92 = (char *)v4 + v91;
    v93 = (uint64_t)a2 + v91;
    v92[8] = *(_BYTE *)(v93 + 8);
    *(_QWORD *)v92 = *(_QWORD *)v93;
    v94 = v9[12];
    v95 = (_QWORD *)((char *)v4 + v94);
    v96 = (uint64_t *)((char *)a2 + v94);
    v97 = v96[1];
    *v95 = *v96;
    v95[1] = v97;
    *((_BYTE *)v4 + v9[13]) = *((_BYTE *)a2 + v9[13]);
    v98 = v9[14];
    v99 = (char *)v4 + v98;
    v100 = (uint64_t)a2 + v98;
    swift_bridgeObjectRetain(v97);
    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v99, v100, v101);
    v102 = v9[15];
    v103 = (char *)v4 + v102;
    v104 = (uint64_t)a2 + v102;
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
    v106 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
    v106(v103, v104, v105);
    v106((char *)v4 + v9[16], (uint64_t)a2 + v9[16], v105);
    v106((char *)v4 + v9[17], (uint64_t)a2 + v9[17], v105);
    v107 = v9[18];
    v108 = (char *)v4 + v107;
    v109 = (uint64_t)a2 + v107;
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v108, v109, v110);
    v111 = *(int *)(a3 + 20);
    v17 = *(uint64_t *)((char *)a2 + v111);
    *(_QWORD *)((char *)v4 + v111) = v17;
  }
  swift_retain(v17);
  return v4;
}

double sub_2475A4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  int *v6;
  unsigned int (*v7)(uint64_t, uint64_t, int *);
  __n128 v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));

  v4 = (int *)type metadata accessor for ShowHero(0);
  v5 = a1 + v4[8];
  v6 = (int *)type metadata accessor for ArtworkModel(0);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
    v9 = *(unsigned __int8 *)(v5 + 32);
    if (v9 != 255)
      sub_108270(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v9);
    v10 = *(unsigned __int8 *)(v5 + 64);
    if (v10 != 255)
      sub_27FA8(*(id *)(v5 + 56), v10);
    v11 = *(unsigned __int8 *)(v5 + 80);
    if (v11 != 255)
      sub_27FA8(*(id *)(v5 + 72), v11);
    v12 = *(unsigned __int8 *)(v5 + 96);
    if (v12 != 255)
      sub_27FA8(*(id *)(v5 + 88), v12);
    v13 = *(unsigned __int8 *)(v5 + 112);
    if (v13 != 255)
      sub_27FA8(*(id *)(v5 + 104), v13);
    v14 = *(unsigned __int8 *)(v5 + 128);
    if (v14 != 255)
      sub_27FA8(*(id *)(v5 + 120), v14);
    v15 = v5 + v6[11];
    v16 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[12] + 8));
    v8 = swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[16] + 8));
  }
  v17 = a1 + v4[9];
  if (!((unsigned int (*)(uint64_t, uint64_t, int *, __n128))v7)(v17, 1, v6, v8))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8));
    v18 = *(unsigned __int8 *)(v17 + 32);
    if (v18 != 255)
      sub_108270(*(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24), v18);
    v19 = *(unsigned __int8 *)(v17 + 64);
    if (v19 != 255)
      sub_27FA8(*(id *)(v17 + 56), v19);
    v20 = *(unsigned __int8 *)(v17 + 80);
    if (v20 != 255)
      sub_27FA8(*(id *)(v17 + 72), v20);
    v21 = *(unsigned __int8 *)(v17 + 96);
    if (v21 != 255)
      sub_27FA8(*(id *)(v17 + 88), v21);
    v22 = *(unsigned __int8 *)(v17 + 112);
    if (v22 != 255)
      sub_27FA8(*(id *)(v17 + 104), v22);
    v23 = *(unsigned __int8 *)(v17 + 128);
    if (v23 != 255)
      sub_27FA8(*(id *)(v17 + 120), v23);
    v24 = v17 + v6[11];
    v25 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + v6[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + v6[16] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[12] + 8));
  v26 = a1 + v4[14];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  v28 = a1 + v4[15];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
  v30(v28, v29);
  v30(a1 + v4[16], v29);
  v30(a1 + v4[17], v29);
  v31 = a1 + v4[18];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20))).n128_u64[0];
  return result;
}

uint64_t sub_247888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  id v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  id *v57;
  int v58;
  id v59;
  id *v60;
  int v61;
  id v62;
  id *v63;
  int v64;
  id v65;
  id *v66;
  int v67;
  id v68;
  id *v69;
  int v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  void (*v84)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = (int *)type metadata accessor for ShowHero(0);
  v9 = v8[8];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = (int *)type metadata accessor for ArtworkModel(0);
  v112 = *((_QWORD *)v12 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v112 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v14 = v7;
  if (v13(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v11[1];
    *v10 = *v11;
    v10[1] = v16;
    v17 = *((unsigned __int8 *)v11 + 32);
    swift_bridgeObjectRetain(v16);
    if (v17 == 255)
    {
      *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
      *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
    }
    else
    {
      v18 = v11[2];
      v19 = v11[3];
      sub_108110(v18, v19, v17);
      v10[2] = v18;
      v10[3] = v19;
      *((_BYTE *)v10 + 32) = v17;
    }
    *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
    v20 = (id *)(v11 + 7);
    v21 = *((unsigned __int8 *)v11 + 64);
    if (v21 == 255)
    {
      v10[7] = *v20;
      *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
    }
    else
    {
      v22 = *v20;
      sub_27F80(*v20, *((_BYTE *)v11 + 64));
      v10[7] = v22;
      *((_BYTE *)v10 + 64) = v21;
    }
    v23 = (id *)(v11 + 9);
    v24 = *((unsigned __int8 *)v11 + 80);
    if (v24 == 255)
    {
      v10[9] = *v23;
      *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
    }
    else
    {
      v25 = *v23;
      sub_27F80(*v23, *((_BYTE *)v11 + 80));
      v10[9] = v25;
      *((_BYTE *)v10 + 80) = v24;
    }
    v26 = (id *)(v11 + 11);
    v27 = *((unsigned __int8 *)v11 + 96);
    if (v27 == 255)
    {
      v10[11] = *v26;
      *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
    }
    else
    {
      v28 = *v26;
      sub_27F80(*v26, *((_BYTE *)v11 + 96));
      v10[11] = v28;
      *((_BYTE *)v10 + 96) = v27;
    }
    v29 = (id *)(v11 + 13);
    v30 = *((unsigned __int8 *)v11 + 112);
    if (v30 == 255)
    {
      v10[13] = *v29;
      *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
    }
    else
    {
      v31 = *v29;
      sub_27F80(*v29, *((_BYTE *)v11 + 112));
      v10[13] = v31;
      *((_BYTE *)v10 + 112) = v30;
    }
    v32 = (id *)(v11 + 15);
    v33 = *((unsigned __int8 *)v11 + 128);
    if (v33 == 255)
    {
      v10[15] = *v32;
      *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
    }
    else
    {
      v34 = *v32;
      sub_27F80(*v32, *((_BYTE *)v11 + 128));
      v10[15] = v34;
      *((_BYTE *)v10 + 128) = v33;
    }
    *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
    v35 = v12[11];
    v36 = (char *)v10 + v35;
    v37 = (char *)v11 + v35;
    v38 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    v39 = v12[12];
    v40 = (_QWORD *)((char *)v10 + v39);
    v41 = (_QWORD *)((char *)v11 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
    *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
    *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
    v43 = v12[16];
    v44 = (_QWORD *)((char *)v10 + v43);
    v45 = (_QWORD *)((char *)v11 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v112 + 56);
    swift_bridgeObjectRetain(v42);
    v48 = swift_bridgeObjectRetain(v46);
    v47(v10, 0, 1, v12, v48);
  }
  v49 = v8[9];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  if (v13((_QWORD *)(a2 + v49), 1, v12))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v53 = v51[1];
    *v50 = *v51;
    v50[1] = v53;
    v54 = *((unsigned __int8 *)v51 + 32);
    swift_bridgeObjectRetain(v53);
    if (v54 == 255)
    {
      *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
      *((_BYTE *)v50 + 32) = *((_BYTE *)v51 + 32);
    }
    else
    {
      v55 = v51[2];
      v56 = v51[3];
      sub_108110(v55, v56, v54);
      v50[2] = v55;
      v50[3] = v56;
      *((_BYTE *)v50 + 32) = v54;
    }
    *(_OWORD *)(v50 + 5) = *(_OWORD *)(v51 + 5);
    v57 = (id *)(v51 + 7);
    v58 = *((unsigned __int8 *)v51 + 64);
    if (v58 == 255)
    {
      v50[7] = *v57;
      *((_BYTE *)v50 + 64) = *((_BYTE *)v51 + 64);
    }
    else
    {
      v59 = *v57;
      sub_27F80(*v57, *((_BYTE *)v51 + 64));
      v50[7] = v59;
      *((_BYTE *)v50 + 64) = v58;
    }
    v60 = (id *)(v51 + 9);
    v61 = *((unsigned __int8 *)v51 + 80);
    if (v61 == 255)
    {
      v50[9] = *v60;
      *((_BYTE *)v50 + 80) = *((_BYTE *)v51 + 80);
    }
    else
    {
      v62 = *v60;
      sub_27F80(*v60, *((_BYTE *)v51 + 80));
      v50[9] = v62;
      *((_BYTE *)v50 + 80) = v61;
    }
    v63 = (id *)(v51 + 11);
    v64 = *((unsigned __int8 *)v51 + 96);
    if (v64 == 255)
    {
      v50[11] = *v63;
      *((_BYTE *)v50 + 96) = *((_BYTE *)v51 + 96);
    }
    else
    {
      v65 = *v63;
      sub_27F80(*v63, *((_BYTE *)v51 + 96));
      v50[11] = v65;
      *((_BYTE *)v50 + 96) = v64;
    }
    v66 = (id *)(v51 + 13);
    v67 = *((unsigned __int8 *)v51 + 112);
    if (v67 == 255)
    {
      v50[13] = *v66;
      *((_BYTE *)v50 + 112) = *((_BYTE *)v51 + 112);
    }
    else
    {
      v68 = *v66;
      sub_27F80(*v66, *((_BYTE *)v51 + 112));
      v50[13] = v68;
      *((_BYTE *)v50 + 112) = v67;
    }
    v69 = (id *)(v51 + 15);
    v70 = *((unsigned __int8 *)v51 + 128);
    if (v70 == 255)
    {
      v50[15] = *v69;
      *((_BYTE *)v50 + 128) = *((_BYTE *)v51 + 128);
    }
    else
    {
      v71 = *v69;
      sub_27F80(*v69, *((_BYTE *)v51 + 128));
      v50[15] = v71;
      *((_BYTE *)v50 + 128) = v70;
    }
    *((_BYTE *)v50 + 129) = *((_BYTE *)v51 + 129);
    v72 = v12[11];
    v73 = (char *)v50 + v72;
    v74 = (char *)v51 + v72;
    v75 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    v76 = v12[12];
    v77 = (_QWORD *)((char *)v50 + v76);
    v78 = (_QWORD *)((char *)v51 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    *((_BYTE *)v50 + v12[13]) = *((_BYTE *)v51 + v12[13]);
    *((_BYTE *)v50 + v12[14]) = *((_BYTE *)v51 + v12[14]);
    *((_BYTE *)v50 + v12[15]) = *((_BYTE *)v51 + v12[15]);
    v80 = v12[16];
    v81 = (_QWORD *)((char *)v50 + v80);
    v82 = (_QWORD *)((char *)v51 + v80);
    v83 = v82[1];
    *v81 = *v82;
    v81[1] = v83;
    v84 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v112 + 56);
    swift_bridgeObjectRetain(v79);
    v85 = swift_bridgeObjectRetain(v83);
    v84(v50, 0, 1, v12, v85);
  }
  v86 = v8[10];
  v87 = a1 + v86;
  v88 = a2 + v86;
  *(_DWORD *)v87 = *(_DWORD *)v88;
  *(_BYTE *)(v87 + 4) = *(_BYTE *)(v88 + 4);
  v89 = v8[11];
  v90 = a1 + v89;
  v91 = a2 + v89;
  *(_BYTE *)(v90 + 8) = *(_BYTE *)(v91 + 8);
  *(_QWORD *)v90 = *(_QWORD *)v91;
  v92 = v8[12];
  v93 = (_QWORD *)(a1 + v92);
  v94 = (_QWORD *)(a2 + v92);
  v95 = v94[1];
  *v93 = *v94;
  v93[1] = v95;
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  v96 = v8[14];
  v97 = a1 + v96;
  v98 = a2 + v96;
  swift_bridgeObjectRetain(v95);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
  v100 = v8[15];
  v101 = a1 + v100;
  v102 = a2 + v100;
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
  v104(v101, v102, v103);
  v104(a1 + v8[16], a2 + v8[16], v103);
  v104(a1 + v8[17], a2 + v8[17], v103);
  v105 = v8[18];
  v106 = a1 + v105;
  v107 = a2 + v105;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
  v109 = *(int *)(a3 + 20);
  v110 = *(_QWORD *)(a2 + v109);
  *(_QWORD *)(a1 + v109) = v110;
  swift_retain(v110);
  return a1;
}

_QWORD *sub_247F5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, int *);
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  __int128 v37;
  id *v38;
  int v39;
  id v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  id v53;
  id *v54;
  int v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(uint64_t, _QWORD, uint64_t, int *, __n128);
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __int128 v75;
  id *v76;
  id *v77;
  int v78;
  id v79;
  void *v80;
  char v81;
  id v82;
  char v83;
  id v84;
  id *v85;
  id *v86;
  int v87;
  id v88;
  void *v89;
  char v90;
  id v91;
  char v92;
  id v93;
  id *v94;
  id *v95;
  int v96;
  id v97;
  void *v98;
  char v99;
  id v100;
  char v101;
  id v102;
  id *v103;
  id *v104;
  int v105;
  id v106;
  void *v107;
  char v108;
  id v109;
  char v110;
  id v111;
  id *v112;
  id *v113;
  int v114;
  id v115;
  void *v116;
  char v117;
  id v118;
  char v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unsigned __int8 *v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 *v148;
  __int128 *v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unsigned __int8 v155;
  __int128 v156;
  id *v157;
  int v158;
  id v159;
  id v160;
  id *v161;
  int v162;
  id v163;
  id v164;
  id *v165;
  int v166;
  id v167;
  id v168;
  id *v169;
  int v170;
  id v171;
  id v172;
  id *v173;
  int v174;
  id v175;
  id v176;
  uint64_t v177;
  char *v178;
  unsigned __int8 *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unsigned __int8 *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  unsigned __int8 *v187;
  uint64_t v188;
  void (*v189)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v190;
  uint64_t v191;
  uint64_t v192;
  unsigned __int8 v193;
  __int128 v194;
  id *v195;
  id *v196;
  int v197;
  id v198;
  void *v199;
  char v200;
  id v201;
  unsigned __int8 v202;
  id v203;
  id *v204;
  id *v205;
  int v206;
  id v207;
  void *v208;
  char v209;
  id v210;
  unsigned __int8 v211;
  id v212;
  id *v213;
  id *v214;
  int v215;
  id v216;
  void *v217;
  char v218;
  id v219;
  unsigned __int8 v220;
  id v221;
  id *v222;
  id *v223;
  int v224;
  id v225;
  void *v226;
  char v227;
  id v228;
  unsigned __int8 v229;
  id v230;
  id *v231;
  id *v232;
  int v233;
  id v234;
  void *v235;
  char v236;
  id v237;
  unsigned __int8 v238;
  id v239;
  uint64_t v240;
  char *v241;
  unsigned __int8 *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  unsigned __int8 *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  unsigned __int8 *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  int v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  void (*v275)(char *, char *, uint64_t);
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a2[5];
  v11 = (void *)a1[5];
  a1[5] = v10;
  v12 = v10;

  v13 = (int *)type metadata accessor for ShowHero(0);
  v14 = v13[8];
  v15 = (uint64_t)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = (int *)type metadata accessor for ArtworkModel(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19((uint64_t)v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      v284 = v18;
      v286 = a3;
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v22 = *((_QWORD *)v16 + 1);
      *(_QWORD *)(v15 + 8) = v22;
      v23 = v16[32];
      swift_bridgeObjectRetain(v22);
      if (v23 == 255)
      {
        v37 = *((_OWORD *)v16 + 1);
        *(_BYTE *)(v15 + 32) = v16[32];
        *(_OWORD *)(v15 + 16) = v37;
      }
      else
      {
        v24 = *((_QWORD *)v16 + 2);
        v25 = *((_QWORD *)v16 + 3);
        sub_108110(v24, v25, v23);
        *(_QWORD *)(v15 + 16) = v24;
        *(_QWORD *)(v15 + 24) = v25;
        *(_BYTE *)(v15 + 32) = v23;
      }
      *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
      *(_QWORD *)(v15 + 48) = *((_QWORD *)v16 + 6);
      v38 = (id *)(v16 + 56);
      v39 = v16[64];
      if (v39 == 255)
      {
        v41 = *v38;
        *(_BYTE *)(v15 + 64) = v16[64];
        *(_QWORD *)(v15 + 56) = v41;
      }
      else
      {
        v40 = *v38;
        sub_27F80(*v38, v16[64]);
        *(_QWORD *)(v15 + 56) = v40;
        *(_BYTE *)(v15 + 64) = v39;
      }
      v18 = v284;
      v42 = (id *)(v16 + 72);
      v43 = v16[80];
      if (v43 == 255)
      {
        v45 = *v42;
        *(_BYTE *)(v15 + 80) = v16[80];
        *(_QWORD *)(v15 + 72) = v45;
      }
      else
      {
        v44 = *v42;
        sub_27F80(*v42, v16[80]);
        *(_QWORD *)(v15 + 72) = v44;
        *(_BYTE *)(v15 + 80) = v43;
      }
      v46 = (id *)(v16 + 88);
      v47 = v16[96];
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v15 + 96) = v16[96];
        *(_QWORD *)(v15 + 88) = v49;
      }
      else
      {
        v48 = *v46;
        sub_27F80(*v46, v16[96]);
        *(_QWORD *)(v15 + 88) = v48;
        *(_BYTE *)(v15 + 96) = v47;
      }
      v50 = (id *)(v16 + 104);
      v51 = v16[112];
      if (v51 == 255)
      {
        v53 = *v50;
        *(_BYTE *)(v15 + 112) = v16[112];
        *(_QWORD *)(v15 + 104) = v53;
      }
      else
      {
        v52 = *v50;
        sub_27F80(*v50, v16[112]);
        *(_QWORD *)(v15 + 104) = v52;
        *(_BYTE *)(v15 + 112) = v51;
      }
      v54 = (id *)(v16 + 120);
      v55 = v16[128];
      if (v55 == 255)
      {
        v57 = *v54;
        *(_BYTE *)(v15 + 128) = v16[128];
        *(_QWORD *)(v15 + 120) = v57;
      }
      else
      {
        v56 = *v54;
        sub_27F80(*v54, v16[128]);
        *(_QWORD *)(v15 + 120) = v56;
        *(_BYTE *)(v15 + 128) = v55;
      }
      *(_BYTE *)(v15 + 129) = v16[129];
      v58 = v17[11];
      v59 = v15 + v58;
      v60 = &v16[v58];
      v61 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      v62 = v17[12];
      v63 = (_QWORD *)(v15 + v62);
      v64 = &v16[v62];
      *v63 = *(_QWORD *)v64;
      v65 = *((_QWORD *)v64 + 1);
      v63[1] = v65;
      *(_BYTE *)(v15 + v17[13]) = v16[v17[13]];
      *(_BYTE *)(v15 + v17[14]) = v16[v17[14]];
      *(_BYTE *)(v15 + v17[15]) = v16[v17[15]];
      v66 = v17[16];
      v67 = (_QWORD *)(v15 + v66);
      v68 = &v16[v66];
      *v67 = *(_QWORD *)v68;
      v69 = *((_QWORD *)v68 + 1);
      v67[1] = v69;
      v70 = *(void (**)(uint64_t, _QWORD, uint64_t, int *, __n128))(v284 + 56);
      swift_bridgeObjectRetain(v65);
      v71 = swift_bridgeObjectRetain(v69);
      v70(v15, 0, 1, v17, v71);
      a3 = v286;
      goto LABEL_68;
    }
LABEL_7:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v15, v16, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_68;
  }
  if (v21)
  {
    sub_FA4C(v15, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  v285 = v18;
  v287 = a3;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v27 = *((_QWORD *)v16 + 1);
  v28 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v15 + 8) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  v29 = (__int128 *)(v15 + 16);
  v30 = (__int128 *)(v16 + 16);
  v31 = v16[32];
  if (*(unsigned __int8 *)(v15 + 32) == 255)
  {
    if (v31 == 255)
    {
      v75 = *v30;
      *(_BYTE *)(v15 + 32) = v16[32];
      *v29 = v75;
    }
    else
    {
      v72 = *((_QWORD *)v16 + 2);
      v73 = *((_QWORD *)v16 + 3);
      sub_108110(v72, v73, v16[32]);
      *(_QWORD *)(v15 + 16) = v72;
      *(_QWORD *)(v15 + 24) = v73;
      *(_BYTE *)(v15 + 32) = v31;
    }
  }
  else if (v31 == 255)
  {
    sub_108DD8(v15 + 16);
    v74 = v16[32];
    *v29 = *v30;
    *(_BYTE *)(v15 + 32) = v74;
  }
  else
  {
    v32 = *((_QWORD *)v16 + 2);
    v33 = *((_QWORD *)v16 + 3);
    sub_108110(v32, v33, v16[32]);
    v34 = *(_QWORD *)(v15 + 16);
    v35 = *(_QWORD *)(v15 + 24);
    *(_QWORD *)(v15 + 16) = v32;
    *(_QWORD *)(v15 + 24) = v33;
    v36 = *(_BYTE *)(v15 + 32);
    *(_BYTE *)(v15 + 32) = v31;
    sub_108270(v34, v35, v36);
  }
  *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
  *(_QWORD *)(v15 + 48) = *((_QWORD *)v16 + 6);
  v76 = (id *)(v15 + 56);
  v77 = (id *)(v16 + 56);
  v78 = v16[64];
  if (*(unsigned __int8 *)(v15 + 64) == 255)
  {
    if (v78 == 255)
    {
      v84 = *v77;
      *(_BYTE *)(v15 + 64) = v16[64];
      *v76 = v84;
    }
    else
    {
      v82 = *v77;
      sub_27F80(*v77, v16[64]);
      *(_QWORD *)(v15 + 56) = v82;
      *(_BYTE *)(v15 + 64) = v78;
    }
  }
  else if (v78 == 255)
  {
    sub_108E0C(v15 + 56);
    v83 = v16[64];
    *v76 = *v77;
    *(_BYTE *)(v15 + 64) = v83;
  }
  else
  {
    v79 = *v77;
    sub_27F80(*v77, v16[64]);
    v80 = *(void **)(v15 + 56);
    *(_QWORD *)(v15 + 56) = v79;
    v81 = *(_BYTE *)(v15 + 64);
    *(_BYTE *)(v15 + 64) = v78;
    sub_27FA8(v80, v81);
  }
  v85 = (id *)(v15 + 72);
  v86 = (id *)(v16 + 72);
  v87 = v16[80];
  if (*(unsigned __int8 *)(v15 + 80) == 255)
  {
    if (v87 == 255)
    {
      v93 = *v86;
      *(_BYTE *)(v15 + 80) = v16[80];
      *v85 = v93;
    }
    else
    {
      v91 = *v86;
      sub_27F80(*v86, v16[80]);
      *(_QWORD *)(v15 + 72) = v91;
      *(_BYTE *)(v15 + 80) = v87;
    }
  }
  else if (v87 == 255)
  {
    sub_108E0C(v15 + 72);
    v92 = v16[80];
    *v85 = *v86;
    *(_BYTE *)(v15 + 80) = v92;
  }
  else
  {
    v88 = *v86;
    sub_27F80(*v86, v16[80]);
    v89 = *(void **)(v15 + 72);
    *(_QWORD *)(v15 + 72) = v88;
    v90 = *(_BYTE *)(v15 + 80);
    *(_BYTE *)(v15 + 80) = v87;
    sub_27FA8(v89, v90);
  }
  v94 = (id *)(v15 + 88);
  v95 = (id *)(v16 + 88);
  v96 = v16[96];
  if (*(unsigned __int8 *)(v15 + 96) == 255)
  {
    if (v96 == 255)
    {
      v102 = *v95;
      *(_BYTE *)(v15 + 96) = v16[96];
      *v94 = v102;
    }
    else
    {
      v100 = *v95;
      sub_27F80(*v95, v16[96]);
      *(_QWORD *)(v15 + 88) = v100;
      *(_BYTE *)(v15 + 96) = v96;
    }
  }
  else if (v96 == 255)
  {
    sub_108E0C(v15 + 88);
    v101 = v16[96];
    *v94 = *v95;
    *(_BYTE *)(v15 + 96) = v101;
  }
  else
  {
    v97 = *v95;
    sub_27F80(*v95, v16[96]);
    v98 = *(void **)(v15 + 88);
    *(_QWORD *)(v15 + 88) = v97;
    v99 = *(_BYTE *)(v15 + 96);
    *(_BYTE *)(v15 + 96) = v96;
    sub_27FA8(v98, v99);
  }
  v103 = (id *)(v15 + 104);
  v104 = (id *)(v16 + 104);
  v105 = v16[112];
  if (*(unsigned __int8 *)(v15 + 112) == 255)
  {
    if (v105 == 255)
    {
      v111 = *v104;
      *(_BYTE *)(v15 + 112) = v16[112];
      *v103 = v111;
    }
    else
    {
      v109 = *v104;
      sub_27F80(*v104, v16[112]);
      *(_QWORD *)(v15 + 104) = v109;
      *(_BYTE *)(v15 + 112) = v105;
    }
  }
  else if (v105 == 255)
  {
    sub_108E0C(v15 + 104);
    v110 = v16[112];
    *v103 = *v104;
    *(_BYTE *)(v15 + 112) = v110;
  }
  else
  {
    v106 = *v104;
    sub_27F80(*v104, v16[112]);
    v107 = *(void **)(v15 + 104);
    *(_QWORD *)(v15 + 104) = v106;
    v108 = *(_BYTE *)(v15 + 112);
    *(_BYTE *)(v15 + 112) = v105;
    sub_27FA8(v107, v108);
  }
  v112 = (id *)(v15 + 120);
  v113 = (id *)(v16 + 120);
  v114 = v16[128];
  if (*(unsigned __int8 *)(v15 + 128) == 255)
  {
    if (v114 == 255)
    {
      v120 = *v113;
      *(_BYTE *)(v15 + 128) = v16[128];
      *v112 = v120;
    }
    else
    {
      v118 = *v113;
      sub_27F80(*v113, v16[128]);
      *(_QWORD *)(v15 + 120) = v118;
      *(_BYTE *)(v15 + 128) = v114;
    }
  }
  else if (v114 == 255)
  {
    sub_108E0C(v15 + 120);
    v119 = v16[128];
    *v112 = *v113;
    *(_BYTE *)(v15 + 128) = v119;
  }
  else
  {
    v115 = *v113;
    sub_27F80(*v113, v16[128]);
    v116 = *(void **)(v15 + 120);
    *(_QWORD *)(v15 + 120) = v115;
    v117 = *(_BYTE *)(v15 + 128);
    *(_BYTE *)(v15 + 128) = v114;
    sub_27FA8(v116, v117);
  }
  *(_BYTE *)(v15 + 129) = v16[129];
  v121 = v17[11];
  v122 = v15 + v121;
  v123 = &v16[v121];
  v124 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 24))(v122, v123, v124);
  v125 = v17[12];
  v126 = (_QWORD *)(v15 + v125);
  v127 = &v16[v125];
  *v126 = *(_QWORD *)v127;
  v128 = *((_QWORD *)v127 + 1);
  v129 = v126[1];
  v126[1] = v128;
  swift_bridgeObjectRetain(v128);
  swift_bridgeObjectRelease(v129);
  *(_BYTE *)(v15 + v17[13]) = v16[v17[13]];
  *(_BYTE *)(v15 + v17[14]) = v16[v17[14]];
  *(_BYTE *)(v15 + v17[15]) = v16[v17[15]];
  v130 = v17[16];
  v131 = (_QWORD *)(v15 + v130);
  v132 = &v16[v130];
  *v131 = *(_QWORD *)v132;
  v133 = *((_QWORD *)v132 + 1);
  v134 = v131[1];
  v131[1] = v133;
  swift_bridgeObjectRetain(v133);
  swift_bridgeObjectRelease(v134);
  v18 = v285;
  a3 = v287;
LABEL_68:
  v135 = v13[9];
  v136 = (char *)a1 + v135;
  v137 = (unsigned __int8 *)a2 + v135;
  v138 = v19((uint64_t)a1 + v135, 1, v17);
  v139 = v19((uint64_t)v137, 1, v17);
  if (v138)
  {
    if (!v139)
    {
      v140 = v18;
      v288 = a3;
      *(_QWORD *)v136 = *(_QWORD *)v137;
      v141 = *((_QWORD *)v137 + 1);
      *((_QWORD *)v136 + 1) = v141;
      v142 = v137[32];
      swift_bridgeObjectRetain(v141);
      if (v142 == 255)
      {
        v156 = *((_OWORD *)v137 + 1);
        v136[32] = v137[32];
        *((_OWORD *)v136 + 1) = v156;
      }
      else
      {
        v143 = *((_QWORD *)v137 + 2);
        v144 = *((_QWORD *)v137 + 3);
        sub_108110(v143, v144, v142);
        *((_QWORD *)v136 + 2) = v143;
        *((_QWORD *)v136 + 3) = v144;
        v136[32] = v142;
      }
      *((_QWORD *)v136 + 5) = *((_QWORD *)v137 + 5);
      *((_QWORD *)v136 + 6) = *((_QWORD *)v137 + 6);
      v157 = (id *)(v137 + 56);
      v158 = v137[64];
      if (v158 == 255)
      {
        v160 = *v157;
        v136[64] = v137[64];
        *((_QWORD *)v136 + 7) = v160;
      }
      else
      {
        v159 = *v157;
        sub_27F80(*v157, v137[64]);
        *((_QWORD *)v136 + 7) = v159;
        v136[64] = v158;
      }
      v161 = (id *)(v137 + 72);
      v162 = v137[80];
      if (v162 == 255)
      {
        v164 = *v161;
        v136[80] = v137[80];
        *((_QWORD *)v136 + 9) = v164;
      }
      else
      {
        v163 = *v161;
        sub_27F80(*v161, v137[80]);
        *((_QWORD *)v136 + 9) = v163;
        v136[80] = v162;
      }
      v165 = (id *)(v137 + 88);
      v166 = v137[96];
      if (v166 == 255)
      {
        v168 = *v165;
        v136[96] = v137[96];
        *((_QWORD *)v136 + 11) = v168;
      }
      else
      {
        v167 = *v165;
        sub_27F80(*v165, v137[96]);
        *((_QWORD *)v136 + 11) = v167;
        v136[96] = v166;
      }
      v169 = (id *)(v137 + 104);
      v170 = v137[112];
      if (v170 == 255)
      {
        v172 = *v169;
        v136[112] = v137[112];
        *((_QWORD *)v136 + 13) = v172;
      }
      else
      {
        v171 = *v169;
        sub_27F80(*v169, v137[112]);
        *((_QWORD *)v136 + 13) = v171;
        v136[112] = v170;
      }
      v173 = (id *)(v137 + 120);
      v174 = v137[128];
      if (v174 == 255)
      {
        v176 = *v173;
        v136[128] = v137[128];
        *((_QWORD *)v136 + 15) = v176;
      }
      else
      {
        v175 = *v173;
        sub_27F80(*v173, v137[128]);
        *((_QWORD *)v136 + 15) = v175;
        v136[128] = v174;
      }
      v136[129] = v137[129];
      v177 = v17[11];
      v178 = &v136[v177];
      v179 = &v137[v177];
      v180 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v178, v179, v180);
      v181 = v17[12];
      v182 = &v136[v181];
      v183 = &v137[v181];
      *(_QWORD *)v182 = *(_QWORD *)v183;
      v184 = *((_QWORD *)v183 + 1);
      *((_QWORD *)v182 + 1) = v184;
      v136[v17[13]] = v137[v17[13]];
      v136[v17[14]] = v137[v17[14]];
      v136[v17[15]] = v137[v17[15]];
      v185 = v17[16];
      v186 = &v136[v185];
      v187 = &v137[v185];
      *(_QWORD *)v186 = *(_QWORD *)v187;
      v188 = *((_QWORD *)v187 + 1);
      *((_QWORD *)v186 + 1) = v188;
      v189 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v140 + 56);
      swift_bridgeObjectRetain(v184);
      v190 = swift_bridgeObjectRetain(v188);
      v189(v136, 0, 1, v17, v190);
LABEL_135:
      a3 = v288;
      goto LABEL_136;
    }
  }
  else
  {
    if (!v139)
    {
      v288 = a3;
      *(_QWORD *)v136 = *(_QWORD *)v137;
      v146 = *((_QWORD *)v137 + 1);
      v147 = *((_QWORD *)v136 + 1);
      *((_QWORD *)v136 + 1) = v146;
      swift_bridgeObjectRetain(v146);
      swift_bridgeObjectRelease(v147);
      v148 = (__int128 *)(v136 + 16);
      v149 = (__int128 *)(v137 + 16);
      v150 = v137[32];
      if (v136[32] == 255)
      {
        if (v150 == 255)
        {
          v194 = *v149;
          v136[32] = v137[32];
          *v148 = v194;
        }
        else
        {
          v191 = *((_QWORD *)v137 + 2);
          v192 = *((_QWORD *)v137 + 3);
          sub_108110(v191, v192, v137[32]);
          *((_QWORD *)v136 + 2) = v191;
          *((_QWORD *)v136 + 3) = v192;
          v136[32] = v150;
        }
      }
      else if (v150 == 255)
      {
        sub_108DD8((uint64_t)(v136 + 16));
        v193 = v137[32];
        *v148 = *v149;
        v136[32] = v193;
      }
      else
      {
        v151 = *((_QWORD *)v137 + 2);
        v152 = *((_QWORD *)v137 + 3);
        sub_108110(v151, v152, v137[32]);
        v153 = *((_QWORD *)v136 + 2);
        v154 = *((_QWORD *)v136 + 3);
        *((_QWORD *)v136 + 2) = v151;
        *((_QWORD *)v136 + 3) = v152;
        v155 = v136[32];
        v136[32] = v150;
        sub_108270(v153, v154, v155);
      }
      *((_QWORD *)v136 + 5) = *((_QWORD *)v137 + 5);
      *((_QWORD *)v136 + 6) = *((_QWORD *)v137 + 6);
      v195 = (id *)(v136 + 56);
      v196 = (id *)(v137 + 56);
      v197 = v137[64];
      if (v136[64] == 255)
      {
        if (v197 == 255)
        {
          v203 = *v196;
          v136[64] = v137[64];
          *v195 = v203;
        }
        else
        {
          v201 = *v196;
          sub_27F80(*v196, v137[64]);
          *((_QWORD *)v136 + 7) = v201;
          v136[64] = v197;
        }
      }
      else if (v197 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 56));
        v202 = v137[64];
        *v195 = *v196;
        v136[64] = v202;
      }
      else
      {
        v198 = *v196;
        sub_27F80(*v196, v137[64]);
        v199 = (void *)*((_QWORD *)v136 + 7);
        *((_QWORD *)v136 + 7) = v198;
        v200 = v136[64];
        v136[64] = v197;
        sub_27FA8(v199, v200);
      }
      v204 = (id *)(v136 + 72);
      v205 = (id *)(v137 + 72);
      v206 = v137[80];
      if (v136[80] == 255)
      {
        if (v206 == 255)
        {
          v212 = *v205;
          v136[80] = v137[80];
          *v204 = v212;
        }
        else
        {
          v210 = *v205;
          sub_27F80(*v205, v137[80]);
          *((_QWORD *)v136 + 9) = v210;
          v136[80] = v206;
        }
      }
      else if (v206 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 72));
        v211 = v137[80];
        *v204 = *v205;
        v136[80] = v211;
      }
      else
      {
        v207 = *v205;
        sub_27F80(*v205, v137[80]);
        v208 = (void *)*((_QWORD *)v136 + 9);
        *((_QWORD *)v136 + 9) = v207;
        v209 = v136[80];
        v136[80] = v206;
        sub_27FA8(v208, v209);
      }
      v213 = (id *)(v136 + 88);
      v214 = (id *)(v137 + 88);
      v215 = v137[96];
      if (v136[96] == 255)
      {
        if (v215 == 255)
        {
          v221 = *v214;
          v136[96] = v137[96];
          *v213 = v221;
        }
        else
        {
          v219 = *v214;
          sub_27F80(*v214, v137[96]);
          *((_QWORD *)v136 + 11) = v219;
          v136[96] = v215;
        }
      }
      else if (v215 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 88));
        v220 = v137[96];
        *v213 = *v214;
        v136[96] = v220;
      }
      else
      {
        v216 = *v214;
        sub_27F80(*v214, v137[96]);
        v217 = (void *)*((_QWORD *)v136 + 11);
        *((_QWORD *)v136 + 11) = v216;
        v218 = v136[96];
        v136[96] = v215;
        sub_27FA8(v217, v218);
      }
      v222 = (id *)(v136 + 104);
      v223 = (id *)(v137 + 104);
      v224 = v137[112];
      if (v136[112] == 255)
      {
        if (v224 == 255)
        {
          v230 = *v223;
          v136[112] = v137[112];
          *v222 = v230;
        }
        else
        {
          v228 = *v223;
          sub_27F80(*v223, v137[112]);
          *((_QWORD *)v136 + 13) = v228;
          v136[112] = v224;
        }
      }
      else if (v224 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 104));
        v229 = v137[112];
        *v222 = *v223;
        v136[112] = v229;
      }
      else
      {
        v225 = *v223;
        sub_27F80(*v223, v137[112]);
        v226 = (void *)*((_QWORD *)v136 + 13);
        *((_QWORD *)v136 + 13) = v225;
        v227 = v136[112];
        v136[112] = v224;
        sub_27FA8(v226, v227);
      }
      v231 = (id *)(v136 + 120);
      v232 = (id *)(v137 + 120);
      v233 = v137[128];
      if (v136[128] == 255)
      {
        if (v233 == 255)
        {
          v239 = *v232;
          v136[128] = v137[128];
          *v231 = v239;
        }
        else
        {
          v237 = *v232;
          sub_27F80(*v232, v137[128]);
          *((_QWORD *)v136 + 15) = v237;
          v136[128] = v233;
        }
      }
      else if (v233 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 120));
        v238 = v137[128];
        *v231 = *v232;
        v136[128] = v238;
      }
      else
      {
        v234 = *v232;
        sub_27F80(*v232, v137[128]);
        v235 = (void *)*((_QWORD *)v136 + 15);
        *((_QWORD *)v136 + 15) = v234;
        v236 = v136[128];
        v136[128] = v233;
        sub_27FA8(v235, v236);
      }
      v136[129] = v137[129];
      v240 = v17[11];
      v241 = &v136[v240];
      v242 = &v137[v240];
      v243 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v243 - 8) + 24))(v241, v242, v243);
      v244 = v17[12];
      v245 = &v136[v244];
      v246 = &v137[v244];
      *(_QWORD *)v245 = *(_QWORD *)v246;
      v247 = *((_QWORD *)v246 + 1);
      v248 = *((_QWORD *)v245 + 1);
      *((_QWORD *)v245 + 1) = v247;
      swift_bridgeObjectRetain(v247);
      swift_bridgeObjectRelease(v248);
      v136[v17[13]] = v137[v17[13]];
      v136[v17[14]] = v137[v17[14]];
      v136[v17[15]] = v137[v17[15]];
      v249 = v17[16];
      v250 = &v136[v249];
      v251 = &v137[v249];
      *(_QWORD *)v250 = *(_QWORD *)v251;
      v252 = *((_QWORD *)v251 + 1);
      v253 = *((_QWORD *)v250 + 1);
      *((_QWORD *)v250 + 1) = v252;
      swift_bridgeObjectRetain(v252);
      swift_bridgeObjectRelease(v253);
      goto LABEL_135;
    }
    sub_FA4C((uint64_t)v136, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
LABEL_136:
  v254 = v13[10];
  v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  v257 = *(_DWORD *)v256;
  v255[4] = v256[4];
  *(_DWORD *)v255 = v257;
  v258 = v13[11];
  v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  v261 = *(_QWORD *)v260;
  v259[8] = v260[8];
  *(_QWORD *)v259 = v261;
  v262 = v13[12];
  v263 = (_QWORD *)((char *)a1 + v262);
  v264 = (_QWORD *)((char *)a2 + v262);
  *v263 = *v264;
  v265 = v264[1];
  v266 = v263[1];
  v263[1] = v265;
  swift_bridgeObjectRetain(v265);
  swift_bridgeObjectRelease(v266);
  *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
  v267 = v13[14];
  v268 = (char *)a1 + v267;
  v269 = (char *)a2 + v267;
  v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v270 - 8) + 24))(v268, v269, v270);
  v271 = v13[15];
  v272 = (char *)a1 + v271;
  v273 = (char *)a2 + v271;
  v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v275 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v274 - 8) + 24);
  v275(v272, v273, v274);
  v275((char *)a1 + v13[16], (char *)a2 + v13[16], v274);
  v275((char *)a1 + v13[17], (char *)a2 + v13[17], v274);
  v276 = v13[18];
  v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  v279 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v279 - 8) + 24))(v277, v278, v279);
  v280 = *(int *)(a3 + 20);
  v281 = *(_QWORD *)((char *)a2 + v280);
  v282 = *(_QWORD *)((char *)a1 + v280);
  *(_QWORD *)((char *)a1 + v280) = v281;
  swift_retain(v281);
  swift_release(v282);
  return a1;
}

uint64_t sub_249024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_OWORD *, uint64_t, int *);
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (int *)type metadata accessor for ShowHero(0);
  v7 = v6[8];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v15 = v10[11];
    v52 = v11;
    v16 = a3;
    v17 = (char *)v8 + v15;
    v18 = (char *)v9 + v15;
    v19 = type metadata accessor for ArtworkCrop(0);
    v20 = v17;
    a3 = v16;
    v11 = v52;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v20, v18, v19);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v52 + 56))(v8, 0, 1, v10);
  }
  v21 = v6[9];
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  if (v12((_OWORD *)(a2 + v21), 1, v10))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v23[1];
    *v22 = *v23;
    v22[1] = v25;
    *((_BYTE *)v22 + 32) = *((_BYTE *)v23 + 32);
    *(_OWORD *)((char *)v22 + 40) = *(_OWORD *)((char *)v23 + 40);
    *((_QWORD *)v22 + 7) = *((_QWORD *)v23 + 7);
    *((_BYTE *)v22 + 64) = *((_BYTE *)v23 + 64);
    *(_OWORD *)((char *)v22 + 113) = *(_OWORD *)((char *)v23 + 113);
    *(_OWORD *)((char *)v22 + 104) = *(_OWORD *)((char *)v23 + 104);
    *(_OWORD *)((char *)v22 + 88) = *(_OWORD *)((char *)v23 + 88);
    *(_OWORD *)((char *)v22 + 72) = *(_OWORD *)((char *)v23 + 72);
    *((_BYTE *)v22 + 129) = *((_BYTE *)v23 + 129);
    v26 = v10[11];
    v27 = a3;
    v28 = (char *)v22 + v26;
    v29 = (char *)v23 + v26;
    v30 = type metadata accessor for ArtworkCrop(0);
    v31 = v28;
    a3 = v27;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v31, v29, v30);
    *(_OWORD *)((char *)v22 + v10[12]) = *(_OWORD *)((char *)v23 + v10[12]);
    *((_BYTE *)v22 + v10[13]) = *((_BYTE *)v23 + v10[13]);
    *((_BYTE *)v22 + v10[14]) = *((_BYTE *)v23 + v10[14]);
    *((_BYTE *)v22 + v10[15]) = *((_BYTE *)v23 + v10[15]);
    *(_OWORD *)((char *)v22 + v10[16]) = *(_OWORD *)((char *)v23 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v22, 0, 1, v10);
  }
  v32 = v6[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = v6[11];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  v38 = v6[14];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  v42 = v6[15];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32);
  v46(v43, v44, v45);
  v46(a1 + v6[16], a2 + v6[16], v45);
  v46(a1 + v6[17], a2 + v6[17], v45);
  v47 = v6[18];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24940C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, int *);
  int v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  int v85;
  int v86;
  void *v87;
  _QWORD *v88;
  int v89;
  int v90;
  void *v91;
  _QWORD *v92;
  int v93;
  int v94;
  void *v95;
  _QWORD *v96;
  int v97;
  int v98;
  void *v99;
  _QWORD *v100;
  int v101;
  int v102;
  void *v103;
  _QWORD *v104;
  int v105;
  int v106;
  void *v107;
  _QWORD *v108;
  int v109;
  int v110;
  void *v111;
  _QWORD *v112;
  int v113;
  int v114;
  void *v115;
  _QWORD *v116;
  int v117;
  int v118;
  void *v119;
  _QWORD *v120;
  int v121;
  uint64_t v122;
  int v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int *v157;
  uint64_t v158;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = (int *)type metadata accessor for ShowHero(0);
  v11 = v10[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = (int *)type metadata accessor for ArtworkModel(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      v19 = *(_OWORD *)(v13 + 16);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *(_OWORD *)(v12 + 16) = v19;
      *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
      *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
      *(_OWORD *)(v12 + 113) = *(_OWORD *)(v13 + 113);
      *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
      *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
      *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
      *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
      v20 = v14[11];
      v21 = v12 + v20;
      v157 = v10;
      v22 = v16;
      v23 = v15;
      v24 = a3;
      v25 = v13 + v20;
      v26 = type metadata accessor for ArtworkCrop(0);
      v27 = v25;
      a3 = v24;
      v15 = v23;
      v16 = v22;
      v10 = v157;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v21, v27, v26);
      *(_OWORD *)(v12 + v14[12]) = *(_OWORD *)(v13 + v14[12]);
      *(_BYTE *)(v12 + v14[13]) = *(_BYTE *)(v13 + v14[13]);
      *(_BYTE *)(v12 + v14[14]) = *(_BYTE *)(v13 + v14[14]);
      *(_BYTE *)(v12 + v14[15]) = *(_BYTE *)(v13 + v14[15]);
      *(_OWORD *)(v12 + v14[16]) = *(_OWORD *)(v13 + v14[16]);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_FA4C(v12, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v12, (const void *)v13, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  v158 = a3;
  v70 = *(_QWORD *)(v13 + 8);
  v71 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v70;
  swift_bridgeObjectRelease(v71);
  v72 = (_OWORD *)(v13 + 16);
  v73 = *(unsigned __int8 *)(v12 + 32);
  if (v73 != 255)
  {
    v74 = *(unsigned __int8 *)(v13 + 32);
    if (v74 != 255)
    {
      v75 = *(_QWORD *)(v12 + 16);
      v76 = *(_QWORD *)(v12 + 24);
      *(_OWORD *)(v12 + 16) = *v72;
      *(_BYTE *)(v12 + 32) = v74;
      sub_108270(v75, v76, v73);
      goto LABEL_22;
    }
    sub_108DD8(v12 + 16);
  }
  *(_OWORD *)(v12 + 16) = *v72;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
LABEL_22:
  *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
  v84 = (_QWORD *)(v13 + 56);
  v85 = *(unsigned __int8 *)(v12 + 64);
  if (v85 != 255)
  {
    v86 = *(unsigned __int8 *)(v13 + 64);
    if (v86 != 255)
    {
      v87 = *(void **)(v12 + 56);
      *(_QWORD *)(v12 + 56) = *v84;
      *(_BYTE *)(v12 + 64) = v86;
      sub_27FA8(v87, v85);
      goto LABEL_32;
    }
    sub_108E0C(v12 + 56);
  }
  *(_QWORD *)(v12 + 56) = *v84;
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
LABEL_32:
  v92 = (_QWORD *)(v13 + 72);
  v93 = *(unsigned __int8 *)(v12 + 80);
  if (v93 != 255)
  {
    v94 = *(unsigned __int8 *)(v13 + 80);
    if (v94 != 255)
    {
      v95 = *(void **)(v12 + 72);
      *(_QWORD *)(v12 + 72) = *v92;
      *(_BYTE *)(v12 + 80) = v94;
      sub_27FA8(v95, v93);
      goto LABEL_42;
    }
    sub_108E0C(v12 + 72);
  }
  *(_QWORD *)(v12 + 72) = *v92;
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
LABEL_42:
  v100 = (_QWORD *)(v13 + 88);
  v101 = *(unsigned __int8 *)(v12 + 96);
  if (v101 != 255)
  {
    v102 = *(unsigned __int8 *)(v13 + 96);
    if (v102 != 255)
    {
      v103 = *(void **)(v12 + 88);
      *(_QWORD *)(v12 + 88) = *v100;
      *(_BYTE *)(v12 + 96) = v102;
      sub_27FA8(v103, v101);
      goto LABEL_52;
    }
    sub_108E0C(v12 + 88);
  }
  *(_QWORD *)(v12 + 88) = *v100;
  *(_BYTE *)(v12 + 96) = *(_BYTE *)(v13 + 96);
LABEL_52:
  v108 = (_QWORD *)(v13 + 104);
  v109 = *(unsigned __int8 *)(v12 + 112);
  if (v109 != 255)
  {
    v110 = *(unsigned __int8 *)(v13 + 112);
    if (v110 != 255)
    {
      v111 = *(void **)(v12 + 104);
      *(_QWORD *)(v12 + 104) = *v108;
      *(_BYTE *)(v12 + 112) = v110;
      sub_27FA8(v111, v109);
      goto LABEL_62;
    }
    sub_108E0C(v12 + 104);
  }
  *(_QWORD *)(v12 + 104) = *v108;
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
LABEL_62:
  v116 = (_QWORD *)(v13 + 120);
  v117 = *(unsigned __int8 *)(v12 + 128);
  if (v117 == 255)
  {
LABEL_71:
    *(_QWORD *)(v12 + 120) = *v116;
    *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
    goto LABEL_72;
  }
  v118 = *(unsigned __int8 *)(v13 + 128);
  if (v118 == 255)
  {
    sub_108E0C(v12 + 120);
    goto LABEL_71;
  }
  v119 = *(void **)(v12 + 120);
  *(_QWORD *)(v12 + 120) = *v116;
  *(_BYTE *)(v12 + 128) = v118;
  sub_27FA8(v119, v117);
LABEL_72:
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  v125 = v14[11];
  v126 = v12 + v125;
  v127 = v13 + v125;
  v128 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 40))(v126, v127, v128);
  v129 = v14[12];
  v130 = (_QWORD *)(v12 + v129);
  v131 = (uint64_t *)(v13 + v129);
  v133 = *v131;
  v132 = v131[1];
  v134 = v130[1];
  *v130 = v133;
  v130[1] = v132;
  swift_bridgeObjectRelease(v134);
  *(_BYTE *)(v12 + v14[13]) = *(_BYTE *)(v13 + v14[13]);
  *(_BYTE *)(v12 + v14[14]) = *(_BYTE *)(v13 + v14[14]);
  *(_BYTE *)(v12 + v14[15]) = *(_BYTE *)(v13 + v14[15]);
  v135 = v14[16];
  v136 = (_QWORD *)(v12 + v135);
  v137 = (uint64_t *)(v13 + v135);
  v139 = *v137;
  v138 = v137[1];
  v140 = v136[1];
  *v136 = v139;
  v136[1] = v138;
  swift_bridgeObjectRelease(v140);
  a3 = v158;
LABEL_7:
  v29 = v10[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = v16(a1 + v29, 1, v14);
  v33 = v16(v31, 1, v14);
  if (!v32)
  {
    if (v33)
    {
      sub_FA4C(v30, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      goto LABEL_12;
    }
    v77 = *(_QWORD *)(v31 + 8);
    v78 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *(_QWORD *)(v30 + 8) = v77;
    swift_bridgeObjectRelease(v78);
    v79 = (_OWORD *)(v31 + 16);
    v80 = *(unsigned __int8 *)(v30 + 32);
    if (v80 != 255)
    {
      v81 = *(unsigned __int8 *)(v31 + 32);
      if (v81 != 255)
      {
        v82 = *(_QWORD *)(v30 + 16);
        v83 = *(_QWORD *)(v30 + 24);
        *(_OWORD *)(v30 + 16) = *v79;
        *(_BYTE *)(v30 + 32) = v81;
        sub_108270(v82, v83, v80);
        goto LABEL_27;
      }
      sub_108DD8(v30 + 16);
    }
    *(_OWORD *)(v30 + 16) = *v79;
    *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
LABEL_27:
    *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
    v88 = (_QWORD *)(v31 + 56);
    v89 = *(unsigned __int8 *)(v30 + 64);
    if (v89 != 255)
    {
      v90 = *(unsigned __int8 *)(v31 + 64);
      if (v90 != 255)
      {
        v91 = *(void **)(v30 + 56);
        *(_QWORD *)(v30 + 56) = *v88;
        *(_BYTE *)(v30 + 64) = v90;
        sub_27FA8(v91, v89);
        goto LABEL_37;
      }
      sub_108E0C(v30 + 56);
    }
    *(_QWORD *)(v30 + 56) = *v88;
    *(_BYTE *)(v30 + 64) = *(_BYTE *)(v31 + 64);
LABEL_37:
    v96 = (_QWORD *)(v31 + 72);
    v97 = *(unsigned __int8 *)(v30 + 80);
    if (v97 != 255)
    {
      v98 = *(unsigned __int8 *)(v31 + 80);
      if (v98 != 255)
      {
        v99 = *(void **)(v30 + 72);
        *(_QWORD *)(v30 + 72) = *v96;
        *(_BYTE *)(v30 + 80) = v98;
        sub_27FA8(v99, v97);
        goto LABEL_47;
      }
      sub_108E0C(v30 + 72);
    }
    *(_QWORD *)(v30 + 72) = *v96;
    *(_BYTE *)(v30 + 80) = *(_BYTE *)(v31 + 80);
LABEL_47:
    v104 = (_QWORD *)(v31 + 88);
    v105 = *(unsigned __int8 *)(v30 + 96);
    if (v105 != 255)
    {
      v106 = *(unsigned __int8 *)(v31 + 96);
      if (v106 != 255)
      {
        v107 = *(void **)(v30 + 88);
        *(_QWORD *)(v30 + 88) = *v104;
        *(_BYTE *)(v30 + 96) = v106;
        sub_27FA8(v107, v105);
        goto LABEL_57;
      }
      sub_108E0C(v30 + 88);
    }
    *(_QWORD *)(v30 + 88) = *v104;
    *(_BYTE *)(v30 + 96) = *(_BYTE *)(v31 + 96);
LABEL_57:
    v112 = (_QWORD *)(v31 + 104);
    v113 = *(unsigned __int8 *)(v30 + 112);
    if (v113 != 255)
    {
      v114 = *(unsigned __int8 *)(v31 + 112);
      if (v114 != 255)
      {
        v115 = *(void **)(v30 + 104);
        *(_QWORD *)(v30 + 104) = *v112;
        *(_BYTE *)(v30 + 112) = v114;
        sub_27FA8(v115, v113);
        goto LABEL_67;
      }
      sub_108E0C(v30 + 104);
    }
    *(_QWORD *)(v30 + 104) = *v112;
    *(_BYTE *)(v30 + 112) = *(_BYTE *)(v31 + 112);
LABEL_67:
    v120 = (_QWORD *)(v31 + 120);
    v121 = *(unsigned __int8 *)(v30 + 128);
    v122 = a3;
    if (v121 != 255)
    {
      v123 = *(unsigned __int8 *)(v31 + 128);
      if (v123 != 255)
      {
        v124 = *(void **)(v30 + 120);
        *(_QWORD *)(v30 + 120) = *v120;
        *(_BYTE *)(v30 + 128) = v123;
        sub_27FA8(v124, v121);
LABEL_75:
        *(_BYTE *)(v30 + 129) = *(_BYTE *)(v31 + 129);
        v141 = v14[11];
        v142 = v30 + v141;
        v143 = v31 + v141;
        v144 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 40))(v142, v143, v144);
        v145 = v14[12];
        v146 = (_QWORD *)(v30 + v145);
        v147 = (uint64_t *)(v31 + v145);
        v149 = *v147;
        v148 = v147[1];
        v150 = v146[1];
        *v146 = v149;
        v146[1] = v148;
        swift_bridgeObjectRelease(v150);
        *(_BYTE *)(v30 + v14[13]) = *(_BYTE *)(v31 + v14[13]);
        *(_BYTE *)(v30 + v14[14]) = *(_BYTE *)(v31 + v14[14]);
        *(_BYTE *)(v30 + v14[15]) = *(_BYTE *)(v31 + v14[15]);
        v151 = v14[16];
        v152 = (_QWORD *)(v30 + v151);
        v153 = (uint64_t *)(v31 + v151);
        v155 = *v153;
        v154 = v153[1];
        v156 = v152[1];
        *v152 = v155;
        v152[1] = v154;
        swift_bridgeObjectRelease(v156);
        a3 = v122;
        goto LABEL_13;
      }
      sub_108E0C(v30 + 120);
    }
    *(_QWORD *)(v30 + 120) = *v120;
    *(_BYTE *)(v30 + 128) = *(_BYTE *)(v31 + 128);
    goto LABEL_75;
  }
  if (v33)
  {
LABEL_12:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v30, (const void *)v31, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  v34 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v34;
  *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
  *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 56) = *(_QWORD *)(v31 + 56);
  *(_BYTE *)(v30 + 64) = *(_BYTE *)(v31 + 64);
  *(_OWORD *)(v30 + 113) = *(_OWORD *)(v31 + 113);
  *(_OWORD *)(v30 + 104) = *(_OWORD *)(v31 + 104);
  *(_OWORD *)(v30 + 88) = *(_OWORD *)(v31 + 88);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  *(_BYTE *)(v30 + 129) = *(_BYTE *)(v31 + 129);
  v35 = v14[11];
  v36 = v30 + v35;
  v37 = a3;
  v38 = v31 + v35;
  v39 = type metadata accessor for ArtworkCrop(0);
  v40 = v38;
  a3 = v37;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v40, v39);
  *(_OWORD *)(v30 + v14[12]) = *(_OWORD *)(v31 + v14[12]);
  *(_BYTE *)(v30 + v14[13]) = *(_BYTE *)(v31 + v14[13]);
  *(_BYTE *)(v30 + v14[14]) = *(_BYTE *)(v31 + v14[14]);
  *(_BYTE *)(v30 + v14[15]) = *(_BYTE *)(v31 + v14[15]);
  *(_OWORD *)(v30 + v14[16]) = *(_OWORD *)(v31 + v14[16]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v15 + 56))(v30, 0, 1, v14);
LABEL_13:
  v42 = v10[10];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_DWORD *)v43 = *(_DWORD *)v44;
  *(_BYTE *)(v43 + 4) = *(_BYTE *)(v44 + 4);
  v45 = v10[11];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v48 = v10[12];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  v53 = v49[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease(v53);
  *(_BYTE *)(a1 + v10[13]) = *(_BYTE *)(a2 + v10[13]);
  v54 = v10[14];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 40))(v55, v56, v57);
  v58 = v10[15];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 40);
  v62(v59, v60, v61);
  v62(a1 + v10[16], a2 + v10[16], v61);
  v62(a1 + v10[17], a2 + v10[17], v61);
  v63 = v10[18];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  v67 = *(int *)(a3 + 20);
  v68 = *(_QWORD *)(a1 + v67);
  *(_QWORD *)(a1 + v67) = *(_QWORD *)(a2 + v67);
  swift_release(v68);
  return a1;
}

uint64_t sub_249DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_249DC0);
}

uint64_t sub_249DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ShowHero(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_249E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_249E48);
}

uint64_t sub_249E48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ShowHero(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_249EC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for ShowHero(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_249F34(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD, _QWORD, _QWORD);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  void (*v51)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  id *v61;
  int v62;
  id v63;
  id *v64;
  int v65;
  id v66;
  id *v67;
  int v68;
  id v69;
  id *v70;
  int v71;
  id v72;
  id *v73;
  int v74;
  id v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  void (*v88)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t *v116;
  uint64_t v117;
  char *v118;
  void *v119;
  unsigned int (*v121)(_QWORD, _QWORD, _QWORD);
  uint64_t v122;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a2[4];
    v9 = (void *)a2[5];
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    v10 = (int *)type metadata accessor for ShowHero(0);
    v11 = v10[8];
    v12 = (_QWORD *)((char *)v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = (int *)type metadata accessor for ArtworkModel(0);
    v122 = *((_QWORD *)v14 - 1);
    v15 = v7;
    v16 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v122 + 48);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v8);
    v17 = v9;
    if (v16(v13, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v121 = v16;
      v20 = v13[1];
      *v12 = *v13;
      v12[1] = v20;
      v21 = *((unsigned __int8 *)v13 + 32);
      swift_bridgeObjectRetain(v20);
      if (v21 == 255)
      {
        *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
        *((_BYTE *)v12 + 32) = *((_BYTE *)v13 + 32);
      }
      else
      {
        v22 = v13[2];
        v23 = v13[3];
        sub_108110(v22, v23, v21);
        v12[2] = v22;
        v12[3] = v23;
        *((_BYTE *)v12 + 32) = v21;
      }
      *(_OWORD *)(v12 + 5) = *(_OWORD *)(v13 + 5);
      v24 = (id *)(v13 + 7);
      v25 = *((unsigned __int8 *)v13 + 64);
      if (v25 == 255)
      {
        v12[7] = *v24;
        *((_BYTE *)v12 + 64) = *((_BYTE *)v13 + 64);
      }
      else
      {
        v26 = *v24;
        sub_27F80(*v24, *((_BYTE *)v13 + 64));
        v12[7] = v26;
        *((_BYTE *)v12 + 64) = v25;
      }
      v27 = (id *)(v13 + 9);
      v28 = *((unsigned __int8 *)v13 + 80);
      if (v28 == 255)
      {
        v12[9] = *v27;
        *((_BYTE *)v12 + 80) = *((_BYTE *)v13 + 80);
      }
      else
      {
        v29 = *v27;
        sub_27F80(*v27, *((_BYTE *)v13 + 80));
        v12[9] = v29;
        *((_BYTE *)v12 + 80) = v28;
      }
      v30 = (id *)(v13 + 11);
      v31 = *((unsigned __int8 *)v13 + 96);
      if (v31 == 255)
      {
        v12[11] = *v30;
        *((_BYTE *)v12 + 96) = *((_BYTE *)v13 + 96);
      }
      else
      {
        v32 = *v30;
        sub_27F80(*v30, *((_BYTE *)v13 + 96));
        v12[11] = v32;
        *((_BYTE *)v12 + 96) = v31;
      }
      v33 = (id *)(v13 + 13);
      v34 = *((unsigned __int8 *)v13 + 112);
      if (v34 == 255)
      {
        v12[13] = *v33;
        *((_BYTE *)v12 + 112) = *((_BYTE *)v13 + 112);
      }
      else
      {
        v35 = *v33;
        sub_27F80(*v33, *((_BYTE *)v13 + 112));
        v12[13] = v35;
        *((_BYTE *)v12 + 112) = v34;
      }
      v36 = (id *)(v13 + 15);
      v37 = *((unsigned __int8 *)v13 + 128);
      if (v37 == 255)
      {
        v12[15] = *v36;
        *((_BYTE *)v12 + 128) = *((_BYTE *)v13 + 128);
      }
      else
      {
        v38 = *v36;
        sub_27F80(*v36, *((_BYTE *)v13 + 128));
        v12[15] = v38;
        *((_BYTE *)v12 + 128) = v37;
      }
      *((_BYTE *)v12 + 129) = *((_BYTE *)v13 + 129);
      v39 = v14[11];
      v40 = (char *)v12 + v39;
      v41 = (char *)v13 + v39;
      v42 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      v43 = v14[12];
      v44 = (_QWORD *)((char *)v12 + v43);
      v45 = (_QWORD *)((char *)v13 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      *((_BYTE *)v12 + v14[13]) = *((_BYTE *)v13 + v14[13]);
      *((_BYTE *)v12 + v14[14]) = *((_BYTE *)v13 + v14[14]);
      *((_BYTE *)v12 + v14[15]) = *((_BYTE *)v13 + v14[15]);
      v47 = v14[16];
      v48 = (_QWORD *)((char *)v12 + v47);
      v49 = (_QWORD *)((char *)v13 + v47);
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      v51 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v122 + 56);
      swift_bridgeObjectRetain(v46);
      v52 = swift_bridgeObjectRetain(v50);
      v51(v12, 0, 1, v14, v52);
      v16 = v121;
    }
    v53 = v10[9];
    v54 = (_QWORD *)((char *)v4 + v53);
    v55 = (uint64_t *)((char *)a2 + v53);
    if (v16((char *)a2 + v53, 1, v14))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v57 = v55[1];
      *v54 = *v55;
      v54[1] = v57;
      v58 = *((unsigned __int8 *)v55 + 32);
      swift_bridgeObjectRetain(v57);
      if (v58 == 255)
      {
        *((_OWORD *)v54 + 1) = *((_OWORD *)v55 + 1);
        *((_BYTE *)v54 + 32) = *((_BYTE *)v55 + 32);
      }
      else
      {
        v59 = v55[2];
        v60 = v55[3];
        sub_108110(v59, v60, v58);
        v54[2] = v59;
        v54[3] = v60;
        *((_BYTE *)v54 + 32) = v58;
      }
      *(_OWORD *)(v54 + 5) = *(_OWORD *)(v55 + 5);
      v61 = (id *)(v55 + 7);
      v62 = *((unsigned __int8 *)v55 + 64);
      if (v62 == 255)
      {
        v54[7] = *v61;
        *((_BYTE *)v54 + 64) = *((_BYTE *)v55 + 64);
      }
      else
      {
        v63 = *v61;
        sub_27F80(*v61, *((_BYTE *)v55 + 64));
        v54[7] = v63;
        *((_BYTE *)v54 + 64) = v62;
      }
      v64 = (id *)(v55 + 9);
      v65 = *((unsigned __int8 *)v55 + 80);
      if (v65 == 255)
      {
        v54[9] = *v64;
        *((_BYTE *)v54 + 80) = *((_BYTE *)v55 + 80);
      }
      else
      {
        v66 = *v64;
        sub_27F80(*v64, *((_BYTE *)v55 + 80));
        v54[9] = v66;
        *((_BYTE *)v54 + 80) = v65;
      }
      v67 = (id *)(v55 + 11);
      v68 = *((unsigned __int8 *)v55 + 96);
      if (v68 == 255)
      {
        v54[11] = *v67;
        *((_BYTE *)v54 + 96) = *((_BYTE *)v55 + 96);
      }
      else
      {
        v69 = *v67;
        sub_27F80(*v67, *((_BYTE *)v55 + 96));
        v54[11] = v69;
        *((_BYTE *)v54 + 96) = v68;
      }
      v70 = (id *)(v55 + 13);
      v71 = *((unsigned __int8 *)v55 + 112);
      if (v71 == 255)
      {
        v54[13] = *v70;
        *((_BYTE *)v54 + 112) = *((_BYTE *)v55 + 112);
      }
      else
      {
        v72 = *v70;
        sub_27F80(*v70, *((_BYTE *)v55 + 112));
        v54[13] = v72;
        *((_BYTE *)v54 + 112) = v71;
      }
      v73 = (id *)(v55 + 15);
      v74 = *((unsigned __int8 *)v55 + 128);
      if (v74 == 255)
      {
        v54[15] = *v73;
        *((_BYTE *)v54 + 128) = *((_BYTE *)v55 + 128);
      }
      else
      {
        v75 = *v73;
        sub_27F80(*v73, *((_BYTE *)v55 + 128));
        v54[15] = v75;
        *((_BYTE *)v54 + 128) = v74;
      }
      *((_BYTE *)v54 + 129) = *((_BYTE *)v55 + 129);
      v76 = v14[11];
      v77 = (char *)v54 + v76;
      v78 = (char *)v55 + v76;
      v79 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
      v80 = v14[12];
      v81 = (_QWORD *)((char *)v54 + v80);
      v82 = (_QWORD *)((char *)v55 + v80);
      v83 = v82[1];
      *v81 = *v82;
      v81[1] = v83;
      *((_BYTE *)v54 + v14[13]) = *((_BYTE *)v55 + v14[13]);
      *((_BYTE *)v54 + v14[14]) = *((_BYTE *)v55 + v14[14]);
      *((_BYTE *)v54 + v14[15]) = *((_BYTE *)v55 + v14[15]);
      v84 = v14[16];
      v85 = (_QWORD *)((char *)v54 + v84);
      v86 = (_QWORD *)((char *)v55 + v84);
      v87 = v86[1];
      *v85 = *v86;
      v85[1] = v87;
      v88 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v122 + 56);
      swift_bridgeObjectRetain(v83);
      v89 = swift_bridgeObjectRetain(v87);
      v88(v54, 0, 1, v14, v89);
    }
    v90 = v10[10];
    v91 = (char *)v4 + v90;
    v92 = (uint64_t)a2 + v90;
    *(_DWORD *)v91 = *(_DWORD *)v92;
    v91[4] = *(_BYTE *)(v92 + 4);
    v93 = v10[11];
    v94 = (char *)v4 + v93;
    v95 = (uint64_t)a2 + v93;
    v94[8] = *(_BYTE *)(v95 + 8);
    *(_QWORD *)v94 = *(_QWORD *)v95;
    v96 = v10[12];
    v97 = (_QWORD *)((char *)v4 + v96);
    v98 = (uint64_t *)((char *)a2 + v96);
    v99 = v98[1];
    *v97 = *v98;
    v97[1] = v99;
    *((_BYTE *)v4 + v10[13]) = *((_BYTE *)a2 + v10[13]);
    v100 = v10[14];
    v101 = (char *)v4 + v100;
    v102 = (uint64_t)a2 + v100;
    swift_bridgeObjectRetain(v99);
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
    v104 = v10[15];
    v105 = (char *)v4 + v104;
    v106 = (uint64_t)a2 + v104;
    v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
    v108 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
    v108(v105, v106, v107);
    v108((char *)v4 + v10[16], (uint64_t)a2 + v10[16], v107);
    v108((char *)v4 + v10[17], (uint64_t)a2 + v10[17], v107);
    v109 = v10[18];
    v110 = (char *)v4 + v109;
    v111 = (uint64_t)a2 + v109;
    v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v110, v111, v112);
    v113 = a3[5];
    v114 = a3[6];
    v115 = (char *)v4 + v113;
    v116 = (uint64_t *)((char *)a2 + v113);
    v117 = *v116;
    LOBYTE(v116) = *((_BYTE *)v116 + 8);
    *(_QWORD *)v115 = v117;
    v115[8] = (char)v116;
    v118 = (char *)v4 + v114;
    v119 = *(void **)((char *)a2 + v114);
    LOBYTE(v111) = *((_BYTE *)a2 + v114 + 8);
    swift_retain(v117);
    sub_15E90(v119, v111);
    *(_QWORD *)v118 = v119;
    v118[8] = v111;
    *(_QWORD *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return v4;
}

void sub_24A67C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  int *v6;
  unsigned int (*v7)(uint64_t, uint64_t, int *);
  __n128 v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));

  v4 = (int *)type metadata accessor for ShowHero(0);
  v5 = a1 + v4[8];
  v6 = (int *)type metadata accessor for ArtworkModel(0);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
    v9 = *(unsigned __int8 *)(v5 + 32);
    if (v9 != 255)
      sub_108270(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v9);
    v10 = *(unsigned __int8 *)(v5 + 64);
    if (v10 != 255)
      sub_27FA8(*(id *)(v5 + 56), v10);
    v11 = *(unsigned __int8 *)(v5 + 80);
    if (v11 != 255)
      sub_27FA8(*(id *)(v5 + 72), v11);
    v12 = *(unsigned __int8 *)(v5 + 96);
    if (v12 != 255)
      sub_27FA8(*(id *)(v5 + 88), v12);
    v13 = *(unsigned __int8 *)(v5 + 112);
    if (v13 != 255)
      sub_27FA8(*(id *)(v5 + 104), v13);
    v14 = *(unsigned __int8 *)(v5 + 128);
    if (v14 != 255)
      sub_27FA8(*(id *)(v5 + 120), v14);
    v15 = v5 + v6[11];
    v16 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[12] + 8));
    v8 = swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[16] + 8));
  }
  v17 = a1 + v4[9];
  if (!((unsigned int (*)(uint64_t, uint64_t, int *, __n128))v7)(v17, 1, v6, v8))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8));
    v18 = *(unsigned __int8 *)(v17 + 32);
    if (v18 != 255)
      sub_108270(*(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24), v18);
    v19 = *(unsigned __int8 *)(v17 + 64);
    if (v19 != 255)
      sub_27FA8(*(id *)(v17 + 56), v19);
    v20 = *(unsigned __int8 *)(v17 + 80);
    if (v20 != 255)
      sub_27FA8(*(id *)(v17 + 72), v20);
    v21 = *(unsigned __int8 *)(v17 + 96);
    if (v21 != 255)
      sub_27FA8(*(id *)(v17 + 88), v21);
    v22 = *(unsigned __int8 *)(v17 + 112);
    if (v22 != 255)
      sub_27FA8(*(id *)(v17 + 104), v22);
    v23 = *(unsigned __int8 *)(v17 + 128);
    if (v23 != 255)
      sub_27FA8(*(id *)(v17 + 120), v23);
    v24 = v17 + v6[11];
    v25 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + v6[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + v6[16] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[12] + 8));
  v26 = a1 + v4[14];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  v28 = a1 + v4[15];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
  v30(v28, v29);
  v30(a1 + v4[16], v29);
  v30(a1 + v4[17], v29);
  v31 = a1 + v4[18];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
  sub_15E9C(*(id *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t sub_24A974(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  id v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  id *v57;
  int v58;
  id v59;
  id *v60;
  int v61;
  id v62;
  id *v63;
  int v64;
  id v65;
  id *v66;
  int v67;
  id v68;
  id *v69;
  int v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  void (*v84)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v117;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = (int *)type metadata accessor for ShowHero(0);
  v9 = v8[8];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = (int *)type metadata accessor for ArtworkModel(0);
  v117 = *((_QWORD *)v12 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v117 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v14 = v7;
  if (v13(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v11[1];
    *v10 = *v11;
    v10[1] = v16;
    v17 = *((unsigned __int8 *)v11 + 32);
    swift_bridgeObjectRetain(v16);
    if (v17 == 255)
    {
      *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
      *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
    }
    else
    {
      v18 = v11[2];
      v19 = v11[3];
      sub_108110(v18, v19, v17);
      v10[2] = v18;
      v10[3] = v19;
      *((_BYTE *)v10 + 32) = v17;
    }
    *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
    v20 = (id *)(v11 + 7);
    v21 = *((unsigned __int8 *)v11 + 64);
    if (v21 == 255)
    {
      v10[7] = *v20;
      *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
    }
    else
    {
      v22 = *v20;
      sub_27F80(*v20, *((_BYTE *)v11 + 64));
      v10[7] = v22;
      *((_BYTE *)v10 + 64) = v21;
    }
    v23 = (id *)(v11 + 9);
    v24 = *((unsigned __int8 *)v11 + 80);
    if (v24 == 255)
    {
      v10[9] = *v23;
      *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
    }
    else
    {
      v25 = *v23;
      sub_27F80(*v23, *((_BYTE *)v11 + 80));
      v10[9] = v25;
      *((_BYTE *)v10 + 80) = v24;
    }
    v26 = (id *)(v11 + 11);
    v27 = *((unsigned __int8 *)v11 + 96);
    if (v27 == 255)
    {
      v10[11] = *v26;
      *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
    }
    else
    {
      v28 = *v26;
      sub_27F80(*v26, *((_BYTE *)v11 + 96));
      v10[11] = v28;
      *((_BYTE *)v10 + 96) = v27;
    }
    v29 = (id *)(v11 + 13);
    v30 = *((unsigned __int8 *)v11 + 112);
    if (v30 == 255)
    {
      v10[13] = *v29;
      *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
    }
    else
    {
      v31 = *v29;
      sub_27F80(*v29, *((_BYTE *)v11 + 112));
      v10[13] = v31;
      *((_BYTE *)v10 + 112) = v30;
    }
    v32 = (id *)(v11 + 15);
    v33 = *((unsigned __int8 *)v11 + 128);
    if (v33 == 255)
    {
      v10[15] = *v32;
      *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
    }
    else
    {
      v34 = *v32;
      sub_27F80(*v32, *((_BYTE *)v11 + 128));
      v10[15] = v34;
      *((_BYTE *)v10 + 128) = v33;
    }
    *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
    v35 = v12[11];
    v36 = (char *)v10 + v35;
    v37 = (char *)v11 + v35;
    v38 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    v39 = v12[12];
    v40 = (_QWORD *)((char *)v10 + v39);
    v41 = (_QWORD *)((char *)v11 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
    *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
    *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
    v43 = v12[16];
    v44 = (_QWORD *)((char *)v10 + v43);
    v45 = (_QWORD *)((char *)v11 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v117 + 56);
    swift_bridgeObjectRetain(v42);
    v48 = swift_bridgeObjectRetain(v46);
    v47(v10, 0, 1, v12, v48);
  }
  v49 = v8[9];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  if (v13((_QWORD *)(a2 + v49), 1, v12))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v53 = v51[1];
    *v50 = *v51;
    v50[1] = v53;
    v54 = *((unsigned __int8 *)v51 + 32);
    swift_bridgeObjectRetain(v53);
    if (v54 == 255)
    {
      *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
      *((_BYTE *)v50 + 32) = *((_BYTE *)v51 + 32);
    }
    else
    {
      v55 = v51[2];
      v56 = v51[3];
      sub_108110(v55, v56, v54);
      v50[2] = v55;
      v50[3] = v56;
      *((_BYTE *)v50 + 32) = v54;
    }
    *(_OWORD *)(v50 + 5) = *(_OWORD *)(v51 + 5);
    v57 = (id *)(v51 + 7);
    v58 = *((unsigned __int8 *)v51 + 64);
    if (v58 == 255)
    {
      v50[7] = *v57;
      *((_BYTE *)v50 + 64) = *((_BYTE *)v51 + 64);
    }
    else
    {
      v59 = *v57;
      sub_27F80(*v57, *((_BYTE *)v51 + 64));
      v50[7] = v59;
      *((_BYTE *)v50 + 64) = v58;
    }
    v60 = (id *)(v51 + 9);
    v61 = *((unsigned __int8 *)v51 + 80);
    if (v61 == 255)
    {
      v50[9] = *v60;
      *((_BYTE *)v50 + 80) = *((_BYTE *)v51 + 80);
    }
    else
    {
      v62 = *v60;
      sub_27F80(*v60, *((_BYTE *)v51 + 80));
      v50[9] = v62;
      *((_BYTE *)v50 + 80) = v61;
    }
    v63 = (id *)(v51 + 11);
    v64 = *((unsigned __int8 *)v51 + 96);
    if (v64 == 255)
    {
      v50[11] = *v63;
      *((_BYTE *)v50 + 96) = *((_BYTE *)v51 + 96);
    }
    else
    {
      v65 = *v63;
      sub_27F80(*v63, *((_BYTE *)v51 + 96));
      v50[11] = v65;
      *((_BYTE *)v50 + 96) = v64;
    }
    v66 = (id *)(v51 + 13);
    v67 = *((unsigned __int8 *)v51 + 112);
    if (v67 == 255)
    {
      v50[13] = *v66;
      *((_BYTE *)v50 + 112) = *((_BYTE *)v51 + 112);
    }
    else
    {
      v68 = *v66;
      sub_27F80(*v66, *((_BYTE *)v51 + 112));
      v50[13] = v68;
      *((_BYTE *)v50 + 112) = v67;
    }
    v69 = (id *)(v51 + 15);
    v70 = *((unsigned __int8 *)v51 + 128);
    if (v70 == 255)
    {
      v50[15] = *v69;
      *((_BYTE *)v50 + 128) = *((_BYTE *)v51 + 128);
    }
    else
    {
      v71 = *v69;
      sub_27F80(*v69, *((_BYTE *)v51 + 128));
      v50[15] = v71;
      *((_BYTE *)v50 + 128) = v70;
    }
    *((_BYTE *)v50 + 129) = *((_BYTE *)v51 + 129);
    v72 = v12[11];
    v73 = (char *)v50 + v72;
    v74 = (char *)v51 + v72;
    v75 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    v76 = v12[12];
    v77 = (_QWORD *)((char *)v50 + v76);
    v78 = (_QWORD *)((char *)v51 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    *((_BYTE *)v50 + v12[13]) = *((_BYTE *)v51 + v12[13]);
    *((_BYTE *)v50 + v12[14]) = *((_BYTE *)v51 + v12[14]);
    *((_BYTE *)v50 + v12[15]) = *((_BYTE *)v51 + v12[15]);
    v80 = v12[16];
    v81 = (_QWORD *)((char *)v50 + v80);
    v82 = (_QWORD *)((char *)v51 + v80);
    v83 = v82[1];
    *v81 = *v82;
    v81[1] = v83;
    v84 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v117 + 56);
    swift_bridgeObjectRetain(v79);
    v85 = swift_bridgeObjectRetain(v83);
    v84(v50, 0, 1, v12, v85);
  }
  v86 = v8[10];
  v87 = a1 + v86;
  v88 = a2 + v86;
  *(_DWORD *)v87 = *(_DWORD *)v88;
  *(_BYTE *)(v87 + 4) = *(_BYTE *)(v88 + 4);
  v89 = v8[11];
  v90 = a1 + v89;
  v91 = a2 + v89;
  *(_BYTE *)(v90 + 8) = *(_BYTE *)(v91 + 8);
  *(_QWORD *)v90 = *(_QWORD *)v91;
  v92 = v8[12];
  v93 = (_QWORD *)(a1 + v92);
  v94 = (_QWORD *)(a2 + v92);
  v95 = v94[1];
  *v93 = *v94;
  v93[1] = v95;
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  v96 = v8[14];
  v97 = a1 + v96;
  v98 = a2 + v96;
  swift_bridgeObjectRetain(v95);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
  v100 = v8[15];
  v101 = a1 + v100;
  v102 = a2 + v100;
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
  v104(v101, v102, v103);
  v104(a1 + v8[16], a2 + v8[16], v103);
  v104(a1 + v8[17], a2 + v8[17], v103);
  v105 = v8[18];
  v106 = a1 + v105;
  v107 = a2 + v105;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
  v109 = a3[5];
  v110 = a3[6];
  v111 = a1 + v109;
  v112 = (uint64_t *)(a2 + v109);
  v113 = *v112;
  LOBYTE(v112) = *((_BYTE *)v112 + 8);
  *(_QWORD *)v111 = v113;
  *(_BYTE *)(v111 + 8) = (_BYTE)v112;
  v114 = a1 + v110;
  v115 = *(void **)(a2 + v110);
  LOBYTE(v107) = *(_BYTE *)(a2 + v110 + 8);
  swift_retain(v113);
  sub_15E90(v115, v107);
  *(_QWORD *)v114 = v115;
  *(_BYTE *)(v114 + 8) = v107;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

_QWORD *sub_24B088(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, int *);
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  __int128 v37;
  id *v38;
  int v39;
  id v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  id v53;
  id *v54;
  int v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(uint64_t, _QWORD, uint64_t, int *, __n128);
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __int128 v75;
  id *v76;
  id *v77;
  int v78;
  id v79;
  void *v80;
  char v81;
  id v82;
  char v83;
  id v84;
  id *v85;
  id *v86;
  int v87;
  id v88;
  void *v89;
  char v90;
  id v91;
  char v92;
  id v93;
  id *v94;
  id *v95;
  int v96;
  id v97;
  void *v98;
  char v99;
  id v100;
  char v101;
  id v102;
  id *v103;
  id *v104;
  int v105;
  id v106;
  void *v107;
  char v108;
  id v109;
  char v110;
  id v111;
  id *v112;
  id *v113;
  int v114;
  id v115;
  void *v116;
  char v117;
  id v118;
  char v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unsigned __int8 *v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 *v148;
  __int128 *v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unsigned __int8 v155;
  __int128 v156;
  id *v157;
  int v158;
  id v159;
  id v160;
  id *v161;
  int v162;
  id v163;
  id v164;
  id *v165;
  int v166;
  id v167;
  id v168;
  id *v169;
  int v170;
  id v171;
  id v172;
  id *v173;
  int v174;
  id v175;
  id v176;
  uint64_t v177;
  char *v178;
  unsigned __int8 *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unsigned __int8 *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  unsigned __int8 *v187;
  uint64_t v188;
  void (*v189)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v190;
  uint64_t v191;
  uint64_t v192;
  unsigned __int8 v193;
  __int128 v194;
  id *v195;
  id *v196;
  int v197;
  id v198;
  void *v199;
  char v200;
  id v201;
  unsigned __int8 v202;
  id v203;
  id *v204;
  id *v205;
  int v206;
  id v207;
  void *v208;
  char v209;
  id v210;
  unsigned __int8 v211;
  id v212;
  id *v213;
  id *v214;
  int v215;
  id v216;
  void *v217;
  char v218;
  id v219;
  unsigned __int8 v220;
  id v221;
  id *v222;
  id *v223;
  int v224;
  id v225;
  void *v226;
  char v227;
  id v228;
  unsigned __int8 v229;
  id v230;
  id *v231;
  id *v232;
  int v233;
  id v234;
  void *v235;
  char v236;
  id v237;
  unsigned __int8 v238;
  id v239;
  uint64_t v240;
  char *v241;
  unsigned __int8 *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  unsigned __int8 *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  unsigned __int8 *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  int v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  void (*v275)(char *, char *, uint64_t);
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  id v288;
  void *v289;
  char v290;
  uint64_t v292;
  uint64_t v293;
  int *v294;
  int *v295;
  int *v296;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a2[5];
  v11 = (void *)a1[5];
  a1[5] = v10;
  v12 = v10;

  v13 = (int *)type metadata accessor for ShowHero(0);
  v14 = v13[8];
  v15 = (uint64_t)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = (int *)type metadata accessor for ArtworkModel(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19((uint64_t)v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      v292 = v18;
      v294 = a3;
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v22 = *((_QWORD *)v16 + 1);
      *(_QWORD *)(v15 + 8) = v22;
      v23 = v16[32];
      swift_bridgeObjectRetain(v22);
      if (v23 == 255)
      {
        v37 = *((_OWORD *)v16 + 1);
        *(_BYTE *)(v15 + 32) = v16[32];
        *(_OWORD *)(v15 + 16) = v37;
      }
      else
      {
        v24 = *((_QWORD *)v16 + 2);
        v25 = *((_QWORD *)v16 + 3);
        sub_108110(v24, v25, v23);
        *(_QWORD *)(v15 + 16) = v24;
        *(_QWORD *)(v15 + 24) = v25;
        *(_BYTE *)(v15 + 32) = v23;
      }
      *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
      *(_QWORD *)(v15 + 48) = *((_QWORD *)v16 + 6);
      v38 = (id *)(v16 + 56);
      v39 = v16[64];
      if (v39 == 255)
      {
        v41 = *v38;
        *(_BYTE *)(v15 + 64) = v16[64];
        *(_QWORD *)(v15 + 56) = v41;
      }
      else
      {
        v40 = *v38;
        sub_27F80(*v38, v16[64]);
        *(_QWORD *)(v15 + 56) = v40;
        *(_BYTE *)(v15 + 64) = v39;
      }
      v18 = v292;
      v42 = (id *)(v16 + 72);
      v43 = v16[80];
      if (v43 == 255)
      {
        v45 = *v42;
        *(_BYTE *)(v15 + 80) = v16[80];
        *(_QWORD *)(v15 + 72) = v45;
      }
      else
      {
        v44 = *v42;
        sub_27F80(*v42, v16[80]);
        *(_QWORD *)(v15 + 72) = v44;
        *(_BYTE *)(v15 + 80) = v43;
      }
      v46 = (id *)(v16 + 88);
      v47 = v16[96];
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v15 + 96) = v16[96];
        *(_QWORD *)(v15 + 88) = v49;
      }
      else
      {
        v48 = *v46;
        sub_27F80(*v46, v16[96]);
        *(_QWORD *)(v15 + 88) = v48;
        *(_BYTE *)(v15 + 96) = v47;
      }
      v50 = (id *)(v16 + 104);
      v51 = v16[112];
      if (v51 == 255)
      {
        v53 = *v50;
        *(_BYTE *)(v15 + 112) = v16[112];
        *(_QWORD *)(v15 + 104) = v53;
      }
      else
      {
        v52 = *v50;
        sub_27F80(*v50, v16[112]);
        *(_QWORD *)(v15 + 104) = v52;
        *(_BYTE *)(v15 + 112) = v51;
      }
      v54 = (id *)(v16 + 120);
      v55 = v16[128];
      if (v55 == 255)
      {
        v57 = *v54;
        *(_BYTE *)(v15 + 128) = v16[128];
        *(_QWORD *)(v15 + 120) = v57;
      }
      else
      {
        v56 = *v54;
        sub_27F80(*v54, v16[128]);
        *(_QWORD *)(v15 + 120) = v56;
        *(_BYTE *)(v15 + 128) = v55;
      }
      *(_BYTE *)(v15 + 129) = v16[129];
      v58 = v17[11];
      v59 = v15 + v58;
      v60 = &v16[v58];
      v61 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      v62 = v17[12];
      v63 = (_QWORD *)(v15 + v62);
      v64 = &v16[v62];
      *v63 = *(_QWORD *)v64;
      v65 = *((_QWORD *)v64 + 1);
      v63[1] = v65;
      *(_BYTE *)(v15 + v17[13]) = v16[v17[13]];
      *(_BYTE *)(v15 + v17[14]) = v16[v17[14]];
      *(_BYTE *)(v15 + v17[15]) = v16[v17[15]];
      v66 = v17[16];
      v67 = (_QWORD *)(v15 + v66);
      v68 = &v16[v66];
      *v67 = *(_QWORD *)v68;
      v69 = *((_QWORD *)v68 + 1);
      v67[1] = v69;
      v70 = *(void (**)(uint64_t, _QWORD, uint64_t, int *, __n128))(v292 + 56);
      swift_bridgeObjectRetain(v65);
      v71 = swift_bridgeObjectRetain(v69);
      v70(v15, 0, 1, v17, v71);
      a3 = v294;
      goto LABEL_68;
    }
LABEL_7:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v15, v16, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_68;
  }
  if (v21)
  {
    sub_FA4C(v15, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  v293 = v18;
  v295 = a3;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v27 = *((_QWORD *)v16 + 1);
  v28 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v15 + 8) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  v29 = (__int128 *)(v15 + 16);
  v30 = (__int128 *)(v16 + 16);
  v31 = v16[32];
  if (*(unsigned __int8 *)(v15 + 32) == 255)
  {
    if (v31 == 255)
    {
      v75 = *v30;
      *(_BYTE *)(v15 + 32) = v16[32];
      *v29 = v75;
    }
    else
    {
      v72 = *((_QWORD *)v16 + 2);
      v73 = *((_QWORD *)v16 + 3);
      sub_108110(v72, v73, v16[32]);
      *(_QWORD *)(v15 + 16) = v72;
      *(_QWORD *)(v15 + 24) = v73;
      *(_BYTE *)(v15 + 32) = v31;
    }
  }
  else if (v31 == 255)
  {
    sub_108DD8(v15 + 16);
    v74 = v16[32];
    *v29 = *v30;
    *(_BYTE *)(v15 + 32) = v74;
  }
  else
  {
    v32 = *((_QWORD *)v16 + 2);
    v33 = *((_QWORD *)v16 + 3);
    sub_108110(v32, v33, v16[32]);
    v34 = *(_QWORD *)(v15 + 16);
    v35 = *(_QWORD *)(v15 + 24);
    *(_QWORD *)(v15 + 16) = v32;
    *(_QWORD *)(v15 + 24) = v33;
    v36 = *(_BYTE *)(v15 + 32);
    *(_BYTE *)(v15 + 32) = v31;
    sub_108270(v34, v35, v36);
  }
  *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
  *(_QWORD *)(v15 + 48) = *((_QWORD *)v16 + 6);
  v76 = (id *)(v15 + 56);
  v77 = (id *)(v16 + 56);
  v78 = v16[64];
  if (*(unsigned __int8 *)(v15 + 64) == 255)
  {
    if (v78 == 255)
    {
      v84 = *v77;
      *(_BYTE *)(v15 + 64) = v16[64];
      *v76 = v84;
    }
    else
    {
      v82 = *v77;
      sub_27F80(*v77, v16[64]);
      *(_QWORD *)(v15 + 56) = v82;
      *(_BYTE *)(v15 + 64) = v78;
    }
  }
  else if (v78 == 255)
  {
    sub_108E0C(v15 + 56);
    v83 = v16[64];
    *v76 = *v77;
    *(_BYTE *)(v15 + 64) = v83;
  }
  else
  {
    v79 = *v77;
    sub_27F80(*v77, v16[64]);
    v80 = *(void **)(v15 + 56);
    *(_QWORD *)(v15 + 56) = v79;
    v81 = *(_BYTE *)(v15 + 64);
    *(_BYTE *)(v15 + 64) = v78;
    sub_27FA8(v80, v81);
  }
  v85 = (id *)(v15 + 72);
  v86 = (id *)(v16 + 72);
  v87 = v16[80];
  if (*(unsigned __int8 *)(v15 + 80) == 255)
  {
    if (v87 == 255)
    {
      v93 = *v86;
      *(_BYTE *)(v15 + 80) = v16[80];
      *v85 = v93;
    }
    else
    {
      v91 = *v86;
      sub_27F80(*v86, v16[80]);
      *(_QWORD *)(v15 + 72) = v91;
      *(_BYTE *)(v15 + 80) = v87;
    }
  }
  else if (v87 == 255)
  {
    sub_108E0C(v15 + 72);
    v92 = v16[80];
    *v85 = *v86;
    *(_BYTE *)(v15 + 80) = v92;
  }
  else
  {
    v88 = *v86;
    sub_27F80(*v86, v16[80]);
    v89 = *(void **)(v15 + 72);
    *(_QWORD *)(v15 + 72) = v88;
    v90 = *(_BYTE *)(v15 + 80);
    *(_BYTE *)(v15 + 80) = v87;
    sub_27FA8(v89, v90);
  }
  v94 = (id *)(v15 + 88);
  v95 = (id *)(v16 + 88);
  v96 = v16[96];
  if (*(unsigned __int8 *)(v15 + 96) == 255)
  {
    if (v96 == 255)
    {
      v102 = *v95;
      *(_BYTE *)(v15 + 96) = v16[96];
      *v94 = v102;
    }
    else
    {
      v100 = *v95;
      sub_27F80(*v95, v16[96]);
      *(_QWORD *)(v15 + 88) = v100;
      *(_BYTE *)(v15 + 96) = v96;
    }
  }
  else if (v96 == 255)
  {
    sub_108E0C(v15 + 88);
    v101 = v16[96];
    *v94 = *v95;
    *(_BYTE *)(v15 + 96) = v101;
  }
  else
  {
    v97 = *v95;
    sub_27F80(*v95, v16[96]);
    v98 = *(void **)(v15 + 88);
    *(_QWORD *)(v15 + 88) = v97;
    v99 = *(_BYTE *)(v15 + 96);
    *(_BYTE *)(v15 + 96) = v96;
    sub_27FA8(v98, v99);
  }
  v103 = (id *)(v15 + 104);
  v104 = (id *)(v16 + 104);
  v105 = v16[112];
  if (*(unsigned __int8 *)(v15 + 112) == 255)
  {
    if (v105 == 255)
    {
      v111 = *v104;
      *(_BYTE *)(v15 + 112) = v16[112];
      *v103 = v111;
    }
    else
    {
      v109 = *v104;
      sub_27F80(*v104, v16[112]);
      *(_QWORD *)(v15 + 104) = v109;
      *(_BYTE *)(v15 + 112) = v105;
    }
  }
  else if (v105 == 255)
  {
    sub_108E0C(v15 + 104);
    v110 = v16[112];
    *v103 = *v104;
    *(_BYTE *)(v15 + 112) = v110;
  }
  else
  {
    v106 = *v104;
    sub_27F80(*v104, v16[112]);
    v107 = *(void **)(v15 + 104);
    *(_QWORD *)(v15 + 104) = v106;
    v108 = *(_BYTE *)(v15 + 112);
    *(_BYTE *)(v15 + 112) = v105;
    sub_27FA8(v107, v108);
  }
  v112 = (id *)(v15 + 120);
  v113 = (id *)(v16 + 120);
  v114 = v16[128];
  if (*(unsigned __int8 *)(v15 + 128) == 255)
  {
    if (v114 == 255)
    {
      v120 = *v113;
      *(_BYTE *)(v15 + 128) = v16[128];
      *v112 = v120;
    }
    else
    {
      v118 = *v113;
      sub_27F80(*v113, v16[128]);
      *(_QWORD *)(v15 + 120) = v118;
      *(_BYTE *)(v15 + 128) = v114;
    }
  }
  else if (v114 == 255)
  {
    sub_108E0C(v15 + 120);
    v119 = v16[128];
    *v112 = *v113;
    *(_BYTE *)(v15 + 128) = v119;
  }
  else
  {
    v115 = *v113;
    sub_27F80(*v113, v16[128]);
    v116 = *(void **)(v15 + 120);
    *(_QWORD *)(v15 + 120) = v115;
    v117 = *(_BYTE *)(v15 + 128);
    *(_BYTE *)(v15 + 128) = v114;
    sub_27FA8(v116, v117);
  }
  *(_BYTE *)(v15 + 129) = v16[129];
  v121 = v17[11];
  v122 = v15 + v121;
  v123 = &v16[v121];
  v124 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 24))(v122, v123, v124);
  v125 = v17[12];
  v126 = (_QWORD *)(v15 + v125);
  v127 = &v16[v125];
  *v126 = *(_QWORD *)v127;
  v128 = *((_QWORD *)v127 + 1);
  v129 = v126[1];
  v126[1] = v128;
  swift_bridgeObjectRetain(v128);
  swift_bridgeObjectRelease(v129);
  *(_BYTE *)(v15 + v17[13]) = v16[v17[13]];
  *(_BYTE *)(v15 + v17[14]) = v16[v17[14]];
  *(_BYTE *)(v15 + v17[15]) = v16[v17[15]];
  v130 = v17[16];
  v131 = (_QWORD *)(v15 + v130);
  v132 = &v16[v130];
  *v131 = *(_QWORD *)v132;
  v133 = *((_QWORD *)v132 + 1);
  v134 = v131[1];
  v131[1] = v133;
  swift_bridgeObjectRetain(v133);
  swift_bridgeObjectRelease(v134);
  v18 = v293;
  a3 = v295;
LABEL_68:
  v135 = v13[9];
  v136 = (char *)a1 + v135;
  v137 = (unsigned __int8 *)a2 + v135;
  v138 = v19((uint64_t)a1 + v135, 1, v17);
  v139 = v19((uint64_t)v137, 1, v17);
  if (v138)
  {
    if (!v139)
    {
      v140 = v18;
      v296 = a3;
      *(_QWORD *)v136 = *(_QWORD *)v137;
      v141 = *((_QWORD *)v137 + 1);
      *((_QWORD *)v136 + 1) = v141;
      v142 = v137[32];
      swift_bridgeObjectRetain(v141);
      if (v142 == 255)
      {
        v156 = *((_OWORD *)v137 + 1);
        v136[32] = v137[32];
        *((_OWORD *)v136 + 1) = v156;
      }
      else
      {
        v143 = *((_QWORD *)v137 + 2);
        v144 = *((_QWORD *)v137 + 3);
        sub_108110(v143, v144, v142);
        *((_QWORD *)v136 + 2) = v143;
        *((_QWORD *)v136 + 3) = v144;
        v136[32] = v142;
      }
      *((_QWORD *)v136 + 5) = *((_QWORD *)v137 + 5);
      *((_QWORD *)v136 + 6) = *((_QWORD *)v137 + 6);
      v157 = (id *)(v137 + 56);
      v158 = v137[64];
      if (v158 == 255)
      {
        v160 = *v157;
        v136[64] = v137[64];
        *((_QWORD *)v136 + 7) = v160;
      }
      else
      {
        v159 = *v157;
        sub_27F80(*v157, v137[64]);
        *((_QWORD *)v136 + 7) = v159;
        v136[64] = v158;
      }
      v161 = (id *)(v137 + 72);
      v162 = v137[80];
      if (v162 == 255)
      {
        v164 = *v161;
        v136[80] = v137[80];
        *((_QWORD *)v136 + 9) = v164;
      }
      else
      {
        v163 = *v161;
        sub_27F80(*v161, v137[80]);
        *((_QWORD *)v136 + 9) = v163;
        v136[80] = v162;
      }
      v165 = (id *)(v137 + 88);
      v166 = v137[96];
      if (v166 == 255)
      {
        v168 = *v165;
        v136[96] = v137[96];
        *((_QWORD *)v136 + 11) = v168;
      }
      else
      {
        v167 = *v165;
        sub_27F80(*v165, v137[96]);
        *((_QWORD *)v136 + 11) = v167;
        v136[96] = v166;
      }
      v169 = (id *)(v137 + 104);
      v170 = v137[112];
      if (v170 == 255)
      {
        v172 = *v169;
        v136[112] = v137[112];
        *((_QWORD *)v136 + 13) = v172;
      }
      else
      {
        v171 = *v169;
        sub_27F80(*v169, v137[112]);
        *((_QWORD *)v136 + 13) = v171;
        v136[112] = v170;
      }
      v173 = (id *)(v137 + 120);
      v174 = v137[128];
      if (v174 == 255)
      {
        v176 = *v173;
        v136[128] = v137[128];
        *((_QWORD *)v136 + 15) = v176;
      }
      else
      {
        v175 = *v173;
        sub_27F80(*v173, v137[128]);
        *((_QWORD *)v136 + 15) = v175;
        v136[128] = v174;
      }
      v136[129] = v137[129];
      v177 = v17[11];
      v178 = &v136[v177];
      v179 = &v137[v177];
      v180 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v178, v179, v180);
      v181 = v17[12];
      v182 = &v136[v181];
      v183 = &v137[v181];
      *(_QWORD *)v182 = *(_QWORD *)v183;
      v184 = *((_QWORD *)v183 + 1);
      *((_QWORD *)v182 + 1) = v184;
      v136[v17[13]] = v137[v17[13]];
      v136[v17[14]] = v137[v17[14]];
      v136[v17[15]] = v137[v17[15]];
      v185 = v17[16];
      v186 = &v136[v185];
      v187 = &v137[v185];
      *(_QWORD *)v186 = *(_QWORD *)v187;
      v188 = *((_QWORD *)v187 + 1);
      *((_QWORD *)v186 + 1) = v188;
      v189 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v140 + 56);
      swift_bridgeObjectRetain(v184);
      v190 = swift_bridgeObjectRetain(v188);
      v189(v136, 0, 1, v17, v190);
LABEL_135:
      a3 = v296;
      goto LABEL_136;
    }
  }
  else
  {
    if (!v139)
    {
      v296 = a3;
      *(_QWORD *)v136 = *(_QWORD *)v137;
      v146 = *((_QWORD *)v137 + 1);
      v147 = *((_QWORD *)v136 + 1);
      *((_QWORD *)v136 + 1) = v146;
      swift_bridgeObjectRetain(v146);
      swift_bridgeObjectRelease(v147);
      v148 = (__int128 *)(v136 + 16);
      v149 = (__int128 *)(v137 + 16);
      v150 = v137[32];
      if (v136[32] == 255)
      {
        if (v150 == 255)
        {
          v194 = *v149;
          v136[32] = v137[32];
          *v148 = v194;
        }
        else
        {
          v191 = *((_QWORD *)v137 + 2);
          v192 = *((_QWORD *)v137 + 3);
          sub_108110(v191, v192, v137[32]);
          *((_QWORD *)v136 + 2) = v191;
          *((_QWORD *)v136 + 3) = v192;
          v136[32] = v150;
        }
      }
      else if (v150 == 255)
      {
        sub_108DD8((uint64_t)(v136 + 16));
        v193 = v137[32];
        *v148 = *v149;
        v136[32] = v193;
      }
      else
      {
        v151 = *((_QWORD *)v137 + 2);
        v152 = *((_QWORD *)v137 + 3);
        sub_108110(v151, v152, v137[32]);
        v153 = *((_QWORD *)v136 + 2);
        v154 = *((_QWORD *)v136 + 3);
        *((_QWORD *)v136 + 2) = v151;
        *((_QWORD *)v136 + 3) = v152;
        v155 = v136[32];
        v136[32] = v150;
        sub_108270(v153, v154, v155);
      }
      *((_QWORD *)v136 + 5) = *((_QWORD *)v137 + 5);
      *((_QWORD *)v136 + 6) = *((_QWORD *)v137 + 6);
      v195 = (id *)(v136 + 56);
      v196 = (id *)(v137 + 56);
      v197 = v137[64];
      if (v136[64] == 255)
      {
        if (v197 == 255)
        {
          v203 = *v196;
          v136[64] = v137[64];
          *v195 = v203;
        }
        else
        {
          v201 = *v196;
          sub_27F80(*v196, v137[64]);
          *((_QWORD *)v136 + 7) = v201;
          v136[64] = v197;
        }
      }
      else if (v197 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 56));
        v202 = v137[64];
        *v195 = *v196;
        v136[64] = v202;
      }
      else
      {
        v198 = *v196;
        sub_27F80(*v196, v137[64]);
        v199 = (void *)*((_QWORD *)v136 + 7);
        *((_QWORD *)v136 + 7) = v198;
        v200 = v136[64];
        v136[64] = v197;
        sub_27FA8(v199, v200);
      }
      v204 = (id *)(v136 + 72);
      v205 = (id *)(v137 + 72);
      v206 = v137[80];
      if (v136[80] == 255)
      {
        if (v206 == 255)
        {
          v212 = *v205;
          v136[80] = v137[80];
          *v204 = v212;
        }
        else
        {
          v210 = *v205;
          sub_27F80(*v205, v137[80]);
          *((_QWORD *)v136 + 9) = v210;
          v136[80] = v206;
        }
      }
      else if (v206 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 72));
        v211 = v137[80];
        *v204 = *v205;
        v136[80] = v211;
      }
      else
      {
        v207 = *v205;
        sub_27F80(*v205, v137[80]);
        v208 = (void *)*((_QWORD *)v136 + 9);
        *((_QWORD *)v136 + 9) = v207;
        v209 = v136[80];
        v136[80] = v206;
        sub_27FA8(v208, v209);
      }
      v213 = (id *)(v136 + 88);
      v214 = (id *)(v137 + 88);
      v215 = v137[96];
      if (v136[96] == 255)
      {
        if (v215 == 255)
        {
          v221 = *v214;
          v136[96] = v137[96];
          *v213 = v221;
        }
        else
        {
          v219 = *v214;
          sub_27F80(*v214, v137[96]);
          *((_QWORD *)v136 + 11) = v219;
          v136[96] = v215;
        }
      }
      else if (v215 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 88));
        v220 = v137[96];
        *v213 = *v214;
        v136[96] = v220;
      }
      else
      {
        v216 = *v214;
        sub_27F80(*v214, v137[96]);
        v217 = (void *)*((_QWORD *)v136 + 11);
        *((_QWORD *)v136 + 11) = v216;
        v218 = v136[96];
        v136[96] = v215;
        sub_27FA8(v217, v218);
      }
      v222 = (id *)(v136 + 104);
      v223 = (id *)(v137 + 104);
      v224 = v137[112];
      if (v136[112] == 255)
      {
        if (v224 == 255)
        {
          v230 = *v223;
          v136[112] = v137[112];
          *v222 = v230;
        }
        else
        {
          v228 = *v223;
          sub_27F80(*v223, v137[112]);
          *((_QWORD *)v136 + 13) = v228;
          v136[112] = v224;
        }
      }
      else if (v224 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 104));
        v229 = v137[112];
        *v222 = *v223;
        v136[112] = v229;
      }
      else
      {
        v225 = *v223;
        sub_27F80(*v223, v137[112]);
        v226 = (void *)*((_QWORD *)v136 + 13);
        *((_QWORD *)v136 + 13) = v225;
        v227 = v136[112];
        v136[112] = v224;
        sub_27FA8(v226, v227);
      }
      v231 = (id *)(v136 + 120);
      v232 = (id *)(v137 + 120);
      v233 = v137[128];
      if (v136[128] == 255)
      {
        if (v233 == 255)
        {
          v239 = *v232;
          v136[128] = v137[128];
          *v231 = v239;
        }
        else
        {
          v237 = *v232;
          sub_27F80(*v232, v137[128]);
          *((_QWORD *)v136 + 15) = v237;
          v136[128] = v233;
        }
      }
      else if (v233 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 120));
        v238 = v137[128];
        *v231 = *v232;
        v136[128] = v238;
      }
      else
      {
        v234 = *v232;
        sub_27F80(*v232, v137[128]);
        v235 = (void *)*((_QWORD *)v136 + 15);
        *((_QWORD *)v136 + 15) = v234;
        v236 = v136[128];
        v136[128] = v233;
        sub_27FA8(v235, v236);
      }
      v136[129] = v137[129];
      v240 = v17[11];
      v241 = &v136[v240];
      v242 = &v137[v240];
      v243 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v243 - 8) + 24))(v241, v242, v243);
      v244 = v17[12];
      v245 = &v136[v244];
      v246 = &v137[v244];
      *(_QWORD *)v245 = *(_QWORD *)v246;
      v247 = *((_QWORD *)v246 + 1);
      v248 = *((_QWORD *)v245 + 1);
      *((_QWORD *)v245 + 1) = v247;
      swift_bridgeObjectRetain(v247);
      swift_bridgeObjectRelease(v248);
      v136[v17[13]] = v137[v17[13]];
      v136[v17[14]] = v137[v17[14]];
      v136[v17[15]] = v137[v17[15]];
      v249 = v17[16];
      v250 = &v136[v249];
      v251 = &v137[v249];
      *(_QWORD *)v250 = *(_QWORD *)v251;
      v252 = *((_QWORD *)v251 + 1);
      v253 = *((_QWORD *)v250 + 1);
      *((_QWORD *)v250 + 1) = v252;
      swift_bridgeObjectRetain(v252);
      swift_bridgeObjectRelease(v253);
      goto LABEL_135;
    }
    sub_FA4C((uint64_t)v136, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
LABEL_136:
  v254 = v13[10];
  v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  v257 = *(_DWORD *)v256;
  v255[4] = v256[4];
  *(_DWORD *)v255 = v257;
  v258 = v13[11];
  v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  v261 = *(_QWORD *)v260;
  v259[8] = v260[8];
  *(_QWORD *)v259 = v261;
  v262 = v13[12];
  v263 = (_QWORD *)((char *)a1 + v262);
  v264 = (_QWORD *)((char *)a2 + v262);
  *v263 = *v264;
  v265 = v264[1];
  v266 = v263[1];
  v263[1] = v265;
  swift_bridgeObjectRetain(v265);
  swift_bridgeObjectRelease(v266);
  *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
  v267 = v13[14];
  v268 = (char *)a1 + v267;
  v269 = (char *)a2 + v267;
  v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v270 - 8) + 24))(v268, v269, v270);
  v271 = v13[15];
  v272 = (char *)a1 + v271;
  v273 = (char *)a2 + v271;
  v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v275 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v274 - 8) + 24);
  v275(v272, v273, v274);
  v275((char *)a1 + v13[16], (char *)a2 + v13[16], v274);
  v275((char *)a1 + v13[17], (char *)a2 + v13[17], v274);
  v276 = v13[18];
  v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  v279 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v279 - 8) + 24))(v277, v278, v279);
  v280 = a3[5];
  v281 = (char *)a1 + v280;
  v282 = (char *)a2 + v280;
  v283 = *(_QWORD *)v282;
  LOBYTE(v282) = v282[8];
  v284 = *(_QWORD *)v281;
  *(_QWORD *)v281 = v283;
  v281[8] = (char)v282;
  swift_retain(v283);
  swift_release(v284);
  v285 = a3[6];
  v286 = (char *)a1 + v285;
  v287 = (char *)a2 + v285;
  v288 = *(id *)v287;
  LOBYTE(v278) = v287[8];
  sub_15E90(*(id *)v287, (char)v278);
  v289 = *(void **)v286;
  v290 = v286[8];
  *(_QWORD *)v286 = v288;
  v286[8] = (char)v278;
  sub_15E9C(v289, v290);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_24C1A0(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_OWORD *, uint64_t, int *);
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  int *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  int *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (int *)type metadata accessor for ShowHero(0);
  v7 = v6[8];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v15 = v10[11];
    v58 = v11;
    v16 = a3;
    v17 = (char *)v8 + v15;
    v18 = (char *)v9 + v15;
    v19 = type metadata accessor for ArtworkCrop(0);
    v20 = v17;
    a3 = v16;
    v11 = v58;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v20, v18, v19);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v58 + 56))(v8, 0, 1, v10);
  }
  v21 = v6[9];
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  if (v12((_OWORD *)(a2 + v21), 1, v10))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v23[1];
    *v22 = *v23;
    v22[1] = v25;
    *((_BYTE *)v22 + 32) = *((_BYTE *)v23 + 32);
    *(_OWORD *)((char *)v22 + 40) = *(_OWORD *)((char *)v23 + 40);
    *((_QWORD *)v22 + 7) = *((_QWORD *)v23 + 7);
    *((_BYTE *)v22 + 64) = *((_BYTE *)v23 + 64);
    *(_OWORD *)((char *)v22 + 113) = *(_OWORD *)((char *)v23 + 113);
    *(_OWORD *)((char *)v22 + 104) = *(_OWORD *)((char *)v23 + 104);
    *(_OWORD *)((char *)v22 + 88) = *(_OWORD *)((char *)v23 + 88);
    *(_OWORD *)((char *)v22 + 72) = *(_OWORD *)((char *)v23 + 72);
    *((_BYTE *)v22 + 129) = *((_BYTE *)v23 + 129);
    v26 = v10[11];
    v27 = a3;
    v28 = (char *)v22 + v26;
    v29 = (char *)v23 + v26;
    v30 = type metadata accessor for ArtworkCrop(0);
    v31 = v28;
    a3 = v27;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v31, v29, v30);
    *(_OWORD *)((char *)v22 + v10[12]) = *(_OWORD *)((char *)v23 + v10[12]);
    *((_BYTE *)v22 + v10[13]) = *((_BYTE *)v23 + v10[13]);
    *((_BYTE *)v22 + v10[14]) = *((_BYTE *)v23 + v10[14]);
    *((_BYTE *)v22 + v10[15]) = *((_BYTE *)v23 + v10[15]);
    *(_OWORD *)((char *)v22 + v10[16]) = *(_OWORD *)((char *)v23 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v22, 0, 1, v10);
  }
  v32 = v6[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = v6[11];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  v38 = v6[14];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  v42 = v6[15];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32);
  v46(v43, v44, v45);
  v46(a1 + v6[16], a2 + v6[16], v45);
  v46(a1 + v6[17], a2 + v6[17], v45);
  v47 = v6[18];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[5];
  v52 = a3[6];
  v53 = a1 + v51;
  v54 = a2 + v51;
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = *(_BYTE *)(v54 + 8);
  v55 = a1 + v52;
  v56 = a2 + v52;
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *(_BYTE *)(v55 + 8) = *(_BYTE *)(v56 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24C5BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, int *);
  int v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  void *v76;
  char v77;
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD *v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  int v94;
  int v95;
  void *v96;
  _QWORD *v97;
  int v98;
  int v99;
  void *v100;
  _QWORD *v101;
  int v102;
  int v103;
  void *v104;
  _QWORD *v105;
  int v106;
  int v107;
  void *v108;
  _QWORD *v109;
  int v110;
  int v111;
  void *v112;
  _QWORD *v113;
  int v114;
  int v115;
  void *v116;
  _QWORD *v117;
  int v118;
  int v119;
  void *v120;
  _QWORD *v121;
  int v122;
  int v123;
  void *v124;
  _QWORD *v125;
  int v126;
  int v127;
  void *v128;
  _QWORD *v129;
  int v130;
  int *v131;
  int v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int *v166;
  int *v167;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = (int *)type metadata accessor for ShowHero(0);
  v11 = v10[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = (int *)type metadata accessor for ArtworkModel(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      v19 = *(_OWORD *)(v13 + 16);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *(_OWORD *)(v12 + 16) = v19;
      *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
      *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
      *(_OWORD *)(v12 + 113) = *(_OWORD *)(v13 + 113);
      *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
      *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
      *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
      *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
      v20 = v14[11];
      v21 = v12 + v20;
      v166 = v10;
      v22 = v16;
      v23 = v15;
      v24 = a3;
      v25 = v13 + v20;
      v26 = type metadata accessor for ArtworkCrop(0);
      v27 = v25;
      a3 = v24;
      v15 = v23;
      v16 = v22;
      v10 = v166;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v21, v27, v26);
      *(_OWORD *)(v12 + v14[12]) = *(_OWORD *)(v13 + v14[12]);
      *(_BYTE *)(v12 + v14[13]) = *(_BYTE *)(v13 + v14[13]);
      *(_BYTE *)(v12 + v14[14]) = *(_BYTE *)(v13 + v14[14]);
      *(_BYTE *)(v12 + v14[15]) = *(_BYTE *)(v13 + v14[15]);
      *(_OWORD *)(v12 + v14[16]) = *(_OWORD *)(v13 + v14[16]);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_FA4C(v12, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v12, (const void *)v13, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  v167 = a3;
  v79 = *(_QWORD *)(v13 + 8);
  v80 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v79;
  swift_bridgeObjectRelease(v80);
  v81 = (_OWORD *)(v13 + 16);
  v82 = *(unsigned __int8 *)(v12 + 32);
  if (v82 != 255)
  {
    v83 = *(unsigned __int8 *)(v13 + 32);
    if (v83 != 255)
    {
      v84 = *(_QWORD *)(v12 + 16);
      v85 = *(_QWORD *)(v12 + 24);
      *(_OWORD *)(v12 + 16) = *v81;
      *(_BYTE *)(v12 + 32) = v83;
      sub_108270(v84, v85, v82);
      goto LABEL_22;
    }
    sub_108DD8(v12 + 16);
  }
  *(_OWORD *)(v12 + 16) = *v81;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
LABEL_22:
  *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
  v93 = (_QWORD *)(v13 + 56);
  v94 = *(unsigned __int8 *)(v12 + 64);
  if (v94 != 255)
  {
    v95 = *(unsigned __int8 *)(v13 + 64);
    if (v95 != 255)
    {
      v96 = *(void **)(v12 + 56);
      *(_QWORD *)(v12 + 56) = *v93;
      *(_BYTE *)(v12 + 64) = v95;
      sub_27FA8(v96, v94);
      goto LABEL_32;
    }
    sub_108E0C(v12 + 56);
  }
  *(_QWORD *)(v12 + 56) = *v93;
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
LABEL_32:
  v101 = (_QWORD *)(v13 + 72);
  v102 = *(unsigned __int8 *)(v12 + 80);
  if (v102 != 255)
  {
    v103 = *(unsigned __int8 *)(v13 + 80);
    if (v103 != 255)
    {
      v104 = *(void **)(v12 + 72);
      *(_QWORD *)(v12 + 72) = *v101;
      *(_BYTE *)(v12 + 80) = v103;
      sub_27FA8(v104, v102);
      goto LABEL_42;
    }
    sub_108E0C(v12 + 72);
  }
  *(_QWORD *)(v12 + 72) = *v101;
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
LABEL_42:
  v109 = (_QWORD *)(v13 + 88);
  v110 = *(unsigned __int8 *)(v12 + 96);
  if (v110 != 255)
  {
    v111 = *(unsigned __int8 *)(v13 + 96);
    if (v111 != 255)
    {
      v112 = *(void **)(v12 + 88);
      *(_QWORD *)(v12 + 88) = *v109;
      *(_BYTE *)(v12 + 96) = v111;
      sub_27FA8(v112, v110);
      goto LABEL_52;
    }
    sub_108E0C(v12 + 88);
  }
  *(_QWORD *)(v12 + 88) = *v109;
  *(_BYTE *)(v12 + 96) = *(_BYTE *)(v13 + 96);
LABEL_52:
  v117 = (_QWORD *)(v13 + 104);
  v118 = *(unsigned __int8 *)(v12 + 112);
  if (v118 != 255)
  {
    v119 = *(unsigned __int8 *)(v13 + 112);
    if (v119 != 255)
    {
      v120 = *(void **)(v12 + 104);
      *(_QWORD *)(v12 + 104) = *v117;
      *(_BYTE *)(v12 + 112) = v119;
      sub_27FA8(v120, v118);
      goto LABEL_62;
    }
    sub_108E0C(v12 + 104);
  }
  *(_QWORD *)(v12 + 104) = *v117;
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
LABEL_62:
  v125 = (_QWORD *)(v13 + 120);
  v126 = *(unsigned __int8 *)(v12 + 128);
  if (v126 == 255)
  {
LABEL_71:
    *(_QWORD *)(v12 + 120) = *v125;
    *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
    goto LABEL_72;
  }
  v127 = *(unsigned __int8 *)(v13 + 128);
  if (v127 == 255)
  {
    sub_108E0C(v12 + 120);
    goto LABEL_71;
  }
  v128 = *(void **)(v12 + 120);
  *(_QWORD *)(v12 + 120) = *v125;
  *(_BYTE *)(v12 + 128) = v127;
  sub_27FA8(v128, v126);
LABEL_72:
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  v134 = v14[11];
  v135 = v12 + v134;
  v136 = v13 + v134;
  v137 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 40))(v135, v136, v137);
  v138 = v14[12];
  v139 = (_QWORD *)(v12 + v138);
  v140 = (uint64_t *)(v13 + v138);
  v142 = *v140;
  v141 = v140[1];
  v143 = v139[1];
  *v139 = v142;
  v139[1] = v141;
  swift_bridgeObjectRelease(v143);
  *(_BYTE *)(v12 + v14[13]) = *(_BYTE *)(v13 + v14[13]);
  *(_BYTE *)(v12 + v14[14]) = *(_BYTE *)(v13 + v14[14]);
  *(_BYTE *)(v12 + v14[15]) = *(_BYTE *)(v13 + v14[15]);
  v144 = v14[16];
  v145 = (_QWORD *)(v12 + v144);
  v146 = (uint64_t *)(v13 + v144);
  v148 = *v146;
  v147 = v146[1];
  v149 = v145[1];
  *v145 = v148;
  v145[1] = v147;
  swift_bridgeObjectRelease(v149);
  a3 = v167;
LABEL_7:
  v29 = v10[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = v16(a1 + v29, 1, v14);
  v33 = v16(v31, 1, v14);
  if (!v32)
  {
    if (v33)
    {
      sub_FA4C(v30, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      goto LABEL_12;
    }
    v86 = *(_QWORD *)(v31 + 8);
    v87 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *(_QWORD *)(v30 + 8) = v86;
    swift_bridgeObjectRelease(v87);
    v88 = (_OWORD *)(v31 + 16);
    v89 = *(unsigned __int8 *)(v30 + 32);
    if (v89 != 255)
    {
      v90 = *(unsigned __int8 *)(v31 + 32);
      if (v90 != 255)
      {
        v91 = *(_QWORD *)(v30 + 16);
        v92 = *(_QWORD *)(v30 + 24);
        *(_OWORD *)(v30 + 16) = *v88;
        *(_BYTE *)(v30 + 32) = v90;
        sub_108270(v91, v92, v89);
        goto LABEL_27;
      }
      sub_108DD8(v30 + 16);
    }
    *(_OWORD *)(v30 + 16) = *v88;
    *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
LABEL_27:
    *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
    v97 = (_QWORD *)(v31 + 56);
    v98 = *(unsigned __int8 *)(v30 + 64);
    if (v98 != 255)
    {
      v99 = *(unsigned __int8 *)(v31 + 64);
      if (v99 != 255)
      {
        v100 = *(void **)(v30 + 56);
        *(_QWORD *)(v30 + 56) = *v97;
        *(_BYTE *)(v30 + 64) = v99;
        sub_27FA8(v100, v98);
        goto LABEL_37;
      }
      sub_108E0C(v30 + 56);
    }
    *(_QWORD *)(v30 + 56) = *v97;
    *(_BYTE *)(v30 + 64) = *(_BYTE *)(v31 + 64);
LABEL_37:
    v105 = (_QWORD *)(v31 + 72);
    v106 = *(unsigned __int8 *)(v30 + 80);
    if (v106 != 255)
    {
      v107 = *(unsigned __int8 *)(v31 + 80);
      if (v107 != 255)
      {
        v108 = *(void **)(v30 + 72);
        *(_QWORD *)(v30 + 72) = *v105;
        *(_BYTE *)(v30 + 80) = v107;
        sub_27FA8(v108, v106);
        goto LABEL_47;
      }
      sub_108E0C(v30 + 72);
    }
    *(_QWORD *)(v30 + 72) = *v105;
    *(_BYTE *)(v30 + 80) = *(_BYTE *)(v31 + 80);
LABEL_47:
    v113 = (_QWORD *)(v31 + 88);
    v114 = *(unsigned __int8 *)(v30 + 96);
    if (v114 != 255)
    {
      v115 = *(unsigned __int8 *)(v31 + 96);
      if (v115 != 255)
      {
        v116 = *(void **)(v30 + 88);
        *(_QWORD *)(v30 + 88) = *v113;
        *(_BYTE *)(v30 + 96) = v115;
        sub_27FA8(v116, v114);
        goto LABEL_57;
      }
      sub_108E0C(v30 + 88);
    }
    *(_QWORD *)(v30 + 88) = *v113;
    *(_BYTE *)(v30 + 96) = *(_BYTE *)(v31 + 96);
LABEL_57:
    v121 = (_QWORD *)(v31 + 104);
    v122 = *(unsigned __int8 *)(v30 + 112);
    if (v122 != 255)
    {
      v123 = *(unsigned __int8 *)(v31 + 112);
      if (v123 != 255)
      {
        v124 = *(void **)(v30 + 104);
        *(_QWORD *)(v30 + 104) = *v121;
        *(_BYTE *)(v30 + 112) = v123;
        sub_27FA8(v124, v122);
        goto LABEL_67;
      }
      sub_108E0C(v30 + 104);
    }
    *(_QWORD *)(v30 + 104) = *v121;
    *(_BYTE *)(v30 + 112) = *(_BYTE *)(v31 + 112);
LABEL_67:
    v129 = (_QWORD *)(v31 + 120);
    v130 = *(unsigned __int8 *)(v30 + 128);
    v131 = a3;
    if (v130 != 255)
    {
      v132 = *(unsigned __int8 *)(v31 + 128);
      if (v132 != 255)
      {
        v133 = *(void **)(v30 + 120);
        *(_QWORD *)(v30 + 120) = *v129;
        *(_BYTE *)(v30 + 128) = v132;
        sub_27FA8(v133, v130);
LABEL_75:
        *(_BYTE *)(v30 + 129) = *(_BYTE *)(v31 + 129);
        v150 = v14[11];
        v151 = v30 + v150;
        v152 = v31 + v150;
        v153 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 40))(v151, v152, v153);
        v154 = v14[12];
        v155 = (_QWORD *)(v30 + v154);
        v156 = (uint64_t *)(v31 + v154);
        v158 = *v156;
        v157 = v156[1];
        v159 = v155[1];
        *v155 = v158;
        v155[1] = v157;
        swift_bridgeObjectRelease(v159);
        *(_BYTE *)(v30 + v14[13]) = *(_BYTE *)(v31 + v14[13]);
        *(_BYTE *)(v30 + v14[14]) = *(_BYTE *)(v31 + v14[14]);
        *(_BYTE *)(v30 + v14[15]) = *(_BYTE *)(v31 + v14[15]);
        v160 = v14[16];
        v161 = (_QWORD *)(v30 + v160);
        v162 = (uint64_t *)(v31 + v160);
        v164 = *v162;
        v163 = v162[1];
        v165 = v161[1];
        *v161 = v164;
        v161[1] = v163;
        swift_bridgeObjectRelease(v165);
        a3 = v131;
        goto LABEL_13;
      }
      sub_108E0C(v30 + 120);
    }
    *(_QWORD *)(v30 + 120) = *v129;
    *(_BYTE *)(v30 + 128) = *(_BYTE *)(v31 + 128);
    goto LABEL_75;
  }
  if (v33)
  {
LABEL_12:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v30, (const void *)v31, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  v34 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v34;
  *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
  *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 56) = *(_QWORD *)(v31 + 56);
  *(_BYTE *)(v30 + 64) = *(_BYTE *)(v31 + 64);
  *(_OWORD *)(v30 + 113) = *(_OWORD *)(v31 + 113);
  *(_OWORD *)(v30 + 104) = *(_OWORD *)(v31 + 104);
  *(_OWORD *)(v30 + 88) = *(_OWORD *)(v31 + 88);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  *(_BYTE *)(v30 + 129) = *(_BYTE *)(v31 + 129);
  v35 = v14[11];
  v36 = v30 + v35;
  v37 = a3;
  v38 = v31 + v35;
  v39 = type metadata accessor for ArtworkCrop(0);
  v40 = v38;
  a3 = v37;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v40, v39);
  *(_OWORD *)(v30 + v14[12]) = *(_OWORD *)(v31 + v14[12]);
  *(_BYTE *)(v30 + v14[13]) = *(_BYTE *)(v31 + v14[13]);
  *(_BYTE *)(v30 + v14[14]) = *(_BYTE *)(v31 + v14[14]);
  *(_BYTE *)(v30 + v14[15]) = *(_BYTE *)(v31 + v14[15]);
  *(_OWORD *)(v30 + v14[16]) = *(_OWORD *)(v31 + v14[16]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v15 + 56))(v30, 0, 1, v14);
LABEL_13:
  v42 = v10[10];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_DWORD *)v43 = *(_DWORD *)v44;
  *(_BYTE *)(v43 + 4) = *(_BYTE *)(v44 + 4);
  v45 = v10[11];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v48 = v10[12];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  v53 = v49[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease(v53);
  *(_BYTE *)(a1 + v10[13]) = *(_BYTE *)(a2 + v10[13]);
  v54 = v10[14];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 40))(v55, v56, v57);
  v58 = v10[15];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 40);
  v62(v59, v60, v61);
  v62(a1 + v10[16], a2 + v10[16], v61);
  v62(a1 + v10[17], a2 + v10[17], v61);
  v63 = v10[18];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  v67 = a3[5];
  v68 = (uint64_t *)(a1 + v67);
  v69 = (uint64_t *)(a2 + v67);
  v70 = *v69;
  LOBYTE(v69) = *((_BYTE *)v69 + 8);
  v71 = *v68;
  *v68 = v70;
  *((_BYTE *)v68 + 8) = (_BYTE)v69;
  swift_release(v71);
  v72 = a3[6];
  v73 = a1 + v72;
  v74 = (uint64_t *)(a2 + v72);
  v75 = *v74;
  LOBYTE(v74) = *((_BYTE *)v74 + 8);
  v76 = *(void **)v73;
  v77 = *(_BYTE *)(v73 + 8);
  *(_QWORD *)v73 = v75;
  *(_BYTE *)(v73 + 8) = (_BYTE)v74;
  sub_15E9C(v76, v77);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24CFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_24CFB4);
}

uint64_t sub_24CFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for ShowHero(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_24D030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24D03C);
}

uint64_t sub_24D03C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ShowHero(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

uint64_t sub_24D0B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for ShowHero(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\t";
    v4[2] = "\t";
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_24D138()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE120);
  v1[1] = sub_246A48();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_24D184(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_333254, 1);
}

uint64_t sub_24D194@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  __n128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[10];
  char v72;
  uint64_t v73;

  v63 = a2;
  v69 = type metadata accessor for ShowHeroButtonGroup(0);
  __chkstk_darwin(v69);
  v64 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v68 = (char *)&v63 - v5;
  v6 = type metadata accessor for AccessibilityChildBehavior(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ShowHero(0);
  __chkstk_darwin(v10);
  v67 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE2D8);
  v70 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v63 - v19;
  v65 = a1;
  sub_19C4C(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  v66 = *(int *)(type metadata accessor for ShowHeroChin(0) + 20);
  v21 = *(_QWORD *)(a1 + v66);
  swift_retain(v21);
  v22 = sub_2527D8((uint64_t)v14, v21, (uint64_t)v71);
  static AccessibilityChildBehavior.combine.getter(v22);
  v23 = sub_25293C();
  View.accessibilityElement(children:)(v9, &type metadata for ShowHeroTextArea, v23);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = (void *)v71[0];
  v25 = v71[2];
  v26 = v71[4];
  v27 = v71[8];
  v28 = v71[9];
  LOBYTE(v7) = v72;
  v29 = v73;
  swift_release(v71[7]);

  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v26);
  v30 = v28;
  v31 = v15;
  v32 = (uint64_t)v68;
  sub_A3A4(v27, v30, v7);
  v33 = v29;
  v34 = (int *)v69;
  v35 = swift_release(v33);
  v36 = v20;
  (*(void (**)(char *, char *, uint64_t, __n128))(v70 + 32))(v20, v17, v31, v35);
  v37 = v65;
  v38 = v67;
  sub_19C4C(v65, v67, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  v39 = *(_QWORD *)(v37 + v66);
  v40 = v32 + v34[8];
  *(_QWORD *)v40 = swift_getKeyPath(&unk_3021A0);
  *(_BYTE *)(v40 + 8) = 0;
  sub_19C4C(v38, v32, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  v66 = v39;
  v41 = swift_retain(v39);
  v42 = v38;
  v43 = ShowHero.playEpisodeAction.getter(v41);
  if (v43)
  {
    v44 = v43;
    v45 = type metadata accessor for PlayAction(0);
    v43 = swift_dynamicCastClass(v44, v45);
    if (!v43)
    {
      swift_release(v44);
      v43 = 0;
    }
  }
  v47 = v63;
  v46 = (uint64_t)v64;
  *(_QWORD *)(v32 + v34[5]) = v43;
  v48 = ShowHero.playTrailerAction.getter();
  if (v48)
  {
    v49 = v48;
    v50 = type metadata accessor for PlayAction(0);
    v48 = swift_dynamicCastClass(v49, v50);
    if (!v48)
    {
      swift_release(v49);
      v48 = 0;
    }
  }
  v51 = v66;
  *(_QWORD *)(v32 + v34[6]) = v48;
  v52 = type metadata accessor for PodcastStateMachine(0);
  v53 = sub_89A0(&qword_3DE2E8, (uint64_t (*)(uint64_t))&type metadata accessor for PodcastStateMachine, (uint64_t)&protocol conformance descriptor for PodcastStateMachine);
  v54 = ObservedObject.init(wrappedValue:)(v51, v52, v53);
  v56 = v55;
  sub_FA4C(v42, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  v57 = (uint64_t *)(v32 + v34[7]);
  *v57 = v54;
  v57[1] = v56;
  v58 = v70;
  v59 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  v59(v17, v36, v31);
  sub_19C4C(v32, v46, type metadata accessor for ShowHeroButtonGroup);
  v59(v47, v17, v31);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE2F0);
  sub_19C4C(v46, (uint64_t)&v47[*(int *)(v60 + 48)], type metadata accessor for ShowHeroButtonGroup);
  sub_FA4C(v32, type metadata accessor for ShowHeroButtonGroup);
  v61 = *(void (**)(char *, uint64_t))(v58 + 8);
  v61(v36, v31);
  sub_FA4C(v46, type metadata accessor for ShowHeroButtonGroup);
  return ((uint64_t (*)(char *, uint64_t))v61)(v17, v31);
}

uint64_t sub_24D5E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = type metadata accessor for AccessibilityChildBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE2C0);
  __chkstk_darwin(v5);
  v7 = (double *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = static HorizontalAlignment.leading.getter(v8);
  v10 = static HeroContainer.spaceBetweenTextAndButtons.getter();
  *(_QWORD *)v7 = v9;
  v7[1] = v10;
  *((_BYTE *)v7 + 16) = 0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE2C8);
  v12 = sub_24D194(v0, (char *)v7 + *(int *)(v11 + 44));
  static AccessibilityChildBehavior.combine.getter(v12);
  v13 = sub_10EDC(&qword_3DE2D0, &qword_3DE2C0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v4, v5, v13);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_D1D4((uint64_t)v7, &qword_3DE2C0);
}

uint64_t type metadata accessor for ShowHeroButtonGroup(uint64_t a1)
{
  return sub_AE00(a1, qword_3DE350, (uint64_t)&nominal type descriptor for ShowHeroButtonGroup);
}

uint64_t sub_24D740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v23[5];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA6B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA6B8);
  __chkstk_darwin(v7);
  v9 = (char *)&v23[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v10);
  *((_QWORD *)v6 + 1) = 0x4010000000000000;
  v6[16] = 0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE398);
  sub_24D8EC(v2, (uint64_t)&v6[*(int *)(v11 + 44)]);
  v13 = static Alignment.bottomLeading.getter(v12);
  sub_1A1AA0(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v9, v15, 0.0, 1, 0.0, 1, v13, v14);
  v16 = sub_D1D4((uint64_t)v6, &qword_3DA6B0);
  v17 = static Animation.default.getter(v16);
  v18 = Animation.speed(_:)(2.0);
  swift_release(v17);
  v19 = dispatch thunk of PodcastStateMachine.currentState.getter(v23);
  LOBYTE(v17) = PodcastState.isSubscribed.getter(v19);
  sub_20A9EC((uint64_t)v23);
  sub_D184((uint64_t)v9, a1, &qword_3DA6B8);
  v20 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DE3A0) + 36);
  *(_QWORD *)v20 = v18;
  *(_BYTE *)(v20 + 8) = v17 & 1;
  return sub_D1D4((uint64_t)v9, &qword_3DA6B8);
}

uint64_t sub_24D8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD v91[9];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _OWORD v101[9];
  _QWORD v102[7];

  v89 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE3A8);
  __chkstk_darwin(v3);
  v90 = (uint64_t)v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v72 - v6;
  v8 = type metadata accessor for BlendMode(0);
  v84 = *(_QWORD *)(v8 - 8);
  v85 = v8;
  __chkstk_darwin(v8);
  v83 = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D8);
  __chkstk_darwin(v82);
  v11 = (_QWORD *)((char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for PUITextStyle(0);
  v73 = *(_QWORD *)(v12 - 8);
  v74 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v15);
  v17 = (char *)v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE3B0);
  v80 = *(_QWORD *)(v18 - 8);
  v81 = v18;
  __chkstk_darwin(v18);
  v79 = (char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE3B8);
  __chkstk_darwin(v76);
  v21 = (char *)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE3C0);
  __chkstk_darwin(v78);
  v87 = (uint64_t)v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v77 = (uint64_t)v72 - v24;
  __chkstk_darwin(v25);
  v86 = (uint64_t)v72 - v26;
  v27 = dispatch thunk of PodcastStateMachine.currentState.getter(v102);
  v28 = PodcastState.isSubscribed.getter(v27);
  sub_20A9EC((uint64_t)v102);
  v88 = v7;
  v75 = (v28 & 1) == 0 && *(_QWORD *)(a1 + 16) == 0;
  AttributedString.init(_:)(*(id *)a1);
  v29 = Text.init(_:)(v17);
  v31 = v30;
  v33 = v32;
  v34 = a1;
  v36 = v35 & 1;
  v38 = static Alignment.bottomLeading.getter(v37);
  sub_1A12E0(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v101, v40, 0.0, 1, 0.0, 1, v38, v39, v29, v31, v36, v33);
  sub_D170(v29, v31, v36);
  swift_bridgeObjectRelease(v33);
  v98 = v101[6];
  v99 = v101[7];
  v100 = v101[8];
  v94 = v101[2];
  v95 = v101[3];
  v96 = v101[4];
  v97 = v101[5];
  v92 = v101[0];
  v93 = v101[1];
  v41 = *(_QWORD *)(v34 + 64);
  v42 = *(_QWORD *)(v34 + 72);
  v72[1] = v34;
  v43 = *(_BYTE *)(v34 + 80);
  sub_A304(v41, v42, v43);
  v44 = sub_14874(v41, v42, v43);
  v45 = sub_A3A4(v41, v42, v43);
  if (qword_3CFC38 != -1)
    v45 = swift_once(&qword_3CFC38, sub_24E3CC);
  if (v44 >= *(double *)&qword_3DE0E8)
    static PUITextStyle.subhead.getter(v45);
  else
    static PUITextStyle.footnote.getter();
  v46 = (uint64_t)v88;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D25C8);
  v48 = sub_25D54C((unint64_t *)&qword_3D25C0, &qword_3D25C8);
  v49 = v79;
  View.puiFont(_:)(v14, v47, v48);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v74);
  v91[6] = v98;
  v91[7] = v99;
  v91[8] = v100;
  v91[2] = v94;
  v91[3] = v95;
  v91[4] = v96;
  v91[5] = v97;
  v91[0] = v92;
  v91[1] = v93;
  sub_50D14((uint64_t)v91);
  v51 = static Color.white.getter(v50);
  v52 = Color.opacity(_:)(0.8);
  v53 = swift_release(v51);
  v55 = v83;
  v54 = v84;
  v56 = v85;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v84 + 104))(v83, enum case for BlendMode.plusLighter(_:), v85, v53);
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))((char *)v11 + *(int *)(v82 + 36), v55, v56);
  *v11 = v52;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
  sub_D184((uint64_t)v11, (uint64_t)&v21[*(int *)(v76 + 36)], &qword_3D07D8);
  v58 = v80;
  v57 = v81;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v21, v49, v81);
  sub_D1D4((uint64_t)v11, &qword_3D07D8);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v57);
  v59 = v75;
  if (v75)
    v60 = 4;
  else
    v60 = 3;
  KeyPath = swift_getKeyPath(&unk_3023D8);
  v62 = v77;
  sub_D184((uint64_t)v21, v77, &qword_3DE3B8);
  v63 = v62 + *(int *)(v78 + 36);
  *(_QWORD *)v63 = KeyPath;
  *(_QWORD *)(v63 + 8) = v60;
  *(_BYTE *)(v63 + 16) = 0;
  sub_D1D4((uint64_t)v21, &qword_3DE3B8);
  v64 = v86;
  sub_D210(v62, v86, &qword_3DE3C0);
  if (v59)
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE3C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v46, 1, 1, v65);
  }
  else
  {
    sub_24DFD0(v46);
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE3C8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v46, 0, 1, v66);
  }
  v67 = v87;
  sub_D184(v64, v87, &qword_3DE3C0);
  v68 = v90;
  sub_D184(v46, v90, &qword_3DE3A8);
  v69 = v89;
  sub_D184(v67, v89, &qword_3DE3C0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE3D0);
  sub_D184(v68, v69 + *(int *)(v70 + 48), &qword_3DE3A8);
  sub_D1D4(v46, &qword_3DE3A8);
  sub_D1D4(v64, &qword_3DE3C0);
  sub_D1D4(v68, &qword_3DE3A8);
  return sub_D1D4(v67, &qword_3DE3C0);
}

uint64_t sub_24DFD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v56 = a1;
  v1 = type metadata accessor for BlendMode(0);
  v54 = *(_QWORD *)(v1 - 8);
  v55 = v1;
  __chkstk_darwin(v1);
  v53 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D8);
  __chkstk_darwin(v52);
  v4 = (uint64_t *)((char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for PUITextStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA6C0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA6C8);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE3D8);
  v50 = *(_QWORD *)(v18 - 8);
  v51 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE3E0);
  v21 = __chkstk_darwin(v48);
  v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v14 = static Alignment.bottomLeading.getter(v21);
  v14[1] = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE3E8);
  sub_24E3E0(v49, (uint64_t)v14 + *(int *)(v25 + 44));
  v27 = static Alignment.bottomLeading.getter(v26);
  sub_1A1AF8(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v17, v29, 0.0, 1, 0.0, 1, v27, v28);
  v30 = sub_D1D4((uint64_t)v14, &qword_3DA6C0);
  v31 = static PUITextStyle.caption2.getter(v30);
  PUITextStyle.emph.getter(v31);
  v32 = *(void (**)(char *, uint64_t))(v6 + 8);
  v32(v8, v5);
  v33 = sub_255FF4();
  View.puiFont(_:)(v11, v15, v33);
  v32(v11, v5);
  sub_D1D4((uint64_t)v17, &qword_3DA6C8);
  v35 = static Color.white.getter(v34);
  v36 = Color.opacity(_:)(0.4);
  v37 = swift_release(v35);
  v39 = v53;
  v38 = v54;
  v40 = v55;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v54 + 104))(v53, enum case for BlendMode.plusLighter(_:), v55, v37);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v4 + *(int *)(v52 + 36), v39, v40);
  *v4 = v36;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  sub_D184((uint64_t)v4, (uint64_t)&v23[*(int *)(v48 + 36)], &qword_3D07D8);
  v42 = v50;
  v41 = v51;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v23, v20, v51);
  sub_D1D4((uint64_t)v4, &qword_3D07D8);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v20, v41);
  KeyPath = swift_getKeyPath(&unk_3023D8);
  v44 = v56;
  sub_D184((uint64_t)v23, v56, &qword_3DE3E0);
  v45 = v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DE3C8) + 36);
  *(_QWORD *)v45 = KeyPath;
  *(_QWORD *)(v45 + 8) = 1;
  *(_BYTE *)(v45 + 16) = 0;
  return sub_D1D4((uint64_t)v23, &qword_3DE3E0);
}

void sub_24E3CC()
{
  qword_3DE0E8 = 0x4071800000000000;
}

uint64_t sub_24E3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  _QWORD *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  _QWORD v48[5];
  Swift::String v49;

  v44 = a1;
  v46 = a2;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE400);
  __chkstk_darwin(v42);
  v3 = (uint64_t *)((char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE408);
  __chkstk_darwin(v4);
  v6 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE410);
  __chkstk_darwin(v41);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE418);
  __chkstk_darwin(v43);
  v45 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v49._object = (void *)0xE000000000000000;
  v17._object = (void *)0x8000000000316B40;
  v17._countAndFlagsBits = 0xD000000000000013;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v49._countAndFlagsBits = 0;
  v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v49);

  v20 = enum case for Text.Case.uppercase(_:);
  v21 = type metadata accessor for Text.Case(0);
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104))(v6, v20, v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v6, 0, 1, v21);
  KeyPath = swift_getKeyPath(&unk_302408);
  sub_D184(v6, (uint64_t)v3 + *(int *)(v42 + 28), &qword_3DE408);
  *v3 = KeyPath;
  sub_D184((uint64_t)v3, (uint64_t)&v8[*(int *)(v41 + 36)], &qword_3DE400);
  *(Swift::String *)v8 = v19;
  v8[16] = 0;
  *((_QWORD *)v8 + 3) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v19._object);
  sub_D1D4((uint64_t)v3, &qword_3DE400);
  sub_D1D4(v6, &qword_3DE408);
  swift_bridgeObjectRelease(v19._object);
  v24 = dispatch thunk of PodcastStateMachine.currentState.getter(v47);
  LOBYTE(v6) = PodcastState.isSubscribed.getter(v24);
  sub_20A9EC((uint64_t)v47);
  if ((v6 & 1) != 0)
    v25 = 1.0;
  else
    v25 = 0.0;
  sub_D184((uint64_t)v8, (uint64_t)v12, &qword_3DE410);
  *(double *)&v12[*(int *)(v43 + 36)] = v25;
  sub_D1D4((uint64_t)v8, &qword_3DE410);
  sub_D210((uint64_t)v12, (uint64_t)v15, &qword_3DE418);
  v26 = sub_24E814();
  v30 = v29;
  if (v29)
  {
    v31 = v26;
    v32 = v27;
    v33 = v28 & 1;
    v34 = dispatch thunk of PodcastStateMachine.currentState.getter(v48);
    v35 = PodcastState.isSubscribed.getter(v34);
    sub_20A9EC((uint64_t)v48);
    if ((v35 & 1) != 0)
      v36 = 0;
    else
      v36 = 0x3FF0000000000000;
  }
  else
  {
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v36 = 0;
  }
  v37 = v45;
  sub_D184((uint64_t)v15, v45, &qword_3DE418);
  v38 = v46;
  sub_D184(v37, v46, &qword_3DE418);
  v39 = (uint64_t *)(v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DE420) + 48));
  *v39 = v31;
  v39[1] = v32;
  v39[2] = v33;
  v39[3] = v30;
  v39[4] = v36;
  sub_D100(v31, v32, v33, v30);
  sub_D1D4((uint64_t)v15, &qword_3DE418);
  sub_D140(v31, v32, v33, v30);
  return sub_D1D4(v37, &qword_3DE418);
}

uint64_t sub_24E814()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  _BYTE v45[136];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE428);
  inited = swift_initStackObject(v1, v45);
  *(_OWORD *)(inited + 16) = xmmword_2F5ED0;
  v3 = v0[2];
  if (v3)
  {
    v44[0] = v0[1];
    v44[1] = v3;
    v4 = sub_D254();
    swift_bridgeObjectRetain(v3);
    v5 = Text.init<A>(_:)(v44, &type metadata for String, v4);
    v7 = v6;
    v9 = v8;
    v11 = v10 & 1;
  }
  else
  {
    v5 = 0;
    v7 = 0;
    v11 = 0;
    v9 = 0;
  }
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v9;
  v12 = v0[4];
  if (v12)
  {
    v13 = v0[3];
    v14 = _swiftEmptyArrayStorage;
  }
  else
  {
    v13 = 0;
    v14 = 0;
  }
  v43 = v13;
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = 0;
  *(_QWORD *)(inited + 88) = v14;
  v40 = v14;
  swift_bridgeObjectRetain(v12);
  v15 = sub_24EB7C();
  v17 = v16;
  v41 = v18;
  v42 = v15;
  *(_QWORD *)(inited + 96) = v15;
  *(_QWORD *)(inited + 104) = v18;
  v20 = v19;
  *(_QWORD *)(inited + 112) = v19;
  *(_QWORD *)(inited + 120) = v16;
  if (v9)
  {
    v39 = v16;
    sub_D130(v5, v7, v11);
    swift_bridgeObjectRetain(v9);
    v21 = sub_20FE0C(0, 1, 1, _swiftEmptyArrayStorage);
    v23 = v21[2];
    v22 = v21[3];
    if (v23 >= v22 >> 1)
      v21 = sub_20FE0C((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
    v21[2] = v23 + 1;
    v24 = &v21[4 * v23];
    v24[4] = v5;
    v24[5] = v7;
    *((_BYTE *)v24 + 48) = v11 != 0;
    v24[7] = v9;
    v17 = v39;
  }
  else
  {
    v21 = _swiftEmptyArrayStorage;
  }
  if (v12)
  {
    sub_D130(v43, v12, 0);
    swift_bridgeObjectRetain(v40);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      v21 = sub_20FE0C(0, v21[2] + 1, 1, v21);
    v26 = v21[2];
    v25 = v21[3];
    if (v26 >= v25 >> 1)
      v21 = sub_20FE0C((_QWORD *)(v25 > 1), v26 + 1, 1, v21);
    v21[2] = v26 + 1;
    v27 = &v21[4 * v26];
    v27[4] = v43;
    v27[5] = v12;
    *((_BYTE *)v27 + 48) = 0;
    v27[7] = v40;
  }
  if (v17)
  {
    sub_D130(v42, v41, v20 & 1);
    swift_bridgeObjectRetain(v17);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      v21 = sub_20FE0C(0, v21[2] + 1, 1, v21);
    v29 = v21[2];
    v28 = v21[3];
    if (v29 >= v28 >> 1)
      v21 = sub_20FE0C((_QWORD *)(v28 > 1), v29 + 1, 1, v21);
    v21[2] = v29 + 1;
    v30 = &v21[4 * v29];
    v30[4] = v42;
    v30[5] = v41;
    *((_BYTE *)v30 + 48) = v20 & 1;
    v30[7] = v17;
  }
  v31 = swift_release(inited);
  v44[0] = v21;
  v32 = static String.eyebrowSeparatorSymbol.getter(v31);
  v34 = v33;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE430);
  v36 = sub_10EDC(&qword_3DE438, &qword_3DE430, (uint64_t)&protocol conformance descriptor for [A]);
  v37 = Sequence<>.join(with:)(v32, v34, v35, v36);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v34);
  return v37;
}

uint64_t sub_24EB7C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v21[2];

  v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 == 2)
    return 0;
  v2 = ContentRating.rawValue.getter(v1 & 1);
  v4 = v3;
  v5 = ContentRating.rawValue.getter(1);
  if (v2 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n(v4, 2);
    goto LABEL_9;
  }
  v8 = v6;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v8);
  if ((v9 & 1) != 0)
  {
LABEL_9:
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_BYTE *)(v0 + 96);
    swift_retain(v11);
    v14 = sub_14A78(v13, v12);
    swift_release(v11);
    v15 = type metadata accessor for ExplicitContentPresenter(0);
    BaseObjectGraph.inject<A>(_:)(v21, v15, v15);
    v16 = swift_release(v14);
    v17 = v21[0];
    v21[0] = ExplicitContentPresenter.symbol.getter(v16);
    v21[1] = v18;
    v19 = sub_D254();
    v10 = Text.init<A>(_:)(v21, &type metadata for String, v19);
    swift_release(v17);
    return v10;
  }
  return 0;
}

uint64_t sub_24ECC0@<X0>(uint64_t a1@<X8>)
{
  return sub_24D740(a1);
}

uint64_t sub_24ED08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD v112[3];
  _QWORD v113[6];

  v104 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE440);
  __chkstk_darwin(v3);
  v5 = (char **)((char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE448);
  __chkstk_darwin(v107);
  v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE450);
  __chkstk_darwin(v108);
  v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v103 = (uint64_t)&v92 - v11;
  v97 = type metadata accessor for PlayButtonWrapper(0);
  __chkstk_darwin(v97);
  v13 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE458);
  __chkstk_darwin(v98);
  v100 = (uint64_t)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE460);
  __chkstk_darwin(v105);
  v99 = (uint64_t)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v92 - v17;
  v96 = type metadata accessor for EpisodeOffer(0);
  v19 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v21 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for PlayButtonPresenter.Data(0);
  v22 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v109 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE468);
  __chkstk_darwin(v102);
  v25 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE470);
  __chkstk_darwin(v26);
  v106 = (uint64_t)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v110 = a1;
  v111 = (uint64_t)&v92 - v29;
  v30 = sub_24F4D8();
  if (v30)
  {
    v31 = v30;
    v32 = swift_retain(v30);
    PlayAction.episodeOffer.getter(v32);
    sub_256228();
    v94 = v5;
    v34 = v33;
    v95 = v7;
    v35 = v22;
    v93 = v22;
    v92 = v18;
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v96);
    v38 = v109;
    PlayButtonPresenter.Data.init(from:label:)(v31, v34, v37);
    v39 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v40 = v101;
    v39(v13, v38, v101);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v13, 0, 1, v40);
    v41 = v110 + *(int *)(type metadata accessor for ShowHeroButtonGroup(0) + 32);
    v42 = *(_QWORD *)v41;
    LOBYTE(v35) = *(_BYTE *)(v41 + 8);
    swift_retain(*(_QWORD *)v41);
    v44 = sub_14A78(v43, v35);
    v45 = swift_release(v42);
    v46.n128_f64[0] = static HeroContainer.playButtonInsets.getter(v45);
    v47 = v97;
    v13[*(int *)(v97 + 20)] = 1;
    *(_QWORD *)&v13[*(int *)(v47 + 24)] = v44;
    v48 = &v13[*(int *)(v47 + 28)];
    *(_QWORD *)v48 = v46.n128_u64[0];
    *((_QWORD *)v48 + 1) = v49;
    *((_QWORD *)v48 + 2) = v50;
    *((_QWORD *)v48 + 3) = v51;
    v48[32] = 0;
    v52 = static HeroContainer.playButtonInsets.getter(v46);
    v54 = v53;
    v56 = v55;
    v58 = v57;
    LOBYTE(v42) = static Edge.Set.all.getter(v59);
    v60 = v100;
    sub_19C4C((uint64_t)v13, v100, type metadata accessor for PlayButtonWrapper);
    v61 = v60 + *(int *)(v98 + 36);
    *(_BYTE *)v61 = v42;
    *(double *)(v61 + 8) = v52;
    *(_QWORD *)(v61 + 16) = v54;
    *(_QWORD *)(v61 + 24) = v56;
    *(_QWORD *)(v61 + 32) = v58;
    *(_BYTE *)(v61 + 40) = 0;
    v7 = v95;
    sub_FA4C((uint64_t)v13, type metadata accessor for PlayButtonWrapper);
    v62 = v99;
    sub_D184(v60, v99, &qword_3DE458);
    v63 = v105;
    *(_BYTE *)(v62 + *(int *)(v105 + 36)) = 1;
    sub_D1D4(v60, &qword_3DE458);
    v64 = (uint64_t)v92;
    sub_D210(v62, (uint64_t)v92, &qword_3DE460);
    sub_D184(v64, (uint64_t)v25, &qword_3DE460);
    swift_storeEnumTagMultiPayload(v25, v102, 0);
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE478);
    v66 = sub_25609C();
    v67 = sub_2561A4();
    _ConditionalContent<>.init(storage:)(v25, v63, v65, v66, v67);
    swift_release(v31);
    v5 = v94;
    sub_D1D4(v64, &qword_3DE460);
    v68 = (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v109, v40);
  }
  else
  {
    *(_QWORD *)v25 = 0;
    *((_WORD *)v25 + 4) = 257;
    swift_storeEnumTagMultiPayload(v25, v102, 1);
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE478);
    v71 = sub_25609C();
    v72 = sub_2561A4();
    v68 = _ConditionalContent<>.init(storage:)(v25, v105, v70, v71, v72);
  }
  v73 = v110;
  *v5 = static Alignment.center.getter(v68, v69);
  v5[1] = v74;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE4B0);
  v76 = sub_24F620(v73, (uint64_t)v5 + *(int *)(v75 + 44));
  v77 = static Alignment.trailing.getter(v76);
  _FrameLayout.init(width:height:alignment:)(v112, 0, 1, 0, 1, v77, v78);
  sub_D184((uint64_t)v5, (uint64_t)v7, &qword_3DE440);
  v79 = &v7[*(int *)(v107 + 36)];
  v80 = v112[1];
  *(_OWORD *)v79 = v112[0];
  *((_OWORD *)v79 + 1) = v80;
  *((_OWORD *)v79 + 2) = v112[2];
  v81 = sub_D1D4((uint64_t)v5, &qword_3DE440);
  v82 = static Animation.default.getter(v81);
  v83 = Animation.speed(_:)(2.0);
  swift_release(v82);
  type metadata accessor for ShowHeroButtonGroup(0);
  v84 = dispatch thunk of PodcastStateMachine.currentState.getter(v113);
  LOBYTE(v82) = PodcastState.isSubscribed.getter(v84);
  sub_20A9EC((uint64_t)v113);
  sub_D184((uint64_t)v7, (uint64_t)v9, &qword_3DE448);
  v85 = &v9[*(int *)(v108 + 36)];
  *(_QWORD *)v85 = v83;
  v85[8] = v82 & 1;
  sub_D1D4((uint64_t)v7, &qword_3DE448);
  v86 = v103;
  sub_D210((uint64_t)v9, v103, &qword_3DE450);
  v87 = v111;
  v88 = v106;
  sub_D184(v111, v106, &qword_3DE470);
  sub_D184(v86, (uint64_t)v9, &qword_3DE450);
  v89 = v104;
  sub_D184(v88, v104, &qword_3DE470);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE4B8);
  sub_D184((uint64_t)v9, v89 + *(int *)(v90 + 48), &qword_3DE450);
  sub_D1D4(v86, &qword_3DE450);
  sub_D1D4(v87, &qword_3DE470);
  sub_D1D4((uint64_t)v9, &qword_3DE450);
  return sub_D1D4(v88, &qword_3DE470);
}

uint64_t sub_24F4D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[5];

  v1 = v0;
  v2 = type metadata accessor for ShowHeroButtonGroup(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15[-1] - v6;
  v8 = dispatch thunk of PodcastStateMachine.currentState.getter(v15);
  v9 = PodcastState.isSubscribed.getter(v8);
  sub_20A9EC((uint64_t)v15);
  if ((v9 & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + *(int *)(v2 + 24));
    sub_19C4C(v1, (uint64_t)v4, type metadata accessor for ShowHeroButtonGroup);
    if (v10)
    {
      v11 = v10;
      goto LABEL_9;
    }
    v12 = 5;
    v7 = v4;
LABEL_8:
    v11 = *(_QWORD *)&v7[*(int *)(v2 + 4 * v12)];
    swift_retain(v11);
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v1 + *(int *)(v2 + 20));
  sub_19C4C(v1, (uint64_t)v7, type metadata accessor for ShowHeroButtonGroup);
  if (!v10)
  {
    v12 = 6;
    v4 = v7;
    goto LABEL_8;
  }
  v4 = v7;
  v11 = v10;
LABEL_9:
  swift_retain(v10);
  sub_FA4C((uint64_t)v4, type metadata accessor for ShowHeroButtonGroup);
  return v11;
}

uint64_t sub_24F620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  double v38;
  double v39;
  _QWORD *v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  unint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[5];
  _QWORD v76[5];
  _QWORD v77[5];
  _QWORD v78[6];

  v74 = a2;
  v68 = type metadata accessor for ShowHeroContextMenuButton(0);
  __chkstk_darwin(v68);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v67 = (uint64_t)&v64 - v6;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE4C0);
  __chkstk_darwin(v71);
  v69 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE4C8);
  __chkstk_darwin(v8);
  v73 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v70 = (char *)&v64 - v11;
  __chkstk_darwin(v12);
  v72 = (uint64_t)&v64 - v13;
  v14 = type metadata accessor for ShowHero(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ShowHeroFollowButton(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE4D0);
  __chkstk_darwin(v20);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE4D8);
  __chkstk_darwin(v23);
  v66 = (uint64_t)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v64 - v26;
  __chkstk_darwin(v28);
  v65 = (uint64_t)&v64 - v29;
  v30 = type metadata accessor for ShowHeroButtonGroup(0);
  v31 = a1 + *(int *)(v30 + 32);
  v32 = *(_QWORD *)v31;
  v33 = *(_BYTE *)(v31 + 8);
  swift_retain(*(_QWORD *)v31);
  v35 = sub_14A78(v34, v33);
  swift_release(v32);
  sub_19C4C(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  v36 = *(_QWORD *)(a1 + *(int *)(v30 + 28) + 8);
  swift_retain(v36);
  sub_24FC10(v35, (uint64_t)v16, v36, (uint64_t)v19);
  v37 = dispatch thunk of PodcastStateMachine.currentState.getter(v75);
  LOBYTE(v36) = PodcastState.isSubscribed.getter(v37);
  sub_20A9EC((uint64_t)v75);
  v38 = 1.0;
  if ((v36 & 1) != 0)
    v39 = 0.0;
  else
    v39 = 1.0;
  sub_19C4C((uint64_t)v19, (uint64_t)v22, type metadata accessor for ShowHeroFollowButton);
  *(double *)&v22[*(int *)(v20 + 36)] = v39;
  sub_FA4C((uint64_t)v19, type metadata accessor for ShowHeroFollowButton);
  v40 = dispatch thunk of PodcastStateMachine.currentState.getter(v76);
  v41 = PodcastState.isSubscribed.getter(v40);
  sub_20A9EC((uint64_t)v76);
  v42 = sub_2567D8();
  View.accessibilityHidden(_:)(v41 & 1, v20, v42);
  sub_D1D4((uint64_t)v22, &qword_3DE4D0);
  v43 = v65;
  sub_D210((uint64_t)v27, v65, &qword_3DE4D8);
  sub_19C4C(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  *(_QWORD *)v4 = swift_getKeyPath(&unk_3021A0);
  v4[8] = 0;
  LOBYTE(v77[0]) = 0;
  State.init(wrappedValue:)(v77, &type metadata for Bool, v44);
  v45 = v78[1];
  v4[16] = v78[0];
  *((_QWORD *)v4 + 3) = v45;
  sub_1B79C((uint64_t)v16, (uint64_t)&v4[*(int *)(v68 + 24)], (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  v46 = v67;
  sub_1B79C((uint64_t)v4, v67, type metadata accessor for ShowHeroContextMenuButton);
  v47 = dispatch thunk of PodcastStateMachine.currentState.getter(v77);
  v48 = PodcastState.isSubscribed.getter(v47);
  sub_20A9EC((uint64_t)v77);
  if ((v48 & 1) == 0)
    v38 = 0.0;
  v49 = v69;
  sub_19C4C(v46, v69, type metadata accessor for ShowHeroContextMenuButton);
  v50 = v71;
  *(double *)(v49 + *(int *)(v71 + 36)) = v38;
  sub_FA4C(v46, type metadata accessor for ShowHeroContextMenuButton);
  v51 = dispatch thunk of PodcastStateMachine.currentState.getter(v78);
  v52 = PodcastState.isSubscribed.getter(v51);
  sub_20A9EC((uint64_t)v78);
  v53 = sub_25685C();
  v54 = (v52 & 1) == 0;
  v55 = (uint64_t)v70;
  View.accessibilityHidden(_:)(v54, v50, v53);
  sub_D1D4(v49, &qword_3DE4C0);
  v56 = v72;
  sub_D210(v55, v72, &qword_3DE4C8);
  v57 = v43;
  v58 = v43;
  v59 = v66;
  sub_D184(v58, v66, &qword_3DE4D8);
  v60 = v73;
  sub_D184(v56, v73, &qword_3DE4C8);
  v61 = v74;
  sub_D184(v59, v74, &qword_3DE4D8);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE500);
  sub_D184(v60, v61 + *(int *)(v62 + 48), &qword_3DE4C8);
  sub_D1D4(v56, &qword_3DE4C8);
  sub_D1D4(v57, &qword_3DE4D8);
  sub_D1D4(v60, &qword_3DE4C8);
  return sub_D1D4(v59, &qword_3DE4D8);
}

uint64_t sub_24FC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a1;
  v37 = type metadata accessor for FollowButtonPresenter.Data(0);
  __chkstk_darwin(v37);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for ShowOffer(0);
  v9 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - v13;
  v15 = (int *)type metadata accessor for ShowHeroFollowButton(0);
  v16 = a4 + v15[7];
  *(_QWORD *)v16 = swift_getKeyPath(&unk_302438);
  *(_BYTE *)(v16 + 8) = 0;
  v17 = (_QWORD *)(a4 + v15[8]);
  *v17 = swift_getKeyPath(&unk_302460);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED8);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  sub_19C4C(a2, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  v19 = type metadata accessor for PodcastStateMachine(0);
  v20 = sub_89A0(&qword_3DE2E8, (uint64_t (*)(uint64_t))&type metadata accessor for PodcastStateMachine, (uint64_t)&protocol conformance descriptor for PodcastStateMachine);
  swift_retain(a3);
  v22 = ObservedObject.init(wrappedValue:)(v21, v19, v20);
  v23 = (uint64_t *)(a4 + v15[6]);
  *v23 = v22;
  v23[1] = v24;
  v25 = ShowHero.contextAction.getter();
  if (!v25)
  {
    v35 = a3;
LABEL_6:
    swift_release(v35);
    swift_release(v39);
    result = sub_FA4C(a2, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
    v33 = 0;
    goto LABEL_7;
  }
  v26 = v25;
  v27 = type metadata accessor for PodcastContextAction(0);
  if (!swift_dynamicCastClass(v26, v27))
  {
    swift_release(a3);
    v35 = v26;
    goto LABEL_6;
  }
  PodcastContextAction.podcastOffer.getter();
  v28 = swift_release(v26);
  v29 = v11;
  v30 = v38;
  (*(void (**)(char *, char *, uint64_t, __n128))(v9 + 32))(v14, v29, v38, v28);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v8, v14, v30);
  swift_storeEnumTagMultiPayload(v8, v37, 1);
  v31 = type metadata accessor for FollowButtonPresenter(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  v33 = FollowButtonPresenter.init(data:displaySuccessHUD:asPartOf:)(v8, 0, v39, v32);
  swift_release(a3);
  sub_FA4C(a2, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v30);
LABEL_7:
  *(_QWORD *)(a4 + v15[5]) = v33;
  return result;
}

uint64_t sub_24FEB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA6D0);
  v4 = __chkstk_darwin(v3);
  v6 = (double *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = static HeroContainer.spaceBetweenPlayButtonAndContextMenu.getter(v4);
  v7 = sub_24ED08(v1, (uint64_t)v6 + *(int *)(v3 + 44));
  v8 = static Alignment.bottom.getter(v7);
  sub_1A1B50(0, 1, 0.0, 1, INFINITY, 0, 0, 1, a1, v10, 0.0, 1, 0.0, 1, v8, v9);
  return sub_D1D4((uint64_t)v6, &qword_3DA6D0);
}

uint64_t sub_24FF98@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t *v40;
  __n128 v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char v56;
  float v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double (**v87)(uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v100 = a2;
  v99 = a1;
  v120 = a3;
  v3 = type metadata accessor for ContentShapeKinds(0);
  v118 = *(_QWORD *)(v3 - 8);
  v119 = v3;
  __chkstk_darwin(v3);
  v117 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ColorScheme(0);
  v115 = *(_QWORD *)(v5 - 8);
  v116 = v5;
  v6 = __chkstk_darwin(v5);
  v114 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Material(0, v6);
  v107 = *(_QWORD *)(v8 - 8);
  v108 = v8;
  __chkstk_darwin(v8);
  v106 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE7F8);
  __chkstk_darwin(v105);
  v109 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for BlendMode(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D8);
  __chkstk_darwin(v93);
  v13 = (uint64_t *)((char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E88);
  __chkstk_darwin(v14);
  v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ButtonStyleConfiguration.Label(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE800);
  __chkstk_darwin(v21);
  v23 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE808);
  __chkstk_darwin(v90);
  v25 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE810);
  __chkstk_darwin(v91);
  v92 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE818);
  __chkstk_darwin(v94);
  v103 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE820);
  __chkstk_darwin(v98);
  v102 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE828);
  __chkstk_darwin(v101);
  v111 = (uint64_t)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE830);
  __chkstk_darwin(v104);
  v113 = (char *)&v89 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE838);
  __chkstk_darwin(v110);
  v112 = (uint64_t)&v89 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = ButtonStyleConfiguration.label.getter(v32);
  v34 = static Edge.Set.all.getter(v33);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v20, v17);
  v35 = &v23[*(int *)(v21 + 36)];
  *v35 = v34;
  *(_OWORD *)(v35 + 8) = xmmword_302060;
  *(_OWORD *)(v35 + 24) = xmmword_302060;
  v35[40] = 0;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v36 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v16, 1, 1, v36);
  v37 = static Font.system(size:weight:design:)(0, 1, v16, 14.0);
  sub_D1D4((uint64_t)v16, &qword_3D0E88);
  v38 = Font.bold()(v37);
  swift_release(v37);
  KeyPath = swift_getKeyPath(&unk_3025E8);
  sub_D184((uint64_t)v23, (uint64_t)v25, &qword_3DE800);
  v40 = (uint64_t *)&v25[*(int *)(v90 + 36)];
  *v40 = KeyPath;
  v40[1] = v38;
  sub_D1D4((uint64_t)v23, &qword_3DE800);
  v42 = static Color.white.getter(v41);
  if ((((uint64_t (*)(void))ButtonStyleConfiguration.isPressed.getter)() & 1) != 0)
  {
    v43 = 0.35;
    v44 = v100;
    v45 = v99;
  }
  else
  {
    v45 = v99;
    LOBYTE(v121) = v99 & 1;
    v44 = v100;
    v122 = v100;
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
    State.wrappedValue.getter(&v123, v46);
    v43 = 0.7;
    if ((_BYTE)v123)
      v43 = 0.525;
  }
  v47 = Color.opacity(_:)(v43);
  v48 = swift_release(v42);
  v49 = v96;
  v50 = v95;
  v51 = v97;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v96 + 104))(v95, enum case for BlendMode.plusLighter(_:), v97, v48);
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))((char *)v13 + *(int *)(v93 + 36), v50, v51);
  *v13 = v47;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  v52 = (uint64_t)v92;
  sub_D184((uint64_t)v13, (uint64_t)&v92[*(int *)(v91 + 36)], &qword_3D07D8);
  sub_D184((uint64_t)v25, v52, &qword_3DE808);
  sub_D1D4((uint64_t)v13, &qword_3D07D8);
  v53 = sub_D1D4((uint64_t)v25, &qword_3DE808);
  v54 = v106;
  v55 = static Material.thin.getter(v53);
  v56 = v45 & 1;
  if ((ButtonStyleConfiguration.isPressed.getter(v55) & 1) != 0)
  {
    v57 = 0.5;
  }
  else
  {
    LOBYTE(v121) = v45 & 1;
    v122 = v44;
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
    State.wrappedValue.getter(&v123, v58);
    if ((_BYTE)v123)
      v57 = 0.75;
    else
      v57 = 1.0;
  }
  v60 = v107;
  v59 = v108;
  v61 = (uint64_t)v109;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v109, v54, v108);
  *(float *)(v61 + *(int *)(v105 + 36)) = v57;
  v62 = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v54, v59);
  LOBYTE(v59) = static Edge.Set.all.getter(v62);
  v63 = (uint64_t)v103;
  v64 = (uint64_t)&v103[*(int *)(v94 + 36)];
  sub_D184(v61, v64, &qword_3DE7F8);
  *(_BYTE *)(v64 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DE840) + 36)) = v59;
  sub_D184(v52, v63, &qword_3DE810);
  sub_D1D4(v61, &qword_3DE7F8);
  sub_D1D4(v52, &qword_3DE810);
  v65 = swift_getKeyPath(&unk_3026A8);
  v67 = v114;
  v66 = v115;
  v68 = v116;
  (*(void (**)(char *, _QWORD, uint64_t))(v115 + 104))(v114, enum case for ColorScheme.dark(_:), v116);
  v69 = (uint64_t)v102;
  v70 = (uint64_t *)&v102[*(int *)(v98 + 36)];
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE848);
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))((char *)v70 + *(int *)(v71 + 28), v67, v68);
  *v70 = v65;
  sub_D184(v63, v69, &qword_3DE818);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  sub_D1D4(v63, &qword_3DE818);
  v72 = v111;
  sub_D184(v69, v111, &qword_3DE820);
  *(_WORD *)(v72 + *(int *)(v101 + 36)) = 256;
  sub_D1D4(v69, &qword_3DE820);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE850);
  v74 = v118;
  v75 = swift_allocObject(v73, ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ 2 * *(_QWORD *)(v118 + 72), *(unsigned __int8 *)(v118 + 80) | 7);
  *(_OWORD *)(v75 + 16) = xmmword_2EFA20;
  v76 = static ContentShapeKinds.interaction.getter();
  static ContentShapeKinds.hoverEffect.getter(v76);
  v121 = v75;
  v77 = sub_89A0(&qword_3DE858, (uint64_t (*)(uint64_t))&type metadata accessor for ContentShapeKinds, (uint64_t)&protocol conformance descriptor for ContentShapeKinds);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE860);
  v79 = sub_10EDC(&qword_3DE868, &qword_3DE860, (uint64_t)&protocol conformance descriptor for [A]);
  v80 = v117;
  v81 = v119;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v121, v78, v79, v119, v77);
  v82 = (uint64_t)v113;
  v83 = &v113[*(int *)(v104 + 36)];
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE870);
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(&v83[*(int *)(v84 + 40)], v80, v81);
  *v83 = 0;
  sub_D184(v72, v82, &qword_3DE828);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v80, v81);
  sub_D1D4(v72, &qword_3DE828);
  v85 = swift_allocObject(&unk_38DC38, 32, 7);
  *(_BYTE *)(v85 + 16) = v56;
  *(_QWORD *)(v85 + 24) = v44;
  v86 = v112;
  sub_D184(v82, v112, &qword_3DE830);
  v87 = (double (**)(uint64_t))(v86 + *(int *)(v110 + 36));
  *v87 = sub_25E538;
  v87[1] = (double (*)(uint64_t))v85;
  swift_retain(v44);
  sub_D1D4(v82, &qword_3DE830);
  return sub_D210(v86, v120, &qword_3DE838);
}

double sub_250A04(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  uint64_t v6;
  char v7;

  v5[16] = a2;
  v6 = a3;
  v7 = a1;
  v3 = static Animation.default.getter(a1);
  withAnimation<A>(_:_:)(v3, sub_25E544, v5, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_250A68@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  return sub_24FF98(*v1, *((_QWORD *)v1 + 1), a1);
}

uint64_t sub_250A74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  __n128 v35;
  void *object;
  unint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  void *v46;
  id v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char v83[16];
  uint64_t v84;
  char v85;
  Swift::String v86;
  _OWORD v87[3];
  Swift::String v88;
  Swift::String v89;

  v2 = v1;
  v81 = a1;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v78 = *(_QWORD *)(v3 - 8);
  v79 = v3;
  __chkstk_darwin(v3);
  v77 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ShowHeroFollowButton(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE6A8);
  v9 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE6B0);
  __chkstk_darwin(v67);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE6B8);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE6C0);
  __chkstk_darwin(v70);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE6C8);
  __chkstk_darwin(v76);
  v71 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v75 = (char *)&v65 - v20;
  sub_19C4C(v2, (uint64_t)v8, type metadata accessor for ShowHeroFollowButton);
  v21 = *(unsigned __int8 *)(v6 + 80);
  v22 = (v21 + 16) & ~v21;
  v73 = v22 + v7;
  v72 = v21 | 7;
  v23 = swift_allocObject(&unk_38DAC8, v22 + v7, v21 | 7);
  v74 = v22;
  v80 = v8;
  sub_1B79C((uint64_t)v8, v23 + v22, type metadata accessor for ShowHeroFollowButton);
  v82 = v2;
  v84 = v2;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE6D0);
  v25 = sub_25D424();
  v26 = Button.init(action:label:)(sub_25D418, v23, sub_25D41C, v83, v24, v25);
  if (qword_3CFC40 != -1)
    v26 = swift_once(&qword_3CFC40, sub_251A5C);
  v28 = qword_3DE0F0;
  v29 = static Alignment.center.getter(v26, v27);
  _FrameLayout.init(width:height:alignment:)(v87, v28, 0, v28, 0, v29, v30);
  v31 = v66;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v11, v66);
  v32 = v67;
  v33 = &v13[*(int *)(v67 + 36)];
  v34 = v87[1];
  *(_OWORD *)v33 = v87[0];
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v87[2];
  v35.n128_f64[0] = (*(double (**)(char *, uint64_t))(v9 + 8))(v11, v31);
  v85 = 0;
  State.init(wrappedValue:)(&v85, &type metadata for Bool, v35);
  object = v86._object;
  v37 = sub_25D5AC();
  v38 = sub_25D630();
  View.buttonStyle<A>(_:)(&v86, v32, &type metadata for ShowHeroFollowButtonStyle, v37, v38);
  swift_release(object);
  sub_D1D4((uint64_t)v13, &qword_3DE6B0);
  v39 = sub_2518C0();
  KeyPath = swift_getKeyPath(&unk_302588);
  v41 = swift_allocObject(&unk_38DAF0, 17, 7);
  *(_BYTE *)(v41 + 16) = v39 & 1;
  v42 = v68;
  v43 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v17, v15, v69);
  v44 = v70;
  v45 = (uint64_t *)&v17[*(int *)(v70 + 36)];
  *v45 = KeyPath;
  v45[1] = (uint64_t)sub_25D6D4;
  v45[2] = v41;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v43);
  v46 = (void *)objc_opt_self(NSBundle);
  v47 = objc_msgSend(v46, "mainBundle");
  v88._object = (void *)0xE000000000000000;
  v48._countAndFlagsBits = 0xD000000000000016;
  v48._object = (void *)0x8000000000316C10;
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  v88._countAndFlagsBits = 0;
  v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v88);

  v86 = v50;
  v51 = sub_25D6EC();
  v52 = sub_D254();
  v53 = (uint64_t)v71;
  View.accessibilityLabel<A>(_:)(&v86, v44, &type metadata for String, v51, v52);
  swift_bridgeObjectRelease(v50._object);
  v54 = sub_D1D4((uint64_t)v17, &qword_3DE6C0);
  v55 = v77;
  static AccessibilityTraits.isButton.getter(v54);
  v57 = (uint64_t)v75;
  v56 = v76;
  ModifiedContent<>.accessibility(addTraits:)(v55, v76);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v55, v79);
  sub_D1D4(v53, &qword_3DE6C8);
  v58 = objc_msgSend(v46, "mainBundle");
  v89._object = (void *)0xE000000000000000;
  v59._countAndFlagsBits = 0xD000000000000016;
  v59._object = (void *)0x8000000000316C10;
  v60._countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  v89._countAndFlagsBits = 0;
  v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, (NSBundle)v58, v60, v89);

  v86 = v61;
  v62 = (uint64_t)v80;
  sub_19C4C(v82, (uint64_t)v80, type metadata accessor for ShowHeroFollowButton);
  v63 = swift_allocObject(&unk_38DB18, v73, v72);
  sub_1B79C(v62, v63 + v74, type metadata accessor for ShowHeroFollowButton);
  ModifiedContent<>.accessibilityAction<A>(named:_:)(&v86, sub_25D418, v63, v56, &type metadata for String, v52);
  swift_release(v63);
  swift_bridgeObjectRelease(v86._object);
  return sub_D1D4(v57, &qword_3DE6C8);
}

uint64_t sub_2510F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  _QWORD *v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  _QWORD v24[5];
  _QWORD v25[5];
  _QWORD v26[5];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1188);
  __chkstk_darwin(v2);
  v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83E8);
  __chkstk_darwin(v5);
  v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ShowHeroFollowButton(0);
  dispatch thunk of PodcastStateMachine.currentState.getter(v24);
  v26[0] = 0;
  v26[1] = 0;
  v26[3] = 0;
  v26[4] = 0;
  v26[2] = 1;
  v12 = static PodcastState.== infix(_:_:)(v24, v26);
  result = sub_20A9EC((uint64_t)v24);
  if ((v12 & 1) == 0)
  {
    v14 = dispatch thunk of PodcastStateMachine.currentState.getter(v25);
    v15 = PodcastState.isSubscribed.getter(v14);
    result = sub_20A9EC((uint64_t)v25);
    if ((v15 & 1) == 0)
    {
      if (*(_QWORD *)(v1 + *(int *)(v11 + 20)))
      {
        v16 = (uint64_t *)(v1 + *(int *)(v11 + 28));
        v17 = *v16;
        v18 = *((_BYTE *)v16 + 8);
        swift_retain(*v16);
        v20 = sub_154D0(v19, v18);
        v21 = swift_release(v17);
        (*(void (**)(__n128))(v20 + 16))(v21);
        swift_release(v20);
        v22 = type metadata accessor for PresentationSource(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
        sub_251A6C((uint64_t)v4);
        dispatch thunk of FollowButtonPresenter.performPrimaryAction(with:from:location:)(v10, v7, v4);
        sub_D1D4((uint64_t)v4, &qword_3D1188);
        sub_D1D4((uint64_t)v7, &qword_3D83E8);
        return sub_D1D4((uint64_t)v10, &qword_3D83F0);
      }
    }
  }
  return result;
}

uint64_t sub_251308@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[5];
  _QWORD v33[5];
  _QWORD v34[6];

  v30 = a1;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE708);
  __chkstk_darwin(v28);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE740);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE6E8);
  __chkstk_darwin(v6);
  v8 = (double *)((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE6D0);
  __chkstk_darwin(v29);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Image.init(systemName:)(1937075312, 0xE400000000000000);
  type metadata accessor for ShowHeroFollowButton(0);
  dispatch thunk of PodcastStateMachine.currentState.getter(v31);
  v34[0] = 0;
  v34[1] = 0;
  v34[3] = 0;
  v34[4] = 0;
  v34[2] = 1;
  v12 = static PodcastState.== infix(_:_:)(v31, v34);
  sub_20A9EC((uint64_t)v31);
  dispatch thunk of PodcastStateMachine.currentState.getter(v32);
  v13 = static PodcastState.== infix(_:_:)(v32, v34);
  sub_20A9EC((uint64_t)v32);
  if ((v13 & 1) != 0)
  {
    sub_251650((uint64_t)v5);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE748);
    v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 0, 1, v14);
  }
  else
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE748);
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
  }
  v16.n128_u64[0] = 1.0;
  if ((v12 & 1) != 0)
    v18 = 0.0;
  else
    v18 = 1.0;
  v19 = static Alignment.center.getter(v15, v16);
  v21 = v20;
  sub_D184((uint64_t)v5, (uint64_t)v2, &qword_3DE740);
  v22 = (uint64_t *)&v2[*(int *)(v28 + 36)];
  *v22 = v19;
  v22[1] = v21;
  sub_D184((uint64_t)v2, (uint64_t)v8 + *(int *)(v6 + 36), &qword_3DE708);
  *(_QWORD *)v8 = v11;
  v8[1] = v18;
  swift_retain(v11);
  sub_D1D4((uint64_t)v2, &qword_3DE708);
  sub_D1D4((uint64_t)v5, &qword_3DE740);
  swift_release(v11);
  v24 = static Animation.default.getter(v23);
  v25 = Animation.speed(_:)(2.0);
  swift_release(v24);
  dispatch thunk of PodcastStateMachine.currentState.getter(v33);
  LOBYTE(v24) = static PodcastState.== infix(_:_:)(v33, v34);
  sub_20A9EC((uint64_t)v33);
  sub_D184((uint64_t)v8, (uint64_t)v10, &qword_3DE6E8);
  v26 = &v10[*(int *)(v29 + 36)];
  *(_QWORD *)v26 = v25;
  v26[8] = v24 & 1;
  sub_D1D4((uint64_t)v8, &qword_3DE6E8);
  return sub_D210((uint64_t)v10, v30, &qword_3DE6D0);
}

uint64_t sub_251650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a1;
  v1 = type metadata accessor for DynamicTypeSize(0);
  v30 = *(_QWORD *)(v1 - 8);
  v31 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE750);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE758);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE760);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.n128_f64[0] = ProgressView<>.init<>()(v12);
  v16 = static Color.white.getter(v15);
  v17 = Color.opacity(_:)(0.6);
  swift_release(v16);
  KeyPath = swift_getKeyPath(&unk_3025B8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  v19 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *v19 = KeyPath;
  v19[1] = v17;
  v20 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v21 = static UnitPoint.center.getter(v20);
  v23 = v22;
  sub_D184((uint64_t)v10, (uint64_t)v14, &qword_3DE758);
  v24 = (int64x2_t *)&v14[*(int *)(v11 + 36)];
  *v24 = vdupq_n_s64(0x3FE999999999999AuLL);
  *(double *)v24[1].i64 = v21;
  v24[1].i64[1] = v23;
  sub_D1D4((uint64_t)v10, &qword_3DE758);
  v26 = v30;
  v25 = v31;
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v3, enum case for DynamicTypeSize.medium(_:), v31);
  v27 = sub_104B60(&qword_3DE768, &qword_3DE760, (void (*)(void))sub_25DBA8);
  View.dynamicTypeSize(_:)(v3, v11, v27);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v25);
  return sub_D1D4((uint64_t)v14, &qword_3DE760);
}

uint64_t sub_2518C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  char v9;
  char v10;
  uint64_t v11;
  _QWORD v14[5];
  _QWORD v15[5];
  _QWORD v16[5];

  v1 = v0;
  v2 = type metadata accessor for ShowHeroFollowButton(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14[-1] - v6;
  v8 = dispatch thunk of PodcastStateMachine.currentState.getter(v14);
  v9 = PodcastState.isSubscribed.getter(v8);
  sub_20A9EC((uint64_t)v14);
  sub_19C4C(v1, (uint64_t)v7, type metadata accessor for ShowHeroFollowButton);
  if ((v9 & 1) != 0)
  {
    sub_FA4C((uint64_t)v7, type metadata accessor for ShowHeroFollowButton);
    sub_19C4C(v1, (uint64_t)v4, type metadata accessor for ShowHeroFollowButton);
  }
  else
  {
    dispatch thunk of PodcastStateMachine.currentState.getter(v15);
    v16[0] = 0;
    v16[1] = 0;
    v16[3] = 0;
    v16[4] = 0;
    v16[2] = 1;
    v10 = static PodcastState.== infix(_:_:)(v15, v16);
    sub_20A9EC((uint64_t)v15);
    sub_FA4C((uint64_t)v7, type metadata accessor for ShowHeroFollowButton);
    sub_19C4C(v1, (uint64_t)v4, type metadata accessor for ShowHeroFollowButton);
    if ((v10 & 1) != 0)
    {
      sub_FA4C((uint64_t)v4, type metadata accessor for ShowHeroFollowButton);
      return 0;
    }
  }
  v11 = *(_QWORD *)&v4[*(int *)(v2 + 20)];
  swift_retain(v11);
  sub_FA4C((uint64_t)v4, type metadata accessor for ShowHeroFollowButton);
  if (v11)
  {
    swift_release(v11);
    return 0;
  }
  return 1;
}

void sub_251A5C()
{
  qword_3DE0F0 = 0x403C000000000000;
}

uint64_t sub_251A6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  void (*v41)(char *, uint64_t);
  char *v42;
  char *v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3008);
  __chkstk_darwin(v2);
  v59 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v62 = (char *)&v57 - v5;
  v7 = __chkstk_darwin(v6);
  v63 = (char *)&v57 - v8;
  v9 = type metadata accessor for LocationFields(0, v7);
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  __chkstk_darwin(v9);
  v58 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v57 = (char *)&v57 - v12;
  __chkstk_darwin(v13);
  v61 = (char *)&v57 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v15);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v57 - v19;
  v21 = type metadata accessor for ImpressionMetrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v66 = (char *)&v57 - v26;
  __chkstk_darwin(v27);
  v29 = (char *)&v57 - v28;
  type metadata accessor for ShowHeroFollowButton(0);
  sub_152A0(v20);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v30(v20, 1, v21) == 1)
  {
    sub_D1D4((uint64_t)v20, &qword_3D0EE0);
  }
  else
  {
    v60 = a1;
    v31 = *(uint64_t (**)(char *, char *, uint64_t))(v22 + 32);
    v32 = v31(v29, v20, v21);
    ShowHero.impressionMetrics.getter(v32);
    if (v30(v17, 1, v21) == 1)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v29, v21);
      v33 = &qword_3D0EE0;
      v34 = (uint64_t)v17;
    }
    else
    {
      v35 = v66;
      v31(v66, v17, v21);
      v36 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      v36(v24, v29, v21);
      v37 = v63;
      LocationFields.init(from:)(v24);
      v38 = v64;
      v39 = v65;
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
      if (v40(v37, 1, v65) == 1)
      {
        v41 = *(void (**)(char *, uint64_t))(v22 + 8);
        v41(v35, v21);
        v41(v29, v21);
        v33 = &qword_3D3008;
        v34 = (uint64_t)v37;
      }
      else
      {
        v42 = v37;
        v43 = v61;
        v63 = *(char **)(v38 + 32);
        ((void (*)(char *, char *, uint64_t))v63)(v61, v42, v39);
        v36(v24, v35, v21);
        v44 = v62;
        LocationFields.init(from:)(v24);
        if (v40(v44, 1, v39) != 1)
        {
          v48 = v57;
          ((void (*)(char *, char *, uint64_t))v63)(v57, v44, v39);
          v49 = v38;
          v50 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
          v51 = v58;
          v50(v58, v48, v39);
          v52 = v43;
          v53 = v59;
          v50(v59, v52, v39);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v53, 0, 1, v39);
          ChildAndParentLocation.init(childFields:parentFields:)(v51, v53);
          v54 = *(void (**)(char *, uint64_t))(v49 + 8);
          v54(v48, v39);
          v54(v52, v39);
          v55 = *(void (**)(char *, uint64_t))(v22 + 8);
          v55(v66, v21);
          v55(v29, v21);
          v56 = type metadata accessor for ChildAndParentLocation(0);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v60, 0, 1, v56);
        }
        (*(void (**)(char *, uint64_t))(v38 + 8))(v43, v39);
        v45 = *(void (**)(char *, uint64_t))(v22 + 8);
        v45(v66, v21);
        v45(v29, v21);
        v33 = &qword_3D3008;
        v34 = (uint64_t)v44;
      }
    }
    sub_D1D4(v34, v33);
    a1 = v60;
  }
  v46 = type metadata accessor for ChildAndParentLocation(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(a1, 1, 1, v46);
}

uint64_t sub_251F24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  ValueMetadata *v23;
  _UNKNOWN **v24;
  _BYTE v25[40];
  __int128 v26;
  __int128 v27;
  uint64_t (*v28)();
  uint64_t v29;

  v2 = v1;
  v4 = type metadata accessor for ShowHeroContextMenuButton(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)v2;
  v9 = *(_BYTE *)(v2 + 8);
  swift_retain(*(_QWORD *)v2);
  v11 = sub_14A78(v10, v9);
  swift_release(v8);
  v12 = v2 + *(int *)(v4 + 24);
  v23 = &type metadata for PodcastsContextMenuProvider;
  v24 = &off_3857D0;
  v13 = (_QWORD *)swift_allocObject(&unk_38DB40, 64, 7);
  *(_QWORD *)&v22 = v13;
  v13[6] = type metadata accessor for ShowHero(0);
  v13[7] = sub_89A0(&qword_3DE780, (uint64_t (*)(uint64_t))&type metadata accessor for ShowHero, (uint64_t)&protocol conformance descriptor for ShowHero);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13 + 3);
  sub_19C4C(v12, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  v13[2] = v11;
  sub_19C4C(v2, (uint64_t)v7, type metadata accessor for ShowHeroContextMenuButton);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = v16 + v6;
  v18 = v15 | 7;
  v19 = swift_allocObject(&unk_38DB68, v17, v15 | 7);
  sub_1B79C((uint64_t)v7, v19 + v16, type metadata accessor for ShowHeroContextMenuButton);
  sub_1B738(&v22, (uint64_t)v25);
  v26 = 0u;
  v27 = 0u;
  v28 = sub_25DC74;
  v29 = v19;
  sub_19C4C(v2, (uint64_t)v7, type metadata accessor for ShowHeroContextMenuButton);
  v20 = swift_allocObject(&unk_38DB90, v17, v18);
  sub_1B79C((uint64_t)v7, v20 + v16, type metadata accessor for ShowHeroContextMenuButton);
  sub_D184((uint64_t)v25, a1, &qword_3DE788);
  *(_QWORD *)(a1 + 88) = sub_25E008;
  *(_QWORD *)(a1 + 96) = v20;
  return sub_D1D4((uint64_t)v25, &qword_3DE788);
}

uint64_t sub_25212C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  id v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  Swift::String v71;
  uint64_t v72;
  Swift::String v73;

  v70 = a2;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v68 = *(_QWORD *)(v3 - 8);
  v69 = v3;
  __chkstk_darwin(v3);
  v67 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Image.Scale(0);
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  __chkstk_darwin(v5);
  v62 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0808);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BlendMode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D8);
  __chkstk_darwin(v56);
  v15 = (uint64_t *)((char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE790);
  __chkstk_darwin(v57);
  v17 = (uint64_t *)((char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE798);
  __chkstk_darwin(v59);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE7A0);
  __chkstk_darwin(v60);
  v58 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE7A8);
  __chkstk_darwin(v66);
  v61 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v63 = (char *)&v56 - v23;
  v24 = Image.init(systemName:)(0x73697370696C6C65, 0xE800000000000000);
  v26 = static Color.white.getter(v25);
  v27 = *(void **)(a1 + 24);
  LOBYTE(v71._countAndFlagsBits) = *(_BYTE *)(a1 + 16);
  v71._object = v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  State.wrappedValue.getter(&v72, v28);
  v29 = 0.7;
  if ((_BYTE)v72)
    v29 = 0.525;
  v30 = Color.opacity(_:)(v29);
  v31 = swift_release(v26);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v11 + 104))(v13, enum case for BlendMode.plusLighter(_:), v10, v31);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v15 + *(int *)(v56 + 36), v13, v10);
  *v15 = v30;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_D184((uint64_t)v15, (uint64_t)v9, &qword_3D07D8);
  sub_D184((uint64_t)v9, (uint64_t)v17 + *(int *)(v57 + 36), &qword_3D0808);
  *v17 = v24;
  swift_retain(v24);
  sub_D1D4((uint64_t)v9, &qword_3D0808);
  sub_D1D4((uint64_t)v15, &qword_3D07D8);
  v32 = swift_release(v24);
  v33 = static Font.title3.getter(v32);
  v34 = Font.bold()(v33);
  swift_release(v33);
  KeyPath = swift_getKeyPath(&unk_3025E8);
  sub_D184((uint64_t)v17, (uint64_t)v19, &qword_3DE790);
  v36 = (uint64_t *)&v19[*(int *)(v59 + 36)];
  *v36 = KeyPath;
  v36[1] = v34;
  sub_D1D4((uint64_t)v17, &qword_3DE790);
  v38 = v64;
  v37 = v65;
  v39 = v62;
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v62, enum case for Image.Scale.medium(_:), v65);
  v40 = swift_getKeyPath(&unk_302618);
  v41 = v60;
  v42 = (uint64_t)v58;
  v43 = (uint64_t *)&v58[*(int *)(v60 + 36)];
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v43 + *(int *)(v44 + 28), v39, v37);
  *v43 = v40;
  sub_D184((uint64_t)v19, v42, &qword_3DE798);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
  sub_D1D4((uint64_t)v19, &qword_3DE798);
  v45 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v73._object = (void *)0xE000000000000000;
  v46._object = (void *)0x8000000000310320;
  v46._countAndFlagsBits = 0xD00000000000001CLL;
  v47._countAndFlagsBits = 0;
  v47._object = (void *)0xE000000000000000;
  v73._countAndFlagsBits = 0;
  v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, (NSBundle)v45, v47, v73);

  v71 = v48;
  v49 = sub_25E0B4();
  v50 = sub_D254();
  v51 = (uint64_t)v61;
  View.accessibilityLabel<A>(_:)(&v71, v41, &type metadata for String, v49, v50);
  swift_bridgeObjectRelease(v48._object);
  v52 = sub_D1D4(v42, &qword_3DE7A0);
  v53 = v67;
  static AccessibilityTraits.isButton.getter(v52);
  v54 = (uint64_t)v63;
  ModifiedContent<>.accessibility(addTraits:)(v53, v66);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v53, v69);
  sub_D1D4(v51, &qword_3DE7A8);
  return sub_D210(v54, v70, &qword_3DE7A8);
}

double sub_2526F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _QWORD v4[3];
  char v5;

  v4[2] = a2;
  v5 = a1;
  v2 = static Animation.default.getter(a1);
  withAnimation<A>(_:_:)(v2, sub_25E044, v4, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_252758(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE408);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D184(a1, (uint64_t)v4, &qword_3DE408);
  return EnvironmentValues.textCase.setter(v4);
}

uint64_t sub_2527D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_3022A0);
  v24 = swift_getKeyPath(&unk_3021A0);
  v7 = dispatch thunk of LanguageAwareString.attributedString.getter(v6);
  v8 = ShowHero.eyebrowRatingText.getter();
  v10 = v9;
  v11 = type metadata accessor for ShowHero(0);
  v12 = (uint64_t *)(a1 + *(int *)(v11 + 48));
  v13 = *v12;
  if (v12[1])
  {
    v14 = sub_D254();
    v13 = StringProtocol.localizedUppercase.getter(&type metadata for String, v14);
    v16 = v15;
  }
  else
  {
    v16 = 0;
  }
  v17 = *(_BYTE *)(a1 + *(int *)(v11 + 52));
  v18 = type metadata accessor for PodcastStateMachine(0);
  v19 = sub_89A0(&qword_3DE2E8, (uint64_t (*)(uint64_t))&type metadata accessor for PodcastStateMachine, (uint64_t)&protocol conformance descriptor for PodcastStateMachine);
  v20 = ObservedObject.init(wrappedValue:)(a2, v18, v19);
  v22 = v21;
  result = sub_FA4C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v8;
  *(_QWORD *)(a3 + 16) = v10;
  *(_QWORD *)(a3 + 24) = v13;
  *(_QWORD *)(a3 + 32) = v16;
  *(_BYTE *)(a3 + 40) = v17;
  *(_QWORD *)(a3 + 48) = v20;
  *(_QWORD *)(a3 + 56) = v22;
  *(_QWORD *)(a3 + 64) = KeyPath;
  *(_QWORD *)(a3 + 72) = 0;
  *(_BYTE *)(a3 + 80) = 0;
  *(_QWORD *)(a3 + 88) = v24;
  *(_BYTE *)(a3 + 96) = 0;
  return result;
}

unint64_t sub_25293C()
{
  unint64_t result;

  result = qword_3DE2E0;
  if (!qword_3DE2E0)
  {
    result = swift_getWitnessTable(&unk_302384, &type metadata for ShowHeroTextArea);
    atomic_store(result, (unint64_t *)&qword_3DE2E0);
  }
  return result;
}

uint64_t sub_252988(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD, _QWORD, _QWORD);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  void (*v51)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  id *v61;
  int v62;
  id v63;
  id *v64;
  int v65;
  id v66;
  id *v67;
  int v68;
  id v69;
  id *v70;
  int v71;
  id v72;
  id *v73;
  int v74;
  id v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  void (*v88)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  unsigned int (*v125)(_QWORD, _QWORD, _QWORD);
  uint64_t v126;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v19 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a2[4];
    v9 = (void *)a2[5];
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    v10 = (int *)type metadata accessor for ShowHero(0);
    v11 = v10[8];
    v12 = (_QWORD *)(v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = (int *)type metadata accessor for ArtworkModel(0);
    v126 = *((_QWORD *)v14 - 1);
    v15 = v7;
    v16 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v126 + 48);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v8);
    v17 = v9;
    if (v16(v13, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v125 = v16;
      v20 = v13[1];
      *v12 = *v13;
      v12[1] = v20;
      v21 = *((unsigned __int8 *)v13 + 32);
      swift_bridgeObjectRetain(v20);
      if (v21 == 255)
      {
        *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
        *((_BYTE *)v12 + 32) = *((_BYTE *)v13 + 32);
      }
      else
      {
        v22 = v13[2];
        v23 = v13[3];
        sub_108110(v22, v23, v21);
        v12[2] = v22;
        v12[3] = v23;
        *((_BYTE *)v12 + 32) = v21;
      }
      *(_OWORD *)(v12 + 5) = *(_OWORD *)(v13 + 5);
      v24 = (id *)(v13 + 7);
      v25 = *((unsigned __int8 *)v13 + 64);
      if (v25 == 255)
      {
        v12[7] = *v24;
        *((_BYTE *)v12 + 64) = *((_BYTE *)v13 + 64);
      }
      else
      {
        v26 = *v24;
        sub_27F80(*v24, *((_BYTE *)v13 + 64));
        v12[7] = v26;
        *((_BYTE *)v12 + 64) = v25;
      }
      v27 = (id *)(v13 + 9);
      v28 = *((unsigned __int8 *)v13 + 80);
      if (v28 == 255)
      {
        v12[9] = *v27;
        *((_BYTE *)v12 + 80) = *((_BYTE *)v13 + 80);
      }
      else
      {
        v29 = *v27;
        sub_27F80(*v27, *((_BYTE *)v13 + 80));
        v12[9] = v29;
        *((_BYTE *)v12 + 80) = v28;
      }
      v30 = (id *)(v13 + 11);
      v31 = *((unsigned __int8 *)v13 + 96);
      if (v31 == 255)
      {
        v12[11] = *v30;
        *((_BYTE *)v12 + 96) = *((_BYTE *)v13 + 96);
      }
      else
      {
        v32 = *v30;
        sub_27F80(*v30, *((_BYTE *)v13 + 96));
        v12[11] = v32;
        *((_BYTE *)v12 + 96) = v31;
      }
      v33 = (id *)(v13 + 13);
      v34 = *((unsigned __int8 *)v13 + 112);
      if (v34 == 255)
      {
        v12[13] = *v33;
        *((_BYTE *)v12 + 112) = *((_BYTE *)v13 + 112);
      }
      else
      {
        v35 = *v33;
        sub_27F80(*v33, *((_BYTE *)v13 + 112));
        v12[13] = v35;
        *((_BYTE *)v12 + 112) = v34;
      }
      v36 = (id *)(v13 + 15);
      v37 = *((unsigned __int8 *)v13 + 128);
      if (v37 == 255)
      {
        v12[15] = *v36;
        *((_BYTE *)v12 + 128) = *((_BYTE *)v13 + 128);
      }
      else
      {
        v38 = *v36;
        sub_27F80(*v36, *((_BYTE *)v13 + 128));
        v12[15] = v38;
        *((_BYTE *)v12 + 128) = v37;
      }
      *((_BYTE *)v12 + 129) = *((_BYTE *)v13 + 129);
      v39 = v14[11];
      v40 = (char *)v12 + v39;
      v41 = (char *)v13 + v39;
      v42 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      v43 = v14[12];
      v44 = (_QWORD *)((char *)v12 + v43);
      v45 = (_QWORD *)((char *)v13 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      *((_BYTE *)v12 + v14[13]) = *((_BYTE *)v13 + v14[13]);
      *((_BYTE *)v12 + v14[14]) = *((_BYTE *)v13 + v14[14]);
      *((_BYTE *)v12 + v14[15]) = *((_BYTE *)v13 + v14[15]);
      v47 = v14[16];
      v48 = (_QWORD *)((char *)v12 + v47);
      v49 = (_QWORD *)((char *)v13 + v47);
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      v51 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v126 + 56);
      swift_bridgeObjectRetain(v46);
      v52 = swift_bridgeObjectRetain(v50);
      v51(v12, 0, 1, v14, v52);
      v16 = v125;
    }
    v53 = v10[9];
    v54 = (_QWORD *)(v4 + v53);
    v55 = (uint64_t *)((char *)a2 + v53);
    if (v16((char *)a2 + v53, 1, v14))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v57 = v55[1];
      *v54 = *v55;
      v54[1] = v57;
      v58 = *((unsigned __int8 *)v55 + 32);
      swift_bridgeObjectRetain(v57);
      if (v58 == 255)
      {
        *((_OWORD *)v54 + 1) = *((_OWORD *)v55 + 1);
        *((_BYTE *)v54 + 32) = *((_BYTE *)v55 + 32);
      }
      else
      {
        v59 = v55[2];
        v60 = v55[3];
        sub_108110(v59, v60, v58);
        v54[2] = v59;
        v54[3] = v60;
        *((_BYTE *)v54 + 32) = v58;
      }
      *(_OWORD *)(v54 + 5) = *(_OWORD *)(v55 + 5);
      v61 = (id *)(v55 + 7);
      v62 = *((unsigned __int8 *)v55 + 64);
      if (v62 == 255)
      {
        v54[7] = *v61;
        *((_BYTE *)v54 + 64) = *((_BYTE *)v55 + 64);
      }
      else
      {
        v63 = *v61;
        sub_27F80(*v61, *((_BYTE *)v55 + 64));
        v54[7] = v63;
        *((_BYTE *)v54 + 64) = v62;
      }
      v64 = (id *)(v55 + 9);
      v65 = *((unsigned __int8 *)v55 + 80);
      if (v65 == 255)
      {
        v54[9] = *v64;
        *((_BYTE *)v54 + 80) = *((_BYTE *)v55 + 80);
      }
      else
      {
        v66 = *v64;
        sub_27F80(*v64, *((_BYTE *)v55 + 80));
        v54[9] = v66;
        *((_BYTE *)v54 + 80) = v65;
      }
      v67 = (id *)(v55 + 11);
      v68 = *((unsigned __int8 *)v55 + 96);
      if (v68 == 255)
      {
        v54[11] = *v67;
        *((_BYTE *)v54 + 96) = *((_BYTE *)v55 + 96);
      }
      else
      {
        v69 = *v67;
        sub_27F80(*v67, *((_BYTE *)v55 + 96));
        v54[11] = v69;
        *((_BYTE *)v54 + 96) = v68;
      }
      v70 = (id *)(v55 + 13);
      v71 = *((unsigned __int8 *)v55 + 112);
      if (v71 == 255)
      {
        v54[13] = *v70;
        *((_BYTE *)v54 + 112) = *((_BYTE *)v55 + 112);
      }
      else
      {
        v72 = *v70;
        sub_27F80(*v70, *((_BYTE *)v55 + 112));
        v54[13] = v72;
        *((_BYTE *)v54 + 112) = v71;
      }
      v73 = (id *)(v55 + 15);
      v74 = *((unsigned __int8 *)v55 + 128);
      if (v74 == 255)
      {
        v54[15] = *v73;
        *((_BYTE *)v54 + 128) = *((_BYTE *)v55 + 128);
      }
      else
      {
        v75 = *v73;
        sub_27F80(*v73, *((_BYTE *)v55 + 128));
        v54[15] = v75;
        *((_BYTE *)v54 + 128) = v74;
      }
      *((_BYTE *)v54 + 129) = *((_BYTE *)v55 + 129);
      v76 = v14[11];
      v77 = (char *)v54 + v76;
      v78 = (char *)v55 + v76;
      v79 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
      v80 = v14[12];
      v81 = (_QWORD *)((char *)v54 + v80);
      v82 = (_QWORD *)((char *)v55 + v80);
      v83 = v82[1];
      *v81 = *v82;
      v81[1] = v83;
      *((_BYTE *)v54 + v14[13]) = *((_BYTE *)v55 + v14[13]);
      *((_BYTE *)v54 + v14[14]) = *((_BYTE *)v55 + v14[14]);
      *((_BYTE *)v54 + v14[15]) = *((_BYTE *)v55 + v14[15]);
      v84 = v14[16];
      v85 = (_QWORD *)((char *)v54 + v84);
      v86 = (_QWORD *)((char *)v55 + v84);
      v87 = v86[1];
      *v85 = *v86;
      v85[1] = v87;
      v88 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v126 + 56);
      swift_bridgeObjectRetain(v83);
      v89 = swift_bridgeObjectRetain(v87);
      v88(v54, 0, 1, v14, v89);
    }
    v90 = v10[10];
    v91 = v4 + v90;
    v92 = (uint64_t)a2 + v90;
    *(_DWORD *)v91 = *(_DWORD *)v92;
    *(_BYTE *)(v91 + 4) = *(_BYTE *)(v92 + 4);
    v93 = v10[11];
    v94 = v4 + v93;
    v95 = (uint64_t)a2 + v93;
    *(_BYTE *)(v94 + 8) = *(_BYTE *)(v95 + 8);
    *(_QWORD *)v94 = *(_QWORD *)v95;
    v96 = v10[12];
    v97 = (_QWORD *)(v4 + v96);
    v98 = (uint64_t *)((char *)a2 + v96);
    v99 = v98[1];
    *v97 = *v98;
    v97[1] = v99;
    *(_BYTE *)(v4 + v10[13]) = *((_BYTE *)a2 + v10[13]);
    v100 = v10[14];
    v101 = v4 + v100;
    v102 = (uint64_t)a2 + v100;
    swift_bridgeObjectRetain(v99);
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
    v104 = v10[15];
    v105 = v4 + v104;
    v106 = (uint64_t)a2 + v104;
    v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
    v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
    v108(v105, v106, v107);
    v108(v4 + v10[16], (uint64_t)a2 + v10[16], v107);
    v108(v4 + v10[17], (uint64_t)a2 + v10[17], v107);
    v109 = v10[18];
    v110 = v4 + v109;
    v111 = (uint64_t)a2 + v109;
    v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v110, v111, v112);
    v113 = a3[5];
    v114 = a3[6];
    v115 = *(uint64_t *)((char *)a2 + v113);
    *(_QWORD *)(v4 + v113) = v115;
    v116 = *(uint64_t *)((char *)a2 + v114);
    *(_QWORD *)(v4 + v114) = v116;
    v117 = a3[7];
    v118 = a3[8];
    v119 = (_QWORD *)(v4 + v117);
    v120 = (uint64_t *)((char *)a2 + v117);
    v121 = v120[1];
    *v119 = *v120;
    v119[1] = v121;
    v122 = v4 + v118;
    v123 = (uint64_t *)((char *)a2 + v118);
    v19 = *v123;
    LOBYTE(v123) = *((_BYTE *)v123 + 8);
    *(_QWORD *)v122 = v19;
    *(_BYTE *)(v122 + 8) = (_BYTE)v123;
    swift_retain(v115);
    swift_retain(v116);
    swift_retain(v121);
  }
  swift_retain(v19);
  return v4;
}

double sub_2530D8(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  int *v6;
  unsigned int (*v7)(uint64_t, uint64_t, int *);
  __n128 v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));

  v4 = (int *)type metadata accessor for ShowHero(0);
  v5 = a1 + v4[8];
  v6 = (int *)type metadata accessor for ArtworkModel(0);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
    v9 = *(unsigned __int8 *)(v5 + 32);
    if (v9 != 255)
      sub_108270(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v9);
    v10 = *(unsigned __int8 *)(v5 + 64);
    if (v10 != 255)
      sub_27FA8(*(id *)(v5 + 56), v10);
    v11 = *(unsigned __int8 *)(v5 + 80);
    if (v11 != 255)
      sub_27FA8(*(id *)(v5 + 72), v11);
    v12 = *(unsigned __int8 *)(v5 + 96);
    if (v12 != 255)
      sub_27FA8(*(id *)(v5 + 88), v12);
    v13 = *(unsigned __int8 *)(v5 + 112);
    if (v13 != 255)
      sub_27FA8(*(id *)(v5 + 104), v13);
    v14 = *(unsigned __int8 *)(v5 + 128);
    if (v14 != 255)
      sub_27FA8(*(id *)(v5 + 120), v14);
    v15 = v5 + v6[11];
    v16 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[12] + 8));
    v8 = swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[16] + 8));
  }
  v17 = a1 + v4[9];
  if (!((unsigned int (*)(uint64_t, uint64_t, int *, __n128))v7)(v17, 1, v6, v8))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8));
    v18 = *(unsigned __int8 *)(v17 + 32);
    if (v18 != 255)
      sub_108270(*(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24), v18);
    v19 = *(unsigned __int8 *)(v17 + 64);
    if (v19 != 255)
      sub_27FA8(*(id *)(v17 + 56), v19);
    v20 = *(unsigned __int8 *)(v17 + 80);
    if (v20 != 255)
      sub_27FA8(*(id *)(v17 + 72), v20);
    v21 = *(unsigned __int8 *)(v17 + 96);
    if (v21 != 255)
      sub_27FA8(*(id *)(v17 + 88), v21);
    v22 = *(unsigned __int8 *)(v17 + 112);
    if (v22 != 255)
      sub_27FA8(*(id *)(v17 + 104), v22);
    v23 = *(unsigned __int8 *)(v17 + 128);
    if (v23 != 255)
      sub_27FA8(*(id *)(v17 + 120), v23);
    v24 = v17 + v6[11];
    v25 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + v6[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + v6[16] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[12] + 8));
  v26 = a1 + v4[14];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  v28 = a1 + v4[15];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
  v30(v28, v29);
  v30(a1 + v4[16], v29);
  v30(a1 + v4[17], v29);
  v31 = a1 + v4[18];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  swift_release(*(_QWORD *)(a1 + a2[5]));
  swift_release(*(_QWORD *)(a1 + a2[6]));
  swift_release(*(_QWORD *)(a1 + a2[7] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[8])).n128_u64[0];
  return result;
}

uint64_t sub_2533E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  id v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  id *v57;
  int v58;
  id v59;
  id *v60;
  int v61;
  id v62;
  id *v63;
  int v64;
  id v65;
  id *v66;
  int v67;
  id v68;
  id *v69;
  int v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  void (*v84)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v122;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = (int *)type metadata accessor for ShowHero(0);
  v9 = v8[8];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = (int *)type metadata accessor for ArtworkModel(0);
  v122 = *((_QWORD *)v12 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v122 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v14 = v7;
  if (v13(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v11[1];
    *v10 = *v11;
    v10[1] = v16;
    v17 = *((unsigned __int8 *)v11 + 32);
    swift_bridgeObjectRetain(v16);
    if (v17 == 255)
    {
      *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
      *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
    }
    else
    {
      v18 = v11[2];
      v19 = v11[3];
      sub_108110(v18, v19, v17);
      v10[2] = v18;
      v10[3] = v19;
      *((_BYTE *)v10 + 32) = v17;
    }
    *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
    v20 = (id *)(v11 + 7);
    v21 = *((unsigned __int8 *)v11 + 64);
    if (v21 == 255)
    {
      v10[7] = *v20;
      *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
    }
    else
    {
      v22 = *v20;
      sub_27F80(*v20, *((_BYTE *)v11 + 64));
      v10[7] = v22;
      *((_BYTE *)v10 + 64) = v21;
    }
    v23 = (id *)(v11 + 9);
    v24 = *((unsigned __int8 *)v11 + 80);
    if (v24 == 255)
    {
      v10[9] = *v23;
      *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
    }
    else
    {
      v25 = *v23;
      sub_27F80(*v23, *((_BYTE *)v11 + 80));
      v10[9] = v25;
      *((_BYTE *)v10 + 80) = v24;
    }
    v26 = (id *)(v11 + 11);
    v27 = *((unsigned __int8 *)v11 + 96);
    if (v27 == 255)
    {
      v10[11] = *v26;
      *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
    }
    else
    {
      v28 = *v26;
      sub_27F80(*v26, *((_BYTE *)v11 + 96));
      v10[11] = v28;
      *((_BYTE *)v10 + 96) = v27;
    }
    v29 = (id *)(v11 + 13);
    v30 = *((unsigned __int8 *)v11 + 112);
    if (v30 == 255)
    {
      v10[13] = *v29;
      *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
    }
    else
    {
      v31 = *v29;
      sub_27F80(*v29, *((_BYTE *)v11 + 112));
      v10[13] = v31;
      *((_BYTE *)v10 + 112) = v30;
    }
    v32 = (id *)(v11 + 15);
    v33 = *((unsigned __int8 *)v11 + 128);
    if (v33 == 255)
    {
      v10[15] = *v32;
      *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
    }
    else
    {
      v34 = *v32;
      sub_27F80(*v32, *((_BYTE *)v11 + 128));
      v10[15] = v34;
      *((_BYTE *)v10 + 128) = v33;
    }
    *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
    v35 = v12[11];
    v36 = (char *)v10 + v35;
    v37 = (char *)v11 + v35;
    v38 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    v39 = v12[12];
    v40 = (_QWORD *)((char *)v10 + v39);
    v41 = (_QWORD *)((char *)v11 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
    *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
    *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
    v43 = v12[16];
    v44 = (_QWORD *)((char *)v10 + v43);
    v45 = (_QWORD *)((char *)v11 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v122 + 56);
    swift_bridgeObjectRetain(v42);
    v48 = swift_bridgeObjectRetain(v46);
    v47(v10, 0, 1, v12, v48);
  }
  v49 = v8[9];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  if (v13((_QWORD *)(a2 + v49), 1, v12))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v53 = v51[1];
    *v50 = *v51;
    v50[1] = v53;
    v54 = *((unsigned __int8 *)v51 + 32);
    swift_bridgeObjectRetain(v53);
    if (v54 == 255)
    {
      *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
      *((_BYTE *)v50 + 32) = *((_BYTE *)v51 + 32);
    }
    else
    {
      v55 = v51[2];
      v56 = v51[3];
      sub_108110(v55, v56, v54);
      v50[2] = v55;
      v50[3] = v56;
      *((_BYTE *)v50 + 32) = v54;
    }
    *(_OWORD *)(v50 + 5) = *(_OWORD *)(v51 + 5);
    v57 = (id *)(v51 + 7);
    v58 = *((unsigned __int8 *)v51 + 64);
    if (v58 == 255)
    {
      v50[7] = *v57;
      *((_BYTE *)v50 + 64) = *((_BYTE *)v51 + 64);
    }
    else
    {
      v59 = *v57;
      sub_27F80(*v57, *((_BYTE *)v51 + 64));
      v50[7] = v59;
      *((_BYTE *)v50 + 64) = v58;
    }
    v60 = (id *)(v51 + 9);
    v61 = *((unsigned __int8 *)v51 + 80);
    if (v61 == 255)
    {
      v50[9] = *v60;
      *((_BYTE *)v50 + 80) = *((_BYTE *)v51 + 80);
    }
    else
    {
      v62 = *v60;
      sub_27F80(*v60, *((_BYTE *)v51 + 80));
      v50[9] = v62;
      *((_BYTE *)v50 + 80) = v61;
    }
    v63 = (id *)(v51 + 11);
    v64 = *((unsigned __int8 *)v51 + 96);
    if (v64 == 255)
    {
      v50[11] = *v63;
      *((_BYTE *)v50 + 96) = *((_BYTE *)v51 + 96);
    }
    else
    {
      v65 = *v63;
      sub_27F80(*v63, *((_BYTE *)v51 + 96));
      v50[11] = v65;
      *((_BYTE *)v50 + 96) = v64;
    }
    v66 = (id *)(v51 + 13);
    v67 = *((unsigned __int8 *)v51 + 112);
    if (v67 == 255)
    {
      v50[13] = *v66;
      *((_BYTE *)v50 + 112) = *((_BYTE *)v51 + 112);
    }
    else
    {
      v68 = *v66;
      sub_27F80(*v66, *((_BYTE *)v51 + 112));
      v50[13] = v68;
      *((_BYTE *)v50 + 112) = v67;
    }
    v69 = (id *)(v51 + 15);
    v70 = *((unsigned __int8 *)v51 + 128);
    if (v70 == 255)
    {
      v50[15] = *v69;
      *((_BYTE *)v50 + 128) = *((_BYTE *)v51 + 128);
    }
    else
    {
      v71 = *v69;
      sub_27F80(*v69, *((_BYTE *)v51 + 128));
      v50[15] = v71;
      *((_BYTE *)v50 + 128) = v70;
    }
    *((_BYTE *)v50 + 129) = *((_BYTE *)v51 + 129);
    v72 = v12[11];
    v73 = (char *)v50 + v72;
    v74 = (char *)v51 + v72;
    v75 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    v76 = v12[12];
    v77 = (_QWORD *)((char *)v50 + v76);
    v78 = (_QWORD *)((char *)v51 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    *((_BYTE *)v50 + v12[13]) = *((_BYTE *)v51 + v12[13]);
    *((_BYTE *)v50 + v12[14]) = *((_BYTE *)v51 + v12[14]);
    *((_BYTE *)v50 + v12[15]) = *((_BYTE *)v51 + v12[15]);
    v80 = v12[16];
    v81 = (_QWORD *)((char *)v50 + v80);
    v82 = (_QWORD *)((char *)v51 + v80);
    v83 = v82[1];
    *v81 = *v82;
    v81[1] = v83;
    v84 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v122 + 56);
    swift_bridgeObjectRetain(v79);
    v85 = swift_bridgeObjectRetain(v83);
    v84(v50, 0, 1, v12, v85);
  }
  v86 = v8[10];
  v87 = a1 + v86;
  v88 = a2 + v86;
  *(_DWORD *)v87 = *(_DWORD *)v88;
  *(_BYTE *)(v87 + 4) = *(_BYTE *)(v88 + 4);
  v89 = v8[11];
  v90 = a1 + v89;
  v91 = a2 + v89;
  *(_BYTE *)(v90 + 8) = *(_BYTE *)(v91 + 8);
  *(_QWORD *)v90 = *(_QWORD *)v91;
  v92 = v8[12];
  v93 = (_QWORD *)(a1 + v92);
  v94 = (_QWORD *)(a2 + v92);
  v95 = v94[1];
  *v93 = *v94;
  v93[1] = v95;
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  v96 = v8[14];
  v97 = a1 + v96;
  v98 = a2 + v96;
  swift_bridgeObjectRetain(v95);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
  v100 = v8[15];
  v101 = a1 + v100;
  v102 = a2 + v100;
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
  v104(v101, v102, v103);
  v104(a1 + v8[16], a2 + v8[16], v103);
  v104(a1 + v8[17], a2 + v8[17], v103);
  v105 = v8[18];
  v106 = a1 + v105;
  v107 = a2 + v105;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
  v109 = a3[5];
  v110 = a3[6];
  v111 = *(_QWORD *)(a2 + v109);
  *(_QWORD *)(a1 + v109) = v111;
  v112 = *(_QWORD *)(a2 + v110);
  *(_QWORD *)(a1 + v110) = v112;
  v113 = a3[7];
  v114 = a3[8];
  v115 = (_QWORD *)(a1 + v113);
  v116 = (_QWORD *)(a2 + v113);
  v117 = v116[1];
  *v115 = *v116;
  v115[1] = v117;
  v118 = a1 + v114;
  v119 = (uint64_t *)(a2 + v114);
  v120 = *v119;
  LOBYTE(v119) = *((_BYTE *)v119 + 8);
  *(_QWORD *)v118 = v120;
  *(_BYTE *)(v118 + 8) = (_BYTE)v119;
  swift_retain(v111);
  swift_retain(v112);
  swift_retain(v117);
  swift_retain(v120);
  return a1;
}

_QWORD *sub_253B04(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, int *);
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  __int128 v37;
  id *v38;
  int v39;
  id v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  id v53;
  id *v54;
  int v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(uint64_t, _QWORD, uint64_t, int *, __n128);
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __int128 v75;
  id *v76;
  id *v77;
  int v78;
  id v79;
  void *v80;
  char v81;
  id v82;
  char v83;
  id v84;
  id *v85;
  id *v86;
  int v87;
  id v88;
  void *v89;
  char v90;
  id v91;
  char v92;
  id v93;
  id *v94;
  id *v95;
  int v96;
  id v97;
  void *v98;
  char v99;
  id v100;
  char v101;
  id v102;
  id *v103;
  id *v104;
  int v105;
  id v106;
  void *v107;
  char v108;
  id v109;
  char v110;
  id v111;
  id *v112;
  id *v113;
  int v114;
  id v115;
  void *v116;
  char v117;
  id v118;
  char v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unsigned __int8 *v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 *v148;
  __int128 *v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unsigned __int8 v155;
  __int128 v156;
  id *v157;
  int v158;
  id v159;
  id v160;
  id *v161;
  int v162;
  id v163;
  id v164;
  id *v165;
  int v166;
  id v167;
  id v168;
  id *v169;
  int v170;
  id v171;
  id v172;
  id *v173;
  int v174;
  id v175;
  id v176;
  uint64_t v177;
  char *v178;
  unsigned __int8 *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unsigned __int8 *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  unsigned __int8 *v187;
  uint64_t v188;
  void (*v189)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v190;
  uint64_t v191;
  uint64_t v192;
  unsigned __int8 v193;
  __int128 v194;
  id *v195;
  id *v196;
  int v197;
  id v198;
  void *v199;
  char v200;
  id v201;
  unsigned __int8 v202;
  id v203;
  id *v204;
  id *v205;
  int v206;
  id v207;
  void *v208;
  char v209;
  id v210;
  unsigned __int8 v211;
  id v212;
  id *v213;
  id *v214;
  int v215;
  id v216;
  void *v217;
  char v218;
  id v219;
  unsigned __int8 v220;
  id v221;
  id *v222;
  id *v223;
  int v224;
  id v225;
  void *v226;
  char v227;
  id v228;
  unsigned __int8 v229;
  id v230;
  id *v231;
  id *v232;
  int v233;
  id v234;
  void *v235;
  char v236;
  id v237;
  unsigned __int8 v238;
  id v239;
  uint64_t v240;
  char *v241;
  unsigned __int8 *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  unsigned __int8 *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  unsigned __int8 *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  int v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  void (*v275)(char *, char *, uint64_t);
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  _QWORD *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v297;
  uint64_t v298;
  int *v299;
  int *v300;
  int *v301;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a2[5];
  v11 = (void *)a1[5];
  a1[5] = v10;
  v12 = v10;

  v13 = (int *)type metadata accessor for ShowHero(0);
  v14 = v13[8];
  v15 = (uint64_t)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = (int *)type metadata accessor for ArtworkModel(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19((uint64_t)v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      v297 = v18;
      v299 = a3;
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v22 = *((_QWORD *)v16 + 1);
      *(_QWORD *)(v15 + 8) = v22;
      v23 = v16[32];
      swift_bridgeObjectRetain(v22);
      if (v23 == 255)
      {
        v37 = *((_OWORD *)v16 + 1);
        *(_BYTE *)(v15 + 32) = v16[32];
        *(_OWORD *)(v15 + 16) = v37;
      }
      else
      {
        v24 = *((_QWORD *)v16 + 2);
        v25 = *((_QWORD *)v16 + 3);
        sub_108110(v24, v25, v23);
        *(_QWORD *)(v15 + 16) = v24;
        *(_QWORD *)(v15 + 24) = v25;
        *(_BYTE *)(v15 + 32) = v23;
      }
      *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
      *(_QWORD *)(v15 + 48) = *((_QWORD *)v16 + 6);
      v38 = (id *)(v16 + 56);
      v39 = v16[64];
      if (v39 == 255)
      {
        v41 = *v38;
        *(_BYTE *)(v15 + 64) = v16[64];
        *(_QWORD *)(v15 + 56) = v41;
      }
      else
      {
        v40 = *v38;
        sub_27F80(*v38, v16[64]);
        *(_QWORD *)(v15 + 56) = v40;
        *(_BYTE *)(v15 + 64) = v39;
      }
      v18 = v297;
      v42 = (id *)(v16 + 72);
      v43 = v16[80];
      if (v43 == 255)
      {
        v45 = *v42;
        *(_BYTE *)(v15 + 80) = v16[80];
        *(_QWORD *)(v15 + 72) = v45;
      }
      else
      {
        v44 = *v42;
        sub_27F80(*v42, v16[80]);
        *(_QWORD *)(v15 + 72) = v44;
        *(_BYTE *)(v15 + 80) = v43;
      }
      v46 = (id *)(v16 + 88);
      v47 = v16[96];
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v15 + 96) = v16[96];
        *(_QWORD *)(v15 + 88) = v49;
      }
      else
      {
        v48 = *v46;
        sub_27F80(*v46, v16[96]);
        *(_QWORD *)(v15 + 88) = v48;
        *(_BYTE *)(v15 + 96) = v47;
      }
      v50 = (id *)(v16 + 104);
      v51 = v16[112];
      if (v51 == 255)
      {
        v53 = *v50;
        *(_BYTE *)(v15 + 112) = v16[112];
        *(_QWORD *)(v15 + 104) = v53;
      }
      else
      {
        v52 = *v50;
        sub_27F80(*v50, v16[112]);
        *(_QWORD *)(v15 + 104) = v52;
        *(_BYTE *)(v15 + 112) = v51;
      }
      v54 = (id *)(v16 + 120);
      v55 = v16[128];
      if (v55 == 255)
      {
        v57 = *v54;
        *(_BYTE *)(v15 + 128) = v16[128];
        *(_QWORD *)(v15 + 120) = v57;
      }
      else
      {
        v56 = *v54;
        sub_27F80(*v54, v16[128]);
        *(_QWORD *)(v15 + 120) = v56;
        *(_BYTE *)(v15 + 128) = v55;
      }
      *(_BYTE *)(v15 + 129) = v16[129];
      v58 = v17[11];
      v59 = v15 + v58;
      v60 = &v16[v58];
      v61 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      v62 = v17[12];
      v63 = (_QWORD *)(v15 + v62);
      v64 = &v16[v62];
      *v63 = *(_QWORD *)v64;
      v65 = *((_QWORD *)v64 + 1);
      v63[1] = v65;
      *(_BYTE *)(v15 + v17[13]) = v16[v17[13]];
      *(_BYTE *)(v15 + v17[14]) = v16[v17[14]];
      *(_BYTE *)(v15 + v17[15]) = v16[v17[15]];
      v66 = v17[16];
      v67 = (_QWORD *)(v15 + v66);
      v68 = &v16[v66];
      *v67 = *(_QWORD *)v68;
      v69 = *((_QWORD *)v68 + 1);
      v67[1] = v69;
      v70 = *(void (**)(uint64_t, _QWORD, uint64_t, int *, __n128))(v297 + 56);
      swift_bridgeObjectRetain(v65);
      v71 = swift_bridgeObjectRetain(v69);
      v70(v15, 0, 1, v17, v71);
      a3 = v299;
      goto LABEL_68;
    }
LABEL_7:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v15, v16, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_68;
  }
  if (v21)
  {
    sub_FA4C(v15, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  v298 = v18;
  v300 = a3;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v27 = *((_QWORD *)v16 + 1);
  v28 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v15 + 8) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  v29 = (__int128 *)(v15 + 16);
  v30 = (__int128 *)(v16 + 16);
  v31 = v16[32];
  if (*(unsigned __int8 *)(v15 + 32) == 255)
  {
    if (v31 == 255)
    {
      v75 = *v30;
      *(_BYTE *)(v15 + 32) = v16[32];
      *v29 = v75;
    }
    else
    {
      v72 = *((_QWORD *)v16 + 2);
      v73 = *((_QWORD *)v16 + 3);
      sub_108110(v72, v73, v16[32]);
      *(_QWORD *)(v15 + 16) = v72;
      *(_QWORD *)(v15 + 24) = v73;
      *(_BYTE *)(v15 + 32) = v31;
    }
  }
  else if (v31 == 255)
  {
    sub_108DD8(v15 + 16);
    v74 = v16[32];
    *v29 = *v30;
    *(_BYTE *)(v15 + 32) = v74;
  }
  else
  {
    v32 = *((_QWORD *)v16 + 2);
    v33 = *((_QWORD *)v16 + 3);
    sub_108110(v32, v33, v16[32]);
    v34 = *(_QWORD *)(v15 + 16);
    v35 = *(_QWORD *)(v15 + 24);
    *(_QWORD *)(v15 + 16) = v32;
    *(_QWORD *)(v15 + 24) = v33;
    v36 = *(_BYTE *)(v15 + 32);
    *(_BYTE *)(v15 + 32) = v31;
    sub_108270(v34, v35, v36);
  }
  *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
  *(_QWORD *)(v15 + 48) = *((_QWORD *)v16 + 6);
  v76 = (id *)(v15 + 56);
  v77 = (id *)(v16 + 56);
  v78 = v16[64];
  if (*(unsigned __int8 *)(v15 + 64) == 255)
  {
    if (v78 == 255)
    {
      v84 = *v77;
      *(_BYTE *)(v15 + 64) = v16[64];
      *v76 = v84;
    }
    else
    {
      v82 = *v77;
      sub_27F80(*v77, v16[64]);
      *(_QWORD *)(v15 + 56) = v82;
      *(_BYTE *)(v15 + 64) = v78;
    }
  }
  else if (v78 == 255)
  {
    sub_108E0C(v15 + 56);
    v83 = v16[64];
    *v76 = *v77;
    *(_BYTE *)(v15 + 64) = v83;
  }
  else
  {
    v79 = *v77;
    sub_27F80(*v77, v16[64]);
    v80 = *(void **)(v15 + 56);
    *(_QWORD *)(v15 + 56) = v79;
    v81 = *(_BYTE *)(v15 + 64);
    *(_BYTE *)(v15 + 64) = v78;
    sub_27FA8(v80, v81);
  }
  v85 = (id *)(v15 + 72);
  v86 = (id *)(v16 + 72);
  v87 = v16[80];
  if (*(unsigned __int8 *)(v15 + 80) == 255)
  {
    if (v87 == 255)
    {
      v93 = *v86;
      *(_BYTE *)(v15 + 80) = v16[80];
      *v85 = v93;
    }
    else
    {
      v91 = *v86;
      sub_27F80(*v86, v16[80]);
      *(_QWORD *)(v15 + 72) = v91;
      *(_BYTE *)(v15 + 80) = v87;
    }
  }
  else if (v87 == 255)
  {
    sub_108E0C(v15 + 72);
    v92 = v16[80];
    *v85 = *v86;
    *(_BYTE *)(v15 + 80) = v92;
  }
  else
  {
    v88 = *v86;
    sub_27F80(*v86, v16[80]);
    v89 = *(void **)(v15 + 72);
    *(_QWORD *)(v15 + 72) = v88;
    v90 = *(_BYTE *)(v15 + 80);
    *(_BYTE *)(v15 + 80) = v87;
    sub_27FA8(v89, v90);
  }
  v94 = (id *)(v15 + 88);
  v95 = (id *)(v16 + 88);
  v96 = v16[96];
  if (*(unsigned __int8 *)(v15 + 96) == 255)
  {
    if (v96 == 255)
    {
      v102 = *v95;
      *(_BYTE *)(v15 + 96) = v16[96];
      *v94 = v102;
    }
    else
    {
      v100 = *v95;
      sub_27F80(*v95, v16[96]);
      *(_QWORD *)(v15 + 88) = v100;
      *(_BYTE *)(v15 + 96) = v96;
    }
  }
  else if (v96 == 255)
  {
    sub_108E0C(v15 + 88);
    v101 = v16[96];
    *v94 = *v95;
    *(_BYTE *)(v15 + 96) = v101;
  }
  else
  {
    v97 = *v95;
    sub_27F80(*v95, v16[96]);
    v98 = *(void **)(v15 + 88);
    *(_QWORD *)(v15 + 88) = v97;
    v99 = *(_BYTE *)(v15 + 96);
    *(_BYTE *)(v15 + 96) = v96;
    sub_27FA8(v98, v99);
  }
  v103 = (id *)(v15 + 104);
  v104 = (id *)(v16 + 104);
  v105 = v16[112];
  if (*(unsigned __int8 *)(v15 + 112) == 255)
  {
    if (v105 == 255)
    {
      v111 = *v104;
      *(_BYTE *)(v15 + 112) = v16[112];
      *v103 = v111;
    }
    else
    {
      v109 = *v104;
      sub_27F80(*v104, v16[112]);
      *(_QWORD *)(v15 + 104) = v109;
      *(_BYTE *)(v15 + 112) = v105;
    }
  }
  else if (v105 == 255)
  {
    sub_108E0C(v15 + 104);
    v110 = v16[112];
    *v103 = *v104;
    *(_BYTE *)(v15 + 112) = v110;
  }
  else
  {
    v106 = *v104;
    sub_27F80(*v104, v16[112]);
    v107 = *(void **)(v15 + 104);
    *(_QWORD *)(v15 + 104) = v106;
    v108 = *(_BYTE *)(v15 + 112);
    *(_BYTE *)(v15 + 112) = v105;
    sub_27FA8(v107, v108);
  }
  v112 = (id *)(v15 + 120);
  v113 = (id *)(v16 + 120);
  v114 = v16[128];
  if (*(unsigned __int8 *)(v15 + 128) == 255)
  {
    if (v114 == 255)
    {
      v120 = *v113;
      *(_BYTE *)(v15 + 128) = v16[128];
      *v112 = v120;
    }
    else
    {
      v118 = *v113;
      sub_27F80(*v113, v16[128]);
      *(_QWORD *)(v15 + 120) = v118;
      *(_BYTE *)(v15 + 128) = v114;
    }
  }
  else if (v114 == 255)
  {
    sub_108E0C(v15 + 120);
    v119 = v16[128];
    *v112 = *v113;
    *(_BYTE *)(v15 + 128) = v119;
  }
  else
  {
    v115 = *v113;
    sub_27F80(*v113, v16[128]);
    v116 = *(void **)(v15 + 120);
    *(_QWORD *)(v15 + 120) = v115;
    v117 = *(_BYTE *)(v15 + 128);
    *(_BYTE *)(v15 + 128) = v114;
    sub_27FA8(v116, v117);
  }
  *(_BYTE *)(v15 + 129) = v16[129];
  v121 = v17[11];
  v122 = v15 + v121;
  v123 = &v16[v121];
  v124 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 24))(v122, v123, v124);
  v125 = v17[12];
  v126 = (_QWORD *)(v15 + v125);
  v127 = &v16[v125];
  *v126 = *(_QWORD *)v127;
  v128 = *((_QWORD *)v127 + 1);
  v129 = v126[1];
  v126[1] = v128;
  swift_bridgeObjectRetain(v128);
  swift_bridgeObjectRelease(v129);
  *(_BYTE *)(v15 + v17[13]) = v16[v17[13]];
  *(_BYTE *)(v15 + v17[14]) = v16[v17[14]];
  *(_BYTE *)(v15 + v17[15]) = v16[v17[15]];
  v130 = v17[16];
  v131 = (_QWORD *)(v15 + v130);
  v132 = &v16[v130];
  *v131 = *(_QWORD *)v132;
  v133 = *((_QWORD *)v132 + 1);
  v134 = v131[1];
  v131[1] = v133;
  swift_bridgeObjectRetain(v133);
  swift_bridgeObjectRelease(v134);
  v18 = v298;
  a3 = v300;
LABEL_68:
  v135 = v13[9];
  v136 = (char *)a1 + v135;
  v137 = (unsigned __int8 *)a2 + v135;
  v138 = v19((uint64_t)a1 + v135, 1, v17);
  v139 = v19((uint64_t)v137, 1, v17);
  if (v138)
  {
    if (!v139)
    {
      v140 = v18;
      v301 = a3;
      *(_QWORD *)v136 = *(_QWORD *)v137;
      v141 = *((_QWORD *)v137 + 1);
      *((_QWORD *)v136 + 1) = v141;
      v142 = v137[32];
      swift_bridgeObjectRetain(v141);
      if (v142 == 255)
      {
        v156 = *((_OWORD *)v137 + 1);
        v136[32] = v137[32];
        *((_OWORD *)v136 + 1) = v156;
      }
      else
      {
        v143 = *((_QWORD *)v137 + 2);
        v144 = *((_QWORD *)v137 + 3);
        sub_108110(v143, v144, v142);
        *((_QWORD *)v136 + 2) = v143;
        *((_QWORD *)v136 + 3) = v144;
        v136[32] = v142;
      }
      *((_QWORD *)v136 + 5) = *((_QWORD *)v137 + 5);
      *((_QWORD *)v136 + 6) = *((_QWORD *)v137 + 6);
      v157 = (id *)(v137 + 56);
      v158 = v137[64];
      if (v158 == 255)
      {
        v160 = *v157;
        v136[64] = v137[64];
        *((_QWORD *)v136 + 7) = v160;
      }
      else
      {
        v159 = *v157;
        sub_27F80(*v157, v137[64]);
        *((_QWORD *)v136 + 7) = v159;
        v136[64] = v158;
      }
      v161 = (id *)(v137 + 72);
      v162 = v137[80];
      if (v162 == 255)
      {
        v164 = *v161;
        v136[80] = v137[80];
        *((_QWORD *)v136 + 9) = v164;
      }
      else
      {
        v163 = *v161;
        sub_27F80(*v161, v137[80]);
        *((_QWORD *)v136 + 9) = v163;
        v136[80] = v162;
      }
      v165 = (id *)(v137 + 88);
      v166 = v137[96];
      if (v166 == 255)
      {
        v168 = *v165;
        v136[96] = v137[96];
        *((_QWORD *)v136 + 11) = v168;
      }
      else
      {
        v167 = *v165;
        sub_27F80(*v165, v137[96]);
        *((_QWORD *)v136 + 11) = v167;
        v136[96] = v166;
      }
      v169 = (id *)(v137 + 104);
      v170 = v137[112];
      if (v170 == 255)
      {
        v172 = *v169;
        v136[112] = v137[112];
        *((_QWORD *)v136 + 13) = v172;
      }
      else
      {
        v171 = *v169;
        sub_27F80(*v169, v137[112]);
        *((_QWORD *)v136 + 13) = v171;
        v136[112] = v170;
      }
      v173 = (id *)(v137 + 120);
      v174 = v137[128];
      if (v174 == 255)
      {
        v176 = *v173;
        v136[128] = v137[128];
        *((_QWORD *)v136 + 15) = v176;
      }
      else
      {
        v175 = *v173;
        sub_27F80(*v173, v137[128]);
        *((_QWORD *)v136 + 15) = v175;
        v136[128] = v174;
      }
      v136[129] = v137[129];
      v177 = v17[11];
      v178 = &v136[v177];
      v179 = &v137[v177];
      v180 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v178, v179, v180);
      v181 = v17[12];
      v182 = &v136[v181];
      v183 = &v137[v181];
      *(_QWORD *)v182 = *(_QWORD *)v183;
      v184 = *((_QWORD *)v183 + 1);
      *((_QWORD *)v182 + 1) = v184;
      v136[v17[13]] = v137[v17[13]];
      v136[v17[14]] = v137[v17[14]];
      v136[v17[15]] = v137[v17[15]];
      v185 = v17[16];
      v186 = &v136[v185];
      v187 = &v137[v185];
      *(_QWORD *)v186 = *(_QWORD *)v187;
      v188 = *((_QWORD *)v187 + 1);
      *((_QWORD *)v186 + 1) = v188;
      v189 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v140 + 56);
      swift_bridgeObjectRetain(v184);
      v190 = swift_bridgeObjectRetain(v188);
      v189(v136, 0, 1, v17, v190);
LABEL_135:
      a3 = v301;
      goto LABEL_136;
    }
  }
  else
  {
    if (!v139)
    {
      v301 = a3;
      *(_QWORD *)v136 = *(_QWORD *)v137;
      v146 = *((_QWORD *)v137 + 1);
      v147 = *((_QWORD *)v136 + 1);
      *((_QWORD *)v136 + 1) = v146;
      swift_bridgeObjectRetain(v146);
      swift_bridgeObjectRelease(v147);
      v148 = (__int128 *)(v136 + 16);
      v149 = (__int128 *)(v137 + 16);
      v150 = v137[32];
      if (v136[32] == 255)
      {
        if (v150 == 255)
        {
          v194 = *v149;
          v136[32] = v137[32];
          *v148 = v194;
        }
        else
        {
          v191 = *((_QWORD *)v137 + 2);
          v192 = *((_QWORD *)v137 + 3);
          sub_108110(v191, v192, v137[32]);
          *((_QWORD *)v136 + 2) = v191;
          *((_QWORD *)v136 + 3) = v192;
          v136[32] = v150;
        }
      }
      else if (v150 == 255)
      {
        sub_108DD8((uint64_t)(v136 + 16));
        v193 = v137[32];
        *v148 = *v149;
        v136[32] = v193;
      }
      else
      {
        v151 = *((_QWORD *)v137 + 2);
        v152 = *((_QWORD *)v137 + 3);
        sub_108110(v151, v152, v137[32]);
        v153 = *((_QWORD *)v136 + 2);
        v154 = *((_QWORD *)v136 + 3);
        *((_QWORD *)v136 + 2) = v151;
        *((_QWORD *)v136 + 3) = v152;
        v155 = v136[32];
        v136[32] = v150;
        sub_108270(v153, v154, v155);
      }
      *((_QWORD *)v136 + 5) = *((_QWORD *)v137 + 5);
      *((_QWORD *)v136 + 6) = *((_QWORD *)v137 + 6);
      v195 = (id *)(v136 + 56);
      v196 = (id *)(v137 + 56);
      v197 = v137[64];
      if (v136[64] == 255)
      {
        if (v197 == 255)
        {
          v203 = *v196;
          v136[64] = v137[64];
          *v195 = v203;
        }
        else
        {
          v201 = *v196;
          sub_27F80(*v196, v137[64]);
          *((_QWORD *)v136 + 7) = v201;
          v136[64] = v197;
        }
      }
      else if (v197 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 56));
        v202 = v137[64];
        *v195 = *v196;
        v136[64] = v202;
      }
      else
      {
        v198 = *v196;
        sub_27F80(*v196, v137[64]);
        v199 = (void *)*((_QWORD *)v136 + 7);
        *((_QWORD *)v136 + 7) = v198;
        v200 = v136[64];
        v136[64] = v197;
        sub_27FA8(v199, v200);
      }
      v204 = (id *)(v136 + 72);
      v205 = (id *)(v137 + 72);
      v206 = v137[80];
      if (v136[80] == 255)
      {
        if (v206 == 255)
        {
          v212 = *v205;
          v136[80] = v137[80];
          *v204 = v212;
        }
        else
        {
          v210 = *v205;
          sub_27F80(*v205, v137[80]);
          *((_QWORD *)v136 + 9) = v210;
          v136[80] = v206;
        }
      }
      else if (v206 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 72));
        v211 = v137[80];
        *v204 = *v205;
        v136[80] = v211;
      }
      else
      {
        v207 = *v205;
        sub_27F80(*v205, v137[80]);
        v208 = (void *)*((_QWORD *)v136 + 9);
        *((_QWORD *)v136 + 9) = v207;
        v209 = v136[80];
        v136[80] = v206;
        sub_27FA8(v208, v209);
      }
      v213 = (id *)(v136 + 88);
      v214 = (id *)(v137 + 88);
      v215 = v137[96];
      if (v136[96] == 255)
      {
        if (v215 == 255)
        {
          v221 = *v214;
          v136[96] = v137[96];
          *v213 = v221;
        }
        else
        {
          v219 = *v214;
          sub_27F80(*v214, v137[96]);
          *((_QWORD *)v136 + 11) = v219;
          v136[96] = v215;
        }
      }
      else if (v215 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 88));
        v220 = v137[96];
        *v213 = *v214;
        v136[96] = v220;
      }
      else
      {
        v216 = *v214;
        sub_27F80(*v214, v137[96]);
        v217 = (void *)*((_QWORD *)v136 + 11);
        *((_QWORD *)v136 + 11) = v216;
        v218 = v136[96];
        v136[96] = v215;
        sub_27FA8(v217, v218);
      }
      v222 = (id *)(v136 + 104);
      v223 = (id *)(v137 + 104);
      v224 = v137[112];
      if (v136[112] == 255)
      {
        if (v224 == 255)
        {
          v230 = *v223;
          v136[112] = v137[112];
          *v222 = v230;
        }
        else
        {
          v228 = *v223;
          sub_27F80(*v223, v137[112]);
          *((_QWORD *)v136 + 13) = v228;
          v136[112] = v224;
        }
      }
      else if (v224 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 104));
        v229 = v137[112];
        *v222 = *v223;
        v136[112] = v229;
      }
      else
      {
        v225 = *v223;
        sub_27F80(*v223, v137[112]);
        v226 = (void *)*((_QWORD *)v136 + 13);
        *((_QWORD *)v136 + 13) = v225;
        v227 = v136[112];
        v136[112] = v224;
        sub_27FA8(v226, v227);
      }
      v231 = (id *)(v136 + 120);
      v232 = (id *)(v137 + 120);
      v233 = v137[128];
      if (v136[128] == 255)
      {
        if (v233 == 255)
        {
          v239 = *v232;
          v136[128] = v137[128];
          *v231 = v239;
        }
        else
        {
          v237 = *v232;
          sub_27F80(*v232, v137[128]);
          *((_QWORD *)v136 + 15) = v237;
          v136[128] = v233;
        }
      }
      else if (v233 == 255)
      {
        sub_108E0C((uint64_t)(v136 + 120));
        v238 = v137[128];
        *v231 = *v232;
        v136[128] = v238;
      }
      else
      {
        v234 = *v232;
        sub_27F80(*v232, v137[128]);
        v235 = (void *)*((_QWORD *)v136 + 15);
        *((_QWORD *)v136 + 15) = v234;
        v236 = v136[128];
        v136[128] = v233;
        sub_27FA8(v235, v236);
      }
      v136[129] = v137[129];
      v240 = v17[11];
      v241 = &v136[v240];
      v242 = &v137[v240];
      v243 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v243 - 8) + 24))(v241, v242, v243);
      v244 = v17[12];
      v245 = &v136[v244];
      v246 = &v137[v244];
      *(_QWORD *)v245 = *(_QWORD *)v246;
      v247 = *((_QWORD *)v246 + 1);
      v248 = *((_QWORD *)v245 + 1);
      *((_QWORD *)v245 + 1) = v247;
      swift_bridgeObjectRetain(v247);
      swift_bridgeObjectRelease(v248);
      v136[v17[13]] = v137[v17[13]];
      v136[v17[14]] = v137[v17[14]];
      v136[v17[15]] = v137[v17[15]];
      v249 = v17[16];
      v250 = &v136[v249];
      v251 = &v137[v249];
      *(_QWORD *)v250 = *(_QWORD *)v251;
      v252 = *((_QWORD *)v251 + 1);
      v253 = *((_QWORD *)v250 + 1);
      *((_QWORD *)v250 + 1) = v252;
      swift_bridgeObjectRetain(v252);
      swift_bridgeObjectRelease(v253);
      goto LABEL_135;
    }
    sub_FA4C((uint64_t)v136, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
LABEL_136:
  v254 = v13[10];
  v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  v257 = *(_DWORD *)v256;
  v255[4] = v256[4];
  *(_DWORD *)v255 = v257;
  v258 = v13[11];
  v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  v261 = *(_QWORD *)v260;
  v259[8] = v260[8];
  *(_QWORD *)v259 = v261;
  v262 = v13[12];
  v263 = (_QWORD *)((char *)a1 + v262);
  v264 = (_QWORD *)((char *)a2 + v262);
  *v263 = *v264;
  v265 = v264[1];
  v266 = v263[1];
  v263[1] = v265;
  swift_bridgeObjectRetain(v265);
  swift_bridgeObjectRelease(v266);
  *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
  v267 = v13[14];
  v268 = (char *)a1 + v267;
  v269 = (char *)a2 + v267;
  v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v270 - 8) + 24))(v268, v269, v270);
  v271 = v13[15];
  v272 = (char *)a1 + v271;
  v273 = (char *)a2 + v271;
  v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v275 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v274 - 8) + 24);
  v275(v272, v273, v274);
  v275((char *)a1 + v13[16], (char *)a2 + v13[16], v274);
  v275((char *)a1 + v13[17], (char *)a2 + v13[17], v274);
  v276 = v13[18];
  v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  v279 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v279 - 8) + 24))(v277, v278, v279);
  v280 = a3[5];
  v281 = *(_QWORD *)((char *)a1 + v280);
  v282 = *(_QWORD *)((char *)a2 + v280);
  *(_QWORD *)((char *)a1 + v280) = v282;
  swift_retain(v282);
  swift_release(v281);
  v283 = a3[6];
  v284 = *(_QWORD *)((char *)a1 + v283);
  v285 = *(_QWORD *)((char *)a2 + v283);
  *(_QWORD *)((char *)a1 + v283) = v285;
  swift_retain(v285);
  swift_release(v284);
  v286 = a3[7];
  v287 = (_QWORD *)((char *)a1 + v286);
  v288 = (_QWORD *)((char *)a2 + v286);
  *v287 = *v288;
  v289 = v288[1];
  v290 = v287[1];
  v287[1] = v289;
  swift_retain(v289);
  swift_release(v290);
  v291 = a3[8];
  v292 = (char *)a1 + v291;
  v293 = (char *)a2 + v291;
  v294 = *(_QWORD *)v293;
  LOBYTE(v293) = v293[8];
  v295 = *(_QWORD *)v292;
  *(_QWORD *)v292 = v294;
  v292[8] = (char)v293;
  swift_retain(v294);
  swift_release(v295);
  return a1;
}

uint64_t sub_254C40(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_OWORD *, uint64_t, int *);
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(_OWORD *, _QWORD, uint64_t, int *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v57;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (int *)type metadata accessor for ShowHero(0);
  v7 = v6[8];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v15 = v10[11];
    v57 = a3;
    v16 = v11;
    v17 = (char *)v8 + v15;
    v18 = (char *)v9 + v15;
    v19 = type metadata accessor for ArtworkCrop(0);
    v20 = v17;
    v11 = v16;
    a3 = v57;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v20, v18, v19);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v21 = v6[9];
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  if (v12((_OWORD *)(a2 + v21), 1, v10))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v23[1];
    *v22 = *v23;
    v22[1] = v25;
    *((_BYTE *)v22 + 32) = *((_BYTE *)v23 + 32);
    *(_OWORD *)((char *)v22 + 40) = *(_OWORD *)((char *)v23 + 40);
    *((_QWORD *)v22 + 7) = *((_QWORD *)v23 + 7);
    *((_BYTE *)v22 + 64) = *((_BYTE *)v23 + 64);
    *(_OWORD *)((char *)v22 + 113) = *(_OWORD *)((char *)v23 + 113);
    *(_OWORD *)((char *)v22 + 104) = *(_OWORD *)((char *)v23 + 104);
    *(_OWORD *)((char *)v22 + 88) = *(_OWORD *)((char *)v23 + 88);
    *(_OWORD *)((char *)v22 + 72) = *(_OWORD *)((char *)v23 + 72);
    *((_BYTE *)v22 + 129) = *((_BYTE *)v23 + 129);
    v26 = v10[11];
    v27 = a3;
    v28 = v11;
    v29 = (char *)v22 + v26;
    v30 = (char *)v23 + v26;
    v31 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    *(_OWORD *)((char *)v22 + v10[12]) = *(_OWORD *)((char *)v23 + v10[12]);
    *((_BYTE *)v22 + v10[13]) = *((_BYTE *)v23 + v10[13]);
    *((_BYTE *)v22 + v10[14]) = *((_BYTE *)v23 + v10[14]);
    *((_BYTE *)v22 + v10[15]) = *((_BYTE *)v23 + v10[15]);
    *(_OWORD *)((char *)v22 + v10[16]) = *(_OWORD *)((char *)v23 + v10[16]);
    v32 = *(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v28 + 56);
    a3 = v27;
    v32(v22, 0, 1, v10);
  }
  v33 = v6[10];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_DWORD *)v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = *(_BYTE *)(v35 + 4);
  v36 = v6[11];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  v39 = v6[14];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = v6[15];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32);
  v47(v44, v45, v46);
  v47(a1 + v6[16], a2 + v6[16], v46);
  v47(a1 + v6[17], a2 + v6[17], v46);
  v48 = v6[18];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
  v52 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);
  v53 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v54 = a1 + v53;
  v55 = a2 + v53;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
  return a1;
}

uint64_t sub_255058(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, int *);
  int v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD *v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  int v99;
  int v100;
  void *v101;
  _QWORD *v102;
  int v103;
  int v104;
  void *v105;
  _QWORD *v106;
  int v107;
  int v108;
  void *v109;
  _QWORD *v110;
  int v111;
  int v112;
  void *v113;
  _QWORD *v114;
  int v115;
  int v116;
  void *v117;
  _QWORD *v118;
  int v119;
  int v120;
  void *v121;
  _QWORD *v122;
  int v123;
  int v124;
  void *v125;
  _QWORD *v126;
  int v127;
  int v128;
  void *v129;
  _QWORD *v130;
  int v131;
  int v132;
  void *v133;
  _QWORD *v134;
  int v135;
  int v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int *v170;
  uint64_t v171;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = (int *)type metadata accessor for ShowHero(0);
  v11 = v10[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = (int *)type metadata accessor for ArtworkModel(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      v19 = *(_OWORD *)(v13 + 16);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *(_OWORD *)(v12 + 16) = v19;
      *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
      *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
      *(_OWORD *)(v12 + 113) = *(_OWORD *)(v13 + 113);
      *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
      *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
      *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
      *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
      v20 = v14[11];
      v21 = v12 + v20;
      v170 = v10;
      v22 = v16;
      v23 = a3;
      v24 = v15;
      v25 = v13 + v20;
      v26 = type metadata accessor for ArtworkCrop(0);
      v27 = v25;
      v15 = v24;
      a3 = v23;
      v16 = v22;
      v10 = v170;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v21, v27, v26);
      *(_OWORD *)(v12 + v14[12]) = *(_OWORD *)(v13 + v14[12]);
      *(_BYTE *)(v12 + v14[13]) = *(_BYTE *)(v13 + v14[13]);
      *(_BYTE *)(v12 + v14[14]) = *(_BYTE *)(v13 + v14[14]);
      *(_BYTE *)(v12 + v14[15]) = *(_BYTE *)(v13 + v14[15]);
      *(_OWORD *)(v12 + v14[16]) = *(_OWORD *)(v13 + v14[16]);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_FA4C(v12, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v12, (const void *)v13, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  v171 = v15;
  v84 = *(_QWORD *)(v13 + 8);
  v85 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v84;
  swift_bridgeObjectRelease(v85);
  v86 = (_OWORD *)(v13 + 16);
  v87 = *(unsigned __int8 *)(v12 + 32);
  if (v87 != 255)
  {
    v88 = *(unsigned __int8 *)(v13 + 32);
    if (v88 != 255)
    {
      v89 = *(_QWORD *)(v12 + 16);
      v90 = *(_QWORD *)(v12 + 24);
      *(_OWORD *)(v12 + 16) = *v86;
      *(_BYTE *)(v12 + 32) = v88;
      sub_108270(v89, v90, v87);
      goto LABEL_22;
    }
    sub_108DD8(v12 + 16);
  }
  *(_OWORD *)(v12 + 16) = *v86;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
LABEL_22:
  *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
  v98 = (_QWORD *)(v13 + 56);
  v99 = *(unsigned __int8 *)(v12 + 64);
  if (v99 != 255)
  {
    v100 = *(unsigned __int8 *)(v13 + 64);
    if (v100 != 255)
    {
      v101 = *(void **)(v12 + 56);
      *(_QWORD *)(v12 + 56) = *v98;
      *(_BYTE *)(v12 + 64) = v100;
      sub_27FA8(v101, v99);
      goto LABEL_32;
    }
    sub_108E0C(v12 + 56);
  }
  *(_QWORD *)(v12 + 56) = *v98;
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
LABEL_32:
  v106 = (_QWORD *)(v13 + 72);
  v107 = *(unsigned __int8 *)(v12 + 80);
  if (v107 != 255)
  {
    v108 = *(unsigned __int8 *)(v13 + 80);
    if (v108 != 255)
    {
      v109 = *(void **)(v12 + 72);
      *(_QWORD *)(v12 + 72) = *v106;
      *(_BYTE *)(v12 + 80) = v108;
      sub_27FA8(v109, v107);
      goto LABEL_42;
    }
    sub_108E0C(v12 + 72);
  }
  *(_QWORD *)(v12 + 72) = *v106;
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
LABEL_42:
  v114 = (_QWORD *)(v13 + 88);
  v115 = *(unsigned __int8 *)(v12 + 96);
  if (v115 != 255)
  {
    v116 = *(unsigned __int8 *)(v13 + 96);
    if (v116 != 255)
    {
      v117 = *(void **)(v12 + 88);
      *(_QWORD *)(v12 + 88) = *v114;
      *(_BYTE *)(v12 + 96) = v116;
      sub_27FA8(v117, v115);
      goto LABEL_52;
    }
    sub_108E0C(v12 + 88);
  }
  *(_QWORD *)(v12 + 88) = *v114;
  *(_BYTE *)(v12 + 96) = *(_BYTE *)(v13 + 96);
LABEL_52:
  v122 = (_QWORD *)(v13 + 104);
  v123 = *(unsigned __int8 *)(v12 + 112);
  if (v123 != 255)
  {
    v124 = *(unsigned __int8 *)(v13 + 112);
    if (v124 != 255)
    {
      v125 = *(void **)(v12 + 104);
      *(_QWORD *)(v12 + 104) = *v122;
      *(_BYTE *)(v12 + 112) = v124;
      sub_27FA8(v125, v123);
      goto LABEL_62;
    }
    sub_108E0C(v12 + 104);
  }
  *(_QWORD *)(v12 + 104) = *v122;
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
LABEL_62:
  v130 = (_QWORD *)(v13 + 120);
  v131 = *(unsigned __int8 *)(v12 + 128);
  if (v131 == 255)
  {
LABEL_71:
    *(_QWORD *)(v12 + 120) = *v130;
    *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
    goto LABEL_72;
  }
  v132 = *(unsigned __int8 *)(v13 + 128);
  if (v132 == 255)
  {
    sub_108E0C(v12 + 120);
    goto LABEL_71;
  }
  v133 = *(void **)(v12 + 120);
  *(_QWORD *)(v12 + 120) = *v130;
  *(_BYTE *)(v12 + 128) = v132;
  sub_27FA8(v133, v131);
LABEL_72:
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  v138 = v14[11];
  v139 = v12 + v138;
  v140 = v13 + v138;
  v141 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 40))(v139, v140, v141);
  v142 = v14[12];
  v143 = (_QWORD *)(v12 + v142);
  v144 = (uint64_t *)(v13 + v142);
  v146 = *v144;
  v145 = v144[1];
  v147 = v143[1];
  *v143 = v146;
  v143[1] = v145;
  swift_bridgeObjectRelease(v147);
  *(_BYTE *)(v12 + v14[13]) = *(_BYTE *)(v13 + v14[13]);
  *(_BYTE *)(v12 + v14[14]) = *(_BYTE *)(v13 + v14[14]);
  *(_BYTE *)(v12 + v14[15]) = *(_BYTE *)(v13 + v14[15]);
  v148 = v14[16];
  v149 = (_QWORD *)(v12 + v148);
  v150 = (uint64_t *)(v13 + v148);
  v152 = *v150;
  v151 = v150[1];
  v153 = v149[1];
  *v149 = v152;
  v149[1] = v151;
  swift_bridgeObjectRelease(v153);
  v15 = v171;
LABEL_7:
  v29 = v10[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = v16(a1 + v29, 1, v14);
  v33 = v16(v31, 1, v14);
  if (!v32)
  {
    if (v33)
    {
      sub_FA4C(v30, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      goto LABEL_12;
    }
    v91 = *(_QWORD *)(v31 + 8);
    v92 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *(_QWORD *)(v30 + 8) = v91;
    swift_bridgeObjectRelease(v92);
    v93 = (_OWORD *)(v31 + 16);
    v94 = *(unsigned __int8 *)(v30 + 32);
    if (v94 != 255)
    {
      v95 = *(unsigned __int8 *)(v31 + 32);
      if (v95 != 255)
      {
        v96 = *(_QWORD *)(v30 + 16);
        v97 = *(_QWORD *)(v30 + 24);
        *(_OWORD *)(v30 + 16) = *v93;
        *(_BYTE *)(v30 + 32) = v95;
        sub_108270(v96, v97, v94);
        goto LABEL_27;
      }
      sub_108DD8(v30 + 16);
    }
    *(_OWORD *)(v30 + 16) = *v93;
    *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
LABEL_27:
    *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
    v102 = (_QWORD *)(v31 + 56);
    v103 = *(unsigned __int8 *)(v30 + 64);
    if (v103 != 255)
    {
      v104 = *(unsigned __int8 *)(v31 + 64);
      if (v104 != 255)
      {
        v105 = *(void **)(v30 + 56);
        *(_QWORD *)(v30 + 56) = *v102;
        *(_BYTE *)(v30 + 64) = v104;
        sub_27FA8(v105, v103);
        goto LABEL_37;
      }
      sub_108E0C(v30 + 56);
    }
    *(_QWORD *)(v30 + 56) = *v102;
    *(_BYTE *)(v30 + 64) = *(_BYTE *)(v31 + 64);
LABEL_37:
    v110 = (_QWORD *)(v31 + 72);
    v111 = *(unsigned __int8 *)(v30 + 80);
    if (v111 != 255)
    {
      v112 = *(unsigned __int8 *)(v31 + 80);
      if (v112 != 255)
      {
        v113 = *(void **)(v30 + 72);
        *(_QWORD *)(v30 + 72) = *v110;
        *(_BYTE *)(v30 + 80) = v112;
        sub_27FA8(v113, v111);
        goto LABEL_47;
      }
      sub_108E0C(v30 + 72);
    }
    *(_QWORD *)(v30 + 72) = *v110;
    *(_BYTE *)(v30 + 80) = *(_BYTE *)(v31 + 80);
LABEL_47:
    v118 = (_QWORD *)(v31 + 88);
    v119 = *(unsigned __int8 *)(v30 + 96);
    if (v119 != 255)
    {
      v120 = *(unsigned __int8 *)(v31 + 96);
      if (v120 != 255)
      {
        v121 = *(void **)(v30 + 88);
        *(_QWORD *)(v30 + 88) = *v118;
        *(_BYTE *)(v30 + 96) = v120;
        sub_27FA8(v121, v119);
        goto LABEL_57;
      }
      sub_108E0C(v30 + 88);
    }
    *(_QWORD *)(v30 + 88) = *v118;
    *(_BYTE *)(v30 + 96) = *(_BYTE *)(v31 + 96);
LABEL_57:
    v126 = (_QWORD *)(v31 + 104);
    v127 = *(unsigned __int8 *)(v30 + 112);
    if (v127 != 255)
    {
      v128 = *(unsigned __int8 *)(v31 + 112);
      if (v128 != 255)
      {
        v129 = *(void **)(v30 + 104);
        *(_QWORD *)(v30 + 104) = *v126;
        *(_BYTE *)(v30 + 112) = v128;
        sub_27FA8(v129, v127);
        goto LABEL_67;
      }
      sub_108E0C(v30 + 104);
    }
    *(_QWORD *)(v30 + 104) = *v126;
    *(_BYTE *)(v30 + 112) = *(_BYTE *)(v31 + 112);
LABEL_67:
    v134 = (_QWORD *)(v31 + 120);
    v135 = *(unsigned __int8 *)(v30 + 128);
    if (v135 != 255)
    {
      v136 = *(unsigned __int8 *)(v31 + 128);
      if (v136 != 255)
      {
        v137 = *(void **)(v30 + 120);
        *(_QWORD *)(v30 + 120) = *v134;
        *(_BYTE *)(v30 + 128) = v136;
        sub_27FA8(v137, v135);
LABEL_75:
        *(_BYTE *)(v30 + 129) = *(_BYTE *)(v31 + 129);
        v154 = v14[11];
        v155 = v30 + v154;
        v156 = v31 + v154;
        v157 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 40))(v155, v156, v157);
        v158 = v14[12];
        v159 = (_QWORD *)(v30 + v158);
        v160 = (uint64_t *)(v31 + v158);
        v162 = *v160;
        v161 = v160[1];
        v163 = v159[1];
        *v159 = v162;
        v159[1] = v161;
        swift_bridgeObjectRelease(v163);
        *(_BYTE *)(v30 + v14[13]) = *(_BYTE *)(v31 + v14[13]);
        *(_BYTE *)(v30 + v14[14]) = *(_BYTE *)(v31 + v14[14]);
        *(_BYTE *)(v30 + v14[15]) = *(_BYTE *)(v31 + v14[15]);
        v164 = v14[16];
        v165 = (_QWORD *)(v30 + v164);
        v166 = (uint64_t *)(v31 + v164);
        v168 = *v166;
        v167 = v166[1];
        v169 = v165[1];
        *v165 = v168;
        v165[1] = v167;
        swift_bridgeObjectRelease(v169);
        goto LABEL_13;
      }
      sub_108E0C(v30 + 120);
    }
    *(_QWORD *)(v30 + 120) = *v134;
    *(_BYTE *)(v30 + 128) = *(_BYTE *)(v31 + 128);
    goto LABEL_75;
  }
  if (v33)
  {
LABEL_12:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v30, (const void *)v31, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  v34 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v34;
  *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
  *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 56) = *(_QWORD *)(v31 + 56);
  *(_BYTE *)(v30 + 64) = *(_BYTE *)(v31 + 64);
  *(_OWORD *)(v30 + 113) = *(_OWORD *)(v31 + 113);
  *(_OWORD *)(v30 + 104) = *(_OWORD *)(v31 + 104);
  *(_OWORD *)(v30 + 88) = *(_OWORD *)(v31 + 88);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  *(_BYTE *)(v30 + 129) = *(_BYTE *)(v31 + 129);
  v35 = v14[11];
  v36 = v30 + v35;
  v37 = a3;
  v38 = v15;
  v39 = v31 + v35;
  v40 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v36, v39, v40);
  *(_OWORD *)(v30 + v14[12]) = *(_OWORD *)(v31 + v14[12]);
  *(_BYTE *)(v30 + v14[13]) = *(_BYTE *)(v31 + v14[13]);
  *(_BYTE *)(v30 + v14[14]) = *(_BYTE *)(v31 + v14[14]);
  *(_BYTE *)(v30 + v14[15]) = *(_BYTE *)(v31 + v14[15]);
  *(_OWORD *)(v30 + v14[16]) = *(_OWORD *)(v31 + v14[16]);
  v41 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v38 + 56);
  a3 = v37;
  v41(v30, 0, 1, v14);
LABEL_13:
  v43 = v10[10];
  v44 = a1 + v43;
  v45 = a2 + v43;
  *(_DWORD *)v44 = *(_DWORD *)v45;
  *(_BYTE *)(v44 + 4) = *(_BYTE *)(v45 + 4);
  v46 = v10[11];
  v47 = a1 + v46;
  v48 = a2 + v46;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v49 = v10[12];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  v54 = v50[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease(v54);
  *(_BYTE *)(a1 + v10[13]) = *(_BYTE *)(a2 + v10[13]);
  v55 = v10[14];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = v10[15];
  v60 = a1 + v59;
  v61 = a2 + v59;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40);
  v63(v60, v61, v62);
  v63(a1 + v10[16], a2 + v10[16], v62);
  v63(a1 + v10[17], a2 + v10[17], v62);
  v64 = v10[18];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 40))(v65, v66, v67);
  v68 = a3[5];
  v69 = *(_QWORD *)(a1 + v68);
  *(_QWORD *)(a1 + v68) = *(_QWORD *)(a2 + v68);
  swift_release(v69);
  v70 = a3[6];
  v71 = *(_QWORD *)(a1 + v70);
  *(_QWORD *)(a1 + v70) = *(_QWORD *)(a2 + v70);
  swift_release(v71);
  v72 = a3[7];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (uint64_t *)(a2 + v72);
  v76 = *v74;
  v75 = v74[1];
  v77 = v73[1];
  *v73 = v76;
  v73[1] = v75;
  swift_release(v77);
  v78 = a3[8];
  v79 = (uint64_t *)(a1 + v78);
  v80 = (uint64_t *)(a2 + v78);
  v81 = *v80;
  LOBYTE(v80) = *((_BYTE *)v80 + 8);
  v82 = *v79;
  *v79 = v81;
  *((_BYTE *)v79 + 8) = (_BYTE)v80;
  swift_release(v82);
  return a1;
}

uint64_t sub_255A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_255A5C);
}

uint64_t sub_255A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ShowHero(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_255ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_255AE8);
}

uint64_t sub_255AE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ShowHero(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_255B64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for ShowHero(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    v4[3] = &unk_302300;
    v4[4] = "\t";
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

double destroy for ShowHeroTextArea(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 56));
  sub_A3A4(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 88)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for ShowHeroTextArea(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  char v15;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v12 = *(_BYTE *)(a2 + 80);
  v13 = v4;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_retain(v9);
  sub_A304(v10, v11, v12);
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v14;
  *(_BYTE *)(a1 + 96) = v15;
  swift_retain(v14);
  return a1;
}

uint64_t assignWithCopy for ShowHeroTextArea(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v11;
  swift_retain(v11);
  swift_release(v12);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v15 = *(_BYTE *)(a2 + 80);
  sub_A304(v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 72);
  v18 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_BYTE *)(a1 + 80) = v15;
  sub_A3A4(v16, v17, v18);
  v19 = *(_QWORD *)(a2 + 88);
  v20 = *(_BYTE *)(a2 + 96);
  v21 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v19;
  *(_BYTE *)(a1 + 96) = v20;
  swift_retain(v19);
  swift_release(v21);
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ShowHeroTextArea(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_release(v10);
  v11 = *(_BYTE *)(a2 + 80);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_BYTE *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = v11;
  sub_A3A4(v12, v13, v14);
  v15 = *(_BYTE *)(a2 + 96);
  v16 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = v15;
  swift_release(v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowHeroTextArea(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 97))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShowHeroTextArea(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowHeroTextArea()
{
  return &type metadata for ShowHeroTextArea;
}

uint64_t sub_255F68()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE2C0);
  v1[1] = sub_10EDC(&qword_3DE2D0, &qword_3DE2C0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_255FCC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_333304, 1);
}

uint64_t sub_255FDC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_3332DC, 1);
}

unint64_t sub_255FF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE3F0;
  if (!qword_3DE3F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA6C8);
    sub_10EDC(&qword_3DE3F8, &qword_3DA6C0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE3F0);
  }
  return result;
}

uint64_t sub_256078()
{
  return EnvironmentValues.textCase.getter();
}

unint64_t sub_25609C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE480;
  if (!qword_3DE480)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE460);
    sub_256120();
    sub_10EDC(&qword_3DE498, &qword_3DE4A0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE480);
  }
  return result;
}

unint64_t sub_256120()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE488;
  if (!qword_3DE488)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE458);
    sub_89A0(&qword_3DE490, type metadata accessor for PlayButtonWrapper, (uint64_t)&unk_306388);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE488);
  }
  return result;
}

unint64_t sub_2561A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE4A8;
  if (!qword_3DE4A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE478);
    sub_10EDC(&qword_3DE498, &qword_3DE4A0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE4A8);
  }
  return result;
}

void sub_256228()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v0 = type metadata accessor for ShowOffer(0);
  v1 = __chkstk_darwin(v0);
  v2 = (char *)&loc_25628C + *((int *)qword_2567A0 + EpisodeOffer.episodeType.getter(v1));
  __asm { BR              X10 }
}

uint64_t sub_25629C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  __n128 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  const char *v22;
  unint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  id v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  void *object;
  uint64_t v33;
  uint64_t v34;
  uint64_t countAndFlagsBits;
  id v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;

  v3 = ((uint64_t (*)(void))EpisodeOffer.showOffer.getter)();
  v4 = ((uint64_t (*)(uint64_t))ShowOffer.showType.getter)(v3) & 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  v5 = ((uint64_t (*)(uint64_t))ShowType.rawValue.getter)(v4);
  v7 = v6;
  v8 = ((uint64_t (*)(_QWORD))ShowType.rawValue.getter)(0);
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n(v7, 2);
    goto LABEL_14;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRelease(v7);
  v13 = swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
LABEL_14:
    v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v21 = 0xD000000000000022;
    v46 = 0xE000000000000000;
    v22 = "PLAY_ACTION_LATEST_EPISODE_SHORTER";
    goto LABEL_15;
  }
  v14 = ((uint64_t (*)(__n128))EpisodeOffer.seasonNumber.getter)(v13);
  if ((v15 & 1) != 0 || (v16 = v14, v14 < 1))
  {
    v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v46 = 0xE000000000000000;
    v23 = 0x8000000000316B60;
    v21 = 0xD000000000000010;
    goto LABEL_16;
  }
  v17 = ((uint64_t (*)(void))EpisodeOffer.episodeNumber.getter)();
  if ((v18 & 1) != 0 || (v19 = v17, v17 < 1))
  {
    v28 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v29._countAndFlagsBits = 0xD000000000000014;
    v47._object = (void *)0xE000000000000000;
    v29._object = (void *)0x8000000000316B80;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v47._countAndFlagsBits = 0;
    v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v47);
    object = v31._object;

    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
    v34 = swift_allocObject(v33, 72, 7);
    *(_OWORD *)(v34 + 16) = xmmword_2F03C0;
    *(_QWORD *)(v34 + 56) = &type metadata for Int64;
    *(_QWORD *)(v34 + 64) = &protocol witness table for Int64;
    *(_QWORD *)(v34 + 32) = v16;
    countAndFlagsBits = v31._countAndFlagsBits;
LABEL_20:
    v26 = String.init(format:_:)(countAndFlagsBits, object, v34);
    swift_bridgeObjectRelease(object);
    return v26;
  }
  if (v16 != 1)
  {
    v36 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v37._countAndFlagsBits = 0xD000000000000017;
    v48._object = (void *)0xE000000000000000;
    v37._object = (void *)0x800000000030AF90;
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    v48._countAndFlagsBits = 0;
    v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v48);

    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
    v41 = swift_allocObject(v40, 112, 7);
    *(_OWORD *)(v41 + 16) = xmmword_2EFA20;
    *(_QWORD *)(v41 + 56) = &type metadata for Int64;
    *(_QWORD *)(v41 + 64) = &protocol witness table for Int64;
    *(_QWORD *)(v41 + 32) = v16;
    *(_QWORD *)(v41 + 96) = &type metadata for Int64;
    *(_QWORD *)(v41 + 104) = &protocol witness table for Int64;
    *(_QWORD *)(v41 + 72) = v19;
    v26 = String.init(format:_:)(v39._countAndFlagsBits, v39._object, v41);
    swift_bridgeObjectRelease(v39._object);
    return v26;
  }
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v19 != 1)
  {
    v42._countAndFlagsBits = 0xD000000000000015;
    v49._object = (void *)0xE000000000000000;
    v42._object = (void *)0x8000000000316BA0;
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    v49._countAndFlagsBits = 0;
    v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v20, v43, v49);
    object = v44._object;

    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
    v34 = swift_allocObject(v45, 72, 7);
    *(_OWORD *)(v34 + 16) = xmmword_2F03C0;
    *(_QWORD *)(v34 + 56) = &type metadata for Int64;
    *(_QWORD *)(v34 + 64) = &protocol witness table for Int64;
    *(_QWORD *)(v34 + 32) = v19;
    countAndFlagsBits = v44._countAndFlagsBits;
    goto LABEL_20;
  }
  v21 = 0xD000000000000019;
  v46 = 0xE000000000000000;
  v22 = "PLAY_ACTION_FIRST_EPISODE";
LABEL_15:
  v23 = (unint64_t)(v22 - 32) | 0x8000000000000000;
LABEL_16:
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v25 = 0;
  v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v21, (Swift::String_optional)0, (NSBundle)v20, v24, *(Swift::String *)(&v46 - 1))._countAndFlagsBits;

  return v26;
}

uint64_t type metadata accessor for ShowHeroContextMenuButton(uint64_t a1)
{
  return sub_AE00(a1, qword_3DE560, (uint64_t)&nominal type descriptor for ShowHeroContextMenuButton);
}

uint64_t type metadata accessor for ShowHeroFollowButton(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3DE600, (uint64_t)&nominal type descriptor for ShowHeroFollowButton);
}

unint64_t sub_2567D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE4E0;
  if (!qword_3DE4E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE4D0);
    sub_89A0(&qword_3DE4E8, type metadata accessor for ShowHeroFollowButton, (uint64_t)&unk_302538);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE4E0);
  }
  return result;
}

unint64_t sub_25685C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE4F0;
  if (!qword_3DE4F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE4C0);
    sub_89A0(&qword_3DE4F8, type metadata accessor for ShowHeroContextMenuButton, (uint64_t)&unk_3024E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE4F0);
  }
  return result;
}

uint64_t sub_2568F0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *v16;
  unsigned int (*v17)(_QWORD, _QWORD, _QWORD);
  id v18;
  unsigned int (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id *v41;
  int v42;
  unsigned int (*v43)(_QWORD, _QWORD, _QWORD);
  id v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v57)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  id *v67;
  int v68;
  id v69;
  id *v70;
  int v71;
  id v72;
  id *v73;
  int v74;
  id v75;
  id *v76;
  int v77;
  id v78;
  id *v79;
  int v80;
  id v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  void (*v94)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v23 = *a2;
    *(_QWORD *)a1 = *a2;
    v24 = v23 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v23);
  }
  else
  {
    v5 = *a2;
    v6 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = a2[3];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = *(uint64_t *)((char *)a2 + v8 + 8);
    *(_QWORD *)v9 = *(uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(v9 + 8) = v10;
    *(_OWORD *)(v9 + 16) = *(_OWORD *)((char *)a2 + v8 + 16);
    v11 = *(uint64_t *)((char *)a2 + v8 + 32);
    v12 = *(void **)((char *)a2 + v8 + 40);
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v12;
    v121 = (uint64_t)a2 + v8;
    v122 = type metadata accessor for ShowHero(0);
    v13 = *(int *)(v122 + 32);
    v14 = (_QWORD *)(v9 + v13);
    v15 = (_QWORD *)(v121 + v13);
    v16 = (int *)type metadata accessor for ArtworkModel(0);
    v120 = *((_QWORD *)v16 - 1);
    v17 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v120 + 48);
    swift_retain(v5);
    swift_retain(v7);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    v18 = v12;
    v19 = v17;
    if (v17(v15, 1, v16))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v21 = v121;
      v22 = (int *)v122;
    }
    else
    {
      v25 = v15[1];
      *v14 = *v15;
      v14[1] = v25;
      v26 = *((unsigned __int8 *)v15 + 32);
      swift_bridgeObjectRetain(v25);
      if (v26 == 255)
      {
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        *((_BYTE *)v14 + 32) = *((_BYTE *)v15 + 32);
      }
      else
      {
        v27 = v15[2];
        v28 = v15[3];
        sub_108110(v27, v28, v26);
        v14[2] = v27;
        v14[3] = v28;
        *((_BYTE *)v14 + 32) = v26;
      }
      v21 = v121;
      v22 = (int *)v122;
      *(_OWORD *)(v14 + 5) = *(_OWORD *)(v15 + 5);
      v29 = (id *)(v15 + 7);
      v30 = *((unsigned __int8 *)v15 + 64);
      if (v30 == 255)
      {
        v14[7] = *v29;
        *((_BYTE *)v14 + 64) = *((_BYTE *)v15 + 64);
      }
      else
      {
        v31 = *v29;
        sub_27F80(*v29, *((_BYTE *)v15 + 64));
        v14[7] = v31;
        *((_BYTE *)v14 + 64) = v30;
      }
      v32 = (id *)(v15 + 9);
      v33 = *((unsigned __int8 *)v15 + 80);
      if (v33 == 255)
      {
        v14[9] = *v32;
        *((_BYTE *)v14 + 80) = *((_BYTE *)v15 + 80);
      }
      else
      {
        v34 = *v32;
        sub_27F80(*v32, *((_BYTE *)v15 + 80));
        v14[9] = v34;
        *((_BYTE *)v14 + 80) = v33;
      }
      v35 = (id *)(v15 + 11);
      v36 = *((unsigned __int8 *)v15 + 96);
      if (v36 == 255)
      {
        v14[11] = *v35;
        *((_BYTE *)v14 + 96) = *((_BYTE *)v15 + 96);
      }
      else
      {
        v37 = *v35;
        sub_27F80(*v35, *((_BYTE *)v15 + 96));
        v14[11] = v37;
        *((_BYTE *)v14 + 96) = v36;
      }
      v38 = (id *)(v15 + 13);
      v39 = *((unsigned __int8 *)v15 + 112);
      if (v39 == 255)
      {
        v14[13] = *v38;
        *((_BYTE *)v14 + 112) = *((_BYTE *)v15 + 112);
      }
      else
      {
        v40 = *v38;
        sub_27F80(*v38, *((_BYTE *)v15 + 112));
        v14[13] = v40;
        *((_BYTE *)v14 + 112) = v39;
      }
      v41 = (id *)(v15 + 15);
      v42 = *((unsigned __int8 *)v15 + 128);
      v43 = v19;
      if (v42 == 255)
      {
        v14[15] = *v41;
        *((_BYTE *)v14 + 128) = *((_BYTE *)v15 + 128);
      }
      else
      {
        v44 = *v41;
        sub_27F80(*v41, *((_BYTE *)v15 + 128));
        v14[15] = v44;
        *((_BYTE *)v14 + 128) = v42;
      }
      *((_BYTE *)v14 + 129) = *((_BYTE *)v15 + 129);
      v45 = v16[11];
      v46 = (char *)v14 + v45;
      v47 = (char *)v15 + v45;
      v48 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
      v49 = v16[12];
      v50 = (_QWORD *)((char *)v14 + v49);
      v51 = (_QWORD *)((char *)v15 + v49);
      v52 = v51[1];
      *v50 = *v51;
      v50[1] = v52;
      *((_BYTE *)v14 + v16[13]) = *((_BYTE *)v15 + v16[13]);
      *((_BYTE *)v14 + v16[14]) = *((_BYTE *)v15 + v16[14]);
      *((_BYTE *)v14 + v16[15]) = *((_BYTE *)v15 + v16[15]);
      v53 = v16[16];
      v54 = (_QWORD *)((char *)v14 + v53);
      v55 = (_QWORD *)((char *)v15 + v53);
      v56 = v55[1];
      *v54 = *v55;
      v54[1] = v56;
      v57 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v120 + 56);
      swift_bridgeObjectRetain(v52);
      v58 = swift_bridgeObjectRetain(v56);
      v57(v14, 0, 1, v16, v58);
      v19 = v43;
    }
    v59 = v22[9];
    v60 = (_QWORD *)(v9 + v59);
    v61 = (_QWORD *)(v21 + v59);
    if (v19(v21 + v59, 1, v16))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v63 = v61[1];
      *v60 = *v61;
      v60[1] = v63;
      v64 = *((unsigned __int8 *)v61 + 32);
      swift_bridgeObjectRetain(v63);
      if (v64 == 255)
      {
        *((_OWORD *)v60 + 1) = *((_OWORD *)v61 + 1);
        *((_BYTE *)v60 + 32) = *((_BYTE *)v61 + 32);
      }
      else
      {
        v65 = v61[2];
        v66 = v61[3];
        sub_108110(v65, v66, v64);
        v60[2] = v65;
        v60[3] = v66;
        *((_BYTE *)v60 + 32) = v64;
      }
      *(_OWORD *)(v60 + 5) = *(_OWORD *)(v61 + 5);
      v67 = (id *)(v61 + 7);
      v68 = *((unsigned __int8 *)v61 + 64);
      if (v68 == 255)
      {
        v60[7] = *v67;
        *((_BYTE *)v60 + 64) = *((_BYTE *)v61 + 64);
      }
      else
      {
        v69 = *v67;
        sub_27F80(*v67, *((_BYTE *)v61 + 64));
        v60[7] = v69;
        *((_BYTE *)v60 + 64) = v68;
      }
      v70 = (id *)(v61 + 9);
      v71 = *((unsigned __int8 *)v61 + 80);
      if (v71 == 255)
      {
        v60[9] = *v70;
        *((_BYTE *)v60 + 80) = *((_BYTE *)v61 + 80);
      }
      else
      {
        v72 = *v70;
        sub_27F80(*v70, *((_BYTE *)v61 + 80));
        v60[9] = v72;
        *((_BYTE *)v60 + 80) = v71;
      }
      v73 = (id *)(v61 + 11);
      v74 = *((unsigned __int8 *)v61 + 96);
      if (v74 == 255)
      {
        v60[11] = *v73;
        *((_BYTE *)v60 + 96) = *((_BYTE *)v61 + 96);
      }
      else
      {
        v75 = *v73;
        sub_27F80(*v73, *((_BYTE *)v61 + 96));
        v60[11] = v75;
        *((_BYTE *)v60 + 96) = v74;
      }
      v76 = (id *)(v61 + 13);
      v77 = *((unsigned __int8 *)v61 + 112);
      if (v77 == 255)
      {
        v60[13] = *v76;
        *((_BYTE *)v60 + 112) = *((_BYTE *)v61 + 112);
      }
      else
      {
        v78 = *v76;
        sub_27F80(*v76, *((_BYTE *)v61 + 112));
        v60[13] = v78;
        *((_BYTE *)v60 + 112) = v77;
      }
      v79 = (id *)(v61 + 15);
      v80 = *((unsigned __int8 *)v61 + 128);
      if (v80 == 255)
      {
        v60[15] = *v79;
        *((_BYTE *)v60 + 128) = *((_BYTE *)v61 + 128);
      }
      else
      {
        v81 = *v79;
        sub_27F80(*v79, *((_BYTE *)v61 + 128));
        v60[15] = v81;
        *((_BYTE *)v60 + 128) = v80;
      }
      *((_BYTE *)v60 + 129) = *((_BYTE *)v61 + 129);
      v82 = v16[11];
      v83 = (char *)v60 + v82;
      v84 = (char *)v61 + v82;
      v85 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v83, v84, v85);
      v86 = v16[12];
      v87 = (_QWORD *)((char *)v60 + v86);
      v88 = (_QWORD *)((char *)v61 + v86);
      v89 = v88[1];
      *v87 = *v88;
      v87[1] = v89;
      *((_BYTE *)v60 + v16[13]) = *((_BYTE *)v61 + v16[13]);
      *((_BYTE *)v60 + v16[14]) = *((_BYTE *)v61 + v16[14]);
      *((_BYTE *)v60 + v16[15]) = *((_BYTE *)v61 + v16[15]);
      v90 = v16[16];
      v91 = (_QWORD *)((char *)v60 + v90);
      v92 = (_QWORD *)((char *)v61 + v90);
      v93 = v92[1];
      *v91 = *v92;
      v91[1] = v93;
      v94 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v120 + 56);
      swift_bridgeObjectRetain(v89);
      v95 = swift_bridgeObjectRetain(v93);
      v94(v60, 0, 1, v16, v95);
    }
    v96 = v22[10];
    v97 = v9 + v96;
    v98 = v21 + v96;
    *(_DWORD *)v97 = *(_DWORD *)v98;
    *(_BYTE *)(v97 + 4) = *(_BYTE *)(v98 + 4);
    v99 = v22[11];
    v100 = v9 + v99;
    v101 = v21 + v99;
    *(_BYTE *)(v100 + 8) = *(_BYTE *)(v101 + 8);
    *(_QWORD *)v100 = *(_QWORD *)v101;
    v102 = v22[12];
    v103 = (_QWORD *)(v9 + v102);
    v104 = (_QWORD *)(v21 + v102);
    v105 = v104[1];
    *v103 = *v104;
    v103[1] = v105;
    *(_BYTE *)(v9 + v22[13]) = *(_BYTE *)(v21 + v22[13]);
    v106 = v22[14];
    v107 = v9 + v106;
    v108 = v21 + v106;
    swift_bridgeObjectRetain(v105);
    v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v107, v108, v109);
    v110 = v22[15];
    v111 = v9 + v110;
    v112 = v21 + v110;
    v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
    v114 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
    v114(v111, v112, v113);
    v114(v9 + v22[16], v21 + v22[16], v113);
    v114(v9 + v22[17], v21 + v22[17], v113);
    v115 = v22[18];
    v116 = v9 + v115;
    v117 = v21 + v115;
    v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v116, v117, v118);
    return a1;
  }
  return v24;
}

uint64_t sub_25702C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  int *v5;
  char *v6;
  int *v7;
  unsigned int (*v8)(char *, uint64_t, int *);
  __n128 v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char *v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;

  swift_release(*a1);
  swift_release(a1[3]);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease(*((_QWORD *)v4 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)v4 + 4));

  v5 = (int *)type metadata accessor for ShowHero(0);
  v6 = &v4[v5[8]];
  v7 = (int *)type metadata accessor for ArtworkModel(0);
  v8 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48);
  if (!v8(v6, 1, v7))
  {
    swift_bridgeObjectRelease(*((_QWORD *)v6 + 1));
    v10 = v6[32];
    if (v10 != 255)
      sub_108270(*((_QWORD *)v6 + 2), *((_QWORD *)v6 + 3), v10);
    v11 = v6[64];
    if (v11 != 255)
      sub_27FA8(*((id *)v6 + 7), v11);
    v12 = v6[80];
    if (v12 != 255)
      sub_27FA8(*((id *)v6 + 9), v12);
    v13 = v6[96];
    if (v13 != 255)
      sub_27FA8(*((id *)v6 + 11), v13);
    v14 = v6[112];
    if (v14 != 255)
      sub_27FA8(*((id *)v6 + 13), v14);
    v15 = v6[128];
    if (v15 != 255)
      sub_27FA8(*((id *)v6 + 15), v15);
    v16 = &v6[v7[11]];
    v17 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease(*(_QWORD *)&v6[v7[12] + 8]);
    v9 = swift_bridgeObjectRelease(*(_QWORD *)&v6[v7[16] + 8]);
  }
  v18 = &v4[v5[9]];
  if (!((unsigned int (*)(char *, uint64_t, int *, __n128))v8)(v18, 1, v7, v9))
  {
    swift_bridgeObjectRelease(*((_QWORD *)v18 + 1));
    v19 = v18[32];
    if (v19 != 255)
      sub_108270(*((_QWORD *)v18 + 2), *((_QWORD *)v18 + 3), v19);
    v20 = v18[64];
    if (v20 != 255)
      sub_27FA8(*((id *)v18 + 7), v20);
    v21 = v18[80];
    if (v21 != 255)
      sub_27FA8(*((id *)v18 + 9), v21);
    v22 = v18[96];
    if (v22 != 255)
      sub_27FA8(*((id *)v18 + 11), v22);
    v23 = v18[112];
    if (v23 != 255)
      sub_27FA8(*((id *)v18 + 13), v23);
    v24 = v18[128];
    if (v24 != 255)
      sub_27FA8(*((id *)v18 + 15), v24);
    v25 = &v18[v7[11]];
    v26 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
    swift_bridgeObjectRelease(*(_QWORD *)&v18[v7[12] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v18[v7[16] + 8]);
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v4[v5[12] + 8]);
  v27 = &v4[v5[14]];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = &v4[v5[15]];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v31 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8);
  v31(v29, v30);
  v31(&v4[v5[16]], v30);
  v31(&v4[v5[17]], v30);
  v32 = &v4[v5[18]];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
}

uint64_t sub_257314(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  unsigned int (*v15)(_QWORD, _QWORD, _QWORD);
  id v16;
  unsigned int (*v17)(_QWORD, _QWORD, _QWORD);
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id *v37;
  int v38;
  unsigned int (*v39)(_QWORD, _QWORD, _QWORD);
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  void (*v53)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  id *v63;
  int v64;
  id v65;
  id *v66;
  int v67;
  id v68;
  id *v69;
  int v70;
  id v71;
  id *v72;
  int v73;
  id v74;
  id *v75;
  int v76;
  id v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  void (*v90)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v5 = a2[3];
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = *(uint64_t *)((char *)a2 + v6 + 8);
  *(_QWORD *)v7 = *(uint64_t *)((char *)a2 + v6);
  *(_QWORD *)(v7 + 8) = v8;
  *(_OWORD *)(v7 + 16) = *(_OWORD *)((char *)a2 + v6 + 16);
  v9 = *(uint64_t *)((char *)a2 + v6 + 32);
  v10 = *(void **)((char *)a2 + v6 + 40);
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v10;
  v117 = (uint64_t)a2 + v6;
  v118 = type metadata accessor for ShowHero(0);
  v11 = *(int *)(v118 + 32);
  v12 = (_QWORD *)(v7 + v11);
  v13 = (_QWORD *)(v117 + v11);
  v14 = (int *)type metadata accessor for ArtworkModel(0);
  v116 = *((_QWORD *)v14 - 1);
  v15 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v116 + 48);
  swift_retain(v3);
  swift_retain(v5);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  v16 = v10;
  v17 = v15;
  if (v15(v13, 1, v14))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    v19 = v117;
    v20 = (int *)v118;
  }
  else
  {
    v21 = v13[1];
    *v12 = *v13;
    v12[1] = v21;
    v22 = *((unsigned __int8 *)v13 + 32);
    swift_bridgeObjectRetain(v21);
    if (v22 == 255)
    {
      *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
      *((_BYTE *)v12 + 32) = *((_BYTE *)v13 + 32);
    }
    else
    {
      v23 = v13[2];
      v24 = v13[3];
      sub_108110(v23, v24, v22);
      v12[2] = v23;
      v12[3] = v24;
      *((_BYTE *)v12 + 32) = v22;
    }
    v19 = v117;
    v20 = (int *)v118;
    *(_OWORD *)(v12 + 5) = *(_OWORD *)(v13 + 5);
    v25 = (id *)(v13 + 7);
    v26 = *((unsigned __int8 *)v13 + 64);
    if (v26 == 255)
    {
      v12[7] = *v25;
      *((_BYTE *)v12 + 64) = *((_BYTE *)v13 + 64);
    }
    else
    {
      v27 = *v25;
      sub_27F80(*v25, *((_BYTE *)v13 + 64));
      v12[7] = v27;
      *((_BYTE *)v12 + 64) = v26;
    }
    v28 = (id *)(v13 + 9);
    v29 = *((unsigned __int8 *)v13 + 80);
    if (v29 == 255)
    {
      v12[9] = *v28;
      *((_BYTE *)v12 + 80) = *((_BYTE *)v13 + 80);
    }
    else
    {
      v30 = *v28;
      sub_27F80(*v28, *((_BYTE *)v13 + 80));
      v12[9] = v30;
      *((_BYTE *)v12 + 80) = v29;
    }
    v31 = (id *)(v13 + 11);
    v32 = *((unsigned __int8 *)v13 + 96);
    if (v32 == 255)
    {
      v12[11] = *v31;
      *((_BYTE *)v12 + 96) = *((_BYTE *)v13 + 96);
    }
    else
    {
      v33 = *v31;
      sub_27F80(*v31, *((_BYTE *)v13 + 96));
      v12[11] = v33;
      *((_BYTE *)v12 + 96) = v32;
    }
    v34 = (id *)(v13 + 13);
    v35 = *((unsigned __int8 *)v13 + 112);
    if (v35 == 255)
    {
      v12[13] = *v34;
      *((_BYTE *)v12 + 112) = *((_BYTE *)v13 + 112);
    }
    else
    {
      v36 = *v34;
      sub_27F80(*v34, *((_BYTE *)v13 + 112));
      v12[13] = v36;
      *((_BYTE *)v12 + 112) = v35;
    }
    v37 = (id *)(v13 + 15);
    v38 = *((unsigned __int8 *)v13 + 128);
    v39 = v17;
    if (v38 == 255)
    {
      v12[15] = *v37;
      *((_BYTE *)v12 + 128) = *((_BYTE *)v13 + 128);
    }
    else
    {
      v40 = *v37;
      sub_27F80(*v37, *((_BYTE *)v13 + 128));
      v12[15] = v40;
      *((_BYTE *)v12 + 128) = v38;
    }
    *((_BYTE *)v12 + 129) = *((_BYTE *)v13 + 129);
    v41 = v14[11];
    v42 = (char *)v12 + v41;
    v43 = (char *)v13 + v41;
    v44 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
    v45 = v14[12];
    v46 = (_QWORD *)((char *)v12 + v45);
    v47 = (_QWORD *)((char *)v13 + v45);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    *((_BYTE *)v12 + v14[13]) = *((_BYTE *)v13 + v14[13]);
    *((_BYTE *)v12 + v14[14]) = *((_BYTE *)v13 + v14[14]);
    *((_BYTE *)v12 + v14[15]) = *((_BYTE *)v13 + v14[15]);
    v49 = v14[16];
    v50 = (_QWORD *)((char *)v12 + v49);
    v51 = (_QWORD *)((char *)v13 + v49);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v116 + 56);
    swift_bridgeObjectRetain(v48);
    v54 = swift_bridgeObjectRetain(v52);
    v53(v12, 0, 1, v14, v54);
    v17 = v39;
  }
  v55 = v20[9];
  v56 = (_QWORD *)(v7 + v55);
  v57 = (_QWORD *)(v19 + v55);
  if (v17(v19 + v55, 1, v14))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    v59 = v57[1];
    *v56 = *v57;
    v56[1] = v59;
    v60 = *((unsigned __int8 *)v57 + 32);
    swift_bridgeObjectRetain(v59);
    if (v60 == 255)
    {
      *((_OWORD *)v56 + 1) = *((_OWORD *)v57 + 1);
      *((_BYTE *)v56 + 32) = *((_BYTE *)v57 + 32);
    }
    else
    {
      v61 = v57[2];
      v62 = v57[3];
      sub_108110(v61, v62, v60);
      v56[2] = v61;
      v56[3] = v62;
      *((_BYTE *)v56 + 32) = v60;
    }
    *(_OWORD *)(v56 + 5) = *(_OWORD *)(v57 + 5);
    v63 = (id *)(v57 + 7);
    v64 = *((unsigned __int8 *)v57 + 64);
    if (v64 == 255)
    {
      v56[7] = *v63;
      *((_BYTE *)v56 + 64) = *((_BYTE *)v57 + 64);
    }
    else
    {
      v65 = *v63;
      sub_27F80(*v63, *((_BYTE *)v57 + 64));
      v56[7] = v65;
      *((_BYTE *)v56 + 64) = v64;
    }
    v66 = (id *)(v57 + 9);
    v67 = *((unsigned __int8 *)v57 + 80);
    if (v67 == 255)
    {
      v56[9] = *v66;
      *((_BYTE *)v56 + 80) = *((_BYTE *)v57 + 80);
    }
    else
    {
      v68 = *v66;
      sub_27F80(*v66, *((_BYTE *)v57 + 80));
      v56[9] = v68;
      *((_BYTE *)v56 + 80) = v67;
    }
    v69 = (id *)(v57 + 11);
    v70 = *((unsigned __int8 *)v57 + 96);
    if (v70 == 255)
    {
      v56[11] = *v69;
      *((_BYTE *)v56 + 96) = *((_BYTE *)v57 + 96);
    }
    else
    {
      v71 = *v69;
      sub_27F80(*v69, *((_BYTE *)v57 + 96));
      v56[11] = v71;
      *((_BYTE *)v56 + 96) = v70;
    }
    v72 = (id *)(v57 + 13);
    v73 = *((unsigned __int8 *)v57 + 112);
    if (v73 == 255)
    {
      v56[13] = *v72;
      *((_BYTE *)v56 + 112) = *((_BYTE *)v57 + 112);
    }
    else
    {
      v74 = *v72;
      sub_27F80(*v72, *((_BYTE *)v57 + 112));
      v56[13] = v74;
      *((_BYTE *)v56 + 112) = v73;
    }
    v75 = (id *)(v57 + 15);
    v76 = *((unsigned __int8 *)v57 + 128);
    if (v76 == 255)
    {
      v56[15] = *v75;
      *((_BYTE *)v56 + 128) = *((_BYTE *)v57 + 128);
    }
    else
    {
      v77 = *v75;
      sub_27F80(*v75, *((_BYTE *)v57 + 128));
      v56[15] = v77;
      *((_BYTE *)v56 + 128) = v76;
    }
    *((_BYTE *)v56 + 129) = *((_BYTE *)v57 + 129);
    v78 = v14[11];
    v79 = (char *)v56 + v78;
    v80 = (char *)v57 + v78;
    v81 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
    v82 = v14[12];
    v83 = (_QWORD *)((char *)v56 + v82);
    v84 = (_QWORD *)((char *)v57 + v82);
    v85 = v84[1];
    *v83 = *v84;
    v83[1] = v85;
    *((_BYTE *)v56 + v14[13]) = *((_BYTE *)v57 + v14[13]);
    *((_BYTE *)v56 + v14[14]) = *((_BYTE *)v57 + v14[14]);
    *((_BYTE *)v56 + v14[15]) = *((_BYTE *)v57 + v14[15]);
    v86 = v14[16];
    v87 = (_QWORD *)((char *)v56 + v86);
    v88 = (_QWORD *)((char *)v57 + v86);
    v89 = v88[1];
    *v87 = *v88;
    v87[1] = v89;
    v90 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v116 + 56);
    swift_bridgeObjectRetain(v85);
    v91 = swift_bridgeObjectRetain(v89);
    v90(v56, 0, 1, v14, v91);
  }
  v92 = v20[10];
  v93 = v7 + v92;
  v94 = v19 + v92;
  *(_DWORD *)v93 = *(_DWORD *)v94;
  *(_BYTE *)(v93 + 4) = *(_BYTE *)(v94 + 4);
  v95 = v20[11];
  v96 = v7 + v95;
  v97 = v19 + v95;
  *(_BYTE *)(v96 + 8) = *(_BYTE *)(v97 + 8);
  *(_QWORD *)v96 = *(_QWORD *)v97;
  v98 = v20[12];
  v99 = (_QWORD *)(v7 + v98);
  v100 = (_QWORD *)(v19 + v98);
  v101 = v100[1];
  *v99 = *v100;
  v99[1] = v101;
  *(_BYTE *)(v7 + v20[13]) = *(_BYTE *)(v19 + v20[13]);
  v102 = v20[14];
  v103 = v7 + v102;
  v104 = v19 + v102;
  swift_bridgeObjectRetain(v101);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v103, v104, v105);
  v106 = v20[15];
  v107 = v7 + v106;
  v108 = v19 + v106;
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 16);
  v110(v107, v108, v109);
  v110(v7 + v20[16], v19 + v20[16], v109);
  v110(v7 + v20[17], v19 + v20[17], v109);
  v111 = v20[18];
  v112 = v7 + v111;
  v113 = v19 + v111;
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v112, v113, v114);
  return a1;
}

uint64_t *sub_257A1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, int *);
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 *v37;
  __int128 *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  __int128 v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  id v53;
  id *v54;
  int v55;
  id v56;
  id v57;
  id *v58;
  int v59;
  id v60;
  id v61;
  id *v62;
  int v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(uint64_t, _QWORD, uint64_t, int *, __n128);
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  __int128 v83;
  id *v84;
  id *v85;
  int v86;
  id v87;
  void *v88;
  char v89;
  id v90;
  char v91;
  id v92;
  id *v93;
  id *v94;
  int v95;
  id v96;
  void *v97;
  char v98;
  id v99;
  char v100;
  id v101;
  id *v102;
  id *v103;
  int v104;
  id v105;
  void *v106;
  char v107;
  id v108;
  char v109;
  id v110;
  id *v111;
  id *v112;
  int v113;
  id v114;
  void *v115;
  char v116;
  id v117;
  char v118;
  id v119;
  id *v120;
  id *v121;
  int v122;
  id v123;
  void *v124;
  char v125;
  id v126;
  char v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  unsigned __int8 *v145;
  int v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 *v156;
  __int128 *v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unsigned __int8 v163;
  __int128 v164;
  id *v165;
  int v166;
  id v167;
  id v168;
  id *v169;
  int v170;
  id v171;
  id v172;
  id *v173;
  int v174;
  id v175;
  id v176;
  id *v177;
  int v178;
  id v179;
  id v180;
  id *v181;
  int v182;
  id v183;
  id v184;
  uint64_t v185;
  char *v186;
  unsigned __int8 *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  unsigned __int8 *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  unsigned __int8 *v195;
  uint64_t v196;
  void (*v197)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v198;
  uint64_t v199;
  uint64_t v200;
  unsigned __int8 v201;
  __int128 v202;
  id *v203;
  id *v204;
  int v205;
  id v206;
  void *v207;
  char v208;
  id v209;
  unsigned __int8 v210;
  id v211;
  id *v212;
  id *v213;
  int v214;
  id v215;
  void *v216;
  char v217;
  id v218;
  unsigned __int8 v219;
  id v220;
  id *v221;
  id *v222;
  int v223;
  id v224;
  void *v225;
  char v226;
  id v227;
  unsigned __int8 v228;
  id v229;
  id *v230;
  id *v231;
  int v232;
  id v233;
  void *v234;
  char v235;
  id v236;
  unsigned __int8 v237;
  id v238;
  id *v239;
  id *v240;
  int v241;
  id v242;
  void *v243;
  char v244;
  id v245;
  unsigned __int8 v246;
  id v247;
  uint64_t v248;
  char *v249;
  unsigned __int8 *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  unsigned __int8 *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  unsigned __int8 *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  int v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  _QWORD *v271;
  _QWORD *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  void (*v283)(char *, char *, uint64_t);
  uint64_t v284;
  char *v285;
  char *v286;
  uint64_t v287;
  uint64_t v289;
  uint64_t v290;
  uint64_t *v291;
  uint64_t *v292;
  uint64_t *v293;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v7;
  swift_retain(v6);
  swift_release(v8);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v9 = a1[3];
  v10 = a2[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v9);
  v11 = *(int *)(a3 + 24);
  v12 = (uint64_t *)((char *)a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  *v12 = *(uint64_t *)((char *)a2 + v11);
  v14 = *(uint64_t *)((char *)a2 + v11 + 8);
  v15 = *(uint64_t *)((char *)a1 + v11 + 8);
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v12[2] = v13[2];
  v12[3] = v13[3];
  v16 = v13[4];
  v17 = v12[4];
  v12[4] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = (void *)v13[5];
  v19 = (void *)v12[5];
  v12[5] = v18;
  v20 = v18;

  v21 = (int *)type metadata accessor for ShowHero(0);
  v22 = v21[8];
  v23 = (uint64_t)v12 + v22;
  v24 = (char *)v13 + v22;
  v25 = (int *)type metadata accessor for ArtworkModel(0);
  v26 = *((_QWORD *)v25 - 1);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27((uint64_t)v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      v289 = v26;
      v291 = a1;
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v30 = *((_QWORD *)v24 + 1);
      *(_QWORD *)(v23 + 8) = v30;
      v31 = v24[32];
      swift_bridgeObjectRetain(v30);
      if (v31 == 255)
      {
        v45 = *((_OWORD *)v24 + 1);
        *(_BYTE *)(v23 + 32) = v24[32];
        *(_OWORD *)(v23 + 16) = v45;
      }
      else
      {
        v32 = *((_QWORD *)v24 + 2);
        v33 = *((_QWORD *)v24 + 3);
        sub_108110(v32, v33, v31);
        *(_QWORD *)(v23 + 16) = v32;
        *(_QWORD *)(v23 + 24) = v33;
        *(_BYTE *)(v23 + 32) = v31;
      }
      *(_QWORD *)(v23 + 40) = *((_QWORD *)v24 + 5);
      *(_QWORD *)(v23 + 48) = *((_QWORD *)v24 + 6);
      v46 = (id *)(v24 + 56);
      v47 = v24[64];
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v23 + 64) = v24[64];
        *(_QWORD *)(v23 + 56) = v49;
      }
      else
      {
        v48 = *v46;
        sub_27F80(*v46, v24[64]);
        *(_QWORD *)(v23 + 56) = v48;
        *(_BYTE *)(v23 + 64) = v47;
      }
      v26 = v289;
      v50 = (id *)(v24 + 72);
      v51 = v24[80];
      if (v51 == 255)
      {
        v53 = *v50;
        *(_BYTE *)(v23 + 80) = v24[80];
        *(_QWORD *)(v23 + 72) = v53;
      }
      else
      {
        v52 = *v50;
        sub_27F80(*v50, v24[80]);
        *(_QWORD *)(v23 + 72) = v52;
        *(_BYTE *)(v23 + 80) = v51;
      }
      v54 = (id *)(v24 + 88);
      v55 = v24[96];
      if (v55 == 255)
      {
        v57 = *v54;
        *(_BYTE *)(v23 + 96) = v24[96];
        *(_QWORD *)(v23 + 88) = v57;
      }
      else
      {
        v56 = *v54;
        sub_27F80(*v54, v24[96]);
        *(_QWORD *)(v23 + 88) = v56;
        *(_BYTE *)(v23 + 96) = v55;
      }
      v58 = (id *)(v24 + 104);
      v59 = v24[112];
      if (v59 == 255)
      {
        v61 = *v58;
        *(_BYTE *)(v23 + 112) = v24[112];
        *(_QWORD *)(v23 + 104) = v61;
      }
      else
      {
        v60 = *v58;
        sub_27F80(*v58, v24[112]);
        *(_QWORD *)(v23 + 104) = v60;
        *(_BYTE *)(v23 + 112) = v59;
      }
      v62 = (id *)(v24 + 120);
      v63 = v24[128];
      if (v63 == 255)
      {
        v65 = *v62;
        *(_BYTE *)(v23 + 128) = v24[128];
        *(_QWORD *)(v23 + 120) = v65;
      }
      else
      {
        v64 = *v62;
        sub_27F80(*v62, v24[128]);
        *(_QWORD *)(v23 + 120) = v64;
        *(_BYTE *)(v23 + 128) = v63;
      }
      *(_BYTE *)(v23 + 129) = v24[129];
      v66 = v25[11];
      v67 = v23 + v66;
      v68 = &v24[v66];
      v69 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
      v70 = v25[12];
      v71 = (_QWORD *)(v23 + v70);
      v72 = &v24[v70];
      *v71 = *(_QWORD *)v72;
      v73 = *((_QWORD *)v72 + 1);
      v71[1] = v73;
      *(_BYTE *)(v23 + v25[13]) = v24[v25[13]];
      *(_BYTE *)(v23 + v25[14]) = v24[v25[14]];
      *(_BYTE *)(v23 + v25[15]) = v24[v25[15]];
      v74 = v25[16];
      v75 = (_QWORD *)(v23 + v74);
      v76 = &v24[v74];
      *v75 = *(_QWORD *)v76;
      v77 = *((_QWORD *)v76 + 1);
      v75[1] = v77;
      v78 = *(void (**)(uint64_t, _QWORD, uint64_t, int *, __n128))(v289 + 56);
      swift_bridgeObjectRetain(v73);
      v79 = swift_bridgeObjectRetain(v77);
      v78(v23, 0, 1, v25, v79);
      a1 = v291;
      goto LABEL_68;
    }
LABEL_7:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v23, v24, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_68;
  }
  if (v29)
  {
    sub_FA4C(v23, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  v290 = v26;
  v292 = a1;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v35 = *((_QWORD *)v24 + 1);
  v36 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v23 + 8) = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  v37 = (__int128 *)(v23 + 16);
  v38 = (__int128 *)(v24 + 16);
  v39 = v24[32];
  if (*(unsigned __int8 *)(v23 + 32) == 255)
  {
    if (v39 == 255)
    {
      v83 = *v38;
      *(_BYTE *)(v23 + 32) = v24[32];
      *v37 = v83;
    }
    else
    {
      v80 = *((_QWORD *)v24 + 2);
      v81 = *((_QWORD *)v24 + 3);
      sub_108110(v80, v81, v24[32]);
      *(_QWORD *)(v23 + 16) = v80;
      *(_QWORD *)(v23 + 24) = v81;
      *(_BYTE *)(v23 + 32) = v39;
    }
  }
  else if (v39 == 255)
  {
    sub_108DD8(v23 + 16);
    v82 = v24[32];
    *v37 = *v38;
    *(_BYTE *)(v23 + 32) = v82;
  }
  else
  {
    v40 = *((_QWORD *)v24 + 2);
    v41 = *((_QWORD *)v24 + 3);
    sub_108110(v40, v41, v24[32]);
    v42 = *(_QWORD *)(v23 + 16);
    v43 = *(_QWORD *)(v23 + 24);
    *(_QWORD *)(v23 + 16) = v40;
    *(_QWORD *)(v23 + 24) = v41;
    v44 = *(_BYTE *)(v23 + 32);
    *(_BYTE *)(v23 + 32) = v39;
    sub_108270(v42, v43, v44);
  }
  *(_QWORD *)(v23 + 40) = *((_QWORD *)v24 + 5);
  *(_QWORD *)(v23 + 48) = *((_QWORD *)v24 + 6);
  v84 = (id *)(v23 + 56);
  v85 = (id *)(v24 + 56);
  v86 = v24[64];
  if (*(unsigned __int8 *)(v23 + 64) == 255)
  {
    if (v86 == 255)
    {
      v92 = *v85;
      *(_BYTE *)(v23 + 64) = v24[64];
      *v84 = v92;
    }
    else
    {
      v90 = *v85;
      sub_27F80(*v85, v24[64]);
      *(_QWORD *)(v23 + 56) = v90;
      *(_BYTE *)(v23 + 64) = v86;
    }
  }
  else if (v86 == 255)
  {
    sub_108E0C(v23 + 56);
    v91 = v24[64];
    *v84 = *v85;
    *(_BYTE *)(v23 + 64) = v91;
  }
  else
  {
    v87 = *v85;
    sub_27F80(*v85, v24[64]);
    v88 = *(void **)(v23 + 56);
    *(_QWORD *)(v23 + 56) = v87;
    v89 = *(_BYTE *)(v23 + 64);
    *(_BYTE *)(v23 + 64) = v86;
    sub_27FA8(v88, v89);
  }
  v93 = (id *)(v23 + 72);
  v94 = (id *)(v24 + 72);
  v95 = v24[80];
  if (*(unsigned __int8 *)(v23 + 80) == 255)
  {
    if (v95 == 255)
    {
      v101 = *v94;
      *(_BYTE *)(v23 + 80) = v24[80];
      *v93 = v101;
    }
    else
    {
      v99 = *v94;
      sub_27F80(*v94, v24[80]);
      *(_QWORD *)(v23 + 72) = v99;
      *(_BYTE *)(v23 + 80) = v95;
    }
  }
  else if (v95 == 255)
  {
    sub_108E0C(v23 + 72);
    v100 = v24[80];
    *v93 = *v94;
    *(_BYTE *)(v23 + 80) = v100;
  }
  else
  {
    v96 = *v94;
    sub_27F80(*v94, v24[80]);
    v97 = *(void **)(v23 + 72);
    *(_QWORD *)(v23 + 72) = v96;
    v98 = *(_BYTE *)(v23 + 80);
    *(_BYTE *)(v23 + 80) = v95;
    sub_27FA8(v97, v98);
  }
  v102 = (id *)(v23 + 88);
  v103 = (id *)(v24 + 88);
  v104 = v24[96];
  if (*(unsigned __int8 *)(v23 + 96) == 255)
  {
    if (v104 == 255)
    {
      v110 = *v103;
      *(_BYTE *)(v23 + 96) = v24[96];
      *v102 = v110;
    }
    else
    {
      v108 = *v103;
      sub_27F80(*v103, v24[96]);
      *(_QWORD *)(v23 + 88) = v108;
      *(_BYTE *)(v23 + 96) = v104;
    }
  }
  else if (v104 == 255)
  {
    sub_108E0C(v23 + 88);
    v109 = v24[96];
    *v102 = *v103;
    *(_BYTE *)(v23 + 96) = v109;
  }
  else
  {
    v105 = *v103;
    sub_27F80(*v103, v24[96]);
    v106 = *(void **)(v23 + 88);
    *(_QWORD *)(v23 + 88) = v105;
    v107 = *(_BYTE *)(v23 + 96);
    *(_BYTE *)(v23 + 96) = v104;
    sub_27FA8(v106, v107);
  }
  v111 = (id *)(v23 + 104);
  v112 = (id *)(v24 + 104);
  v113 = v24[112];
  if (*(unsigned __int8 *)(v23 + 112) == 255)
  {
    if (v113 == 255)
    {
      v119 = *v112;
      *(_BYTE *)(v23 + 112) = v24[112];
      *v111 = v119;
    }
    else
    {
      v117 = *v112;
      sub_27F80(*v112, v24[112]);
      *(_QWORD *)(v23 + 104) = v117;
      *(_BYTE *)(v23 + 112) = v113;
    }
  }
  else if (v113 == 255)
  {
    sub_108E0C(v23 + 104);
    v118 = v24[112];
    *v111 = *v112;
    *(_BYTE *)(v23 + 112) = v118;
  }
  else
  {
    v114 = *v112;
    sub_27F80(*v112, v24[112]);
    v115 = *(void **)(v23 + 104);
    *(_QWORD *)(v23 + 104) = v114;
    v116 = *(_BYTE *)(v23 + 112);
    *(_BYTE *)(v23 + 112) = v113;
    sub_27FA8(v115, v116);
  }
  v120 = (id *)(v23 + 120);
  v121 = (id *)(v24 + 120);
  v122 = v24[128];
  if (*(unsigned __int8 *)(v23 + 128) == 255)
  {
    if (v122 == 255)
    {
      v128 = *v121;
      *(_BYTE *)(v23 + 128) = v24[128];
      *v120 = v128;
    }
    else
    {
      v126 = *v121;
      sub_27F80(*v121, v24[128]);
      *(_QWORD *)(v23 + 120) = v126;
      *(_BYTE *)(v23 + 128) = v122;
    }
  }
  else if (v122 == 255)
  {
    sub_108E0C(v23 + 120);
    v127 = v24[128];
    *v120 = *v121;
    *(_BYTE *)(v23 + 128) = v127;
  }
  else
  {
    v123 = *v121;
    sub_27F80(*v121, v24[128]);
    v124 = *(void **)(v23 + 120);
    *(_QWORD *)(v23 + 120) = v123;
    v125 = *(_BYTE *)(v23 + 128);
    *(_BYTE *)(v23 + 128) = v122;
    sub_27FA8(v124, v125);
  }
  *(_BYTE *)(v23 + 129) = v24[129];
  v129 = v25[11];
  v130 = v23 + v129;
  v131 = &v24[v129];
  v132 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 24))(v130, v131, v132);
  v133 = v25[12];
  v134 = (_QWORD *)(v23 + v133);
  v135 = &v24[v133];
  *v134 = *(_QWORD *)v135;
  v136 = *((_QWORD *)v135 + 1);
  v137 = v134[1];
  v134[1] = v136;
  swift_bridgeObjectRetain(v136);
  swift_bridgeObjectRelease(v137);
  *(_BYTE *)(v23 + v25[13]) = v24[v25[13]];
  *(_BYTE *)(v23 + v25[14]) = v24[v25[14]];
  *(_BYTE *)(v23 + v25[15]) = v24[v25[15]];
  v138 = v25[16];
  v139 = (_QWORD *)(v23 + v138);
  v140 = &v24[v138];
  *v139 = *(_QWORD *)v140;
  v141 = *((_QWORD *)v140 + 1);
  v142 = v139[1];
  v139[1] = v141;
  swift_bridgeObjectRetain(v141);
  swift_bridgeObjectRelease(v142);
  v26 = v290;
  a1 = v292;
LABEL_68:
  v143 = v21[9];
  v144 = (char *)v12 + v143;
  v145 = (unsigned __int8 *)v13 + v143;
  v146 = v27((uint64_t)v12 + v143, 1, v25);
  v147 = v27((uint64_t)v145, 1, v25);
  if (v146)
  {
    if (!v147)
    {
      v148 = v26;
      v293 = a1;
      *(_QWORD *)v144 = *(_QWORD *)v145;
      v149 = *((_QWORD *)v145 + 1);
      *((_QWORD *)v144 + 1) = v149;
      v150 = v145[32];
      swift_bridgeObjectRetain(v149);
      if (v150 == 255)
      {
        v164 = *((_OWORD *)v145 + 1);
        v144[32] = v145[32];
        *((_OWORD *)v144 + 1) = v164;
      }
      else
      {
        v151 = *((_QWORD *)v145 + 2);
        v152 = *((_QWORD *)v145 + 3);
        sub_108110(v151, v152, v150);
        *((_QWORD *)v144 + 2) = v151;
        *((_QWORD *)v144 + 3) = v152;
        v144[32] = v150;
      }
      *((_QWORD *)v144 + 5) = *((_QWORD *)v145 + 5);
      *((_QWORD *)v144 + 6) = *((_QWORD *)v145 + 6);
      v165 = (id *)(v145 + 56);
      v166 = v145[64];
      if (v166 == 255)
      {
        v168 = *v165;
        v144[64] = v145[64];
        *((_QWORD *)v144 + 7) = v168;
      }
      else
      {
        v167 = *v165;
        sub_27F80(*v165, v145[64]);
        *((_QWORD *)v144 + 7) = v167;
        v144[64] = v166;
      }
      v169 = (id *)(v145 + 72);
      v170 = v145[80];
      if (v170 == 255)
      {
        v172 = *v169;
        v144[80] = v145[80];
        *((_QWORD *)v144 + 9) = v172;
      }
      else
      {
        v171 = *v169;
        sub_27F80(*v169, v145[80]);
        *((_QWORD *)v144 + 9) = v171;
        v144[80] = v170;
      }
      v173 = (id *)(v145 + 88);
      v174 = v145[96];
      if (v174 == 255)
      {
        v176 = *v173;
        v144[96] = v145[96];
        *((_QWORD *)v144 + 11) = v176;
      }
      else
      {
        v175 = *v173;
        sub_27F80(*v173, v145[96]);
        *((_QWORD *)v144 + 11) = v175;
        v144[96] = v174;
      }
      v177 = (id *)(v145 + 104);
      v178 = v145[112];
      if (v178 == 255)
      {
        v180 = *v177;
        v144[112] = v145[112];
        *((_QWORD *)v144 + 13) = v180;
      }
      else
      {
        v179 = *v177;
        sub_27F80(*v177, v145[112]);
        *((_QWORD *)v144 + 13) = v179;
        v144[112] = v178;
      }
      v181 = (id *)(v145 + 120);
      v182 = v145[128];
      if (v182 == 255)
      {
        v184 = *v181;
        v144[128] = v145[128];
        *((_QWORD *)v144 + 15) = v184;
      }
      else
      {
        v183 = *v181;
        sub_27F80(*v181, v145[128]);
        *((_QWORD *)v144 + 15) = v183;
        v144[128] = v182;
      }
      v144[129] = v145[129];
      v185 = v25[11];
      v186 = &v144[v185];
      v187 = &v145[v185];
      v188 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v186, v187, v188);
      v189 = v25[12];
      v190 = &v144[v189];
      v191 = &v145[v189];
      *(_QWORD *)v190 = *(_QWORD *)v191;
      v192 = *((_QWORD *)v191 + 1);
      *((_QWORD *)v190 + 1) = v192;
      v144[v25[13]] = v145[v25[13]];
      v144[v25[14]] = v145[v25[14]];
      v144[v25[15]] = v145[v25[15]];
      v193 = v25[16];
      v194 = &v144[v193];
      v195 = &v145[v193];
      *(_QWORD *)v194 = *(_QWORD *)v195;
      v196 = *((_QWORD *)v195 + 1);
      *((_QWORD *)v194 + 1) = v196;
      v197 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v148 + 56);
      swift_bridgeObjectRetain(v192);
      v198 = swift_bridgeObjectRetain(v196);
      v197(v144, 0, 1, v25, v198);
LABEL_135:
      a1 = v293;
      goto LABEL_136;
    }
  }
  else
  {
    if (!v147)
    {
      v293 = a1;
      *(_QWORD *)v144 = *(_QWORD *)v145;
      v154 = *((_QWORD *)v145 + 1);
      v155 = *((_QWORD *)v144 + 1);
      *((_QWORD *)v144 + 1) = v154;
      swift_bridgeObjectRetain(v154);
      swift_bridgeObjectRelease(v155);
      v156 = (__int128 *)(v144 + 16);
      v157 = (__int128 *)(v145 + 16);
      v158 = v145[32];
      if (v144[32] == 255)
      {
        if (v158 == 255)
        {
          v202 = *v157;
          v144[32] = v145[32];
          *v156 = v202;
        }
        else
        {
          v199 = *((_QWORD *)v145 + 2);
          v200 = *((_QWORD *)v145 + 3);
          sub_108110(v199, v200, v145[32]);
          *((_QWORD *)v144 + 2) = v199;
          *((_QWORD *)v144 + 3) = v200;
          v144[32] = v158;
        }
      }
      else if (v158 == 255)
      {
        sub_108DD8((uint64_t)(v144 + 16));
        v201 = v145[32];
        *v156 = *v157;
        v144[32] = v201;
      }
      else
      {
        v159 = *((_QWORD *)v145 + 2);
        v160 = *((_QWORD *)v145 + 3);
        sub_108110(v159, v160, v145[32]);
        v161 = *((_QWORD *)v144 + 2);
        v162 = *((_QWORD *)v144 + 3);
        *((_QWORD *)v144 + 2) = v159;
        *((_QWORD *)v144 + 3) = v160;
        v163 = v144[32];
        v144[32] = v158;
        sub_108270(v161, v162, v163);
      }
      *((_QWORD *)v144 + 5) = *((_QWORD *)v145 + 5);
      *((_QWORD *)v144 + 6) = *((_QWORD *)v145 + 6);
      v203 = (id *)(v144 + 56);
      v204 = (id *)(v145 + 56);
      v205 = v145[64];
      if (v144[64] == 255)
      {
        if (v205 == 255)
        {
          v211 = *v204;
          v144[64] = v145[64];
          *v203 = v211;
        }
        else
        {
          v209 = *v204;
          sub_27F80(*v204, v145[64]);
          *((_QWORD *)v144 + 7) = v209;
          v144[64] = v205;
        }
      }
      else if (v205 == 255)
      {
        sub_108E0C((uint64_t)(v144 + 56));
        v210 = v145[64];
        *v203 = *v204;
        v144[64] = v210;
      }
      else
      {
        v206 = *v204;
        sub_27F80(*v204, v145[64]);
        v207 = (void *)*((_QWORD *)v144 + 7);
        *((_QWORD *)v144 + 7) = v206;
        v208 = v144[64];
        v144[64] = v205;
        sub_27FA8(v207, v208);
      }
      v212 = (id *)(v144 + 72);
      v213 = (id *)(v145 + 72);
      v214 = v145[80];
      if (v144[80] == 255)
      {
        if (v214 == 255)
        {
          v220 = *v213;
          v144[80] = v145[80];
          *v212 = v220;
        }
        else
        {
          v218 = *v213;
          sub_27F80(*v213, v145[80]);
          *((_QWORD *)v144 + 9) = v218;
          v144[80] = v214;
        }
      }
      else if (v214 == 255)
      {
        sub_108E0C((uint64_t)(v144 + 72));
        v219 = v145[80];
        *v212 = *v213;
        v144[80] = v219;
      }
      else
      {
        v215 = *v213;
        sub_27F80(*v213, v145[80]);
        v216 = (void *)*((_QWORD *)v144 + 9);
        *((_QWORD *)v144 + 9) = v215;
        v217 = v144[80];
        v144[80] = v214;
        sub_27FA8(v216, v217);
      }
      v221 = (id *)(v144 + 88);
      v222 = (id *)(v145 + 88);
      v223 = v145[96];
      if (v144[96] == 255)
      {
        if (v223 == 255)
        {
          v229 = *v222;
          v144[96] = v145[96];
          *v221 = v229;
        }
        else
        {
          v227 = *v222;
          sub_27F80(*v222, v145[96]);
          *((_QWORD *)v144 + 11) = v227;
          v144[96] = v223;
        }
      }
      else if (v223 == 255)
      {
        sub_108E0C((uint64_t)(v144 + 88));
        v228 = v145[96];
        *v221 = *v222;
        v144[96] = v228;
      }
      else
      {
        v224 = *v222;
        sub_27F80(*v222, v145[96]);
        v225 = (void *)*((_QWORD *)v144 + 11);
        *((_QWORD *)v144 + 11) = v224;
        v226 = v144[96];
        v144[96] = v223;
        sub_27FA8(v225, v226);
      }
      v230 = (id *)(v144 + 104);
      v231 = (id *)(v145 + 104);
      v232 = v145[112];
      if (v144[112] == 255)
      {
        if (v232 == 255)
        {
          v238 = *v231;
          v144[112] = v145[112];
          *v230 = v238;
        }
        else
        {
          v236 = *v231;
          sub_27F80(*v231, v145[112]);
          *((_QWORD *)v144 + 13) = v236;
          v144[112] = v232;
        }
      }
      else if (v232 == 255)
      {
        sub_108E0C((uint64_t)(v144 + 104));
        v237 = v145[112];
        *v230 = *v231;
        v144[112] = v237;
      }
      else
      {
        v233 = *v231;
        sub_27F80(*v231, v145[112]);
        v234 = (void *)*((_QWORD *)v144 + 13);
        *((_QWORD *)v144 + 13) = v233;
        v235 = v144[112];
        v144[112] = v232;
        sub_27FA8(v234, v235);
      }
      v239 = (id *)(v144 + 120);
      v240 = (id *)(v145 + 120);
      v241 = v145[128];
      if (v144[128] == 255)
      {
        if (v241 == 255)
        {
          v247 = *v240;
          v144[128] = v145[128];
          *v239 = v247;
        }
        else
        {
          v245 = *v240;
          sub_27F80(*v240, v145[128]);
          *((_QWORD *)v144 + 15) = v245;
          v144[128] = v241;
        }
      }
      else if (v241 == 255)
      {
        sub_108E0C((uint64_t)(v144 + 120));
        v246 = v145[128];
        *v239 = *v240;
        v144[128] = v246;
      }
      else
      {
        v242 = *v240;
        sub_27F80(*v240, v145[128]);
        v243 = (void *)*((_QWORD *)v144 + 15);
        *((_QWORD *)v144 + 15) = v242;
        v244 = v144[128];
        v144[128] = v241;
        sub_27FA8(v243, v244);
      }
      v144[129] = v145[129];
      v248 = v25[11];
      v249 = &v144[v248];
      v250 = &v145[v248];
      v251 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v251 - 8) + 24))(v249, v250, v251);
      v252 = v25[12];
      v253 = &v144[v252];
      v254 = &v145[v252];
      *(_QWORD *)v253 = *(_QWORD *)v254;
      v255 = *((_QWORD *)v254 + 1);
      v256 = *((_QWORD *)v253 + 1);
      *((_QWORD *)v253 + 1) = v255;
      swift_bridgeObjectRetain(v255);
      swift_bridgeObjectRelease(v256);
      v144[v25[13]] = v145[v25[13]];
      v144[v25[14]] = v145[v25[14]];
      v144[v25[15]] = v145[v25[15]];
      v257 = v25[16];
      v258 = &v144[v257];
      v259 = &v145[v257];
      *(_QWORD *)v258 = *(_QWORD *)v259;
      v260 = *((_QWORD *)v259 + 1);
      v261 = *((_QWORD *)v258 + 1);
      *((_QWORD *)v258 + 1) = v260;
      swift_bridgeObjectRetain(v260);
      swift_bridgeObjectRelease(v261);
      goto LABEL_135;
    }
    sub_FA4C((uint64_t)v144, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
LABEL_136:
  v262 = v21[10];
  v263 = (char *)v12 + v262;
  v264 = (char *)v13 + v262;
  v265 = *(_DWORD *)v264;
  v263[4] = v264[4];
  *(_DWORD *)v263 = v265;
  v266 = v21[11];
  v267 = (char *)v12 + v266;
  v268 = (char *)v13 + v266;
  v269 = *(_QWORD *)v268;
  v267[8] = v268[8];
  *(_QWORD *)v267 = v269;
  v270 = v21[12];
  v271 = (_QWORD *)((char *)v12 + v270);
  v272 = (_QWORD *)((char *)v13 + v270);
  *v271 = *v272;
  v273 = v272[1];
  v274 = v271[1];
  v271[1] = v273;
  swift_bridgeObjectRetain(v273);
  swift_bridgeObjectRelease(v274);
  *((_BYTE *)v12 + v21[13]) = *((_BYTE *)v13 + v21[13]);
  v275 = v21[14];
  v276 = (char *)v12 + v275;
  v277 = (char *)v13 + v275;
  v278 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 24))(v276, v277, v278);
  v279 = v21[15];
  v280 = (char *)v12 + v279;
  v281 = (char *)v13 + v279;
  v282 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v283 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v282 - 8) + 24);
  v283(v280, v281, v282);
  v283((char *)v12 + v21[16], (char *)v13 + v21[16], v282);
  v283((char *)v12 + v21[17], (char *)v13 + v21[17], v282);
  v284 = v21[18];
  v285 = (char *)v12 + v284;
  v286 = (char *)v13 + v284;
  v287 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v287 - 8) + 24))(v285, v286, v287);
  return a1;
}

uint64_t sub_258B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_OWORD *, uint64_t, int *);
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(_OWORD *, _QWORD, uint64_t, int *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;

  v3 = a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_OWORD *)v5 = *(_OWORD *)(a2 + v4);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(a2 + v4 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + v4 + 24);
  *(_QWORD *)(v5 + 40) = *(_QWORD *)(a2 + v4 + 40);
  v7 = (int *)type metadata accessor for ShowHero(0);
  v8 = v7[8];
  v9 = (_OWORD *)(v5 + v8);
  v10 = (_OWORD *)(v6 + v8);
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v10[1];
    *v9 = *v10;
    v9[1] = v15;
    *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
    *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
    *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
    *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
    *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
    *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
    *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
    *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
    *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
    v16 = v11[11];
    v54 = v3;
    v17 = v12;
    v18 = (char *)v9 + v16;
    v19 = (char *)v10 + v16;
    v20 = type metadata accessor for ArtworkCrop(0);
    v21 = v18;
    v12 = v17;
    v3 = v54;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v21, v19, v20);
    *(_OWORD *)((char *)v9 + v11[12]) = *(_OWORD *)((char *)v10 + v11[12]);
    *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
    *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
    *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
    *(_OWORD *)((char *)v9 + v11[16]) = *(_OWORD *)((char *)v10 + v11[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v22 = v7[9];
  v23 = (_OWORD *)(v5 + v22);
  v24 = (_OWORD *)(v6 + v22);
  if (v13((_OWORD *)(v6 + v22), 1, v11))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = v24[1];
    *v23 = *v24;
    v23[1] = v26;
    *((_BYTE *)v23 + 32) = *((_BYTE *)v24 + 32);
    *(_OWORD *)((char *)v23 + 40) = *(_OWORD *)((char *)v24 + 40);
    *((_QWORD *)v23 + 7) = *((_QWORD *)v24 + 7);
    *((_BYTE *)v23 + 64) = *((_BYTE *)v24 + 64);
    *(_OWORD *)((char *)v23 + 113) = *(_OWORD *)((char *)v24 + 113);
    *(_OWORD *)((char *)v23 + 104) = *(_OWORD *)((char *)v24 + 104);
    *(_OWORD *)((char *)v23 + 88) = *(_OWORD *)((char *)v24 + 88);
    *(_OWORD *)((char *)v23 + 72) = *(_OWORD *)((char *)v24 + 72);
    *((_BYTE *)v23 + 129) = *((_BYTE *)v24 + 129);
    v27 = v11[11];
    v28 = v3;
    v29 = v12;
    v30 = (char *)v23 + v27;
    v31 = (char *)v24 + v27;
    v32 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
    *(_OWORD *)((char *)v23 + v11[12]) = *(_OWORD *)((char *)v24 + v11[12]);
    *((_BYTE *)v23 + v11[13]) = *((_BYTE *)v24 + v11[13]);
    *((_BYTE *)v23 + v11[14]) = *((_BYTE *)v24 + v11[14]);
    *((_BYTE *)v23 + v11[15]) = *((_BYTE *)v24 + v11[15]);
    *(_OWORD *)((char *)v23 + v11[16]) = *(_OWORD *)((char *)v24 + v11[16]);
    v33 = *(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v29 + 56);
    v3 = v28;
    v33(v23, 0, 1, v11);
  }
  v34 = v7[10];
  v35 = v5 + v34;
  v36 = v6 + v34;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  v37 = v7[11];
  v38 = v5 + v37;
  v39 = v6 + v37;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_OWORD *)(v5 + v7[12]) = *(_OWORD *)(v6 + v7[12]);
  *(_BYTE *)(v5 + v7[13]) = *(_BYTE *)(v6 + v7[13]);
  v40 = v7[14];
  v41 = v5 + v40;
  v42 = v6 + v40;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  v44 = v7[15];
  v45 = v5 + v44;
  v46 = v6 + v44;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32);
  v48(v45, v46, v47);
  v48(v5 + v7[16], v6 + v7[16], v47);
  v48(v5 + v7[17], v6 + v7[17], v47);
  v49 = v7[18];
  v50 = v5 + v49;
  v51 = v6 + v49;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
  return v3;
}

_QWORD *sub_258F10(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  int v23;
  int v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, int *);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  int v90;
  int v91;
  void *v92;
  _QWORD *v93;
  int v94;
  int v95;
  void *v96;
  _QWORD *v97;
  int v98;
  int v99;
  void *v100;
  _QWORD *v101;
  int v102;
  int v103;
  void *v104;
  _QWORD *v105;
  int v106;
  int v107;
  void *v108;
  _QWORD *v109;
  int v110;
  int v111;
  void *v112;
  _QWORD *v113;
  int v114;
  int v115;
  void *v116;
  _QWORD *v117;
  int v118;
  int v119;
  void *v120;
  _QWORD *v121;
  int v122;
  int v123;
  void *v124;
  _QWORD *v125;
  int v126;
  int v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;

  v5 = a1;
  v6 = *(_BYTE *)(a2 + 8);
  v7 = *a1;
  *v5 = *(_QWORD *)a2;
  *((_BYTE *)v5 + 8) = v6;
  swift_release(v7);
  *((_BYTE *)v5 + 16) = *(_BYTE *)(a2 + 16);
  v8 = v5[3];
  v5[3] = *(_QWORD *)(a2 + 24);
  swift_release(v8);
  v9 = *(int *)(a3 + 24);
  v10 = (char *)v5 + v9;
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  v13 = *(_QWORD *)((char *)v5 + v9 + 8);
  *(_QWORD *)v10 = *(_QWORD *)(a2 + v9);
  *((_QWORD *)v10 + 1) = v12;
  swift_bridgeObjectRelease(v13);
  *((_OWORD *)v10 + 1) = *(_OWORD *)(v11 + 16);
  v14 = *((_QWORD *)v10 + 4);
  *((_QWORD *)v10 + 4) = *(_QWORD *)(v11 + 32);
  swift_bridgeObjectRelease(v14);
  v15 = (void *)*((_QWORD *)v10 + 5);
  *((_QWORD *)v10 + 5) = *(_QWORD *)(v11 + 40);

  v16 = (int *)type metadata accessor for ShowHero(0);
  v17 = v16[8];
  v18 = (uint64_t)&v10[v17];
  v19 = v11 + v17;
  v20 = (int *)type metadata accessor for ArtworkModel(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      v25 = *(_OWORD *)(v19 + 16);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *(_OWORD *)(v18 + 16) = v25;
      *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
      *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
      *(_QWORD *)(v18 + 56) = *(_QWORD *)(v19 + 56);
      *(_BYTE *)(v18 + 64) = *(_BYTE *)(v19 + 64);
      *(_OWORD *)(v18 + 113) = *(_OWORD *)(v19 + 113);
      *(_OWORD *)(v18 + 104) = *(_OWORD *)(v19 + 104);
      *(_OWORD *)(v18 + 88) = *(_OWORD *)(v19 + 88);
      *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
      *(_BYTE *)(v18 + 129) = *(_BYTE *)(v19 + 129);
      v26 = v20[11];
      v27 = v18 + v26;
      v161 = v16;
      v28 = v22;
      v29 = v5;
      v30 = v21;
      v31 = v19 + v26;
      v32 = type metadata accessor for ArtworkCrop(0);
      v33 = v31;
      v21 = v30;
      v5 = v29;
      v22 = v28;
      v16 = v161;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v27, v33, v32);
      *(_OWORD *)(v18 + v20[12]) = *(_OWORD *)(v19 + v20[12]);
      *(_BYTE *)(v18 + v20[13]) = *(_BYTE *)(v19 + v20[13]);
      *(_BYTE *)(v18 + v20[14]) = *(_BYTE *)(v19 + v20[14]);
      *(_BYTE *)(v18 + v20[15]) = *(_BYTE *)(v19 + v20[15]);
      *(_OWORD *)(v18 + v20[16]) = *(_OWORD *)(v19 + v20[16]);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    sub_FA4C(v18, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_6:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v18, (const void *)v19, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  v162 = v21;
  v75 = *(_QWORD *)(v19 + 8);
  v76 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v75;
  swift_bridgeObjectRelease(v76);
  v77 = (_OWORD *)(v19 + 16);
  v78 = *(unsigned __int8 *)(v18 + 32);
  if (v78 != 255)
  {
    v79 = *(unsigned __int8 *)(v19 + 32);
    if (v79 != 255)
    {
      v80 = *(_QWORD *)(v18 + 16);
      v81 = *(_QWORD *)(v18 + 24);
      *(_OWORD *)(v18 + 16) = *v77;
      *(_BYTE *)(v18 + 32) = v79;
      sub_108270(v80, v81, v78);
      goto LABEL_22;
    }
    sub_108DD8(v18 + 16);
  }
  *(_OWORD *)(v18 + 16) = *v77;
  *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
LABEL_22:
  *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
  v89 = (_QWORD *)(v19 + 56);
  v90 = *(unsigned __int8 *)(v18 + 64);
  if (v90 != 255)
  {
    v91 = *(unsigned __int8 *)(v19 + 64);
    if (v91 != 255)
    {
      v92 = *(void **)(v18 + 56);
      *(_QWORD *)(v18 + 56) = *v89;
      *(_BYTE *)(v18 + 64) = v91;
      sub_27FA8(v92, v90);
      goto LABEL_32;
    }
    sub_108E0C(v18 + 56);
  }
  *(_QWORD *)(v18 + 56) = *v89;
  *(_BYTE *)(v18 + 64) = *(_BYTE *)(v19 + 64);
LABEL_32:
  v97 = (_QWORD *)(v19 + 72);
  v98 = *(unsigned __int8 *)(v18 + 80);
  if (v98 != 255)
  {
    v99 = *(unsigned __int8 *)(v19 + 80);
    if (v99 != 255)
    {
      v100 = *(void **)(v18 + 72);
      *(_QWORD *)(v18 + 72) = *v97;
      *(_BYTE *)(v18 + 80) = v99;
      sub_27FA8(v100, v98);
      goto LABEL_42;
    }
    sub_108E0C(v18 + 72);
  }
  *(_QWORD *)(v18 + 72) = *v97;
  *(_BYTE *)(v18 + 80) = *(_BYTE *)(v19 + 80);
LABEL_42:
  v105 = (_QWORD *)(v19 + 88);
  v106 = *(unsigned __int8 *)(v18 + 96);
  if (v106 != 255)
  {
    v107 = *(unsigned __int8 *)(v19 + 96);
    if (v107 != 255)
    {
      v108 = *(void **)(v18 + 88);
      *(_QWORD *)(v18 + 88) = *v105;
      *(_BYTE *)(v18 + 96) = v107;
      sub_27FA8(v108, v106);
      goto LABEL_52;
    }
    sub_108E0C(v18 + 88);
  }
  *(_QWORD *)(v18 + 88) = *v105;
  *(_BYTE *)(v18 + 96) = *(_BYTE *)(v19 + 96);
LABEL_52:
  v113 = (_QWORD *)(v19 + 104);
  v114 = *(unsigned __int8 *)(v18 + 112);
  if (v114 != 255)
  {
    v115 = *(unsigned __int8 *)(v19 + 112);
    if (v115 != 255)
    {
      v116 = *(void **)(v18 + 104);
      *(_QWORD *)(v18 + 104) = *v113;
      *(_BYTE *)(v18 + 112) = v115;
      sub_27FA8(v116, v114);
      goto LABEL_62;
    }
    sub_108E0C(v18 + 104);
  }
  *(_QWORD *)(v18 + 104) = *v113;
  *(_BYTE *)(v18 + 112) = *(_BYTE *)(v19 + 112);
LABEL_62:
  v121 = (_QWORD *)(v19 + 120);
  v122 = *(unsigned __int8 *)(v18 + 128);
  if (v122 == 255)
  {
LABEL_71:
    *(_QWORD *)(v18 + 120) = *v121;
    *(_BYTE *)(v18 + 128) = *(_BYTE *)(v19 + 128);
    goto LABEL_72;
  }
  v123 = *(unsigned __int8 *)(v19 + 128);
  if (v123 == 255)
  {
    sub_108E0C(v18 + 120);
    goto LABEL_71;
  }
  v124 = *(void **)(v18 + 120);
  *(_QWORD *)(v18 + 120) = *v121;
  *(_BYTE *)(v18 + 128) = v123;
  sub_27FA8(v124, v122);
LABEL_72:
  *(_BYTE *)(v18 + 129) = *(_BYTE *)(v19 + 129);
  v129 = v20[11];
  v130 = v18 + v129;
  v131 = v19 + v129;
  v132 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 40))(v130, v131, v132);
  v133 = v20[12];
  v134 = (_QWORD *)(v18 + v133);
  v135 = (uint64_t *)(v19 + v133);
  v137 = *v135;
  v136 = v135[1];
  v138 = v134[1];
  *v134 = v137;
  v134[1] = v136;
  swift_bridgeObjectRelease(v138);
  *(_BYTE *)(v18 + v20[13]) = *(_BYTE *)(v19 + v20[13]);
  *(_BYTE *)(v18 + v20[14]) = *(_BYTE *)(v19 + v20[14]);
  *(_BYTE *)(v18 + v20[15]) = *(_BYTE *)(v19 + v20[15]);
  v139 = v20[16];
  v140 = (_QWORD *)(v18 + v139);
  v141 = (uint64_t *)(v19 + v139);
  v143 = *v141;
  v142 = v141[1];
  v144 = v140[1];
  *v140 = v143;
  v140[1] = v142;
  swift_bridgeObjectRelease(v144);
  v21 = v162;
LABEL_7:
  v35 = v16[9];
  v36 = (uint64_t)&v10[v35];
  v37 = v11 + v35;
  v38 = v22((uint64_t)&v10[v35], 1, v20);
  v39 = v22(v37, 1, v20);
  if (!v38)
  {
    if (v39)
    {
      sub_FA4C(v36, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      goto LABEL_12;
    }
    v82 = *(_QWORD *)(v37 + 8);
    v83 = *(_QWORD *)(v36 + 8);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *(_QWORD *)(v36 + 8) = v82;
    swift_bridgeObjectRelease(v83);
    v84 = (_OWORD *)(v37 + 16);
    v85 = *(unsigned __int8 *)(v36 + 32);
    if (v85 != 255)
    {
      v86 = *(unsigned __int8 *)(v37 + 32);
      if (v86 != 255)
      {
        v87 = *(_QWORD *)(v36 + 16);
        v88 = *(_QWORD *)(v36 + 24);
        *(_OWORD *)(v36 + 16) = *v84;
        *(_BYTE *)(v36 + 32) = v86;
        sub_108270(v87, v88, v85);
        goto LABEL_27;
      }
      sub_108DD8(v36 + 16);
    }
    *(_OWORD *)(v36 + 16) = *v84;
    *(_BYTE *)(v36 + 32) = *(_BYTE *)(v37 + 32);
LABEL_27:
    *(_OWORD *)(v36 + 40) = *(_OWORD *)(v37 + 40);
    v93 = (_QWORD *)(v37 + 56);
    v94 = *(unsigned __int8 *)(v36 + 64);
    if (v94 != 255)
    {
      v95 = *(unsigned __int8 *)(v37 + 64);
      if (v95 != 255)
      {
        v96 = *(void **)(v36 + 56);
        *(_QWORD *)(v36 + 56) = *v93;
        *(_BYTE *)(v36 + 64) = v95;
        sub_27FA8(v96, v94);
        goto LABEL_37;
      }
      sub_108E0C(v36 + 56);
    }
    *(_QWORD *)(v36 + 56) = *v93;
    *(_BYTE *)(v36 + 64) = *(_BYTE *)(v37 + 64);
LABEL_37:
    v101 = (_QWORD *)(v37 + 72);
    v102 = *(unsigned __int8 *)(v36 + 80);
    if (v102 != 255)
    {
      v103 = *(unsigned __int8 *)(v37 + 80);
      if (v103 != 255)
      {
        v104 = *(void **)(v36 + 72);
        *(_QWORD *)(v36 + 72) = *v101;
        *(_BYTE *)(v36 + 80) = v103;
        sub_27FA8(v104, v102);
        goto LABEL_47;
      }
      sub_108E0C(v36 + 72);
    }
    *(_QWORD *)(v36 + 72) = *v101;
    *(_BYTE *)(v36 + 80) = *(_BYTE *)(v37 + 80);
LABEL_47:
    v109 = (_QWORD *)(v37 + 88);
    v110 = *(unsigned __int8 *)(v36 + 96);
    if (v110 != 255)
    {
      v111 = *(unsigned __int8 *)(v37 + 96);
      if (v111 != 255)
      {
        v112 = *(void **)(v36 + 88);
        *(_QWORD *)(v36 + 88) = *v109;
        *(_BYTE *)(v36 + 96) = v111;
        sub_27FA8(v112, v110);
        goto LABEL_57;
      }
      sub_108E0C(v36 + 88);
    }
    *(_QWORD *)(v36 + 88) = *v109;
    *(_BYTE *)(v36 + 96) = *(_BYTE *)(v37 + 96);
LABEL_57:
    v117 = (_QWORD *)(v37 + 104);
    v118 = *(unsigned __int8 *)(v36 + 112);
    if (v118 != 255)
    {
      v119 = *(unsigned __int8 *)(v37 + 112);
      if (v119 != 255)
      {
        v120 = *(void **)(v36 + 104);
        *(_QWORD *)(v36 + 104) = *v117;
        *(_BYTE *)(v36 + 112) = v119;
        sub_27FA8(v120, v118);
        goto LABEL_67;
      }
      sub_108E0C(v36 + 104);
    }
    *(_QWORD *)(v36 + 104) = *v117;
    *(_BYTE *)(v36 + 112) = *(_BYTE *)(v37 + 112);
LABEL_67:
    v125 = (_QWORD *)(v37 + 120);
    v126 = *(unsigned __int8 *)(v36 + 128);
    if (v126 != 255)
    {
      v127 = *(unsigned __int8 *)(v37 + 128);
      if (v127 != 255)
      {
        v128 = *(void **)(v36 + 120);
        *(_QWORD *)(v36 + 120) = *v125;
        *(_BYTE *)(v36 + 128) = v127;
        sub_27FA8(v128, v126);
LABEL_75:
        *(_BYTE *)(v36 + 129) = *(_BYTE *)(v37 + 129);
        v145 = v20[11];
        v146 = v36 + v145;
        v147 = v37 + v145;
        v148 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 40))(v146, v147, v148);
        v149 = v20[12];
        v150 = (_QWORD *)(v36 + v149);
        v151 = (uint64_t *)(v37 + v149);
        v153 = *v151;
        v152 = v151[1];
        v154 = v150[1];
        *v150 = v153;
        v150[1] = v152;
        swift_bridgeObjectRelease(v154);
        *(_BYTE *)(v36 + v20[13]) = *(_BYTE *)(v37 + v20[13]);
        *(_BYTE *)(v36 + v20[14]) = *(_BYTE *)(v37 + v20[14]);
        *(_BYTE *)(v36 + v20[15]) = *(_BYTE *)(v37 + v20[15]);
        v155 = v20[16];
        v156 = (_QWORD *)(v36 + v155);
        v157 = (uint64_t *)(v37 + v155);
        v159 = *v157;
        v158 = v157[1];
        v160 = v156[1];
        *v156 = v159;
        v156[1] = v158;
        swift_bridgeObjectRelease(v160);
        goto LABEL_13;
      }
      sub_108E0C(v36 + 120);
    }
    *(_QWORD *)(v36 + 120) = *v125;
    *(_BYTE *)(v36 + 128) = *(_BYTE *)(v37 + 128);
    goto LABEL_75;
  }
  if (v39)
  {
LABEL_12:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v36, (const void *)v37, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_13;
  }
  v40 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v40;
  *(_BYTE *)(v36 + 32) = *(_BYTE *)(v37 + 32);
  *(_OWORD *)(v36 + 40) = *(_OWORD *)(v37 + 40);
  *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
  *(_BYTE *)(v36 + 64) = *(_BYTE *)(v37 + 64);
  *(_OWORD *)(v36 + 113) = *(_OWORD *)(v37 + 113);
  *(_OWORD *)(v36 + 104) = *(_OWORD *)(v37 + 104);
  *(_OWORD *)(v36 + 88) = *(_OWORD *)(v37 + 88);
  *(_OWORD *)(v36 + 72) = *(_OWORD *)(v37 + 72);
  *(_BYTE *)(v36 + 129) = *(_BYTE *)(v37 + 129);
  v41 = v20[11];
  v42 = v36 + v41;
  v43 = v5;
  v44 = v21;
  v45 = v37 + v41;
  v46 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v42, v45, v46);
  *(_OWORD *)(v36 + v20[12]) = *(_OWORD *)(v37 + v20[12]);
  *(_BYTE *)(v36 + v20[13]) = *(_BYTE *)(v37 + v20[13]);
  *(_BYTE *)(v36 + v20[14]) = *(_BYTE *)(v37 + v20[14]);
  *(_BYTE *)(v36 + v20[15]) = *(_BYTE *)(v37 + v20[15]);
  *(_OWORD *)(v36 + v20[16]) = *(_OWORD *)(v37 + v20[16]);
  v47 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v44 + 56);
  v5 = v43;
  v47(v36, 0, 1, v20);
LABEL_13:
  v49 = v16[10];
  v50 = &v10[v49];
  v51 = v11 + v49;
  *(_DWORD *)v50 = *(_DWORD *)v51;
  v50[4] = *(_BYTE *)(v51 + 4);
  v52 = v16[11];
  v53 = &v10[v52];
  v54 = v11 + v52;
  v53[8] = *(_BYTE *)(v54 + 8);
  *(_QWORD *)v53 = *(_QWORD *)v54;
  v55 = v16[12];
  v56 = &v10[v55];
  v57 = (uint64_t *)(v11 + v55);
  v59 = *v57;
  v58 = v57[1];
  v60 = *((_QWORD *)v56 + 1);
  *(_QWORD *)v56 = v59;
  *((_QWORD *)v56 + 1) = v58;
  swift_bridgeObjectRelease(v60);
  v10[v16[13]] = *(_BYTE *)(v11 + v16[13]);
  v61 = v16[14];
  v62 = &v10[v61];
  v63 = v11 + v61;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v62, v63, v64);
  v65 = v16[15];
  v66 = &v10[v65];
  v67 = v11 + v65;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v69 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 40);
  v69(v66, v67, v68);
  v69(&v10[v16[16]], v11 + v16[16], v68);
  v69(&v10[v16[17]], v11 + v16[17], v68);
  v70 = v16[18];
  v71 = &v10[v70];
  v72 = v11 + v70;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 40))(v71, v72, v73);
  return v5;
}

uint64_t sub_2598DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2598E8);
}

uint64_t sub_2598E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ShowHero(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_259970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_25997C);
}

uint64_t sub_25997C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = type metadata accessor for ShowHero(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2599F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\t";
  v4[1] = &unk_3024B0;
  result = type metadata accessor for ShowHero(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_259A6C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD, _QWORD, _QWORD);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  void (*v51)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  id *v61;
  int v62;
  id v63;
  id *v64;
  int v65;
  id v66;
  id *v67;
  int v68;
  id v69;
  id *v70;
  int v71;
  id v72;
  id *v73;
  int v74;
  id v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  void (*v88)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int (*v135)(_QWORD, _QWORD, _QWORD);
  uint64_t v136;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a2[4];
    v9 = (void *)a2[5];
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    v10 = (int *)type metadata accessor for ShowHero(0);
    v11 = v10[8];
    v12 = (_QWORD *)((char *)v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = (int *)type metadata accessor for ArtworkModel(0);
    v136 = *((_QWORD *)v14 - 1);
    v15 = v7;
    v16 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v136 + 48);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v8);
    v17 = v9;
    if (v16(v13, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v135 = v16;
      v20 = v13[1];
      *v12 = *v13;
      v12[1] = v20;
      v21 = *((unsigned __int8 *)v13 + 32);
      swift_bridgeObjectRetain(v20);
      if (v21 == 255)
      {
        *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
        *((_BYTE *)v12 + 32) = *((_BYTE *)v13 + 32);
      }
      else
      {
        v22 = v13[2];
        v23 = v13[3];
        sub_108110(v22, v23, v21);
        v12[2] = v22;
        v12[3] = v23;
        *((_BYTE *)v12 + 32) = v21;
      }
      *(_OWORD *)(v12 + 5) = *(_OWORD *)(v13 + 5);
      v24 = (id *)(v13 + 7);
      v25 = *((unsigned __int8 *)v13 + 64);
      if (v25 == 255)
      {
        v12[7] = *v24;
        *((_BYTE *)v12 + 64) = *((_BYTE *)v13 + 64);
      }
      else
      {
        v26 = *v24;
        sub_27F80(*v24, *((_BYTE *)v13 + 64));
        v12[7] = v26;
        *((_BYTE *)v12 + 64) = v25;
      }
      v27 = (id *)(v13 + 9);
      v28 = *((unsigned __int8 *)v13 + 80);
      if (v28 == 255)
      {
        v12[9] = *v27;
        *((_BYTE *)v12 + 80) = *((_BYTE *)v13 + 80);
      }
      else
      {
        v29 = *v27;
        sub_27F80(*v27, *((_BYTE *)v13 + 80));
        v12[9] = v29;
        *((_BYTE *)v12 + 80) = v28;
      }
      v30 = (id *)(v13 + 11);
      v31 = *((unsigned __int8 *)v13 + 96);
      if (v31 == 255)
      {
        v12[11] = *v30;
        *((_BYTE *)v12 + 96) = *((_BYTE *)v13 + 96);
      }
      else
      {
        v32 = *v30;
        sub_27F80(*v30, *((_BYTE *)v13 + 96));
        v12[11] = v32;
        *((_BYTE *)v12 + 96) = v31;
      }
      v33 = (id *)(v13 + 13);
      v34 = *((unsigned __int8 *)v13 + 112);
      if (v34 == 255)
      {
        v12[13] = *v33;
        *((_BYTE *)v12 + 112) = *((_BYTE *)v13 + 112);
      }
      else
      {
        v35 = *v33;
        sub_27F80(*v33, *((_BYTE *)v13 + 112));
        v12[13] = v35;
        *((_BYTE *)v12 + 112) = v34;
      }
      v36 = (id *)(v13 + 15);
      v37 = *((unsigned __int8 *)v13 + 128);
      if (v37 == 255)
      {
        v12[15] = *v36;
        *((_BYTE *)v12 + 128) = *((_BYTE *)v13 + 128);
      }
      else
      {
        v38 = *v36;
        sub_27F80(*v36, *((_BYTE *)v13 + 128));
        v12[15] = v38;
        *((_BYTE *)v12 + 128) = v37;
      }
      *((_BYTE *)v12 + 129) = *((_BYTE *)v13 + 129);
      v39 = v14[11];
      v40 = (char *)v12 + v39;
      v41 = (char *)v13 + v39;
      v42 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      v43 = v14[12];
      v44 = (_QWORD *)((char *)v12 + v43);
      v45 = (_QWORD *)((char *)v13 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      *((_BYTE *)v12 + v14[13]) = *((_BYTE *)v13 + v14[13]);
      *((_BYTE *)v12 + v14[14]) = *((_BYTE *)v13 + v14[14]);
      *((_BYTE *)v12 + v14[15]) = *((_BYTE *)v13 + v14[15]);
      v47 = v14[16];
      v48 = (_QWORD *)((char *)v12 + v47);
      v49 = (_QWORD *)((char *)v13 + v47);
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      v51 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v136 + 56);
      swift_bridgeObjectRetain(v46);
      v52 = swift_bridgeObjectRetain(v50);
      v51(v12, 0, 1, v14, v52);
      v16 = v135;
    }
    v53 = v10[9];
    v54 = (_QWORD *)((char *)v4 + v53);
    v55 = (uint64_t *)((char *)a2 + v53);
    if (v16((char *)a2 + v53, 1, v14))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v57 = v55[1];
      *v54 = *v55;
      v54[1] = v57;
      v58 = *((unsigned __int8 *)v55 + 32);
      swift_bridgeObjectRetain(v57);
      if (v58 == 255)
      {
        *((_OWORD *)v54 + 1) = *((_OWORD *)v55 + 1);
        *((_BYTE *)v54 + 32) = *((_BYTE *)v55 + 32);
      }
      else
      {
        v59 = v55[2];
        v60 = v55[3];
        sub_108110(v59, v60, v58);
        v54[2] = v59;
        v54[3] = v60;
        *((_BYTE *)v54 + 32) = v58;
      }
      *(_OWORD *)(v54 + 5) = *(_OWORD *)(v55 + 5);
      v61 = (id *)(v55 + 7);
      v62 = *((unsigned __int8 *)v55 + 64);
      if (v62 == 255)
      {
        v54[7] = *v61;
        *((_BYTE *)v54 + 64) = *((_BYTE *)v55 + 64);
      }
      else
      {
        v63 = *v61;
        sub_27F80(*v61, *((_BYTE *)v55 + 64));
        v54[7] = v63;
        *((_BYTE *)v54 + 64) = v62;
      }
      v64 = (id *)(v55 + 9);
      v65 = *((unsigned __int8 *)v55 + 80);
      if (v65 == 255)
      {
        v54[9] = *v64;
        *((_BYTE *)v54 + 80) = *((_BYTE *)v55 + 80);
      }
      else
      {
        v66 = *v64;
        sub_27F80(*v64, *((_BYTE *)v55 + 80));
        v54[9] = v66;
        *((_BYTE *)v54 + 80) = v65;
      }
      v67 = (id *)(v55 + 11);
      v68 = *((unsigned __int8 *)v55 + 96);
      if (v68 == 255)
      {
        v54[11] = *v67;
        *((_BYTE *)v54 + 96) = *((_BYTE *)v55 + 96);
      }
      else
      {
        v69 = *v67;
        sub_27F80(*v67, *((_BYTE *)v55 + 96));
        v54[11] = v69;
        *((_BYTE *)v54 + 96) = v68;
      }
      v70 = (id *)(v55 + 13);
      v71 = *((unsigned __int8 *)v55 + 112);
      if (v71 == 255)
      {
        v54[13] = *v70;
        *((_BYTE *)v54 + 112) = *((_BYTE *)v55 + 112);
      }
      else
      {
        v72 = *v70;
        sub_27F80(*v70, *((_BYTE *)v55 + 112));
        v54[13] = v72;
        *((_BYTE *)v54 + 112) = v71;
      }
      v73 = (id *)(v55 + 15);
      v74 = *((unsigned __int8 *)v55 + 128);
      if (v74 == 255)
      {
        v54[15] = *v73;
        *((_BYTE *)v54 + 128) = *((_BYTE *)v55 + 128);
      }
      else
      {
        v75 = *v73;
        sub_27F80(*v73, *((_BYTE *)v55 + 128));
        v54[15] = v75;
        *((_BYTE *)v54 + 128) = v74;
      }
      *((_BYTE *)v54 + 129) = *((_BYTE *)v55 + 129);
      v76 = v14[11];
      v77 = (char *)v54 + v76;
      v78 = (char *)v55 + v76;
      v79 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
      v80 = v14[12];
      v81 = (_QWORD *)((char *)v54 + v80);
      v82 = (_QWORD *)((char *)v55 + v80);
      v83 = v82[1];
      *v81 = *v82;
      v81[1] = v83;
      *((_BYTE *)v54 + v14[13]) = *((_BYTE *)v55 + v14[13]);
      *((_BYTE *)v54 + v14[14]) = *((_BYTE *)v55 + v14[14]);
      *((_BYTE *)v54 + v14[15]) = *((_BYTE *)v55 + v14[15]);
      v84 = v14[16];
      v85 = (_QWORD *)((char *)v54 + v84);
      v86 = (_QWORD *)((char *)v55 + v84);
      v87 = v86[1];
      *v85 = *v86;
      v85[1] = v87;
      v88 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v136 + 56);
      swift_bridgeObjectRetain(v83);
      v89 = swift_bridgeObjectRetain(v87);
      v88(v54, 0, 1, v14, v89);
    }
    v90 = v10[10];
    v91 = (char *)v4 + v90;
    v92 = (uint64_t)a2 + v90;
    *(_DWORD *)v91 = *(_DWORD *)v92;
    v91[4] = *(_BYTE *)(v92 + 4);
    v93 = v10[11];
    v94 = (char *)v4 + v93;
    v95 = (uint64_t)a2 + v93;
    v94[8] = *(_BYTE *)(v95 + 8);
    *(_QWORD *)v94 = *(_QWORD *)v95;
    v96 = v10[12];
    v97 = (_QWORD *)((char *)v4 + v96);
    v98 = (uint64_t *)((char *)a2 + v96);
    v99 = v98[1];
    *v97 = *v98;
    v97[1] = v99;
    *((_BYTE *)v4 + v10[13]) = *((_BYTE *)a2 + v10[13]);
    v100 = v10[14];
    v101 = (char *)v4 + v100;
    v102 = (uint64_t)a2 + v100;
    swift_bridgeObjectRetain(v99);
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
    v104 = v10[15];
    v105 = (char *)v4 + v104;
    v106 = (uint64_t)a2 + v104;
    v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
    v108 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
    v108(v105, v106, v107);
    v108((char *)v4 + v10[16], (uint64_t)a2 + v10[16], v107);
    v108((char *)v4 + v10[17], (uint64_t)a2 + v10[17], v107);
    v109 = v10[18];
    v110 = (char *)v4 + v109;
    v111 = (uint64_t)a2 + v109;
    v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v110, v111, v112);
    v113 = a3[5];
    v114 = a3[6];
    v115 = *(uint64_t *)((char *)a2 + v113);
    *(_QWORD *)((char *)v4 + v113) = v115;
    v116 = (_QWORD *)((char *)v4 + v114);
    v117 = (uint64_t *)((char *)a2 + v114);
    v118 = v117[1];
    *v116 = *v117;
    v116[1] = v118;
    v119 = a3[7];
    v120 = a3[8];
    v121 = (char *)v4 + v119;
    v122 = (uint64_t *)((char *)a2 + v119);
    v123 = *v122;
    LOBYTE(v122) = *((_BYTE *)v122 + 8);
    *(_QWORD *)v121 = v123;
    v121[8] = (char)v122;
    v124 = (_QWORD *)((char *)v4 + v120);
    v125 = (uint64_t *)((char *)a2 + v120);
    swift_retain(v115);
    swift_retain(v118);
    swift_retain(v123);
    v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED8);
    if (swift_getEnumCaseMultiPayload(v125, v126) == 1)
    {
      v127 = type metadata accessor for ImpressionMetrics(0);
      v128 = *(_QWORD *)(v127 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v128 + 48))(v125, 1, v127))
      {
        v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
        memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v128 + 16))(v124, v125, v127);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v124, 0, 1, v127);
      }
      v131 = v124;
      v132 = v126;
      v133 = 1;
    }
    else
    {
      v130 = *v125;
      *v124 = *v125;
      swift_retain(v130);
      v131 = v124;
      v132 = v126;
      v133 = 0;
    }
    swift_storeEnumTagMultiPayload(v131, v132, v133);
  }
  return v4;
}

void sub_25A280(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  int *v6;
  unsigned int (*v7)(uint64_t, uint64_t, int *);
  __n128 v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));

  v4 = (int *)type metadata accessor for ShowHero(0);
  v5 = a1 + v4[8];
  v6 = (int *)type metadata accessor for ArtworkModel(0);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
    v9 = *(unsigned __int8 *)(v5 + 32);
    if (v9 != 255)
      sub_108270(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v9);
    v10 = *(unsigned __int8 *)(v5 + 64);
    if (v10 != 255)
      sub_27FA8(*(id *)(v5 + 56), v10);
    v11 = *(unsigned __int8 *)(v5 + 80);
    if (v11 != 255)
      sub_27FA8(*(id *)(v5 + 72), v11);
    v12 = *(unsigned __int8 *)(v5 + 96);
    if (v12 != 255)
      sub_27FA8(*(id *)(v5 + 88), v12);
    v13 = *(unsigned __int8 *)(v5 + 112);
    if (v13 != 255)
      sub_27FA8(*(id *)(v5 + 104), v13);
    v14 = *(unsigned __int8 *)(v5 + 128);
    if (v14 != 255)
      sub_27FA8(*(id *)(v5 + 120), v14);
    v15 = v5 + v6[11];
    v16 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[12] + 8));
    v8 = swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[16] + 8));
  }
  v17 = a1 + v4[9];
  if (!((unsigned int (*)(uint64_t, uint64_t, int *, __n128))v7)(v17, 1, v6, v8))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8));
    v18 = *(unsigned __int8 *)(v17 + 32);
    if (v18 != 255)
      sub_108270(*(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24), v18);
    v19 = *(unsigned __int8 *)(v17 + 64);
    if (v19 != 255)
      sub_27FA8(*(id *)(v17 + 56), v19);
    v20 = *(unsigned __int8 *)(v17 + 80);
    if (v20 != 255)
      sub_27FA8(*(id *)(v17 + 72), v20);
    v21 = *(unsigned __int8 *)(v17 + 96);
    if (v21 != 255)
      sub_27FA8(*(id *)(v17 + 88), v21);
    v22 = *(unsigned __int8 *)(v17 + 112);
    if (v22 != 255)
      sub_27FA8(*(id *)(v17 + 104), v22);
    v23 = *(unsigned __int8 *)(v17 + 128);
    if (v23 != 255)
      sub_27FA8(*(id *)(v17 + 120), v23);
    v24 = v17 + v6[11];
    v25 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + v6[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + v6[16] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[12] + 8));
  v26 = a1 + v4[14];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  v28 = a1 + v4[15];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
  v30(v28, v29);
  v30(a1 + v4[16], v29);
  v30(a1 + v4[17], v29);
  v31 = a1 + v4[18];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  swift_release(*(_QWORD *)(a1 + a2[5]));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  swift_release(*(_QWORD *)(a1 + a2[7]));
  v33 = (_QWORD *)(a1 + a2[8]);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED8);
  if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
  {
    v35 = type metadata accessor for ImpressionMetrics(0);
    v36 = *(_QWORD *)(v35 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35))
      (*(void (**)(_QWORD *, uint64_t))(v36 + 8))(v33, v35);
  }
  else
  {
    swift_release(*v33);
  }
}

uint64_t sub_25A614(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  id v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  id *v57;
  int v58;
  id v59;
  id *v60;
  int v61;
  id v62;
  id *v63;
  int v64;
  id v65;
  id *v66;
  int v67;
  id v68;
  id *v69;
  int v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  void (*v84)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = (int *)type metadata accessor for ShowHero(0);
  v9 = v8[8];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = (int *)type metadata accessor for ArtworkModel(0);
  v129 = *((_QWORD *)v12 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v129 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v14 = v7;
  if (v13(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v11[1];
    *v10 = *v11;
    v10[1] = v16;
    v17 = *((unsigned __int8 *)v11 + 32);
    swift_bridgeObjectRetain(v16);
    if (v17 == 255)
    {
      *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
      *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
    }
    else
    {
      v18 = v11[2];
      v19 = v11[3];
      sub_108110(v18, v19, v17);
      v10[2] = v18;
      v10[3] = v19;
      *((_BYTE *)v10 + 32) = v17;
    }
    *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
    v20 = (id *)(v11 + 7);
    v21 = *((unsigned __int8 *)v11 + 64);
    if (v21 == 255)
    {
      v10[7] = *v20;
      *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
    }
    else
    {
      v22 = *v20;
      sub_27F80(*v20, *((_BYTE *)v11 + 64));
      v10[7] = v22;
      *((_BYTE *)v10 + 64) = v21;
    }
    v23 = (id *)(v11 + 9);
    v24 = *((unsigned __int8 *)v11 + 80);
    if (v24 == 255)
    {
      v10[9] = *v23;
      *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
    }
    else
    {
      v25 = *v23;
      sub_27F80(*v23, *((_BYTE *)v11 + 80));
      v10[9] = v25;
      *((_BYTE *)v10 + 80) = v24;
    }
    v26 = (id *)(v11 + 11);
    v27 = *((unsigned __int8 *)v11 + 96);
    if (v27 == 255)
    {
      v10[11] = *v26;
      *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
    }
    else
    {
      v28 = *v26;
      sub_27F80(*v26, *((_BYTE *)v11 + 96));
      v10[11] = v28;
      *((_BYTE *)v10 + 96) = v27;
    }
    v29 = (id *)(v11 + 13);
    v30 = *((unsigned __int8 *)v11 + 112);
    if (v30 == 255)
    {
      v10[13] = *v29;
      *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
    }
    else
    {
      v31 = *v29;
      sub_27F80(*v29, *((_BYTE *)v11 + 112));
      v10[13] = v31;
      *((_BYTE *)v10 + 112) = v30;
    }
    v32 = (id *)(v11 + 15);
    v33 = *((unsigned __int8 *)v11 + 128);
    if (v33 == 255)
    {
      v10[15] = *v32;
      *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
    }
    else
    {
      v34 = *v32;
      sub_27F80(*v32, *((_BYTE *)v11 + 128));
      v10[15] = v34;
      *((_BYTE *)v10 + 128) = v33;
    }
    *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
    v35 = v12[11];
    v36 = (char *)v10 + v35;
    v37 = (char *)v11 + v35;
    v38 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    v39 = v12[12];
    v40 = (_QWORD *)((char *)v10 + v39);
    v41 = (_QWORD *)((char *)v11 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
    *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
    *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
    v43 = v12[16];
    v44 = (_QWORD *)((char *)v10 + v43);
    v45 = (_QWORD *)((char *)v11 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v129 + 56);
    swift_bridgeObjectRetain(v42);
    v48 = swift_bridgeObjectRetain(v46);
    v47(v10, 0, 1, v12, v48);
  }
  v49 = v8[9];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  if (v13((_QWORD *)(a2 + v49), 1, v12))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v53 = v51[1];
    *v50 = *v51;
    v50[1] = v53;
    v54 = *((unsigned __int8 *)v51 + 32);
    swift_bridgeObjectRetain(v53);
    if (v54 == 255)
    {
      *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
      *((_BYTE *)v50 + 32) = *((_BYTE *)v51 + 32);
    }
    else
    {
      v55 = v51[2];
      v56 = v51[3];
      sub_108110(v55, v56, v54);
      v50[2] = v55;
      v50[3] = v56;
      *((_BYTE *)v50 + 32) = v54;
    }
    *(_OWORD *)(v50 + 5) = *(_OWORD *)(v51 + 5);
    v57 = (id *)(v51 + 7);
    v58 = *((unsigned __int8 *)v51 + 64);
    if (v58 == 255)
    {
      v50[7] = *v57;
      *((_BYTE *)v50 + 64) = *((_BYTE *)v51 + 64);
    }
    else
    {
      v59 = *v57;
      sub_27F80(*v57, *((_BYTE *)v51 + 64));
      v50[7] = v59;
      *((_BYTE *)v50 + 64) = v58;
    }
    v60 = (id *)(v51 + 9);
    v61 = *((unsigned __int8 *)v51 + 80);
    if (v61 == 255)
    {
      v50[9] = *v60;
      *((_BYTE *)v50 + 80) = *((_BYTE *)v51 + 80);
    }
    else
    {
      v62 = *v60;
      sub_27F80(*v60, *((_BYTE *)v51 + 80));
      v50[9] = v62;
      *((_BYTE *)v50 + 80) = v61;
    }
    v63 = (id *)(v51 + 11);
    v64 = *((unsigned __int8 *)v51 + 96);
    if (v64 == 255)
    {
      v50[11] = *v63;
      *((_BYTE *)v50 + 96) = *((_BYTE *)v51 + 96);
    }
    else
    {
      v65 = *v63;
      sub_27F80(*v63, *((_BYTE *)v51 + 96));
      v50[11] = v65;
      *((_BYTE *)v50 + 96) = v64;
    }
    v66 = (id *)(v51 + 13);
    v67 = *((unsigned __int8 *)v51 + 112);
    if (v67 == 255)
    {
      v50[13] = *v66;
      *((_BYTE *)v50 + 112) = *((_BYTE *)v51 + 112);
    }
    else
    {
      v68 = *v66;
      sub_27F80(*v66, *((_BYTE *)v51 + 112));
      v50[13] = v68;
      *((_BYTE *)v50 + 112) = v67;
    }
    v69 = (id *)(v51 + 15);
    v70 = *((unsigned __int8 *)v51 + 128);
    if (v70 == 255)
    {
      v50[15] = *v69;
      *((_BYTE *)v50 + 128) = *((_BYTE *)v51 + 128);
    }
    else
    {
      v71 = *v69;
      sub_27F80(*v69, *((_BYTE *)v51 + 128));
      v50[15] = v71;
      *((_BYTE *)v50 + 128) = v70;
    }
    *((_BYTE *)v50 + 129) = *((_BYTE *)v51 + 129);
    v72 = v12[11];
    v73 = (char *)v50 + v72;
    v74 = (char *)v51 + v72;
    v75 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    v76 = v12[12];
    v77 = (_QWORD *)((char *)v50 + v76);
    v78 = (_QWORD *)((char *)v51 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    *((_BYTE *)v50 + v12[13]) = *((_BYTE *)v51 + v12[13]);
    *((_BYTE *)v50 + v12[14]) = *((_BYTE *)v51 + v12[14]);
    *((_BYTE *)v50 + v12[15]) = *((_BYTE *)v51 + v12[15]);
    v80 = v12[16];
    v81 = (_QWORD *)((char *)v50 + v80);
    v82 = (_QWORD *)((char *)v51 + v80);
    v83 = v82[1];
    *v81 = *v82;
    v81[1] = v83;
    v84 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v129 + 56);
    swift_bridgeObjectRetain(v79);
    v85 = swift_bridgeObjectRetain(v83);
    v84(v50, 0, 1, v12, v85);
  }
  v86 = v8[10];
  v87 = a1 + v86;
  v88 = a2 + v86;
  *(_DWORD *)v87 = *(_DWORD *)v88;
  *(_BYTE *)(v87 + 4) = *(_BYTE *)(v88 + 4);
  v89 = v8[11];
  v90 = a1 + v89;
  v91 = a2 + v89;
  *(_BYTE *)(v90 + 8) = *(_BYTE *)(v91 + 8);
  *(_QWORD *)v90 = *(_QWORD *)v91;
  v92 = v8[12];
  v93 = (_QWORD *)(a1 + v92);
  v94 = (_QWORD *)(a2 + v92);
  v95 = v94[1];
  *v93 = *v94;
  v93[1] = v95;
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  v96 = v8[14];
  v97 = a1 + v96;
  v98 = a2 + v96;
  swift_bridgeObjectRetain(v95);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
  v100 = v8[15];
  v101 = a1 + v100;
  v102 = a2 + v100;
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
  v104(v101, v102, v103);
  v104(a1 + v8[16], a2 + v8[16], v103);
  v104(a1 + v8[17], a2 + v8[17], v103);
  v105 = v8[18];
  v106 = a1 + v105;
  v107 = a2 + v105;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
  v109 = a3[5];
  v110 = a3[6];
  v111 = *(_QWORD *)(a2 + v109);
  *(_QWORD *)(a1 + v109) = v111;
  v112 = (_QWORD *)(a1 + v110);
  v113 = (_QWORD *)(a2 + v110);
  v114 = v113[1];
  *v112 = *v113;
  v112[1] = v114;
  v115 = a3[7];
  v116 = a3[8];
  v117 = a1 + v115;
  v118 = (uint64_t *)(a2 + v115);
  v119 = *v118;
  LOBYTE(v118) = *((_BYTE *)v118 + 8);
  *(_QWORD *)v117 = v119;
  *(_BYTE *)(v117 + 8) = (_BYTE)v118;
  v120 = (uint64_t *)(a1 + v116);
  v121 = (uint64_t *)(a2 + v116);
  swift_retain(v111);
  swift_retain(v114);
  swift_retain(v119);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED8);
  if (swift_getEnumCaseMultiPayload(v121, v122) == 1)
  {
    v123 = type metadata accessor for ImpressionMetrics(0);
    v124 = *(_QWORD *)(v123 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v124 + 48))(v121, 1, v123))
    {
      v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
      memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
      v126 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v124 + 16))(v120, v121, v123);
      v126 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v120, 0, 1, v123);
    }
  }
  else
  {
    v127 = *v121;
    *v120 = *v121;
    swift_retain(v127);
    v126 = 0;
  }
  swift_storeEnumTagMultiPayload(v120, v122, v126);
  return a1;
}

_QWORD *sub_25ADF4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, int *);
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  __int128 v37;
  id *v38;
  int v39;
  id v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  id v53;
  id *v54;
  int v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(uint64_t, _QWORD, uint64_t, int *, __n128);
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __int128 v75;
  id *v76;
  id *v77;
  int v78;
  id v79;
  void *v80;
  char v81;
  id v82;
  char v83;
  id v84;
  id *v85;
  id *v86;
  int v87;
  id v88;
  void *v89;
  char v90;
  id v91;
  char v92;
  id v93;
  id *v94;
  id *v95;
  int v96;
  id v97;
  void *v98;
  char v99;
  id v100;
  char v101;
  id v102;
  id *v103;
  id *v104;
  int v105;
  id v106;
  void *v107;
  char v108;
  id v109;
  char v110;
  id v111;
  id *v112;
  id *v113;
  int v114;
  id v115;
  void *v116;
  char v117;
  id v118;
  char v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 *v148;
  __int128 *v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unsigned __int8 v155;
  __int128 v156;
  id *v157;
  int v158;
  id v159;
  id v160;
  id *v161;
  int v162;
  id v163;
  id v164;
  id *v165;
  int v166;
  id v167;
  id v168;
  id *v169;
  int v170;
  id v171;
  id v172;
  id *v173;
  int v174;
  id v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  char *v187;
  uint64_t v188;
  void (*v189)(uint64_t, _QWORD, uint64_t, int *, __n128);
  __n128 v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  __int128 v194;
  id *v195;
  id *v196;
  int v197;
  id v198;
  void *v199;
  char v200;
  id v201;
  char v202;
  id v203;
  id *v204;
  id *v205;
  int v206;
  id v207;
  void *v208;
  char v209;
  id v210;
  char v211;
  id v212;
  id *v213;
  id *v214;
  int v215;
  id v216;
  void *v217;
  char v218;
  id v219;
  char v220;
  id v221;
  id *v222;
  id *v223;
  int v224;
  id v225;
  void *v226;
  char v227;
  id v228;
  char v229;
  id v230;
  id *v231;
  id *v232;
  int v233;
  id v234;
  void *v235;
  char v236;
  id v237;
  char v238;
  id v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _QWORD *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  int v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  void (*v275)(char *, char *, uint64_t);
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  _QWORD *v284;
  _QWORD *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char *v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t *v294;
  uint64_t *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v303;
  uint64_t v304;
  int *v305;
  int *v306;
  int *v307;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a2[5];
  v11 = (void *)a1[5];
  a1[5] = v10;
  v12 = v10;

  v13 = (int *)type metadata accessor for ShowHero(0);
  v14 = v13[8];
  v15 = (uint64_t)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = (int *)type metadata accessor for ArtworkModel(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19((uint64_t)v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      v303 = v18;
      v305 = a3;
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v22 = *((_QWORD *)v16 + 1);
      *(_QWORD *)(v15 + 8) = v22;
      v23 = v16[32];
      swift_bridgeObjectRetain(v22);
      if (v23 == 255)
      {
        v37 = *((_OWORD *)v16 + 1);
        *(_BYTE *)(v15 + 32) = v16[32];
        *(_OWORD *)(v15 + 16) = v37;
      }
      else
      {
        v24 = *((_QWORD *)v16 + 2);
        v25 = *((_QWORD *)v16 + 3);
        sub_108110(v24, v25, v23);
        *(_QWORD *)(v15 + 16) = v24;
        *(_QWORD *)(v15 + 24) = v25;
        *(_BYTE *)(v15 + 32) = v23;
      }
      *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
      *(_QWORD *)(v15 + 48) = *((_QWORD *)v16 + 6);
      v38 = (id *)(v16 + 56);
      v39 = v16[64];
      if (v39 == 255)
      {
        v41 = *v38;
        *(_BYTE *)(v15 + 64) = v16[64];
        *(_QWORD *)(v15 + 56) = v41;
      }
      else
      {
        v40 = *v38;
        sub_27F80(*v38, v16[64]);
        *(_QWORD *)(v15 + 56) = v40;
        *(_BYTE *)(v15 + 64) = v39;
      }
      v18 = v303;
      v42 = (id *)(v16 + 72);
      v43 = v16[80];
      if (v43 == 255)
      {
        v45 = *v42;
        *(_BYTE *)(v15 + 80) = v16[80];
        *(_QWORD *)(v15 + 72) = v45;
      }
      else
      {
        v44 = *v42;
        sub_27F80(*v42, v16[80]);
        *(_QWORD *)(v15 + 72) = v44;
        *(_BYTE *)(v15 + 80) = v43;
      }
      v46 = (id *)(v16 + 88);
      v47 = v16[96];
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v15 + 96) = v16[96];
        *(_QWORD *)(v15 + 88) = v49;
      }
      else
      {
        v48 = *v46;
        sub_27F80(*v46, v16[96]);
        *(_QWORD *)(v15 + 88) = v48;
        *(_BYTE *)(v15 + 96) = v47;
      }
      v50 = (id *)(v16 + 104);
      v51 = v16[112];
      if (v51 == 255)
      {
        v53 = *v50;
        *(_BYTE *)(v15 + 112) = v16[112];
        *(_QWORD *)(v15 + 104) = v53;
      }
      else
      {
        v52 = *v50;
        sub_27F80(*v50, v16[112]);
        *(_QWORD *)(v15 + 104) = v52;
        *(_BYTE *)(v15 + 112) = v51;
      }
      v54 = (id *)(v16 + 120);
      v55 = v16[128];
      if (v55 == 255)
      {
        v57 = *v54;
        *(_BYTE *)(v15 + 128) = v16[128];
        *(_QWORD *)(v15 + 120) = v57;
      }
      else
      {
        v56 = *v54;
        sub_27F80(*v54, v16[128]);
        *(_QWORD *)(v15 + 120) = v56;
        *(_BYTE *)(v15 + 128) = v55;
      }
      *(_BYTE *)(v15 + 129) = v16[129];
      v58 = v17[11];
      v59 = v15 + v58;
      v60 = &v16[v58];
      v61 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      v62 = v17[12];
      v63 = (_QWORD *)(v15 + v62);
      v64 = &v16[v62];
      *v63 = *(_QWORD *)v64;
      v65 = *((_QWORD *)v64 + 1);
      v63[1] = v65;
      *(_BYTE *)(v15 + v17[13]) = v16[v17[13]];
      *(_BYTE *)(v15 + v17[14]) = v16[v17[14]];
      *(_BYTE *)(v15 + v17[15]) = v16[v17[15]];
      v66 = v17[16];
      v67 = (_QWORD *)(v15 + v66);
      v68 = &v16[v66];
      *v67 = *(_QWORD *)v68;
      v69 = *((_QWORD *)v68 + 1);
      v67[1] = v69;
      v70 = *(void (**)(uint64_t, _QWORD, uint64_t, int *, __n128))(v303 + 56);
      swift_bridgeObjectRetain(v65);
      v71 = swift_bridgeObjectRetain(v69);
      v70(v15, 0, 1, v17, v71);
      a3 = v305;
      goto LABEL_68;
    }
LABEL_7:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v15, v16, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_68;
  }
  if (v21)
  {
    sub_FA4C(v15, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  v304 = v18;
  v306 = a3;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v27 = *((_QWORD *)v16 + 1);
  v28 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v15 + 8) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  v29 = (__int128 *)(v15 + 16);
  v30 = (__int128 *)(v16 + 16);
  v31 = v16[32];
  if (*(unsigned __int8 *)(v15 + 32) == 255)
  {
    if (v31 == 255)
    {
      v75 = *v30;
      *(_BYTE *)(v15 + 32) = v16[32];
      *v29 = v75;
    }
    else
    {
      v72 = *((_QWORD *)v16 + 2);
      v73 = *((_QWORD *)v16 + 3);
      sub_108110(v72, v73, v16[32]);
      *(_QWORD *)(v15 + 16) = v72;
      *(_QWORD *)(v15 + 24) = v73;
      *(_BYTE *)(v15 + 32) = v31;
    }
  }
  else if (v31 == 255)
  {
    sub_108DD8(v15 + 16);
    v74 = v16[32];
    *v29 = *v30;
    *(_BYTE *)(v15 + 32) = v74;
  }
  else
  {
    v32 = *((_QWORD *)v16 + 2);
    v33 = *((_QWORD *)v16 + 3);
    sub_108110(v32, v33, v16[32]);
    v34 = *(_QWORD *)(v15 + 16);
    v35 = *(_QWORD *)(v15 + 24);
    *(_QWORD *)(v15 + 16) = v32;
    *(_QWORD *)(v15 + 24) = v33;
    v36 = *(_BYTE *)(v15 + 32);
    *(_BYTE *)(v15 + 32) = v31;
    sub_108270(v34, v35, v36);
  }
  *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
  *(_QWORD *)(v15 + 48) = *((_QWORD *)v16 + 6);
  v76 = (id *)(v15 + 56);
  v77 = (id *)(v16 + 56);
  v78 = v16[64];
  if (*(unsigned __int8 *)(v15 + 64) == 255)
  {
    if (v78 == 255)
    {
      v84 = *v77;
      *(_BYTE *)(v15 + 64) = v16[64];
      *v76 = v84;
    }
    else
    {
      v82 = *v77;
      sub_27F80(*v77, v16[64]);
      *(_QWORD *)(v15 + 56) = v82;
      *(_BYTE *)(v15 + 64) = v78;
    }
  }
  else if (v78 == 255)
  {
    sub_108E0C(v15 + 56);
    v83 = v16[64];
    *v76 = *v77;
    *(_BYTE *)(v15 + 64) = v83;
  }
  else
  {
    v79 = *v77;
    sub_27F80(*v77, v16[64]);
    v80 = *(void **)(v15 + 56);
    *(_QWORD *)(v15 + 56) = v79;
    v81 = *(_BYTE *)(v15 + 64);
    *(_BYTE *)(v15 + 64) = v78;
    sub_27FA8(v80, v81);
  }
  v85 = (id *)(v15 + 72);
  v86 = (id *)(v16 + 72);
  v87 = v16[80];
  if (*(unsigned __int8 *)(v15 + 80) == 255)
  {
    if (v87 == 255)
    {
      v93 = *v86;
      *(_BYTE *)(v15 + 80) = v16[80];
      *v85 = v93;
    }
    else
    {
      v91 = *v86;
      sub_27F80(*v86, v16[80]);
      *(_QWORD *)(v15 + 72) = v91;
      *(_BYTE *)(v15 + 80) = v87;
    }
  }
  else if (v87 == 255)
  {
    sub_108E0C(v15 + 72);
    v92 = v16[80];
    *v85 = *v86;
    *(_BYTE *)(v15 + 80) = v92;
  }
  else
  {
    v88 = *v86;
    sub_27F80(*v86, v16[80]);
    v89 = *(void **)(v15 + 72);
    *(_QWORD *)(v15 + 72) = v88;
    v90 = *(_BYTE *)(v15 + 80);
    *(_BYTE *)(v15 + 80) = v87;
    sub_27FA8(v89, v90);
  }
  v94 = (id *)(v15 + 88);
  v95 = (id *)(v16 + 88);
  v96 = v16[96];
  if (*(unsigned __int8 *)(v15 + 96) == 255)
  {
    if (v96 == 255)
    {
      v102 = *v95;
      *(_BYTE *)(v15 + 96) = v16[96];
      *v94 = v102;
    }
    else
    {
      v100 = *v95;
      sub_27F80(*v95, v16[96]);
      *(_QWORD *)(v15 + 88) = v100;
      *(_BYTE *)(v15 + 96) = v96;
    }
  }
  else if (v96 == 255)
  {
    sub_108E0C(v15 + 88);
    v101 = v16[96];
    *v94 = *v95;
    *(_BYTE *)(v15 + 96) = v101;
  }
  else
  {
    v97 = *v95;
    sub_27F80(*v95, v16[96]);
    v98 = *(void **)(v15 + 88);
    *(_QWORD *)(v15 + 88) = v97;
    v99 = *(_BYTE *)(v15 + 96);
    *(_BYTE *)(v15 + 96) = v96;
    sub_27FA8(v98, v99);
  }
  v103 = (id *)(v15 + 104);
  v104 = (id *)(v16 + 104);
  v105 = v16[112];
  if (*(unsigned __int8 *)(v15 + 112) == 255)
  {
    if (v105 == 255)
    {
      v111 = *v104;
      *(_BYTE *)(v15 + 112) = v16[112];
      *v103 = v111;
    }
    else
    {
      v109 = *v104;
      sub_27F80(*v104, v16[112]);
      *(_QWORD *)(v15 + 104) = v109;
      *(_BYTE *)(v15 + 112) = v105;
    }
  }
  else if (v105 == 255)
  {
    sub_108E0C(v15 + 104);
    v110 = v16[112];
    *v103 = *v104;
    *(_BYTE *)(v15 + 112) = v110;
  }
  else
  {
    v106 = *v104;
    sub_27F80(*v104, v16[112]);
    v107 = *(void **)(v15 + 104);
    *(_QWORD *)(v15 + 104) = v106;
    v108 = *(_BYTE *)(v15 + 112);
    *(_BYTE *)(v15 + 112) = v105;
    sub_27FA8(v107, v108);
  }
  v112 = (id *)(v15 + 120);
  v113 = (id *)(v16 + 120);
  v114 = v16[128];
  if (*(unsigned __int8 *)(v15 + 128) == 255)
  {
    if (v114 == 255)
    {
      v120 = *v113;
      *(_BYTE *)(v15 + 128) = v16[128];
      *v112 = v120;
    }
    else
    {
      v118 = *v113;
      sub_27F80(*v113, v16[128]);
      *(_QWORD *)(v15 + 120) = v118;
      *(_BYTE *)(v15 + 128) = v114;
    }
  }
  else if (v114 == 255)
  {
    sub_108E0C(v15 + 120);
    v119 = v16[128];
    *v112 = *v113;
    *(_BYTE *)(v15 + 128) = v119;
  }
  else
  {
    v115 = *v113;
    sub_27F80(*v113, v16[128]);
    v116 = *(void **)(v15 + 120);
    *(_QWORD *)(v15 + 120) = v115;
    v117 = *(_BYTE *)(v15 + 128);
    *(_BYTE *)(v15 + 128) = v114;
    sub_27FA8(v116, v117);
  }
  *(_BYTE *)(v15 + 129) = v16[129];
  v121 = v17[11];
  v122 = v15 + v121;
  v123 = &v16[v121];
  v124 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 24))(v122, v123, v124);
  v125 = v17[12];
  v126 = (_QWORD *)(v15 + v125);
  v127 = &v16[v125];
  *v126 = *(_QWORD *)v127;
  v128 = *((_QWORD *)v127 + 1);
  v129 = v126[1];
  v126[1] = v128;
  swift_bridgeObjectRetain(v128);
  swift_bridgeObjectRelease(v129);
  *(_BYTE *)(v15 + v17[13]) = v16[v17[13]];
  *(_BYTE *)(v15 + v17[14]) = v16[v17[14]];
  *(_BYTE *)(v15 + v17[15]) = v16[v17[15]];
  v130 = v17[16];
  v131 = (_QWORD *)(v15 + v130);
  v132 = &v16[v130];
  *v131 = *(_QWORD *)v132;
  v133 = *((_QWORD *)v132 + 1);
  v134 = v131[1];
  v131[1] = v133;
  swift_bridgeObjectRetain(v133);
  swift_bridgeObjectRelease(v134);
  v18 = v304;
  a3 = v306;
LABEL_68:
  v135 = v13[9];
  v136 = (uint64_t)a1 + v135;
  v137 = (char *)a2 + v135;
  v138 = v19((uint64_t)a1 + v135, 1, v17);
  v139 = v19((uint64_t)v137, 1, v17);
  if (!v138)
  {
    if (!v139)
    {
      v307 = a3;
      *(_QWORD *)v136 = *(_QWORD *)v137;
      v146 = *((_QWORD *)v137 + 1);
      v147 = *(_QWORD *)(v136 + 8);
      *(_QWORD *)(v136 + 8) = v146;
      swift_bridgeObjectRetain(v146);
      swift_bridgeObjectRelease(v147);
      v148 = (__int128 *)(v136 + 16);
      v149 = (__int128 *)(v137 + 16);
      v150 = v137[32];
      if (*(unsigned __int8 *)(v136 + 32) == 255)
      {
        if (v150 == 255)
        {
          v194 = *v149;
          *(_BYTE *)(v136 + 32) = v137[32];
          *v148 = v194;
        }
        else
        {
          v191 = *((_QWORD *)v137 + 2);
          v192 = *((_QWORD *)v137 + 3);
          sub_108110(v191, v192, v137[32]);
          *(_QWORD *)(v136 + 16) = v191;
          *(_QWORD *)(v136 + 24) = v192;
          *(_BYTE *)(v136 + 32) = v150;
        }
      }
      else if (v150 == 255)
      {
        sub_108DD8(v136 + 16);
        v193 = v137[32];
        *v148 = *v149;
        *(_BYTE *)(v136 + 32) = v193;
      }
      else
      {
        v151 = *((_QWORD *)v137 + 2);
        v152 = *((_QWORD *)v137 + 3);
        sub_108110(v151, v152, v137[32]);
        v153 = *(_QWORD *)(v136 + 16);
        v154 = *(_QWORD *)(v136 + 24);
        *(_QWORD *)(v136 + 16) = v151;
        *(_QWORD *)(v136 + 24) = v152;
        v155 = *(_BYTE *)(v136 + 32);
        *(_BYTE *)(v136 + 32) = v150;
        sub_108270(v153, v154, v155);
      }
      *(_QWORD *)(v136 + 40) = *((_QWORD *)v137 + 5);
      *(_QWORD *)(v136 + 48) = *((_QWORD *)v137 + 6);
      v195 = (id *)(v136 + 56);
      v196 = (id *)(v137 + 56);
      v197 = v137[64];
      if (*(unsigned __int8 *)(v136 + 64) == 255)
      {
        if (v197 == 255)
        {
          v203 = *v196;
          *(_BYTE *)(v136 + 64) = v137[64];
          *v195 = v203;
        }
        else
        {
          v201 = *v196;
          sub_27F80(*v196, v137[64]);
          *(_QWORD *)(v136 + 56) = v201;
          *(_BYTE *)(v136 + 64) = v197;
        }
      }
      else if (v197 == 255)
      {
        sub_108E0C(v136 + 56);
        v202 = v137[64];
        *v195 = *v196;
        *(_BYTE *)(v136 + 64) = v202;
      }
      else
      {
        v198 = *v196;
        sub_27F80(*v196, v137[64]);
        v199 = *(void **)(v136 + 56);
        *(_QWORD *)(v136 + 56) = v198;
        v200 = *(_BYTE *)(v136 + 64);
        *(_BYTE *)(v136 + 64) = v197;
        sub_27FA8(v199, v200);
      }
      v204 = (id *)(v136 + 72);
      v205 = (id *)(v137 + 72);
      v206 = v137[80];
      if (*(unsigned __int8 *)(v136 + 80) == 255)
      {
        if (v206 == 255)
        {
          v212 = *v205;
          *(_BYTE *)(v136 + 80) = v137[80];
          *v204 = v212;
        }
        else
        {
          v210 = *v205;
          sub_27F80(*v205, v137[80]);
          *(_QWORD *)(v136 + 72) = v210;
          *(_BYTE *)(v136 + 80) = v206;
        }
      }
      else if (v206 == 255)
      {
        sub_108E0C(v136 + 72);
        v211 = v137[80];
        *v204 = *v205;
        *(_BYTE *)(v136 + 80) = v211;
      }
      else
      {
        v207 = *v205;
        sub_27F80(*v205, v137[80]);
        v208 = *(void **)(v136 + 72);
        *(_QWORD *)(v136 + 72) = v207;
        v209 = *(_BYTE *)(v136 + 80);
        *(_BYTE *)(v136 + 80) = v206;
        sub_27FA8(v208, v209);
      }
      v213 = (id *)(v136 + 88);
      v214 = (id *)(v137 + 88);
      v215 = v137[96];
      if (*(unsigned __int8 *)(v136 + 96) == 255)
      {
        if (v215 == 255)
        {
          v221 = *v214;
          *(_BYTE *)(v136 + 96) = v137[96];
          *v213 = v221;
        }
        else
        {
          v219 = *v214;
          sub_27F80(*v214, v137[96]);
          *(_QWORD *)(v136 + 88) = v219;
          *(_BYTE *)(v136 + 96) = v215;
        }
      }
      else if (v215 == 255)
      {
        sub_108E0C(v136 + 88);
        v220 = v137[96];
        *v213 = *v214;
        *(_BYTE *)(v136 + 96) = v220;
      }
      else
      {
        v216 = *v214;
        sub_27F80(*v214, v137[96]);
        v217 = *(void **)(v136 + 88);
        *(_QWORD *)(v136 + 88) = v216;
        v218 = *(_BYTE *)(v136 + 96);
        *(_BYTE *)(v136 + 96) = v215;
        sub_27FA8(v217, v218);
      }
      v222 = (id *)(v136 + 104);
      v223 = (id *)(v137 + 104);
      v224 = v137[112];
      if (*(unsigned __int8 *)(v136 + 112) == 255)
      {
        if (v224 == 255)
        {
          v230 = *v223;
          *(_BYTE *)(v136 + 112) = v137[112];
          *v222 = v230;
        }
        else
        {
          v228 = *v223;
          sub_27F80(*v223, v137[112]);
          *(_QWORD *)(v136 + 104) = v228;
          *(_BYTE *)(v136 + 112) = v224;
        }
      }
      else if (v224 == 255)
      {
        sub_108E0C(v136 + 104);
        v229 = v137[112];
        *v222 = *v223;
        *(_BYTE *)(v136 + 112) = v229;
      }
      else
      {
        v225 = *v223;
        sub_27F80(*v223, v137[112]);
        v226 = *(void **)(v136 + 104);
        *(_QWORD *)(v136 + 104) = v225;
        v227 = *(_BYTE *)(v136 + 112);
        *(_BYTE *)(v136 + 112) = v224;
        sub_27FA8(v226, v227);
      }
      v231 = (id *)(v136 + 120);
      v232 = (id *)(v137 + 120);
      v233 = v137[128];
      if (*(unsigned __int8 *)(v136 + 128) == 255)
      {
        if (v233 == 255)
        {
          v239 = *v232;
          *(_BYTE *)(v136 + 128) = v137[128];
          *v231 = v239;
        }
        else
        {
          v237 = *v232;
          sub_27F80(*v232, v137[128]);
          *(_QWORD *)(v136 + 120) = v237;
          *(_BYTE *)(v136 + 128) = v233;
        }
      }
      else if (v233 == 255)
      {
        sub_108E0C(v136 + 120);
        v238 = v137[128];
        *v231 = *v232;
        *(_BYTE *)(v136 + 128) = v238;
      }
      else
      {
        v234 = *v232;
        sub_27F80(*v232, v137[128]);
        v235 = *(void **)(v136 + 120);
        *(_QWORD *)(v136 + 120) = v234;
        v236 = *(_BYTE *)(v136 + 128);
        *(_BYTE *)(v136 + 128) = v233;
        sub_27FA8(v235, v236);
      }
      *(_BYTE *)(v136 + 129) = v137[129];
      v240 = v17[11];
      v241 = v136 + v240;
      v242 = &v137[v240];
      v243 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 24))(v241, v242, v243);
      v244 = v17[12];
      v245 = (_QWORD *)(v136 + v244);
      v246 = &v137[v244];
      *v245 = *(_QWORD *)v246;
      v247 = *((_QWORD *)v246 + 1);
      v248 = v245[1];
      v245[1] = v247;
      swift_bridgeObjectRetain(v247);
      swift_bridgeObjectRelease(v248);
      *(_BYTE *)(v136 + v17[13]) = v137[v17[13]];
      *(_BYTE *)(v136 + v17[14]) = v137[v17[14]];
      *(_BYTE *)(v136 + v17[15]) = v137[v17[15]];
      v249 = v17[16];
      v250 = (_QWORD *)(v136 + v249);
      v251 = &v137[v249];
      *v250 = *(_QWORD *)v251;
      v252 = *((_QWORD *)v251 + 1);
      v253 = v250[1];
      v250[1] = v252;
      swift_bridgeObjectRetain(v252);
      swift_bridgeObjectRelease(v253);
      goto LABEL_135;
    }
    sub_FA4C(v136, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_74:
    v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v136, v137, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
    goto LABEL_136;
  }
  if (v139)
    goto LABEL_74;
  v140 = v18;
  v307 = a3;
  *(_QWORD *)v136 = *(_QWORD *)v137;
  v141 = *((_QWORD *)v137 + 1);
  *(_QWORD *)(v136 + 8) = v141;
  v142 = v137[32];
  swift_bridgeObjectRetain(v141);
  if (v142 == 255)
  {
    v156 = *((_OWORD *)v137 + 1);
    *(_BYTE *)(v136 + 32) = v137[32];
    *(_OWORD *)(v136 + 16) = v156;
  }
  else
  {
    v143 = *((_QWORD *)v137 + 2);
    v144 = *((_QWORD *)v137 + 3);
    sub_108110(v143, v144, v142);
    *(_QWORD *)(v136 + 16) = v143;
    *(_QWORD *)(v136 + 24) = v144;
    *(_BYTE *)(v136 + 32) = v142;
  }
  *(_QWORD *)(v136 + 40) = *((_QWORD *)v137 + 5);
  *(_QWORD *)(v136 + 48) = *((_QWORD *)v137 + 6);
  v157 = (id *)(v137 + 56);
  v158 = v137[64];
  if (v158 == 255)
  {
    v160 = *v157;
    *(_BYTE *)(v136 + 64) = v137[64];
    *(_QWORD *)(v136 + 56) = v160;
  }
  else
  {
    v159 = *v157;
    sub_27F80(*v157, v137[64]);
    *(_QWORD *)(v136 + 56) = v159;
    *(_BYTE *)(v136 + 64) = v158;
  }
  v161 = (id *)(v137 + 72);
  v162 = v137[80];
  if (v162 == 255)
  {
    v164 = *v161;
    *(_BYTE *)(v136 + 80) = v137[80];
    *(_QWORD *)(v136 + 72) = v164;
  }
  else
  {
    v163 = *v161;
    sub_27F80(*v161, v137[80]);
    *(_QWORD *)(v136 + 72) = v163;
    *(_BYTE *)(v136 + 80) = v162;
  }
  v165 = (id *)(v137 + 88);
  v166 = v137[96];
  if (v166 == 255)
  {
    v168 = *v165;
    *(_BYTE *)(v136 + 96) = v137[96];
    *(_QWORD *)(v136 + 88) = v168;
  }
  else
  {
    v167 = *v165;
    sub_27F80(*v165, v137[96]);
    *(_QWORD *)(v136 + 88) = v167;
    *(_BYTE *)(v136 + 96) = v166;
  }
  v169 = (id *)(v137 + 104);
  v170 = v137[112];
  if (v170 == 255)
  {
    v172 = *v169;
    *(_BYTE *)(v136 + 112) = v137[112];
    *(_QWORD *)(v136 + 104) = v172;
  }
  else
  {
    v171 = *v169;
    sub_27F80(*v169, v137[112]);
    *(_QWORD *)(v136 + 104) = v171;
    *(_BYTE *)(v136 + 112) = v170;
  }
  v173 = (id *)(v137 + 120);
  v174 = v137[128];
  if (v174 == 255)
  {
    v176 = *v173;
    *(_BYTE *)(v136 + 128) = v137[128];
    *(_QWORD *)(v136 + 120) = v176;
  }
  else
  {
    v175 = *v173;
    sub_27F80(*v173, v137[128]);
    *(_QWORD *)(v136 + 120) = v175;
    *(_BYTE *)(v136 + 128) = v174;
  }
  *(_BYTE *)(v136 + 129) = v137[129];
  v177 = v17[11];
  v178 = v136 + v177;
  v179 = &v137[v177];
  v180 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v178, v179, v180);
  v181 = v17[12];
  v182 = (_QWORD *)(v136 + v181);
  v183 = &v137[v181];
  *v182 = *(_QWORD *)v183;
  v184 = *((_QWORD *)v183 + 1);
  v182[1] = v184;
  *(_BYTE *)(v136 + v17[13]) = v137[v17[13]];
  *(_BYTE *)(v136 + v17[14]) = v137[v17[14]];
  *(_BYTE *)(v136 + v17[15]) = v137[v17[15]];
  v185 = v17[16];
  v186 = (_QWORD *)(v136 + v185);
  v187 = &v137[v185];
  *v186 = *(_QWORD *)v187;
  v188 = *((_QWORD *)v187 + 1);
  v186[1] = v188;
  v189 = *(void (**)(uint64_t, _QWORD, uint64_t, int *, __n128))(v140 + 56);
  swift_bridgeObjectRetain(v184);
  v190 = swift_bridgeObjectRetain(v188);
  v189(v136, 0, 1, v17, v190);
LABEL_135:
  a3 = v307;
LABEL_136:
  v254 = v13[10];
  v255 = (char *)a1 + v254;
  v256 = (char *)a2 + v254;
  v257 = *(_DWORD *)v256;
  v255[4] = v256[4];
  *(_DWORD *)v255 = v257;
  v258 = v13[11];
  v259 = (char *)a1 + v258;
  v260 = (char *)a2 + v258;
  v261 = *(_QWORD *)v260;
  v259[8] = v260[8];
  *(_QWORD *)v259 = v261;
  v262 = v13[12];
  v263 = (_QWORD *)((char *)a1 + v262);
  v264 = (_QWORD *)((char *)a2 + v262);
  *v263 = *v264;
  v265 = v264[1];
  v266 = v263[1];
  v263[1] = v265;
  swift_bridgeObjectRetain(v265);
  swift_bridgeObjectRelease(v266);
  *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
  v267 = v13[14];
  v268 = (char *)a1 + v267;
  v269 = (char *)a2 + v267;
  v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v270 - 8) + 24))(v268, v269, v270);
  v271 = v13[15];
  v272 = (char *)a1 + v271;
  v273 = (char *)a2 + v271;
  v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v275 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v274 - 8) + 24);
  v275(v272, v273, v274);
  v275((char *)a1 + v13[16], (char *)a2 + v13[16], v274);
  v275((char *)a1 + v13[17], (char *)a2 + v13[17], v274);
  v276 = v13[18];
  v277 = (char *)a1 + v276;
  v278 = (char *)a2 + v276;
  v279 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v279 - 8) + 24))(v277, v278, v279);
  v280 = a3[5];
  v281 = *(_QWORD *)((char *)a1 + v280);
  v282 = *(_QWORD *)((char *)a2 + v280);
  *(_QWORD *)((char *)a1 + v280) = v282;
  swift_retain(v282);
  swift_release(v281);
  v283 = a3[6];
  v284 = (_QWORD *)((char *)a1 + v283);
  v285 = (_QWORD *)((char *)a2 + v283);
  *v284 = *v285;
  v286 = v285[1];
  v287 = v284[1];
  v284[1] = v286;
  swift_retain(v286);
  swift_release(v287);
  v288 = a3[7];
  v289 = (char *)a1 + v288;
  v290 = (char *)a2 + v288;
  v291 = *(_QWORD *)v290;
  LOBYTE(v290) = v290[8];
  v292 = *(_QWORD *)v289;
  *(_QWORD *)v289 = v291;
  v289[8] = (char)v290;
  swift_retain(v291);
  swift_release(v292);
  if (a1 != a2)
  {
    v293 = a3[8];
    v294 = (_QWORD *)((char *)a1 + v293);
    v295 = (_QWORD *)((char *)a2 + v293);
    sub_D1D4((uint64_t)a1 + v293, &qword_3D0ED8);
    v296 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED8);
    if (swift_getEnumCaseMultiPayload(v295, v296) == 1)
    {
      v297 = type metadata accessor for ImpressionMetrics(0);
      v298 = *(_QWORD *)(v297 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v298 + 48))(v295, 1, v297))
      {
        v299 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
        memcpy(v294, v295, *(_QWORD *)(*(_QWORD *)(v299 - 8) + 64));
        v300 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v298 + 16))(v294, v295, v297);
        v300 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v298 + 56))(v294, 0, 1, v297);
      }
    }
    else
    {
      v301 = *v295;
      *v294 = *v295;
      swift_retain(v301);
      v300 = 0;
    }
    swift_storeEnumTagMultiPayload(v294, v296, v300);
  }
  return a1;
}

uint64_t sub_25C000(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_OWORD *, uint64_t, int *);
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(_OWORD *, _QWORD, uint64_t, int *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v64;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (int *)type metadata accessor for ShowHero(0);
  v7 = v6[8];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v15 = v10[11];
    v64 = a3;
    v16 = v11;
    v17 = (char *)v8 + v15;
    v18 = (char *)v9 + v15;
    v19 = type metadata accessor for ArtworkCrop(0);
    v20 = v17;
    v11 = v16;
    a3 = v64;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v20, v18, v19);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v21 = v6[9];
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  if (v12((_OWORD *)(a2 + v21), 1, v10))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v23[1];
    *v22 = *v23;
    v22[1] = v25;
    *((_BYTE *)v22 + 32) = *((_BYTE *)v23 + 32);
    *(_OWORD *)((char *)v22 + 40) = *(_OWORD *)((char *)v23 + 40);
    *((_QWORD *)v22 + 7) = *((_QWORD *)v23 + 7);
    *((_BYTE *)v22 + 64) = *((_BYTE *)v23 + 64);
    *(_OWORD *)((char *)v22 + 113) = *(_OWORD *)((char *)v23 + 113);
    *(_OWORD *)((char *)v22 + 104) = *(_OWORD *)((char *)v23 + 104);
    *(_OWORD *)((char *)v22 + 88) = *(_OWORD *)((char *)v23 + 88);
    *(_OWORD *)((char *)v22 + 72) = *(_OWORD *)((char *)v23 + 72);
    *((_BYTE *)v22 + 129) = *((_BYTE *)v23 + 129);
    v26 = v10[11];
    v27 = a3;
    v28 = v11;
    v29 = (char *)v22 + v26;
    v30 = (char *)v23 + v26;
    v31 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    *(_OWORD *)((char *)v22 + v10[12]) = *(_OWORD *)((char *)v23 + v10[12]);
    *((_BYTE *)v22 + v10[13]) = *((_BYTE *)v23 + v10[13]);
    *((_BYTE *)v22 + v10[14]) = *((_BYTE *)v23 + v10[14]);
    *((_BYTE *)v22 + v10[15]) = *((_BYTE *)v23 + v10[15]);
    *(_OWORD *)((char *)v22 + v10[16]) = *(_OWORD *)((char *)v23 + v10[16]);
    v32 = *(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v28 + 56);
    a3 = v27;
    v32(v22, 0, 1, v10);
  }
  v33 = v6[10];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_DWORD *)v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = *(_BYTE *)(v35 + 4);
  v36 = v6[11];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  v39 = v6[14];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = v6[15];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32);
  v47(v44, v45, v46);
  v47(a1 + v6[16], a2 + v6[16], v46);
  v47(a1 + v6[17], a2 + v6[17], v46);
  v48 = v6[18];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
  v52 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v52) = *(_OWORD *)(a2 + v52);
  v53 = a3[7];
  v54 = a3[8];
  v55 = a1 + v53;
  v56 = a2 + v53;
  *(_BYTE *)(v55 + 8) = *(_BYTE *)(v56 + 8);
  *(_QWORD *)v55 = *(_QWORD *)v56;
  v57 = (void *)(a1 + v54);
  v58 = (const void *)(a2 + v54);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED8);
  if (swift_getEnumCaseMultiPayload(v58, v59) == 1)
  {
    v60 = type metadata accessor for ImpressionMetrics(0);
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48))(v58, 1, v60))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v61 + 32))(v57, v58, v60);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v57, 0, 1, v60);
    }
    swift_storeEnumTagMultiPayload(v57, v59, 1);
  }
  else
  {
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25C4DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, int *);
  int v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD *v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _OWORD *v96;
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v102;
  int v103;
  int v104;
  void *v105;
  _QWORD *v106;
  int v107;
  int v108;
  void *v109;
  _QWORD *v110;
  int v111;
  int v112;
  void *v113;
  _QWORD *v114;
  int v115;
  int v116;
  void *v117;
  _QWORD *v118;
  int v119;
  int v120;
  void *v121;
  _QWORD *v122;
  int v123;
  int v124;
  void *v125;
  _QWORD *v126;
  int v127;
  int v128;
  void *v129;
  _QWORD *v130;
  int v131;
  int v132;
  void *v133;
  _QWORD *v134;
  int v135;
  int v136;
  void *v137;
  _QWORD *v138;
  int v139;
  int *v140;
  int v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int *v175;
  int *v176;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = (int *)type metadata accessor for ShowHero(0);
  v11 = v10[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = (int *)type metadata accessor for ArtworkModel(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      v19 = *(_OWORD *)(v13 + 16);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *(_OWORD *)(v12 + 16) = v19;
      *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
      *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
      *(_OWORD *)(v12 + 113) = *(_OWORD *)(v13 + 113);
      *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
      *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
      *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
      *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
      v20 = v14[11];
      v21 = v12 + v20;
      v175 = v10;
      v22 = v16;
      v23 = v15;
      v24 = a3;
      v25 = v13 + v20;
      v26 = type metadata accessor for ArtworkCrop(0);
      v27 = v25;
      a3 = v24;
      v15 = v23;
      v16 = v22;
      v10 = v175;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v21, v27, v26);
      *(_OWORD *)(v12 + v14[12]) = *(_OWORD *)(v13 + v14[12]);
      *(_BYTE *)(v12 + v14[13]) = *(_BYTE *)(v13 + v14[13]);
      *(_BYTE *)(v12 + v14[14]) = *(_BYTE *)(v13 + v14[14]);
      *(_BYTE *)(v12 + v14[15]) = *(_BYTE *)(v13 + v14[15]);
      *(_OWORD *)(v12 + v14[16]) = *(_OWORD *)(v13 + v14[16]);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_FA4C(v12, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v12, (const void *)v13, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  v176 = a3;
  v87 = *(_QWORD *)(v13 + 8);
  v88 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v87;
  swift_bridgeObjectRelease(v88);
  v89 = (_OWORD *)(v13 + 16);
  v90 = *(unsigned __int8 *)(v12 + 32);
  if (v90 != 255)
  {
    v91 = *(unsigned __int8 *)(v13 + 32);
    if (v91 != 255)
    {
      v92 = *(_QWORD *)(v12 + 16);
      v93 = *(_QWORD *)(v12 + 24);
      *(_OWORD *)(v12 + 16) = *v89;
      *(_BYTE *)(v12 + 32) = v91;
      sub_108270(v92, v93, v90);
      goto LABEL_29;
    }
    sub_108DD8(v12 + 16);
  }
  *(_OWORD *)(v12 + 16) = *v89;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
LABEL_29:
  *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
  v102 = (_QWORD *)(v13 + 56);
  v103 = *(unsigned __int8 *)(v12 + 64);
  if (v103 != 255)
  {
    v104 = *(unsigned __int8 *)(v13 + 64);
    if (v104 != 255)
    {
      v105 = *(void **)(v12 + 56);
      *(_QWORD *)(v12 + 56) = *v102;
      *(_BYTE *)(v12 + 64) = v104;
      sub_27FA8(v105, v103);
      goto LABEL_39;
    }
    sub_108E0C(v12 + 56);
  }
  *(_QWORD *)(v12 + 56) = *v102;
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
LABEL_39:
  v110 = (_QWORD *)(v13 + 72);
  v111 = *(unsigned __int8 *)(v12 + 80);
  if (v111 != 255)
  {
    v112 = *(unsigned __int8 *)(v13 + 80);
    if (v112 != 255)
    {
      v113 = *(void **)(v12 + 72);
      *(_QWORD *)(v12 + 72) = *v110;
      *(_BYTE *)(v12 + 80) = v112;
      sub_27FA8(v113, v111);
      goto LABEL_49;
    }
    sub_108E0C(v12 + 72);
  }
  *(_QWORD *)(v12 + 72) = *v110;
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
LABEL_49:
  v118 = (_QWORD *)(v13 + 88);
  v119 = *(unsigned __int8 *)(v12 + 96);
  if (v119 != 255)
  {
    v120 = *(unsigned __int8 *)(v13 + 96);
    if (v120 != 255)
    {
      v121 = *(void **)(v12 + 88);
      *(_QWORD *)(v12 + 88) = *v118;
      *(_BYTE *)(v12 + 96) = v120;
      sub_27FA8(v121, v119);
      goto LABEL_59;
    }
    sub_108E0C(v12 + 88);
  }
  *(_QWORD *)(v12 + 88) = *v118;
  *(_BYTE *)(v12 + 96) = *(_BYTE *)(v13 + 96);
LABEL_59:
  v126 = (_QWORD *)(v13 + 104);
  v127 = *(unsigned __int8 *)(v12 + 112);
  if (v127 != 255)
  {
    v128 = *(unsigned __int8 *)(v13 + 112);
    if (v128 != 255)
    {
      v129 = *(void **)(v12 + 104);
      *(_QWORD *)(v12 + 104) = *v126;
      *(_BYTE *)(v12 + 112) = v128;
      sub_27FA8(v129, v127);
      goto LABEL_69;
    }
    sub_108E0C(v12 + 104);
  }
  *(_QWORD *)(v12 + 104) = *v126;
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
LABEL_69:
  v134 = (_QWORD *)(v13 + 120);
  v135 = *(unsigned __int8 *)(v12 + 128);
  if (v135 == 255)
  {
LABEL_78:
    *(_QWORD *)(v12 + 120) = *v134;
    *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
    goto LABEL_79;
  }
  v136 = *(unsigned __int8 *)(v13 + 128);
  if (v136 == 255)
  {
    sub_108E0C(v12 + 120);
    goto LABEL_78;
  }
  v137 = *(void **)(v12 + 120);
  *(_QWORD *)(v12 + 120) = *v134;
  *(_BYTE *)(v12 + 128) = v136;
  sub_27FA8(v137, v135);
LABEL_79:
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  v143 = v14[11];
  v144 = v12 + v143;
  v145 = v13 + v143;
  v146 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 40))(v144, v145, v146);
  v147 = v14[12];
  v148 = (_QWORD *)(v12 + v147);
  v149 = (uint64_t *)(v13 + v147);
  v151 = *v149;
  v150 = v149[1];
  v152 = v148[1];
  *v148 = v151;
  v148[1] = v150;
  swift_bridgeObjectRelease(v152);
  *(_BYTE *)(v12 + v14[13]) = *(_BYTE *)(v13 + v14[13]);
  *(_BYTE *)(v12 + v14[14]) = *(_BYTE *)(v13 + v14[14]);
  *(_BYTE *)(v12 + v14[15]) = *(_BYTE *)(v13 + v14[15]);
  v153 = v14[16];
  v154 = (_QWORD *)(v12 + v153);
  v155 = (uint64_t *)(v13 + v153);
  v157 = *v155;
  v156 = v155[1];
  v158 = v154[1];
  *v154 = v157;
  v154[1] = v156;
  swift_bridgeObjectRelease(v158);
  a3 = v176;
LABEL_7:
  v29 = v10[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = v16(a1 + v29, 1, v14);
  v33 = v16(v31, 1, v14);
  if (v32)
  {
    if (!v33)
    {
      v34 = *(_OWORD *)(v31 + 16);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *(_OWORD *)(v30 + 16) = v34;
      *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
      *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
      *(_QWORD *)(v30 + 56) = *(_QWORD *)(v31 + 56);
      *(_BYTE *)(v30 + 64) = *(_BYTE *)(v31 + 64);
      *(_OWORD *)(v30 + 113) = *(_OWORD *)(v31 + 113);
      *(_OWORD *)(v30 + 104) = *(_OWORD *)(v31 + 104);
      *(_OWORD *)(v30 + 88) = *(_OWORD *)(v31 + 88);
      *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
      *(_BYTE *)(v30 + 129) = *(_BYTE *)(v31 + 129);
      v35 = v14[11];
      v36 = v30 + v35;
      v37 = a3;
      v38 = v31 + v35;
      v39 = type metadata accessor for ArtworkCrop(0);
      v40 = v38;
      a3 = v37;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v40, v39);
      *(_OWORD *)(v30 + v14[12]) = *(_OWORD *)(v31 + v14[12]);
      *(_BYTE *)(v30 + v14[13]) = *(_BYTE *)(v31 + v14[13]);
      *(_BYTE *)(v30 + v14[14]) = *(_BYTE *)(v31 + v14[14]);
      *(_BYTE *)(v30 + v14[15]) = *(_BYTE *)(v31 + v14[15]);
      *(_OWORD *)(v30 + v14[16]) = *(_OWORD *)(v31 + v14[16]);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v15 + 56))(v30, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    sub_FA4C(v30, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_12:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v30, (const void *)v31, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  v94 = *(_QWORD *)(v31 + 8);
  v95 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v94;
  swift_bridgeObjectRelease(v95);
  v96 = (_OWORD *)(v31 + 16);
  v97 = *(unsigned __int8 *)(v30 + 32);
  if (v97 != 255)
  {
    v98 = *(unsigned __int8 *)(v31 + 32);
    if (v98 != 255)
    {
      v99 = *(_QWORD *)(v30 + 16);
      v100 = *(_QWORD *)(v30 + 24);
      *(_OWORD *)(v30 + 16) = *v96;
      *(_BYTE *)(v30 + 32) = v98;
      sub_108270(v99, v100, v97);
      goto LABEL_34;
    }
    sub_108DD8(v30 + 16);
  }
  *(_OWORD *)(v30 + 16) = *v96;
  *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
LABEL_34:
  *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
  v106 = (_QWORD *)(v31 + 56);
  v107 = *(unsigned __int8 *)(v30 + 64);
  if (v107 != 255)
  {
    v108 = *(unsigned __int8 *)(v31 + 64);
    if (v108 != 255)
    {
      v109 = *(void **)(v30 + 56);
      *(_QWORD *)(v30 + 56) = *v106;
      *(_BYTE *)(v30 + 64) = v108;
      sub_27FA8(v109, v107);
      goto LABEL_44;
    }
    sub_108E0C(v30 + 56);
  }
  *(_QWORD *)(v30 + 56) = *v106;
  *(_BYTE *)(v30 + 64) = *(_BYTE *)(v31 + 64);
LABEL_44:
  v114 = (_QWORD *)(v31 + 72);
  v115 = *(unsigned __int8 *)(v30 + 80);
  if (v115 != 255)
  {
    v116 = *(unsigned __int8 *)(v31 + 80);
    if (v116 != 255)
    {
      v117 = *(void **)(v30 + 72);
      *(_QWORD *)(v30 + 72) = *v114;
      *(_BYTE *)(v30 + 80) = v116;
      sub_27FA8(v117, v115);
      goto LABEL_54;
    }
    sub_108E0C(v30 + 72);
  }
  *(_QWORD *)(v30 + 72) = *v114;
  *(_BYTE *)(v30 + 80) = *(_BYTE *)(v31 + 80);
LABEL_54:
  v122 = (_QWORD *)(v31 + 88);
  v123 = *(unsigned __int8 *)(v30 + 96);
  if (v123 != 255)
  {
    v124 = *(unsigned __int8 *)(v31 + 96);
    if (v124 != 255)
    {
      v125 = *(void **)(v30 + 88);
      *(_QWORD *)(v30 + 88) = *v122;
      *(_BYTE *)(v30 + 96) = v124;
      sub_27FA8(v125, v123);
      goto LABEL_64;
    }
    sub_108E0C(v30 + 88);
  }
  *(_QWORD *)(v30 + 88) = *v122;
  *(_BYTE *)(v30 + 96) = *(_BYTE *)(v31 + 96);
LABEL_64:
  v130 = (_QWORD *)(v31 + 104);
  v131 = *(unsigned __int8 *)(v30 + 112);
  if (v131 != 255)
  {
    v132 = *(unsigned __int8 *)(v31 + 112);
    if (v132 != 255)
    {
      v133 = *(void **)(v30 + 104);
      *(_QWORD *)(v30 + 104) = *v130;
      *(_BYTE *)(v30 + 112) = v132;
      sub_27FA8(v133, v131);
      goto LABEL_74;
    }
    sub_108E0C(v30 + 104);
  }
  *(_QWORD *)(v30 + 104) = *v130;
  *(_BYTE *)(v30 + 112) = *(_BYTE *)(v31 + 112);
LABEL_74:
  v138 = (_QWORD *)(v31 + 120);
  v139 = *(unsigned __int8 *)(v30 + 128);
  v140 = a3;
  if (v139 == 255)
  {
LABEL_81:
    *(_QWORD *)(v30 + 120) = *v138;
    *(_BYTE *)(v30 + 128) = *(_BYTE *)(v31 + 128);
    goto LABEL_82;
  }
  v141 = *(unsigned __int8 *)(v31 + 128);
  if (v141 == 255)
  {
    sub_108E0C(v30 + 120);
    goto LABEL_81;
  }
  v142 = *(void **)(v30 + 120);
  *(_QWORD *)(v30 + 120) = *v138;
  *(_BYTE *)(v30 + 128) = v141;
  sub_27FA8(v142, v139);
LABEL_82:
  *(_BYTE *)(v30 + 129) = *(_BYTE *)(v31 + 129);
  v159 = v14[11];
  v160 = v30 + v159;
  v161 = v31 + v159;
  v162 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 40))(v160, v161, v162);
  v163 = v14[12];
  v164 = (_QWORD *)(v30 + v163);
  v165 = (uint64_t *)(v31 + v163);
  v167 = *v165;
  v166 = v165[1];
  v168 = v164[1];
  *v164 = v167;
  v164[1] = v166;
  swift_bridgeObjectRelease(v168);
  *(_BYTE *)(v30 + v14[13]) = *(_BYTE *)(v31 + v14[13]);
  *(_BYTE *)(v30 + v14[14]) = *(_BYTE *)(v31 + v14[14]);
  *(_BYTE *)(v30 + v14[15]) = *(_BYTE *)(v31 + v14[15]);
  v169 = v14[16];
  v170 = (_QWORD *)(v30 + v169);
  v171 = (uint64_t *)(v31 + v169);
  v173 = *v171;
  v172 = v171[1];
  v174 = v170[1];
  *v170 = v173;
  v170[1] = v172;
  swift_bridgeObjectRelease(v174);
  a3 = v140;
LABEL_13:
  v42 = v10[10];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_DWORD *)v43 = *(_DWORD *)v44;
  *(_BYTE *)(v43 + 4) = *(_BYTE *)(v44 + 4);
  v45 = v10[11];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v48 = v10[12];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  v53 = v49[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease(v53);
  *(_BYTE *)(a1 + v10[13]) = *(_BYTE *)(a2 + v10[13]);
  v54 = v10[14];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 40))(v55, v56, v57);
  v58 = v10[15];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 40);
  v62(v59, v60, v61);
  v62(a1 + v10[16], a2 + v10[16], v61);
  v62(a1 + v10[17], a2 + v10[17], v61);
  v63 = v10[18];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  v67 = a3[5];
  v68 = *(_QWORD *)(a1 + v67);
  *(_QWORD *)(a1 + v67) = *(_QWORD *)(a2 + v67);
  swift_release(v68);
  v69 = a3[6];
  v70 = (_QWORD *)(a1 + v69);
  v71 = (uint64_t *)(a2 + v69);
  v73 = *v71;
  v72 = v71[1];
  v74 = v70[1];
  *v70 = v73;
  v70[1] = v72;
  swift_release(v74);
  v75 = a3[7];
  v76 = (uint64_t *)(a1 + v75);
  v77 = (uint64_t *)(a2 + v75);
  v78 = *v77;
  LOBYTE(v77) = *((_BYTE *)v77 + 8);
  v79 = *v76;
  *v76 = v78;
  *((_BYTE *)v76 + 8) = (_BYTE)v77;
  swift_release(v79);
  if (a1 != a2)
  {
    v80 = a3[8];
    v81 = (void *)(a1 + v80);
    v82 = (const void *)(a2 + v80);
    sub_D1D4(a1 + v80, &qword_3D0ED8);
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED8);
    if (swift_getEnumCaseMultiPayload(v82, v83) == 1)
    {
      v84 = type metadata accessor for ImpressionMetrics(0);
      v85 = *(_QWORD *)(v84 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48))(v82, 1, v84))
      {
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v85 + 32))(v81, v82, v84);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v81, 0, 1, v84);
      }
      swift_storeEnumTagMultiPayload(v81, v83, 1);
    }
    else
    {
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25CFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_25CFB8);
}

uint64_t sub_25CFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for ShowHero(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE5A0);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_25D068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_25D074);
}

uint64_t sub_25D074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for ShowHero(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE5A0);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_25D120(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for ShowHero(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\b";
    v6[2] = &unk_302300;
    v6[3] = "\t";
    sub_25D1C0(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

void sub_25D1C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3DE610)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0EE0);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3DE610);
  }
}

unint64_t sub_25D21C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE650;
  if (!qword_3DE650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE3A0);
    sub_25D2A0();
    sub_10EDC(&qword_3DE668, &qword_3DE670, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE650);
  }
  return result;
}

unint64_t sub_25D2A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE658;
  if (!qword_3DE658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA6B8);
    sub_10EDC(&qword_3DE660, &qword_3DA6B0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE658);
  }
  return result;
}

uint64_t sub_25D324()
{
  return sub_104B60(&qword_3DE678, &qword_3DA6D8, (void (*)(void))sub_25D358);
}

unint64_t sub_25D358()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE680;
  if (!qword_3DE680)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA6D0);
    sub_10EDC(&qword_3DE688, &qword_3DE690, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_10EDC(&qword_3DE698, &qword_3DE6A0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE680);
  }
  return result;
}

uint64_t sub_25D3F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_333378, 1);
}

uint64_t sub_25D404(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_333350, 1);
}

uint64_t sub_25D41C@<X0>(uint64_t a1@<X8>)
{
  return sub_251308(a1);
}

unint64_t sub_25D424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE6D8;
  if (!qword_3DE6D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE6D0);
    sub_25D4A8();
    sub_10EDC(&qword_3DE668, &qword_3DE670, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE6D8);
  }
  return result;
}

unint64_t sub_25D4A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE6E0;
  if (!qword_3DE6E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE6E8);
    sub_25D54C(&qword_3DE6F0, &qword_3DE6F8);
    sub_10EDC(&qword_3DE700, &qword_3DE708, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE6E0);
  }
  return result;
}

uint64_t sub_25D54C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25D5AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE710;
  if (!qword_3DE710)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE6B0);
    sub_10EDC(&qword_3DE718, &qword_3DE6A8, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE710);
  }
  return result;
}

unint64_t sub_25D630()
{
  unint64_t result;

  result = qword_3DE720;
  if (!qword_3DE720)
  {
    result = swift_getWitnessTable(&unk_30266C, &type metadata for ShowHeroFollowButtonStyle);
    atomic_store(result, (unint64_t *)&qword_3DE720);
  }
  return result;
}

uint64_t sub_25D674@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_25D6A0(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_25D6C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_25D6D4(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

unint64_t sub_25D6EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_3DE728;
  if (!qword_3DE728)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE6C0);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE6B0);
    v2[1] = &type metadata for ShowHeroFollowButtonStyle;
    v2[2] = sub_25D5AC();
    v2[3] = sub_25D630();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10EDC(&qword_3DE730, &qword_3DE738, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE728);
  }
  return result;
}

uint64_t objectdestroy_38Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  int *v8;
  unsigned int (*v9)(uint64_t, uint64_t, int *);
  __n128 v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;

  v1 = (int *)type metadata accessor for ShowHeroFollowButton(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v40 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));

  v6 = (int *)type metadata accessor for ShowHero(0);
  v7 = v0 + v4 + v6[8];
  v8 = (int *)type metadata accessor for ArtworkModel(0);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48);
  if (!v9(v7, 1, v8))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v7 + 8));
    v11 = *(unsigned __int8 *)(v7 + 32);
    if (v11 != 255)
      sub_108270(*(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), v11);
    v12 = *(unsigned __int8 *)(v7 + 64);
    if (v12 != 255)
      sub_27FA8(*(id *)(v7 + 56), v12);
    v13 = *(unsigned __int8 *)(v7 + 80);
    if (v13 != 255)
      sub_27FA8(*(id *)(v7 + 72), v13);
    v14 = *(unsigned __int8 *)(v7 + 96);
    if (v14 != 255)
      sub_27FA8(*(id *)(v7 + 88), v14);
    v15 = *(unsigned __int8 *)(v7 + 112);
    if (v15 != 255)
      sub_27FA8(*(id *)(v7 + 104), v15);
    v16 = *(unsigned __int8 *)(v7 + 128);
    if (v16 != 255)
      sub_27FA8(*(id *)(v7 + 120), v16);
    v17 = v7 + v8[11];
    v18 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[12] + 8));
    v10 = swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[16] + 8));
  }
  v19 = v5 + v6[9];
  if (!((unsigned int (*)(uint64_t, uint64_t, int *, __n128))v9)(v19, 1, v8, v10))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 8));
    v20 = *(unsigned __int8 *)(v19 + 32);
    if (v20 != 255)
      sub_108270(*(_QWORD *)(v19 + 16), *(_QWORD *)(v19 + 24), v20);
    v21 = *(unsigned __int8 *)(v19 + 64);
    if (v21 != 255)
      sub_27FA8(*(id *)(v19 + 56), v21);
    v22 = *(unsigned __int8 *)(v19 + 80);
    if (v22 != 255)
      sub_27FA8(*(id *)(v19 + 72), v22);
    v23 = *(unsigned __int8 *)(v19 + 96);
    if (v23 != 255)
      sub_27FA8(*(id *)(v19 + 88), v23);
    v24 = *(unsigned __int8 *)(v19 + 112);
    if (v24 != 255)
      sub_27FA8(*(id *)(v19 + 104), v24);
    v25 = *(unsigned __int8 *)(v19 + 128);
    if (v25 != 255)
      sub_27FA8(*(id *)(v19 + 120), v25);
    v26 = v19 + v8[11];
    v27 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
    swift_bridgeObjectRelease(*(_QWORD *)(v19 + v8[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v19 + v8[16] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[12] + 8));
  v28 = v5 + v6[14];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  v30 = v5 + v6[15];
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v32 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8);
  v32(v30, v31);
  v32(v5 + v6[16], v31);
  v32(v5 + v6[17], v31);
  v33 = v5 + v6[18];
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  swift_release(*(_QWORD *)(v5 + v1[5]));
  swift_release(*(_QWORD *)(v5 + v1[6] + 8));
  swift_release(*(_QWORD *)(v5 + v1[7]));
  v35 = (_QWORD *)(v5 + v1[8]);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED8);
  if (swift_getEnumCaseMultiPayload(v35, v36) == 1)
  {
    v37 = type metadata accessor for ImpressionMetrics(0);
    v38 = *(_QWORD *)(v37 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48))(v35, 1, v37))
      (*(void (**)(_QWORD *, uint64_t))(v38 + 8))(v35, v37);
  }
  else
  {
    swift_release(*v35);
  }
  return swift_deallocObject(v0, v4 + v40, v3 | 7);
}

uint64_t sub_25DB68()
{
  type metadata accessor for ShowHeroFollowButton(0);
  return sub_2510F8();
}

unint64_t sub_25DBA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE770;
  if (!qword_3DE770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE758);
    sub_10EDC(&qword_3DE778, &qword_3DE750, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    sub_10EDC(&qword_3D10C0, &qword_3D10C8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE770);
  }
  return result;
}

uint64_t sub_25DC44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_25DC74()
{
  return sub_25DC88(type metadata accessor for ShowHeroContextMenuButton, (uint64_t (*)(uint64_t))sub_25212C);
}

uint64_t sub_25DC88(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t objectdestroy_58Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  int *v9;
  unsigned int (*v10)(uint64_t, uint64_t, int *);
  __n128 v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;

  v1 = type metadata accessor for ShowHeroContextMenuButton(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  v6 = v0 + v4 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + 32));

  v7 = (int *)type metadata accessor for ShowHero(0);
  v8 = v6 + v7[8];
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
    v12 = *(unsigned __int8 *)(v8 + 32);
    if (v12 != 255)
      sub_108270(*(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), v12);
    v13 = *(unsigned __int8 *)(v8 + 64);
    if (v13 != 255)
      sub_27FA8(*(id *)(v8 + 56), v13);
    v14 = *(unsigned __int8 *)(v8 + 80);
    if (v14 != 255)
      sub_27FA8(*(id *)(v8 + 72), v14);
    v15 = *(unsigned __int8 *)(v8 + 96);
    if (v15 != 255)
      sub_27FA8(*(id *)(v8 + 88), v15);
    v16 = *(unsigned __int8 *)(v8 + 112);
    if (v16 != 255)
      sub_27FA8(*(id *)(v8 + 104), v16);
    v17 = *(unsigned __int8 *)(v8 + 128);
    if (v17 != 255)
      sub_27FA8(*(id *)(v8 + 120), v17);
    v18 = v8 + v9[11];
    v19 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[12] + 8));
    v11 = swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[16] + 8));
  }
  v20 = v6 + v7[9];
  if (!((unsigned int (*)(uint64_t, uint64_t, int *, __n128))v10)(v20, 1, v9, v11))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v20 + 8));
    v21 = *(unsigned __int8 *)(v20 + 32);
    if (v21 != 255)
      sub_108270(*(_QWORD *)(v20 + 16), *(_QWORD *)(v20 + 24), v21);
    v22 = *(unsigned __int8 *)(v20 + 64);
    if (v22 != 255)
      sub_27FA8(*(id *)(v20 + 56), v22);
    v23 = *(unsigned __int8 *)(v20 + 80);
    if (v23 != 255)
      sub_27FA8(*(id *)(v20 + 72), v23);
    v24 = *(unsigned __int8 *)(v20 + 96);
    if (v24 != 255)
      sub_27FA8(*(id *)(v20 + 88), v24);
    v25 = *(unsigned __int8 *)(v20 + 112);
    if (v25 != 255)
      sub_27FA8(*(id *)(v20 + 104), v25);
    v26 = *(unsigned __int8 *)(v20 + 128);
    if (v26 != 255)
      sub_27FA8(*(id *)(v20 + 120), v26);
    v27 = v20 + v9[11];
    v28 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
    swift_bridgeObjectRelease(*(_QWORD *)(v20 + v9[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v20 + v9[16] + 8));
  }
  v29 = v3 | 7;
  v30 = v4 + v5;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[12] + 8));
  v31 = v6 + v7[14];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  v33 = v6 + v7[15];
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE170);
  v35 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8);
  v35(v33, v34);
  v35(v6 + v7[16], v34);
  v35(v6 + v7[17], v34);
  v36 = v6 + v7[18];
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
  return swift_deallocObject(v0, v30, v29);
}

double sub_25E008(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShowHeroContextMenuButton(0) - 8) + 80);
  return sub_2526F4(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_25E044()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[9];
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  v3 = *(_BYTE *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v7[1] = v3;
  v8 = v4;
  v7[0] = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  return State.wrappedValue.setter(v7, v5);
}

unint64_t sub_25E0B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE7B0;
  if (!qword_3DE7B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE7A0);
    sub_25E138();
    sub_10EDC(&qword_3D2630, &qword_3D2620, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE7B0);
  }
  return result;
}

unint64_t sub_25E138()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE7B8;
  if (!qword_3DE7B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE798);
    sub_25E1BC();
    sub_10EDC(&qword_3D10B0, &qword_3D10B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE7B8);
  }
  return result;
}

unint64_t sub_25E1BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE7C0;
  if (!qword_3DE7C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE790);
    sub_10EDC(&qword_3DE7C8, &qword_3D0808, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE7C0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ShowHeroFollowButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for ShowHeroFollowButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

uint64_t assignWithTake for ShowHeroFollowButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowHeroFollowButtonStyle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShowHeroFollowButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowHeroFollowButtonStyle()
{
  return &type metadata for ShowHeroFollowButtonStyle;
}

unint64_t sub_25E3AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE7D0;
  if (!qword_3DE7D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE6C8);
    sub_25D6EC();
    sub_89A0(&qword_3D0D28, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE7D0);
  }
  return result;
}

unint64_t sub_25E434()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE7D8;
  if (!qword_3DE7D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE7E0);
    sub_10EDC(&qword_3DE7E8, &qword_3DE788, (uint64_t)&protocol conformance descriptor for ContextMenuOverlay<A>);
    sub_25E4B8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE7D8);
  }
  return result;
}

unint64_t sub_25E4B8()
{
  unint64_t result;

  result = qword_3DE7F0;
  if (!qword_3DE7F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _HoverRegionModifier, &type metadata for _HoverRegionModifier);
    atomic_store(result, (unint64_t *)&qword_3DE7F0);
  }
  return result;
}

uint64_t sub_25E4FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_3333A0, 1);
}

uint64_t sub_25E514()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_25E538(uint64_t a1)
{
  uint64_t v1;

  return sub_250A04(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_25E544()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _BYTE v5[9];
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_BYTE *)(v0 + 32);
  v5[1] = *(_BYTE *)(v0 + 16);
  v6 = v1;
  v5[0] = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  return State.wrappedValue.setter(v5, v3);
}

unint64_t sub_25E5A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE878;
  if (!qword_3DE878)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE838);
    sub_25E610();
    sub_25E4B8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE878);
  }
  return result;
}

unint64_t sub_25E610()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE880;
  if (!qword_3DE880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE830);
    sub_25E694();
    sub_10EDC(&qword_3DE8D8, &qword_3DE870, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE880);
  }
  return result;
}

unint64_t sub_25E694()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE888;
  if (!qword_3DE888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE828);
    sub_25E718();
    sub_10EDC(&qword_3DE8C8, &qword_3DE8D0, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE888);
  }
  return result;
}

unint64_t sub_25E718()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE890;
  if (!qword_3DE890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE820);
    sub_25E79C();
    sub_10EDC(&qword_3DE8C0, &qword_3DE848, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE890);
  }
  return result;
}

unint64_t sub_25E79C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE898;
  if (!qword_3DE898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE818);
    sub_25E820();
    sub_10EDC(&qword_3DE8B8, &qword_3DE840, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE898);
  }
  return result;
}

unint64_t sub_25E820()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE8A0;
  if (!qword_3DE8A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE810);
    sub_25E8A4();
    sub_10EDC(&qword_3DE7C8, &qword_3D0808, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE8A0);
  }
  return result;
}

unint64_t sub_25E8A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE8A8;
  if (!qword_3DE8A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE808);
    sub_25E928();
    sub_10EDC(&qword_3D10B0, &qword_3D10B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE8A8);
  }
  return result;
}

unint64_t sub_25E928()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DE8B0;
  if (!qword_3DE8B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DE800);
    sub_89A0((unint64_t *)&qword_3D1050, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DE8B0);
  }
  return result;
}

id ToolbarBlurEffect.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToolbarBlurEffect();
  return objc_msgSendSuper2(&v2, "init");
}

id ToolbarBlurEffect.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ToolbarBlurEffect();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id ToolbarBlurEffect.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToolbarBlurEffect();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void _s23ShelfKitCollectionViews17ToolbarBlurEffectC19effectForAppearanceySo08UIVisualG0CSgSo20UIUserInterfaceStyleVFZ_0(uint64_t a1)
{
  id v2;
  void *v3;
  double v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  Class isa;
  uint64_t v16;

  v2 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 30.0);
  if (v2)
  {
    v3 = (void *)objc_opt_self(UIColorEffect);
    v4 = 2.0;
    if (a1 == 2)
    {
      v4 = 1.0;
      v5 = 0;
    }
    else
    {
      v5 = 5;
    }
    v6 = objc_msgSend(v3, "colorEffectSaturate:", v4);
    v7 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    v8 = (void *)objc_opt_self(UIVisualEffect);
    v9 = objc_msgSend(v8, "effectCompositingColor:withMode:alpha:", v7, v5, 0.88);

    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
      v11 = swift_allocObject(v10, 56, 7);
      *(_OWORD *)(v11 + 16) = xmmword_2EFC80;
      *(_QWORD *)(v11 + 32) = v2;
      *(_QWORD *)(v11 + 40) = v6;
      *(_QWORD *)(v11 + 48) = v9;
      v16 = v11;
      specialized Array._endMutation()(v11);
      sub_25ECB8();
      v12 = v2;
      v13 = v6;
      v14 = v9;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v8, "effectCombiningEffects:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for ToolbarBlurEffect()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17ToolbarBlurEffect);
}

unint64_t sub_25ECB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D1648;
  if (!qword_3D1648)
  {
    v1 = objc_opt_self(UIVisualEffect);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D1648);
  }
  return result;
}

double sub_25ECF4()
{
  double result;

  result = 0.0;
  __asm { FMOV            V1.2D, #20.0 }
  xmmword_3DE908 = xmmword_302730;
  *(_OWORD *)&qword_3DE918 = _Q1;
  return result;
}

id sub_25ED10()
{
  __int16 v0;

  if (qword_3CF628 != -1)
    swift_once(&qword_3CF628, sub_141D6C);
  if (HIBYTE(word_3FC628))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3DE928 = xmmword_302740;
  byte_3DE938 = 0;
  qword_3DE940 = qword_3FC5D0;
  unk_3DE948 = *(_QWORD *)algn_3FC5D8;
  qword_3DE950 = qword_3FC5E0;
  unk_3DE958 = qword_3FC5E8;
  qword_3DE960 = qword_3FC5F0;
  unk_3DE968 = *(_QWORD *)byte_3FC5F8;
  qword_3DE970 = qword_3FC600;
  unk_3DE978 = qword_3FC608;
  qword_3DE980 = qword_3FC610;
  unk_3DE988 = qword_3FC618;
  qword_3DE990 = qword_3FC620;
  word_3DE998 = v0 | word_3FC628 | 0x8000;
  return sub_DDA0((void *)qword_3FC5D0, *(uint64_t *)algn_3FC5D8, qword_3FC5E0, qword_3FC5E8, qword_3FC5F0, byte_3FC5F8[0], (void *)qword_3FC600, qword_3FC608, qword_3FC610, qword_3FC618, qword_3FC620, word_3FC628, SHIBYTE(word_3FC628));
}

id sub_25EDD4()
{
  __int16 v0;

  if (qword_3CF630 != -1)
    swift_once(&qword_3CF630, sub_141F78);
  if (HIBYTE(word_3FC688))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3DE9A0 = xmmword_302740;
  byte_3DE9B0 = 0;
  qword_3DE9B8 = qword_3FC630;
  unk_3DE9C0 = *(_QWORD *)algn_3FC638;
  qword_3DE9C8 = qword_3FC640;
  unk_3DE9D0 = qword_3FC648;
  qword_3DE9D8 = qword_3FC650;
  unk_3DE9E0 = *(_QWORD *)byte_3FC658;
  qword_3DE9E8 = qword_3FC660;
  unk_3DE9F0 = qword_3FC668;
  qword_3DE9F8 = qword_3FC670;
  unk_3DEA00 = qword_3FC678;
  qword_3DEA08 = qword_3FC680;
  word_3DEA10 = v0 | word_3FC688 | 0x8000;
  return sub_DDA0((void *)qword_3FC630, *(uint64_t *)algn_3FC638, qword_3FC640, qword_3FC648, qword_3FC650, byte_3FC658[0], (void *)qword_3FC660, qword_3FC668, qword_3FC670, qword_3FC678, qword_3FC680, word_3FC688, SHIBYTE(word_3FC688));
}

id sub_25EE98()
{
  __int16 v0;

  if (qword_3CF638 != -1)
    swift_once(&qword_3CF638, sub_142184);
  if (HIBYTE(word_3FC6E8))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3DEA18 = xmmword_302750;
  byte_3DEA28 = 0;
  qword_3DEA30 = qword_3FC690;
  unk_3DEA38 = *(_QWORD *)algn_3FC698;
  qword_3DEA40 = qword_3FC6A0;
  unk_3DEA48 = qword_3FC6A8;
  qword_3DEA50 = qword_3FC6B0;
  unk_3DEA58 = *(_QWORD *)byte_3FC6B8;
  qword_3DEA60 = qword_3FC6C0;
  unk_3DEA68 = qword_3FC6C8;
  qword_3DEA70 = qword_3FC6D0;
  unk_3DEA78 = qword_3FC6D8;
  qword_3DEA80 = qword_3FC6E0;
  word_3DEA88 = v0 | word_3FC6E8 | 0x8000;
  return sub_DDA0((void *)qword_3FC690, *(uint64_t *)algn_3FC698, qword_3FC6A0, qword_3FC6A8, qword_3FC6B0, byte_3FC6B8[0], (void *)qword_3FC6C0, qword_3FC6C8, qword_3FC6D0, qword_3FC6D8, qword_3FC6E0, word_3FC6E8, SHIBYTE(word_3FC6E8));
}

id sub_25EF5C()
{
  __int16 v0;

  if (qword_3CF610 != -1)
    swift_once(&qword_3CF610, sub_141C34);
  if (HIBYTE(word_3FC508))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3DEA90 = xmmword_302760;
  byte_3DEAA0 = 0;
  xmmword_3DEAA8 = xmmword_3FC4B0;
  qword_3DEAB8 = qword_3FC4C0;
  unk_3DEAC0 = qword_3FC4C8;
  qword_3DEAC8 = qword_3FC4D0;
  unk_3DEAD0 = qword_3FC4D8;
  qword_3DEAD8 = qword_3FC4E0;
  unk_3DEAE0 = qword_3FC4E8;
  qword_3DEAE8 = qword_3FC4F0;
  unk_3DEAF0 = qword_3FC4F8;
  qword_3DEAF8 = qword_3FC500;
  word_3DEB00 = v0 | word_3FC508 | 0x8000;
  return sub_DDA0((void *)xmmword_3FC4B0, *((uint64_t *)&xmmword_3FC4B0 + 1), qword_3FC4C0, qword_3FC4C8, qword_3FC4D0, qword_3FC4D8, (void *)qword_3FC4E0, qword_3FC4E8, qword_3FC4F0, qword_3FC4F8, qword_3FC500, word_3FC508, SHIBYTE(word_3FC508));
}

id sub_25F020()
{
  __int16 v0;

  if (qword_3CF610 != -1)
    swift_once(&qword_3CF610, sub_141C34);
  if (HIBYTE(word_3FC508))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3DEB08 = xmmword_2FDE80;
  byte_3DEB18 = 0;
  xmmword_3DEB20 = xmmword_3FC4B0;
  qword_3DEB30 = qword_3FC4C0;
  unk_3DEB38 = qword_3FC4C8;
  qword_3DEB40 = qword_3FC4D0;
  unk_3DEB48 = qword_3FC4D8;
  qword_3DEB50 = qword_3FC4E0;
  unk_3DEB58 = qword_3FC4E8;
  qword_3DEB60 = qword_3FC4F0;
  unk_3DEB68 = qword_3FC4F8;
  qword_3DEB70 = qword_3FC500;
  word_3DEB78 = v0 | word_3FC508 | 0x8000;
  return sub_DDA0((void *)xmmword_3FC4B0, *((uint64_t *)&xmmword_3FC4B0 + 1), qword_3FC4C0, qword_3FC4C8, qword_3FC4D0, qword_3FC4D8, (void *)qword_3FC4E0, qword_3FC4E8, qword_3FC4F0, qword_3FC4F8, qword_3FC500, word_3FC508, SHIBYTE(word_3FC508));
}

id sub_25F0E4()
{
  char *v0;
  void *v1;
  id v2;
  char *v3;
  uint64_t v4;
  id v5;
  char v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_body];
  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isInOverflowVC] & 1) != 0
    || (v2 = objc_msgSend(v0, "traitCollection"),
        v3 = (char *)objc_msgSend(v2, "horizontalSizeClass"),
        v2,
        v3 != (_BYTE *)&dword_0 + 2)
    && (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isReviewExpanded] & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    v5 = objc_msgSend(v0, "traitCollection");
    v6 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v6 & 1) != 0)
      v4 = 4;
    else
      v4 = 7;
  }
  return objc_msgSend(v1, "setNumberOfLines:", v4);
}

uint64_t sub_25F1B8()
{
  _BYTE *v0;
  id v1;
  char *v2;
  id v4;
  char v5;

  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isInOverflowVC] & 1) != 0)
    return 0;
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "horizontalSizeClass");

  if (v2 != (_BYTE *)&dword_0 + 2
    && (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isReviewExpanded] & 1) != 0)
  {
    return 0;
  }
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v5 & 1) != 0)
    return 4;
  else
    return 7;
}

char *sub_25F26C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  objc_class *v27;
  char *v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  char v35;
  double v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  _BYTE *v44;
  int v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  objc_super v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int16 v76;

  v9 = type metadata accessor for Locale(0);
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  __chkstk_darwin(v9);
  v63 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_title;
  type metadata accessor for DynamicTypeLabel();
  v12 = qword_3CF628;
  v13 = v4;
  if (v12 != -1)
    swift_once(&qword_3CF628, sub_141D6C);
  v67 = xmmword_3FC5D0;
  v68 = qword_3FC5E0;
  v69 = xmmword_3FC5E8;
  v70 = *(_QWORD *)byte_3FC5F8;
  v71 = qword_3FC600;
  v72 = qword_3FC608;
  v73 = qword_3FC610;
  v74 = qword_3FC618;
  v75 = qword_3FC620;
  v76 = word_3FC628;
  sub_DDA0((void *)xmmword_3FC5D0, *((uint64_t *)&xmmword_3FC5D0 + 1), qword_3FC5E0, xmmword_3FC5E8, *((uint64_t *)&xmmword_3FC5E8 + 1), byte_3FC5F8[0], (void *)qword_3FC600, qword_3FC608, qword_3FC610, qword_3FC618, qword_3FC620, word_3FC628, SHIBYTE(word_3FC628));
  *(_QWORD *)&v4[v11] = sub_A96AC((uint64_t)&v67, 1, 0, 1);
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_rating;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ReviewRatingView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_date;
  if (qword_3CF630 != -1)
    swift_once(&qword_3CF630, sub_141F78);
  v67 = xmmword_3FC630;
  v68 = qword_3FC640;
  v69 = xmmword_3FC648;
  v70 = *(_QWORD *)byte_3FC658;
  v71 = qword_3FC660;
  v72 = qword_3FC668;
  v73 = qword_3FC670;
  v74 = qword_3FC678;
  v75 = qword_3FC680;
  v76 = word_3FC688;
  sub_DDA0((void *)xmmword_3FC630, *((uint64_t *)&xmmword_3FC630 + 1), qword_3FC640, xmmword_3FC648, *((uint64_t *)&xmmword_3FC648 + 1), byte_3FC658[0], (void *)qword_3FC660, qword_3FC668, qword_3FC670, qword_3FC678, qword_3FC680, word_3FC688, SHIBYTE(word_3FC688));
  *(_QWORD *)&v13[v15] = sub_A96AC((uint64_t)&v67, 1, 0, 1);
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_username;
  if (qword_3CF638 != -1)
    swift_once(&qword_3CF638, sub_142184);
  v67 = xmmword_3FC690;
  v68 = qword_3FC6A0;
  v69 = xmmword_3FC6A8;
  v70 = *(_QWORD *)byte_3FC6B8;
  v71 = qword_3FC6C0;
  v72 = qword_3FC6C8;
  v73 = qword_3FC6D0;
  v74 = qword_3FC6D8;
  v75 = qword_3FC6E0;
  v76 = word_3FC6E8;
  sub_DDA0((void *)xmmword_3FC690, *((uint64_t *)&xmmword_3FC690 + 1), qword_3FC6A0, xmmword_3FC6A8, *((uint64_t *)&xmmword_3FC6A8 + 1), byte_3FC6B8[0], (void *)qword_3FC6C0, qword_3FC6C8, qword_3FC6D0, qword_3FC6D8, qword_3FC6E0, word_3FC6E8, SHIBYTE(word_3FC6E8));
  *(_QWORD *)&v13[v16] = sub_A96AC((uint64_t)&v67, 1, 0, 1);
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_body;
  if (qword_3CF610 != -1)
    swift_once(&qword_3CF610, sub_141C34);
  v67 = xmmword_3FC4B0;
  v68 = qword_3FC4C0;
  v69 = xmmword_3FC4C8;
  v70 = qword_3FC4D8;
  v71 = qword_3FC4E0;
  v72 = qword_3FC4E8;
  v73 = qword_3FC4F0;
  v74 = qword_3FC4F8;
  v75 = qword_3FC500;
  v76 = word_3FC508;
  sub_DDA0((void *)xmmword_3FC4B0, *((uint64_t *)&xmmword_3FC4B0 + 1), qword_3FC4C0, xmmword_3FC4C8, *((uint64_t *)&xmmword_3FC4C8 + 1), qword_3FC4D8, (void *)qword_3FC4E0, qword_3FC4E8, qword_3FC4F0, qword_3FC4F8, qword_3FC500, word_3FC508, SHIBYTE(word_3FC508));
  *(_QWORD *)&v13[v17] = sub_A96AC((uint64_t)&v67, 2, 0, 1);
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_more;
  v19 = (void *)objc_opt_self(UIColor);
  v20 = objc_msgSend(v19, "secondarySystemBackgroundColor");
  v21 = sub_23458C(v20);

  *(_QWORD *)&v13[v18] = v21;
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_contentBackgroundColor;
  *(_QWORD *)&v13[v22] = objc_msgSend(v19, "secondarySystemBackgroundColor");
  v13[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isReviewExpanded] = 1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_review] = 0;
  v23 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_currentPresentation];
  v24 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cellReloadingHandler];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_objectGraph] = 0;
  v13[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isInOverflowVC] = 0;
  v26 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cachedSize];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;

  v27 = (objc_class *)type metadata accessor for ModernProductReviewCollectionViewCell(0);
  v66.receiver = v13;
  v66.super_class = v27;
  v28 = (char *)objc_msgSendSuper2(&v66, "initWithFrame:", a1, a2, a3, a4);
  v29 = objc_msgSend(v28, "contentView");
  if (qword_3CFC48 != -1)
    swift_once(&qword_3CFC48, sub_25ECF4);
  objc_msgSend(v29, "setDirectionalLayoutMargins:", xmmword_3DE908, *(double *)&qword_3DE918, *(double *)&qword_3DE920);

  v30 = objc_msgSend(v28, "contentView");
  v31 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_contentBackgroundColor;
  objc_msgSend(v30, "setBackgroundColor:", *(_QWORD *)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_contentBackgroundColor]);

  v32 = objc_msgSend(v28, "contentView");
  v33 = objc_msgSend(v32, "layer");

  v34 = objc_msgSend(v28, "traitCollection");
  v35 = UITraitCollection.interfaceIdiomIsMac.getter();

  v36 = 8.0;
  if ((v35 & 1) != 0)
    v36 = 15.0;
  objc_msgSend(v33, "setCornerRadius:", v36);

  v37 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_body;
  objc_msgSend(*(id *)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_body], "setBackgroundColor:", *(_QWORD *)&v28[v31]);
  v38 = objc_msgSend(v28, "contentView");
  objc_msgSend(v38, "addSubview:", *(_QWORD *)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_title]);

  v39 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_date;
  v40 = *(id *)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_date];
  v41 = objc_msgSend(v19, "lightGrayColor");
  objc_msgSend(v40, "setTextColor:", v41);

  v42 = *(void **)&v28[v39];
  objc_msgSend(v42, "setTextAlignment:", 2);
  v43 = objc_msgSend(v28, "contentView");
  objc_msgSend(v43, "addSubview:", v42);

  v44 = *(_BYTE **)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_rating];
  v45 = v44[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_starSize];
  v44[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_starSize] = 3;
  if (v45 != 3)
    objc_msgSend(v44, "setNeedsDisplay");
  v46 = objc_msgSend(v28, "contentView");
  objc_msgSend(v46, "addSubview:", v44);

  v47 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_username;
  v48 = *(id *)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_username];
  v49 = objc_msgSend(v19, "lightGrayColor");
  objc_msgSend(v48, "setTextColor:", v49);

  v50 = *(void **)&v28[v47];
  objc_msgSend(v50, "setTextAlignment:", 2);
  v51 = objc_msgSend(v28, "contentView");
  objc_msgSend(v51, "addSubview:", v50);

  v52 = *(void **)&v28[v37];
  objc_msgSend(v52, "setBackgroundColor:", *(_QWORD *)&v28[v31]);
  v53 = v52;
  objc_msgSend(v53, "setNumberOfLines:", sub_25F1B8());

  v54 = *(void **)&v28[v37];
  v55 = objc_msgSend(v54, "setLineBreakMode:", 0);
  v56 = v63;
  v57 = static Locale.current.getter(v55);
  v58 = Locale.paragraphAlignment.getter(v57);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v56, v65);
  objc_msgSend(v54, "setTextAlignment:", v58);
  v59 = objc_msgSend(v28, "contentView");
  objc_msgSend(v59, "addSubview:", *(_QWORD *)&v28[v37]);

  v60 = *(void **)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_more];
  objc_msgSend(v60, "setTintColor:", *(_QWORD *)&v28[v31]);
  objc_msgSend(v60, "setUserInteractionEnabled:", 0);
  v61 = objc_msgSend(v28, "contentView");
  objc_msgSend(v61, "addSubview:", v60);

  objc_msgSend(v28, "setIsAccessibilityElement:", 1);
  objc_msgSend(v28, "setAccessibilityTraits:", UIAccessibilityTraitButton);
  sub_25FB48();

  return v28;
}

void sub_25FB48()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  double v19;
  double v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  unsigned __int16 v35;
  id v36;
  double v37;
  double v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void *v51;
  __int128 v52;
  uint64_t v53;
  unsigned __int16 v54;
  id v55;
  double v56;
  double v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  void *v78;
  __int128 v79;
  uint64_t v80;
  unsigned __int16 v81;
  id v82;
  double v83;
  double v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  Class isa;
  double v106;
  double v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  id v120;
  id v121;
  void *v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  void *v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  _QWORD *v137;
  id v138;
  __int128 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  void *v144;
  uint64_t v145;
  __int128 v146;
  uint64_t v147;
  unsigned __int16 v148;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_title];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v133 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_date];
  objc_msgSend(v133, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v126 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_rating];
  objc_msgSend(v126, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_username];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_body];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v130 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_more];
  objc_msgSend(v130, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v0, "contentView");
  v6 = objc_msgSend(v5, "layoutMarginsGuide");

  v7 = objc_msgSend(v6, "bottomAnchor");
  v8 = objc_msgSend(v4, "bottomAnchor");
  v9 = objc_msgSend(v7, "constraintGreaterThanOrEqualToAnchor:", v8);

  LODWORD(v10) = 1132068864;
  v128 = v9;
  objc_msgSend(v9, "setPriority:", v10);
  v129 = (id)objc_opt_self(NSLayoutConstraint);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v12 = swift_allocObject(v11, 160, 7);
  *(_OWORD *)(v12 + 16) = xmmword_2F15A0;
  v13 = objc_msgSend(v2, "firstBaselineAnchor");
  v14 = objc_msgSend(v1, "contentView");
  v15 = objc_msgSend(v14, "layoutMarginsGuide");

  v16 = objc_msgSend(v15, "topAnchor");
  if (qword_3CFC50 != -1)
    swift_once(&qword_3CFC50, sub_25ED10);
  v139 = xmmword_3DE940;
  v140 = qword_3DE950;
  v141 = qword_3DE958;
  v142 = qword_3DE960;
  v143 = byte_3DE968[0];
  v144 = (void *)qword_3DE970;
  v145 = qword_3DE978;
  v146 = xmmword_3DE980;
  v147 = qword_3DE990;
  v148 = word_3DE998;
  sub_1472C((id)xmmword_3DE940, *((uint64_t *)&xmmword_3DE940 + 1), qword_3DE950, qword_3DE958, qword_3DE960, byte_3DE968[0], (void *)qword_3DE970, qword_3DE978, xmmword_3DE980, *((uint64_t *)&xmmword_3DE980 + 1), qword_3DE990, word_3DE998);
  v17 = objc_msgSend(v1, "traitCollection");
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v131 = v4;
  v138 = v3;
  v18 = type metadata accessor for FloatingPointRoundingRule(0);
  v135 = (id)__swift_project_value_buffer(v18, (uint64_t)qword_3FCFB0);
  sub_1DD06C((uint64_t)v17, (uint64_t)v135, 0);
  v20 = v19;

  sub_14788((id)v139, *((uint64_t *)&v139 + 1), v140, v141, v142, v143, v144, v145, v146, *((uint64_t *)&v146 + 1), v147, v148);
  v21 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v16, v20);

  *(_QWORD *)(v12 + 32) = v21;
  v22 = objc_msgSend(v1, "contentView");
  v23 = objc_msgSend(v22, "layoutMarginsGuide");

  v24 = objc_msgSend(v23, "leadingAnchor");
  v25 = objc_msgSend(v2, "leadingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v12 + 40) = v26;
  v123 = objc_msgSend(v133, "firstBaselineAnchor");
  v27 = objc_msgSend(v1, "contentView");
  v28 = objc_msgSend(v27, "layoutMarginsGuide");

  v120 = objc_msgSend(v28, "topAnchor");
  v132 = v2;
  v29 = v1;
  v137 = (_QWORD *)v12;
  if (qword_3CFC58 != -1)
    swift_once(&qword_3CFC58, sub_25EDD4);
  v30 = (void *)xmmword_3DE9B8;
  v31 = qword_3DE9D0;
  v32 = byte_3DE9E0[0];
  v33 = xmmword_3DE9F8;
  v34 = qword_3DEA08;
  v35 = word_3DEA10;
  v114 = qword_3DE9C8;
  v117 = *((_QWORD *)&xmmword_3DE9B8 + 1);
  v109 = (void *)qword_3DE9E8;
  v111 = qword_3DE9D8;
  v108 = qword_3DE9F0;
  sub_1472C((id)xmmword_3DE9B8, *((uint64_t *)&xmmword_3DE9B8 + 1), qword_3DE9C8, qword_3DE9D0, qword_3DE9D8, byte_3DE9E0[0], (void *)qword_3DE9E8, qword_3DE9F0, xmmword_3DE9F8, *((uint64_t *)&xmmword_3DE9F8 + 1), qword_3DEA08, word_3DEA10);
  v36 = objc_msgSend(v29, "traitCollection");
  sub_1DD06C((uint64_t)v36, (uint64_t)v135, 0);
  v38 = v37;

  sub_14788(v30, v117, v114, v31, v111, v32, v109, v108, v33, *((uint64_t *)&v33 + 1), v34, v35);
  v39 = objc_msgSend(v123, "constraintEqualToAnchor:constant:", v120, v38);

  v137[6] = v39;
  v40 = objc_msgSend(v133, "trailingAnchor");
  v41 = objc_msgSend(v29, "contentView");
  v42 = objc_msgSend(v41, "layoutMarginsGuide");

  v43 = objc_msgSend(v42, "trailingAnchor");
  v44 = objc_msgSend(v40, "constraintEqualToAnchor:", v43);

  v137[7] = v44;
  v45 = objc_msgSend(v133, "leadingAnchor");
  v46 = objc_msgSend(v132, "trailingAnchor");
  v47 = objc_msgSend(v45, "constraintGreaterThanOrEqualToAnchor:constant:", v46, 8.0);

  v137[8] = v47;
  v124 = objc_msgSend(v138, "firstBaselineAnchor");
  v121 = objc_msgSend(v133, "lastBaselineAnchor");
  if (qword_3CFC60 != -1)
    swift_once(&qword_3CFC60, sub_25EE98);
  v48 = qword_3DEA48;
  v49 = qword_3DEA50;
  v50 = byte_3DEA58[0];
  v51 = (void *)qword_3DEA60;
  v52 = xmmword_3DEA70;
  v53 = qword_3DEA80;
  v54 = word_3DEA88;
  v115 = *((_QWORD *)&xmmword_3DEA30 + 1);
  v118 = (void *)xmmword_3DEA30;
  v110 = qword_3DEA68;
  v112 = qword_3DEA40;
  sub_1472C((id)xmmword_3DEA30, *((uint64_t *)&xmmword_3DEA30 + 1), qword_3DEA40, qword_3DEA48, qword_3DEA50, byte_3DEA58[0], (void *)qword_3DEA60, qword_3DEA68, xmmword_3DEA70, *((uint64_t *)&xmmword_3DEA70 + 1), qword_3DEA80, word_3DEA88);
  v134 = v29;
  v55 = objc_msgSend(v29, "traitCollection");
  sub_1DD06C((uint64_t)v55, (uint64_t)v135, 0);
  v57 = v56;

  sub_14788(v118, v115, v112, v48, v49, v50, v51, v110, v52, *((uint64_t *)&v52 + 1), v53, v54);
  v58 = objc_msgSend(v124, "constraintEqualToAnchor:constant:", v121, v57);

  v137[9] = v58;
  v59 = objc_msgSend(v138, "trailingAnchor");
  v60 = objc_msgSend(v134, "contentView");
  v61 = objc_msgSend(v60, "layoutMarginsGuide");

  v62 = objc_msgSend(v61, "trailingAnchor");
  v63 = objc_msgSend(v59, "constraintEqualToAnchor:", v62);

  v137[10] = v63;
  v64 = objc_msgSend(v126, "bottomAnchor");
  v65 = objc_msgSend(v138, "lastBaselineAnchor");
  v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

  v137[11] = v66;
  v67 = objc_msgSend(v134, "contentView");
  v68 = objc_msgSend(v67, "layoutMarginsGuide");

  v69 = objc_msgSend(v68, "leadingAnchor");
  v70 = objc_msgSend(v126, "leadingAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

  v137[12] = v71;
  v72 = objc_msgSend(v138, "leadingAnchor");
  v73 = objc_msgSend(v126, "trailingAnchor");
  v74 = objc_msgSend(v72, "constraintGreaterThanOrEqualToAnchor:constant:", v73, 8.0);

  v137[13] = v74;
  v127 = objc_msgSend(v131, "firstBaselineAnchor");
  v125 = objc_msgSend(v138, "lastBaselineAnchor");
  if (qword_3CFC68 != -1)
    swift_once(&qword_3CFC68, sub_25EF5C);
  v75 = qword_3DEAC0;
  v76 = qword_3DEAC8;
  v77 = byte_3DEAD0[0];
  v78 = (void *)qword_3DEAD8;
  v79 = xmmword_3DEAE8;
  v80 = qword_3DEAF8;
  v81 = word_3DEB00;
  v119 = *((_QWORD *)&xmmword_3DEAA8 + 1);
  v122 = (void *)xmmword_3DEAA8;
  v113 = qword_3DEAE0;
  v116 = qword_3DEAB8;
  sub_1472C((id)xmmword_3DEAA8, *((uint64_t *)&xmmword_3DEAA8 + 1), qword_3DEAB8, qword_3DEAC0, qword_3DEAC8, byte_3DEAD0[0], (void *)qword_3DEAD8, qword_3DEAE0, xmmword_3DEAE8, *((uint64_t *)&xmmword_3DEAE8 + 1), qword_3DEAF8, word_3DEB00);
  v82 = objc_msgSend(v134, "traitCollection");
  sub_1DD06C((uint64_t)v82, (uint64_t)v135, 0);
  v84 = v83;

  sub_14788(v122, v119, v116, v75, v76, v77, v78, v113, v79, *((uint64_t *)&v79 + 1), v80, v81);
  v85 = objc_msgSend(v127, "constraintEqualToAnchor:constant:", v125, v84);

  v137[14] = v85;
  v86 = objc_msgSend(v134, "contentView");
  v87 = objc_msgSend(v86, "layoutMarginsGuide");

  v88 = objc_msgSend(v87, "leadingAnchor");
  v89 = objc_msgSend(v131, "leadingAnchor");
  v90 = objc_msgSend(v88, "constraintEqualToAnchor:", v89);

  v137[15] = v90;
  v91 = objc_msgSend(v134, "contentView");
  v92 = objc_msgSend(v91, "layoutMarginsGuide");

  v93 = objc_msgSend(v92, "trailingAnchor");
  v94 = objc_msgSend(v131, "trailingAnchor");
  v95 = objc_msgSend(v93, "constraintEqualToAnchor:", v94);

  v137[16] = v95;
  v137[17] = v128;
  v136 = v128;
  v96 = objc_msgSend(v130, "trailingAnchor");
  v97 = objc_msgSend(v134, "contentView");
  v98 = objc_msgSend(v97, "layoutMarginsGuide");

  v99 = objc_msgSend(v98, "trailingAnchor");
  v100 = objc_msgSend(v96, "constraintEqualToAnchor:", v99);

  v137[18] = v100;
  v101 = objc_msgSend(v130, "firstBaselineAnchor");
  v102 = objc_msgSend(v131, "lastBaselineAnchor");
  v103 = objc_msgSend(v101, "constraintEqualToAnchor:", v102);

  v137[19] = v103;
  specialized Array._endMutation()(v104);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v129, "activateConstraints:", isa, swift_bridgeObjectRelease(v137).n128_f64[0]);

  LODWORD(v106) = 1132068864;
  objc_msgSend(v132, "setContentCompressionResistancePriority:forAxis:", 0, v106);
  LODWORD(v107) = 1132068864;
  objc_msgSend(v138, "setContentCompressionResistancePriority:forAxis:", 0, v107);

}

id sub_260A2C()
{
  char *v0;
  char *v1;
  double v2;
  id result;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ModernProductReviewCollectionViewCell(0);
  objc_msgSendSuper2(&v4, "prepareForReuse");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_title], "setText:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_date], "setText:", 0);
  v1 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_rating];
  v2 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_rating];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_rating] = 0;
  if (v2 != 0.0)
    objc_msgSend(v1, "setNeedsDisplay");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_username], "setText:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_body], "setText:", 0);
  result = objc_msgSend(v0, "setHidden:", 0);
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isInOverflowVC] = 0;
  return result;
}

id sub_260CA0()
{
  char *v0;
  id result;
  double v2;
  char *v3;
  double v4;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ModernProductReviewCollectionViewCell(0);
  objc_msgSendSuper2(&v8, "layoutSubviews");
  result = objc_msgSend(v0, "bounds");
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cachedSize];
  if (v4 != *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cachedSize]
    || v2 != *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cachedSize
                          + 8])
  {
    objc_msgSend(v0, "bounds");
    *(_QWORD *)v3 = v6;
    *((_QWORD *)v3 + 1) = v7;
    return sub_260D58();
  }
  return result;
}

id sub_260D58()
{
  _BYTE *v0;
  id result;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  double Width;
  uint64_t v8;
  uint64_t inited;
  NSString *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString *v14;
  void *v15;
  id v16;
  unint64_t v17;
  Class isa;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double Height;
  uint64_t v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isReviewExpanded] & 1) != 0)
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_more], "setHidden:", 1);
  objc_msgSend(v0, "layoutIfNeeded");
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_body];
  result = objc_msgSend(v2, "text");
  if (result)
  {
    v3 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v5 = v4;

    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "frame", swift_bridgeObjectRelease(v5).n128_f64[0]);
    Width = CGRectGetWidth(v29);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
    inited = swift_initStackObject(v8, &v28);
    *(_OWORD *)(inited + 16) = xmmword_2EFA20;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v10 = NSFontAttributeName;
    result = objc_msgSend(v2, "font");
    if (result)
    {
      v11 = result;
      v12 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
      *(_QWORD *)(inited + 40) = v11;
      *(_QWORD *)(inited + 64) = v12;
      *(_QWORD *)(inited + 72) = NSParagraphStyleAttributeName;
      v13 = qword_3CF0D8;
      v14 = NSParagraphStyleAttributeName;
      if (v13 != -1)
        swift_once(&qword_3CF0D8, sub_28A30);
      v15 = (void *)qword_3FA958;
      *(_QWORD *)(inited + 104) = sub_E710(0, &qword_3DD870, NSParagraphStyle_ptr);
      *(_QWORD *)(inited + 80) = v15;
      v16 = v15;
      v17 = sub_D4784(inited);
      type metadata accessor for Key(0);
      sub_152348();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v17);
      objc_msgSend(v6, "boundingRectWithSize:options:attributes:context:", 1, isa, 0, Width, 1.79769313e308);
      v20 = v19;
      v22 = v21;
      v24 = v23;
      v26 = v25;

      objc_msgSend(v2, "frame");
      Height = CGRectGetHeight(v30);
      v31.origin.x = v20;
      v31.origin.y = v22;
      v31.size.width = v24;
      v31.size.height = v26;
      return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_more], "setHidden:", Height >= CGRectGetHeight(v31));
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_261014()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ModernProductReviewCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_261114()
{
  return type metadata accessor for ModernProductReviewCollectionViewCell(0);
}

uint64_t type metadata accessor for ModernProductReviewCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3DEBF8;
  if (!qword_3DEBF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ModernProductReviewCollectionViewCell);
  return result;
}

void sub_261158(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[14];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = &unk_3027C8;
  v4[8] = &unk_3027E0;
  sub_D2650(319);
  if (v3 <= 0x3F)
  {
    v4[9] = *(_QWORD *)(v2 - 8) + 64;
    v4[10] = &unk_3027F8;
    v4[11] = &unk_3027E0;
    v4[12] = &unk_3027C8;
    v4[13] = &unk_302810;
    swift_updateClassMetadata2(a1, 256, 14, v4, a1 + 80);
  }
}

double sub_261274(void *a1)
{
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  unsigned __int16 v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  unsigned __int16 v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  char v42;
  void *v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  unsigned __int16 v47;
  double v48;
  double v49;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  void *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  unsigned __int16 v77;

  if (qword_3CF610 != -1)
    swift_once(&qword_3CF610, sub_141C34);
  v1 = *((_QWORD *)&xmmword_3FC4C8 + 1);
  v2 = qword_3FC4D8;
  v3 = (void *)qword_3FC4E0;
  v5 = qword_3FC4F0;
  v4 = qword_3FC4F8;
  v6 = qword_3FC500;
  v7 = word_3FC508;
  v8 = HIBYTE(word_3FC508);
  v53 = (void *)xmmword_3FC4B0;
  v57 = qword_3FC4E8;
  v64 = qword_3FC4C0;
  v65 = *((_QWORD *)&xmmword_3FC4B0 + 1);
  v61 = xmmword_3FC4C8;
  sub_DDA0((void *)xmmword_3FC4B0, *((uint64_t *)&xmmword_3FC4B0 + 1), qword_3FC4C0, xmmword_3FC4C8, *((uint64_t *)&xmmword_3FC4C8 + 1), qword_3FC4D8, (void *)qword_3FC4E0, qword_3FC4E8, qword_3FC4F0, qword_3FC4F8, qword_3FC500, word_3FC508, SHIBYTE(word_3FC508));
  v9 = sub_143914(a1);
  sub_DCC8(v53, v65, v64, v61, v1, v2, v3, v57, v5, v4, v6, v7, v8);
  objc_msgSend(v9, "lineHeight");
  v11 = v10;
  objc_msgSend(v9, "leading");
  v13 = v12;
  v14 = a1;
  v62 = UITraitCollection.interfaceIdiomIsMac.getter();

  if (qword_3CFC58 != -1)
    swift_once(&qword_3CFC58, sub_25EDD4);
  v68 = xmmword_3DE9B8;
  v69 = qword_3DE9C8;
  v70 = qword_3DE9D0;
  v71 = qword_3DE9D8;
  v72 = byte_3DE9E0[0];
  v73 = (void *)qword_3DE9E8;
  v74 = qword_3DE9F0;
  v75 = xmmword_3DE9F8;
  v76 = qword_3DEA08;
  v77 = word_3DEA10;
  sub_1472C((id)xmmword_3DE9B8, *((uint64_t *)&xmmword_3DE9B8 + 1), qword_3DE9C8, qword_3DE9D0, qword_3DE9D8, byte_3DE9E0[0], (void *)qword_3DE9E8, qword_3DE9F0, xmmword_3DE9F8, *((uint64_t *)&xmmword_3DE9F8 + 1), qword_3DEA08, word_3DEA10);
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v15 = type metadata accessor for FloatingPointRoundingRule(0);
  v67 = __swift_project_value_buffer(v15, (uint64_t)qword_3FCFB0);
  sub_1DD06C((uint64_t)v14, v67, 0);
  v17 = v16;
  sub_14788((id)v68, *((uint64_t *)&v68 + 1), v69, v70, v71, v72, v73, v74, v75, *((uint64_t *)&v75 + 1), v76, v77);
  if (qword_3CFC60 != -1)
    swift_once(&qword_3CFC60, sub_25EE98);
  v18 = *((_QWORD *)&xmmword_3DEA30 + 1);
  v19 = qword_3DEA40;
  v20 = qword_3DEA48;
  v21 = qword_3DEA50;
  v22 = byte_3DEA58[0];
  v23 = xmmword_3DEA70;
  v24 = qword_3DEA80;
  v25 = word_3DEA88;
  v54 = (void *)qword_3DEA60;
  v58 = (void *)xmmword_3DEA30;
  v51 = qword_3DEA68;
  sub_1472C((id)xmmword_3DEA30, *((uint64_t *)&xmmword_3DEA30 + 1), qword_3DEA40, qword_3DEA48, qword_3DEA50, byte_3DEA58[0], (void *)qword_3DEA60, qword_3DEA68, xmmword_3DEA70, *((uint64_t *)&xmmword_3DEA70 + 1), qword_3DEA80, word_3DEA88);
  sub_1DD06C((uint64_t)v14, v67, 0);
  v27 = v26;
  sub_14788(v58, v18, v19, v20, v21, v22, v54, v51, v23, *((uint64_t *)&v23 + 1), v24, v25);
  if (qword_3CFC68 != -1)
    swift_once(&qword_3CFC68, sub_25EF5C);
  v28 = qword_3DEAC0;
  v29 = qword_3DEAC8;
  v30 = byte_3DEAD0[0];
  v31 = (void *)qword_3DEAD8;
  v32 = qword_3DEAE0;
  v33 = xmmword_3DEAE8;
  v34 = qword_3DEAF8;
  v35 = word_3DEB00;
  v55 = *((_QWORD *)&xmmword_3DEAA8 + 1);
  v59 = (void *)xmmword_3DEAA8;
  v52 = qword_3DEAB8;
  sub_1472C((id)xmmword_3DEAA8, *((uint64_t *)&xmmword_3DEAA8 + 1), qword_3DEAB8, qword_3DEAC0, qword_3DEAC8, byte_3DEAD0[0], (void *)qword_3DEAD8, qword_3DEAE0, xmmword_3DEAE8, *((uint64_t *)&xmmword_3DEAE8 + 1), qword_3DEAF8, word_3DEB00);
  sub_1DD06C((uint64_t)v14, v67, 0);
  v37 = v36;
  sub_14788(v59, v55, v52, v28, v29, v30, v31, v32, v33, *((uint64_t *)&v33 + 1), v34, v35);
  if (qword_3CFC70 != -1)
    swift_once(&qword_3CFC70, sub_25F020);
  v38 = 6.0;
  if ((v62 & 1) != 0)
    v38 = 3.0;
  v39 = qword_3DEB38;
  v40 = (v11 + v13) * v38 + v17 + v27 + v37;
  v41 = qword_3DEB40;
  v42 = byte_3DEB48[0];
  v43 = (void *)qword_3DEB50;
  v44 = qword_3DEB58;
  v45 = xmmword_3DEB60;
  v46 = qword_3DEB70;
  v47 = word_3DEB78;
  v60 = *((_QWORD *)&xmmword_3DEB20 + 1);
  v63 = (void *)xmmword_3DEB20;
  v56 = qword_3DEB30;
  sub_1472C((id)xmmword_3DEB20, *((uint64_t *)&xmmword_3DEB20 + 1), qword_3DEB30, qword_3DEB38, qword_3DEB40, byte_3DEB48[0], (void *)qword_3DEB50, qword_3DEB58, xmmword_3DEB60, *((uint64_t *)&xmmword_3DEB60 + 1), qword_3DEB70, word_3DEB78);
  sub_1DD06C((uint64_t)v14, v67, 0);
  v49 = v48;
  sub_14788(v63, v60, v56, v39, v41, v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, v47);

  return ceil(v40 + v49);
}

id sub_2617F8(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_contentBackgroundColor;
  v3 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_contentBackgroundColor];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_contentBackgroundColor] = a1;
  v4 = a1;

  v5 = objc_msgSend(v1, "contentView");
  objc_msgSend(v5, "setBackgroundColor:", *(_QWORD *)&v1[v2]);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_body], "setBackgroundColor:", *(_QWORD *)&v1[v2]);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_more], "setBackgroundColor:", *(_QWORD *)&v1[v2]);
}

double sub_26188C(uint64_t a1, uint64_t a2, char a3, id a4, uint64_t a5, double a6)
{
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  unsigned __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  unsigned __int16 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int16 v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t inited;
  uint64_t v49;
  NSString *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  NSString *v66;
  void *v67;
  id v68;
  unint64_t v69;
  id v70;
  id v71;
  id v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char v77;
  char v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t ObjectType;
  uint64_t v95;
  id v96;
  void *v97;
  char v98[64];
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  unsigned __int16 v110;
  CGRect v111;

  if ((a3 & 1) != 0)
  {
    if (qword_3CFC58 != -1)
    {
      v73 = a4;
      swift_once(&qword_3CFC58, sub_25EDD4);
      a4 = v73;
    }
    v96 = a4;
    v7 = xmmword_3DE9B8;
    v8 = qword_3DE9C8;
    v9 = qword_3DE9D0;
    v10 = qword_3DE9D8;
    v11 = byte_3DE9E0[0];
    v12 = (void *)qword_3DE9E8;
    v13 = qword_3DE9F0;
    v14 = xmmword_3DE9F8;
    v15 = qword_3DEA08;
    v16 = word_3DEA10;
    v99 = xmmword_3DE9A0;
    LOBYTE(v100) = byte_3DE9B0;
    v101 = xmmword_3DE9B8;
    v102 = qword_3DE9C8;
    v103 = qword_3DE9D0;
    v104 = qword_3DE9D8;
    v105 = *(_QWORD *)byte_3DE9E0;
    v106 = (void *)qword_3DE9E8;
    v107 = qword_3DE9F0;
    v108 = xmmword_3DE9F8;
    v109 = qword_3DEA08;
    v110 = word_3DEA10;
    ObjectType = swift_getObjectType();
    sub_1472C((id)v7, *((uint64_t *)&v7 + 1), v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, v16);
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v17 = type metadata accessor for FloatingPointRoundingRule(0);
    v92 = __swift_project_value_buffer(v17, (uint64_t)qword_3FCFB0);
    sub_1DE4C4(v96, v92, 0, (uint64_t)&v99);
    sub_14788((id)v101, *((uint64_t *)&v101 + 1), v102, v103, v104, v105, v106, v107, v108, *((uint64_t *)&v108 + 1), v109, v110);
    if (qword_3CFC60 != -1)
      swift_once(&qword_3CFC60, sub_25EE98);
    v18 = qword_3DEA40;
    v19 = qword_3DEA48;
    v20 = qword_3DEA50;
    v21 = byte_3DEA58[0];
    v22 = (void *)qword_3DEA60;
    v23 = qword_3DEA68;
    v24 = xmmword_3DEA70;
    v25 = qword_3DEA80;
    v26 = word_3DEA88;
    v99 = xmmword_3DEA18;
    LOBYTE(v100) = byte_3DEA28;
    v86 = (void *)xmmword_3DEA30;
    v101 = xmmword_3DEA30;
    v80 = *((_QWORD *)&xmmword_3DEA30 + 1);
    v102 = qword_3DEA40;
    v103 = qword_3DEA48;
    v104 = qword_3DEA50;
    v105 = *(_QWORD *)byte_3DEA58;
    v106 = (void *)qword_3DEA60;
    v107 = qword_3DEA68;
    v108 = xmmword_3DEA70;
    v109 = qword_3DEA80;
    v110 = word_3DEA88;
    sub_1472C((id)xmmword_3DEA30, *((uint64_t *)&xmmword_3DEA30 + 1), qword_3DEA40, qword_3DEA48, qword_3DEA50, byte_3DEA58[0], (void *)qword_3DEA60, qword_3DEA68, xmmword_3DEA70, *((uint64_t *)&xmmword_3DEA70 + 1), qword_3DEA80, word_3DEA88);
    sub_1DE4C4(v96, v92, 0, (uint64_t)&v99);
    sub_14788(v86, v80, v18, v19, v20, v21, v22, v23, v24, *((uint64_t *)&v24 + 1), v25, v26);
    if (qword_3CFC68 != -1)
      swift_once(&qword_3CFC68, sub_25EF5C);
    v27 = qword_3DEAB8;
    v28 = qword_3DEAC0;
    v29 = qword_3DEAC8;
    v30 = byte_3DEAD0[0];
    v31 = (void *)qword_3DEAD8;
    v32 = qword_3DEAE0;
    v33 = xmmword_3DEAE8;
    v34 = qword_3DEAF8;
    v35 = word_3DEB00;
    v99 = xmmword_3DEA90;
    LOBYTE(v100) = byte_3DEAA0;
    v87 = (void *)xmmword_3DEAA8;
    v101 = xmmword_3DEAA8;
    v81 = *((_QWORD *)&xmmword_3DEAA8 + 1);
    v102 = qword_3DEAB8;
    v103 = qword_3DEAC0;
    v104 = qword_3DEAC8;
    v105 = *(_QWORD *)byte_3DEAD0;
    v106 = (void *)qword_3DEAD8;
    v107 = qword_3DEAE0;
    v108 = xmmword_3DEAE8;
    v109 = qword_3DEAF8;
    v110 = word_3DEB00;
    sub_1472C((id)xmmword_3DEAA8, *((uint64_t *)&xmmword_3DEAA8 + 1), qword_3DEAB8, qword_3DEAC0, qword_3DEAC8, byte_3DEAD0[0], (void *)qword_3DEAD8, qword_3DEAE0, xmmword_3DEAE8, *((uint64_t *)&xmmword_3DEAE8 + 1), qword_3DEAF8, word_3DEB00);
    sub_1DE4C4(v96, v92, 0, (uint64_t)&v99);
    sub_14788(v87, v81, v27, v28, v29, v30, v31, v32, v33, *((uint64_t *)&v33 + 1), v34, v35);
    if (qword_3CFC48 != -1)
      swift_once(&qword_3CFC48, sub_25ECF4);
    if (qword_3CFC70 != -1)
      swift_once(&qword_3CFC70, sub_25F020);
    v36 = qword_3DEB30;
    v37 = qword_3DEB38;
    v38 = qword_3DEB40;
    v39 = byte_3DEB48[0];
    v40 = (void *)qword_3DEB50;
    v41 = qword_3DEB58;
    v42 = xmmword_3DEB60;
    v43 = qword_3DEB70;
    v44 = word_3DEB78;
    v99 = xmmword_3DEB08;
    LOBYTE(v100) = byte_3DEB18;
    v88 = (void *)xmmword_3DEB20;
    v101 = xmmword_3DEB20;
    v82 = *((_QWORD *)&xmmword_3DEB20 + 1);
    v102 = qword_3DEB30;
    v103 = qword_3DEB38;
    v104 = qword_3DEB40;
    v105 = *(_QWORD *)byte_3DEB48;
    v106 = (void *)qword_3DEB50;
    v107 = qword_3DEB58;
    v108 = xmmword_3DEB60;
    v109 = qword_3DEB70;
    v110 = word_3DEB78;
    sub_1472C((id)xmmword_3DEB20, *((uint64_t *)&xmmword_3DEB20 + 1), qword_3DEB30, qword_3DEB38, qword_3DEB40, byte_3DEB48[0], (void *)qword_3DEB50, qword_3DEB58, xmmword_3DEB60, *((uint64_t *)&xmmword_3DEB60 + 1), qword_3DEB70, word_3DEB78);
    sub_1DE4C4(v96, v92, 0, (uint64_t)&v99);
    sub_14788(v88, v82, v36, v37, v38, v39, v40, v41, v42, *((uint64_t *)&v42 + 1), v43, v44);
    v45 = a6 - *((double *)&xmmword_3DE908 + 1);
    v46 = *(double *)&qword_3DE920;
    v83 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
    (*(void (**)(uint64_t))(a5 + 16))(ObjectType);
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
    inited = swift_initStackObject(v47, v98);
    *(_OWORD *)(inited + 16) = xmmword_2EFA20;
    v79 = (_QWORD *)inited;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v49 = qword_3CF610;
    v50 = NSFontAttributeName;
    if (v49 != -1)
      swift_once(&qword_3CF610, sub_141C34);
    v51 = xmmword_3FC4B0;
    v52 = xmmword_3FC4C8;
    v95 = qword_3FC4C0;
    v97 = (void *)xmmword_3FC4B0;
    v91 = qword_3FC4D8;
    v93 = *((_QWORD *)&xmmword_3FC4C8 + 1);
    v53 = qword_3FC4E8;
    v89 = (void *)qword_3FC4E0;
    v55 = qword_3FC4F0;
    v54 = qword_3FC4F8;
    v74 = qword_3FC4F0;
    v75 = (void *)qword_3FC4F8;
    v56 = qword_3FC500;
    v76 = qword_3FC500;
    v57 = word_3FC508;
    v58 = HIBYTE(word_3FC508);
    v77 = word_3FC508;
    v78 = HIBYTE(word_3FC508);
    v59 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
    sub_DDA0((void *)v51, *((uint64_t *)&v51 + 1), v95, v52, v93, v91, v89, v53, v55, v54, v56, v57, v58);
    v60 = objc_msgSend(v59, "system");
    v61 = objc_msgSend(v60, "preferredContentSizeCategory");

    v62 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v61);
    v99 = v51;
    v100 = v95;
    *(_QWORD *)&v101 = v52;
    *((_QWORD *)&v101 + 1) = v93;
    v102 = v91;
    v103 = (uint64_t)v89;
    v104 = v53;
    v105 = v74;
    v106 = v75;
    v107 = v76;
    LOBYTE(v108) = v77;
    BYTE1(v108) = v78;
    v63 = sub_1D5728((uint64_t)&v99, v62);
    v64 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v63, 0.0);

    sub_DCC8(v97, *((uint64_t *)&v51 + 1), v95, v52, v93, v91, v89, v53, v74, (uint64_t)v75, v76, v77, v78);
    v79[5] = v64;
    v79[6] = NSParagraphStyleAttributeName;
    v65 = qword_3CF0D8;
    v66 = NSParagraphStyleAttributeName;
    if (v65 != -1)
      swift_once(&qword_3CF0D8, sub_28A30);
    v67 = (void *)qword_3FA958;
    v79[7] = qword_3FA958;
    v68 = v67;
    v69 = sub_D47A0((uint64_t)v79);
    v70 = v83;
    v111.origin.x = sub_21A7CC(a1, a2, 1uLL, v69, v83, v45 - v46, 1.79769313e308);
    CGRectGetHeight(v111);
    swift_bridgeObjectRelease(v69);

  }
  else
  {
    v71 = objc_msgSend(a4, "traitCollection");
    sub_261274(v71);

  }
  return a6;
}

void sub_2620AC()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_title;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF628 != -1)
    swift_once(&qword_3CF628, sub_141D6C);
  v16 = xmmword_3FC5D0;
  v17 = qword_3FC5E0;
  v18 = xmmword_3FC5E8;
  v19 = *(_QWORD *)byte_3FC5F8;
  v20 = qword_3FC600;
  v21 = qword_3FC608;
  v22 = qword_3FC610;
  v23 = qword_3FC618;
  v24 = qword_3FC620;
  v25 = word_3FC628;
  sub_DDA0((void *)xmmword_3FC5D0, *((uint64_t *)&xmmword_3FC5D0 + 1), qword_3FC5E0, xmmword_3FC5E8, *((uint64_t *)&xmmword_3FC5E8 + 1), byte_3FC5F8[0], (void *)qword_3FC600, qword_3FC608, qword_3FC610, qword_3FC618, qword_3FC620, word_3FC628, SHIBYTE(word_3FC628));
  *(_QWORD *)&v0[v2] = sub_A96AC((uint64_t)&v16, 1, 0, 1);
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_rating;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ReviewRatingView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_date;
  if (qword_3CF630 != -1)
    swift_once(&qword_3CF630, sub_141F78);
  v16 = xmmword_3FC630;
  v17 = qword_3FC640;
  v18 = xmmword_3FC648;
  v19 = *(_QWORD *)byte_3FC658;
  v20 = qword_3FC660;
  v21 = qword_3FC668;
  v22 = qword_3FC670;
  v23 = qword_3FC678;
  v24 = qword_3FC680;
  v25 = word_3FC688;
  sub_DDA0((void *)xmmword_3FC630, *((uint64_t *)&xmmword_3FC630 + 1), qword_3FC640, xmmword_3FC648, *((uint64_t *)&xmmword_3FC648 + 1), byte_3FC658[0], (void *)qword_3FC660, qword_3FC668, qword_3FC670, qword_3FC678, qword_3FC680, word_3FC688, SHIBYTE(word_3FC688));
  *(_QWORD *)&v0[v4] = sub_A96AC((uint64_t)&v16, 1, 0, 1);
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_username;
  if (qword_3CF638 != -1)
    swift_once(&qword_3CF638, sub_142184);
  v16 = xmmword_3FC690;
  v17 = qword_3FC6A0;
  v18 = xmmword_3FC6A8;
  v19 = *(_QWORD *)byte_3FC6B8;
  v20 = qword_3FC6C0;
  v21 = qword_3FC6C8;
  v22 = qword_3FC6D0;
  v23 = qword_3FC6D8;
  v24 = qword_3FC6E0;
  v25 = word_3FC6E8;
  sub_DDA0((void *)xmmword_3FC690, *((uint64_t *)&xmmword_3FC690 + 1), qword_3FC6A0, xmmword_3FC6A8, *((uint64_t *)&xmmword_3FC6A8 + 1), byte_3FC6B8[0], (void *)qword_3FC6C0, qword_3FC6C8, qword_3FC6D0, qword_3FC6D8, qword_3FC6E0, word_3FC6E8, SHIBYTE(word_3FC6E8));
  *(_QWORD *)&v0[v5] = sub_A96AC((uint64_t)&v16, 1, 0, 1);
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_body;
  if (qword_3CF610 != -1)
    swift_once(&qword_3CF610, sub_141C34);
  v16 = xmmword_3FC4B0;
  v17 = qword_3FC4C0;
  v18 = xmmword_3FC4C8;
  v19 = qword_3FC4D8;
  v20 = qword_3FC4E0;
  v21 = qword_3FC4E8;
  v22 = qword_3FC4F0;
  v23 = qword_3FC4F8;
  v24 = qword_3FC500;
  v25 = word_3FC508;
  sub_DDA0((void *)xmmword_3FC4B0, *((uint64_t *)&xmmword_3FC4B0 + 1), qword_3FC4C0, xmmword_3FC4C8, *((uint64_t *)&xmmword_3FC4C8 + 1), qword_3FC4D8, (void *)qword_3FC4E0, qword_3FC4E8, qword_3FC4F0, qword_3FC4F8, qword_3FC500, word_3FC508, SHIBYTE(word_3FC508));
  *(_QWORD *)&v0[v6] = sub_A96AC((uint64_t)&v16, 2, 0, 1);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_more;
  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "secondarySystemBackgroundColor");
  v10 = sub_23458C(v9);

  *(_QWORD *)&v1[v7] = v10;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_contentBackgroundColor;
  *(_QWORD *)&v1[v11] = objc_msgSend(v8, "secondarySystemBackgroundColor");
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isReviewExpanded] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_review] = 0;
  v12 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_currentPresentation];
  v13 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cellReloadingHandler];
  *v14 = 0;
  v14[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_objectGraph] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_isInOverflowVC] = 0;
  v15 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37ModernProductReviewCollectionViewCell_cachedSize];
  *v15 = 0;
  v15[1] = 0;

  *(_QWORD *)&v16 = 0;
  *((_QWORD *)&v16 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(*((_QWORD *)&v16 + 1));
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ModernProductReviewCollectionViewCell.swift", 67, 2, 173, 0);
  __break(1u);
}

uint64_t sub_2624F4(uint64_t result, char a2)
{
  _BYTE *v2;
  char v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id (*v15)();
  void *v16;
  uint64_t v17;
  _BYTE *v18;
  double v19;
  void *v20;
  void *v21;
  _QWORD v22[5];
  uint64_t v23;

  v3 = result & 1;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_isHovering;
  if (v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_isHovering] == (result & 1))
    return result;
  v6 = result;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_isHovering] = v3;
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
  v8 = type metadata accessor for LegacyArtworkWithPlaybackStatusView(0);
  v9 = swift_dynamicCastClass(v7, v8);
  if (v9)
  {
    *(_BYTE *)(v9 + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressHidden) = v3;
    v10 = *(void **)(v9 + OBJC_IVAR____TtC23ShelfKitCollectionViews35LegacyArtworkWithPlaybackStatusView_progressOverlay);
    if (v10)
    {
      v11 = 1.0;
      if ((v6 & 1) != 0)
        v11 = 0.0;
      objc_msgSend(v10, "setAlpha:", v11);
    }
  }
  if (v2[v4] != 1)
    goto LABEL_12;
  if ((a2 & 1) == 0)
  {
LABEL_11:
    sub_26411C();
LABEL_12:
    v15 = 0;
    v13 = 0;
    goto LABEL_13;
  }
  v12 = objc_opt_self(UIView);
  v13 = swift_allocObject(&unk_38DE38, 24, 7);
  *(_QWORD *)(v13 + 16) = v2;
  v14 = swift_allocObject(&unk_38DE60, 32, 7);
  v15 = sub_264E54;
  *(_QWORD *)(v14 + 16) = sub_264E54;
  *(_QWORD *)(v14 + 24) = v13;
  v22[4] = sub_101EC;
  v23 = v14;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_920D4;
  v22[3] = &block_descriptor_59;
  v16 = _Block_copy(v22);
  v17 = v23;
  v18 = v2;
  swift_retain(v14);
  objc_msgSend((id)v12, "performWithoutAnimation:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v14, "", 128, 253, 48, 1);
  swift_release(v14);
  if ((v12 & 1) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
LABEL_13:
  if (v2[v4])
    v19 = 1.0;
  else
    v19 = 0.0;
  v20 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton];
  if (v20)
    objc_msgSend(v20, "setAlpha:", v19);
  v21 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextButton];
  if (v21)
    objc_msgSend(v21, "setAlpha:", v19);
  return sub_1D618((uint64_t)v15, v13);
}

void sub_262730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  _BYTE v15[24];
  _QWORD v16[5];

  v2 = v1;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_objectGraph);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_objectGraph) = a1;
  swift_release(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v16, v5, v5);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_episodePlayStateController);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_episodePlayStateController) = v16[0];
  swift_release(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  BaseObjectGraph.inject<A>(_:)(v16, v7, v7);
  v8 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_libraryActionController;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_libraryActionController, v15, 33, 0);
  sub_265294((uint64_t)v16, v8);
  swift_endAccess(v15);
  v9 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextButton);
  if (v9)
  {
    v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph];
    *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph] = a1;
    v11 = v9;
    swift_release(v10);
    swift_retain(a1);

  }
  v12 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton);
  if (v12)
  {
    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph];
    *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph] = a1;
    v14 = v12;
    swift_release(v13);
    swift_retain(a1);

  }
}

double sub_262880()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double (**v11)(void *);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double result;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char v31[24];

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = dispatch thunk of LegacyLockup.playAction.getter(v3);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction;
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction] = v6;
  swift_retain_n(v6, 2);
  swift_release(v8);
  v9 = *(char **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton];
  if (v9)
  {
    v10 = swift_allocObject(&unk_38DEB0, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v1);
    v11 = (double (**)(void *))&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
    v12 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
    v13 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8];
    *v11 = sub_59D70;
    v11[1] = (double (*)(void *))v10;
    v14 = v9;
    sub_1D618(v12, v13);
    objc_msgSend(v14, "setHidden:", *(_QWORD *)&v1[v7] == 0);
    swift_release_n(v6, 2);

  }
  else
  {
    swift_release_n(v6, 2);
  }
  sub_2650AC(0);
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_episodePlayStateController];
  if (v16)
  {
    v17 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_episodePlayStateController]);
    v18 = LegacyLockup.adamId.getter(v17);
    v19 = type metadata accessor for PlaybackStatusPresenter(0);
    swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    swift_retain(v16);
    v20 = sub_276978(v18, v16);
    v20[5] = &off_38DE10;
    v21 = swift_unknownObjectWeakAssign(v20 + 4, v1);
    Strong = swift_unknownObjectWeakLoadStrong(v21);
    if (Strong)
    {
      v23 = Strong;
      v24 = v20[5];
      ObjectType = swift_getObjectType();
      v26 = (uint64_t)v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
      swift_beginAccess((char *)v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v31, 0, 0);
      sub_F8BC(v26, (uint64_t)v5);
      v27 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 8);
      v28 = v1;
      v27(v5, ObjectType, v24);
      swift_unknownObjectRelease(v23);
      sub_AEEF0((uint64_t)v5);
      swift_release(v16);

    }
    else
    {
      swift_release(v16);
    }
    v29 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playbackStatusPresenter];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playbackStatusPresenter] = v20;
    *(_QWORD *)&result = swift_release(v29).n128_u64[0];
  }
  return result;
}

double sub_262AE8(char a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v8;
  CGFloat v9;
  uint64_t v10;
  void *v11;
  CGRect v13;
  CGRect v14;

  v8 = a2;
  if (!a1 || a1 == 5)
  {
    v10 = sub_26316C(a1);
    if (v10)
    {
      v11 = (void *)v10;
      v14.origin.x = v8;
      v14.origin.y = a3;
      v14.size.width = a4;
      v14.size.height = a5;
      CGRectGetMaxY(v14);
      objc_msgSend(v11, "size");
      objc_msgSend(v11, "size");

      return 10.0;
    }
    else
    {
      return 0.0;
    }
  }
  else if (a1 == 6)
  {
    v9 = CGRectGetMaxX(*(CGRect *)&a2) + -34.0 + -16.0;
    v13.origin.x = v8;
    v13.origin.y = a3;
    v13.size.width = a4;
    v13.size.height = a5;
    CGRectGetMaxY(v13);
    return v9;
  }
  return v8;
}

double sub_262C1C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double (**v13)(void *);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  char v43[24];

  v2 = v1;
  v4 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v4);
  v6 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = dispatch thunk of LegacyLockup.playAction.getter(v7);
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction;
  v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction];
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction] = v8;
  swift_retain_n(v8, 2);
  swift_release(v10);
  v11 = *(char **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton];
  if (v11)
  {
    v12 = swift_allocObject(&unk_38DEB0, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v2);
    v13 = (double (**)(void *))&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
    v14 = *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
    v15 = *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8];
    *v13 = sub_59D70;
    v13[1] = (double (*)(void *))v12;
    v16 = v11;
    sub_1D618(v14, v15);
    objc_msgSend(v16, "setHidden:", *(_QWORD *)&v2[v9] == 0);
    swift_release_n(v8, 2);

  }
  else
  {
    v17 = swift_release_n(v8, 2);
  }
  v18 = dispatch thunk of LegacyLockup.contextAction.getter(v17);
  sub_2650AC(v18);
  v19 = swift_release(v18);
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_episodePlayStateController];
  if (v20)
  {
    v21 = type metadata accessor for LibraryEpisodeLockup(0, v19);
    if (swift_dynamicCastClass(a1, v21))
    {
      v22 = swift_retain(v20);
      v23 = LibraryEpisodeLockup.uuid.getter(v22);
      v25 = v24;
      v26 = type metadata accessor for PlaybackStatusPresenter(0);
      swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
      swift_retain(v20);
      v27 = sub_276AA0(v23, v25, v20);
    }
    else
    {
      v28 = type metadata accessor for LegacyEpisodeLockup(0);
      if (!swift_dynamicCastClass(a1, v28))
      {
        v27 = 0;
LABEL_13:
        v40 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playbackStatusPresenter];
        *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playbackStatusPresenter] = v27;
        v19.n128_u64[0] = swift_release(v40).n128_u64[0];
        return v19.n128_f64[0];
      }
      swift_retain(v20);
      v29 = swift_retain(a1);
      v30 = LegacyLockup.adamId.getter(v29);
      v31 = type metadata accessor for PlaybackStatusPresenter(0);
      swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
      swift_retain(v20);
      v27 = sub_276978(v30, v20);
      swift_release(a1);
    }
    v27[5] = &off_38DE10;
    v32 = swift_unknownObjectWeakAssign(v27 + 4, v2);
    Strong = swift_unknownObjectWeakLoadStrong(v32);
    if (Strong)
    {
      v34 = Strong;
      v35 = v27[5];
      ObjectType = swift_getObjectType();
      v37 = (uint64_t)v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
      swift_beginAccess((char *)v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v43, 0, 0);
      sub_F8BC(v37, (uint64_t)v6);
      v38 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 8);
      swift_retain(v27);
      v39 = v2;
      v38(v6, ObjectType, v35);
      swift_unknownObjectRelease(v34);
      sub_AEEF0((uint64_t)v6);
      swift_release(v27);
      swift_release(v20);

    }
    else
    {
      swift_release(v20);
    }
    goto LABEL_13;
  }
  return v19.n128_f64[0];
}

double sub_262F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double (**v7)(void *);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double result;

  v1 = v0;
  v2 = HighlightItem.playAction.getter();
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction) = v2;
  swift_retain_n(v2, 2);
  swift_release(v4);
  v5 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton);
  if (v5)
  {
    v6 = swift_allocObject(&unk_38DEB0, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v1);
    v7 = (double (**)(void *))&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
    v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
    v9 = *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8];
    *v7 = sub_59D70;
    v7[1] = (double (*)(void *))v6;
    v10 = v5;
    sub_1D618(v8, v9);
    objc_msgSend(v10, "setHidden:", *(_QWORD *)(v1 + v3) == 0);
    swift_release_n(v2, 2);

  }
  else
  {
    swift_release_n(v2, 2);
  }
  sub_2650AC(0);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playbackStatusPresenter);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playbackStatusPresenter) = 0;
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

id sub_26305C(unsigned __int8 a1)
{
  id v2;
  int v3;
  NSString v4;
  NSString v5;

  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v2 = 0;
  if ((static UITraitCollection.supportsPointerDevice.getter() & 1) != 0)
  {
    v3 = a1;
    if (a1 - 1 < 4)
    {
      v4 = String._bridgeToObjectiveC()();
      v2 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v4);

      if (v2)
        return v2;
      __break(1u);
    }
    if (v3)
      return 0;
    v5 = String._bridgeToObjectiveC()();
    v2 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v5);

    if (!v2)
    {
      __break(1u);
      return 0;
    }
  }
  return v2;
}

uint64_t sub_26316C(char a1)
{
  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.supportsPointerDevice.getter() & 1) != 0)
    __asm { BR              X10 }
  return 0;
}

uint64_t sub_2632B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char v10;
  char v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  _BYTE v18[24];

  v2 = v1;
  v4 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playState;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playState, v18, 33, 0);
  sub_F900(a1, v7);
  swift_endAccess(v18);
  v8 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton);
  if (v8)
  {
    sub_F8BC(v7, (uint64_t)v6);
    v9 = v8;
    v10 = EpisodePlayState.isEpisodePlaying.getter(v9);
    sub_AEEF0((uint64_t)v6);
    v11 = *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style);
    if ((v10 & 1) != 0)
      v12 = sub_26305C(v11);
    else
      v12 = (void *)sub_26316C(v11);
    v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_image;
    v14 = *(void **)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_image];
    *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_image] = v12;
    v15 = v12;

    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_imageView], "setImage:", *(_QWORD *)&v9[v13]);
  }
  return sub_AEEF0(a1);
}

char *sub_2633EC(char a1, char *a2, uint64_t *a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  _BYTE *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  id v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  NSString *v48;
  id v49;
  id v50;
  char *v51;
  char *v52;
  char *v53;
  __int16 v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int16 v91;
  uint64_t v92;
  objc_class *v93;
  __int16 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  CAGradientLayerType v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  __int16 v117;
  objc_super v118;

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = *a3;
  v98 = a3[2];
  v101 = a3[1];
  v10 = a3[4];
  v93 = (objc_class *)ObjectType;
  v95 = a3[3];
  v12 = a3[5];
  v11 = a3[6];
  v13 = a3[9];
  v84 = a3[10];
  v86 = a3[8];
  v82 = a3[11];
  v78 = a3[7];
  v80 = a3[12];
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_episodePlayStateController] = 0;
  v14 = *((_WORD *)a3 + 52);
  v15 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_libraryActionController];
  *((_QWORD *)v15 + 4) = 0;
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v16 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_delegate];
  *((_QWORD *)v16 + 1) = 0;
  swift_unknownObjectWeakInit(v16, 0);
  v17 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playState];
  v18 = type metadata accessor for EpisodePlayState(0);
  swift_storeEnumTagMultiPayload(v17, v18, 5);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playbackStatusPresenter] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction] = 0;
  v19 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playHandler];
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_isHovering] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_objectGraph] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView] = a2;
  v104 = a2;
  v105 = a1;
  if (v9 == 1)
    __asm { BR              X10 }
  v20 = v4;
  v21 = a2;
  v22 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
  *(_QWORD *)v22 = v9;
  *((_QWORD *)v22 + 1) = v101;
  *((_QWORD *)v22 + 2) = v98;
  *((_QWORD *)v22 + 3) = v95;
  *((_QWORD *)v22 + 4) = v10;
  *((_QWORD *)v22 + 5) = v12;
  *((_QWORD *)v22 + 6) = v11;
  *((_QWORD *)v22 + 7) = v78;
  *((_QWORD *)v22 + 8) = v86;
  *((_QWORD *)v22 + 9) = v13;
  *((_QWORD *)v22 + 10) = v84;
  *((_QWORD *)v22 + 11) = v82;
  *((_QWORD *)v22 + 12) = v80;
  v22[104] = v14 & 1;
  v22[105] = HIBYTE(v14);
  if (a1)
  {
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 1;
  }
  else
  {
    if (qword_3CFB28 != -1)
      swift_once(&qword_3CFB28, sub_20B1A8);
    v36 = qword_3FD0D8;
    v99 = qword_3FD0E8;
    v102 = unk_3FD0E0;
    v26 = xmmword_3FD0F8;
    v96 = qword_3FD0F0;
    v27 = *((_QWORD *)&xmmword_3FD0F8 + 1);
    v28 = unk_3FD108;
    v29 = qword_3FD110;
    v31 = *((_QWORD *)&xmmword_3FD118 + 1);
    v30 = xmmword_3FD118;
    v32 = unk_3FD128;
    v91 = word_3FD140 | (HIBYTE(word_3FD140) << 8);
    v33 = (void *)qword_3FD130;
    v89 = qword_3FD138;
    v37 = (id)qword_3FD0D8;
    sub_B7A24(v26, v27, v28, v29, v30, v31, v32, v33);
    v34 = v89;
    v35 = v91;
    v25 = v96;
    v24 = v99;
    v23 = v102;
  }
  v38 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
  *(_QWORD *)v38 = v36;
  *((_QWORD *)v38 + 1) = v23;
  *((_QWORD *)v38 + 2) = v24;
  *((_QWORD *)v38 + 3) = v25;
  *((_QWORD *)v38 + 4) = v26;
  *((_QWORD *)v38 + 5) = v27;
  *((_QWORD *)v38 + 6) = v28;
  *((_QWORD *)v38 + 7) = v29;
  *((_QWORD *)v38 + 8) = v30;
  *((_QWORD *)v38 + 9) = v31;
  *((_QWORD *)v38 + 10) = v32;
  *((_QWORD *)v38 + 11) = v33;
  *((_QWORD *)v38 + 12) = v34;
  *((_WORD *)v38 + 52) = v35;
  if (v105 == 6)
  {
    v39 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v41 = swift_allocObject(v40, 48, 7);
    *(_OWORD *)(v41 + 16) = xmmword_2EFC90;
    v42 = (void *)objc_opt_self(UIColor);
    v43 = objc_msgSend(v42, "blackColor");
    v44 = objc_msgSend(v43, "colorWithAlphaComponent:", 0.0);

    *(_QWORD *)(v41 + 32) = v44;
    v45 = objc_msgSend(v42, "blackColor");
    v46 = objc_msgSend(v45, "colorWithAlphaComponent:", 0.4);

    *(_QWORD *)(v41 + 40) = v46;
    v107 = (unint64_t)v41;
    specialized Array._endMutation()(v47);
    v108 = 0;
    v109 = xmmword_2F1D40;
    v110 = xmmword_2F1D50;
    v111 = kCAGradientLayerAxial;
    v48 = kCAGradientLayerAxial;
    sub_ECA74(&v107);
    v49 = objc_msgSend(v39, "layer");
    objc_msgSend(v49, "setCornerRadius:", 5.0);

    v50 = objc_msgSend(v39, "layer");
    objc_msgSend(v50, "setMaskedCorners:", 12);

    objc_msgSend(v39, "setUserInteractionEnabled:", 0);
    objc_msgSend(v39, "setHidden:", 1);
  }
  else
  {
    v39 = 0;
  }
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_legibilityGradientView] = v39;

  v118.receiver = v4;
  v118.super_class = v93;
  v51 = (char *)objc_msgSendSuper2(&v118, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v51, "addSubview:", v104);
  if (*(_QWORD *)&v51[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_legibilityGradientView])
    objc_msgSend(v51, "addSubview:");
  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.supportsPointerDevice.getter() & 1) != 0
    && (v52 = &v51[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle],
        v53 = *(char **)&v51[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle],
        v53 != (_BYTE *)&dword_0 + 1))
  {
    v54 = *((_WORD *)v52 + 52);
    v55 = (void *)*((_QWORD *)v52 + 11);
    v56 = *((_QWORD *)v52 + 12);
    v58 = *((_QWORD *)v52 + 9);
    v57 = *((_QWORD *)v52 + 10);
    v59 = *((_QWORD *)v52 + 7);
    v60 = *((_QWORD *)v52 + 8);
    v62 = *((_QWORD *)v52 + 5);
    v61 = *((_QWORD *)v52 + 6);
    v63 = *((_QWORD *)v52 + 3);
    v64 = *((_QWORD *)v52 + 4);
    v66 = *((_QWORD *)v52 + 1);
    v65 = *((_QWORD *)v52 + 2);
    v67 = &v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle];
    v81 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16];
    v83 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8];
    v77 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32];
    v79 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24];
    v72 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48];
    v73 = *(char **)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle];
    v75 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56];
    v76 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40];
    v71 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64];
    v106 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72];
    v100 = *(void **)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88];
    v103 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80];
    v97 = *(_QWORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96];
    v94 = *(_WORD *)&v104[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104];
    *(_QWORD *)v67 = v53;
    *((_QWORD *)v67 + 1) = v66;
    v85 = v53;
    v87 = v66;
    *((_QWORD *)v67 + 2) = v65;
    *((_QWORD *)v67 + 3) = v63;
    v88 = v65;
    v90 = v63;
    *((_QWORD *)v67 + 4) = v64;
    *((_QWORD *)v67 + 5) = v62;
    v92 = v64;
    *((_QWORD *)v67 + 6) = v61;
    *((_QWORD *)v67 + 7) = v59;
    *((_QWORD *)v67 + 8) = v60;
    *((_QWORD *)v67 + 9) = v58;
    *((_QWORD *)v67 + 10) = v57;
    *((_QWORD *)v67 + 11) = v55;
    *((_QWORD *)v67 + 12) = v56;
    *((_WORD *)v67 + 52) = v54;
    v74 = v59;
    v68 = v53;
    v69 = v59;
    sub_B79AC(v68, v66, v65, v63, v64, v62, v61, v59, v60, v58, v57, v55);
    sub_B79AC(v85, v87, v88, v90, v92, v62, v61, v69, v60, v58, v57, v55);
    sub_B79AC(v73, v83, v81, v79, v77, v76, v72, v75, v71, v106, v103, v100);
    sub_B7A70(v73, v83, v81, v79, v77, v76, v72, v75, v71, v106, v103, v100);
    *(_QWORD *)&v107 = v73;
    *((_QWORD *)&v107 + 1) = v83;
    v108 = v81;
    *(_QWORD *)&v109 = v79;
    *((_QWORD *)&v109 + 1) = v77;
    *(_QWORD *)&v110 = v76;
    *((_QWORD *)&v110 + 1) = v72;
    v111 = (CAGradientLayerType)v75;
    v112 = v71;
    v113 = v106;
    v114 = v103;
    v115 = v100;
    v116 = v97;
    v117 = v94;
    sub_EA15C((char **)&v107);
    sub_B7A70(v73, v83, v81, v79, v77, v76, v72, v75, v71, v106, v103, v100);

    sub_B7A70(v85, v87, v88, v90, v92, v62, v61, v74, v60, v58, v57, v55);
  }
  else
  {

  }
  return v51;
}

double sub_263E84(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  double result;
  char *v9;
  void (*v10)(__n128);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  _QWORD v30[4];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  char v34[24];
  char v35[24];

  v4 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return result;
  v9 = (char *)Strong;
  v10 = *(void (**)(__n128))(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playHandler);
  if (v10)
  {
    v11 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playHandler + 8);
    v12 = swift_retain(v11);
    v10(v12);
    sub_1D618((uint64_t)v10, v11);
LABEL_4:

    return result;
  }
  v13 = Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playState;
  swift_beginAccess(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playState, v34, 0, 0);
  v14 = sub_F8BC(v13, (uint64_t)v6);
  LOBYTE(v13) = EpisodePlayState.isEpisodePlaying.getter(v14);
  sub_AEEF0((uint64_t)v6);
  if ((v13 & 1) != 0)
  {
    v15 = (uint64_t)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_libraryActionController];
    swift_beginAccess(&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_libraryActionController], v30, 0, 0);
    if (*(_QWORD *)(v15 + 24))
    {
      sub_1D5D4(v15, (uint64_t)v31);
      v16 = v32;
      v17 = v33;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      dispatch thunk of LibraryActionControllerProtocol.pausePlayer()(v16, v17);
LABEL_10:
      __swift_destroy_boxed_opaque_existential_0(v31);
    }
  }
  else
  {
    v18 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction];
    if (v18)
    {
      v32 = type metadata accessor for Action(0);
      v33 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v31[0] = v18;
      v30[3] = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
      v30[0] = a1;
      v19 = type metadata accessor for ArtworkContainer(0);
      v20 = sub_89A0(&qword_3DECA0, type metadata accessor for ArtworkContainer, (uint64_t)&unk_3029D8);
      swift_retain_n(v18, 2);
      v21 = a1;
      v22 = v9;
      v23 = DependencyBindableView.perform(_:from:in:)(v31, v30, v9, v19, v20);

      swift_release(v23);
      swift_release(v18);
      sub_D1D4((uint64_t)v30, &qword_3D1A70);
      goto LABEL_10;
    }
  }
  v24 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_delegate];
  v25 = swift_unknownObjectWeakLoadStrong(&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_delegate]);
  if (!v25)
    goto LABEL_4;
  v26 = v25;
  v27 = *((_QWORD *)v24 + 1);
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 8))(v9, ObjectType, v27);

  *(_QWORD *)&result = swift_unknownObjectRelease(v26).n128_u64[0];
  return result;
}

void sub_26411C()
{
  char *v0;
  char *v1;
  int v2;
  uint64_t v3;
  void *v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int v15;
  NSString v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v1 = v0;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton])
  {
    v2 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style];
    v3 = sub_26316C(v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style]);
    if (v3)
    {
      v4 = (void *)v3;
      v5 = 0;
      v6 = 0;
      v7 = 1;
      v8 = 0x403E000000000000;
      v9 = 0x4046800000000000;
      switch(v2)
      {
        case 2:
          v5 = 0;
          v8 = 0x4046800000000000;
          goto LABEL_7;
        case 3:
          goto LABEL_8;
        case 4:
          goto LABEL_7;
        case 6:
          v5 = 0;
          v8 = 0x4041000000000000;
          goto LABEL_7;
        default:
          v8 = 0;
          v5 = 1;
LABEL_7:
          v7 = 0;
          v9 = v8;
          v6 = v5;
LABEL_8:
          objc_allocWithZone((Class)type metadata accessor for BlurIconButton());
          v10 = v4;
          v11 = sub_B17C0(v10, v9, v9, v6, v7);
          objc_msgSend(v11, "setAlpha:", 0.0);
          objc_msgSend(v1, "addSubview:", v11);
          objc_msgSend(v1, "setNeedsLayout");
          v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_objectGraph];
          if (v12)
          {
            v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph];
            *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph] = v12;
            swift_retain(v12);
            swift_release(v13);
          }
          v14 = v11;
          sub_264EB8(v11);

          break;
      }
    }
  }
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextButton])
  {
    v15 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style];
    sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
    if ((static UITraitCollection.supportsPointerDevice.getter() & 1) != 0 && v15 <= 1)
    {
      v16 = String._bridgeToObjectiveC()();
      v17 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v16);

      if (!v17)
      {
        __break(1u);
        JUMPOUT(0x264424);
      }
      objc_allocWithZone((Class)type metadata accessor for BlurIconButton());
      v18 = v17;
      v19 = sub_B17C0(v18, 0, 0, 1, 0);
      objc_msgSend(v19, "setAlpha:", 0.0);
      objc_msgSend(v1, "addSubview:", v19);
      objc_msgSend(v1, "setNeedsLayout");
      v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_objectGraph];
      if (v20)
      {
        v21 = *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph];
        *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph] = v20;
        swift_retain(v20);
        swift_release(v21);
      }
      v22 = v19;
      sub_264FA0(v19);

    }
  }
}

id sub_264450(void *a1, uint64_t a2, _QWORD *a3)
{
  char *v4;
  id v5;

  v4 = a1;
  sub_26411C();
  v5 = *(id *)&v4[*a3];

  return v5;
}

void sub_264490()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  double MinX;
  double MaxY;
  double v7;
  double v8;
  void *v9;
  char v10;
  id v11;
  double v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  void *v16;
  unsigned __int8 v17;
  id v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  objc_super v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v23.receiver = v0;
  v23.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v23, "layoutSubviews");
  v1 = (char *)objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_legibilityGradientView];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v0, "bounds");
    MinX = CGRectGetMinX(v24);
    objc_msgSend(v0, "bounds");
    MaxY = CGRectGetMaxY(v25);
    if (qword_3CFC78 != -1)
      swift_once(&qword_3CFC78, sub_264EA8);
    v7 = *(double *)&qword_3DEC08;
    v8 = MaxY - *(double *)&qword_3DEC08;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v4, "setFrame:", MinX, v8, CGRectGetWidth(v26), v7);

  }
  v9 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton];
  if (v9)
  {
    v10 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style];
    v11 = v9;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v11, "setFrame:", sub_26467C(v1 == (_BYTE *)&dword_0 + 1, v10, v12, v13, v14, v15));

  }
  v16 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextButton];
  if (v16)
  {
    v17 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style];
    v18 = v16;
    objc_msgSend(v0, "bounds");
    sub_2647F4(v1 == (_BYTE *)&dword_0 + 1, v17, v19, v20, v21, v22);
    objc_msgSend(v18, "setFrame:");

  }
}

CGFloat sub_26467C(char a1, char a2, double a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  double v10;
  CGFloat v11;
  uint64_t v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGRect v18;
  CGRect v19;
  CGRect v20;

  v10 = a3;
  if (!a2 || a2 == 5)
  {
    v12 = sub_26316C(a2);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = 10.0;
      if ((a1 & 1) != 0)
      {
        v19.origin.x = v10;
        v19.origin.y = a4;
        v19.size.width = a5;
        v19.size.height = a6;
        v15 = CGRectGetMaxX(v19) + -10.0;
        objc_msgSend(v13, "size");
        v14 = v15 - v16;
      }
      v20.origin.x = v10;
      v20.origin.y = a4;
      v20.size.width = a5;
      v20.size.height = a6;
      CGRectGetMaxY(v20);
      objc_msgSend(v13, "size");
      objc_msgSend(v13, "size");

      return v14;
    }
    else
    {
      return 0.0;
    }
  }
  else if (a2 == 6)
  {
    v11 = CGRectGetMaxX(*(CGRect *)&a3) + -34.0 + -16.0;
    v18.origin.x = v10;
    v18.origin.y = a4;
    v18.size.width = a5;
    v18.size.height = a6;
    CGRectGetMaxY(v18);
    return v11;
  }
  return v10;
}

void sub_2647F4(char a1, unsigned __int8 a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  NSString v12;
  id v13;
  CGRect v14;
  CGRect v15;

  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.supportsPointerDevice.getter() & 1) != 0 && a2 <= 1u)
  {
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v12);

    if (v13)
    {
      if ((a1 & 1) == 0)
      {
        v14.origin.x = a3;
        v14.origin.y = a4;
        v14.size.width = a5;
        v14.size.height = a6;
        CGRectGetMaxX(v14);
        objc_msgSend(v13, "size");
      }
      v15.origin.x = a3;
      v15.origin.y = a4;
      v15.size.width = a5;
      v15.size.height = a6;
      CGRectGetMaxY(v15);
      objc_msgSend(v13, "size");
      objc_msgSend(v13, "size");

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_264B80()
{
  return type metadata accessor for ArtworkContainer(0);
}

uint64_t type metadata accessor for ArtworkContainer(uint64_t a1)
{
  uint64_t result;

  result = qword_3DEC88;
  if (!qword_3DEC88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArtworkContainer);
  return result;
}

uint64_t sub_264BC4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[17];

  v4[0] = "\b";
  v4[1] = &unk_3028B0;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = "\b";
  v4[4] = &unk_3028C8;
  v4[5] = &unk_3028E0;
  v4[6] = &unk_3028F8;
  v4[7] = &unk_302910;
  result = type metadata accessor for EpisodePlayState(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(result - 8) + 64;
    v4[9] = "\b";
    v4[10] = "\b";
    v4[11] = "\b";
    v4[12] = "\b";
    v4[13] = &unk_302928;
    v4[14] = "\b";
    v4[15] = &unk_302940;
    v4[16] = "\b";
    return swift_updateClassMetadata2(a1, 256, 17, v4, a1 + 80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArtworkContainer.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_264CE4 + 4 * byte_302835[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_264D18 + 4 * byte_302830[v4]))();
}

uint64_t sub_264D18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_264D20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x264D28);
  return result;
}

uint64_t sub_264D34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x264D3CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_264D40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_264D48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkContainer.Style()
{
  return &type metadata for ArtworkContainer.Style;
}

unint64_t sub_264D68()
{
  unint64_t result;

  result = qword_3DEC98;
  if (!qword_3DEC98)
  {
    result = swift_getWitnessTable(&unk_302960, &type metadata for ArtworkContainer.Style);
    atomic_store(result, (unint64_t *)&qword_3DEC98);
  }
  return result;
}

uint64_t sub_264DAC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_objectGraph));
}

uint64_t sub_264DC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F8BC(a1, (uint64_t)v4);
  return sub_2632B0((uint64_t)v4);
}

uint64_t sub_264E30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_264E54()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  sub_26411C();
  return objc_msgSend(v1, "layoutIfNeeded");
}

uint64_t sub_264E80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_59(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_59(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_264EA8()
{
  qword_3DEC08 = 0x4059000000000000;
}

void sub_264EB8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  char *v5;
  uint64_t v6;
  double (**v7)(void *);
  uint64_t v8;
  uint64_t v9;
  char *v10;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton) = a1;
  v4 = a1;

  v5 = *(char **)(v1 + v2);
  if (v5)
  {
    v6 = swift_allocObject(&unk_38DEB0, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v1);
    v7 = (double (**)(void *))&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
    v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
    v9 = *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8];
    *v7 = sub_59D70;
    v7[1] = (double (*)(void *))v6;
    v10 = v5;
    sub_1D618(v8, v9);
    objc_msgSend(v10, "setHidden:", *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction) == 0);

  }
}

void sub_264FA0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v2 = v1;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextButton;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextButton);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextButton) = a1;
  v5 = a1;

  v6 = *(void **)(v2 + v3);
  if (v6)
  {
    v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction;
    v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction);
    if (v8)
    {
      *((_QWORD *)&v11 + 1) = type metadata accessor for Action(0);
      v12 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      *(_QWORD *)&v10 = v8;
    }
    else
    {
      v12 = 0;
      v10 = 0u;
      v11 = 0u;
    }
    v9 = v6;
    swift_retain(v8);
    sub_B15EC((uint64_t)&v10);
    sub_D1D4((uint64_t)&v10, (uint64_t *)&unk_3D30D0);
    objc_msgSend(v9, "setHidden:", *(_QWORD *)(v2 + v7) == 0, v10, v11, v12);

  }
}

uint64_t sub_265088()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_2650AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v2 = v1;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction) = a1;
  swift_retain(a1);
  swift_release(v4);
  v5 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextButton);
  if (v5)
  {
    v6 = *(_QWORD *)(v2 + v3);
    if (v6)
    {
      *((_QWORD *)&v9 + 1) = type metadata accessor for Action(0);
      v10 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      *(_QWORD *)&v8 = v6;
    }
    else
    {
      v10 = 0;
      v8 = 0u;
      v9 = 0u;
    }
    v7 = v5;
    swift_retain(v6);
    sub_B15EC((uint64_t)&v8);
    sub_D1D4((uint64_t)&v8, (uint64_t *)&unk_3D30D0);
    objc_msgSend(v7, "setHidden:", *(_QWORD *)(v2 + v3) == 0, v8, v9, v10);

  }
}

void sub_265198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double (**v8)(void *);
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  sub_2C690(a1, a2);
  sub_1D618(v4, v5);
  v6 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton);
  if (v6)
  {
    v7 = swift_allocObject(&unk_38DEB0, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16, v2);
    v8 = (double (**)(void *))&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
    v9 = *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
    v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8];
    *v8 = sub_59D70;
    v8[1] = (double (*)(void *))v7;
    v11 = v6;
    sub_1D618(v9, v10);
    objc_msgSend(v11, "setHidden:", *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction) == 0);

  }
}

uint64_t sub_265294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DECA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_2652DC()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_episodePlayStateController] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_libraryActionController];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playState];
  v4 = type metadata accessor for EpisodePlayState(0);
  swift_storeEnumTagMultiPayload(v3, v4, 5);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playbackStatusPresenter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction] = 0;
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playHandler];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_isHovering] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ArtworkContainer.swift", 46, 2, 122, 0);
  __break(1u);
}

char *sub_26541C(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  char *v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  objc_super v16;

  v9 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0));
  v10 = v4;
  v11 = objc_msgSend(v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkCollectionViewCell_artworkView] = v11;

  v16.receiver = v10;
  v16.super_class = (Class)type metadata accessor for ArtworkCollectionViewCell();
  v12 = (char *)objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  v13 = objc_msgSend(v12, "contentView");
  v14 = *(id *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkCollectionViewCell_artworkView];
  objc_msgSend(v13, "addSubview:", v14);

  return v12;
}

void sub_26559C()
{
  char *v0;
  char *v1;
  void *v2;
  char *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for ArtworkCollectionViewCell();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkCollectionViewCell_artworkView];
  v2 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
  v3 = v1;
  v4 = objc_msgSend(v2, "layer");
  objc_msgSend(v4, "removeAllAnimations");

  objc_msgSend(v2, "setImage:", 0);
  objc_msgSend(v3, "invalidateIntrinsicContentSize");

}

id sub_265740()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ArtworkCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews25ArtworkCollectionViewCell);
}

id sub_2657A0()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkCollectionViewCell_artworkView);
}

double sub_2657B0()
{
  void *v0;
  double v1;

  objc_msgSend(v0, "frame");
  return v1;
}

double sub_2657D8(char a1, char a2)
{
  void *v2;
  void *v3;
  id v5;
  char v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  double result;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;

  v3 = v2;
  if ((a1 & 1) != 0)
  {
    v9 = 1.0;
    v7 = 0.0;
    v10 = 0.35;
    v8 = 0.0;
  }
  else
  {
    v5 = objc_msgSend(v2, "traitCollection");
    v6 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v6 & 1) != 0)
      v7 = 20.0;
    else
      v7 = -20.0;
    v8 = 1.0;
    v9 = 0.0;
    v10 = 0.2;
  }
  v11 = swift_allocObject(&unk_38E038, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v3);
  v12 = swift_allocObject(&unk_38E060, 48, 7);
  *(_QWORD *)(v12 + 16) = v11;
  *(double *)(v12 + 24) = v8;
  *(double *)(v12 + 32) = v9;
  *(double *)(v12 + 40) = v7;
  if ((a2 & 1) != 0)
  {
    v13 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v19[4] = sub_26651C;
    v20 = v12;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_24360;
    v19[3] = &block_descriptor_60;
    v14 = _Block_copy(v19);
    v15 = v20;
    swift_retain(v12);
    swift_release(v15);
    v16 = objc_msgSend(v13, "initWithDuration:curve:animations:", 2, v14, v10);
    _Block_release(v14);
    objc_msgSend(v16, "startAnimation");

    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  else
  {
    swift_retain(v11);
    sub_266100(v18, v8, v9, v7);
    swift_release(v12);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

void sub_2659B8(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  NSString v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  char **v29;
  void *v30;
  id v31;
  _QWORD v33[5];
  objc_super v34;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v5);
  v7 = (char *)&v33[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Glyph(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_backButtonStyle] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_customBackButton] = 0;
  v34.receiver = v2;
  v34.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v34, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  static Glyph.HeaderButtons.back.getter(objc_msgSend(v11, "setHideStandardTitle:", 1));
  v12 = type metadata accessor for Glyph.Color(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  v13 = objc_allocWithZone((Class)type metadata accessor for GlyphButton(0));
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v10, (uint64_t)v7, 1, 0, 1, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_customBackButton;
  v15 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_customBackButton];
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_customBackButton] = v16;

  v17 = *(void **)&v11[v14];
  if (!v17)
  {
    __break(1u);
    goto LABEL_12;
  }
  v18 = v17;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setAccessibilityIdentifier:", v19);

  v20 = *(void **)&v11[v14];
  if (!v20)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v21 = (void *)objc_opt_self(UIColor);
  v22 = v20;
  v23 = objc_msgSend(v21, "whiteColor");
  objc_msgSend(v22, "setTintColor:", v23);

  v24 = *(void **)&v11[v14];
  if (!v24)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v25 = type metadata accessor for NavigateBackAction(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v26 = v24;
  v27 = NavigateBackAction.init(animationBehavior:)(0);
  v33[3] = v25;
  v33[4] = sub_266544();
  v33[0] = v27;
  UIControl.setAction(_:for:asPartOf:)(v33, 0x2000, a1);

  __swift_destroy_boxed_opaque_existential_0(v33);
  if (!*(_QWORD *)&v11[v14])
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v11, "addSubview:");
  if ((v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_backButtonStyle] & 1) != 0)
  {
    v28 = *(void **)&v11[v14];
    if (v28)
    {
      objc_msgSend(v28, "setAlpha:", 1.0);
      v29 = &selRef_setBackButtonAlpha_;
      v30 = v11;
LABEL_10:
      v31 = v30;
      objc_msgSend(v31, *v29, 0.0);

      swift_release(a1);
      return;
    }
    goto LABEL_15;
  }
  objc_msgSend(v11, "setBackButtonAlpha:", 1.0);
  v30 = *(void **)&v11[v14];
  if (v30)
  {
    v29 = &selRef_setAlpha_;
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
}

id sub_265CF8()
{
  char *v0;
  char *v1;
  char *v2;
  __int128 v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double Height;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat MaxX;
  double v29;
  double v30;
  id result;
  objc_super v32;
  _QWORD v33[5];
  char v34[32];
  char v35;
  CGRect v36;

  v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v32, "layoutSubviews");
  v2 = (char *)objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  if (qword_3CFAD0 != -1)
    swift_once(&qword_3CFAD0, sub_1E3E60);
  v3 = xmmword_3FCFE0;
  v4 = objc_msgSend(v0, "overlays");
  if (v4)
  {
    v5 = v4;
    _UINavigationBarTitleViewOverlayRects.backButtonRect.getter(v33);
    v6 = *(double *)v33;
    v7 = *(double *)&v33[1];
    v8 = *(double *)&v33[2];
    v9 = *(double *)&v33[3];

    sub_11045C((uint64_t)v33, (uint64_t)v34);
    if ((v35 & 1) != 0)
    {
      v8 = 0.0;
      v9 = 0.0;
      v10 = 0.0;
    }
    else
    {
      v10 = v6;
    }
    if ((v35 & 1) != 0)
      v7 = 0.0;
  }
  else
  {
    v8 = 0.0;
    v9 = 0.0;
    v10 = 0.0;
    v7 = 0.0;
  }
  objc_msgSend(v1, "layoutMargins");
  v12 = v11;
  v14 = v13;
  objc_msgSend(v1, "safeAreaInsets");
  if (v2 == (_BYTE *)&dword_0 + 1)
    v17 = v14 - v16;
  else
    v17 = v12 - v15;
  objc_msgSend(v1, "floatingTabBarHeight");
  if (v18 <= 0.0)
  {
    objc_msgSend(v1, "bounds");
    Height = CGRectGetHeight(v36);
  }
  else
  {
    objc_msgSend(v1, "floatingTabBarHeight");
    v20 = v19;
    objc_msgSend(v1, "layoutMargins");
    Height = v20 + v21;
  }
  v23 = v17 + 8.0;
  v24 = v10;
  v25 = v7;
  v26 = v8;
  v27 = v9;
  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    MaxX = CGRectGetMaxX(*(CGRect *)&v24);
    v29 = *(double *)&v3;
    v30 = MaxX - *(double *)&v3 - v23;
  }
  else
  {
    v30 = v23 + CGRectGetMinX(*(CGRect *)&v24);
    v29 = *(double *)&v3;
  }
  result = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_customBackButton];
  if (result)
    return objc_msgSend(result, "setFrame:", v30, (Height - *((double *)&v3 + 1)) * 0.5, v29, *((double *)&v3 + 1));
  __break(1u);
  return result;
}

void sub_265FA8(uint64_t a1, double a2, double a3, CGFloat a4)
{
  void *Strong;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  CGAffineTransform v18;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  swift_beginAccess(a1, v21, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v9 = Strong;
    objc_msgSend(Strong, "setBackButtonAlpha:", a2);

  }
  swift_beginAccess(a1, v20, 0, 0);
  v10 = swift_unknownObjectWeakLoadStrong(a1);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = *(void **)(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_customBackButton);
    v13 = v12;

    if (!v12)
    {
      __break(1u);
      goto LABEL_11;
    }
    objc_msgSend(v13, "setAlpha:", a3);

  }
  swift_beginAccess(a1, v19, 0, 0);
  v14 = swift_unknownObjectWeakLoadStrong(a1);
  if (!v14)
    return;
  v15 = (void *)v14;
  v16 = *(void **)(v14 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_customBackButton);
  v17 = v16;

  if (!v16)
  {
LABEL_11:
    __break(1u);
    return;
  }
  CGAffineTransformMakeTranslation(&v18, a4, 0.0);
  objc_msgSend(v17, "setTransform:", &v18);

}

void sub_266100(uint64_t a1, double a2, double a3, CGFloat a4)
{
  uint64_t v7;
  void *Strong;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  CGAffineTransform v18;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    objc_msgSend(Strong, "setBackButtonAlpha:", a2);

  }
  swift_beginAccess(v7, v20, 0, 0);
  v10 = swift_unknownObjectWeakLoadStrong(v7);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = *(void **)(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_customBackButton);
    v13 = v12;

    if (!v12)
    {
      __break(1u);
      goto LABEL_11;
    }
    objc_msgSend(v13, "setAlpha:", a3);

  }
  swift_beginAccess(v7, v19, 0, 0);
  v14 = swift_unknownObjectWeakLoadStrong(v7);
  if (!v14)
    return;
  v15 = (void *)v14;
  v16 = *(void **)(v14 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_customBackButton);
  v17 = v16;

  if (!v16)
  {
LABEL_11:
    __break(1u);
    return;
  }
  CGAffineTransformMakeTranslation(&v18, a4, 0.0);
  objc_msgSend(v17, "setTransform:", &v18);

}

uint64_t type metadata accessor for UberNavigationTitleView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23UberNavigationTitleView);
}

uint64_t storeEnumTagSinglePayload for UberNavigationTitleView.BackButtonStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_266378 + 4 * byte_302A75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2663AC + 4 * byte_302A70[v4]))();
}

uint64_t sub_2663AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2663B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2663BCLL);
  return result;
}

uint64_t sub_2663C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2663D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2663D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2663DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UberNavigationTitleView.BackButtonStyle()
{
  return &type metadata for UberNavigationTitleView.BackButtonStyle;
}

unint64_t sub_2663FC()
{
  unint64_t result;

  result = qword_3DED18;
  if (!qword_3DED18)
  {
    result = swift_getWitnessTable(&unk_302B08, &type metadata for UberNavigationTitleView.BackButtonStyle);
    atomic_store(result, (unint64_t *)&qword_3DED18);
  }
  return result;
}

void sub_266440()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_backButtonStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_customBackButton] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000000030B270, "ShelfKitCollectionViews/UberNavigationBarTitleView.swift", 56, 2, 126, 0);
  __break(1u);
}

uint64_t sub_2664D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2664F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 48, 7);
}

void sub_26651C()
{
  uint64_t v0;

  sub_266100(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(CGFloat *)(v0 + 40));
}

uint64_t block_copy_helper_60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_60(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_266544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DED20;
  if (!qword_3DED20)
  {
    v1 = type metadata accessor for NavigateBackAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_3DED20);
  }
  return result;
}

uint64_t sub_266590(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for EpisodeHeroButtonArea(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = *((_BYTE *)a2 + 16);
  v8 = a1[1];
  a1[1] = v6;
  *((_BYTE *)a1 + 16) = v7;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

uint64_t *assignWithTake for EpisodeHeroButtonArea(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = *((_BYTE *)a2 + 16);
  v6 = a1[1];
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = v5;
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for EpisodeHeroButtonArea()
{
  return &type metadata for EpisodeHeroButtonArea;
}

uint64_t sub_26668C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_33364C, 1);
}

uint64_t sub_26669C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v6;
  int *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v56[12];
  int v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v60 = a4;
  v6 = a3 & 1;
  v57 = a3 & 1;
  v7 = (int *)type metadata accessor for PlayButtonWrapper(0);
  __chkstk_darwin(v7);
  v9 = &v56[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE458);
  __chkstk_darwin(v10);
  v12 = &v56[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DED30);
  __chkstk_darwin(v59);
  v14 = &v56[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DED38);
  __chkstk_darwin(v15);
  v17 = &v56[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v58 = &v56[-v19];
  swift_retain(a1);
  PlayButtonPresenter.Data.init(lockup:)(v20);
  swift_retain(a2);
  v22 = sub_14A78(v21, v6);
  v23 = swift_release(a2);
  v24.n128_f64[0] = static HeroContainer.playButtonInsets.getter(v23);
  v9[v7[5]] = 1;
  *(_QWORD *)&v9[v7[6]] = v22;
  v25 = &v9[v7[7]];
  *(_QWORD *)v25 = v24.n128_u64[0];
  *((_QWORD *)v25 + 1) = v26;
  *((_QWORD *)v25 + 2) = v27;
  *((_QWORD *)v25 + 3) = v28;
  v25[32] = 0;
  v29 = static HeroContainer.playButtonInsets.getter(v24);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  LOBYTE(v7) = static Edge.Set.all.getter(v36);
  sub_266AF4((uint64_t)v9, (uint64_t)v12);
  v37 = (double *)&v12[*(int *)(v10 + 36)];
  *(_BYTE *)v37 = (_BYTE)v7;
  v37[1] = v29;
  *((_QWORD *)v37 + 2) = v31;
  *((_QWORD *)v37 + 3) = v33;
  *((_QWORD *)v37 + 4) = v35;
  *((_BYTE *)v37 + 40) = 0;
  sub_266B38((uint64_t)v9);
  sub_D184((uint64_t)v12, (uint64_t)v14, &qword_3DE458);
  *(_QWORD *)&v14[*(int *)(v59 + 36)] = 0x3FF0000000000000;
  sub_D1D4((uint64_t)v12, &qword_3DE458);
  sub_D184((uint64_t)v14, (uint64_t)v17, &qword_3DED30);
  v17[*(int *)(v15 + 36)] = 1;
  sub_D1D4((uint64_t)v14, &qword_3DED30);
  v38 = v58;
  sub_266B74((uint64_t)v17, (uint64_t)v58);
  swift_retain(a1);
  swift_retain(a2);
  v40 = sub_14A78(v39, v57);
  swift_release(a2);
  KeyPath = swift_getKeyPath(&unk_302BB8);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D84F8);
  v43 = type metadata accessor for BaseObjectGraph(0);
  v44 = swift_retain(a1);
  inject<A, B>(_:from:)(&v61, v42, v40, v42, v43, v44);
  v45 = v61;
  v47 = EpisodeStateController.stateMachine(for:)(v46);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCC08);
  inject<A, B>(_:from:)(&v61, v48, v40, v48, v43, v49);
  v50 = v61;
  v52 = EpisodeStateController.stateMachine(for:)(v51);
  swift_release(v45);
  swift_release(v50);
  swift_release(a1);
  swift_release(v40);
  sub_D184((uint64_t)v38, (uint64_t)v17, &qword_3DED38);
  v53 = v60;
  sub_D184((uint64_t)v17, v60, &qword_3DED38);
  v54 = v53 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DED40) + 48);
  *(_QWORD *)v54 = a1;
  *(_QWORD *)(v54 + 8) = v47;
  *(_QWORD *)(v54 + 16) = v52;
  *(_QWORD *)(v54 + 24) = KeyPath;
  *(_BYTE *)(v54 + 32) = 0;
  swift_retain(a1);
  swift_retain(v47);
  swift_retain(v52);
  swift_retain(KeyPath);
  sub_D1D4((uint64_t)v38, &qword_3DED38);
  swift_release(KeyPath);
  swift_release(v52);
  swift_release(v47);
  swift_release(a1);
  return sub_D1D4((uint64_t)v17, &qword_3DED38);
}

uint64_t sub_266A9C@<X0>(double *a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_BYTE *)(v2 + 16);
  *a1 = static HeroContainer.spaceBetweenPlayButtonAndContextMenu.getter(a2);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DED28);
  return sub_26669C(v4, v5, v6, (uint64_t)a1 + *(int *)(v7 + 44));
}

uint64_t sub_266AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlayButtonWrapper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_266B38(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlayButtonWrapper(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_266B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DED38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_266BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DED48;
  if (!qword_3DED48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DED28);
    sub_10EDC(&qword_3DE688, &qword_3DE690, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_10EDC(&qword_3DED50, &qword_3DED58, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DED48);
  }
  return result;
}

unint64_t sub_266C68()
{
  unint64_t result;

  result = qword_3DED60;
  if (!qword_3DED60)
  {
    result = swift_getWitnessTable(&unk_302C20, &type metadata for EpisodeHero);
    atomic_store(result, (unint64_t *)&qword_3DED60);
  }
  return result;
}

uint64_t sub_266CAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  char v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t OpaqueTypeConformance2;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  __int128 v52;
  uint64_t v53;

  v48 = a1;
  v2 = type metadata accessor for AccessibilityChildBehavior(0);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  __chkstk_darwin(v2);
  v47 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  __chkstk_darwin(v7);
  v44 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DED70);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DED78);
  v45 = *(_QWORD *)(v12 - 8);
  v46 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(v1 + 24);
  v16 = *(_BYTE *)(v1 + 32);
  sub_15E90(v15, v16);
  v17 = (char *)sub_14A9C(v15, v16);
  sub_15E9C(v15, v16);
  if (v17)
  {
    v19 = Namespace.wrappedValue.getter(*(_QWORD *)(v1 + 40));
    v20 = &v17[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_transitionNamespace];
    *(_QWORD *)v20 = v19;
    v20[8] = 0;

  }
  *v11 = static Alignment.bottomLeading.getter(v18);
  v11[1] = v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DED80);
  sub_267050((uint64_t *)v1, (uint64_t)v11 + *(int *)(v22 + 44));
  v23 = sub_267F10(*(_QWORD *)v1);
  v25 = v24;
  v26 = (char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DED88) + 36);
  type metadata accessor for CGSize(0);
  v51[0] = 0;
  v51[1] = 0;
  State.init(wrappedValue:)(v51, v27, v28);
  v29 = v53;
  *((_OWORD *)v26 + 1) = v52;
  *((_QWORD *)v26 + 4) = v29;
  v30 = &v26[*(int *)(type metadata accessor for HeroBorder(0) + 28)];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_302D20);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  *(_QWORD *)v26 = v23;
  *((_QWORD *)v26 + 1) = v25;
  if (qword_3CF800 != -1)
    swift_once(&qword_3CF800, sub_19BB0C);
  *(_QWORD *)&v52 = qword_3DA1F8;
  v31 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v44, enum case for Font.TextStyle.body(_:), v43);
  v32 = sub_187D0();
  v33 = ScaledMetric.init(wrappedValue:relativeTo:)(&v52, v31, &type metadata for CGFloat, v32);
  HeroContainerModifier.init()(v33);
  v34 = Namespace.wrappedValue.getter(*(_QWORD *)(v1 + 40));
  static HeroContainer.cardShape.getter(v34);
  v35 = sub_2681C8();
  View.asTransitionSourceView(in:clipShape:)(v34, v6, v9, v35);
  sub_FA4C((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v36 = sub_D1D4((uint64_t)v11, &qword_3DED70);
  v37 = v47;
  static AccessibilityChildBehavior.combine.getter(v36);
  *(_QWORD *)&v52 = v9;
  *((_QWORD *)&v52 + 1) = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v52, &opaque type descriptor for <<opaque return type of View.asTransitionSourceView(in:clipShape:)>>, 1);
  v39 = v46;
  View.accessibilityElement(children:)(v37, v46, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v14, v39);
}

uint64_t sub_267050@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t OpaqueTypeConformance2;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  _OWORD *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;

  v78 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEDB8);
  v76 = *(_QWORD *)(v3 - 8);
  v77 = v3;
  __chkstk_darwin(v3);
  v75 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v74 = (char *)&v63 - v6;
  v7 = type metadata accessor for AccessibilityChildBehavior(0);
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for HeroBackground(0, v8);
  v66 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE150);
  v15 = *(_QWORD *)(v14 - 8);
  v70 = v14;
  v71 = v15;
  __chkstk_darwin(v14);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE158);
  __chkstk_darwin(v18);
  v73 = (uint64_t)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v65 = (char *)&v63 - v21;
  v23 = __chkstk_darwin(v22);
  v67 = (uint64_t)&v63 - v24;
  v25 = type metadata accessor for HeroBackgroundVariant(0, v23);
  v26 = *(_QWORD *)(v25 - 8);
  v79 = v25;
  v72 = v26;
  __chkstk_darwin(v25);
  v28 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v63 - v30;
  v64 = (char *)&v63 - v30;
  v32 = *a1;
  v33 = swift_retain(*a1);
  HeroBackgroundVariant.init(for:)(v33);
  v34 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v34(v28, v31, v25);
  v35 = HeroBackground.init(variant:)(v28);
  static AccessibilityChildBehavior.ignore.getter(v35);
  v36 = sub_89A0(&qword_3DE160, (uint64_t (*)(uint64_t))&type metadata accessor for HeroBackground, (uint64_t)&protocol conformance descriptor for HeroBackground);
  View.accessibilityElement(children:)(v10, v11, v36);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v10, v69);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v13, v11);
  v38 = LegacyEpisodeLockup.showTitle.getter(v37);
  if (v39)
    v40 = v38;
  else
    v40 = 0;
  if (v39)
    v41 = v39;
  else
    v41 = 0xE000000000000000;
  v82 = v40;
  v83 = v41;
  v80 = v11;
  v81 = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v80, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v43 = sub_D254();
  v44 = (uint64_t)v65;
  v45 = v70;
  View.accessibilityLabel<A>(_:)(&v82, v70, &type metadata for String, OpaqueTypeConformance2, v43);
  v46 = swift_bridgeObjectRelease(v41);
  (*(void (**)(char *, uint64_t, __n128))(v71 + 8))(v17, v45, v46);
  v47 = v67;
  sub_D210(v44, v67, &qword_3DE158);
  v48 = v64;
  v34(v28, v64, v79);
  v82 = a1[1];
  LOBYTE(v83) = *((_BYTE *)a1 + 16);
  v80 = a1[3];
  LOBYTE(v81) = *((_BYTE *)a1 + 32);
  v49 = (_OWORD *)swift_allocObject(&unk_38E1A8, 64, 7);
  v50 = *((_OWORD *)a1 + 1);
  v49[1] = *(_OWORD *)a1;
  v49[2] = v50;
  v49[3] = *((_OWORD *)a1 + 2);
  swift_retain(v32);
  sub_50988(&v82);
  sub_268328((uint64_t)&v80);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEDC0);
  v52 = sub_10EDC(&qword_3DEDC8, &qword_3DEDC0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v53 = v74;
  HeroChin.init(variant:content:)(v28, sub_268320, v49, v51, v52);
  v54 = v73;
  sub_268354(v47, v73);
  v55 = v75;
  v56 = v76;
  v57 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  v58 = v77;
  v57(v75, v53, v77);
  v59 = v78;
  sub_268354(v54, v78);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEDD0);
  v57((char *)(v59 + *(int *)(v60 + 48)), v55, v58);
  v61 = *(void (**)(char *, uint64_t))(v56 + 8);
  v61(v53, v58);
  sub_D1D4(v47, &qword_3DE158);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v79);
  v61(v55, v58);
  return sub_D1D4(v54, &qword_3DE158);
}

uint64_t sub_267524@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;

  v4 = static HorizontalAlignment.leading.getter(a1);
  v5 = static HeroContainer.spaceBetweenTextAndButtons.getter();
  *(_QWORD *)a2 = v4;
  *(double *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEDD8);
  return sub_267580(a1, a2 + *(int *)(v6 + 44));
}

uint64_t sub_267580@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  double (*v19)(char *, char *, uint64_t);
  char *v20;
  __n128 v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t, double);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[11];
  char v54;
  char v55;

  v47 = a2;
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEDE0);
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEDE8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - v15;
  v17 = sub_26786C(a1);
  static AccessibilityChildBehavior.combine.getter(v17);
  v18 = sub_26839C();
  View.accessibilityElement(children:)(v6, v7, v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_D1D4((uint64_t)v9, &qword_3DEDE0);
  v19 = *(double (**)(char *, char *, uint64_t))(v11 + 32);
  v44 = v16;
  v45 = v11;
  v20 = v13;
  v21.n128_f64[0] = v19(v16, v13, v10);
  v22 = sub_267B04(a1, (uint64_t)v53, v21);
  v43 = v53[0];
  v42 = v53[1];
  v23 = v53[3];
  v52 = v53[2];
  v41 = v53[4];
  v50 = v53[6];
  v51 = v53[5];
  v24 = v53[9];
  v48 = v53[8];
  v49 = v53[7];
  v25 = v53[10];
  LOBYTE(a1) = v54;
  LOBYTE(v6) = v55;
  v26 = *(void (**)(char *, char *, uint64_t, double))(v11 + 16);
  v27 = v20;
  v46 = v20;
  v26(v20, v16, v10, v22);
  v28 = v47;
  ((void (*)(uint64_t, char *, uint64_t))v26)(v47, v27, v10);
  v29 = v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DEE10) + 48);
  v30 = v43;
  v31 = v42;
  *(_QWORD *)v29 = v43;
  *(_QWORD *)(v29 + 8) = v31;
  v33 = v51;
  v32 = v52;
  *(_QWORD *)(v29 + 16) = v52;
  *(_QWORD *)(v29 + 24) = v23;
  v34 = v41;
  *(_QWORD *)(v29 + 32) = v41;
  *(_QWORD *)(v29 + 40) = v33;
  v36 = v49;
  v35 = v50;
  *(_QWORD *)(v29 + 48) = v50;
  *(_QWORD *)(v29 + 56) = v36;
  v37 = v48;
  *(_QWORD *)(v29 + 64) = v48;
  *(_QWORD *)(v29 + 72) = v24;
  *(_QWORD *)(v29 + 80) = v25;
  *(_BYTE *)(v29 + 88) = (_BYTE)a1;
  *(_BYTE *)(v29 + 89) = (_BYTE)v6;
  *(_QWORD *)(v29 + 96) = 0x3FF0000000000000;
  sub_268484(v30, v31, v32, v23, v34, v33, v35, v36, v37, v24, v25, (char)a1, (char)v6);
  v38 = *(void (**)(char *, uint64_t))(v45 + 8);
  v38(v44, v10);
  sub_2684B8(v30, v31);
  return ((uint64_t (*)(char *, uint64_t))v38)(v46, v10);
}

uint64_t sub_26786C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v24[5];

  v2 = type metadata accessor for EpisodeHeroTextArea(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24[-1] - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEE30);
  v9 = __chkstk_darwin(v8);
  v11 = (_QWORD *)((char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for Podcasts(0, v9);
  v24[3] = v12;
  v24[4] = sub_89A0(&qword_3D2F80, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v24);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(boxed_opaque_existential_0, enum case for Podcasts.episodeHeroUIKitTextArea(_:), v12);
  LOBYTE(v12) = isFeatureEnabled(_:)(v24);
  __swift_destroy_boxed_opaque_existential_0(v24);
  v14 = *a1;
  if ((v12 & 1) != 0)
  {
    *v11 = v14;
    swift_storeEnumTagMultiPayload(v11, v8, 0);
    v15 = sub_1F5714();
    v16 = sub_89A0(&qword_3DEE08, type metadata accessor for EpisodeHeroTextArea, (uint64_t)&unk_2EF8EC);
    swift_retain(v14);
    return _ConditionalContent<>.init(storage:)(v11, &type metadata for EpisodeHeroTextAreaUIKit, v2, v15, v16);
  }
  else
  {
    *(_QWORD *)v4 = v14;
    *((_QWORD *)v4 + 1) = swift_getKeyPath(&unk_302D20);
    *((_QWORD *)v4 + 2) = 0;
    v4[24] = 0;
    v18 = &v4[*(int *)(v2 + 24)];
    *(_QWORD *)v18 = swift_getKeyPath(&unk_302D78);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D05B0);
    swift_storeEnumTagMultiPayload(v18, v19, 0);
    v20 = &v4[*(int *)(v2 + 28)];
    *(_QWORD *)v20 = swift_getKeyPath(&unk_302D48);
    v20[8] = 0;
    sub_268600((uint64_t)v4, (uint64_t)v7);
    sub_268644((uint64_t)v7, (uint64_t)v11);
    swift_storeEnumTagMultiPayload(v11, v8, 1);
    v21 = sub_1F5714();
    v22 = sub_89A0(&qword_3DEE08, type metadata accessor for EpisodeHeroTextArea, (uint64_t)&unk_2EF8EC);
    swift_retain(v14);
    _ConditionalContent<>.init(storage:)(v11, &type metadata for EpisodeHeroTextAreaUIKit, v2, v21, v22);
    return sub_FA4C((uint64_t)v7, type metadata accessor for EpisodeHeroTextArea);
  }
}

double sub_267B04@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;
  _QWORD *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  double result;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t KeyPath;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[26];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char v53;
  char v54;

  v5 = type metadata accessor for Podcasts(0, a3);
  *((_QWORD *)&v48 + 1) = v5;
  *(_QWORD *)&v49 = sub_89A0(&qword_3D2F80, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v6 = __swift_allocate_boxed_opaque_existential_0(&v47);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v6, enum case for Podcasts.episodeHeroUIKitButtonArea(_:), v5);
  v7 = isFeatureEnabled(_:)(&v47);
  __swift_destroy_boxed_opaque_existential_0(&v47);
  v8 = *a1;
  if ((v7 & 1) != 0)
  {
    v9 = a1[1];
    v10 = *((_BYTE *)a1 + 16);
    swift_retain(v8);
    swift_retain(v9);
    v12 = sub_14A78(v11, v10);
    v13 = swift_release(v9);
    v14.n128_f64[0] = static HeroContainer.buttonAreaOutsets.getter(v13);
    v15 = v14.n128_u64[0];
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v22 = 0.0 - static HeroContainer.buttonAreaOutsets.getter(v14);
    v24 = 0.0 - v23;
    v26 = 0.0 - v25;
    v28 = 0.0 - v27;
    v41 = v8;
    KeyPath = v12;
    *(_QWORD *)&v43 = v15;
    *((_QWORD *)&v43 + 1) = v17;
    *(_QWORD *)&v44 = v19;
    *((_QWORD *)&v44 + 1) = v21;
    *(_QWORD *)&v45 = static Edge.Set.all.getter(v29);
    *((double *)&v45 + 1) = v22;
    *(double *)v46 = v24;
    *(double *)&v46[8] = v26;
    *(double *)&v46[16] = v28;
    *(_WORD *)&v46[24] = 0;
  }
  else
  {
    v41 = *a1;
    KeyPath = swift_getKeyPath(&unk_302D48);
    v43 = 0u;
    v44 = 0u;
    v45 = 0u;
    memset(v46, 0, 25);
    v46[25] = 1;
    swift_retain(v8);
  }
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEE18);
  v31 = sub_26852C();
  v32 = sub_268598();
  _ConditionalContent<>.init(storage:)(&v41, v30, &type metadata for EpisodeHeroButtonArea, v31, v32);
  result = *(double *)&v47;
  v34 = v48;
  v35 = v49;
  v36 = v50;
  v37 = v51;
  v38 = v52;
  v39 = v53;
  v40 = v54;
  *(_OWORD *)a2 = v47;
  *(_OWORD *)(a2 + 16) = v34;
  *(_OWORD *)(a2 + 32) = v35;
  *(_OWORD *)(a2 + 48) = v36;
  *(_OWORD *)(a2 + 64) = v37;
  *(_QWORD *)(a2 + 80) = v38;
  *(_BYTE *)(a2 + 88) = v39;
  *(_BYTE *)(a2 + 89) = v40;
  return result;
}

uint64_t sub_267CE8@<X0>(uint64_t a1@<X8>)
{
  return sub_266CAC(a1);
}

uint64_t sub_267D20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t result;

  v5 = *a2;
  v6 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  KeyPath = swift_getKeyPath(&unk_302D48);
  result = swift_getKeyPath(&unk_302DA8);
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = KeyPath;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = result;
  *(_BYTE *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  return result;
}

uint64_t sub_267D98()
{
  return LegacyEpisodeLockup.isListenNowContext.getter() & 1;
}

uint64_t sub_267DBC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_268690();
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

unint64_t sub_267DF0()
{
  unint64_t result;

  result = qword_3DED68;
  if (!qword_3DED68)
  {
    result = swift_getWitnessTable(&unk_302CD0, &type metadata for EpisodeHero);
    atomic_store(result, (unint64_t *)&qword_3DED68);
  }
  return result;
}

uint64_t sub_267E34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_333690, 1);
}

uint64_t sub_267E44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.graph.getter();
  *a1 = result;
  return result;
}

uint64_t sub_267E6C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.graph.setter(v1);
}

uint64_t sub_267E94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for DynamicTypeSize(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.dynamicTypeSize.setter(v4);
}

uint64_t sub_267F10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v2 = type metadata accessor for EyebrowBuilder.Style(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v31[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D81A0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v31[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Podcasts(0, v7);
  v32 = v10;
  v33 = sub_89A0(&qword_3D2F80, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v31);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(boxed_opaque_existential_0, enum case for Podcasts.episodeHeroHideSubBadgeForPaidShowWhenEntitled(_:), v10);
  LOBYTE(v10) = isFeatureEnabled(_:)(v31);
  v12 = __swift_destroy_boxed_opaque_existential_0(v31);
  if ((v10 & 1) != 0
    && LegacyEpisodeLockup.entitlementState.getter(v12) == 1
    && LegacyEpisodeLockup.showDisplayType.getter() != 3)
  {
    v13 = ((uint64_t (*)(void))DisplayType.rawValue.getter)();
    v15 = v14;
    v17 = DisplayType.rawValue.getter(1);
    v18 = v16;
    if (v13 == v17 && v15 == v16)
    {
      swift_bridgeObjectRelease_n(v15, 2);
      return 0;
    }
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v16, 0);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v18);
    if ((v20 & 1) != 0)
      return 0;
  }
  type metadata accessor for EyebrowBuilder(0);
  v32 = type metadata accessor for LegacyEpisodeLockup(0);
  v33 = sub_89A0((unint64_t *)&qword_3D81E8, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyEpisodeLockup);
  v31[0] = a1;
  v22 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration(0, v21);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for EyebrowBuilder.Style.default(_:), v2);
  v23 = swift_retain(a1);
  v24 = EyebrowBuilder.__allocating_init(episode:style:explicitSymbol:abbreviatedPubDateConfig:hostingViewHasLimitedSpace:)(v31, v5, 0, 0, v9, 0, v23);
  v25 = EyebrowBuilder.subscriptionBadge.getter();
  v19 = v25;
  if (v26)
  {
    v27 = v26;
    v31[0] = v25;
    v31[1] = v26;
    v28 = sub_D254();
    v19 = StringProtocol.localizedUppercase.getter(&type metadata for String, v28);
    swift_bridgeObjectRelease(v27);
  }
  swift_release(v24);
  return v19;
}

unint64_t sub_2681C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DED90;
  if (!qword_3DED90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DED70);
    sub_26824C();
    sub_89A0(&qword_3DE140, (uint64_t (*)(uint64_t))&type metadata accessor for HeroContainerModifier, (uint64_t)&protocol conformance descriptor for HeroContainerModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DED90);
  }
  return result;
}

unint64_t sub_26824C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DED98;
  if (!qword_3DED98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DED88);
    sub_10EDC(&qword_3DEDA0, &qword_3DEDA8, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_89A0(&qword_3DEDB0, type metadata accessor for HeroBorder, (uint64_t)&unk_2FB900);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DED98);
  }
  return result;
}

uint64_t sub_2682E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  sub_15E9C(*(id *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_268320@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267524((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_268328(uint64_t a1)
{
  sub_15E90(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_268354(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_26839C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DEDF0;
  if (!qword_3DEDF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DEDE0);
    sub_268400();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3DEDF0);
  }
  return result;
}

unint64_t sub_268400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DEDF8;
  if (!qword_3DEDF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DEE00);
    sub_1F5714();
    sub_89A0(&qword_3DEE08, type metadata accessor for EpisodeHeroTextArea, (uint64_t)&unk_2EF8EC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DEDF8);
  }
  return result;
}

uint64_t sub_268484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;

  if ((a13 & 1) != 0)
    v13 = a2;
  else
    v13 = a1;
  if ((a13 & 1) != 0)
    v14 = a1;
  else
    v14 = a2;
  swift_retain(v13);
  return swift_retain(v14);
}

uint64_t sub_2684B8(uint64_t a1, uint64_t a2)
{
  swift_release(a1);
  return swift_release(a2);
}

uint64_t sub_2684DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.graph.getter();
  *a1 = result;
  return result;
}

uint64_t sub_268504(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.graph.setter(v1);
}

unint64_t sub_26852C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DEE20;
  if (!qword_3DEE20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DEE18);
    sub_14898C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DEE20);
  }
  return result;
}

unint64_t sub_268598()
{
  unint64_t result;

  result = qword_3DEE28;
  if (!qword_3DEE28)
  {
    result = swift_getWitnessTable(&unk_302B68, &type metadata for EpisodeHeroButtonArea);
    atomic_store(result, (unint64_t *)&qword_3DEE28);
  }
  return result;
}

uint64_t sub_2685DC()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_268600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeHeroTextArea(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_268644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeHeroTextArea(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_268690()
{
  unint64_t result;

  result = qword_3DEE38;
  if (!qword_3DEE38)
  {
    result = swift_getWitnessTable(&unk_302C80, &type metadata for EpisodeHero);
    atomic_store(result, (unint64_t *)&qword_3DEE38);
  }
  return result;
}

void destroy for EpisodeHero(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));
  sub_15E9C(*(id *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for EpisodeHero(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  char v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = (void *)a2[3];
  v8 = *((_BYTE *)a2 + 32);
  swift_retain(v4);
  swift_retain(v5);
  sub_15E90(v7, v8);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = a2[5];
  return a1;
}

uint64_t *assignWithCopy for EpisodeHero(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  char v10;
  void *v11;
  char v12;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = *((_BYTE *)a2 + 16);
  v8 = a1[1];
  a1[1] = v6;
  *((_BYTE *)a1 + 16) = v7;
  swift_retain(v6);
  swift_release(v8);
  v9 = (void *)a2[3];
  v10 = *((_BYTE *)a2 + 32);
  sub_15E90(v9, v10);
  v11 = (void *)a1[3];
  v12 = *((_BYTE *)a1 + 32);
  a1[3] = (uint64_t)v9;
  *((_BYTE *)a1 + 32) = v10;
  sub_15E9C(v11, v12);
  a1[5] = a2[5];
  return a1;
}

uint64_t *assignWithTake for EpisodeHero(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  void *v8;
  char v9;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = *((_BYTE *)a2 + 16);
  v6 = a1[1];
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = v5;
  swift_release(v6);
  v7 = *((_BYTE *)a2 + 32);
  v8 = (void *)a1[3];
  v9 = *((_BYTE *)a1 + 32);
  a1[3] = a2[3];
  *((_BYTE *)a1 + 32) = v7;
  sub_15E9C(v8, v9);
  a1[5] = a2[5];
  return a1;
}

ValueMetadata *type metadata accessor for EpisodeHero()
{
  return &type metadata for EpisodeHero;
}

uint64_t sub_268890()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  unint64_t v4;

  v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DED78);
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DED70);
  v4 = sub_2681C8();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.asTransitionSourceView(in:clipShape:)>>, 1);
  v3 = v0;
  v4 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

id sub_268904()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for PlayerViewController();
  return objc_msgSendSuper2(&v3, "dealloc");
}

double sub_268A98()
{
  void *v0;
  id v1;
  NSString v2;
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  double result;
  id v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for PlayerViewController();
  objc_msgSendSuper2(&v9, "viewDidLoad");
  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "player");
  v4 = v3;
  if (v3)
  {
    v5 = objc_msgSend(v3, "currentItem");

    if (v5)
    {
      v8 = v5;
      v6 = sub_268F8C();
      v4 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(&v8, v6);

    }
    else
    {
      v4 = 0;
    }
  }
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "playerItemDidPlayToEndWithNotification:", v2, v4);

  *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for PlayerViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews20PlayerViewController);
}

unint64_t sub_268F8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DEE80;
  if (!qword_3DEE80)
  {
    v1 = objc_opt_self(AVPlayerItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3DEE80);
  }
  return result;
}

objc_class *sub_268FC8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  id v5;
  id v6;
  Class isa;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell____lazy_storage___heightConstraint;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell____lazy_storage___heightConstraint);
  if (v2)
  {
    v3 = *(objc_class **)(v0
                        + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell____lazy_storage___heightConstraint);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_expandableTextView), "heightAnchor");
    v6 = objc_msgSend(v5, "constraintEqualToConstant:", 100.0);

    isa = NSLayoutConstraint.withPriority(priority:)((__C::UILayoutPriority)1144750080).super.isa;
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = isa;
    v3 = isa;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_269088()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell____lazy_storage___widthConstraint;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell____lazy_storage___widthConstraint);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell____lazy_storage___widthConstraint);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_expandableTextView), "widthAnchor");
    v5 = objc_msgSend(v4, "constraintLessThanOrEqualToConstant:", 520.0);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

char *sub_269134(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  __C::UILayoutPriority v30;
  Class isa;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  objc_class *v47;
  id v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  Class v54;
  uint64_t v56;
  objc_super v57;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_expandableTextView;
  v11 = objc_allocWithZone((Class)type metadata accessor for ExpandableTextView(0));
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell____lazy_storage___heightConstraint] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell____lazy_storage___widthConstraint] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_paragraph] = 0;
  v13 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_cellReloadingHandler];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_objectGraph] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_recordedWidth] = 0;

  v57.receiver = v12;
  v57.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v57, "initWithFrame:", a1, a2, a3, a4);
  v15 = qword_3CEFF0;
  v16 = (char *)v14;
  if (v15 != -1)
    swift_once(&qword_3CEFF0, sub_DFAC);
  objc_msgSend(v16, "setBackgroundColor:", qword_3D0898);
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_expandableTextView;
  v18 = *(char **)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_expandableTextView];
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v19 = swift_allocObject(&unk_38E348, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v16);
  v20 = (void (**)())&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreTapHandler];
  v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreTapHandler];
  v22 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreTapHandler + 8];
  *v20 = sub_26A74C;
  v20[1] = (void (*)())v19;
  sub_1D618(v21, v22);
  v23 = qword_3CEFE8;
  v24 = *(id *)&v16[v17];
  if (v23 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  objc_msgSend(v24, "setTintColor:", qword_3D0890);

  v25 = objc_msgSend(v16, "contentView");
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v16[v17]);

  v26 = objc_msgSend(v16, "contentView");
  v27 = objc_msgSend(v26, "trailingAnchor");

  v28 = objc_msgSend(*(id *)&v16[v17], "trailingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  v30.rawValue = static UILayoutPriority.highestBreakable.getter();
  isa = NSLayoutConstraint.withPriority(priority:)(v30).super.isa;

  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v33 = swift_allocObject(v32, 72, 7);
  *(_OWORD *)(v33 + 16) = xmmword_2F1D10;
  *(_QWORD *)(v33 + 32) = sub_268FC8();
  v34 = objc_msgSend(v16, "contentView");
  v35 = objc_msgSend(v34, "topAnchor");

  v36 = objc_msgSend(*(id *)&v16[v17], "topAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v33 + 40) = v37;
  v38 = objc_msgSend(v16, "contentView");
  v39 = objc_msgSend(v38, "bottomAnchor");

  v40 = objc_msgSend(*(id *)&v16[v17], "bottomAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v33 + 48) = v41;
  v42 = objc_msgSend(v16, "contentView");
  v43 = objc_msgSend(v42, "leadingAnchor");

  v44 = objc_msgSend(*(id *)&v16[v17], "leadingAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  *(_QWORD *)(v33 + 56) = v45;
  *(_QWORD *)(v33 + 64) = isa;
  v56 = v33;
  specialized Array._endMutation()(v46);
  v47 = isa;
  v48 = objc_msgSend(v16, "traitCollection");
  LOBYTE(v43) = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v43 & 1) != 0)
  {
    v49 = sub_269088();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
    v51 = *(_QWORD *)((char *)&dword_10 + (v56 & 0xFFFFFFFFFFFFFF8));
    v50 = *(_QWORD *)((char *)&dword_18 + (v56 & 0xFFFFFFFFFFFFFF8));
    if (v51 >= v50 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
    v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v49);
    specialized Array._endMutation()(v52);
    v33 = v56;
  }
  v53 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  v54 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v53, "activateConstraints:", v54, swift_bridgeObjectRelease(v33).n128_f64[0]);

  return v16;
}

void sub_2696A4(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  char *v3;
  uint64_t v4;
  __n128 v5;
  void (*v6)(__n128);
  uint64_t v7;
  __n128 v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)&Strong[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_paragraph];
    if (v4)
    {
      v5 = swift_retain(*(_QWORD *)&Strong[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_paragraph]);
      if ((Paragraph.isCollapsed.getter(v5) & 1) != 0)
      {
        Paragraph.isCollapsed.setter(0);
        v6 = *(void (**)(__n128))&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_cellReloadingHandler];
        if (v6)
        {
          v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_cellReloadingHandler + 8];
          v8 = swift_retain(v7);
          v6(v8);
          sub_1D618((uint64_t)v6, v7);
        }
      }

      swift_release(v4);
    }
    else
    {

    }
  }
}

void sub_2697AC(uint64_t a1, void *a2)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD v31[3];
  __int128 v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;

  if (qword_3CF610 != -1)
    swift_once(&qword_3CF610, sub_141C34);
  v2 = xmmword_3FC4B0;
  v3 = xmmword_3FC4C8;
  v28 = qword_3FC4D8;
  v29 = qword_3FC4C0;
  v4 = qword_3FC4F0;
  v26 = qword_3FC4E8;
  v27 = (void *)qword_3FC4E0;
  v19 = *((_QWORD *)&xmmword_3FC4B0 + 1);
  v20 = qword_3FC4F0;
  v5 = qword_3FC4F8;
  v6 = qword_3FC500;
  v21 = qword_3FC4F8;
  v22 = qword_3FC500;
  v7 = word_3FC508;
  v8 = HIBYTE(word_3FC508);
  v23 = word_3FC508;
  v24 = HIBYTE(word_3FC508);
  v9 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  sub_DDA0((void *)v2, *((uint64_t *)&v2 + 1), v29, v3, *((uint64_t *)&v3 + 1), v28, v27, v26, v4, v5, v6, v7, v8);
  v10 = objc_msgSend(v9, "system");
  v11 = objc_msgSend(v10, "preferredContentSizeCategory");

  v12 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v11);
  v31[0] = v2;
  v31[1] = v19;
  v31[2] = v29;
  v32 = v3;
  v33 = v28;
  v34 = v27;
  v35 = v26;
  v36 = v20;
  v37 = v21;
  v38 = v22;
  v39 = v23;
  v40 = v24;
  v13 = sub_1D5728((uint64_t)v31, v12);
  v30 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v13, 0.0);

  sub_DCC8((void *)v2, v19, v29, v3, *((uint64_t *)&v3 + 1), v28, v27, v26, v20, v21, v22, v23, v24);
  v14 = objc_msgSend(v30, "lineHeight");
  v16 = v15;
  if ((UITraitCollection.interfaceIdiomIsMac.getter(v14) & 1) != 0)
  {
    v17 = 0.166666667;
  }
  else
  {
    v18 = (char *)objc_msgSend(a2, "horizontalSizeClass");
    v17 = 0.5;
    if (v18 == (_BYTE *)&dword_0 + 1)
      v17 = 3.0;
  }
  ShelfCellHeight.init(fractionOfWidth:absolute:)(v17, v16 * 3.0);

}

void sub_269A1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  unint64_t v9;
  __n128 v10;
  __n128 v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1EE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_paragraph);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_paragraph) = a1;
  swift_release(v7);
  v8 = swift_retain(a1);
  v9 = Paragraph.text.getter(v8);
  v11 = Paragraph.isCollapsed.getter(v10);
  v13 = v12;
  v14 = Paragraph.isLinkDetectionEnabled.getter(v11);
  Paragraph.shareSheetContentSource.getter();
  sub_2D7DA0(v9, v13 & 1, v14 & 1, 4, (uint64_t)v6);

  sub_26A590((uint64_t)v6);
  sub_269B0C();
}

void sub_269B0C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  unint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  __n128 v35;
  id v36;
  __n128 v37;
  char v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  char v57;
  double v58;
  objc_class *v59;
  objc_class *v60;
  objc_class *v61;
  __n128 v62;
  void *v63;
  uint64_t v64;
  _QWORD *v65;
  void *v66;
  _QWORD *v67;
  id v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD aBlock[5];
  _QWORD *v78;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v6);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_paragraph];
  if (v11)
  {
    v74 = v8;
    v75 = v7;
    v76 = v3;
    v12 = swift_retain(v11);
    v13 = Paragraph.text.getter(v12);
    v14 = objc_msgSend(v1, "traitCollection");
    sub_151EE8(v14, v13);
    v16 = v15;

    v17 = objc_msgSend(v1, "traitCollection");
    LOBYTE(v14) = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v14 & 1) != 0)
    {
      v18 = sub_269088();
      objc_msgSend(v18, "constant");
      v20 = v19;

      objc_msgSend(v1, "bounds");
      v22 = v21;
      v24 = v23;
      v26 = v25;
      v28 = v27;
      objc_msgSend(v1, "layoutMargins");
      v33 = UIEdgeInsetsInsetRect_1(v22, v24, v26, v28, v29, v30, v31, v32);
      if (v33 < v20)
        v20 = v33;
      if (v16 >> 62)
        goto LABEL_6;
    }
    else
    {
      objc_msgSend(v1, "bounds");
      v42 = v41;
      v44 = v43;
      v46 = v45;
      v48 = v47;
      objc_msgSend(v1, "layoutMargins");
      v20 = UIEdgeInsetsInsetRect_1(v42, v44, v46, v48, v49, v50, v51, v52);
      if (v16 >> 62)
      {
LABEL_6:
        v34 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
        v36 = (id)dispatch thunk of LanguageAwareString.attributedString.getter(v35);

        Paragraph.isCollapsed.getter(v37);
        sub_2DA130(v36, v38 & 1, 3, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right, v20);
        v40 = v39;
LABEL_9:

        v59 = sub_268FC8();
        -[objc_class setConstant:](v59, "setConstant:", v40);

        v60 = sub_268FC8();
        -[objc_class setActive:](v60, "setActive:", 0);

        v61 = sub_268FC8();
        -[objc_class setActive:](v61, "setActive:", 1);

        sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
        v63 = (void *)static OS_dispatch_queue.main.getter(v62);
        v64 = swift_allocObject(&unk_38E348, 24, 7);
        swift_unknownObjectWeakInit(v64 + 16, v1);
        v65 = (_QWORD *)swift_allocObject(&unk_38E370, 40, 7);
        v65[2] = v64;
        v65[3] = v16;
        v65[4] = v11;
        aBlock[4] = sub_26A728;
        v78 = v65;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24360;
        aBlock[3] = &block_descriptor_61;
        v66 = _Block_copy(aBlock);
        v67 = v78;
        swift_retain(v11);
        v68 = v34;
        v69 = swift_release(v67);
        static DispatchQoS.unspecified.getter(v69);
        aBlock[0] = _swiftEmptyArrayStorage;
        v70 = sub_239FC((unint64_t *)&qword_3D2FD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
        v72 = sub_CF9F8();
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v71, v72, v2, v70);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v66);
        _Block_release(v66);

        swift_release(v11);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v5, v2);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v10, v75);
        return;
      }
    }
    v36 = (id)v16;
    v53 = LanguageAwareString.string.getter();
    v55 = v54;
    Paragraph.isCollapsed.getter(v56);
    sub_2D9DBC(v53, v55, v57 & 1, 3, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right, v20);
    v40 = v58;
    swift_bridgeObjectRelease(v55);
    v34 = v36;
    goto LABEL_9;
  }
}

uint64_t sub_26A11C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  void *v8;
  id v9;
  __n128 v10;
  char v11;
  _BYTE v13[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1EE0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v8 = (void *)result;
    v9 = *(id *)(result + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_expandableTextView);

    LOBYTE(v8) = Paragraph.isCollapsed.getter(v10);
    v11 = Paragraph.isLinkDetectionEnabled.getter();
    Paragraph.shareSheetContentSource.getter();
    sub_2D7DA0(a2, v8 & 1, v11 & 1, 4, (uint64_t)v6);

    return sub_26A590((uint64_t)v6);
  }
  return result;
}

uint64_t type metadata accessor for ParagraphCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews13ParagraphCell);
}

void sub_26A330(uint64_t *a1)
{
  sub_269A1C(*a1);
}

uint64_t sub_26A338()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_objectGraph));
}

uint64_t sub_26A348(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_objectGraph) = a1;
  swift_release(v3);
  v4 = (uint64_t *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_expandableTextView)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_objectGraph);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = *v4;
  *v4 = a1;
  swift_retain_n(a1, 2);
  return swift_release(v5);
}

uint64_t sub_26A3D4(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DEF08, v3, (uint64_t (*)(uint64_t))type metadata accessor for ParagraphCell, (uint64_t)&unk_302FD0);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

double sub_26A42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v5 = (_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_cellReloadingHandler);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_cellReloadingHandler);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_cellReloadingHandler + 8);
  *v5 = a2;
  v5[1] = a3;
  sub_1D618(v6, v7);
  *(_QWORD *)&result = swift_retain(a3).n128_u64[0];
  return result;
}

void sub_26A468(uint64_t a1, void *a2)
{
  sub_2697AC(a1, a2);
}

uint64_t sub_26A47C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DEF08, a2, (uint64_t (*)(uint64_t))type metadata accessor for ParagraphCell, (uint64_t)&unk_302FD0);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_26A4B0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DEEE8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ParagraphCell, (uint64_t)&unk_302EA8);
}

uint64_t sub_26A4DC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5CA0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ParagraphCell, (uint64_t)&unk_302F30);
}

uint64_t sub_26A508(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DEEF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ParagraphCell, (uint64_t)&unk_302F08);
}

uint64_t sub_26A534(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DEEF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ParagraphCell, (uint64_t)&unk_302F60);
}

uint64_t sub_26A560()
{
  return sub_239FC(&qword_3DEF00, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Paragraph, (uint64_t)&protocol conformance descriptor for Paragraph);
}

uint64_t sub_26A590(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1EE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_26A5D0()
{
  char *v0;
  uint64_t v1;
  char *v2;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_expandableTextView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExpandableTextView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell____lazy_storage___heightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell____lazy_storage___widthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_paragraph] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_cellReloadingHandler];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_objectGraph] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13ParagraphCell_recordedWidth] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ParagraphCell.swift", 43, 2, 63, 0);
  __break(1u);
}

uint64_t sub_26A6CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_26A6F0()
{
  _QWORD *v0;

  swift_release(v0[2]);

  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_26A728()
{
  uint64_t v0;

  return sub_26A11C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_61(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_61(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_26A74C()
{
  uint64_t v0;

  sub_2696A4(v0);
}

uint64_t sub_26A754(_QWORD *a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(_QWORD *, char *, _QWORD, _QWORD, uint64_t, uint64_t);
  id v28;
  uint64_t v30;
  uint64_t v31;

  v2 = (int *)type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FlowDestination(0);
  v6 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  v31 = v6;
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  Action.title.getter(v7);
  v11 = v10;
  HttpTemplateAction.message.getter();
  v13 = v12;
  if (!v11)
  {
    v14 = 0;
    if (v12)
      goto LABEL_3;
LABEL_5:
    v15 = 0;
    goto LABEL_6;
  }
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  if (!v13)
    goto LABEL_5;
LABEL_3:
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
LABEL_6:
  v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v14, v15, 1);

  sub_26AB58(v16);
  sub_26ADE0(v16);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  *v9 = v16;
  v19 = v30;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v31 + 104))(v9, enum case for FlowDestination.viewController(_:), v30);
  v20 = enum case for FlowPresentationContext.presentModal(_:);
  v21 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v4, v20, v21);
  v22 = &v4[v2[9]];
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  v23 = &v4[v2[7]];
  v24 = enum case for FlowDestinationPageHeader.standard(_:);
  v25 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  v4[v2[5]] = 0;
  v26 = &v4[v2[6]];
  *((_QWORD *)v26 + 4) = 0;
  *(_OWORD *)v26 = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  v26[40] = -1;
  *(_QWORD *)&v4[v2[8]] = 0;
  v27 = *(void (**)(_QWORD *, char *, _QWORD, _QWORD, uint64_t, uint64_t))(v18 + 32);
  v28 = v16;
  v27(v9, v4, 0, 0, v17, v18);

  sub_56B40((uint64_t)v4);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v31 + 8))(v9, v19);
}

id DebugSettingsViewController.__deallocating_deinit()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v2, "removeObserver:", v0);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, "dealloc");
}

void sub_26AB58(void *a1)
{
  void *v1;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  void *v9;
  id v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  void *v14;
  uint64_t v15;
  char *v16;
  NSString v17;
  void *v18;
  id v19;
  void **v20;
  void *v21;
  _QWORD aBlock[5];
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;

  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v24._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x435F4E4F49544341;
  v5._object = (void *)0xED00004C45434E41;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v24._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v24)._object;

  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v9 = (void *)objc_opt_self(UIAlertAction);
  v10 = objc_msgSend(v9, "actionWithTitle:style:handler:", v8, 0, 0);

  objc_msgSend(a1, "addAction:", v10);
  v11 = objc_msgSend(v3, "mainBundle");
  v25._object = (void *)0xE000000000000000;
  v12._countAndFlagsBits = 0x4F5F4E4F49544341;
  v12._object = (void *)0xE90000000000004BLL;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v25)._object;

  v15 = swift_allocObject(&unk_38E520, 24, 7);
  *(_QWORD *)(v15 + 16) = v1;
  v16 = v1;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  aBlock[4] = sub_26C1F8;
  v23 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2BBC60;
  aBlock[3] = &block_descriptor_7_3;
  v18 = _Block_copy(aBlock);
  v19 = objc_msgSend(v9, "actionWithTitle:style:handler:", v17, 0, v18, swift_release(v23).n128_f64[0]);
  _Block_release(v18);

  objc_msgSend(a1, "addAction:", v19);
  objc_msgSend(a1, "setPreferredAction:", v19);
  v20 = (void **)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_okAction];
  swift_beginAccess(&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_okAction], aBlock, 1, 0);
  v21 = *v20;
  *v20 = v19;

}

void sub_26ADE0(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  double v40;
  __n128 v41;
  void **v42;
  __n128 v43;
  void *v44;
  uint64_t v45;
  void **v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  id v56;
  uint64_t v57;
  void *v58;
  unint64_t v59;
  _QWORD aBlock[5];
  uint64_t v61;

  v56 = a1;
  v2 = type metadata accessor for HttpTemplateParameter(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v55 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEF68);
  v57 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v48 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEF70);
  __chkstk_darwin(v10);
  v12 = (unint64_t *)((char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v45 - v14);
  v17 = HttpTemplateAction.parameters.getter(v16);
  v18 = 0;
  v19 = *(_QWORD *)(v17 + 16);
  v47 = OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_hasRequiredParameters;
  v58 = v1;
  v46 = (void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_okAction];
  v54 = v4 + 7;
  v49 = v19;
  v50 = v17;
  v52 = v12;
  v53 = v8;
  v51 = v15;
  while (1)
  {
    if (v18 == v19)
    {
      v20 = 1;
      v21 = v19;
      goto LABEL_9;
    }
    if (v18 >= *(_QWORD *)(v17 + 16))
      break;
    v22 = v18;
    v21 = v18 + 1;
    v23 = &v48[*(int *)(v8 + 48)];
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v23, v17+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v18, v2);
    v24 = (char *)v12 + *(int *)(v8 + 48);
    *v12 = v22;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v24, v23, v2);
    v20 = 0;
LABEL_9:
    v25 = v57;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v12, v20, 1, v8);
    sub_26C0AC((uint64_t)v12, (uint64_t)v15);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v15, 1, v8) == 1)
    {
      swift_bridgeObjectRelease(v17);
      return;
    }
    v59 = v21;
    v26 = *v15;
    v27 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v27(v7, (char *)v15 + *(int *)(v8 + 48), v2);
    v28 = v55;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v55, v7, v2);
    v29 = *(unsigned __int8 *)(v3 + 80);
    v30 = v2;
    v31 = (v29 + 24) & ~v29;
    v32 = v7;
    v33 = (v54 + v31) & 0xFFFFFFFFFFFFFFF8;
    v34 = swift_allocObject(&unk_38E4D0, v33 + 8, v29 | 7);
    *(_QWORD *)(v34 + 16) = v26;
    v35 = v34 + v31;
    v2 = v30;
    v27((char *)v35, v28, v30);
    v36 = v58;
    *(_QWORD *)(v34 + v33) = v58;
    v7 = v32;
    aBlock[4] = sub_26C168;
    v61 = v34;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2BBC60;
    aBlock[3] = &block_descriptor_62;
    v37 = _Block_copy(aBlock);
    v38 = v61;
    v39 = v36;
    *(_QWORD *)&v40 = swift_release(v38).n128_u64[0];
    objc_msgSend(v56, "addTextFieldWithConfigurationHandler:", v37, v40);
    _Block_release(v37);
    if ((HttpTemplateParameter.isRequired.getter(v41) & 1) == 0)
      goto LABEL_3;
    *((_BYTE *)v58 + v47) = 1;
    v42 = v46;
    v43 = swift_beginAccess(v46, aBlock, 32, 0);
    v44 = *v42;
    if (v44)
    {
      objc_msgSend(v44, "setEnabled:", 0, swift_endAccess(aBlock).n128_f64[0]);
LABEL_3:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v32, v30);
      goto LABEL_4;
    }
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v32, v30, v43);
    swift_endAccess(aBlock);
LABEL_4:
    v12 = v52;
    v8 = v53;
    v17 = v50;
    v15 = v51;
    v19 = v49;
    v18 = v59;
  }
  __break(1u);
}

void sub_26B1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  _QWORD v55[2];
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD v70[6];
  char v71[32];

  v56 = type metadata accessor for Logger(0);
  v55[1] = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v65 = (char *)v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for ActionMetricsBehavior(0);
  v58 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  __chkstk_darwin(v2);
  v57 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ActionMetrics(0);
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  __chkstk_darwin(v4);
  v64 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HttpTemplateParameter(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for HttpTemplateSubstitutions(0, v8);
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_16A658((uint64_t)_swiftEmptyArrayStorage);
  v15 = sub_16A658((uint64_t)_swiftEmptyArrayStorage);
  v16 = v13;
  v17 = sub_272D78((uint64_t)_swiftEmptyArrayStorage);
  HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:)(v14, v15, v17);
  v18 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_textFields);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_textFields, v71, 0, 0);
  v19 = *v18;
  if ((unint64_t)*v18 >> 62)
    goto LABEL_16;
  v20 = *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v19);
  if (v20)
  {
    while (v20 >= 1)
    {
      v21 = 0;
      v22 = *(_QWORD *)(v66 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_templateAction);
      v68 = v19 & 0xC000000000000001;
      v69 = v22;
      v67 = v7;
      while (1)
      {
        v34 = v68
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v19)
            : *(id *)(v19 + 8 * v21 + 32);
        v35 = v34;
        v36 = HttpTemplateAction.parameters.getter(v34);
        v37 = (unint64_t)objc_msgSend(v35, "tag");
        if ((v37 & 0x8000000000000000) != 0)
          break;
        if (v37 >= *(_QWORD *)(v36 + 16))
          goto LABEL_15;
        (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v10, v36+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v37, v6);
        v38 = objc_msgSend(v35, "text", swift_bridgeObjectRelease(v36).n128_f64[0]);
        if (v38)
        {
          v23 = v38;
          v24 = v10;
          v25 = v6;
          v26 = v20;
          v27 = v19;
          v28 = v16;
          v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
          v31 = v30;

          v32 = v29;
          v16 = v28;
          v19 = v27;
          v20 = v26;
          v6 = v25;
          v10 = v24;
          v7 = v67;
          HttpTemplateSubstitutions.setParameter(value:for:)(v32, v31, v10);

          v33 = swift_bridgeObjectRelease(v31);
        }
        else
        {

        }
        ++v21;
        (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v33);
        if (v20 == v21)
          goto LABEL_20;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (v19 < 0)
        v39 = v19;
      else
        v39 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v19);
      v20 = _CocoaArrayWrapper.endIndex.getter(v39);
      if (!v20)
        goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease(v19);
    v40 = v66;
    v41 = v64;
    static ActionMetrics.notInstrumented.getter(v42);
    v44 = v16;
    v45 = HttpTemplateAction.makeAction(with:actionMetrics:)(v16, v41, v43);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v61);
    v46 = *(_QWORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_actionRunner + 8);
    ObjectType = swift_getObjectType();
    v70[3] = type metadata accessor for HttpAction(0);
    v70[4] = sub_131690(&qword_3D90F8, (uint64_t (*)(uint64_t))&type metadata accessor for HttpAction);
    v70[0] = v45;
    v48 = v58;
    v49 = v57;
    v50 = v40;
    v51 = v59;
    (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, enum case for ActionMetricsBehavior.notProcessed(_:), v59);
    v52 = *(_QWORD *)(v50 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_objectGraph);
    swift_retain(v45);
    v53 = ActionRunner.perform(_:withMetrics:asPartOf:)(v70, v49, v52, ObjectType, v46);
    swift_release(v45);
    v54 = swift_release(v53);
    (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v49, v51, v54);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v63);
    __swift_destroy_boxed_opaque_existential_0(v70);
  }
}

uint64_t sub_26B8D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  NSString v9;
  id v10;
  _QWORD *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  HttpTemplateParameter.title.getter(objc_msgSend(a1, "setTag:", a2));
  if (v6)
  {
    v8 = v6;
    v9 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v7 = swift_bridgeObjectRelease(v8).n128_u64[0];
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(a1, "setPlaceholder:", v9, v7);

  objc_msgSend(a1, "setKeyboardType:", qword_303060[(char)HttpTemplateParameter.inputType.getter()]);
  objc_msgSend(a1, "setDelegate:", a4);
  v10 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v10, "addObserver:selector:name:object:", a4, "textFieldDidChange:", UITextFieldTextDidChangeNotification, a1);

  v11 = (_QWORD *)(a4 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_textFields);
  swift_beginAccess(a4 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_textFields, v17, 33, 0);
  v12 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  v14 = *(_QWORD *)((char *)&dword_10 + (*v11 & 0xFFFFFFFFFFFFFF8));
  v13 = *(_QWORD *)((char *)&dword_18 + (*v11 & 0xFFFFFFFFFFFFFF8));
  if (v14 >= v13 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
  v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
  specialized Array._endMutation()(v15);
  return swift_endAccess(v17);
}

void sub_26BA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  void **v27;
  __n128 v28;
  void *v29;
  uint64_t v30;
  id *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  char v40[24];

  v38 = type metadata accessor for HttpTemplateParameter(0);
  v1 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v0;
  v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_textFields);
  swift_beginAccess(v4, v40, 0, 0);
  v37 = *v4;
  if (!((unint64_t)v37 >> 62))
  {
    v36 = *(_QWORD *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v37);
    if (v36)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease(v37);
    v31 = (id *)(v34 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_okAction);
    *(_QWORD *)&v32 = swift_beginAccess(v34 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_okAction, v39, 0, 0).n128_u64[0];
    if (*v31)
      objc_msgSend(*v31, "setEnabled:", 1, v32);
    return;
  }
LABEL_22:
  if (v37 < 0)
    v30 = v37;
  else
    v30 = v37 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v37);
  v36 = _CocoaArrayWrapper.endIndex.getter(v30);
  if (!v36)
    goto LABEL_26;
LABEL_3:
  v5 = *(_QWORD *)(v34 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_templateAction);
  v6 = v37 & 0xC000000000000001;
  v7 = 4;
  while (1)
  {
    if (v6)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v37);
    else
      v8 = *(id *)(v37 + 8 * v7);
    v9 = v8;
    v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    v11 = HttpTemplateAction.parameters.getter();
    v12 = (unint64_t)objc_msgSend(v9, "tag");
    if ((v12 & 0x8000000000000000) != 0)
      goto LABEL_20;
    if (v12 >= *(_QWORD *)(v11 + 16))
      goto LABEL_21;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, v11+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v12, v38);
    v13 = swift_bridgeObjectRelease(v11);
    if ((HttpTemplateParameter.isRequired.getter(v13) & 1) != 0)
    {
      v14 = objc_msgSend(v9, "text");
      if (!v14)
        break;
      v15 = v14;
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v35 = v9;
      v17 = v1;
      v18 = v3;
      v19 = v16;
      v20 = v6;
      v21 = v5;
      v23 = v22;

      swift_bridgeObjectRelease(v23);
      v24 = HIBYTE(v23) & 0xF;
      v25 = v19 & 0xFFFFFFFFFFFFLL;
      v3 = v18;
      v1 = v17;
      v9 = v35;
      v26 = (v23 & 0x2000000000000000) == 0;
      v5 = v21;
      v6 = v20;
      if (v26)
        v24 = v25;
      if (!v24)
        break;
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v38);
    ++v7;
    if (v10 == v36)
      goto LABEL_26;
  }
  swift_bridgeObjectRelease(v37);
  v27 = (void **)(v34 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_okAction);
  v28 = swift_beginAccess(v34 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HttpTemplateController_okAction, v39, 32, 0);
  v29 = *v27;
  if (v29)
  {
    swift_endAccess(v39);
    objc_msgSend(v29, "setEnabled:", 0);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v38);
  }
  else
  {
    (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v38, v28);
    swift_endAccess(v39);

  }
}

void sub_26BD74(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  char v14;
  id v15;
  void *v16;
  NSString v17;
  id v18;
  uint64_t v19;

  v6 = type metadata accessor for HttpTemplateParameter(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = HttpTemplateAction.parameters.getter(v8);
  v12 = (unint64_t)objc_msgSend(a1, "tag");
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v12 >= *(_QWORD *)(v11 + 16))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v10, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v12, v6);
  v13 = swift_bridgeObjectRelease(v11);
  HttpTemplateParameter.maximumLength.getter(v13);
  if ((v14 & 1) == 0)
  {
    v15 = objc_msgSend(a1, "text");
    if (v15)
    {
      v16 = v15;
      v17 = String._bridgeToObjectiveC()();
      v18 = objc_msgSend(v16, "stringByReplacingCharactersInRange:withString:", a2, a3, v17);

      if (v18)
      {
        objc_msgSend(v18, "length");

        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        return;
      }
      goto LABEL_11;
    }
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t type metadata accessor for HttpTemplateController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews22HttpTemplateController);
}

uint64_t sub_26C0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEF70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_26C0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for HttpTemplateParameter(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_26C168(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for HttpTemplateParameter(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_26B8D4(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_62(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_62(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_26C1D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_26C1F8()
{
  sub_26B1DC();
}

void sub_26C244()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  objc_super v11;
  _OWORD v12[2];
  char v13;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  v2 = objc_msgSendSuper2(&v11, "viewDidLoad");
  dispatch thunk of BasePresenter.didLoad()(v2);
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_contentViewController];
  if (!v3)
    goto LABEL_5;
  v4 = v3;
  v5 = objc_msgSend(v1, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = v5;
  v7 = objc_msgSend(v4, "view");
  if (!v7)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v8 = v7;
  objc_msgSend(v6, "insertSubview:atIndex:", v7, 0);

LABEL_5:
  v9 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_overlayViewController];
  if (v9)
  {
    memset(v12, 0, sizeof(v12));
    v13 = 1;
    v10 = v9;
    static ViewControllerContainment.add(_:to:frame:)(v9, v1, v12);

  }
}

void sub_26C38C()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  objc_super v27;

  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v27, "viewWillLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_contentViewController];
  if (v1)
  {
    v2 = objc_msgSend(v1, "view");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v0, "view");
      if (v4)
      {
        v5 = v4;
        objc_msgSend(v4, "bounds");
        v7 = v6;
        v9 = v8;
        v11 = v10;
        v13 = v12;

        objc_msgSend(v3, "setFrame:", v7, v9, v11, v13);
        goto LABEL_5;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_5:
  v14 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_overlayViewController];
  if (!v14)
    return;
  v15 = objc_msgSend(v14, "view");
  if (!v15)
    goto LABEL_12;
  v16 = v15;
  v17 = objc_msgSend(v0, "view");
  if (!v17)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v18 = v17;
  objc_msgSend(v17, "bounds");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  objc_msgSend(v16, "setFrame:", v20, v22, v24, v26);
}

void sub_26C5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  _OWORD v15[2];
  char v16;

  v1 = v0;
  v2 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static JULoadingViewController.PresentationContext.fullCover.getter(v3);
  v6 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v7 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v5, 0);
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_overlayViewController;
  v9 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_overlayViewController);
  v10 = v9;
  static ViewControllerContainment.remove(_:)(v9);

  v11 = *(void **)(v1 + v8);
  *(_QWORD *)(v1 + v8) = v7;
  v12 = v7;

  v13 = *(void **)(v1 + v8);
  memset(v15, 0, sizeof(v15));
  v16 = 1;
  v14 = v13;
  static ViewControllerContainment.add(_:to:frame:)(v13, v1, v15);

}

void sub_26C6A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  _OWORD v8[2];
  char v9;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_overlayViewController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_overlayViewController);
  if (v2)
  {
    v3 = type metadata accessor for JULoadingViewController(0);
    if (swift_dynamicCastClass(v2, v3))
    {
      v4 = v2;
      static ViewControllerContainment.remove(_:)(v2);

      v5 = *(void **)(v0 + v1);
      *(_QWORD *)(v0 + v1) = 0;

      v6 = *(void **)(v0 + v1);
      memset(v8, 0, sizeof(v8));
      v9 = 1;
      v7 = v6;
      static ViewControllerContainment.add(_:to:frame:)(v6, v0, v8);

    }
  }
}

void sub_26C758(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  objc_class *v19;
  char *v20;
  char *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  int v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  _QWORD v55[4];
  objc_super v56;

  v2 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v2);
  v53 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FlowDestinationPageHeader(0);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  __chkstk_darwin(v4);
  v52 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FlowPresentationContext(0);
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for ErrorPresenter.ReachabilityType(0, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v15 + 104))(v18, enum case for ErrorPresenter.ReachabilityType.network(_:), v14, v16);
  v19 = (objc_class *)type metadata accessor for ErrorViewController(0);
  v20 = (char *)objc_allocWithZone(v19);
  v21 = &v20[OBJC_IVAR____TtC23ShelfKitCollectionViews19ErrorViewController_previouslySelectedTab];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews19ErrorViewController_reachabilityType], v18, v14);
  v56.receiver = v20;
  v56.super_class = v19;
  v22 = objc_msgSendSuper2(&v56, "initWithNibName:bundle:", 0, 0);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  swift_errorRetain(a1);
  v23 = objc_msgSend(v22, "view");
  if (v23)
  {
    v24 = v23;
    v25 = type metadata accessor for ErrorShieldView();
    swift_dynamicCastClassUnconditional(v24, v25, 0, 0, 0);
    ErrorPresenter.error.setter(a1);

    *v12 = v22;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FlowDestination.viewController(_:), v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v8, enum case for FlowPresentationContext.push(_:), v49);
    v26 = v22;
    v28 = static Link.Presentation.textFollowsTintColor.getter(v27);
    v29 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
    v30 = Link.Presentation.init(rawValue:)(0);
    v31 = Link.Presentation.init(rawValue:)(v30);
    if (Link.Presentation.init(rawValue:)(v31 & v28) != v28)
      v30 = Link.Presentation.init(rawValue:)(v30 | v28);
    v32 = Link.Presentation.init(rawValue:)(v30);
    if (Link.Presentation.init(rawValue:)(v32 & v29) != v29)
      v30 = Link.Presentation.init(rawValue:)(v30 | v29);
    v34 = v53;
    v33 = v54;
    v35 = v52;
    v36 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v50 + 104))(v52, enum case for FlowDestinationPageHeader.standard(_:), v51);
    static ActionMetrics.notInstrumented.getter(v36);
    v38 = type metadata accessor for FlowAction(0, v37);
    swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
    v39 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v12, 0, 0, 0, 0, v8, 1, v30, v35, v34);
    v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9E90);
    v41 = swift_allocObject(v40, 72, 7);
    *(_OWORD *)(v41 + 16) = xmmword_2F03C0;
    *(_QWORD *)(v41 + 56) = v38;
    *(_QWORD *)(v41 + 64) = sub_239FC(&qword_3D22B0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)(v41 + 32) = v39;
    swift_retain(v39);
    v42 = Link.Presentation.init(rawValue:)(0);
    LOBYTE(v38) = v42;
    static ActionMetrics.notInstrumented.getter(v42);
    v43 = type metadata accessor for TabChangeAction(0);
    swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
    LOBYTE(v46) = v38;
    v44 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, 10, v41, 0, 0, 0, 0, v46, v34);
    v45 = *(_QWORD *)&v33[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_presenter];
    v55[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEFD0);
    v55[0] = v45;
    swift_retain(v44);
    swift_retain(v45);
    sub_26CD68(v44, (uint64_t)v55, v33);

    swift_release(v44);
    swift_release(v39);
    sub_D1D4((uint64_t)v55, &qword_3D1A70);
    swift_release(v44);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for LoadingPageViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews25LoadingPageViewController);
}

uint64_t sub_26CCC4(_QWORD *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = a1[3];
  v5 = a1[4];
  v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  return sub_26D0E8((uint64_t)v6, a2, v2, v4, v5);
}

uint64_t sub_26CD10(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DEFC0, a2, (uint64_t (*)(uint64_t))type metadata accessor for LoadingPageViewController, (uint64_t)&unk_3030BC);
}

uint64_t sub_26CD3C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DEFC8, a2, (uint64_t (*)(uint64_t))type metadata accessor for LoadingPageViewController, (uint64_t)&unk_3030F4);
}

uint64_t sub_26CD68(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *boxed_opaque_existential_0;
  Swift::String v35;
  __n128 v36;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[32];
  _QWORD v41[5];
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v39 = a2;
  v5 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSLogger(0);
  v38 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetricsBehavior(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for TabChangeAction(0);
  v44 = sub_239FC((unint64_t *)&unk_3DFFE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
  v42[0] = a1;
  v15 = swift_retain(a1);
  v16 = UIResponder.nearestActionRunner.getter(v15);
  if (v16)
  {
    v18 = v16;
    v19 = v17;
    type metadata accessor for ActionRunnerOptions(0);
    v20 = swift_retain(*(_QWORD *)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_objectGraph]);
    v21 = BaseObjectGraph.__allocating_init(_:)(v20);
    v22 = objc_msgSend(a3, "view");
    sub_430E8(v39, (uint64_t)v40);
    v23 = v22;
    ActionOrigin.init(sender:view:)(v41, v40, v22);
    v24 = ActionRunnerOptions.withActionOrigin(_:)(v41);
    sub_D1D4((uint64_t)v41, (uint64_t *)&unk_3D30E0);
    swift_release(v21);

    ObjectType = swift_getObjectType();
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for ActionMetricsBehavior.fromAction(_:), v11);
    v26 = ActionRunner.perform(_:withMetrics:asPartOf:)(v42, v14, v24, ObjectType, v19);
    swift_unknownObjectRelease(v18);
    swift_release(v24);
    v27 = swift_release(v26);
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v27);
  }
  else
  {
    static OSLogger.actions.getter(0);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
    v29 = type metadata accessor for LogMessage(0);
    v30 = swift_allocObject(v28, ((*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80) | 7);
    *(_OWORD *)(v30 + 16) = xmmword_2F03C0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(44, 1);
    v31._object = (void *)0x800000000030A650;
    v31._countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    v32 = v43;
    v33 = __swift_project_boxed_opaque_existential_1(v42, v43);
    v41[3] = v32;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v41);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(boxed_opaque_existential_0, v33, v32);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v41);
    sub_D1D4((uint64_t)v41, &qword_3D1A70);
    v35._countAndFlagsBits = 0xD00000000000001ALL;
    v35._object = (void *)0x8000000000312E70;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    LogMessage.init(stringInterpolation:)(v7);
    Logger.error(_:)(v30, v8, &protocol witness table for OSLogger);
    v36 = swift_bridgeObjectRelease(v30);
    (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v10, v8, v36);
  }
  return __swift_destroy_boxed_opaque_existential_0(v42);
}

uint64_t sub_26D0E8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *boxed_opaque_existential_0;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  Swift::String v40;
  __n128 v41;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[32];
  _QWORD v46[5];
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v44 = a2;
  v9 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OSLogger(0);
  v43 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ActionMetricsBehavior(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = a4;
  v49 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v47);
  v20.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_0, a1, a4);
  v21 = UIResponder.nearestActionRunner.getter(v20);
  if (v21)
  {
    v23 = v21;
    v24 = v22;
    type metadata accessor for ActionRunnerOptions(0);
    v25 = swift_retain(*(_QWORD *)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_objectGraph]);
    v26 = BaseObjectGraph.__allocating_init(_:)(v25);
    v27 = objc_msgSend(a3, "view");
    sub_430E8(v44, (uint64_t)v45);
    v28 = v27;
    ActionOrigin.init(sender:view:)(v46, v45, v27);
    v29 = ActionRunnerOptions.withActionOrigin(_:)(v46);
    sub_D1D4((uint64_t)v46, (uint64_t *)&unk_3D30E0);
    swift_release(v26);

    ObjectType = swift_getObjectType();
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for ActionMetricsBehavior.fromAction(_:), v15);
    v31 = ActionRunner.perform(_:withMetrics:asPartOf:)(v47, v18, v29, ObjectType, v24);
    swift_unknownObjectRelease(v23);
    swift_release(v29);
    v32 = swift_release(v31);
    (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v32);
  }
  else
  {
    static OSLogger.actions.getter(0);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
    v34 = type metadata accessor for LogMessage(0);
    v35 = swift_allocObject(v33, ((*(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v34 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80) | 7);
    *(_OWORD *)(v35 + 16) = xmmword_2F03C0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(44, 1);
    v36._object = (void *)0x800000000030A650;
    v36._countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    v37 = v48;
    v38 = __swift_project_boxed_opaque_existential_1(v47, v48);
    v46[3] = v37;
    v39 = __swift_allocate_boxed_opaque_existential_0(v46);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v39, v38, v37);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v46);
    sub_D1D4((uint64_t)v46, &qword_3D1A70);
    v40._countAndFlagsBits = 0xD00000000000001ALL;
    v40._object = (void *)0x8000000000312E70;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    LogMessage.init(stringInterpolation:)(v11);
    Logger.error(_:)(v35, v12, &protocol witness table for OSLogger);
    v41 = swift_bridgeObjectRelease(v35);
    (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v14, v12, v41);
  }
  return __swift_destroy_boxed_opaque_existential_0(v47);
}

char *sub_26D454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  objc_class *ObjectType;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;

  v6 = v5;
  v26 = a5;
  ObjectType = (objc_class *)swift_getObjectType();
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_contentViewController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_overlayViewController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_objectGraph] = a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a2, v12, v14);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DEFD0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  swift_retain_n(a1, 2);
  v18 = v6;
  *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_presenter] = LoadingPagePresenter.init(asPartOf:pageURL:isIncomingURL:)(a1, v16, a3);

  v27.receiver = v18;
  v27.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v27, "initWithNibName:bundle:", 0, 0);
  v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_presenter];
  v21 = v19;
  v22 = swift_retain(v20);
  dispatch thunk of BasePresenter.referrer.setter(a4, v26, v22);
  swift_release(v20);
  v23 = v21;
  dispatch thunk of BasePresenter.view.setter(v21);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  return v23;
}

void sub_26D5F4()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_contentViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25LoadingPageViewController_overlayViewController] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/LoadingPageViewController.swift", 55, 2, 49, 0);
  __break(1u);
}

uint64_t sub_26D688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v10;
  __int128 v12;
  __int128 v13;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, __n128))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v13 + 1) = swift_getObjectType();
    *(_QWORD *)&v12 = a2;
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  v10 = swift_unknownObjectRetain(a2);
  v9(&v12, a3, a4, a5, v10);
  return sub_1FE78((uint64_t)&v12);
}

void sub_26D710(uint64_t a1, void *a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v19;
  void (*v20)(double, double, double, double, double, double, double, double);
  id v21;

  v20 = *(void (**)(double, double, double, double, double, double, double, double))(a1 + 32);
  v19 = *(_QWORD *)(a1 + 40);
  swift_retain(v19);
  v21 = a2;
  v20(a3, a4, a5, a6, a7, a8, a9, a10);
  swift_release(v19);

}

void sub_26D7E4()
{
  qword_3DEFD8 = 0x3FF0000000000000;
}

BOOL sub_26D7F4(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  __n128 v14;
  unsigned __int8 *v15;
  int v16;
  __n128 v17;
  _QWORD v18[5];
  _QWORD v19[3];
  char v20;
  uint64_t v21;

  if ((a3 & 1) != 0)
    return 0;
  if (*(_QWORD *)(a1 + 16))
  {
    v4 = sub_36BA4(0x6D617473656D6974, 0xE900000000000070);
    if ((v5 & 1) != 0)
    {
      v6 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      v21 = 0;
      __chkstk_darwin(v4);
      v18[2] = &v21;
      if ((v7 & 0x1000000000000000) != 0 || !(v7 & 0x2000000000000000 | v8 & 0x1000000000000000))
      {
        v17 = swift_bridgeObjectRetain(v7);
        _StringGuts._slowWithCString<A>(_:)(&v20, sub_270AC8, v18, v8, v7, &type metadata for Bool, v17);
        swift_bridgeObjectRelease(v7);
        return (v20 & 1) != 0;
      }
      if ((v7 & 0x2000000000000000) == 0)
      {
        if ((v8 & 0x1000000000000000) != 0)
        {
          v9 = (v7 & 0xFFFFFFFFFFFFFFFLL) + 32;
          swift_bridgeObjectRetain(v7);
        }
        else
        {
          v9 = _StringObject.sharedUTF8.getter(v8, v7);
          swift_bridgeObjectRetain(v7);
          if (!v9)
          {
            v10 = 0;
LABEL_10:
            sub_270AC8(v10, (BOOL *)v19);
            v11 = LOBYTE(v19[0]);
            swift_bridgeObjectRelease(v7);
            return v11 != 0;
          }
        }
        v10 = (_BYTE *)v9;
        goto LABEL_10;
      }
      v19[0] = v8;
      v19[1] = v7 & 0xFFFFFFFFFFFFFFLL;
      if (v8 > 0x20u || ((1 << v8) & 0x100003E01) == 0)
      {
        v14 = swift_bridgeObjectRetain(v7);
        v15 = (unsigned __int8 *)_swift_stdlib_strtod_clocale(v19, &v21, v14);
        if (v15)
        {
          v16 = *v15;
          swift_bridgeObjectRelease(v7);
          return !v16;
        }
      }
      else
      {
        swift_bridgeObjectRetain(v7);
      }
      swift_bridgeObjectRelease(v7);
    }
  }
  return 0;
}

double sub_26D9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  uint64_t v11;
  id v12;
  id v13;
  void (*v14)(_BYTE *, __n128);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons);
  if ((unint64_t)v1 >> 62)
    goto LABEL_33;
  v2 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons));
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_active;
    v4 = 4;
    while (1)
    {
      v5 = (v1 & 0xC000000000000001) != 0
         ? (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v1)
         : *(id *)(v1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_labelActive;
      v5[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_labelActive] = *(_BYTE *)(v19 + v3);
      if (objc_msgSend(v5, "isUserInteractionEnabled"))
      {
        if ((objc_msgSend(v6, "isHighlighted") & 1) != 0)
        {
          v9 = 4;
        }
        else if (v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_isHovering] == 1)
        {
          v9 = 3;
        }
        else if (v6[v8])
        {
          v9 = 2;
        }
        else
        {
          v9 = 1;
        }
      }
      else
      {
        v9 = 0;
      }
      v10 = v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_style];
      v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_style] = v9;
      if (v10 != v9)
      {
        v11 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
        if ((static UITraitCollection.interfaceIdiomIsMac.getter(v11) & 1) != 0)
          __asm { BR              X9 }
        if (v9)
        {
          if (v9 == 4)
          {
            if (qword_3CEFE8 != -1)
              swift_once(&qword_3CEFE8, sub_DF80);
            v12 = objc_msgSend((id)qword_3D0890, "colorWithAlphaComponent:", 0.5);
          }
          else
          {
            if (qword_3CEFE8 != -1)
              swift_once(&qword_3CEFE8, sub_DF80);
            v12 = objc_msgSend((id)qword_3D0890, "colorWithAlphaComponent:", 0.15);
          }
        }
        else
        {
          v12 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
        }
        v13 = v12;
        objc_msgSend(v6, "setBackgroundColor:", v13);

        v14 = *(void (**)(_BYTE *, __n128))&v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_styleDidChange];
        if (v14)
        {
          v15 = *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_styleDidChange
                             + 8];
          v16 = swift_retain(v15);
          v14(v6, v16);
          sub_1D618((uint64_t)v14, v15);
        }
      }

      ++v4;
      if (v7 == v2)
        goto LABEL_37;
    }
    __break(1u);
LABEL_33:
    if (v1 < 0)
      v17 = v1;
    else
      v17 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
  }
LABEL_37:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
  return result;
}

id sub_26DE24(__int128 *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  objc_super v28;
  _OWORD v29[5];
  uint64_t v30;
  char v31;
  char v32;

  v26 = a1[1];
  v27 = *a1;
  v24 = a1[3];
  v25 = a1[2];
  v23 = a1[4];
  v6 = *((_QWORD *)a1 + 10);
  v7 = *((_BYTE *)a1 + 88);
  v8 = *((_BYTE *)a1 + 89);
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_active] = 0;
  v9 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markInteractionValidation];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markTriggered];
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_labelTextColor] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_marks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons] = _swiftEmptyArrayStorage;
  type metadata accessor for DynamicTypeTextView();
  v29[0] = v27;
  v29[1] = v26;
  v29[2] = v25;
  v29[3] = v24;
  v29[4] = v23;
  v30 = v6;
  v31 = v7;
  v32 = v8;
  v11 = v3;
  v12 = sub_D32C((uint64_t)v29);
  objc_msgSend(v12, "setSelectable:", 0);
  objc_msgSend(v12, "setEditable:", 0);
  objc_msgSend(v12, "setScrollEnabled:", 0);
  objc_msgSend(v12, "setUserInteractionEnabled:", 0);
  v13 = (void *)objc_opt_self(UIColor);
  v14 = v12;
  v15 = objc_msgSend(v13, "clearColor");
  objc_msgSend(v14, "setBackgroundColor:", v15);

  v16 = objc_msgSend(v14, "textContainer");
  objc_msgSend(v16, "setLineBreakMode:", a3);

  v17 = v14;
  v18 = objc_msgSend(v17, "textContainer");
  objc_msgSend(v18, "setMaximumNumberOfLines:", a2);

  objc_msgSend(v17, "setTextContainerInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v19 = objc_msgSend(v17, "textContainer");
  objc_msgSend(v19, "setLineFragmentPadding:", 0.0);

  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_textView] = v17;
  v20 = v17;

  v28.receiver = v11;
  v28.super_class = (Class)type metadata accessor for MarkedLabel();
  v21 = objc_msgSendSuper2(&v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v21, "addSubview:", v20);

  return v21;
}

void sub_26E104(void *a1, double a2)
{
  char *v2;
  char *v3;
  id v4;
  id v5;
  __n128 v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t v19;
  id v20;
  __n128 v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  _QWORD *(*v31)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  void **aBlock;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;
  id v43;
  _QWORD *v44;

  v3 = v2;
  v4 = a1;
  v44 = _swiftEmptyArrayStorage;
  if (!a1)
  {
    v31 = 0;
    v12 = 0;
    v26 = 0;
    v24 = 0;
    v29 = 0;
    goto LABEL_8;
  }
  v4 = a1;
  v5 = objc_msgSend(v4, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(&aBlock, v5, v6);
  swift_unknownObjectRelease(v5);
  v7 = sub_E710(0, (unint64_t *)&qword_3D46A8, NSMutableAttributedString_ptr);
  if ((swift_dynamicCast(&v43, &aBlock, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
  {
    v31 = 0;
    v12 = 0;
    v26 = 0;
    v24 = 0;
    v29 = v4;
    goto LABEL_8;
  }
  v8 = v43;

  v9 = objc_msgSend(v8, "fullRange");
  v11 = v10;
  v12 = swift_allocObject(&unk_38E870, 32, 7);
  *(_QWORD *)(v12 + 16) = v3;
  *(_QWORD *)(v12 + 24) = v8;
  v13 = swift_allocObject(&unk_38E898, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_270268;
  *(_QWORD *)(v13 + 24) = v12;
  v41 = sub_43A64;
  v42 = v13;
  aBlock = _NSConcreteStackBlock;
  v38 = 1107296256;
  v39 = sub_26D688;
  v40 = &block_descriptor_13_4;
  v14 = _Block_copy(&aBlock);
  v15 = v42;
  v16 = v8;
  v17 = v3;
  swift_retain(v13);
  objc_msgSend(v16, "enumerateAttribute:inRange:options:usingBlock:", NSForegroundColorAttributeName, v9, v11, 0, v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 123, 135, 98, 1);
  swift_release(v13);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v19 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
    static UITraitCollection.interfaceIdiomIsMac.getter(v19);
    v20 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    v36 = (void *)static NSAttributedStringKey.marked.getter(v21);
    v22 = objc_msgSend(v16, "fullRange");
    v34 = v23;
    v35 = v22;
    v24 = (_QWORD *)swift_allocObject(&unk_38E8E8, 40, 7);
    v24[2] = &v44;
    v24[3] = v16;
    v24[4] = v20;
    v25 = swift_allocObject(&unk_38E910, 32, 7);
    v26 = sub_2702E8;
    *(_QWORD *)(v25 + 16) = sub_2702E8;
    *(_QWORD *)(v25 + 24) = v24;
    v41 = sub_43A64;
    v42 = v25;
    aBlock = _NSConcreteStackBlock;
    v38 = 1107296256;
    v39 = sub_26D688;
    v40 = &block_descriptor_23_0;
    v27 = _Block_copy(&aBlock);
    v28 = v42;
    v29 = v16;
    v30 = v20;
    swift_retain(v25);
    objc_msgSend(v29, "enumerateAttribute:inRange:options:usingBlock:", v36, v35, v34, 0, v27, swift_release(v28).n128_f64[0]);

    _Block_release(v27);
    LOBYTE(v28) = swift_isEscapingClosureAtFileLocation(v25, "", 123, 145, 89, 1);
    *(_QWORD *)&a2 = swift_release(v25).n128_u64[0];
    if ((v28 & 1) == 0)
    {
      v31 = sub_270268;
LABEL_8:
      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_textView], "setAttributedText:", v29, a2);
      v32 = v44;
      v33 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_marks];
      *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_marks] = v44;
      swift_bridgeObjectRetain(v32);
      objc_msgSend(v3, "setNeedsLayout", swift_bridgeObjectRelease(v33).n128_f64[0]);

      swift_bridgeObjectRelease(v44);
      sub_1D618((uint64_t)v31, v12);
      sub_1D618((uint64_t)v26, (uint64_t)v24);
      return;
    }
  }
  __break(1u);
}

id sub_26E520(unsigned __int8 a1)
{
  int v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = a1;
  v2 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v2) & 1) != 0)
  {
    v3 = (void *)objc_opt_self(UIColor);
    if ((v1 - 3) > 1)
      v4 = objc_msgSend(v3, "labelColor");
    else
      v4 = objc_msgSend(v3, "whiteColor");
    return v4;
  }
  if (!v1)
  {
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    return v4;
  }
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  return (id)qword_3D0890;
}

uint64_t sub_26E5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, void *a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[2];

  sub_430E8(a1, (uint64_t)&v21);
  if (!v22)
    return sub_1FE78((uint64_t)&v21);
  sub_1D65C(&v21, v23);
  sub_1D66C((uint64_t)v23, (uint64_t)&v21);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF0A0);
  if ((swift_dynamicCast(&v20, &v21, (char *)&type metadata for Any + 8, v12, 6) & 1) != 0)
  {
    v13 = v20;
    v14 = (_QWORD *)*a5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a5);
    *a5 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_20FF18(0, v14[2] + 1, 1, v14);
      *a5 = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_20FF18((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *a5 = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[3 * v17];
    v18[4] = a2;
    v18[5] = a3;
    v18[6] = v13;
    objc_msgSend(a6, "addAttribute:value:range:", NSForegroundColorAttributeName, a7, a2, a3);
  }
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

void sub_26E768(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_26E874(a1);

  }
}

void sub_26E874(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  id v11;
  __C::_NSRange v12;
  Swift::Int location;
  Swift::Int length;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  _QWORD aBlock[5];
  uint64_t v24;
  id v25;
  __C::_NSRange_optional v26;

  v2 = v1;
  v4 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v4) & 1) != 0)
  {
    v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_textView;
    v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_textView), "attributedText"));
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, "mutableCopy");

      _bridgeAnyObjectToAny(_:)(aBlock, v8, v9);
      swift_unknownObjectRelease(v8);
      v10 = sub_E710(0, (unint64_t *)&qword_3D46A8, NSMutableAttributedString_ptr);
      if ((swift_dynamicCast(&v25, aBlock, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
      {
        v11 = v25;
        v12.location = (Swift::Int)objc_msgSend(v25, "fullRange");
        v26 = _NSRange.intersection(_:)(v12);
        if (v26.is_nil)
        {

        }
        else
        {
          location = v26.value.location;
          length = v26.value.length;
          v15 = sub_26E520(*(_BYTE *)(a1
                                    + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_style));
          LOBYTE(v25) = 0;
          v16 = (_QWORD *)swift_allocObject(&unk_38E7F8, 40, 7);
          v16[2] = v15;
          v16[3] = v11;
          v16[4] = &v25;
          v17 = swift_allocObject(&unk_38E820, 32, 7);
          *(_QWORD *)(v17 + 16) = sub_270208;
          *(_QWORD *)(v17 + 24) = v16;
          aBlock[4] = sub_43920;
          v24 = v17;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_26D688;
          aBlock[3] = &block_descriptor_63;
          v18 = _Block_copy(aBlock);
          v19 = v24;
          v20 = v15;
          v21 = v11;
          swift_retain(v17);
          objc_msgSend(v21, "enumerateAttribute:inRange:options:usingBlock:", NSForegroundColorAttributeName, location, length, 0, v18, swift_release(v19).n128_f64[0]);
          _Block_release(v18);
          LOBYTE(location) = swift_isEscapingClosureAtFileLocation(v17, "", 123, 202, 78, 1);
          swift_release(v17);
          if ((location & 1) != 0)
          {
            __break(1u);
          }
          else
          {
            if (v25 == 1)
            {
              v22 = *(id *)(v2 + v5);
              objc_msgSend(v22, "setAttributedText:", v21);
              swift_release(v16);

            }
            else
            {
              swift_release(v16);
            }

          }
        }
      }
    }
  }
}

void sub_26EB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _BYTE *a7)
{
  uint64_t v12;
  void *v13;
  char v14;
  void *v15;
  _BYTE v16[24];
  uint64_t v17;

  sub_430E8(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_1FE78((uint64_t)v16);
LABEL_6:
    objc_msgSend(a6, "addAttribute:value:range:", NSForegroundColorAttributeName, a5, a2, a3);
    *a7 = 1;
    return;
  }
  v12 = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  if ((swift_dynamicCast(&v15, v16, (char *)&type metadata for Any + 8, v12, 6) & 1) == 0)
    goto LABEL_6;
  v13 = v15;
  sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
  v14 = static NSObject.== infix(_:_:)(v13, a5);

  if ((v14 & 1) == 0)
    goto LABEL_6;
}

void sub_26EC3C()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;
  char v34[24];
  _QWORD aBlock[5];
  _QWORD *v36;
  objc_super v37;

  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for MarkedLabel();
  objc_msgSendSuper2(&v37, "layoutSubviews");
  v1 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_textView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v30 = swift_allocObject(&unk_38E960, 24, 7);
  *(_QWORD *)(v30 + 16) = _swiftEmptyArrayStorage;
  v2 = swift_allocObject(&unk_38E960, 24, 7);
  v28 = OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons];
  v29 = v2;
  *(_QWORD *)(v2 + 16) = v3;
  v4 = (uint64_t *)(v2 + 16);
  v31 = v0;
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_marks];
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v5);
    v7 = (uint64_t *)(v5 + 48);
    do
    {
      v9 = *(v7 - 2);
      v8 = *(v7 - 1);
      v10 = *v7;
      v7 += 3;
      v11 = objc_msgSend(v1, "layoutManager", swift_bridgeObjectRetain(v10).n128_f64[0]);
      v32 = objc_msgSend(v11, "glyphRangeForCharacterRange:actualCharacterRange:", v9, v8, 0);
      v33 = v12;
      v13 = v12;

      v14 = objc_msgSend(v1, "layoutManager");
      v15 = (_QWORD *)swift_allocObject(&unk_38E988, 88, 7);
      v15[2] = v32;
      v15[3] = v13;
      v15[4] = v31;
      v15[5] = v1;
      v15[6] = v30;
      v15[7] = v29;
      v15[8] = v9;
      v15[9] = v8;
      v15[10] = v10;
      aBlock[4] = sub_27036C;
      v36 = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_26D710;
      aBlock[3] = &block_descriptor_33_2;
      v16 = _Block_copy(aBlock);
      v17 = v36;
      v18 = v1;
      v19 = v31;
      swift_retain(v30);
      swift_retain(v29);
      objc_msgSend(v14, "enumerateLineFragmentsForGlyphRange:usingBlock:", v32, v33, v16, swift_release(v17).n128_f64[0]);
      _Block_release(v16);

      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    swift_bridgeObjectRetain(v3);
  }
  swift_beginAccess(v4, aBlock, 0, 0);
  v20 = *v4;
  if ((unint64_t)*v4 >> 62)
  {
    if (v20 < 0)
      v27 = *v4;
    else
      v27 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v4);
    v21 = _CocoaArrayWrapper.endIndex.getter(v27);
  }
  else
  {
    v21 = *(_QWORD *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(*v4);
  }
  if (!v21)
    goto LABEL_15;
  if (v21 >= 1)
  {
    for (i = 0; i != v21; ++i)
    {
      if ((v20 & 0xC000000000000001) != 0)
        v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v20);
      else
        v23 = *(id *)(v20 + 8 * i + 32);
      v24 = v23;
      objc_msgSend(v23, "removeFromSuperview");

    }
LABEL_15:
    swift_bridgeObjectRelease(v20);
    swift_beginAccess(v30 + 16, v34, 0, 0);
    v25 = *(_QWORD *)(v30 + 16);
    v26 = *(_QWORD *)&v31[v28];
    *(_QWORD *)&v31[v28] = v25;
    swift_bridgeObjectRetain(v25);

    swift_release(v30);
    swift_release(v29);
    swift_bridgeObjectRelease(v26);
    return;
  }
  __break(1u);
}

void sub_26EFA0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  _QWORD aBlock[5];
  uint64_t v56;

  v21 = a2 + a3;
  if (__OFADD__(a2, a3))
  {
    __break(1u);
    goto LABEL_17;
  }
  v22 = a13;
  v23 = a13 + a14;
  if (__OFADD__(a13, a14))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v21 >= v23)
    v31 = a13 + a14;
  else
    v31 = a2 + a3;
  if (a2 >= a13 && v23 > a2)
  {
    v32 = v31 - a2;
    if (!__OFSUB__(v31, a2))
    {
      v22 = a2;
      goto LABEL_13;
    }
    goto LABEL_18;
  }
  if (a13 >= a2 && v21 > a13)
  {
    v32 = v31 - a13;
    if (!__OFSUB__(v31, a13))
    {
LABEL_13:
      v33 = objc_msgSend(*(id *)&a15[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_textView], "attributedText");
      if (v33)
      {
        v34 = v33;
        v54 = a1;
        v35 = objc_msgSend(a16, "layoutManager");
        v36 = objc_msgSend(v35, "characterRangeForGlyphRange:actualGlyphRange:", v22, v32, 0);
        v38 = v37;

        v39 = sub_2707C0(v34, (uint64_t)v36, v38);
        v41 = v40;
        v42 = objc_msgSend(a16, "layoutManager");
        v43 = objc_msgSend(v42, "glyphRangeForCharacterRange:actualCharacterRange:", v39, v41, 0);
        v52 = v44;
        v53 = v43;

        v45 = objc_msgSend(a16, "layoutManager");
        v46 = NSNotFound.getter();
        v47 = swift_allocObject(&unk_38E9D8, 120, 7);
        *(double *)(v47 + 16) = a8;
        *(double *)(v47 + 24) = a9;
        *(double *)(v47 + 32) = a10;
        *(double *)(v47 + 40) = a11;
        *(_QWORD *)(v47 + 48) = a17;
        *(_QWORD *)(v47 + 56) = a18;
        *(_QWORD *)(v47 + 64) = a15;
        *(_QWORD *)(v47 + 72) = a19;
        *(_QWORD *)(v47 + 80) = a20;
        *(_QWORD *)(v47 + 88) = a21;
        *(_QWORD *)(v47 + 96) = a16;
        *(_QWORD *)(v47 + 104) = v22;
        *(_QWORD *)(v47 + 112) = v32;
        aBlock[4] = sub_270A14;
        v56 = v47;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_26F6E4;
        aBlock[3] = &block_descriptor_39;
        v48 = _Block_copy(aBlock);
        v49 = v56;
        swift_retain(a17);
        swift_retain(a18);
        v50 = a15;
        swift_bridgeObjectRetain(a21);
        v51 = a16;
        objc_msgSend(v45, "enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:", v53, v52, v46, 0, v54, v48, swift_release(v49).n128_f64[0]);
        _Block_release(v48);

      }
      return;
    }
LABEL_19:
    __break(1u);
  }
}

void sub_26F24C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, _BYTE *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18)
{
  uint64_t *v24;
  double x;
  CGFloat y;
  double width;
  CGFloat height;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  double MaxY;
  double MaxX;
  double MinX;
  uint64_t v41;
  _BYTE *v42;
  id v43;
  uint64_t v44;
  void (**v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t (*v56)(__n128);
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  char v60;
  _BYTE *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _BYTE v65[24];
  char v66[24];
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;

  v24 = (uint64_t *)(a10 + 16);
  v67 = CGRectIntersection(*(CGRect *)&a1, *(CGRect *)&a5);
  x = v67.origin.x;
  y = v67.origin.y;
  width = v67.size.width;
  height = v67.size.height;
  if (qword_3CFC80 != -1)
    swift_once(&qword_3CFC80, sub_26D7E4);
  v68.origin.x = x - *(double *)&qword_3DEFD8;
  v68.size.width = width + *(double *)&qword_3DEFD8 + *(double *)&qword_3DEFD8;
  v68.origin.y = y;
  v68.size.height = height;
  v69 = CGRectIntegral(v68);
  v29 = v69.origin.x;
  v30 = v69.origin.y;
  v31 = v69.size.width;
  v32 = v69.size.height;
  swift_beginAccess(v24, v66, 0, 0);
  v33 = *v24;
  if (!((unint64_t)*v24 >> 62))
  {
    v34 = *(_QWORD *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(*v24);
    if (v34)
      goto LABEL_5;
LABEL_18:
    swift_bridgeObjectRelease(v33);
    goto LABEL_19;
  }
  if (v33 < 0)
    v41 = *v24;
  else
    v41 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v24);
  v34 = _CocoaArrayWrapper.endIndex.getter(v41);
  if (!v34)
    goto LABEL_18;
LABEL_5:
  v35 = v34 - 1;
  if (__OFSUB__(v34, 1))
  {
    __break(1u);
  }
  else if ((v33 & 0xC000000000000001) == 0)
  {
    if ((v35 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v35 < *(_QWORD *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFF8)))
    {
      v36 = *(id *)(v33 + 8 * v35 + 32);
      goto LABEL_10;
    }
    __break(1u);
    return;
  }
  v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v33);
LABEL_10:
  v37 = v36;
  objc_msgSend(v36, "frame", swift_bridgeObjectRelease(v33).n128_f64[0]);
  MaxY = CGRectGetMaxY(v70);
  v71.origin.x = v29;
  v71.origin.y = v30;
  v71.size.width = v31;
  v71.size.height = v32;
  if (vabdd_f64(MaxY, CGRectGetMaxY(v71)) >= 3.0)
  {

  }
  else
  {
    objc_msgSend(v37, "frame");
    MaxX = CGRectGetMaxX(v72);
    v73.origin.x = v29;
    v73.origin.y = v30;
    v73.size.width = v31;
    v73.size.height = v32;
    MinX = CGRectGetMinX(v73);

    if (MinX < MaxX)
      return;
  }
LABEL_19:
  swift_beginAccess(a11 + 16, v65, 33, 0);
  v42 = (_BYTE *)sub_8F5CC();
  swift_endAccess(v65);
  if (!v42)
  {
    v43 = objc_allocWithZone((Class)type metadata accessor for MarkButton());
    swift_bridgeObjectRetain(a15);
    v42 = sub_26F8A8(a13, a14, a15);
    v42[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_labelActive] = a12[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_active];
    sub_26FE38();
    objc_msgSend(v42, "addTarget:action:forControlEvents:", a12, "buttonTriggeredWithButton:", 64);
    v44 = swift_allocObject(&unk_38EA28, 24, 7);
    swift_unknownObjectWeakInit(v44 + 16, a12);
    v45 = (void (**)(uint64_t))&v42[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_styleDidChange];
    v46 = *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_styleDidChange];
    v47 = *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_styleDidChange
                        + 8];
    *v45 = sub_270A74;
    v45[1] = (void (*)(uint64_t))v44;
    sub_1D618(v46, v47);
  }
  objc_msgSend(v42, "setFrame:", v29, v30, v31, v32);
  v48 = objc_msgSend(v42, "superview");

  if (!v48)
    objc_msgSend(a12, "insertSubview:atIndex:", v42, 0);
  v49 = objc_msgSend(a16, "layoutManager");
  v50 = objc_msgSend(v49, "characterRangeForGlyphRange:actualGlyphRange:", a17, a18, 0);
  v52 = v51;

  v53 = &v42[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_mark];
  v54 = *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_mark
                      + 16];
  *v53 = v50;
  v53[1] = v52;
  v53[2] = a15;
  swift_bridgeObjectRetain(a15);
  swift_bridgeObjectRelease(v54);
  v55 = &a12[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markInteractionValidation];
  v56 = *(uint64_t (**)(__n128))&a12[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markInteractionValidation];
  if (v56)
  {
    v57 = *((_QWORD *)v55 + 1);
    v58 = v53[2];
    sub_2C690((uint64_t)v56, v57);
    v59 = swift_bridgeObjectRetain(v58);
    v60 = v56(v59);
    swift_bridgeObjectRelease(v58);
    sub_1D618((uint64_t)v56, v57);
  }
  else
  {
    v60 = 1;
  }
  objc_msgSend(v42, "setUserInteractionEnabled:", v60 & 1);
  swift_beginAccess(v24, v65, 33, 0);
  v61 = v42;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
  v63 = *(_QWORD *)((char *)&dword_10 + (*v24 & 0xFFFFFFFFFFFFFF8));
  v62 = *(_QWORD *)((char *)&dword_18 + (*v24 & 0xFFFFFFFFFFFFFF8));
  if (v63 >= v62 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1);
  v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v61);
  specialized Array._endMutation()(v64);
  swift_endAccess(v65);

}

uint64_t sub_26F6E4(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  void (*v12)(uint64_t, double, double, double, double);

  v12 = *(void (**)(uint64_t, double, double, double, double))(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  swift_retain(v11);
  v12(a2, a3, a4, a5, a6);
  return swift_release(v11);
}

id sub_26F7AC(uint64_t a1)
{
  return sub_1E63D4(a1, type metadata accessor for MarkedLabel);
}

uint64_t type metadata accessor for MarkedLabel()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews11MarkedLabel);
}

void *sub_26F858()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_textView);
  v2 = v1;
  return v1;
}

void sub_26F890(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_labelTextColor);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_labelTextColor) = a1;

}

id sub_26F8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v4;
  _QWORD *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v4 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_styleDidChange];
  *v4 = 0;
  v4[1] = 0;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_labelActive] = 0;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_style] = 0;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_animateHoverChanges] = 0;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_isHovering] = 0;
  v5 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_mark];
  *v5 = a1;
  v5[1] = a2;
  v5[2] = a3;
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for MarkButton();
  v6 = objc_msgSendSuper2(&v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_B1130();
  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v7 = v6;
  static UITraitCollection.interfaceIdiomIsMac.getter(v7);
  v8 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v7, "setBackgroundColor:", v8);

  v9 = v7;
  objc_msgSend(v9, "_setCornerRadius:", 0.0);
  objc_msgSend(v9, "_setContinuousCornerRadius:", 3.0);
  objc_msgSend(v9, "setClipsToBounds:", 1);

  return v9;
}

id sub_26FA14(char a1)
{
  uint64_t v2;
  id v3;

  v2 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v2) & 1) != 0)
    __asm { BR              X10 }
  if (a1 == 4)
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v3 = objc_msgSend((id)qword_3D0890, "colorWithAlphaComponent:", 0.5);
  }
  else if (a1)
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v3 = objc_msgSend((id)qword_3D0890, "colorWithAlphaComponent:", 0.15);
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  return v3;
}

id sub_26FD84(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MarkButton();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_26FDD0(void *a1, uint64_t a2, uint64_t a3, const char **a4)
{
  const char *v6;
  id v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)type metadata accessor for MarkButton();
  v6 = *a4;
  v7 = v8.receiver;
  objc_msgSendSuper2(&v8, v6, a3);
  sub_26FE38();

}

void sub_26FE38()
{
  unsigned __int8 *v0;
  unsigned int v1;
  int v2;
  id v3;
  void (*v4)(unsigned __int8 *, __n128);
  uint64_t v5;
  __n128 v6;

  v1 = objc_msgSend(v0, "isUserInteractionEnabled");
  if (v1)
  {
    if ((objc_msgSend(v0, "isHighlighted") & 1) != 0)
    {
      LOBYTE(v1) = 4;
    }
    else if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_isHovering] & 1) != 0)
    {
      LOBYTE(v1) = 3;
    }
    else if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_labelActive])
    {
      LOBYTE(v1) = 2;
    }
    else
    {
      LOBYTE(v1) = 1;
    }
  }
  v2 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_style];
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_style] = v1;
  if (v2 != v1)
  {
    v3 = sub_26FA14(v1);
    objc_msgSend(v0, "setBackgroundColor:", v3);

    v4 = *(void (**)(unsigned __int8 *, __n128))&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_styleDidChange];
    if (v4)
    {
      v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_styleDidChange
                        + 8];
      v6 = swift_retain(v5);
      v4(v0, v6);
      sub_1D618((uint64_t)v4, v5);
    }
  }
}

void sub_26FF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _swift_stdlib_reportUnimplementedInitializer(a3, a4, "init(frame:)", 12, 0);
  __break(1u);
}

id sub_26FF6C()
{
  return sub_1E63D4(0, type metadata accessor for MarkButton);
}

uint64_t type metadata accessor for MarkButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton);
}

uint64_t storeEnumTagSinglePayload for MarkButton.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_270028 + 4 * byte_303155[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_27005C + 4 * byte_303150[v4]))();
}

uint64_t sub_27005C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_270064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x27006CLL);
  return result;
}

uint64_t sub_270078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x270080);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_270084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_27008C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MarkButton.Style()
{
  return &type metadata for MarkButton.Style;
}

uint64_t initializeBufferWithCopyOfBuffer for Mark(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

double destroy for Mark(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16)).n128_u64[0];
  return result;
}

_QWORD *assignWithCopy for Mark(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a2[2];
  v4 = a1[2];
  a1[2] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for Mark(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for Mark()
{
  return &type metadata for Mark;
}

unint64_t sub_270178()
{
  unint64_t result;

  result = qword_3DF098;
  if (!qword_3DF098)
  {
    result = swift_getWitnessTable(&unk_3031DC, &type metadata for MarkButton.Style);
    atomic_store(result, (unint64_t *)&qword_3DF098);
  }
  return result;
}

uint64_t sub_2701BC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_isHovering);
}

void sub_2701CC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_isHovering) = a1;
  sub_26FE38();
}

uint64_t sub_2701DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_270208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_26EB30(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24), *(_BYTE **)(v4 + 32));
}

uint64_t sub_270214()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double block_copy_helper_63(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_63(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_27023C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_270268(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (!result[3])
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_labelTextColor);
    if (v4)
      return objc_msgSend(*(id *)(v3 + 24), "addAttribute:value:range:", NSForegroundColorAttributeName, v4, a2, a3);
  }
  return result;
}

uint64_t sub_2702AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2702BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_2702E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_26E5FC(a1, a2, a3, a4, *(_QWORD **)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(v4 + 32));
}

uint64_t sub_2702F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_270304()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_270328()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

void sub_27036C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  uint64_t v12;

  sub_26EFA0(a1, a2, a3, a5, a6, a7, a8, a9, a10, a11, a12, a4, *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(char **)(v12 + 32), *(void **)(v12 + 40), *(_QWORD *)(v12 + 48), *(_QWORD *)(v12 + 56), *(_QWORD *)(v12 + 64),
    *(_QWORD *)(v12 + 72),
    *(_QWORD *)(v12 + 80));
}

uint64_t sub_2703A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

unint64_t sub_270418(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v13;
  _QWORD v14[2];

  v2 = HIBYTE(a2) & 0xF;
  v3 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    v7 = sub_2704F4(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v11 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v7 & 0xFFFFFFFFFFFF0000, a1, a2);
    }
    else
    {
      v8 = v7 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        v14[0] = a1;
        v14[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        v9 = v14;
        v10 = v2;
      }
      else
      {
        if ((a1 & 0x1000000000000000) != 0)
        {
          v9 = (_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else
        {
          v9 = (_QWORD *)_StringObject.sharedUTF8.getter(a1, a2);
          v3 = v13;
        }
        v10 = v3;
      }
      v11 = _decodeScalar(_:startingAt:)(v9, v10, v8);
    }
  }
  else
  {
    v11 = 0;
  }
  LOBYTE(v14[0]) = v4 == 0;
  return v11 | ((unint64_t)(v4 == 0) << 32);
}

unint64_t sub_2704F4(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_270590(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_2705FC(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_270590(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_2703A0(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_2705FC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v7 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL))
          goto LABEL_14;
      }
      else
      {
        v12 = result >> 16;
        v6 = _StringObject.sharedUTF8.getter(a2, a3);
        v5 = v12;
        if (v12 == v10)
          goto LABEL_14;
      }
      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          v7 = v5 - 1;
          v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      v7 = v5;
      return v7 << 16;
    }
    v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v9 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v9)
      return _StringGuts.foreignScalarAlign(_:)();
  }
  return result;
}

void sub_27070C()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;

  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_active] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markInteractionValidation];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markTriggered];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_labelTextColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_marks] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons] = &_swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/MarkedLabel.swift", 41, 2, 112, 0);
  __break(1u);
}

unint64_t sub_2707C0(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  unint64_t result;
  int v30;
  __n128 v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[2];
  _QWORD v39[2];

  v5 = objc_msgSend(a1, "string");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = Range<>.init(_:in:)(a2, a3, v6, v8);
  if ((v12 & 1) != 0)
  {
    swift_bridgeObjectRelease(v8);
    return a2;
  }
  v13 = v9;
  v14 = v10;
  v15 = String.subscript.getter(v9, v10, v6, v8, v11);
  v19 = v18;
  if ((v15 ^ v16) < 0x4000)
  {
LABEL_12:
    swift_bridgeObjectRelease(v19);
LABEL_13:
    v39[0] = v13;
    v39[1] = v14;
    v38[0] = v6;
    v38[1] = v8;
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4CA0);
    v36 = sub_270A7C();
    v37 = sub_D254();
    return _NSRange.init<A, B>(_:in:)(v39, v38, v35, &type metadata for String, v36, v37);
  }
  v20 = v15;
  v21 = v16;
  v22 = v17;
  while (1)
  {
    v23 = Substring.index(before:)(v21, v20, v21, v22, v19);
    v24 = Substring.subscript.getter(v23, v20, v21, v22, v19);
    v26 = v25;
    v27 = swift_bridgeObjectRelease(v19);
    if ((Character.isWhitespace.getter(v24, v26, v27) & 1) != 0)
    {
      v28 = swift_bridgeObjectRelease(v26);
    }
    else
    {
      result = sub_270418(v24, v26);
      if ((result & 0x100000000) != 0)
        goto LABEL_17;
      v30 = result;
      v28 = swift_bridgeObjectRelease(v26);
      if ((v30 - 14) <= 0xFFFFFFFB && (v30 - 8232) >= 2 && v30 != 133)
        goto LABEL_13;
    }
    result = String.index(before:)(v14, v6, v8, v28);
    if (v13 >> 14 > result >> 14)
      break;
    v14 = result;
    v20 = String.subscript.getter(v13, result, v6, v8, v31);
    v21 = v32;
    v22 = v33;
    v19 = v34;
    if (!((v20 ^ v32) >> 14))
      goto LABEL_12;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_2709D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 120, 7);
}

void sub_270A14(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;

  sub_26F24C(a2, a3, a4, a5, *(double *)(v5 + 16), *(double *)(v5 + 24), *(double *)(v5 + 32), *(double *)(v5 + 40), a1, *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_BYTE **)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), *(void **)(v5 + 96), *(_QWORD *)(v5 + 104), *(_QWORD *)(v5 + 112));
}

uint64_t sub_270A50()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_270A74(uint64_t a1)
{
  uint64_t v1;

  sub_26E768(a1, v1);
}

unint64_t sub_270A7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D4CB0;
  if (!qword_3D4CB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_3D4CA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3D4CB0);
  }
  return result;
}

_BYTE *sub_270AC8@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void sub_270B58()
{
  qword_3DF0A8 = 0x4046000000000000;
}

uint64_t EpisodeUpsellBannerDataProvider.libraryActionController.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D5D4(v1 + 16, a1);
}

double NowPlayingEpisodeUpsellBannerModel.primaryAction.getter()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0 + 56)).n128_u64[0];
  return result;
}

uint64_t EpisodeUpsellBannerDataProvider.storeDataProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_D184(v1 + 64, a1, &qword_3D4320);
}

uint64_t EpisodeUpsellBannerDataProvider.imageProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D5D4(v1 + 104, a1);
}

double EpisodeUpsellBannerDataProvider.metricsController.getter()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0 + 144)).n128_u64[0];
  return result;
}

uint64_t EpisodeUpsellBannerDataProvider.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 152, 7);
  EpisodeUpsellBannerDataProvider.init(asPartOf:)(a1);
  return v3;
}

uint64_t EpisodeUpsellBannerDataProvider.init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  BaseObjectGraph.inject<A>(_:)(v12, v4, v4);
  sub_1B738(v12, v2 + 16);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  BaseObjectGraph.inject<A>(_:)(v12, v5, v5);
  *(_QWORD *)(v2 + 56) = *(_QWORD *)&v12[0];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B70);
  BaseObjectGraph.inject<A>(_:)(v12, v6, v6);
  sub_D210((uint64_t)v12, v2 + 64, &qword_3D4320);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(v12, v7, v7);
  v8 = sub_1B738(v12, v2 + 104);
  if (os_feature_enabled_red_sun(v8))
  {
    swift_release(a1);
    v9 = 0;
  }
  else
  {
    v10 = type metadata accessor for MetricsController(0);
    swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    v9 = MetricsController.init(asPartOf:)(a1);
  }
  *(_QWORD *)(v2 + 144) = v9;
  return v2;
}

_QWORD *EpisodeUpsellBannerDataProvider.deinit()
{
  _QWORD *v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 2);
  swift_release(v0[7]);
  sub_270D4C((uint64_t)(v0 + 8));
  __swift_destroy_boxed_opaque_existential_0(v0 + 13);
  swift_release(v0[18]);
  return v0;
}

uint64_t sub_270D4C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4320);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EpisodeUpsellBannerDataProvider.__deallocating_deinit()
{
  _QWORD *v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 2);
  swift_release(v0[7]);
  sub_270D4C((uint64_t)(v0 + 8));
  __swift_destroy_boxed_opaque_existential_0(v0 + 13);
  swift_release(v0[18]);
  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t NowPlayingEpisodeUpsellBannerModel.subscriptionTitle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t NowPlayingEpisodeUpsellBannerModel.showSpecificUpsellCopy.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t NowPlayingEpisodeUpsellBannerModel.genericUpsellCopy.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
  return v1;
}

void *NowPlayingEpisodeUpsellBannerModel.channelImage.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

double NowPlayingEpisodeUpsellBannerModel.dismissBannerAction.getter()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0 + 64)).n128_u64[0];
  return result;
}

double NowPlayingEpisodeUpsellBannerModel.instrumentedDismissBannerAction.getter()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0 + 72)).n128_u64[0];
  return result;
}

uint64_t NowPlayingEpisodeUpsellBannerModel.onBannerAppearBlock.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_2C690(v1, *(_QWORD *)(v0 + 88));
  return v1;
}

uint64_t NowPlayingEpisodeUpsellBannerModel.shouldShowMiniHint.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 96);
}

double sub_270EC0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (uint64_t *)(*a2 + qword_3DF0B0);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  swift_bridgeObjectRetain(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_270F28()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + qword_3DF0B0);
  swift_beginAccess(v0 + qword_3DF0B0, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

double sub_270F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + qword_3DF0B0);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t (*sub_270FC0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_3DF0B0, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t NowPlayingEpisodeUpsellBannerProvider.__allocating_init(dataProvider:metricsController:episodeAdamId:presentationType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  return NowPlayingEpisodeUpsellBannerProvider.init(dataProvider:metricsController:episodeAdamId:presentationType:)(a1, a2, a3, a4, a5);
}

uint64_t NowPlayingEpisodeUpsellBannerProvider.init(dataProvider:metricsController:episodeAdamId:presentationType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  _BYTE v54[40];
  _BYTE v55[48];

  LODWORD(v52) = a5;
  v10 = type metadata accessor for MetricsEventType(0);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ScalarDictionary(0);
  v49 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v46 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  v18 = __chkstk_darwin(v17);
  v47 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for MetricsPageFields(0, v18);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v53 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + qword_3DF0B0) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v5 + qword_3DF0B8) = a1;
  *(_QWORD *)(v5 + qword_3DF0C0) = a2;
  sub_1D5D4(a1 + 16, (uint64_t)v55);
  sub_D184(a1 + 64, (uint64_t)v54, &qword_3D4320);
  v21 = *(_QWORD *)(a1 + 56);
  swift_retain(a1);
  swift_retain(a2);
  swift_retain(v21);
  swift_bridgeObjectRetain(a4);
  v22 = a3;
  v23 = static AdamID.parse(_:)(a3);
  v24 = swift_bridgeObjectRelease(a4);
  v25 = EpisodeUpsellBannerProvider.init(libraryActionController:storeDataProvider:episodePlayStateController:episodeAdamId:presentationType:)(v55, v54, v21, v23, v52, v24);
  swift_retain(v25);
  if ((os_feature_enabled_red_sun(v26) & 1) != 0)
  {
    swift_bridgeObjectRelease(a4);
    swift_release(v25);
    swift_release(a1);
    swift_release(a2);
  }
  else
  {
    v27 = static MetricsPageType.nowPlaying.getter();
    MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)(v22, a4, v27, v28, 0, 0, 0);
    MetricsController.reset()();
    ScalarDictionary.init()(v29);
    v52 = sub_272D78((uint64_t)_swiftEmptyArrayStorage);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E58);
    v31 = type metadata accessor for PageMetrics.Instruction(0);
    v32 = swift_allocObject(v30, ((*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) | 7);
    *(_OWORD *)(v32 + 16) = xmmword_2EFA20;
    v33 = v45;
    v34 = *(void (**)(char *, _QWORD, uint64_t))(v44 + 104);
    v34(v12, enum case for MetricsEventType.page(_:), v45);
    PageMetrics.Instruction.init(eventType:)(v12);
    v34(v12, enum case for MetricsEventType.impressions(_:), v33);
    v35 = PageMetrics.Instruction.init(eventType:)(v12);
    v36 = MetricsPageFields.metricsFields.getter(v35);
    v37 = v49;
    v38 = v46;
    v39 = v51;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v16, v51);
    v40 = v47;
    PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v32, v36, v38, v52);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v39);
    v41 = type metadata accessor for PageMetrics(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
    MetricsController.pageMetrics.setter(v40);
    swift_release(a1);
    swift_release(a2);
    v42 = swift_release(v25);
    (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v53, v50, v42);
  }
  return v25;
}

double sub_271470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  double result;

  v8 = swift_allocObject(&unk_38EAB0, 32, 7);
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  swift_retain(a4);
  sub_271770(a1, a2, (uint64_t)sub_272ED0, v8);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_2714E8(uint64_t a1, uint64_t (*a2)(_QWORD *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;
  _BYTE v27[112];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D210(a1, (uint64_t)v27, &qword_3DF278);
  if (objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
  {
    sub_D210((uint64_t)v27, (uint64_t)aBlock, &qword_3DF278);
    return a2(aBlock);
  }
  else
  {
    sub_1E2A0();
    v24 = static OS_dispatch_queue.main.getter(v15);
    v16 = swift_allocObject(&unk_38ECB8, 129, 7);
    *(_QWORD *)(v16 + 16) = a2;
    *(_QWORD *)(v16 + 24) = a3;
    sub_D210((uint64_t)v27, v16 + 32, &qword_3DF278);
    aBlock[4] = sub_273644;
    v26 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_64;
    v17 = _Block_copy(aBlock);
    v18 = v26;
    swift_retain(a3);
    sub_2736A8((uint64_t)v27);
    v19 = swift_release(v18);
    static DispatchQoS.unspecified.getter(v19);
    aBlock[0] = _swiftEmptyArrayStorage;
    v20 = sub_CF9B0();
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
    v22 = sub_10EDC((unint64_t *)&qword_3D2FE0, (uint64_t *)&unk_3D4DA0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v6, v20);
    v23 = (void *)v24;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

double sub_271770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double result;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];

  v55 = a1;
  v56 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF1D8);
  v10 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  v59 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF1E0);
  v14 = *(_QWORD *)(v13 - 8);
  v61 = v13;
  v62 = v14;
  __chkstk_darwin(v13);
  v57 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF1E8);
  v17 = *(_QWORD *)(v16 - 8);
  v63 = v16;
  v64 = v17;
  v18 = __chkstk_darwin(v16);
  v60 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for EpisodeUpsellBannerProvider(0, v18);
  v21 = (uint64_t (*)(uint64_t, uint64_t))method lookup function for EpisodeUpsellBannerProvider(v20, &method descriptor for EpisodeUpsellBannerProvider.episodeUpsellBannerModelPublisher(episodeStoreTrackId:podcastStoreId:));
  v66[0] = v21(a1, a2);
  v22 = swift_allocObject(&unk_38EBA0, 24, 7);
  swift_weakInit(v22 + 16, v4);
  v23 = (_QWORD *)swift_allocObject(&unk_38EBC8, 40, 7);
  v23[2] = v22;
  v23[3] = a3;
  v23[4] = a4;
  v24 = swift_retain(a4);
  v25 = static Subscribers.Demand.unlimited.getter(v24);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF1F0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF1F8);
  v28 = sub_10EDC(&qword_3DF200, &qword_3DF1F0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v29 = sub_10EDC(&qword_3DF208, &qword_3DF1F8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.flatMap<A>(maxPublishers:_:)(v25, sub_273518, v23, v26, v27, v28, v29);
  swift_release(v23);
  swift_release(v66[0]);
  v30 = swift_allocObject(&unk_38EBF0, 32, 7);
  v31 = v65;
  v32 = v55;
  *(_QWORD *)(v30 + 16) = v65;
  *(_QWORD *)(v30 + 24) = v32;
  v33 = sub_10EDC(&qword_3DF210, &qword_3DF1D8, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  swift_retain(v31);
  v35 = v57;
  v34 = v58;
  Publisher.map<A>(_:)(sub_273548, v30, v58, &type metadata for NowPlayingEpisodeUpsellBannerModel, v33);
  v36 = swift_release(v30);
  (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v12, v34, v36);
  v37 = swift_allocObject(&unk_38EC18, 32, 7);
  v38 = v56;
  *(_QWORD *)(v37 + 16) = v56;
  *(_QWORD *)(v37 + 24) = a4;
  swift_retain(a4);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF218);
  v40 = sub_10EDC(&qword_3DF220, &qword_3DF1E0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v41 = sub_10EDC(&qword_3DF228, &qword_3DF218, (uint64_t)&protocol conformance descriptor for Empty<A, B>);
  v42 = v60;
  v43 = v61;
  Publisher.catch<A>(_:)(sub_273550, v37, v61, v39, v40, v41);
  v44 = swift_release(v37);
  (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v35, v43, v44);
  v45 = swift_allocObject(&unk_38EC40, 32, 7);
  *(_QWORD *)(v45 + 16) = v38;
  *(_QWORD *)(v45 + 24) = a4;
  v46 = swift_allocObject(&unk_38EC68, 32, 7);
  *(_QWORD *)(v46 + 16) = sub_273558;
  *(_QWORD *)(v46 + 24) = v45;
  v47 = sub_10EDC(&qword_3DF230, &qword_3DF1E8, (uint64_t)&protocol conformance descriptor for Publishers.Catch<A, B>);
  swift_retain(a4);
  v48 = v63;
  v49 = Publisher<>.sink(receiveValue:)(sub_273560, v46, v63, v47);
  v50 = swift_release(v46);
  (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v42, v48, v50);
  v51 = v65 + qword_3DF0B0;
  swift_beginAccess(v65 + qword_3DF0B0, v66, 33, 0);
  v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v53 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v51, v52, v53);
  swift_endAccess(v66);
  *(_QWORD *)&result = swift_release(v49).n128_u64[0];
  return result;
}

uint64_t sub_271C00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void (*a3)(__int128 *)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t Strong;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  int v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  char *v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  double v75;
  double v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(__int128 *);
  uint64_t *v116;
  uint64_t v117;
  _QWORD v118[5];
  __int128 v119;
  __int128 v120;
  _OWORD v121[2];
  __int128 v122;
  __int128 v123;
  char v124;
  char v125[8];

  v114 = a4;
  v115 = a3;
  v117 = a2;
  v116 = a5;
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF238);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for Logger(0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v100 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v8);
  v103 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for ArtworkRequest(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkCrop(0);
  __chkstk_darwin(v11);
  v97 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for ArtworkModel(0);
  __chkstk_darwin(v98);
  v99 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v110 = (char *)&v95 - v15;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF240);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v111 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for FlowPresentationContext(0);
  v17 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF248);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF250);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *a1;
  v29 = v117 + 16;
  swift_beginAccess(v117 + 16, v125, 0, 0);
  Strong = swift_weakLoadStrong(v29);
  if (!Strong)
    goto LABEL_6;
  v31 = Strong;
  if (!v28)
  {
    swift_release(Strong);
LABEL_6:
    v119 = xmmword_2ED840;
    v120 = 0u;
    memset(v121, 0, sizeof(v121));
    v122 = 0u;
    v123 = 0u;
    v124 = 0;
    v115(&v119);
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF258);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6288);
    v44 = v111;
    Empty.init(completeImmediately:)(1, v42, v43, &protocol self-conformance witness table for Error);
    v45 = sub_10EDC(&qword_3DF260, &qword_3DF240, (uint64_t)&protocol conformance descriptor for Empty<A, B>);
    v46 = v113;
    v39 = Publisher.eraseToAnyPublisher()(v113, v45);
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v112 + 8))(v44, v46, v47);
    goto LABEL_7;
  }
  v117 = v28;
  swift_retain(v28);
  v32 = swift_retain(v31);
  v33 = v31;
  v34 = EpisodeUpsellBannerProvider.presentationType.getter(v32);
  v35 = swift_release(v33);
  if (v34 == 1)
  {
    v119 = 0uLL;
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF258);
    Just.init(_:)(&v119, v36);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6288);
    Just.setFailureType<A>(to:)(v37, v20, v37, &protocol self-conformance witness table for Error);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    v38 = sub_10EDC(&qword_3DF270, &qword_3DF250, (uint64_t)&protocol conformance descriptor for Result<A, B>.Publisher);
    v39 = Publisher.eraseToAnyPublisher()(v24, v38);
    swift_release(v33);
    v40 = swift_release(v117);
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v25 + 8))(v27, v24, v40);
LABEL_7:
    v48 = v116;
    goto LABEL_8;
  }
  v49 = v33;
  v50 = v117;
  v51 = EpisodeUpsellBannerModel.primaryAction.getter(v35);
  v53 = (uint64_t)v110;
  if (v51)
  {
    v54 = v51;
    v55 = type metadata accessor for FlowAction(0, v52);
    if (swift_dynamicCastClass(v54, v55))
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for FlowPresentationContext.presentSheetOverNowPlaying(_:), v96);
      dispatch thunk of FlowAction.presentationContext.setter(v19);
    }
    v52 = swift_release(v54);
  }
  v56 = EpisodeUpsellBannerModel.artworkURL.getter(v52);
  v48 = v116;
  if (v57)
  {
    v58 = v56;
    v59 = v57;
    v60 = kMTMaximumArtworkSize;
    v119 = xmmword_2F6750;
    v120 = 0u;
    memset(v121, 0, 25);
    v61 = v97;
    v62 = static ArtworkCrop.boundingBox.getter();
    BYTE2(v94) = 0;
    LOWORD(v94) = static ArtworkFormat.preferredFormat.getter(v62);
    ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)(v58, v59, 0, 0, 255, 0, 255, &v119, v60, v60, 3, v61, 0, 0, v94, 0, 0);
    if (qword_3CFC88 != -1)
      swift_once(&qword_3CFC88, sub_270B58);
    v63 = *(double *)&qword_3DF0A8;
    v64 = v99;
    v65 = sub_27E84(v53, v99);
    v66 = ArtworkCrop.preferredContentMode.getter(v65);
    v67 = ContentMode.viewContentMode.getter(v66);
    v68 = type metadata accessor for CropCode(0);
    v69 = v103;
    v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v103, 1, 1, v68);
    v71 = v100;
    v72 = static Logger.artwork.getter(v70);
    v73 = static os_log_type_t.info.getter(v72);
    SignpostAndLogTrace(domain:level:)(v118, v71, v73);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v71, v102);
    v74 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v74, "scale");
    v76 = v75;

    v77 = v104;
    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v64, v67, 0, v69, 0, _swiftEmptyArrayStorage, v118, v63, v63, v76);
    v78 = *(_QWORD **)(v49 + qword_3DF0B8);
    v79 = v78[16];
    v80 = v78[17];
    __swift_project_boxed_opaque_existential_1(v78 + 13, v79);
    v118[0] = dispatch thunk of ImageProvider.load(artwork:)(v77, v79, v80);
    swift_retain(v50);
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1238);
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF258);
    v83 = sub_10EDC(&qword_3D1240, &qword_3D1238, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v84 = v107;
    Publisher.map<A>(_:)(sub_2735A0, v50, v81, v82, v83);
    swift_release(v50);
    swift_release(v118[0]);
    v85 = sub_10EDC(&qword_3DF268, &qword_3DF238, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v86 = v109;
    v39 = Publisher.eraseToAnyPublisher()(v109, v85);
    swift_release(v49);
    v87 = swift_release(v50);
    (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v84, v86, v87);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v77, v106);
    result = sub_239C0(v53);
  }
  else
  {
    v119 = xmmword_2ED840;
    v120 = 0u;
    memset(v121, 0, sizeof(v121));
    v122 = 0u;
    v123 = 0u;
    v124 = 0;
    v115(&v119);
    v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF258);
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6288);
    v90 = v111;
    Empty.init(completeImmediately:)(1, v88, v89, &protocol self-conformance witness table for Error);
    v91 = sub_10EDC(&qword_3DF260, &qword_3DF240, (uint64_t)&protocol conformance descriptor for Empty<A, B>);
    v92 = v113;
    v39 = Publisher.eraseToAnyPublisher()(v113, v91);
    swift_release(v49);
    v93 = swift_release(v50);
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v112 + 8))(v90, v92, v93);
  }
LABEL_8:
  *v48 = v39;
  return result;
}

void sub_2725A4(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v5 = *a1;
  if (*a1)
  {
    v8 = (void *)a1[1];
    type metadata accessor for ClickMetricsEvent(0);
    swift_retain(v5);
    v40 = v8;
    v9 = EpisodeUpsellBannerModel.channelAdamId.getter(v8);
    v11 = v10;
    v12 = static ClickMetricsEvent.upsellBannerDismissClickEvent(targetId:channelAdamId:pageType:)(0x61426C6C65737075, 0xEC00000072656E6ELL, v9, v10, 0x6979616C50776F4ELL, 0xEA0000000000676ELL);
    v13 = swift_bridgeObjectRelease(v11);
    v14 = EpisodeUpsellBannerModel.dismissBannerAction.getter(v13);
    v38 = v12;
    if (v14)
    {
      v15 = v14;
      v39 = ClosureAction.copy(with:)(v12);
      swift_release(v15);
    }
    else
    {
      v39 = 0;
    }
    v17 = swift_allocObject(&unk_38EBA0, 24, 7);
    swift_weakInit(v17 + 16, a2);
    v18 = (_QWORD *)swift_allocObject(&unk_38EC90, 40, 7);
    v18[2] = a3;
    v18[3] = v17;
    v18[4] = v5;
    type metadata accessor for PresentedEpisodeUpsellBannersProvider(0, v19);
    v20 = swift_retain(v5);
    v21 = static PresentedEpisodeUpsellBannersProvider.shared.getter(v20);
    v22 = dispatch thunk of PresentedEpisodeUpsellBannersProvider.episodeStoreTrackIdsForPresentedBanners.getter();
    swift_release(v21);
    v37 = sub_3119C(a3, v22);
    v23 = swift_bridgeObjectRelease(v22);
    v36 = EpisodeUpsellBannerModel.subscriptionTitle.getter(v23);
    v25 = v24;
    v26 = EpisodeUpsellBannerModel.showSpecificUpsellCopy.getter();
    v28 = v27;
    v29 = EpisodeUpsellBannerModel.genericUpsellCopy.getter();
    v31 = v30;
    v33 = EpisodeUpsellBannerModel.primaryAction.getter(v32);
    v35 = EpisodeUpsellBannerModel.dismissBannerAction.getter(v34);
    swift_release(v38);
    swift_release(v5);
    *(_QWORD *)a4 = v36;
    *(_QWORD *)(a4 + 8) = v25;
    *(_QWORD *)(a4 + 16) = v26;
    *(_QWORD *)(a4 + 24) = v28;
    *(_QWORD *)(a4 + 32) = v29;
    *(_QWORD *)(a4 + 40) = v31;
    *(_QWORD *)(a4 + 48) = v40;
    *(_QWORD *)(a4 + 56) = v33;
    *(_QWORD *)(a4 + 64) = v35;
    *(_QWORD *)(a4 + 72) = v39;
    *(_QWORD *)(a4 + 80) = sub_273594;
    *(_QWORD *)(a4 + 88) = v18;
    v16 = !v37;
  }
  else
  {
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    v16 = 1;
  }
  *(_BYTE *)(a4 + 96) = v16;
}

double sub_2727C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void (*v10)(_OWORD *, _QWORD);
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  double result;
  uint64_t v26[3];
  _OWORD v27[2];
  char v28;

  v4 = type metadata accessor for MetricsAdHocImpression(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for PresentedEpisodeUpsellBannersProvider(0, v6);
  v9 = static PresentedEpisodeUpsellBannersProvider.shared.getter();
  v10 = (void (*)(_OWORD *, _QWORD))dispatch thunk of PresentedEpisodeUpsellBannersProvider.episodeStoreTrackIdsForPresentedBanners.modify(v27);
  sub_38738(v26, a1);
  v10(v27, 0);
  swift_beginAccess(a2 + 16, v26, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  if (Strong)
  {
    v12 = Strong;
    v13 = v9;
    v14 = EpisodeUpsellBannerModel.subscriptionTitle.getter();
    v16 = v15;
    v17 = EpisodeUpsellBannerModel.channelAdamId.getter();
    v19 = v18;
    v20 = EpisodeUpsellBannerModel.eligibilityType.getter();
    *v8 = v14;
    v8[1] = v16;
    v9 = v13;
    v8[2] = v17;
    v8[3] = v19;
    v8[4] = v20;
    v8[5] = v21;
    v22 = v21;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for MetricsAdHocImpression.nowPlayingUpsellBanner(_:), v4);
    memset(v27, 0, sizeof(v27));
    v28 = 1;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v16);
    v23 = swift_bridgeObjectRetain(v19);
    MetricsController.addAdHocImpression(_:in:at:)(v8, v27, 0, v23);
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v8, v4);
    swift_release(v12);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v22);
  }
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_272980(uint64_t a1, void (*a2)(_OWORD *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _OWORD v13[6];
  char v14;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static Logger.artwork.getter(v5);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "Failed to load upsell artwork", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v13[0] = xmmword_2ED840;
  memset(&v13[1], 0, 80);
  v14 = 0;
  a2(v13);
  return Empty.init(completeImmediately:)(1, &type metadata for NowPlayingEpisodeUpsellBannerModel, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_272AD4(uint64_t a1, uint64_t (*a2)(_OWORD *))
{
  char v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[6];
  char v8;

  v2 = *(_BYTE *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v4;
  v5 = *(_OWORD *)(a1 + 80);
  v7[4] = *(_OWORD *)(a1 + 64);
  v7[5] = v5;
  v8 = v2;
  return a2(v7);
}

uint64_t sub_272B20(uint64_t *a1, void (*a2)(uint64_t *))
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v2 = a1[5];
  v3 = (void *)a1[6];
  v4 = a1[7];
  v5 = a1[8];
  v7 = a1[9];
  v6 = a1[10];
  v8 = a1[11];
  v9 = *((_BYTE *)a1 + 96);
  v16 = *a1;
  v10 = *(_OWORD *)(a1 + 3);
  v17 = *(_OWORD *)(a1 + 1);
  v18 = v10;
  v19 = v2;
  v20 = v3;
  v21 = v4;
  v22 = v5;
  v23 = v7;
  v24 = v6;
  v25 = v8;
  v11 = v17;
  v12 = v10;
  v26 = v9;
  swift_retain(v7);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v2);
  v13 = v3;
  swift_retain(v4);
  swift_retain(v5);
  sub_2C690(v6, v8);
  a2(&v16);
  swift_release(v7);
  swift_release(v5);
  swift_release(v4);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v11);
  return sub_1D618(v6, v8);
}

void NowPlayingEpisodeUpsellBannerProvider.init(graph:uuid:presentationType:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.NowPlayingEpisodeUpsellBannerProvider", 61, "init(graph:uuid:presentationType:)", 34, 0);
  __break(1u);
}

void NowPlayingEpisodeUpsellBannerProvider.init(libraryActionController:storeDataProvider:episodePlayStateController:episodeAdamId:presentationType:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.NowPlayingEpisodeUpsellBannerProvider", 61, "init(libraryActionController:storeDataProvider:episodePlayStateController:episodeAdamId:presentationType:)", 106, 0);
  __break(1u);
}

uint64_t sub_272C8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_3DF0B0));
  swift_release(*(_QWORD *)(v0 + qword_3DF0B8));
  return swift_release(*(_QWORD *)(v0 + qword_3DF0C0));
}

uint64_t NowPlayingEpisodeUpsellBannerProvider.deinit()
{
  uint64_t v0;

  v0 = EpisodeUpsellBannerProvider.deinit();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_3DF0B0));
  swift_release(*(_QWORD *)(v0 + qword_3DF0B8));
  swift_release(*(_QWORD *)(v0 + qword_3DF0C0));
  return v0;
}

uint64_t NowPlayingEpisodeUpsellBannerProvider.__deallocating_deinit()
{
  uint64_t v0;

  v0 = EpisodeUpsellBannerProvider.deinit();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_3DF0B0));
  swift_release(*(_QWORD *)(v0 + qword_3DF0B8));
  swift_release(*(_QWORD *)(v0 + qword_3DF0C0));
  return swift_deallocClassInstance(v0, 40, 7);
}

unint64_t sub_272D78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5570);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_D184(v7, (uint64_t)&v16, &qword_3D51A8);
    v8 = v16;
    v9 = v17;
    result = sub_1D358(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_1D65C(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_272EAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_272ED0(uint64_t a1)
{
  uint64_t v1;

  return sub_2714E8(a1, *(uint64_t (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_272ED8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(*a1 + qword_3DF0B0);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return swift_bridgeObjectRetain(v4);
}

uint64_t type metadata accessor for EpisodeUpsellBannerDataProvider()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31EpisodeUpsellBannerDataProvider);
}

uint64_t method lookup function for EpisodeUpsellBannerDataProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for EpisodeUpsellBannerDataProvider);
}

uint64_t dispatch thunk of EpisodeUpsellBannerDataProvider.__allocating_init(asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for NowPlayingEpisodeUpsellBannerModel(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  swift_release(*(_QWORD *)(a1 + 56));
  swift_release(*(_QWORD *)(a1 + 64));
  result = swift_release(*(_QWORD *)(a1 + 72));
  if (*(_QWORD *)(a1 + 80))
    return swift_release(*(_QWORD *)(a1 + 88));
  return result;
}

uint64_t initializeWithCopy for NowPlayingEpisodeUpsellBannerModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  id v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v8 = *(void **)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v7;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  v12 = (_OWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v13 = v8;
  swift_retain(v7);
  swift_retain(v9);
  swift_retain(v10);
  if (v11)
  {
    v14 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 88) = v14;
    swift_retain(v14);
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *v12;
  }
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t assignWithCopy for NowPlayingEpisodeUpsellBannerModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v14;
  swift_retain(v14);
  swift_release(v13);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v16;
  swift_retain(v16);
  swift_release(v15);
  v17 = *(_QWORD *)(a1 + 72);
  v18 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v18;
  swift_retain(v18);
  swift_release(v17);
  v19 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v19)
    {
      v22 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v19;
      *(_QWORD *)(a1 + 88) = v22;
      swift_retain(v22);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_8;
  }
  if (!v19)
  {
    swift_release(*(_QWORD *)(a1 + 88));
    goto LABEL_7;
  }
  v20 = *(_QWORD *)(a2 + 88);
  v21 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v19;
  *(_QWORD *)(a1 + 88) = v20;
  swift_retain(v20);
  swift_release(v21);
LABEL_8:
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t assignWithTake for NowPlayingEpisodeUpsellBannerModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  swift_release(*(_QWORD *)(a1 + 56));
  v9 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release(v10);
  v11 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v11)
    {
      v14 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v11;
      *(_QWORD *)(a1 + 88) = v14;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_8;
  }
  if (!v11)
  {
    swift_release(*(_QWORD *)(a1 + 88));
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  swift_release(v13);
LABEL_8:
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingEpisodeUpsellBannerModel(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 97))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingEpisodeUpsellBannerModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingEpisodeUpsellBannerModel()
{
  return &type metadata for NowPlayingEpisodeUpsellBannerModel;
}

uint64_t type metadata accessor for NowPlayingEpisodeUpsellBannerProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_3DF188;
  if (!qword_3DF188)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingEpisodeUpsellBannerProvider);
  return result;
}

uint64_t sub_2733E4(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + class metadata base offset for NowPlayingEpisodeUpsellBannerProvider);
}

uint64_t method lookup function for NowPlayingEpisodeUpsellBannerProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for NowPlayingEpisodeUpsellBannerProvider);
}

uint64_t dispatch thunk of NowPlayingEpisodeUpsellBannerProvider.subscriptions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NowPlayingEpisodeUpsellBannerProvider + *v0 + 24))();
}

uint64_t dispatch thunk of NowPlayingEpisodeUpsellBannerProvider.subscriptions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NowPlayingEpisodeUpsellBannerProvider + *v0 + 32))();
}

uint64_t dispatch thunk of NowPlayingEpisodeUpsellBannerProvider.subscriptions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NowPlayingEpisodeUpsellBannerProvider + *v0 + 40))();
}

uint64_t dispatch thunk of NowPlayingEpisodeUpsellBannerProvider.__allocating_init(dataProvider:metricsController:episodeAdamId:presentationType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NowPlayingEpisodeUpsellBannerProvider + v0 + 48))();
}

uint64_t dispatch thunk of NowPlayingEpisodeUpsellBannerProvider.nowPlayingEpisodeUpsellBannerPublisher(episodeStoreTrackId:podcastStoreTrackId:imageFetchCompletion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NowPlayingEpisodeUpsellBannerProvider + *v0 + 56))();
}

uint64_t sub_2734C0()
{
  return type metadata accessor for NowPlayingEpisodeUpsellBannerProvider(0);
}

uint64_t sub_2734C8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2734EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_273518@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_271C00(a1, *(_QWORD *)(v2 + 16), *(void (**)(__int128 *))(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_273524()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_273548(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_2725A4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_273550(uint64_t a1)
{
  uint64_t v1;

  return sub_272980(a1, *(void (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_273558(uint64_t a1)
{
  uint64_t v1;

  return sub_272AD4(a1, *(uint64_t (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_273560(uint64_t *a1)
{
  uint64_t v1;

  return sub_272B20(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_273568()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_273594()
{
  uint64_t v0;

  return sub_2727C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_2735A0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;

  v4 = *a1;
  *a2 = v2;
  a2[1] = v4;
  swift_retain(v2);
  return v4;
}

uint64_t sub_2735D0()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24));
  v1 = *(_QWORD *)(v0 + 40);
  if (v1 != 1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

    swift_release(*(_QWORD *)(v0 + 88));
    swift_release(*(_QWORD *)(v0 + 96));
    swift_release(*(_QWORD *)(v0 + 104));
    if (*(_QWORD *)(v0 + 112))
      swift_release(*(_QWORD *)(v0 + 120));
  }
  return swift_deallocObject(v0, 129, 7);
}

uint64_t sub_273644()
{
  uint64_t v0;
  uint64_t (*v1)(_BYTE *);
  _BYTE v3[104];

  v1 = *(uint64_t (**)(_BYTE *))(v0 + 16);
  sub_D210(v0 + 32, (uint64_t)v3, &qword_3DF278);
  return v1(v3);
}

double block_copy_helper_64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_64(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2736A8(uint64_t a1)
{
  sub_273700(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  return a1;
}

uint64_t sub_273700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v17;
  uint64_t result;

  if (a2 != 1)
  {
    swift_retain(a10);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    v17 = a7;
    swift_retain(a8);
    swift_retain(a9);
    return sub_2C690(a11, a12);
  }
  return result;
}

ValueMetadata *type metadata accessor for PriorityFlexibleLayoutWantsExtraSpace()
{
  return &type metadata for PriorityFlexibleLayoutWantsExtraSpace;
}

ValueMetadata *type metadata accessor for PriorityFlexibleHStackLayout()
{
  return &type metadata for PriorityFlexibleHStackLayout;
}

void sub_2737BC(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for LayoutSubview(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_21D1F8(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_274BE0(v5);
  *a1 = v3;
}

void sub_27383C(unint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9, double a10)
{
  double v10;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, int64_t);
  uint64_t v56;
  CGFloat v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  CGFloat v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  double v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  double v92;
  double v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  double *v98;
  char *v99;
  double v100;
  uint64_t v101;
  int64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  double v109;
  char *v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  double v116;
  unint64_t v117;
  char *v118;
  ValueMetadata *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, int64_t);
  unint64_t v124;
  double v125;
  unint64_t v126;
  void (*v127)(char *, ValueMetadata *);
  uint64_t v128;
  double *v129;
  double *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  CGFloat v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  CGFloat v139;
  char *v140;
  uint64_t v141;
  char *v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  double v146;
  uint64_t v147;
  int64_t v148;
  char *v149;
  char v150;
  uint64_t v151;
  _QWORD v152[2];

  LODWORD(v142) = a4;
  v141 = a3;
  LODWORD(v148) = a2;
  v18 = type metadata accessor for LayoutSubview(0);
  v146 = *(double *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v131 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v134 = (char *)&v131 - v22;
  __chkstk_darwin(v23);
  v149 = (char *)&v131 - v24;
  __chkstk_darwin(v25);
  *(_QWORD *)&v139 = (char *)&v131 - v26;
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE40);
  v145 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v138 = (uint64_t)&v131 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v137 = (char *)&v131 - v29;
  __chkstk_darwin(v30);
  v32 = (char *)&v131 - v31;
  __chkstk_darwin(v33);
  v144 = (uint64_t)&v131 - v34;
  __chkstk_darwin(v35);
  v140 = (char *)&v131 - v36;
  __chkstk_darwin(v37);
  v136 = (uint64_t)&v131 - v38;
  __chkstk_darwin(v39);
  *(_QWORD *)&v143 = (char *)&v131 - v40;
  v41 = type metadata accessor for LayoutSubviews(0);
  v42 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v44 = (char *)&v131 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&v45 = COERCE_DOUBLE(sub_274B14((unint64_t *)&qword_3D9678, (uint64_t)&protocol conformance descriptor for LayoutSubviews));
  dispatch thunk of Collection.startIndex.getter(v41, v45);
  dispatch thunk of Collection.endIndex.getter(&v151, v41, v45);
  v135 = *(double *)&v45;
  if (dispatch thunk of Collection.distance(from:to:)(v152, &v151, v41, v45) < 1)
    return;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v44, a5, v41);
  v46 = sub_274B14(&qword_3DF288, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v152[0] = dispatch thunk of Sequence._copyToContiguousArray()(v41, v46);
  sub_2737BC(v152);
  v47 = v152[0];
  if ((v148 & 1) != 0)
    v48 = 10.0;
  else
    v48 = *(double *)&a1;
  if (v48 <= 0.0)
  {
    swift_release(v152[0]);
    return;
  }
  v49 = a5;
  v132 = v41;
  v131 = v20;
  v148 = v18;
  v50 = *(_QWORD *)(v152[0] + 16);
  v51 = _swiftEmptyArrayStorage;
  v133 = v49;
  if (v50)
  {
    v152[0] = _swiftEmptyArrayStorage;
    sub_F35C0(0, v50, 0);
    v52 = v47;
    v53 = v47
        + ((*(unsigned __int8 *)(*(_QWORD *)&v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)&v146 + 80));
    v54 = *(_QWORD *)(*(_QWORD *)&v146 + 72);
    v55 = *(void (**)(uint64_t, uint64_t, int64_t))(*(_QWORD *)&v146 + 16);
    v56 = v143;
    do
    {
      v57 = v139;
      v58 = v148;
      v55(*(_QWORD *)&v139, v53, v148);
      v59 = v56;
      v60 = v56 + *(int *)(v147 + 48);
      v55(v59, *(_QWORD *)&v57, v58);
      LOBYTE(v151) = 0;
      v150 = v142 & 1;
      *(double *)v60 = LayoutSubview.sizeThatFits(_:)(0);
      *(_QWORD *)(v60 + 8) = v61;
      (*(void (**)(CGFloat, int64_t))(*(_QWORD *)&v146 + 8))(COERCE_CGFLOAT(*(_QWORD *)&v57), v58);
      v62 = (double *)v152[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v152[0]) & 1) == 0)
      {
        sub_F35C0(0, *((_QWORD *)v62 + 2) + 1, 1);
        v62 = (double *)v152[0];
      }
      v64 = *((_QWORD *)v62 + 2);
      v63 = *((_QWORD *)v62 + 3);
      a1 = v64 + 1;
      if (v64 >= v63 >> 1)
      {
        sub_F35C0(v63 > 1, v64 + 1, 1);
        v62 = (double *)v152[0];
      }
      v62[2] = *(double *)&a1;
      v65 = (uint64_t)v62
          + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80))
          + *(_QWORD *)(v145 + 72) * v64;
      v56 = v143;
      sub_D210(v143, v65, &qword_3DCE40);
      v53 += v54;
      --v50;
    }
    while (v50);
    swift_release(v52);
    v51 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_release(v152[0]);
    v62 = (double *)_swiftEmptyArrayStorage;
  }
  v66 = v132;
  v67 = v135;
  dispatch thunk of Collection.startIndex.getter(v132, *(_QWORD *)&v135);
  dispatch thunk of Collection.endIndex.getter(&v151, v66, *(_QWORD *)&v67);
  v68 = dispatch thunk of Collection.distance(from:to:)(v152, &v151, v66, *(_QWORD *)&v67);
  v69 = v136;
  if (__OFSUB__(v68, 1))
  {
    __break(1u);
    swift_release(v66);
    __break(1u);
  }
  else
  {
    v135 = a8;
    v139 = a9;
    v10 = (double)(v68 - 1) * a10;
    v70 = *((_QWORD *)v62 + 2);
    *(double *)&a1 = v146;
    if (v70)
    {
      v152[0] = _swiftEmptyArrayStorage;
      sub_F3470(0, v70, 0);
      v71 = (uint64_t)v62
          + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
      v72 = *(_QWORD *)(v145 + 72);
      do
      {
        sub_274B54(v71, v69);
        v73 = v148;
        v74 = *(int *)(v147 + 48);
        v75 = v140;
        (*(void (**)(char *, uint64_t, int64_t))(a1 + 16))(v140, v69, v148);
        v143 = *(_OWORD *)(v69 + v74);
        *(_OWORD *)&v75[v74] = v143;
        (*(void (**)(char *, int64_t))(a1 + 8))(v75, v73);
        sub_D1D4(v69, &qword_3DCE40);
        v51 = (_QWORD *)v152[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v152[0]) & 1) == 0)
        {
          sub_F3470(0, v51[2] + 1, 1);
          v51 = (_QWORD *)v152[0];
        }
        v77 = v51[2];
        v76 = v51[3];
        v78 = v77 + 1;
        if (v77 >= v76 >> 1)
        {
          sub_F3470(v76 > 1, v77 + 1, 1);
          v78 = v77 + 1;
          v51 = (_QWORD *)v152[0];
        }
        v51[2] = v78;
        v51[v77 + 4] = v143;
        v71 += v72;
        --v70;
      }
      while (v70);
    }
    else
    {
      v78 = _swiftEmptyArrayStorage[2];
      if (!v78)
      {
        a9 = 0.0;
        v50 = v148;
        goto LABEL_35;
      }
    }
    v50 = v148;
    if (v78 >= 2)
    {
      v80 = 0;
      v79 = v78 & 0xFFFFFFFFFFFFFFFELL;
      a9 = 0.0;
      do
      {
        a9 = a9 + *(double *)&v51[v80 + 4] + *(double *)&v51[v80 + 5];
        v80 += 2;
      }
      while (v79 != v80);
      goto LABEL_34;
    }
    v79 = 0;
    a9 = 0.0;
  }
  do
  {
    v81 = *(double *)&v51[v79++ + 4];
    a9 = a9 + v81;
LABEL_34:
    ;
  }
  while (v78 != v79);
LABEL_35:
  swift_bridgeObjectRelease(v51);
  v82 = v10 + a9;
  v83 = *((_QWORD *)v62 + 2);
  *(_QWORD *)&v143 = v62;
  if (v48 < v10 + a9)
  {
    if (!v83)
    {
      v86 = _swiftEmptyArrayStorage;
LABEL_75:
      swift_bridgeObjectRelease(v62);
      sub_274514(v133, (uint64_t)v86, a6, a7, v135, v139, a10);
      swift_bridgeObjectRelease(v86);
      return;
    }
    v84 = v144 + *(int *)(v147 + 48);
    v85 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
    v142 = (char *)v62 + v85;
    v86 = _swiftEmptyArrayStorage;
    while (v83 <= *((_QWORD *)v62 + 2))
    {
      --v83;
      v69 = *(_QWORD *)(v145 + 72);
      v87 = (uint64_t)v32;
      v88 = v144;
      sub_274B54((uint64_t)&v142[v69 * v83], v144);
      a9 = *(double *)v84;
      v89 = *(_QWORD *)(v84 + 8);
      v90 = v149;
      v91 = v88;
      v32 = (char *)v87;
      (*(void (**)(char *, uint64_t, int64_t))(a1 + 32))(v149, v91, v50);
      v92 = v82 - (v82 - v48);
      v93 = a9 - (v82 - v48);
      if (a9 < v82 - v48)
      {
        v92 = v82 - (a9 + a10);
        v93 = 0.0;
      }
      if (v82 - v48 > 0.0)
      {
        v82 = v92;
        a9 = v93;
      }
      v94 = a1;
      v95 = v87 + *(int *)(v147 + 48);
      (*(void (**)(uint64_t, char *, int64_t))(v94 + 16))(v87, v90, v50);
      *(double *)v95 = a9;
      *(_QWORD *)(v95 + 8) = v89;
      if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
        v86 = (_QWORD *)sub_21003C(0, v86[2] + 1, 1, (unint64_t)v86);
      v97 = v86[2];
      v96 = v86[3];
      v62 = (double *)v143;
      if (v97 >= v96 >> 1)
        v86 = (_QWORD *)sub_21003C(v96 > 1, v97 + 1, 1, (unint64_t)v86);
      v86[2] = v97 + 1;
      sub_D210(v87, (uint64_t)v86 + v85 + v97 * v69, &qword_3DCE40);
      *(double *)&a1 = v146;
      v50 = v148;
      (*(void (**)(char *, int64_t))(*(_QWORD *)&v146 + 8))(v149, v148);
      if (!v83)
        goto LABEL_75;
    }
    __break(1u);
    goto LABEL_62;
  }
  if (!v83)
  {
LABEL_62:
    swift_bridgeObjectRelease(v62);
    v104 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_63;
  }
  v98 = v62;
  v99 = &v137[*(int *)(v147 + 48)];
  v100 = *(double *)&a1;
  v149 = (char *)((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
  v101 = (uint64_t)&v149[(_QWORD)v98];
  v102 = v50;
  v103 = *(_QWORD *)(v145 + 72);
  v104 = (uint64_t)_swiftEmptyArrayStorage;
  v105 = v134;
  v106 = (uint64_t)v137;
  do
  {
    sub_274B54(v101, v106);
    a9 = *(double *)v99;
    v107 = *((_QWORD *)v99 + 1);
    (*(void (**)(char *, uint64_t, int64_t))(*(_QWORD *)&v100 + 32))(v105, v106, v102);
    v108.n128_f64[0] = v48 - v82;
    if (v48 - v82 > 0.0)
    {
      v109 = v108.n128_f64[0] + a9;
      LOBYTE(v152[0]) = 1;
      v110 = v105;
      v111 = v142 & 1;
      LOBYTE(v151) = v142 & 1;
      v108.n128_f64[0] = LayoutSubview.sizeThatFits(_:)(0);
      if (v109 < v108.n128_f64[0])
      {
        LOBYTE(v152[0]) = 0;
        LOBYTE(v151) = v111;
        v108.n128_f64[0] = LayoutSubview.sizeThatFits(_:)(*(_QWORD *)&v109);
      }
      v107 = v112;
      v105 = v110;
      v82 = v82 + v108.n128_f64[0] - a9;
      a9 = v108.n128_f64[0];
    }
    v113 = v138 + *(int *)(v147 + 48);
    (*(void (**)(__n128))(*(_QWORD *)&v146 + 16))(v108);
    *(double *)v113 = a9;
    *(_QWORD *)(v113 + 8) = v107;
    if ((swift_isUniquelyReferenced_nonNull_native(v104) & 1) == 0)
      v104 = sub_21003C(0, *(_QWORD *)(v104 + 16) + 1, 1, v104);
    v115 = *(_QWORD *)(v104 + 16);
    v114 = *(_QWORD *)(v104 + 24);
    if (v115 >= v114 >> 1)
      v104 = sub_21003C(v114 > 1, v115 + 1, 1, v104);
    *(_QWORD *)(v104 + 16) = v115 + 1;
    sub_D210(v138, (uint64_t)&v149[v104 + v115 * v103], &qword_3DCE40);
    v100 = v146;
    v102 = v148;
    (*(void (**)(char *, int64_t))(*(_QWORD *)&v146 + 8))(v105, v148);
    v101 += v103;
    --v83;
  }
  while (v83);
  swift_bridgeObjectRelease(v143);
  *(double *)&a1 = v100;
LABEL_63:
  v116 = v48 - v82;
  if (v48 - v82 <= 0.0)
    goto LABEL_73;
  v149 = *(char **)(v104 + 16);
  if (!v149)
    goto LABEL_73;
  v117 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
  v145 = *(_QWORD *)(v145 + 72);
  swift_bridgeObjectRetain(v104);
  v118 = 0;
  v119 = &type metadata for PriorityFlexibleLayoutWantsExtraSpace;
  v120 = v140;
  while (1)
  {
    v121 = (char *)(v104 + v117);
    sub_274B54(v104 + v117, v69);
    v122 = *(int *)(v147 + 48);
    v123 = *(void (**)(char *, uint64_t, int64_t))(a1 + 16);
    v124 = a1;
    v125 = *(double *)&v148;
    v123(v120, v69, v148);
    *(_OWORD *)&v120[v122] = *(_OWORD *)(v69 + v122);
    v126 = sub_274B9C();
    LayoutSubview.subscript.getter(v152, &type metadata for PriorityFlexibleLayoutWantsExtraSpace, &type metadata for PriorityFlexibleLayoutWantsExtraSpace, v126);
    LOBYTE(v122) = v152[0];
    v127 = *(void (**)(char *, ValueMetadata *))(v124 + 8);
    v127(v120, *(ValueMetadata **)&v125);
    sub_D1D4(v69, &qword_3DCE40);
    if ((v122 & 1) != 0)
      break;
    ++v118;
    *(double *)&a1 = v146;
    v117 += v145;
    v69 = v136;
    if (v149 == v118)
    {
      swift_bridgeObjectRelease(v104);
      goto LABEL_73;
    }
  }
  swift_bridgeObjectRelease(v104);
  if ((unint64_t)v118 >= *(_QWORD *)(v104 + 16))
  {
    __break(1u);
    goto LABEL_78;
  }
  v128 = v136;
  sub_274B54(v104 + v117, v136);
  v125 = v146;
  v129 = (double *)(v128 + *(int *)(v147 + 48));
  v48 = *v129;
  a9 = v129[1];
  v121 = v131;
  v119 = (ValueMetadata *)v148;
  (*(void (**)(char *, uint64_t, int64_t))(*(_QWORD *)&v146 + 32))(v131, v128, v148);
  if ((swift_isUniquelyReferenced_nonNull_native(v104) & 1) == 0)
LABEL_78:
    v104 = sub_E1E00(v104);
  if ((unint64_t)v118 < *(_QWORD *)(v104 + 16))
  {
    (*(void (**)(unint64_t, char *, ValueMetadata *))(*(_QWORD *)&v125 + 24))(v104 + v117, v121, v119);
    v130 = (double *)(v104 + v117 + *(int *)(v147 + 48));
    *v130 = v116 + v48;
    v130[1] = a9;
    v127(v121, v119);
LABEL_73:
    swift_bridgeObjectRetain(v104);
    sub_274514(v133, v104, a6, a7, v135, v139, a10);
    swift_bridgeObjectRelease_n(v104, 2);
    return;
  }
  __break(1u);
}

uint64_t sub_274514(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  double MinX;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  void (*v39)(_QWORD *, _QWORD);
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double *v48;
  double v49;
  double v50;
  CGFloat v51;
  double v52;
  uint64_t v53;
  double v54;
  double v55;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char v71;
  _QWORD v72[5];
  CGRect v73;
  CGRect v74;
  CGRect v75;

  v57 = a7;
  v70 = a2;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE40);
  v61 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v58 = (uint64_t)&v57 - v15;
  v16 = type metadata accessor for LayoutSubview(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LayoutSubviews(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v66 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9670);
  __chkstk_darwin(v23);
  v68 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF298);
  __chkstk_darwin(v25);
  v27 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v57 - v29;
  v73.origin.x = a3;
  v73.origin.y = a4;
  v73.size.width = a5;
  v73.size.height = a6;
  MinX = CGRectGetMinX(v73);
  v67 = v21;
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v65(v27, a1, v20);
  v32 = sub_274B14((unint64_t *)&qword_3D9678, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter(v20, v32);
  *(_QWORD *)&v27[*(int *)(v25 + 36)] = v72[0];
  sub_D210((uint64_t)v27, (uint64_t)v30, &qword_3DF298);
  v33 = &v30[*(int *)(v25 + 36)];
  v34 = *(_QWORD *)v33;
  v69 = v30;
  dispatch thunk of Collection.endIndex.getter(v72, v20, v32);
  if (v34 == v72[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v68, 1, 1, v16);
  }
  else
  {
    v35 = v68;
    v36 = (uint64_t)v69;
    v60 = v16;
    v63 = v33;
    v64 = v32;
    while (1)
    {
      v39 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v72, v33, v20, v32);
      (*(void (**)(char *))(v17 + 16))(v35);
      v39(v72, 0);
      v40 = v66;
      v65(v66, v36, v20);
      dispatch thunk of Collection.formIndex(after:)(v33, v20, v32);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v40, v20);
      v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v41(v35, 0, 1, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v35, 1, v16) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v35, v16);
      v42 = *(_QWORD *)(v70 + 16);
      v62 = v41;
      if (v42)
      {
        v43 = v61;
        v44 = v70 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
        v45 = v70;
        swift_bridgeObjectRetain(v70);
        v46 = *(_QWORD *)(v43 + 72);
        while (1)
        {
          sub_274B54(v44, (uint64_t)v13);
          if ((static LayoutSubview.== infix(_:_:)(v13, v19) & 1) != 0)
            break;
          sub_D1D4((uint64_t)v13, &qword_3DCE40);
          v44 += v46;
          if (!--v42)
          {
            swift_bridgeObjectRelease(v45);
            v16 = v60;
            goto LABEL_4;
          }
        }
        swift_bridgeObjectRelease(v45);
        v47 = v58;
        sub_D210((uint64_t)v13, v58, &qword_3DCE40);
        v48 = (double *)(v47 + *(int *)(v59 + 48));
        v49 = *v48;
        v50 = v48[1];
        v16 = v60;
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v47, v60);
        v74.origin.x = a3;
        v74.origin.y = a4;
        v74.size.width = a5;
        v74.size.height = a6;
        v51 = (CGRectGetHeight(v74) - v50) * 0.5;
        v75.origin.x = a3;
        v75.origin.y = a4;
        v75.size.width = a5;
        v75.size.height = a6;
        v52 = CGRectGetMinY(v75) + v51;
        v54 = static UnitPoint.topLeading.getter(v53);
        LOBYTE(v72[0]) = 0;
        v71 = 0;
        LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v49, 0, *(_QWORD *)&v50, 0, MinX, v52, v54, v55);
        if (v49 > 0.0)
          MinX = MinX + v49 + v57;
      }
LABEL_4:
      v36 = (uint64_t)v69;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      v32 = v64;
      v37 = *(_QWORD *)v63;
      v33 = v63;
      dispatch thunk of Collection.endIndex.getter(v72, v20, v64);
      v38 = v37 == v72[0];
      v35 = v68;
      if (v38)
      {
        v62(v68, 1, 1, v16);
        return sub_D1D4((uint64_t)v69, &qword_3DF298);
      }
    }
  }
  return sub_D1D4((uint64_t)v69, &qword_3DF298);
}

uint64_t sub_274A6C()
{
  LayoutProperties.init()();
  return LayoutProperties.stackOrientation.setter(0);
}

void sub_274A98(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_275D78(a1, a2 & 1, a3, a4 & 1, a5);
}

void sub_274AB0(unint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9)
{
  double *v9;

  sub_27383C(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9, *v9);
}

unint64_t sub_274AD0()
{
  unint64_t result;

  result = qword_3DF280;
  if (!qword_3DF280)
  {
    result = swift_getWitnessTable(&unk_3033E0, &type metadata for PriorityFlexibleHStackLayout);
    atomic_store(result, (unint64_t *)&qword_3DF280);
  }
  return result;
}

uint64_t sub_274B14(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for LayoutSubviews(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_274B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_274B9C()
{
  unint64_t result;

  result = qword_3DF290;
  if (!qword_3DF290)
  {
    result = swift_getWitnessTable(&unk_3034A8, &type metadata for PriorityFlexibleLayoutWantsExtraSpace);
    atomic_store(result, (unint64_t *)&qword_3DF290);
  }
  return result;
}

void sub_274BE0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  double v33;
  uint64_t v34;
  double v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  Swift::Int v39;
  uint64_t v40;
  Swift::Int v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  _BOOL4 v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  Swift::Int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::Int v59;
  unint64_t v60;
  uint64_t v61;
  Swift::Int v62;
  uint64_t v63;
  uint64_t v64;
  Swift::Int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Swift::Int v69;
  char *v70;
  uint64_t *v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  char *v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  double v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  uint64_t *v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t *v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  char v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  unint64_t v144;
  char *v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  Swift::Int v149;
  char *v150;
  uint64_t v151;
  Swift::Int v152;
  char *v153;
  uint64_t v154;
  char *v155;
  void (*v156)(_QWORD, _QWORD, _QWORD);
  uint64_t v157;
  Swift::Int v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t *v162;
  uint64_t v163;
  char *v164;
  Swift::Int v165;
  uint64_t v166;
  uint64_t v167;

  v2 = v1;
  v4 = type metadata accessor for LayoutSubview(0);
  v167 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v153 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v164 = (char *)&v147 - v7;
  __chkstk_darwin(v8);
  v159 = (char *)&v147 - v9;
  __chkstk_darwin(v10);
  v161 = (char *)&v147 - v11;
  v12 = a1;
  v13 = a1[1];
  v14 = _minimumMergeRunLength(_:)(v13);
  if (v14 >= v13)
  {
    if (v13 < 0)
      goto LABEL_141;
    if (v13)
      sub_27562C(0, v13, 1, v12);
    return;
  }
  if (v13 >= 0)
    v15 = v13;
  else
    v15 = v13 + 1;
  if (v13 < -1)
    goto LABEL_149;
  v149 = v14;
  if (v13 < 2)
  {
    v20 = (char *)_swiftEmptyArrayStorage;
    v19 = (char *)_swiftEmptyArrayStorage
        + ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80));
    v148 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      v22 = _swiftEmptyArrayStorage[2];
      v89 = v12;
      if (v22 >= 2)
        goto LABEL_104;
LABEL_117:
      v145 = v20;
LABEL_118:
      swift_bridgeObjectRelease(v145);
      v146 = v148;
      v148[2] = 0;
      swift_bridgeObjectRelease(v146);
      return;
    }
  }
  else
  {
    v16 = v15 >> 1;
    v17 = static Array._allocateBufferUninitialized(minimumCapacity:)(v15 >> 1, v4);
    *(_QWORD *)(v17 + 16) = v16;
    v18 = (*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
    v148 = (_QWORD *)v17;
    v19 = (char *)(v17 + v18);
  }
  v21 = 0;
  v20 = (char *)_swiftEmptyArrayStorage;
  v155 = v19;
  v162 = v12;
  v163 = v4;
  while (1)
  {
    v23 = v21;
    v24 = v21 + 1;
    v154 = v21;
    if (v21 + 1 >= v13)
    {
      v39 = v21 + 1;
      v49 = v162;
    }
    else
    {
      v25 = *v162;
      v157 = v25;
      v26 = v167;
      v27 = *(_QWORD *)(v167 + 72);
      v165 = v13;
      v166 = v27;
      v28 = *(void (**)(_QWORD, _QWORD, _QWORD))(v167 + 16);
      v28(v161, v25 + v27 * v24, v4);
      v29 = v25 + v27 * v23;
      v30 = v159;
      v31 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v159, v29, v4);
      v32 = v161;
      v33 = LayoutSubview.priority.getter(v31);
      v35 = LayoutSubview.priority.getter(v34);
      v36 = *(void (**)(_QWORD, _QWORD))(v26 + 8);
      v37 = v30;
      v23 = v154;
      v36(v37, v4);
      v36(v32, v4);
      v38 = v166;
      v39 = v23 + 2;
      if (v23 + 2 >= v165)
      {
        v13 = v165;
      }
      else
      {
        v150 = v20;
        v151 = v2;
        v160 = v166 * v24;
        v40 = v157;
        v158 = v166 * v39;
        while (1)
        {
          v41 = v39;
          v42 = v161;
          v43 = v163;
          v28(v161, v40 + v158, v163);
          v44 = v159;
          v45 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v159, v40 + v160, v43);
          v46 = LayoutSubview.priority.getter(v45);
          v48 = LayoutSubview.priority.getter(v47) >= v46;
          v36(v44, v43);
          v36(v42, v43);
          if (v35 < v33 == v48)
            break;
          v39 = v41 + 1;
          v38 = v166;
          v40 += v166;
          if (v165 == v41 + 1)
          {
            v13 = v165;
            v39 = v165;
            v20 = v150;
            v2 = v151;
            v4 = v163;
            v23 = v154;
            goto LABEL_24;
          }
        }
        v4 = v163;
        v39 = v41;
        v20 = v150;
        v2 = v151;
        v23 = v154;
        v13 = v165;
        v38 = v166;
      }
LABEL_24:
      v49 = v162;
      if (v35 < v33)
      {
        if (v39 < v23)
          goto LABEL_142;
        if (v23 < v39)
        {
          v150 = v20;
          v151 = v2;
          v50 = 0;
          v51 = v38 * (v39 - 1);
          v52 = v23;
          v53 = v39 * v38;
          v54 = v52;
          v55 = v52 * v38;
          do
          {
            if (v54 != v39 + v50 - 1)
            {
              v58 = v157;
              if (!v157)
                goto LABEL_147;
              v59 = v39;
              v60 = v157 + v55;
              v61 = v157 + v51;
              v160 = *(_QWORD *)(v167 + 32);
              ((void (*)(char *, uint64_t, uint64_t))v160)(v153, v157 + v55, v163);
              if (v55 < v51 || v60 >= v58 + v53)
              {
                v56 = v58 + v55;
                v57 = v58 + v51;
                v4 = v163;
                swift_arrayInitWithTakeFrontToBack(v56, v57, 1, v163);
              }
              else
              {
                v4 = v163;
                if (v55 != v51)
                  swift_arrayInitWithTakeBackToFront(v60, v61);
              }
              ((void (*)(uint64_t, char *, uint64_t))v160)(v61, v153, v4);
              v49 = v162;
              v39 = v59;
              v38 = v166;
            }
            ++v54;
            --v50;
            v51 -= v38;
            v53 -= v38;
            v55 += v38;
          }
          while (v54 < v39 + v50);
          v20 = v150;
          v2 = v151;
          v23 = v154;
          v13 = v165;
        }
      }
    }
    if (v39 >= v13)
      goto LABEL_56;
    if (__OFSUB__(v39, v23))
      goto LABEL_140;
    if (v39 - v23 >= v149)
      goto LABEL_56;
    if (__OFADD__(v23, v149))
      goto LABEL_143;
    v62 = v23 + v149 >= v13 ? v13 : v23 + v149;
    if (v62 < v23)
      break;
    if (v39 != v62)
    {
      v150 = v20;
      v151 = v2;
      v63 = *(_QWORD *)(v167 + 72);
      v156 = *(void (**)(_QWORD, _QWORD, _QWORD))(v167 + 16);
      v157 = v63;
      v64 = v63 * (v39 - 1);
      v65 = v39 * v63;
      v152 = v62;
      do
      {
        v67 = 0;
        v160 = v39;
        v158 = v65;
        while (1)
        {
          v68 = *v49;
          v165 = v65 + v67;
          v166 = v23;
          v69 = v65 + v67 + v68;
          v70 = v161;
          v71 = v49;
          v72 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v156;
          v156(v161, v69, v4);
          v73 = v64;
          v74 = v64 + v67 + v68;
          v75 = v71;
          v76 = v159;
          v77 = v72(v159, v74, v4);
          v78 = LayoutSubview.priority.getter(v77);
          v80 = LayoutSubview.priority.getter(v79);
          v81 = *(void (**)(_QWORD, _QWORD))(v167 + 8);
          v81(v76, v4);
          v81(v70, v4);
          if (v80 >= v78)
            break;
          v82 = *v75;
          if (!*v75)
            goto LABEL_145;
          v65 = v158;
          v83 = v82 + v158 + v67;
          v64 = v73;
          v84 = v82 + v73 + v67;
          v85 = *(void (**)(_QWORD, _QWORD, _QWORD))(v167 + 32);
          v4 = v163;
          v85(v164, v83, v163);
          swift_arrayInitWithTakeFrontToBack(v83, v84, 1, v4);
          v85(v84, v164, v4);
          v67 -= v157;
          v23 = v166 + 1;
          v66 = v160;
          v49 = v162;
          if (v160 == v166 + 1)
            goto LABEL_49;
        }
        v4 = v163;
        v66 = v160;
        v49 = v75;
        v64 = v73;
        v65 = v158;
LABEL_49:
        v39 = v66 + 1;
        v64 += v157;
        v65 += v157;
        v23 = v154;
      }
      while (v39 != v152);
      v39 = v152;
      v20 = v150;
      v2 = v151;
    }
LABEL_56:
    if (v39 < v23)
      goto LABEL_135;
    v86 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      v20 = sub_21E2F8(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
    v88 = *((_QWORD *)v20 + 2);
    v87 = *((_QWORD *)v20 + 3);
    v22 = v88 + 1;
    if (v88 >= v87 >> 1)
      v20 = sub_21E2F8((char *)(v87 > 1), v88 + 1, 1, v20);
    v89 = v86;
    *((_QWORD *)v20 + 2) = v22;
    v90 = v20 + 32;
    v91 = &v20[16 * v88 + 32];
    *(_QWORD *)v91 = v23;
    *((_QWORD *)v91 + 1) = v39;
    v160 = v39;
    if (v88)
    {
      while (1)
      {
        v92 = v22 - 1;
        if (v22 >= 4)
        {
          v97 = &v90[16 * v22];
          v98 = *((_QWORD *)v97 - 8);
          v99 = *((_QWORD *)v97 - 7);
          v103 = __OFSUB__(v99, v98);
          v100 = v99 - v98;
          if (v103)
            goto LABEL_124;
          v102 = *((_QWORD *)v97 - 6);
          v101 = *((_QWORD *)v97 - 5);
          v103 = __OFSUB__(v101, v102);
          v95 = v101 - v102;
          v96 = v103;
          if (v103)
            goto LABEL_125;
          v104 = v22 - 2;
          v105 = &v90[16 * v22 - 32];
          v107 = *(_QWORD *)v105;
          v106 = *((_QWORD *)v105 + 1);
          v103 = __OFSUB__(v106, v107);
          v108 = v106 - v107;
          if (v103)
            goto LABEL_127;
          v103 = __OFADD__(v95, v108);
          v109 = v95 + v108;
          if (v103)
            goto LABEL_130;
          if (v109 >= v100)
          {
            v127 = &v90[16 * v92];
            v129 = *(_QWORD *)v127;
            v128 = *((_QWORD *)v127 + 1);
            v103 = __OFSUB__(v128, v129);
            v130 = v128 - v129;
            if (v103)
              goto LABEL_134;
            v120 = v95 < v130;
            goto LABEL_93;
          }
        }
        else
        {
          if (v22 != 3)
          {
            v121 = *((_QWORD *)v20 + 4);
            v122 = *((_QWORD *)v20 + 5);
            v103 = __OFSUB__(v122, v121);
            v114 = v122 - v121;
            v115 = v103;
            goto LABEL_87;
          }
          v94 = *((_QWORD *)v20 + 4);
          v93 = *((_QWORD *)v20 + 5);
          v103 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          v96 = v103;
        }
        if ((v96 & 1) != 0)
          goto LABEL_126;
        v104 = v22 - 2;
        v110 = &v90[16 * v22 - 32];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v113 = __OFSUB__(v111, v112);
        v114 = v111 - v112;
        v115 = v113;
        if (v113)
          goto LABEL_129;
        v116 = &v90[16 * v92];
        v118 = *(_QWORD *)v116;
        v117 = *((_QWORD *)v116 + 1);
        v103 = __OFSUB__(v117, v118);
        v119 = v117 - v118;
        if (v103)
          goto LABEL_132;
        if (__OFADD__(v114, v119))
          goto LABEL_133;
        if (v114 + v119 >= v95)
        {
          v120 = v95 < v119;
LABEL_93:
          if (v120)
            v92 = v104;
          goto LABEL_95;
        }
LABEL_87:
        if ((v115 & 1) != 0)
          goto LABEL_128;
        v123 = &v90[16 * v92];
        v125 = *(_QWORD *)v123;
        v124 = *((_QWORD *)v123 + 1);
        v103 = __OFSUB__(v124, v125);
        v126 = v124 - v125;
        if (v103)
          goto LABEL_131;
        if (v126 < v114)
          goto LABEL_14;
LABEL_95:
        v131 = v92 - 1;
        if (v92 - 1 >= v22)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v89)
          goto LABEL_146;
        v132 = v20;
        v133 = &v90[16 * v131];
        v134 = *(_QWORD *)v133;
        v135 = &v90[16 * v92];
        v136 = *((_QWORD *)v135 + 1);
        sub_2758A0(*v89 + *(_QWORD *)(v167 + 72) * *(_QWORD *)v133, *v89 + *(_QWORD *)(v167 + 72) * *(_QWORD *)v135, *v89 + *(_QWORD *)(v167 + 72) * v136, (unint64_t)v155);
        if (v2)
        {
LABEL_115:
          v145 = v132;
          goto LABEL_118;
        }
        if (v136 < v134)
          goto LABEL_121;
        if (v92 > *((_QWORD *)v132 + 2))
          goto LABEL_122;
        *(_QWORD *)v133 = v134;
        *(_QWORD *)&v90[16 * v131 + 8] = v136;
        v137 = *((_QWORD *)v132 + 2);
        if (v92 >= v137)
          goto LABEL_123;
        v20 = v132;
        v22 = v137 - 1;
        memmove(&v90[16 * v92], v135 + 16, 16 * (v137 - 1 - v92));
        *((_QWORD *)v132 + 2) = v137 - 1;
        v89 = v162;
        v4 = v163;
        if (v137 <= 2)
          goto LABEL_14;
      }
    }
    v22 = 1;
LABEL_14:
    v13 = v89[1];
    v21 = v160;
    if (v160 >= v13)
    {
      v19 = v155;
      if (v22 < 2)
        goto LABEL_117;
LABEL_104:
      v138 = *v89;
      while (1)
      {
        v139 = v22 - 2;
        if (v22 < 2)
          goto LABEL_136;
        if (!v138)
          goto LABEL_148;
        v132 = v20;
        v140 = v20 + 32;
        v141 = *(_QWORD *)&v20[16 * v139 + 32];
        v142 = *(_QWORD *)&v20[16 * v22 + 24];
        sub_2758A0(v138 + *(_QWORD *)(v167 + 72) * v141, v138 + *(_QWORD *)(v167 + 72) * *(_QWORD *)&v140[16 * v22 - 16], v138 + *(_QWORD *)(v167 + 72) * v142, (unint64_t)v19);
        if (v2)
          goto LABEL_115;
        if (v142 < v141)
          goto LABEL_137;
        if ((swift_isUniquelyReferenced_nonNull_native(v132) & 1) == 0)
          v132 = sub_21E728((uint64_t)v132);
        if (v139 >= *((_QWORD *)v132 + 2))
          goto LABEL_138;
        v143 = &v132[16 * v139 + 32];
        *(_QWORD *)v143 = v141;
        *((_QWORD *)v143 + 1) = v142;
        v144 = *((_QWORD *)v132 + 2);
        if (v22 > v144)
          goto LABEL_139;
        v20 = v132;
        memmove(&v132[16 * v22 + 16], &v132[16 * v22 + 32], 16 * (v144 - v22));
        *((_QWORD *)v132 + 2) = v144 - 1;
        v22 = v144 - 1;
        if (v144 <= 2)
          goto LABEL_117;
      }
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_27562C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;

  v37 = a1;
  v7 = type metadata accessor for LayoutSubview(0);
  v8 = *(_QWORD **)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v44 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v40 = (char *)&v35 - v12;
  result = __chkstk_darwin(v11);
  v39 = (char *)&v35 - v14;
  v43 = a3;
  v36 = a2;
  if (a3 != a2)
  {
    v15 = v8[9];
    v38 = (uint64_t (*)(char *, uint64_t, uint64_t))v8[2];
    v47 = v15 * (v43 - 1);
    v41 = v15;
    v16 = v15 * v43;
    v45 = a4;
LABEL_5:
    v17 = 0;
    v46 = v37;
    v42 = v16;
    while (1)
    {
      v18 = *a4;
      v19 = v16 + v17 + *a4;
      v20 = v39;
      v21 = v8;
      v22 = v38;
      v38(v39, v19, v7);
      v23 = v40;
      v24 = v22(v40, v47 + v17 + v18, v7);
      v8 = v21;
      v16 = v42;
      v25 = LayoutSubview.priority.getter(v24);
      v27 = LayoutSubview.priority.getter(v26);
      v28 = (void (*)(char *, uint64_t))v8[1];
      v28(v23, v7);
      v29 = v20;
      a4 = v45;
      result = ((uint64_t (*)(char *, uint64_t))v28)(v29, v7);
      if (v27 >= v25)
      {
LABEL_4:
        v47 += v41;
        v16 += v41;
        if (++v43 == v36)
          return result;
        goto LABEL_5;
      }
      v30 = *a4;
      if (!*a4)
        break;
      v31 = v30 + v16 + v17;
      v32 = v30 + v47 + v17;
      v33 = v8;
      v34 = (void (*)(char *, uint64_t, uint64_t))v8[4];
      v34(v44, v31, v7);
      swift_arrayInitWithTakeFrontToBack(v31, v32, 1, v7);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v34)(v32, v44, v7);
      v17 -= v41;
      a4 = v45;
      ++v46;
      v8 = v33;
      if (v43 == v46)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2758A0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  double v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  double v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  BOOL v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t result;
  uint64_t v52;
  unint64_t v53;
  uint64_t (*v54)(char *, unint64_t, uint64_t);
  unint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;

  v8 = type metadata accessor for LayoutSubview(0);
  __chkstk_darwin(v8);
  v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v57 = v13;
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_62;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_63;
  v16 = (uint64_t)(a2 - a1) / v14;
  v60 = a1;
  v59 = a4;
  v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v17, v8);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v31 = a4 + v19;
      v58 = a4 + v19;
      v60 = a2;
      v55 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        v33 = -v14;
        v34 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v57 + 16);
        v53 = a4;
        v54 = v34;
        do
        {
          v35 = a3 + v33;
          v36 = v54;
          v54(v12, v31 + v33, v8);
          v37 = a2 + v33;
          v38 = a3;
          v39 = v12;
          v40 = v56;
          v41 = v36(v56, a2 + v33, v8);
          v42 = LayoutSubview.priority.getter(v41);
          v44 = LayoutSubview.priority.getter(v43);
          v45 = *(void (**)(char *, uint64_t))(v57 + 8);
          v46 = v40;
          v12 = v39;
          v45(v46, v8);
          v45(v39, v8);
          if (v44 >= v42)
          {
            v49 = v58;
            v50 = v58 + v33;
            v58 += v33;
            if (v38 < v49 || v35 >= v49)
            {
              swift_arrayInitWithTakeFrontToBack(v35, v50, 1, v8);
            }
            else if (v38 != v49)
            {
              swift_arrayInitWithTakeBackToFront(v35, v50);
            }
            v37 = a2;
            v48 = v53;
          }
          else
          {
            if (v38 < a2 || v35 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v35, a2 + v33, 1, v8);
              v48 = v53;
            }
            else
            {
              v47 = v38 == a2;
              v48 = v53;
              if (!v47)
                swift_arrayInitWithTakeBackToFront(v35, a2 + v33);
            }
            v60 += v33;
          }
          v31 = v58;
          if (v58 <= v48)
            break;
          a2 = v37;
          a3 = v35;
        }
        while (v37 > v55);
      }
      goto LABEL_60;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v16, v8);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v55 = a4 + v18;
    v58 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      v21 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
      do
      {
        v21(v12, a2, v8);
        v22 = v56;
        v23 = ((uint64_t (*)(char *, unint64_t, uint64_t))v21)(v56, a4, v8);
        v24 = LayoutSubview.priority.getter(v23);
        v26 = LayoutSubview.priority.getter(v25);
        v27 = *(void (**)(char *, uint64_t))(v57 + 8);
        v27(v22, v8);
        v27(v12, v8);
        v28 = v60;
        if (v26 >= v24)
        {
          v30 = v59 + v14;
          if (v60 < v59 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack(v60, v59, 1, v8);
          }
          else if (v60 != v59)
          {
            swift_arrayInitWithTakeBackToFront(v60, v59);
          }
          v59 = v30;
          v29 = a2;
        }
        else
        {
          v29 = a2 + v14;
          if (v60 < a2 || v60 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack(v60, a2, 1, v8);
          }
          else if (v60 == a2)
          {
            v28 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v60, a2);
          }
        }
        v60 = v28 + v14;
        a4 = v59;
        if (v59 >= v55)
          break;
        a2 = v29;
      }
      while (v29 < a3);
    }
LABEL_60:
    sub_21E610(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_275D78(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _QWORD);
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  _BYTE v29[32];
  _BYTE v30[8];
  _QWORD *v31;

  v25 = a3;
  v26 = a1;
  v27 = a2;
  v7 = type metadata accessor for LayoutSubview(0);
  v24 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LayoutSubviews(0);
  v11 = sub_274B14((unint64_t *)&qword_3D9678, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v12 = dispatch thunk of Collection.count.getter(v10, v11);
  v13 = _swiftEmptyArrayStorage;
  if (!v12)
  {
LABEL_9:
    sub_2C4BFC((uint64_t)v13);
    swift_bridgeObjectRelease(v13);
    return;
  }
  v14 = v12;
  v31 = _swiftEmptyArrayStorage;
  sub_F3470(0, v12 & ~(v12 >> 63), 0);
  dispatch thunk of Collection.startIndex.getter(v10, v11);
  if ((v14 & 0x8000000000000000) == 0)
  {
    HIDWORD(v23) = a4 & 1;
    do
    {
      v15 = a5;
      v16 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v29, v30, v10, v11);
      v17 = v24;
      (*(void (**)(char *))(v24 + 16))(v9);
      v16(v29, 0);
      v29[0] = v27 & 1;
      v28 = BYTE4(v23);
      v18 = LayoutSubview.sizeThatFits(_:)(v26);
      v20 = v19;
      (*(void (**)(char *, uint64_t, double))(v17 + 8))(v9, v7, v18);
      v13 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
      {
        sub_F3470(0, v13[2] + 1, 1);
        v13 = v31;
      }
      v22 = v13[2];
      v21 = v13[3];
      if (v22 >= v21 >> 1)
      {
        sub_F3470(v21 > 1, v22 + 1, 1);
        v13 = v31;
      }
      v13[2] = v22 + 1;
      v13[v22 + 4] = v20;
      a5 = v15;
      dispatch thunk of Collection.formIndex(after:)(v30, v10, v11);
      --v14;
    }
    while (v14);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t ContextMenuOverlay.init(menuProvider:padding:view:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t result;

  result = sub_1B738(a1, a4);
  *(double *)(a4 + 40) = a5;
  *(double *)(a4 + 48) = a6;
  *(double *)(a4 + 56) = a7;
  *(double *)(a4 + 64) = a8;
  *(_QWORD *)(a4 + 72) = a2;
  *(_QWORD *)(a4 + 80) = a3;
  return result;
}

uint64_t ContextMenuOverlay.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _BYTE v36[40];
  _BYTE v37[48];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v33 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF2A0);
  v9 = type metadata accessor for ModifiedContent(0, v4, v8);
  v32 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v31 - v14;
  (*(void (**)(__n128))(v2 + 72))(v13);
  v16 = sub_1D5D4(v2, (uint64_t)v36);
  v31 = *(_OWORD *)(v2 + 40);
  v18 = *(_QWORD *)(v2 + 56);
  v17 = *(_QWORD *)(v2 + 64);
  v19 = static Edge.Set.all.getter(v16);
  sub_276240((uint64_t)v36, (uint64_t)v37);
  v37[40] = v19;
  v38 = v31;
  v39 = v18;
  v40 = v17;
  v41 = 0;
  v20 = sub_27627C((uint64_t)v36);
  v22 = static Alignment.center.getter(v20, v21);
  v24 = v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF2A8);
  v26 = *(_QWORD *)(a1 + 24);
  v27 = sub_2762B0();
  View.overlay<A>(_:alignment:)(v37, v22, v24, v4, v25, v26, v27);
  sub_27631C((uint64_t)v37);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v28 = sub_27635C();
  v34 = v26;
  v35 = v28;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  sub_1ECBD0((uint64_t)v11, v9, (uint64_t)v15);
  v29 = *(void (**)(char *, uint64_t))(v32 + 8);
  v29(v11, v9);
  sub_1E82A0((uint64_t)v15, v9, v33);
  return ((uint64_t (*)(char *, uint64_t))v29)(v15, v9);
}

uint64_t sub_276240(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PrototypeUpNextSingleShowControllerView(a2, a1);
  return a2;
}

uint64_t sub_27627C(uint64_t a1)
{
  destroy for PrototypeUpNextSingleShowControllerView();
  return a1;
}

unint64_t sub_2762B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DF2B0;
  if (!qword_3DF2B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF2A8);
    sub_14A5F8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DF2B0);
  }
  return result;
}

uint64_t sub_27631C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF2A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_27635C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DF2B8[0];
  if (!qword_3DF2B8[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF2A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v1);
    atomic_store(result, qword_3DF2B8);
  }
  return result;
}

uint64_t sub_2763A8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of ContextMenuOverlay.body>>, 1);
}

double sub_2763E0(_QWORD *a1)
{
  double result;

  __swift_destroy_boxed_opaque_existential_0(a1);
  *(_QWORD *)&result = swift_release(a1[10]).n128_u64[0];
  return result;
}

uint64_t sub_276404(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  swift_retain(v5);
  return a1;
}

_QWORD *sub_27645C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  v5 = a2[9];
  v4 = a2[10];
  v6 = a1[10];
  a1[9] = v5;
  a1[10] = v4;
  swift_retain(v4);
  swift_release(v6);
  return a1;
}

uint64_t sub_2764BC(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v5);
  return a1;
}

uint64_t sub_276514(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_27655C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ContextMenuOverlay(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContextMenuOverlay);
}

uint64_t sub_2765BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF2A0);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_27635C();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

uint64_t sub_27661C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_19C4C(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  v6 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState, v9, 33, 0);
  sub_F900((uint64_t)v5, v6);
  swift_endAccess(v9);
  sub_EC7C();
  return sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
}

void sub_2766D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = (char *)&v8 - v5;
  if (*(_QWORD *)(v1 + 32))
  {
    sub_19C4C(a1, (uint64_t)&v8 - v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    v7 = (char *)&loc_27676C + 4 * byte_3035A0[swift_getEnumCaseMultiPayload(v6, v3)];
    __asm { BR              X10 }
  }
}

uint64_t sub_2767E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C(a1, (uint64_t)v4, v5);
  return sub_2632B0((uint64_t)v4);
}

uint64_t sub_276864(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v13[24];

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v13, 33, 0);
  sub_F900(a1, v6);
  swift_endAccess(v13);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType();
    sub_19C4C(v6, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v5, ObjectType, v9);
    swift_unknownObjectRelease(v8);
    sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  }
  return sub_FA4C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
}

_QWORD *sub_276978(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;

  v3 = v2;
  v6 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[5] = 0;
  swift_unknownObjectWeakInit(v3 + 4, 0);
  v3[2] = a2;
  v9 = swift_retain(a2);
  v10 = EpisodeStateController.stateMachine(for:)(a1, v9);
  v3[3] = v10;
  v11 = swift_retain(v10);
  dispatch thunk of EpisodeStateMachine.currentState.getter(v11);
  swift_release(v10);
  sub_AF608((uint64_t)v8, (uint64_t)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState);
  v12 = v3[3];
  v13 = swift_allocObject(&unk_38EEA8, 24, 7);
  swift_weakInit(v13 + 16, v3);
  swift_retain(v12);
  v14 = swift_retain(v3);
  dispatch thunk of EpisodeStateMachine.addStateTransitionObserver(_:action:)(v14);
  swift_release(v12);
  swift_release(v3);
  swift_release(v13);
  swift_release(a2);
  return v3;
}

_QWORD *sub_276AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;

  v4 = v3;
  v8 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[5] = 0;
  swift_unknownObjectWeakInit(v4 + 4, 0);
  v4[2] = a3;
  swift_retain_n(a3, 2);
  v11 = EpisodeStateController.stateMachine(for:)(a1, a2);
  swift_release(a3);
  swift_bridgeObjectRelease(a2);
  v4[3] = v11;
  v12 = swift_retain(v11);
  dispatch thunk of EpisodeStateMachine.currentState.getter(v12);
  swift_release(v11);
  sub_AF608((uint64_t)v10, (uint64_t)v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState);
  v13 = v4[3];
  v14 = swift_allocObject(&unk_38EEA8, 24, 7);
  swift_weakInit(v14 + 16, v4);
  swift_retain(v13);
  v15 = swift_retain(v4);
  dispatch thunk of EpisodeStateMachine.addStateTransitionObserver(_:action:)(v15);
  swift_release(v13);
  swift_release(v4);
  swift_release(v14);
  swift_release(a3);
  return v4;
}

double sub_276BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  _BYTE v10[24];

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v10, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    dispatch thunk of EpisodeStateMachine.currentState.getter();
    sub_276864((uint64_t)v5);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_276C98()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  sub_10DBC8((uint64_t)(v0 + 4));
  sub_FA4C((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_276CEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_19C4C(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  v6 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState, v9, 33, 0);
  sub_F900((uint64_t)v5, v6);
  swift_endAccess(v9);
  sub_2C58BC();
  sub_2C5A24();
  return sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
}

void _s23ShelfKitCollectionViews9PlayStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[5];
  uint64_t v19;

  v19 = type metadata accessor for Date(0);
  v18[3] = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v18[1] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF4E8);
  __chkstk_darwin(v5);
  v18[4] = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  v8 = __chkstk_darwin(v7);
  v18[2] = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = type metadata accessor for PlayState(0);
  v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF4F0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_19C4C(a1, (uint64_t)v15, type metadata accessor for PlayState);
  sub_19C4C(a2, v16, type metadata accessor for PlayState);
  v17 = (char *)sub_276F94 + 4 * byte_3035A6[swift_getEnumCaseMultiPayload(v15, v10)];
  __asm { BR              X10 }
}

BOOL sub_276F94()
{
  uint64_t v0;
  double *v1;
  double *v2;
  uint64_t v3;
  double v4;
  _BOOL8 v5;

  sub_19C4C(v0, (uint64_t)v1, type metadata accessor for PlayState);
  v4 = v1[1];
  if (swift_getEnumCaseMultiPayload(v2, v3))
  {
    sub_D1D4(v0, &qword_3DF4F0);
    return 0;
  }
  if (*v1 != *v2)
  {
    sub_FA4C(v0, type metadata accessor for PlayState);
    return 0;
  }
  v5 = v4 == v2[1];
  sub_FA4C(v0, type metadata accessor for PlayState);
  return v5;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlayState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v11);
  }
  else if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAD80);
    *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for PlayState(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for Date(0);
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for PlayState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Date(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAD80);
    *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for PlayState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_FA4C((uint64_t)a1, type metadata accessor for PlayState);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Date(0);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAD80);
      *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for PlayState(uint64_t a1)
{
  return sub_AE00(a1, qword_3DF3B0, (uint64_t)&nominal type descriptor for PlayState);
}

void *initializeWithTake for PlayState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Date(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAD80);
    *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PlayState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_FA4C((uint64_t)a1, type metadata accessor for PlayState);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Date(0);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DAD80);
      *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_27784C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  v5[0] = &unk_303608;
  sub_2778D0(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(v2 - 8) + 64, &unk_303620);
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
  }
}

void sub_2778D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D4C40)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D4C40);
  }
}

uint64_t sub_277924()
{
  return type metadata accessor for PlaybackStatusPresenter(0);
}

uint64_t type metadata accessor for PlaybackStatusPresenter(uint64_t a1)
{
  return sub_AE00(a1, qword_3DF410, (uint64_t)&nominal type descriptor for PlaybackStatusPresenter);
}

uint64_t sub_277940(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_3036A8;
  result = type metadata accessor for EpisodePlayState(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2779C8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_2779EC(uint64_t a1)
{
  uint64_t v1;

  return sub_276BF0(a1, v1);
}

unint64_t sub_277A04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DF4F8;
  if (!qword_3DF4F8)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_3DF4F8);
  }
  return result;
}

double sub_277A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(__n128);
  __n128 v5;
  double result;

  v4 = *(void (**)(__n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  *(_QWORD *)&result = swift_unknownObjectRelease(a2).n128_u64[0];
  return result;
}

double sub_277AEC()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  double *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double result;

  v1 = objc_msgSend(v0, "presentedViewController");
  objc_msgSend(v1, "preferredContentSize");
  v3 = v2;

  v4 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_configuration];
  if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_configuration + 33] != 1
    || (v5 = objc_msgSend(v0, "presentedViewController"),
        objc_msgSend(v5, "preferredContentSize"),
        v7 = v6,
        v9 = v8,
        v5,
        v7 == 0.0)
    && v9 == 0.0)
  {
    v3 = v4[7];
  }
  v10 = objc_msgSend(v0, "presentedViewController");
  objc_msgSend(v10, "preferredContentSize");
  v12 = v11;

  if (v12 == 0.0)
  {
    v13 = v4[8];
  }
  else
  {
    v14 = objc_msgSend(v0, "presentedViewController");
    objc_msgSend(v14, "preferredContentSize");
    v13 = v15;

  }
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_dimmingView], "frame");
  if (v17 >= v13)
    v18 = v13;
  else
    v18 = v17;
  v19 = 0.0;
  v20 = v17 + -160.0;
  if (v17 + -160.0 >= v13)
    v20 = v13;
  v21 = (v17 - v20) * 0.5;
  if (((_BYTE)v4[9] & 1) != 0)
  {
    v22 = v18;
  }
  else
  {
    v19 = v21;
    v22 = v20;
  }
  v23 = (v16 - v3) * 0.5 + v4[5];
  v24 = v19 + v4[6];
  v25 = v3;
  *(_QWORD *)&result = (unint64_t)CGRectIntegral(*(CGRect *)(&v22 - 3));
  return result;
}

void sub_277C78(uint64_t a1)
{
  char *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, "preferredContentSizeDidChangeForChildContentContainer:", a1);
  v3 = objc_msgSend(v1, "presentedViewController");
  v4 = objc_msgSend(v3, "view");

  if (v4)
  {
    objc_msgSend(v4, "setFrame:", sub_277AEC());

    v5 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_shadowView];
    v6 = objc_msgSend(v1, "presentedViewController");
    v7 = objc_msgSend(v6, "view");

    if (v7)
    {
      objc_msgSend(v7, "frame");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      objc_msgSend(v5, "setFrame:", v9, v11, v13, v15);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_277E0C()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, "containerViewWillLayoutSubviews");
  v1 = objc_msgSend(v0, "presentedViewController");
  v2 = objc_msgSend(v1, "view");

  if (v2)
  {
    objc_msgSend(v2, "setFrame:", sub_277AEC());

    v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_shadowView];
    v4 = objc_msgSend(v0, "presentedViewController");
    v5 = objc_msgSend(v4, "view");

    if (v5)
    {
      objc_msgSend(v5, "frame");
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;

      objc_msgSend(v3, "setFrame:", v7, v9, v11, v13);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_277F78()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  char *v4;
  id v5;
  void *v6;
  _UNKNOWN **v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  void *v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  void *v39;
  double Width;
  id v41;
  _UNKNOWN **v42;
  char *v43;
  id v44;
  char *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  void *v85;
  _QWORD aBlock[5];
  uint64_t v87;
  objc_super v88;
  CGRect v89;
  CGRect v90;

  v1 = v0;
  v88.receiver = v0;
  v88.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v88, "presentationTransitionWillBegin");
  v2 = objc_msgSend(v0, "containerView");
  if (v2)
  {
    v3 = v2;
    v4 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_configuration];
    if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_configuration + 33] & 1) == 0)
    {
      v5 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "didTap:");
      objc_msgSend(v5, "setDelegate:", v0);
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_dimmingView], "addGestureRecognizer:", v5);
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_dismissButton], "addTarget:action:forControlEvents:", v0, "didTap:", 64);

    }
    v6 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_dimmingView];
    v7 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
    v8 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.45);
    objc_msgSend(v6, "setBackgroundColor:", v8);

    if (v4[32] == 1)
    {
      if (*((_QWORD *)v4 + 2) | *((_QWORD *)v4 + 1) | *(_QWORD *)v4 | *((_QWORD *)v4 + 3))
      {
        v9 = v3;
        v10 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_sourceViewController];
        v11 = objc_msgSend(v10, "view");
        if (!v11)
        {
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        v12 = v11;
        v13 = objc_msgSend(v11, "superview");

        if (!v13)
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        v14 = objc_msgSend(v10, "view");
        if (!v14)
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        v15 = v14;
        objc_msgSend(v14, "frame");
        v17 = v16;
        v19 = v18;
        v21 = v20;
        v23 = v22;

        v24 = objc_msgSend(v10, "view");
        if (!v24)
        {
LABEL_38:
          __break(1u);
          return;
        }
        v25 = v24;
        v26 = objc_msgSend(v24, "window");

        objc_msgSend(v13, "convertRect:toView:", v26, v17, v19, v21, v23);
        v28 = v27;
        v30 = v29;
        v32 = v31;
        v34 = v33;

        v3 = v9;
        v7 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
      }
      else
      {
        objc_msgSend(v3, "frame");
        v28 = v35;
        v30 = v36;
        v32 = v37;
        v34 = v38;
      }
    }
    else
    {
      v28 = *(double *)v4;
      v30 = *((double *)v4 + 1);
      v32 = *((double *)v4 + 2);
      v34 = *((double *)v4 + 3);
    }
    objc_msgSend(v6, "setFrame:", v28, v30, v32, v34);
    objc_msgSend(v6, "setAutoresizingMask:", 18);
    objc_msgSend(v6, "setAlpha:", 0.0);
    v85 = v3;
    objc_msgSend(v3, "addSubview:", v6);
    v39 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_dismissButton];
    objc_msgSend(v6, "frame");
    Width = CGRectGetWidth(v89);
    objc_msgSend(v6, "frame");
    objc_msgSend(v39, "setFrame:", 0.0, 0.0, Width, CGRectGetHeight(v90) * 0.1);
    objc_msgSend(v39, "setAutoresizingMask:", 50);
    v41 = objc_msgSend((id)objc_opt_self(v7[362]), "clearColor");
    objc_msgSend(v39, "setBackgroundColor:", v41);

    v42 = v7;
    v43 = *(char **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_shadowView];
    objc_msgSend(v43, "setFrame:", sub_277AEC());
    objc_msgSend(v43, "setAutoresizingMask:", 45);
    v44 = objc_msgSend(objc_allocWithZone((Class)v42[362]), "initWithWhite:alpha:", 0.0, 0.24);
    v45 = &v43[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
    v46 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
    *(_QWORD *)v45 = v44;
    *(_OWORD *)(v45 + 8) = xmmword_2FDE80;
    *((_QWORD *)v45 + 3) = 0x4000000000000000;
    v47 = v44;

    sub_CC328();
    objc_msgSend(v6, "addSubview:", v43);
    objc_msgSend(v6, "addSubview:", v39);
    v48 = objc_msgSend(v1, "presentedViewController");
    v49 = objc_msgSend(v48, "view");

    if (v49)
    {
      objc_msgSend(v49, "setFrame:", sub_277AEC());

      v50 = objc_msgSend(v1, "presentedViewController");
      v51 = objc_msgSend(v50, "view");

      if (v51)
      {
        objc_msgSend(v51, "setClipsToBounds:", 1);

        v52 = objc_msgSend(v1, "presentedViewController");
        v53 = objc_msgSend(v52, "view");

        if (v53)
        {
          v54 = objc_msgSend(v53, "layer");

          objc_msgSend(v54, "setCornerRadius:", 6.0);
          v55 = objc_msgSend(v1, "presentedViewController");
          v56 = objc_msgSend(v55, "view");

          if (v56)
          {
            v57 = objc_msgSend(v56, "layer");

            objc_msgSend(v57, "setCornerCurve:", kCACornerCurveContinuous);
            v58 = objc_msgSend(v1, "presentedViewController");
            v59 = objc_msgSend(v58, "view");

            if (v59)
            {
              v60 = objc_msgSend(v59, "layer");

              objc_msgSend(v60, "setMaskedCorners:", *((_QWORD *)v4 + 10));
              v61 = OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_cardRim;
              objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_cardRim], "setAutoresizingMask:", 18);
              v62 = *(id *)&v1[v61];
              v63 = objc_msgSend(v1, "presentedViewController");
              v64 = objc_msgSend(v63, "view");

              if (v64)
              {
                objc_msgSend(v64, "bounds");
                v66 = v65;
                v68 = v67;
                v70 = v69;
                v72 = v71;

                objc_msgSend(v62, "setFrame:", v66, v68, v70, v72);
                v73 = objc_msgSend(v1, "presentedViewController");
                v74 = objc_msgSend(v73, "view");

                if (v74)
                {
                  objc_msgSend(v74, "addSubview:", *(_QWORD *)&v1[v61]);

                  v75 = objc_msgSend(v1, "presentedViewController");
                  v76 = objc_msgSend(v75, "view");

                  if (v76)
                  {
                    objc_msgSend(v76, "setAutoresizingMask:", 45);

                    v77 = objc_msgSend(v1, "presentedViewController");
                    v78 = objc_msgSend(v77, "view");

                    if (v78)
                    {
                      objc_msgSend(v6, "addSubview:", v78);

                      v79 = objc_msgSend(v1, "presentedViewController");
                      v80 = objc_msgSend(v79, "transitionCoordinator");

                      if (v80)
                      {
                        v81 = swift_allocObject(&unk_38EF30, 24, 7);
                        *(_QWORD *)(v81 + 16) = v1;
                        aBlock[4] = sub_279470;
                        v87 = v81;
                        aBlock[0] = _NSConcreteStackBlock;
                        aBlock[1] = 1107296256;
                        aBlock[2] = sub_277A4C;
                        aBlock[3] = &block_descriptor_7_4;
                        v82 = _Block_copy(aBlock);
                        v83 = v87;
                        v84 = v1;
                        objc_msgSend(v80, "animateAlongsideTransition:completion:", v82, 0, swift_release(v83).n128_f64[0]);

                        _Block_release(v82);
                        swift_unknownObjectRelease(v80);
                      }
                      else
                      {

                      }
                      return;
                    }
                    goto LABEL_34;
                  }
LABEL_33:
                  __break(1u);
LABEL_34:
                  __break(1u);
                  goto LABEL_35;
                }
LABEL_32:
                __break(1u);
                goto LABEL_33;
              }
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
}

double sub_278940()
{
  void *v0;
  id v1;
  id v2;
  double result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "dismissalTransitionWillBegin");
  v1 = objc_msgSend(v0, "presentedViewController");
  v2 = objc_msgSend(v1, "transitionCoordinator");

  if (v2)
  {
    v4 = swift_allocObject(&unk_38EEE0, 24, 7);
    *(_QWORD *)(v4 + 16) = v0;
    v8[4] = sub_279438;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_277A4C;
    v8[3] = &block_descriptor_65;
    v5 = _Block_copy(v8);
    v6 = v9;
    v7 = v0;
    objc_msgSend(v2, "animateAlongsideTransition:completion:", v5, 0, swift_release(v6).n128_f64[0]);
    _Block_release(v5);
    *(_QWORD *)&result = swift_unknownObjectRelease(v2).n128_u64[0];
  }
  return result;
}

uint64_t type metadata accessor for CardPresentationController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews26CardPresentationController);
}

char *sub_278D44(double a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  objc_super v32;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews7CardRim_innerRim;
  v10 = objc_allocWithZone((Class)CALayer);
  v11 = v2;
  *(_QWORD *)&v2[v9] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews7CardRim_rimWidth] = 0;

  v32.receiver = v11;
  v32.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v32, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FloatingPointRoundingRule.up(_:), v5);
  v13 = (char *)v12;
  v14 = objc_msgSend(v13, "traitCollection");
  objc_msgSend(v14, "displayScale");
  v16 = v15;
  if (v15 < COERCE_DOUBLE(1))
  {
    v17 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v17, "scale");
    v16 = v18;

  }
  v19 = CGFloat.rounded(_:toScale:)((uint64_t)v8, v16, 0.5);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews7CardRim_rimWidth;
  *(double *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews7CardRim_rimWidth] = v19;
  v21 = OBJC_IVAR____TtC23ShelfKitCollectionViews7CardRim_innerRim;
  v22 = *(void **)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews7CardRim_innerRim];
  objc_msgSend(v22, "setBorderWidth:", 1.0);
  objc_msgSend(v22, "setCornerRadius:", a1);
  objc_msgSend(v22, "setCornerCurve:", kCACornerCurveContinuous);
  v23 = objc_msgSend(v13, "layer");
  objc_msgSend(v23, "addSublayer:", v22);

  v24 = objc_msgSend(v13, "layer");
  objc_msgSend(v24, "setBorderWidth:", *(double *)&v13[v20]);

  v25 = objc_msgSend(v13, "layer");
  objc_msgSend(v25, "setCornerRadius:", a1);

  v26 = objc_msgSend(v13, "layer");
  objc_msgSend(v26, "setCornerCurve:", kCACornerCurveContinuous);

  v27 = *(void **)&v13[v21];
  if (qword_3CF010 != -1)
    swift_once(&qword_3CF010, sub_E164);
  v28 = objc_msgSend((id)qword_3FA870, "CGColor");
  objc_msgSend(v27, "setBorderColor:", v28);

  v29 = objc_msgSend(v13, "layer");
  if (qword_3CF018 != -1)
    swift_once(&qword_3CF018, sub_E1F0);
  v30 = objc_msgSend((id)qword_3FA878, "CGColor");
  objc_msgSend(v29, "setBorderColor:", v30);

  objc_msgSend(v13, "setUserInteractionEnabled:", 0);
  return v13;
}

void sub_2790F4(uint64_t a1)
{
  char *v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "traitCollectionDidChange:", a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews7CardRim_innerRim];
  if (qword_3CF010 != -1)
    swift_once(&qword_3CF010, sub_E164);
  v4 = objc_msgSend((id)qword_3FA870, "CGColor");
  objc_msgSend(v3, "setBorderColor:", v4);

  v5 = objc_msgSend(v1, "layer");
  if (qword_3CF018 != -1)
    swift_once(&qword_3CF018, sub_E1F0);
  v6 = objc_msgSend((id)qword_3FA878, "CGColor");
  objc_msgSend(v5, "setBorderColor:", v6);

}

uint64_t type metadata accessor for CardRim()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews7CardRim);
}

uint64_t sub_279414()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_279438()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_dimmingView), "setAlpha:", 0.0);
}

double block_copy_helper_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_65(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_279470()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_dimmingView), "setAlpha:", 1.0);
}

id sub_279490(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  id v20;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_dimmingView;
  v11 = objc_allocWithZone((Class)UIView);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_dismissButton;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_shadowView;
  v15 = type metadata accessor for ShadowView();
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_cardCornerRadius] = 0x4018000000000000;
  v16 = objc_allocWithZone((Class)type metadata accessor for CardRim());
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_cardRim] = sub_278D44(6.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_sourceViewController] = a3;
  v17 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViews26CardPresentationController_configuration];
  v18 = *(_OWORD *)(a4 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)(a4 + 32);
  *((_OWORD *)v17 + 3) = v18;
  *((_OWORD *)v17 + 4) = *(_OWORD *)(a4 + 64);
  *((_QWORD *)v17 + 10) = *(_QWORD *)(a4 + 80);
  v19 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v17 = *(_OWORD *)a4;
  *((_OWORD *)v17 + 1) = v19;
  v20 = a3;

  v22.receiver = v12;
  v22.super_class = ObjectType;
  return objc_msgSendSuper2(&v22, "initWithPresentedViewController:presentingViewController:", a1, a2);
}

uint64_t sub_2795FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  __int128 v73[3];
  __int128 v74[3];
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  _QWORD v87[11];
  char v88;
  char v89;
  __int128 v90[5];
  char v91;
  __int128 v92[5];
  char v93;
  __int128 v94[3];
  _OWORD v95[3];
  __int128 v96[3];
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;

  sub_D210(a2, (uint64_t)v87, &qword_3D8408);
  v4 = v87[0];
  v5 = v87[1];
  v6 = v87[2];
  v7 = v87[3];
  v8 = v87[4];
  v9 = v87[5];
  v42 = v87[7];
  v43 = v87[6];
  v40 = v87[9];
  v41 = v87[8];
  v39 = v87[10];
  v37 = v89;
  v38 = v88;
  sub_D210(a1, (uint64_t)&v75, &qword_3D8408);
  v44 = v75;
  v45 = v76;
  v46 = v77;
  v47 = v78;
  v48 = v79;
  v35 = v81;
  v36 = v80;
  v33 = v83;
  v34 = v82;
  v32 = v84;
  v30 = v86;
  v31 = v85;
  sub_D210(a2, (uint64_t)v73, &qword_3D8408);
  sub_D210(a1, (uint64_t)v92, &qword_3D8408);
  if ((v93 & 1) == 0)
  {
    sub_143600(v92, v96);
    sub_D210(a2, (uint64_t)v90, &qword_3D8408);
    if ((v91 & 1) == 0)
    {
      sub_143600(v90, v95);
      *(_QWORD *)&v49 = v4;
      *((_QWORD *)&v49 + 1) = v5;
      v50 = v6;
      v51 = v7;
      v52 = v8;
      LOBYTE(v53) = v9;
      v97 = v44;
      v98 = v45;
      v99 = v46;
      v100 = v47;
      v101 = v48;
      sub_1D62F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
      sub_1D62F8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
      sub_143270(&v97);
      v13 = v23;
      sub_1D62F8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DCC8);
      v14 = a1;
      goto LABEL_10;
    }
    sub_1D62F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
    sub_1D62F8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
    goto LABEL_8;
  }
  v29 = v4;
  sub_D210(a1, (uint64_t)&v49, &qword_3D8408);
  sub_D210(a2, (uint64_t)v90, &qword_3D8408);
  if ((v91 & 1) == 0)
  {
    sub_143600(v90, &v97);
    v15 = *((_QWORD *)&v54 + 1);
    v25 = (void *)v54;
    v26 = v9;
    v16 = v55;
    v17 = v56;
    v27 = v7;
    v28 = v8;
    v18 = v57;
    v19 = v58;
    sub_1D62F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
    sub_1D62F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
    sub_1D62F8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
    v20 = v17;
    v9 = v26;
    v21 = v18;
    v22 = v19;
    v7 = v27;
    v8 = v28;
    sub_DD48(v25, v15, v16, v20, v21, v22);
    sub_DD48((void *)v49, *((uint64_t *)&v49 + 1), v50, v51, v52, v53);
    v4 = v29;
LABEL_8:
    v49 = v44;
    v50 = v45;
    v51 = v46;
    v52 = v47;
    v53 = v48;
    *(_QWORD *)&v54 = v36;
    *((_QWORD *)&v54 + 1) = v35;
    v55 = v34;
    v56 = v33;
    v57 = v32;
    v58 = v31;
    v59 = v30;
    v60 = v4;
    v61 = v5;
    v62 = v6;
    v63 = v7;
    v64 = v8;
    v65 = v9;
    v66 = v43;
    v67 = v42;
    v68 = v41;
    v69 = v40;
    v70 = v39;
    v71 = v38;
    v72 = v37;
    sub_27F644((uint64_t)&v49);
LABEL_12:
    v13 = 0;
    return v13 & 1;
  }
  sub_143600(v73, &v97);
  sub_143600(&v54, v94);
  sub_143600(v74, v95);
  sub_143600(&v49, v96);
  sub_1D62F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  sub_1D62F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  sub_1D62F8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0);
  sub_143270(v96);
  v11 = v10;
  sub_27F728((uint64_t)v96);
  if ((v11 & 1) == 0)
  {
    sub_27F728((uint64_t)v95);
    sub_27F728((uint64_t)v94);
    sub_27F728((uint64_t)&v97);
    sub_1D62F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DCC8);
    goto LABEL_12;
  }
  sub_143270(v94);
  v13 = v12;
  sub_27F728((uint64_t)v95);
  sub_27F728((uint64_t)v94);
  sub_27F728((uint64_t)&v97);
  v14 = a1;
LABEL_10:
  sub_1D62F8(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DCC8);
  return v13 & 1;
}

void sub_279A40()
{
  qword_3DF5A0 = 0x4018000000000000;
}

id sub_279A50(id result)
{
  unsigned __int8 *v1;
  int v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  char *v9;
  double v10;
  uint64_t v11;
  char v12[24];

  v2 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle];
  if (v2 != result)
  {
    v3 = *(char **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView];
    v4 = 8 * (char)v2;
    v5 = *(_QWORD *)((char *)&unk_303AD8 + v4);
    v6 = *(_QWORD *)((char *)&unk_303A88 + v4);
    v7 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight];
    *(_QWORD *)&v8 = swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight], v12, 1, 0).n128_u64[0];
    *(_QWORD *)v7 = v5;
    objc_msgSend(v3, "setNeedsLayout", v8);
    v9 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius];
    *(_QWORD *)&v10 = swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius], &v11, 1, 0).n128_u64[0];
    *(_QWORD *)v9 = v6;
    objc_msgSend(v3, "setNeedsLayout", v10);
    objc_msgSend(v1, "setNeedsLayout");
    return objc_msgSend(v1, "invalidateIntrinsicContentSize");
  }
  return result;
}

void sub_279B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style) = a1;
  if (v2 != a1)
  {
    if ((a1 & 1) != 0)
    {
      v3 = (void *)*(unsigned __int8 *)(v1
                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle);
      *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle) = *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_preferredBarStyle);
    }
    else
    {
      v3 = (void *)*(unsigned __int8 *)(v1
                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle);
      *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle) = 0;
    }
    sub_279A50(v3);
    sub_27B6E0();
  }
}

void sub_279BB0(char *a1)
{
  uint64_t v2;
  char *v3;
  void *v4;
  id *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  char v29;
  __int16 v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int16 v39;
  unsigned int v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  char *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int16 v62;
  char v63;
  __int16 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int16 v74;
  unsigned int v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  objc_class *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  char *v107;
  id v108;
  objc_super v109;
  objc_super v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int16 v122;
  char v123[24];
  char v124[32];

  v2 = *(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView];
  v3 = &a1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme];
  v4 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme];
  v5 = (id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor, v124, 1, 0);
  v6 = *v5;
  *v5 = v4;
  v7 = v4;

  v8 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_foregroundShapeLayer);
  v9 = objc_msgSend(*v5, "CGColor");
  objc_msgSend(v8, "setFillColor:", v9);

  v10 = (void *)*((_QWORD *)v3 + 1);
  v11 = (id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor, v123, 1, 0);
  v12 = *v11;
  *v11 = v10;
  v13 = v10;

  v14 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer);
  v15 = objc_msgSend(*v11, "CGColor");
  objc_msgSend(v14, "setFillColor:", v15);

  v107 = a1;
  v16 = *(char **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playedDateLabel];
  objc_msgSend(v16, "setTextColor:", *((_QWORD *)v3 + 15));
  v17 = (void *)*((_QWORD *)v3 + 3);
  v18 = *((_QWORD *)v3 + 4);
  v19 = *((_QWORD *)v3 + 5);
  v20 = *((_QWORD *)v3 + 6);
  v21 = *((_QWORD *)v3 + 7);
  v22 = *((_QWORD *)v3 + 8);
  v23 = (void *)*((_QWORD *)v3 + 9);
  v24 = *((_QWORD *)v3 + 10);
  v25 = *((_QWORD *)v3 + 11);
  v26 = *((_QWORD *)v3 + 12);
  v27 = *((_QWORD *)v3 + 13);
  v28 = v3[112];
  v29 = v3[113];
  if (v29)
    v30 = 256;
  else
    v30 = 0;
  v104 = v16;
  v31 = &v16[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v32 = *((_QWORD *)v31 + 2);
  v97 = *((_QWORD *)v31 + 1);
  v100 = *(void **)v31;
  v33 = *((_QWORD *)v31 + 3);
  v34 = *((_QWORD *)v31 + 4);
  v35 = *((_QWORD *)v31 + 5);
  v36 = (void *)*((_QWORD *)v31 + 6);
  v37 = *((_QWORD *)v31 + 7);
  v95 = *((_OWORD *)v31 + 4);
  v38 = *((_QWORD *)v31 + 10);
  v39 = *((_WORD *)v31 + 44);
  *(_QWORD *)v31 = v17;
  *((_QWORD *)v31 + 1) = v18;
  *((_QWORD *)v31 + 2) = v19;
  *((_QWORD *)v31 + 3) = v20;
  *((_QWORD *)v31 + 4) = v21;
  *((_QWORD *)v31 + 5) = v22;
  *((_QWORD *)v31 + 6) = v23;
  *((_QWORD *)v31 + 7) = v24;
  *((_QWORD *)v31 + 8) = v25;
  *((_QWORD *)v31 + 9) = v26;
  *((_QWORD *)v31 + 10) = v27;
  *((_WORD *)v31 + 44) = v30 | v28;
  sub_DDA0(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  sub_DC94(v100, v97, v32, v33, v34, v35, v36, v37, v95, *((uint64_t *)&v95 + 1), v38, v39);
  v40 = *((unsigned __int16 *)v31 + 44);
  if (v40 >> 8 <= 0xFE)
  {
    v86 = *((_QWORD *)v31 + 9);
    v87 = *((_QWORD *)v31 + 10);
    v85 = *((_QWORD *)v31 + 8);
    v42 = *((_QWORD *)v31 + 5);
    v41 = (void *)*((_QWORD *)v31 + 6);
    v43 = *((_QWORD *)v31 + 1);
    v44 = *((_QWORD *)v31 + 2);
    v45 = *(void **)v31;
    v91 = *(void **)v31;
    v93 = v43;
    v98 = *((_QWORD *)v31 + 3);
    v101 = *((_QWORD *)v31 + 4);
    v89 = *((_QWORD *)v31 + 7);
    sub_DDA0(*(void **)v31, v43, v44, v98, v101, v42, v41, v89, v85, v86, v87, v40, (unsigned __int16)(v40 & 0x1FF) >> 8);
    v111 = v45;
    v112 = v43;
    v113 = v44;
    v114 = v98;
    v115 = v101;
    v116 = v42;
    v117 = v41;
    v118 = v89;
    v119 = v85;
    v120 = v86;
    v121 = v87;
    v122 = v40 & 0x1FF;
    v46 = objc_msgSend(v104, "traitCollection");
    v47 = sub_1D5728((uint64_t)&v111, v46);
    v48 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v47, 0.0);

    v109.receiver = v104;
    v109.super_class = (Class)type metadata accessor for DynamicTypeLabel();
    objc_msgSendSuper2(&v109, "setFont:", v48);

    sub_DC94(v91, v93, v44, v98, v101, v42, v41, v89, v85, v86, v87, v40);
  }
  v49 = *(void **)&v107[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_checkmarkImageView];
  objc_msgSend(v49, "setTintColor:", *((_QWORD *)v3 + 15));
  objc_msgSend(v49, "setImage:", *((_QWORD *)v3 + 16));
  v50 = *(char **)&v107[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel];
  objc_msgSend(v50, "setTextColor:", *((_QWORD *)v3 + 2));
  v51 = (void *)*((_QWORD *)v3 + 3);
  v52 = *((_QWORD *)v3 + 4);
  v53 = *((_QWORD *)v3 + 5);
  v54 = *((_QWORD *)v3 + 6);
  v55 = *((_QWORD *)v3 + 7);
  v56 = *((_QWORD *)v3 + 8);
  v57 = (void *)*((_QWORD *)v3 + 9);
  v58 = *((_QWORD *)v3 + 10);
  v59 = *((_QWORD *)v3 + 11);
  v60 = *((_QWORD *)v3 + 12);
  v61 = *((_QWORD *)v3 + 13);
  v62 = v3[112];
  v63 = v3[113];
  if (v63)
    v64 = 256;
  else
    v64 = 0;
  v65 = &v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v66 = *(_QWORD *)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 8];
  v105 = *(id *)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v108 = v50;
  v67 = *(_QWORD *)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 16];
  v68 = *(_QWORD *)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 24];
  v69 = *(_QWORD *)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 32];
  v70 = *(_QWORD *)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 40];
  v71 = *(void **)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 48];
  v72 = *(_QWORD *)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 56];
  v102 = *(_OWORD *)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 64];
  v73 = *(_QWORD *)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 80];
  v74 = *(_WORD *)&v50[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 88];
  *(_QWORD *)v65 = v51;
  *((_QWORD *)v65 + 1) = v52;
  *((_QWORD *)v65 + 2) = v53;
  *((_QWORD *)v65 + 3) = v54;
  *((_QWORD *)v65 + 4) = v55;
  *((_QWORD *)v65 + 5) = v56;
  *((_QWORD *)v65 + 6) = v57;
  *((_QWORD *)v65 + 7) = v58;
  *((_QWORD *)v65 + 8) = v59;
  *((_QWORD *)v65 + 9) = v60;
  *((_QWORD *)v65 + 10) = v61;
  *((_WORD *)v65 + 44) = v64 | v62;
  sub_DDA0(v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63);
  sub_DC94(v105, v66, v67, v68, v69, v70, v71, v72, v102, *((uint64_t *)&v102 + 1), v73, v74);
  v75 = *((unsigned __int16 *)v65 + 44);
  if (v75 >> 8 <= 0xFE)
  {
    v90 = *((_QWORD *)v65 + 9);
    v92 = *((_QWORD *)v65 + 10);
    v88 = *((_QWORD *)v65 + 8);
    v77 = *((_QWORD *)v65 + 5);
    v76 = (void *)*((_QWORD *)v65 + 6);
    v78 = *((_QWORD *)v65 + 4);
    v94 = *((_QWORD *)v65 + 7);
    v96 = *(void **)v65;
    v99 = *((_QWORD *)v65 + 1);
    v103 = *((_QWORD *)v65 + 2);
    v106 = (id)*((_QWORD *)v65 + 3);
    sub_DDA0(*(void **)v65, v99, v103, (uint64_t)v106, v78, v77, v76, v94, v88, v90, v92, v75, (unsigned __int16)(v75 & 0x1FF) >> 8);
    v79 = objc_msgSend(v108, "traitCollection");
    v111 = v96;
    v112 = v99;
    v113 = v103;
    v114 = (uint64_t)v106;
    v115 = v78;
    v116 = v77;
    v80 = v78;
    v117 = v76;
    v118 = v94;
    v119 = v88;
    v120 = v90;
    v121 = v92;
    v122 = v75 & 0x1FF;
    v81 = v79;
    v82 = sub_1D5728((uint64_t)&v111, v79);
    v83 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v82, 0.0);

    v84 = (objc_class *)type metadata accessor for DynamicTypeLabel();
    v110.receiver = v108;
    v110.super_class = v84;
    objc_msgSendSuper2(&v110, "setFont:", v83);

    sub_DC94(v96, v99, v103, (uint64_t)v106, v80, v77, v76, v94, v88, v90, v92, v75);
  }
}

uint64_t sub_27A1CC(__int128 *a1)
{
  char *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char isEscapingClosureAtFileLocation;
  _OWORD v18[8];
  uint64_t v19;
  __int128 aBlock;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v2 = a1[7];
  v26 = a1[6];
  v27 = v2;
  v28 = *((_QWORD *)a1 + 16);
  v3 = a1[3];
  v22 = a1[2];
  v23 = v3;
  v4 = a1[5];
  v24 = a1[4];
  v25 = v4;
  v5 = a1[1];
  aBlock = *a1;
  v21 = v5;
  v6 = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 112];
  v18[6] = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 96];
  v18[7] = v6;
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 128];
  v7 = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 48];
  v18[2] = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 32];
  v18[3] = v7;
  v8 = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 80];
  v18[4] = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 64];
  v18[5] = v8;
  v9 = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 16];
  v18[0] = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme];
  v18[1] = v9;
  result = sub_27F4A8((uint64_t *)&aBlock, (uint64_t *)v18);
  if ((result & 1) == 0)
  {
    v11 = (void *)objc_opt_self(UIView);
    v12 = swift_allocObject(&unk_38F0E0, 24, 7);
    *(_QWORD *)(v12 + 16) = v1;
    v13 = swift_allocObject(&unk_38F108, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_27F614;
    *(_QWORD *)(v13 + 24) = v12;
    *(_QWORD *)&v22 = sub_101EC;
    *((_QWORD *)&v22 + 1) = v13;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v21 = sub_920D4;
    *((_QWORD *)&v21 + 1) = &block_descriptor_66;
    v14 = _Block_copy(&aBlock);
    v15 = *((_QWORD *)&v22 + 1);
    v16 = v1;
    swift_retain(v13);
    swift_release(v15);
    objc_msgSend(v11, "performWithoutAnimation:", v14);
    _Block_release(v14);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 130, 211, 40, 1);
    swift_release(v12);
    result = swift_release(v13);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

void sub_27A374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;

  if (qword_3CF060 != -1)
    swift_once(&qword_3CF060, sub_E434);
  v0 = qword_3CF068;
  v21 = (id)qword_3FA8C0;
  if (v0 != -1)
    swift_once(&qword_3CF068, sub_E448);
  v1 = qword_3CF048;
  v20 = (id)qword_3FA8C8;
  if (v1 != -1)
    swift_once(&qword_3CF048, sub_E358);
  v2 = qword_3CF5E8;
  v3 = (id)qword_3FA8A8;
  v19 = (uint64_t)v3;
  if (v2 != -1)
  {
    swift_once(&qword_3CF5E8, sub_1411F8);
    v3 = (id)qword_3FA8A8;
  }
  v24 = (void *)qword_3FC2D0;
  v25 = qword_3FC2D8;
  v4 = qword_3FC2F0;
  v22 = qword_3FC2E8;
  v23 = qword_3FC2E0;
  v5 = qword_3FC2F8;
  v6 = (void *)qword_3FC300;
  v8 = qword_3FC308;
  v7 = qword_3FC310;
  v10 = qword_3FC318;
  v9 = qword_3FC320;
  v11 = word_3FC328;
  v12 = HIBYTE(word_3FC328);
  v26 = (void *)objc_opt_self(UIImage);
  v16 = v3;
  v17 = v9;
  v18 = v10;
  sub_DDA0(v24, v25, v23, v22, v4, v5, v6, v8, v7, v10, v9, v11, v12);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v26, "imageNamed:", v13);

  if (v14)
  {
    v15 = objc_msgSend(v14, "imageWithRenderingMode:", 2);

    *(_QWORD *)&xmmword_3FD688 = v21;
    *((_QWORD *)&xmmword_3FD688 + 1) = v20;
    qword_3FD698 = v19;
    unk_3FD6A0 = v24;
    *(_QWORD *)&xmmword_3FD6A8 = v25;
    *((_QWORD *)&xmmword_3FD6A8 + 1) = v23;
    qword_3FD6B8 = v22;
    unk_3FD6C0 = v4;
    *(_QWORD *)&xmmword_3FD6C8 = v5;
    *((_QWORD *)&xmmword_3FD6C8 + 1) = v6;
    qword_3FD6D8 = v8;
    unk_3FD6E0 = v7;
    *(_QWORD *)&xmmword_3FD6E8 = v18;
    *((_QWORD *)&xmmword_3FD6E8 + 1) = v17;
    byte_3FD6F8 = v11;
    byte_3FD6F9 = v12;
    qword_3FD700 = (uint64_t)v16;
    qword_3FD708 = (uint64_t)v15;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_27A5E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  int v19;
  int v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v0 = type metadata accessor for Glyph(0);
  v24 = *(_QWORD *)(v0 - 8);
  v25 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (void *)objc_opt_self(UIColor);
  v23 = objc_msgSend(v3, "secondarySystemFillColor");
  v22 = objc_msgSend(v3, "tertiarySystemFillColor");
  v21 = objc_msgSend(v3, "secondaryLabelColor");
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v4 = qword_3FB490;
  v5 = qword_3FB498;
  v6 = qword_3FB4A0;
  v7 = qword_3FB4A8;
  v8 = qword_3FB4B0;
  v9 = qword_3FB4B8;
  v10 = *((_QWORD *)&xmmword_3FB4C0 + 1);
  v16 = xmmword_3FB4C0;
  v17 = qword_3FB4D0;
  v18 = xmmword_3FB4D8;
  v19 = byte_3FB4E8;
  v20 = byte_3FB4E9;
  sub_DDA0((void *)qword_3FB490, qword_3FB498, qword_3FB4A0, qword_3FB4A8, qword_3FB4B0, qword_3FB4B8, (void *)xmmword_3FB4C0, *((uint64_t *)&xmmword_3FB4C0 + 1), qword_3FB4D0, xmmword_3FB4D8, *((uint64_t *)&xmmword_3FB4D8 + 1), byte_3FB4E8, byte_3FB4E9);
  v11 = objc_msgSend(v3, "secondaryLabelColor");
  v12 = v2;
  v13 = static Glyph.PlayControls.playedCheckmark.getter();
  v14 = Glyph.image.getter(v13);
  result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v12, v25);
  *(_QWORD *)&xmmword_3FD710 = v23;
  *((_QWORD *)&xmmword_3FD710 + 1) = v22;
  qword_3FD720 = (uint64_t)v21;
  unk_3FD728 = v4;
  *(_QWORD *)&xmmword_3FD730 = v5;
  *((_QWORD *)&xmmword_3FD730 + 1) = v6;
  qword_3FD740 = v7;
  unk_3FD748 = v8;
  *(_QWORD *)&xmmword_3FD750 = v9;
  *((_QWORD *)&xmmword_3FD750 + 1) = v16;
  qword_3FD760 = v10;
  unk_3FD768 = v17;
  xmmword_3FD770 = v18;
  byte_3FD780 = v19;
  byte_3FD781 = v20;
  qword_3FD788 = (uint64_t)v11;
  qword_3FD790 = v14;
  return result;
}

uint64_t sub_27A7F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  int v19;
  int v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v0 = type metadata accessor for Glyph(0);
  v25 = *(_QWORD *)(v0 - 8);
  v26 = v0;
  __chkstk_darwin(v0);
  v24 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = (void *)objc_opt_self(UIColor);
  v23 = objc_msgSend(v2, "systemWhiteColor");
  v22 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.2);
  v21 = objc_msgSend(v2, "systemWhiteColor");
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v3 = qword_3FB490;
  v4 = qword_3FB498;
  v5 = qword_3FB4A0;
  v6 = qword_3FB4A8;
  v7 = qword_3FB4B0;
  v8 = qword_3FB4B8;
  v9 = *((_QWORD *)&xmmword_3FB4C0 + 1);
  v16 = xmmword_3FB4C0;
  v17 = qword_3FB4D0;
  v18 = xmmword_3FB4D8;
  v19 = byte_3FB4E8;
  v20 = byte_3FB4E9;
  sub_DDA0((void *)qword_3FB490, qword_3FB498, qword_3FB4A0, qword_3FB4A8, qword_3FB4B0, qword_3FB4B8, (void *)xmmword_3FB4C0, *((uint64_t *)&xmmword_3FB4C0 + 1), qword_3FB4D0, xmmword_3FB4D8, *((uint64_t *)&xmmword_3FB4D8 + 1), byte_3FB4E8, byte_3FB4E9);
  v10 = objc_msgSend(v2, "systemWhiteColor");
  v11 = v24;
  v12 = static Glyph.PlayControls.playedCheckmark.getter();
  v13 = Glyph.image.getter(v12);
  result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v26);
  *(_QWORD *)&xmmword_3FD798 = v23;
  *((_QWORD *)&xmmword_3FD798 + 1) = v22;
  qword_3FD7A8 = (uint64_t)v21;
  unk_3FD7B0 = v3;
  *(_QWORD *)&xmmword_3FD7B8 = v4;
  *((_QWORD *)&xmmword_3FD7B8 + 1) = v5;
  qword_3FD7C8 = v6;
  unk_3FD7D0 = v7;
  *(_QWORD *)&xmmword_3FD7D8 = v8;
  *((_QWORD *)&xmmword_3FD7D8 + 1) = v16;
  qword_3FD7E8 = v9;
  unk_3FD7F0 = v17;
  xmmword_3FD7F8 = v18;
  byte_3FD808 = v19;
  byte_3FD809 = v20;
  qword_3FD810 = (uint64_t)v10;
  qword_3FD818 = v13;
  return result;
}

void sub_27AA00(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  double v12;
  double v13;
  char v14;
  char v15;
  char v16;
  char v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  _QWORD aBlock[5];
  uint64_t v25;
  char v26[24];

  v2 = v1;
  v4 = type metadata accessor for PlayState(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&aBlock[-1] - v8;
  v10 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState], v26, 0, 0);
  sub_19C4C(v10, (uint64_t)v9, type metadata accessor for PlayState);
  v11 = sub_27AC6C(a1);
  sub_FA4C((uint64_t)v9, type metadata accessor for PlayState);
  if ((v11 & 1) == 0)
  {
    sub_19C4C(v10, (uint64_t)v9, type metadata accessor for PlayState);
    sub_27B174((uint64_t)v9);
    sub_FA4C((uint64_t)v9, type metadata accessor for PlayState);
    if ((*((_BYTE *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style + 1) & 4) != 0)
    {
      objc_msgSend(v2, "bounds");
      if (v13 != 0.0 || v12 != 0.0)
      {
        sub_19C4C(v10, (uint64_t)v9, type metadata accessor for PlayState);
        swift_storeEnumTagMultiPayload(v7, v4, 2);
        _s23ShelfKitCollectionViews9PlayStateO2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v7);
        v15 = v14;
        sub_FA4C((uint64_t)v7, type metadata accessor for PlayState);
        sub_FA4C((uint64_t)v9, type metadata accessor for PlayState);
        if ((v15 & 1) == 0)
        {
          swift_storeEnumTagMultiPayload(v9, v4, 2);
          _s23ShelfKitCollectionViews9PlayStateO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v9);
          v17 = v16;
          sub_FA4C((uint64_t)v9, type metadata accessor for PlayState);
          if ((v17 & 1) == 0)
          {
            v18 = (void *)objc_opt_self(UIView);
            v19 = swift_allocObject(&unk_38F158, 24, 7);
            *(_QWORD *)(v19 + 16) = v2;
            aBlock[4] = sub_27F75C;
            v25 = v19;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_24360;
            aBlock[3] = &block_descriptor_9_3;
            v20 = _Block_copy(aBlock);
            v21 = v25;
            v22 = v2;
            swift_release(v21);
            objc_msgSend(v18, "animateWithDuration:animations:", v20, 0.25);
            _Block_release(v20);
          }
        }
      }
    }
  }
}

uint64_t sub_27AC6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  char *v20;
  _QWORD v22[8];

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v22[7] = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v22[3] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF4E8);
  __chkstk_darwin(v6);
  v22[6] = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  v9 = __chkstk_darwin(v8);
  v10 = __chkstk_darwin(v9);
  v22[5] = (char *)v22 - v11;
  __chkstk_darwin(v10);
  v22[4] = (char *)v22 - v12;
  v13 = type metadata accessor for PlayState(0);
  v14 = __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF4F0);
  __chkstk_darwin(v15);
  v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23ShelfKitCollectionViews9PlayStateO2eeoiySbAC_ACtFZ_0(v2, a1);
  if ((v18 & 1) != 0)
  {
    v22[2] = v4;
    v19 = (uint64_t)&v17[*(int *)(v15 + 48)];
    sub_19C4C(v2, (uint64_t)v17, type metadata accessor for PlayState);
    sub_19C4C(a1, v19, type metadata accessor for PlayState);
    v20 = (char *)&loc_27AE90 + 4 * byte_303720[swift_getEnumCaseMultiPayload(v17, v13)];
    __asm { BR              X10 }
  }
  return 0;
}

void sub_27B174(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for PlayState(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C(a1, (uint64_t)v5, v6);
  v7 = (char *)sub_27B24C + 4 * byte_303724[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

id sub_27B24C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  double *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  char *v26;
  double v27;
  float v28;
  float *v29;
  uint64_t v30;
  id v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;

  v24 = *v21;
  if (*v21 < 0.0 || v24 > 1.0)
    return objc_msgSend(v20, *(SEL *)(v22 + 2184), v24);
  v26 = *(char **)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView];
  v27 = v21[1];
  v28 = v24;
  if (v28 <= 0.0)
    v28 = 0.0;
  if (v28 > 1.0)
    v28 = 1.0;
  v29 = (float *)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView__progress];
  if ((v26[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView__progress + 4] & 1) != 0
    || vabds_f32(*v29, v28) >= COERCE_FLOAT(1))
  {
    *v29 = v28;
    *((_BYTE *)v29 + 4) = 0;
    objc_msgSend(v26, *(SEL *)(v22 + 2184));
  }
  v30 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style;
  objc_msgSend(v26, "setHidden:", (*(_QWORD *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style] & 1) == 0);
  objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playedDateLabel], "setHidden:", 1);
  v31 = objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_checkmarkImageView], "setHidden:", 1);
  if (v27 <= 0.0 || (v33 = ((uint64_t (*)(id, double))static Localization.timeRemaining(_:))(v31, v27), !v34))
  {
LABEL_17:
    objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel], "setHidden:", 1, v32);
    return objc_msgSend(v20, *(SEL *)(v22 + 2184), v24);
  }
  v35 = v34;
  if ((v20[v30] & 8) == 0)
  {
    *(_QWORD *)&v32 = swift_bridgeObjectRelease(v34).n128_u64[0];
    goto LABEL_17;
  }
  v37 = v33;
  v38 = *(void **)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel];
  objc_msgSend(v38, "setHidden:", 0);
  if ((v20[v30] & 0x40) != 0)
  {
    *(_QWORD *)(v23 - 96) = v37;
    *(_QWORD *)(v23 - 88) = v35;
    v39 = sub_D254();
    StringProtocol.localizedUppercase.getter(&type metadata for String, v39);
    v41 = v40;
    swift_bridgeObjectRelease(v35);
    v35 = v41;
  }
  v42 = String._bridgeToObjectiveC()();
  objc_msgSend(v38, "setText:", v42, swift_bridgeObjectRelease(v35).n128_f64[0]);

  return objc_msgSend(v20, *(SEL *)(v22 + 2184), v24);
}

void sub_27B6E0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style;
  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style] & 0xC) == 0)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel];
    if ((objc_msgSend(v2, "isHidden") & 1) == 0)
    {
      objc_msgSend(v2, "setHidden:", 1);
      objc_msgSend(v0, "setNeedsLayout");
    }
  }
  if ((v0[v1] & 0x30) == 0)
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playedDateLabel];
    if ((objc_msgSend(v3, "isHidden") & 1) == 0)
    {
      objc_msgSend(v3, "setHidden:", 1);
      objc_msgSend(v0, "setNeedsLayout");
    }
  }
  if ((v0[v1] & 2) == 0)
  {
    v4 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_checkmarkImageView];
    if ((objc_msgSend(v4, "isHidden") & 1) == 0)
    {
      objc_msgSend(v4, "setHidden:", 1);
      objc_msgSend(v0, "setNeedsLayout");
    }
  }
  if ((v0[v1] & 1) == 0)
  {
    v5 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView];
    if ((objc_msgSend(v5, "isHidden") & 1) == 0)
    {
      objc_msgSend(v5, "setHidden:", 1);
      objc_msgSend(v0, "setNeedsLayout");
    }
  }
}

uint64_t sub_27B840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t countAndFlagsBits;
  id v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  Swift::String v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v23 - v11;
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style;
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style);
  if ((v14 & 0x20) != 0)
  {
    sub_1DF21C(a1, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
      v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
      v20 = Date.friendlyDisplayString.getter(v19);
      countAndFlagsBits = String.init(playedOn:dateString:)(v10, v20, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      return countAndFlagsBits;
    }
    sub_D1D4((uint64_t)v5, &qword_3D0A50);
    v14 = *(_QWORD *)(v1 + v13);
  }
  if ((v14 & 0x10) == 0)
    return 0;
  v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v24._object = (void *)0xE000000000000000;
  v17._object = (void *)0x8000000000314110;
  v17._countAndFlagsBits = 0xD000000000000014;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v24._countAndFlagsBits = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v24)._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_27BA38(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  char *v9;
  __int16 v10;
  NSString v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;
  double v19;
  char *v20;
  double v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v38;
  char *v39;
  id v40;
  char *v41;
  __int16 v42;
  int v43;
  uint64_t v44;
  _QWORD aBlock[5];
  uint64_t v46;
  objc_super v47;
  char v48[24];
  char v49[24];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v38 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playedDateLabel;
  type metadata accessor for DynamicTypeLabel();
  v2 = qword_3CF5E8;
  v41 = v1;
  if (v2 != -1)
    swift_once(&qword_3CF5E8, sub_1411F8);
  v3 = xmmword_3FC2D0;
  v4 = xmmword_3FC2E0;
  v5 = xmmword_3FC2F0;
  v6 = xmmword_3FC300;
  v7 = xmmword_3FC310;
  v44 = qword_3FC320;
  v42 = word_3FC328;
  v43 = HIBYTE(word_3FC328);
  v50 = xmmword_3FC2D0;
  v51 = xmmword_3FC2E0;
  v52 = xmmword_3FC2F0;
  v53 = xmmword_3FC300;
  v54 = xmmword_3FC310;
  *(_QWORD *)&v55 = qword_3FC320;
  WORD4(v55) = word_3FC328;
  sub_DDA0((void *)xmmword_3FC2D0, *((uint64_t *)&xmmword_3FC2D0 + 1), xmmword_3FC2E0, *((uint64_t *)&xmmword_3FC2E0 + 1), xmmword_3FC2F0, SBYTE8(xmmword_3FC2F0), (void *)xmmword_3FC300, *((uint64_t *)&xmmword_3FC300 + 1), xmmword_3FC310, *((uint64_t *)&xmmword_3FC310 + 1), qword_3FC320, word_3FC328, SHIBYTE(word_3FC328));
  *(_QWORD *)&v1[v38] = sub_A96AC((uint64_t)&v50, 1, 0, 1);
  v39 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel;
  v50 = v3;
  v51 = v4;
  v52 = v5;
  v53 = v6;
  v54 = v7;
  *(_QWORD *)&v55 = v44;
  BYTE8(v55) = v42;
  BYTE9(v55) = v43;
  sub_DDA0((void *)v3, *((uint64_t *)&v3 + 1), v4, *((uint64_t *)&v4 + 1), v5, SBYTE8(v5), (void *)v6, *((uint64_t *)&v6 + 1), v7, *((uint64_t *)&v7 + 1), v44, v42, v43);
  *(_QWORD *)&v39[(_QWORD)v41] = sub_A96AC((uint64_t)&v50, 1, 0, 1);
  v8 = &v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_itemDuration];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_legacyPlayedCheckmarkMargins];
  if (v43)
    v10 = 256;
  else
    v10 = 0;
  *(_OWORD *)v9 = xmmword_2F15B0;
  *((_OWORD *)v9 + 1) = xmmword_303B30;
  *((_OWORD *)v9 + 2) = v3;
  *((_OWORD *)v9 + 3) = v4;
  *((_OWORD *)v9 + 4) = v5;
  *((_OWORD *)v9 + 5) = v6;
  *((_OWORD *)v9 + 6) = v7;
  *((_QWORD *)v9 + 14) = v44;
  *((_WORD *)v9 + 60) = v10 | v42 | 0x8000;
  v40 = (id)objc_opt_self(UIImage);
  sub_DDA0((void *)v3, *((uint64_t *)&v3 + 1), v4, *((uint64_t *)&v4 + 1), v5, SBYTE8(v5), (void *)v6, *((uint64_t *)&v6 + 1), v7, *((uint64_t *)&v7 + 1), v44, v42, v43);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v40, "imageNamed:", v11);

  if (!v12)
    goto LABEL_11;
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_checkmarkImageView;
  v14 = objc_msgSend(v12, "imageWithRenderingMode:", 2);

  v15 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v14);
  *(_QWORD *)&v41[v13] = v15;
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView;
  v17 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EpisodePlayProgressView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = &v17[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight];
  *(_QWORD *)&v19 = swift_beginAccess(&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight], v49, 1, 0).n128_u64[0];
  *(_QWORD *)v18 = 0x4014000000000000;
  objc_msgSend(v17, "setNeedsLayout", v19);
  v20 = &v17[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius];
  *(_QWORD *)&v21 = swift_beginAccess(&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius], v48, 1, 0).n128_u64[0];
  *(_QWORD *)v20 = 0x4004000000000000;
  objc_msgSend(v17, "setNeedsLayout", v21);
  *(_QWORD *)&v41[v16] = v17;
  v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_preferredBarStyle] = 1;
  v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle] = 1;
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style;
  *(_QWORD *)&v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style] = 31;
  v23 = &v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme];
  if (qword_3CFC98 != -1)
    swift_once(&qword_3CFC98, sub_27A374);
  v56 = xmmword_3FD6E8;
  v57 = *(_OWORD *)&byte_3FD6F8;
  v58 = qword_3FD708;
  v52 = xmmword_3FD6A8;
  v53 = *(_OWORD *)&qword_3FD6B8;
  v54 = xmmword_3FD6C8;
  v55 = *(_OWORD *)&qword_3FD6D8;
  v50 = xmmword_3FD688;
  v51 = *(_OWORD *)&qword_3FD698;
  memmove(v23, &xmmword_3FD688, 0x88uLL);
  *(_QWORD *)&v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_horizontalSpacing] = 0x4024000000000000;
  *(_QWORD *)&v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_presenter] = 0;
  v24 = &v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playStateChangeHandler];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v25 = &v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState];
  v26 = type metadata accessor for PlayState(0);
  swift_storeEnumTagMultiPayload(v25, v26, 3);
  *(_QWORD *)&v41[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_cachedHeight] = 0;
  *(_QWORD *)&v41[v22] = a1;
  sub_10D99C((uint64_t)&v50);

  v47.receiver = v41;
  v47.super_class = (Class)type metadata accessor for PlaybackStatusView(0);
  v27 = (char *)objc_msgSendSuper2(&v47, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v28 = *(_QWORD *)&v27[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView];
  v29 = v27;
  objc_msgSend(v29, "addSubview:", v28);
  objc_msgSend(v29, "addSubview:", *(_QWORD *)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playedDateLabel]);
  v30 = *(void **)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_checkmarkImageView];
  objc_msgSend(v29, "addSubview:", v30);
  objc_msgSend(v29, "addSubview:", *(_QWORD *)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel]);
  objc_msgSend(v30, "setHidden:", 1);
  objc_msgSend(v29, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v31 = objc_opt_self(UIView);
  v32 = swift_allocObject(&unk_38F1A8, 24, 7);
  *(_QWORD *)(v32 + 16) = v29;
  v33 = swift_allocObject(&unk_38F1D0, 32, 7);
  *(_QWORD *)(v33 + 16) = sub_27FDF8;
  *(_QWORD *)(v33 + 24) = v32;
  aBlock[4] = sub_EC6A0;
  v46 = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_920D4;
  aBlock[3] = &block_descriptor_20_0;
  v34 = _Block_copy(aBlock);
  v35 = v46;
  v36 = v29;
  swift_retain(v33);
  objc_msgSend((id)v31, "performWithoutAnimation:", v34, swift_release(v35).n128_f64[0]);
  _Block_release(v34);
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation(v33, "", 130, 211, 40, 1);

  swift_release(v32);
  swift_release(v33);
  if ((v31 & 1) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

void sub_27C138()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  char v7;
  double v8;
  uint64_t v9;
  char *v10;
  char v12[24];
  objc_super v13;
  CGRect v14;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for PlayState(0);
  __chkstk_darwin(v3);
  v5 = v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 392;
  v6 = (objc_class *)type metadata accessor for PlaybackStatusView(0);
  v13.receiver = v0;
  v13.super_class = v6;
  objc_msgSendSuper2(&v13, "layoutSubviews");
  v7 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection") == (char *)&dword_0 + 1;
  v8 = dbl_303AD8[v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle]];
  objc_msgSend(v1, "bounds");
  CGRectGetHeight(v14);
  sub_27FCAC(v7, v8);
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState], v12, 0, 0);
  sub_19C4C(v9, (uint64_t)v5, type metadata accessor for PlayState);
  v10 = (char *)&loc_27C2D4 + dword_27C8D4[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

void sub_27C2E4(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;

  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style);
  if ((~*(_DWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style) & 0x101) != 0)
  {
    if ((~(_BYTE)v9 & 0x81) != 0)
      sub_27CD88((v9 & 1) != 0, v4 == 1, v7, a2, v8, v6);
    else
      sub_27CFF8(v4 == 1, *(double *)(v5 + 8), v7, a3, v8, v6);
  }
  else
  {
    sub_27C918(v4 == 1, v7, a2, a3, v6);
  }
}

id sub_27C918(char a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double MaxY;
  double v26;
  void *v27;
  uint64_t v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  v9 = type metadata accessor for FloatingPointRoundingRule(0);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel];
  objc_msgSend(v5, "bounds", v11);
  objc_msgSend(v14, "sizeThatFits:", v15, 1.79769313e308);
  v17 = v16;
  v19 = v18;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for FloatingPointRoundingRule.up(_:), v9);
  v20 = sub_2C348((uint64_t)v13, v17, v19);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v23 = 0.0;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v5, "bounds", 0.0);
    v23 = CGRectGetMaxX(v30) - v20;
  }
  v24 = 0.0;
  objc_msgSend(v14, "setFrame:", v23, 0.0, v20, v22);
  objc_msgSend(v14, "frame");
  MaxY = CGRectGetMaxY(v31);
  if (qword_3CFC90 != -1)
    swift_once(&qword_3CFC90, sub_279A40);
  v26 = *(double *)&qword_3DF5A0;
  v27 = *(void **)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView];
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v5, "bounds");
    v24 = CGRectGetMaxX(v32) - a5;
  }
  return objc_msgSend(v27, "setFrame:", v24, MaxY + v26, a5, a2);
}

id sub_27CAF0(uint64_t a1, NSString a2, int a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  double v18;
  double v19;
  double v20;
  void (*v21)(char *, uint64_t);
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v31;
  double v32;
  uint64_t v33;
  int v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  v34 = a3;
  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel];
  objc_msgSend(v3, "bounds", v7);
  objc_msgSend(v10, "sizeThatFits:", v11, 1.79769313e308);
  v13 = v12;
  v15 = v14;
  v16 = enum case for FloatingPointRoundingRule.up(_:);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v17(v9, enum case for FloatingPointRoundingRule.up(_:), v5);
  v18 = sub_2C348((uint64_t)v9, v13, v15);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v9, v5);
  if (v3[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style] < 0
    && (objc_msgSend(v3, "bounds"), CGRectGetWidth(v35) < v18))
  {
    if (a2)
      a2 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "setText:", a2);

    objc_msgSend(v3, "bounds");
    objc_msgSend(v10, "sizeThatFits:", v22, 1.79769313e308);
    v24 = v23;
    v26 = v25;
    v17(v9, v16, v5);
    v27 = sub_2C348((uint64_t)v9, v24, v26);
    v29 = v28;
    v21(v9, v5);
    objc_msgSend(v3, "bounds");
    if (CGRectGetWidth(v36) >= v27)
    {
      v32 = 0.0;
      if ((v34 & 1) != 0)
      {
        objc_msgSend(v3, "bounds");
        v32 = CGRectGetMaxX(v38) - v27;
      }
      objc_msgSend(v3, "bounds");
      return objc_msgSend(v10, "setFrame:", v32, CGRectGetMaxY(v39) - v29, v27, v29);
    }
    else
    {
      return objc_msgSend(v10, "setHidden:", 1);
    }
  }
  else
  {
    v31 = 0.0;
    if ((v34 & 1) != 0)
    {
      objc_msgSend(v3, "bounds", 0.0);
      v31 = CGRectGetMaxX(v37) - v18;
    }
    return objc_msgSend(v10, "setFrame:", v31, 0.0, v18, v20);
  }
}

id sub_27CD88(char a1, char a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id result;
  double v37;
  void *v38;
  double v39;
  uint64_t v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;

  v12 = type metadata accessor for FloatingPointRoundingRule(0);
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v14 = __chkstk_darwin(v12).n128_u64[0];
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 0.0;
  v18 = 0.0;
  if ((a1 & 1) != 0)
    v18 = *(double *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_horizontalSpacing];
  v19 = *(void **)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel];
  objc_msgSend(v6, "bounds", v14);
  objc_msgSend(v19, "sizeThatFits:", v20, 1.79769313e308);
  v22 = v21;
  v24 = v23;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, enum case for FloatingPointRoundingRule.up(_:), v12);
  v25 = sub_2C348((uint64_t)v16, v22, v24);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  objc_msgSend(v6, "bounds");
  v29 = v28;
  objc_msgSend(v6, "bounds");
  v31 = v30 - v25 - v18;
  if (v31 <= v18 + a6)
    v31 = v18 + a6;
  v32 = v29 - v31;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v6, "bounds");
    v34 = *(double *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_horizontalSpacing];
    if (v33 - v32 - v34 <= a5)
      v17 = v33 - v32 - v34;
    else
      v17 = a5;
  }
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v6, "bounds");
    v35 = CGRectGetMaxX(v41) - v17 - v32 - v18;
  }
  else
  {
    v35 = v18 + v17;
  }
  objc_msgSend(v6, "bounds");
  result = objc_msgSend(v19, "setFrame:", v35, CGRectGetHeight(v42) - v27, v32, v27);
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v6, "bounds");
    v37 = CGRectGetHeight(v43) * 0.5 - a3 * 0.5;
    v38 = *(void **)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView];
    v39 = 0.0;
    if ((a2 & 1) != 0)
    {
      objc_msgSend(v6, "bounds", 0.0);
      v39 = CGRectGetMaxX(v44) - v17;
    }
    objc_msgSend(v38, "setFrame:", v39, v37, v17, a3);
    return objc_msgSend(v38, "setHidden:", 0);
  }
  return result;
}

void sub_27CFF8(int a1, double a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  char *v7;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  unsigned int v25;
  void (*v26)(char *, uint64_t, uint64_t);
  double v27;
  void (*v28)(char *, uint64_t);
  double v29;
  uint64_t v30;
  void *v31;
  double v32;
  uint64_t v33;
  void *v34;
  char v35;
  void *v36;
  double v37;
  char v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  NSString v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  void *v49;
  id v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  unsigned int v53;
  void (*v54)(char *, uint64_t, uint64_t);
  id v55;
  int v56;
  uint64_t v57;
  void *v58;
  CGRect v59;
  CGRect v60;

  v7 = v6;
  v13 = type metadata accessor for FloatingPointRoundingRule(0);
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)&v15 = __chkstk_darwin(v13).n128_u64[0];
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel];
  v19 = objc_msgSend(v18, "text", v15);
  objc_msgSend(v7, "bounds");
  objc_msgSend(v18, "sizeThatFits:", v20, 1.79769313e308);
  v22 = v21;
  v24 = v23;
  v25 = enum case for FloatingPointRoundingRule.up(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v26(v17, enum case for FloatingPointRoundingRule.up(_:), v13);
  v27 = sub_2C348((uint64_t)v17, v22, v24);
  v28 = *(void (**)(char *, uint64_t))(v14 + 8);
  v28(v17, v13);
  v29 = *(double *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_horizontalSpacing];
  objc_msgSend(v7, "bounds");
  if (v27 + v29 + a6 <= CGRectGetWidth(v59))
  {

    v38 = a1 & 1;
    goto LABEL_13;
  }
  v52 = v28;
  v53 = v25;
  v54 = v26;
  v56 = a1;
  v30 = static Localization.timeRemaining(_:includeTimeRemainingPhrase:abbreviated:)(0, 1, a2);
  v33 = v30;
  v34 = v31;
  v35 = v7[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style];
  v55 = v19;
  if ((v35 & 0x40) != 0)
  {
    if (v31)
    {
      v57 = v30;
      v58 = v31;
      v39 = sub_D254();
      v33 = StringProtocol.localizedUppercase.getter(&type metadata for String, v39);
      v36 = v40;
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRetain(v36);
      v34 = v36;
      goto LABEL_8;
    }
LABEL_9:
    v42 = 0;
    v41 = v53;
    goto LABEL_10;
  }
  if (!v31)
    goto LABEL_9;
  swift_bridgeObjectRetain(v31);
  v36 = v34;
LABEL_8:
  v41 = v53;
  v42 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v32 = swift_bridgeObjectRelease(v36).n128_u64[0];
LABEL_10:
  objc_msgSend(v18, "setText:", v42, v32);

  objc_msgSend(v7, "bounds");
  objc_msgSend(v18, "sizeThatFits:", v43, 1.79769313e308);
  v45 = v44;
  v47 = v46;
  v54(v17, v41, v13);
  v48 = sub_2C348((uint64_t)v17, v45, v47);
  v52(v17, v13);
  objc_msgSend(v7, "bounds");
  if (v29 + v48 + a6 > CGRectGetWidth(v60))
  {
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView], "setHidden:", 1);
    v49 = v18;
    v50 = v55;
    objc_msgSend(v49, "setText:", v55);

    sub_27CAF0(v33, v34, v56 & 1);
    swift_bridgeObjectRelease(v34);
    return;
  }

  swift_bridgeObjectRelease(v34);
  v38 = v56 & 1;
LABEL_13:
  sub_27CD88(1, v38, a3, v37, a5, a6);
}

void sub_27D35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  char *v8;
  _BYTE v9[192];
  _BYTE v10[32];

  v1 = type metadata accessor for PlayState(0);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v9[-v5];
  v7 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState, v10, 0, 0);
  sub_19C4C(v7, (uint64_t)v6, type metadata accessor for PlayState);
  sub_19C4C((uint64_t)v6, (uint64_t)v3, type metadata accessor for PlayState);
  v8 = (char *)&loc_27D438 + dword_27D73C[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

double sub_27D448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v29;
  char v30;
  char v31;

  sub_D1D4(v2, &qword_3D0A50);
  sub_FA4C(v0, type metadata accessor for PlayState);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style + 1) & 1) != 0)
    return sub_27DBD8();
  if (qword_3CF5E8 != -1)
    swift_once(&qword_3CF5E8, sub_1411F8);
  v5 = xmmword_3FC2D0;
  v6 = *((_QWORD *)&xmmword_3FC2E0 + 1);
  *(_QWORD *)(v3 - 240) = xmmword_3FC2E0;
  *(_QWORD *)(v3 - 232) = v5;
  *(_QWORD *)(v3 - 312) = xmmword_3FC2F0;
  v7 = *((_QWORD *)&xmmword_3FC2F0 + 1);
  v8 = *((_QWORD *)&xmmword_3FC300 + 1);
  *(_QWORD *)(v3 - 256) = xmmword_3FC300;
  *(_QWORD *)(v3 - 248) = v7;
  v9 = xmmword_3FC310;
  *(_OWORD *)(v3 - 288) = xmmword_3FC310;
  v10 = qword_3FC320;
  *(_QWORD *)(v3 - 272) = qword_3FC320;
  v11 = word_3FC328;
  *(_DWORD *)(v3 - 264) = word_3FC328;
  v12 = HIBYTE(word_3FC328);
  *(_DWORD *)(v3 - 260) = HIBYTE(word_3FC328);
  v13 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  v31 = v12;
  v30 = v11;
  v29 = v10;
  *(_QWORD *)(v3 - 304) = *((_QWORD *)&v5 + 1);
  v15 = *(_QWORD *)(v3 - 248);
  v14 = *(_QWORD *)(v3 - 240);
  v16 = v6;
  v17 = v6;
  v18 = *(_QWORD *)(v3 - 312);
  v19 = *(void **)(v3 - 256);
  *(_QWORD *)(v3 - 296) = v8;
  sub_DDA0((void *)v5, *((uint64_t *)&v5 + 1), v14, v16, v18, v15, v19, v8, v9, *((uint64_t *)&v9 + 1), v29, v30, v31);
  v20 = objc_msgSend(v13, "system");
  v21 = objc_msgSend(v20, "preferredContentSizeCategory");

  v22 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v21);
  *(_QWORD *)(v3 - 224) = *(_QWORD *)(v3 - 232);
  *(_QWORD *)(v3 - 216) = *((_QWORD *)&v5 + 1);
  *(_QWORD *)(v3 - 208) = v14;
  *(_QWORD *)(v3 - 200) = v17;
  *(_QWORD *)(v3 - 192) = v18;
  *(_QWORD *)(v3 - 184) = v15;
  *(_QWORD *)(v3 - 176) = v19;
  *(_QWORD *)(v3 - 168) = v8;
  v23 = *(_QWORD *)(v3 - 288);
  v24 = *(_QWORD *)(v3 - 280);
  *(_QWORD *)(v3 - 160) = v23;
  *(_QWORD *)(v3 - 152) = v24;
  v25 = *(_QWORD *)(v3 - 272);
  *(_QWORD *)(v3 - 144) = v25;
  LODWORD(v13) = *(_DWORD *)(v3 - 264);
  *(_BYTE *)(v3 - 136) = (_BYTE)v13;
  LODWORD(v8) = *(_DWORD *)(v3 - 260);
  *(_BYTE *)(v3 - 135) = v8;
  v26 = sub_1D5728(v3 - 224, v22);
  v27 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v26, 0.0);

  sub_DCC8(*(void **)(v3 - 232), *(_QWORD *)(v3 - 304), *(_QWORD *)(v3 - 240), v17, v18, *(_QWORD *)(v3 - 248), *(void **)(v3 - 256), *(_QWORD *)(v3 - 296), v23, v24, v25, (char)v13, v8);
  objc_msgSend(v27, "lineHeight");

  return v4;
}

void sub_27D7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  char *v8;
  _BYTE v9[192];
  _BYTE v10[32];

  v1 = type metadata accessor for PlayState(0);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v9[-v5];
  v7 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState, v10, 0, 0);
  sub_19C4C(v7, (uint64_t)v6, type metadata accessor for PlayState);
  sub_19C4C((uint64_t)v6, (uint64_t)v3, type metadata accessor for PlayState);
  v8 = (char *)&loc_27D8AC + *((int *)qword_27DBC8 + swift_getEnumCaseMultiPayload(v3, v1));
  __asm { BR              X10 }
}

double sub_27D8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v29;
  char v30;
  char v31;

  sub_D1D4(v2, &qword_3D0A50);
  sub_FA4C(v0, type metadata accessor for PlayState);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style + 1) & 1) != 0)
    return sub_27DBD8();
  if (qword_3CF5E8 != -1)
    swift_once(&qword_3CF5E8, sub_1411F8);
  v4 = UIViewNoIntrinsicMetric;
  v5 = xmmword_3FC2D0;
  v6 = *((_QWORD *)&xmmword_3FC2E0 + 1);
  *(_QWORD *)(v3 - 240) = xmmword_3FC2E0;
  *(_QWORD *)(v3 - 232) = v5;
  *(_QWORD *)(v3 - 312) = xmmword_3FC2F0;
  v7 = *((_QWORD *)&xmmword_3FC2F0 + 1);
  v8 = *((_QWORD *)&xmmword_3FC300 + 1);
  *(_QWORD *)(v3 - 256) = xmmword_3FC300;
  *(_QWORD *)(v3 - 248) = v7;
  v9 = xmmword_3FC310;
  *(_OWORD *)(v3 - 288) = xmmword_3FC310;
  v10 = qword_3FC320;
  *(_QWORD *)(v3 - 272) = qword_3FC320;
  v11 = word_3FC328;
  *(_DWORD *)(v3 - 264) = word_3FC328;
  v12 = HIBYTE(word_3FC328);
  *(_DWORD *)(v3 - 260) = HIBYTE(word_3FC328);
  v13 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  v31 = v12;
  v30 = v11;
  v29 = v10;
  *(_QWORD *)(v3 - 304) = *((_QWORD *)&v5 + 1);
  v15 = *(_QWORD *)(v3 - 248);
  v14 = *(_QWORD *)(v3 - 240);
  v16 = v6;
  v17 = v6;
  v18 = *(_QWORD *)(v3 - 312);
  v19 = *(void **)(v3 - 256);
  *(_QWORD *)(v3 - 296) = v8;
  sub_DDA0((void *)v5, *((uint64_t *)&v5 + 1), v14, v16, v18, v15, v19, v8, v9, *((uint64_t *)&v9 + 1), v29, v30, v31);
  v20 = objc_msgSend(v13, "system");
  v21 = objc_msgSend(v20, "preferredContentSizeCategory");

  v22 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v21);
  *(_QWORD *)(v3 - 224) = *(_QWORD *)(v3 - 232);
  *(_QWORD *)(v3 - 216) = *((_QWORD *)&v5 + 1);
  *(_QWORD *)(v3 - 208) = v14;
  *(_QWORD *)(v3 - 200) = v17;
  *(_QWORD *)(v3 - 192) = v18;
  *(_QWORD *)(v3 - 184) = v15;
  *(_QWORD *)(v3 - 176) = v19;
  *(_QWORD *)(v3 - 168) = v8;
  v23 = *(_QWORD *)(v3 - 288);
  v24 = *(_QWORD *)(v3 - 280);
  *(_QWORD *)(v3 - 160) = v23;
  *(_QWORD *)(v3 - 152) = v24;
  v25 = *(_QWORD *)(v3 - 272);
  *(_QWORD *)(v3 - 144) = v25;
  LODWORD(v13) = *(_DWORD *)(v3 - 264);
  *(_BYTE *)(v3 - 136) = (_BYTE)v13;
  LODWORD(v8) = *(_DWORD *)(v3 - 260);
  *(_BYTE *)(v3 - 135) = v8;
  v26 = sub_1D5728(v3 - 224, v22);
  v27 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v26, 0.0);

  sub_DCC8(*(void **)(v3 - 232), *(_QWORD *)(v3 - 304), *(_QWORD *)(v3 - 240), v17, v18, *(_QWORD *)(v3 - 248), *(void **)(v3 - 256), *(_QWORD *)(v3 - 296), v23, v24, v25, (char)v13, v8);
  objc_msgSend(v27, "lineHeight");

  return v4;
}

double sub_27DBD8()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  char v5;
  char v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;

  if (qword_3CF5E8 != -1)
    swift_once(&qword_3CF5E8, sub_1411F8);
  v0 = xmmword_3FC2D0;
  v1 = *((_QWORD *)&xmmword_3FC2E0 + 1);
  v22 = xmmword_3FC2E0;
  v23 = (void *)xmmword_3FC2D0;
  v14 = xmmword_3FC2F0;
  v2 = *((_QWORD *)&xmmword_3FC300 + 1);
  v20 = (void *)xmmword_3FC300;
  v21 = *((_QWORD *)&xmmword_3FC2F0 + 1);
  v3 = xmmword_3FC310;
  v15 = xmmword_3FC310;
  v4 = qword_3FC320;
  v16 = qword_3FC320;
  v5 = word_3FC328;
  v6 = HIBYTE(word_3FC328);
  v17 = word_3FC328;
  v18 = HIBYTE(word_3FC328);
  v7 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  sub_DDA0((void *)v0, *((uint64_t *)&v0 + 1), v22, v1, v14, v21, v20, v2, v3, *((uint64_t *)&v3 + 1), v4, v5, v6);
  v8 = objc_msgSend(v7, "system");
  v9 = objc_msgSend(v8, "preferredContentSizeCategory");

  v10 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v9);
  v24 = v0;
  v25 = v22;
  v26 = v1;
  v27 = v14;
  v28 = v21;
  v29 = v20;
  v30 = v2;
  v31 = v15;
  v32 = v16;
  v33 = v17;
  v34 = v18;
  v11 = sub_1D5728((uint64_t)&v24, v10);
  v12 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v11, 0.0);

  sub_DCC8(v23, *((uint64_t *)&v0 + 1), v22, v1, v14, v21, v20, v2, v15, *((uint64_t *)&v15 + 1), v16, v17, v18);
  objc_msgSend(v12, "lineHeight");

  if (qword_3CFC90 != -1)
    swift_once(&qword_3CFC90, sub_279A40);
  return dbl_303B00[*(char *)(v19 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle)];
}

void sub_27DE6C(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  double v15;
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for PlaybackStatusView(0);
  objc_msgSendSuper2(&v16, "traitCollectionDidChange:", a1);
  if (a1)
  {
    v3 = a1;
    v4 = objc_msgSend(v3, "preferredContentSizeCategory");
    v5 = objc_msgSend(v1, "traitCollection");
    v6 = objc_msgSend(v5, "preferredContentSizeCategory");

    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    if (v7 == v10 && v9 == v11)
    {

      swift_bridgeObjectRelease_n(v9, 2);
    }
    else
    {
      v13 = v11;
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);

      swift_bridgeObjectRelease(v9);
      *(_QWORD *)&v15 = swift_bridgeObjectRelease(v13).n128_u64[0];
      if ((v14 & 1) == 0)
        objc_msgSend(v1, "invalidateIntrinsicContentSize", v15);
    }

  }
}

uint64_t sub_27E010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  id v7;
  void *v8;
  _BYTE v11[24];

  v1 = type metadata accessor for PlayState(0);
  __chkstk_darwin(v1);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState, v11, 0, 0);
  sub_19C4C(v4, (uint64_t)v3, type metadata accessor for PlayState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  v6 = 0;
  if (EnumCaseMultiPayload != 2)
  {
    v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel), "text"));
    if (v7)
    {
      v8 = v7;
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);

    }
    else
    {
      v6 = 0;
    }
    sub_FA4C((uint64_t)v3, type metadata accessor for PlayState);
  }
  return v6;
}

uint64_t sub_27E134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  id v7;
  void *v8;
  _BYTE v11[24];

  v1 = type metadata accessor for PlayState(0);
  __chkstk_darwin(v1);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState, v11, 0, 0);
  sub_19C4C(v4, (uint64_t)v3, type metadata accessor for PlayState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  v6 = 0;
  if (EnumCaseMultiPayload == 1)
  {
    v7 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playedDateLabel), "text");
    if (v7)
    {
      v8 = v7;
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);

    }
    else
    {
      v6 = 0;
    }
    sub_D1D4((uint64_t)v3, &qword_3D0A50);
  }
  return v6;
}

id sub_27E278()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaybackStatusView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_27E3CC()
{
  return type metadata accessor for PlaybackStatusView(0);
}

uint64_t type metadata accessor for PlaybackStatusView(uint64_t a1)
{
  uint64_t result;

  result = qword_3DF640;
  if (!qword_3DF640)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaybackStatusView);
  return result;
}

uint64_t sub_27E410(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[15];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = "\t";
  v4[3] = &unk_3037A0;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = &unk_3037B8;
  v4[7] = &unk_3037B8;
  v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[9] = &unk_3037D0;
  v4[10] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[11] = &unk_3037E8;
  v4[12] = &unk_303800;
  result = type metadata accessor for PlayState(319);
  if (v3 <= 0x3F)
  {
    v4[13] = *(_QWORD *)(result - 8) + 64;
    v4[14] = (char *)&value witness table for Builtin.Int64 + 64;
    return swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
  return result;
}

void destroy for PlaybackStatusView.ThemeOptions(uint64_t a1)
{

  sub_DCC8(*(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112), *(_BYTE *)(a1 + 113));
}

uint64_t initializeWithCopy for PlaybackStatusView.ThemeOptions(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v27 = *(_QWORD *)(a2 + 32);
  v28 = v6;
  v25 = *(_QWORD *)(a2 + 48);
  v26 = *(_QWORD *)(a2 + 40);
  v8 = *(void **)(a2 + 72);
  v23 = *(_QWORD *)(a2 + 64);
  v24 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 88);
  v22 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a2 + 104);
  v12 = *(_BYTE *)(a2 + 112);
  v13 = *(_BYTE *)(a2 + 113);
  v14 = v4;
  v15 = v5;
  v16 = v7;
  sub_DDA0(v28, v27, v26, v25, v24, v23, v8, v22, v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 24) = v28;
  *(_QWORD *)(a1 + 32) = v27;
  *(_QWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v25;
  *(_QWORD *)(a1 + 56) = v24;
  *(_QWORD *)(a1 + 64) = v23;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v22;
  *(_QWORD *)(a1 + 88) = v9;
  *(_QWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 104) = v11;
  *(_BYTE *)(a1 + 112) = v12;
  *(_BYTE *)(a1 + 113) = v13;
  v17 = *(void **)(a2 + 120);
  v18 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v17;
  *(_QWORD *)(a1 + 128) = v18;
  v19 = v17;
  v20 = v18;
  return a1;
}

uint64_t assignWithCopy for PlaybackStatusView.ThemeOptions(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  char v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(_QWORD *)(a2 + 56);
  v18 = *(_QWORD *)(a2 + 64);
  v19 = *(void **)(a2 + 72);
  v20 = *(_QWORD *)(a2 + 80);
  v40 = *(_QWORD *)(a2 + 88);
  v41 = *(_QWORD *)(a2 + 96);
  v42 = *(_QWORD *)(a2 + 104);
  v43 = *(_BYTE *)(a2 + 112);
  v44 = *(_BYTE *)(a2 + 113);
  sub_DDA0(v13, v14, v15, v16, v17, v18, v19, v20, v40, v41, v42, v43, v44);
  v21 = *(void **)(a1 + 24);
  v22 = *(_QWORD *)(a1 + 32);
  v23 = *(_QWORD *)(a1 + 40);
  v24 = *(_QWORD *)(a1 + 48);
  v25 = *(_QWORD *)(a1 + 56);
  v26 = *(_QWORD *)(a1 + 64);
  v27 = *(void **)(a1 + 72);
  v28 = *(_QWORD *)(a1 + 80);
  v29 = *(_OWORD *)(a1 + 88);
  v30 = *(_QWORD *)(a1 + 104);
  v31 = *(_BYTE *)(a1 + 112);
  v32 = *(_BYTE *)(a1 + 113);
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = v14;
  *(_QWORD *)(a1 + 40) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v17;
  *(_QWORD *)(a1 + 64) = v18;
  *(_QWORD *)(a1 + 72) = v19;
  *(_QWORD *)(a1 + 80) = v20;
  *(_QWORD *)(a1 + 88) = v40;
  *(_QWORD *)(a1 + 96) = v41;
  *(_QWORD *)(a1 + 104) = v42;
  *(_BYTE *)(a1 + 112) = v43;
  *(_BYTE *)(a1 + 113) = v44;
  sub_DCC8(v21, v22, v23, v24, v25, v26, v27, v28, v29, *((uint64_t *)&v29 + 1), v30, v31, v32);
  v33 = *(void **)(a2 + 120);
  v34 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v33;
  v35 = v33;

  v36 = *(void **)(a2 + 128);
  v37 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v36;
  v38 = v36;

  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for PlaybackStatusView.ThemeOptions(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  char v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;
  void *v21;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v6 = *(_QWORD *)(a2 + 104);
  v7 = *(_BYTE *)(a2 + 112);
  v8 = *(_BYTE *)(a2 + 113);
  v9 = *(void **)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(void **)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_OWORD *)(a1 + 88);
  v18 = *(_QWORD *)(a1 + 104);
  v19 = *(_BYTE *)(a1 + 112);
  v20 = *(_BYTE *)(a1 + 113);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v6;
  *(_BYTE *)(a1 + 112) = v7;
  *(_BYTE *)(a1 + 113) = v8;
  sub_DCC8(v9, v10, v11, v12, v13, v14, v15, v16, v17, *((uint64_t *)&v17 + 1), v18, v19, v20);

  v21 = *(void **)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);

  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackStatusView.ThemeOptions(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackStatusView.ThemeOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackStatusView.ThemeOptions()
{
  return &type metadata for PlaybackStatusView.ThemeOptions;
}

ValueMetadata *type metadata accessor for PlaybackStatusView.StyleOptions()
{
  return &type metadata for PlaybackStatusView.StyleOptions;
}

uint64_t storeEnumTagSinglePayload for PlaybackStatusView.ProgressBarStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_27EA2C + 4 * byte_303735[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_27EA60 + 4 * byte_303730[v4]))();
}

uint64_t sub_27EA60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_27EA68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x27EA70);
  return result;
}

uint64_t sub_27EA7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x27EA84);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_27EA88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_27EA90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackStatusView.ProgressBarStyle()
{
  return &type metadata for PlaybackStatusView.ProgressBarStyle;
}

unint64_t sub_27EAB0()
{
  unint64_t result;

  result = qword_3DF650;
  if (!qword_3DF650)
  {
    result = swift_getWitnessTable(&unk_303894, &type metadata for PlaybackStatusView.ProgressBarStyle);
    atomic_store(result, (unint64_t *)&qword_3DF650);
  }
  return result;
}

unint64_t sub_27EAF8()
{
  unint64_t result;

  result = qword_3DF658;
  if (!qword_3DF658)
  {
    result = swift_getWitnessTable(&unk_3038EC, &type metadata for PlaybackStatusView.StyleOptions);
    atomic_store(result, (unint64_t *)&qword_3DF658);
  }
  return result;
}

unint64_t sub_27EB40()
{
  unint64_t result;

  result = qword_3DF660;
  if (!qword_3DF660)
  {
    result = swift_getWitnessTable(&unk_3038BC, &type metadata for PlaybackStatusView.StyleOptions);
    atomic_store(result, (unint64_t *)&qword_3DF660);
  }
  return result;
}

unint64_t sub_27EB88()
{
  unint64_t result;

  result = qword_3DF668;
  if (!qword_3DF668)
  {
    result = swift_getWitnessTable(&unk_303914, &type metadata for PlaybackStatusView.StyleOptions);
    atomic_store(result, (unint64_t *)&qword_3DF668);
  }
  return result;
}

unint64_t sub_27EBD0()
{
  unint64_t result;

  result = qword_3DF670;
  if (!qword_3DF670)
  {
    result = swift_getWitnessTable(&unk_30394C, &type metadata for PlaybackStatusView.StyleOptions);
    atomic_store(result, (unint64_t *)&qword_3DF670);
  }
  return result;
}

void sub_27EC14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v21[2];
  _BYTE v22[24];
  _BYTE v23[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF4F0);
  __chkstk_darwin(v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlayState(0);
  __chkstk_darwin(v7);
  v21[1] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)v21 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)v21 - v16;
  v18 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState, v23, 0, 0);
  sub_19C4C(v18, (uint64_t)v17, type metadata accessor for PlayState);
  swift_getObjectType();
  sub_27EF38(a1);
  sub_19C4C(v18, (uint64_t)v11, type metadata accessor for PlayState);
  swift_beginAccess(v18, v22, 33, 0);
  sub_10DB48((uint64_t)v14, v18);
  swift_endAccess(v22);
  sub_27AA00((uint64_t)v11);
  sub_FA4C((uint64_t)v14, type metadata accessor for PlayState);
  sub_FA4C((uint64_t)v11, type metadata accessor for PlayState);
  v19 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_19C4C((uint64_t)v17, (uint64_t)v6, type metadata accessor for PlayState);
  sub_19C4C(v18, v19, type metadata accessor for PlayState);
  v20 = (char *)sub_27EE0C + 4 * byte_30373A[swift_getEnumCaseMultiPayload(v6, v7)];
  __asm { BR              X10 }
}

uint64_t sub_27EE0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void (*v7)(__n128);
  uint64_t v8;
  __n128 v9;

  if (swift_getEnumCaseMultiPayload(v1, v4))
  {
    v6 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playStateChangeHandler;
    v7 = *(void (**)(__n128))(v2
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playStateChangeHandler);
    if (v7)
    {
      v8 = *(_QWORD *)(v6 + 8);
      v9 = swift_retain(v8);
      v7(v9);
      sub_1D618((uint64_t)v7, v8);
    }
    sub_FA4C(v3, type metadata accessor for PlayState);
    return sub_D1D4(v0, &qword_3DF4F0);
  }
  else
  {
    sub_FA4C(v3, type metadata accessor for PlayState);
    return sub_FA4C(v0, type metadata accessor for PlayState);
  }
}

void sub_27EF38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C(a1, (uint64_t)v4, v5);
  v6 = (char *)sub_27EFCC + 4 * byte_30373E[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_27EFCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for PlayState(0);
  return swift_storeEnumTagMultiPayload(v0, v1, 3);
}

id sub_27F098(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_opt_self(UIView);
  v3 = objc_msgSend(v2, "areAnimationsEnabled");
  objc_msgSend(v2, "setAnimationsEnabled:", 0);
  sub_27EC14(a1);
  return objc_msgSend(v2, "setAnimationsEnabled:", v3);
}

void sub_27F110(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  _BYTE v25[24];
  char v26[24];

  v3 = v2;
  v6 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v6);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(&off_3D3FF8, v26, 0, 0);
  if (off_3D3FF8)
  {
    v9 = *(_QWORD *)&stru_68.sectname[(_QWORD)off_3D3FF8];
    v10 = *(_QWORD *)&stru_68.segname[(_QWORD)off_3D3FF8 - 8];
    ObjectType = swift_getObjectType();
    v12 = swift_unknownObjectRetain(v9);
    v13 = dispatch thunk of LibraryDataProviderProtocol.episodePlayStateController.getter(ObjectType, v10, v12);
    swift_unknownObjectRelease(v9);
    v14 = type metadata accessor for PlaybackStatusPresenter(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    swift_bridgeObjectRetain(a2);
    swift_retain(v13);
    v15 = sub_276AA0(a1, a2, v13);
    v15[5] = &off_38F0B8;
    v16 = swift_unknownObjectWeakAssign(v15 + 4, v3);
    Strong = swift_unknownObjectWeakLoadStrong(v16);
    if (Strong)
    {
      v18 = Strong;
      v19 = v15[5];
      v20 = swift_getObjectType();
      v21 = (uint64_t)v15 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
      swift_beginAccess((char *)v15 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v25, 0, 0);
      sub_19C4C(v21, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
      v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 8);
      v23 = v3;
      v22(v8, v20, v19);
      swift_unknownObjectRelease(v18);
      sub_FA4C((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);

    }
    v24 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_presenter];
    *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_presenter] = v15;
    swift_release(v13);
    swift_release(v24);
  }
  else
  {
    __break(1u);
  }
}

void sub_27F2E4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  _BYTE v23[24];
  char v24[24];

  v2 = v1;
  v4 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(&off_3D3FF8, v24, 0, 0);
  if (off_3D3FF8)
  {
    v7 = *(_QWORD *)&stru_68.sectname[(_QWORD)off_3D3FF8];
    v8 = *(_QWORD *)&stru_68.segname[(_QWORD)off_3D3FF8 - 8];
    ObjectType = swift_getObjectType();
    v10 = swift_unknownObjectRetain(v7);
    v11 = dispatch thunk of LibraryDataProviderProtocol.episodePlayStateController.getter(ObjectType, v8, v10);
    swift_unknownObjectRelease(v7);
    v12 = type metadata accessor for PlaybackStatusPresenter(0);
    swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    swift_retain(v11);
    v13 = sub_276978(a1, v11);
    v13[5] = &off_38F0B8;
    v14 = swift_unknownObjectWeakAssign(v13 + 4, v2);
    Strong = swift_unknownObjectWeakLoadStrong(v14);
    if (Strong)
    {
      v16 = Strong;
      v17 = v13[5];
      v18 = swift_getObjectType();
      v19 = (uint64_t)v13 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
      swift_beginAccess((char *)v13 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v23, 0, 0);
      sub_19C4C(v19, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
      v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 8);
      v21 = v2;
      v20(v6, v18, v17);
      swift_unknownObjectRelease(v16);
      sub_FA4C((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);

    }
    v22 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_presenter];
    *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_presenter] = v13;
    swift_release(v11);
    swift_release(v22);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_27F4A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v16;
  _BYTE v17[96];
  _BYTE v18[104];

  v4 = *a1;
  v16 = a1[1];
  v5 = a1[2];
  sub_D210((uint64_t)(a1 + 3), (uint64_t)v17, &qword_3D8408);
  v7 = a1[15];
  v6 = a1[16];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  sub_D210((uint64_t)(a2 + 3), (uint64_t)v18, &qword_3D8408);
  v12 = a2[15];
  v11 = a2[16];
  sub_20B7A0();
  if ((static NSObject.== infix(_:_:)(v4, v8) & 1) != 0
    && (static NSObject.== infix(_:_:)(v16, v9) & 1) != 0
    && (static NSObject.== infix(_:_:)(v5, v10) & 1) != 0
    && (sub_1D62F8((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0), sub_1D62F8((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DDA0), v13 = sub_2795FC((uint64_t)v17, (uint64_t)v18), sub_1D62F8((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DCC8), sub_1D62F8((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_DCC8), (v13 & 1) != 0)&& (static NSObject.== infix(_:_:)(v7, v12) & 1) != 0)
  {
    v14 = static NSObject.== infix(_:_:)(v6, v11);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_27F5F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_27F614()
{
  uint64_t v0;

  sub_279BB0(*(char **)(v0 + 16));
}

uint64_t sub_27F61C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double block_copy_helper_66(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_66(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_27F644(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  void *v14;

  v14 = *(void **)(a1 + 96);
  v2 = *(_QWORD *)(a1 + 112);
  v13 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_QWORD *)(a1 + 136);
  v6 = *(void **)(a1 + 144);
  v7 = *(_QWORD *)(a1 + 152);
  v12 = *(_OWORD *)(a1 + 160);
  v8 = *(_QWORD *)(a1 + 176);
  v9 = *(_BYTE *)(a1 + 184);
  v10 = *(_BYTE *)(a1 + 185);
  sub_DCC8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
  sub_DCC8(v14, v13, v2, v3, v4, v5, v6, v7, v12, *((uint64_t *)&v12 + 1), v8, v9, v10);
  return a1;
}

uint64_t sub_27F728(uint64_t a1)
{
  sub_DD48(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

id sub_27F75C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "layoutIfNeeded");
}

uint64_t sub_27F76C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_27F780()
{
  __int128 v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  char *v4;
  char *v5;
  __int16 v6;
  NSString v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;
  double v15;
  char *v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void *v25;
  __int16 v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char v30[24];
  char v31[24];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v23 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playedDateLabel;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF5E8 != -1)
    goto LABEL_7;
  while (1)
  {
    v0 = xmmword_3FC2D0;
    v1 = xmmword_3FC2E0;
    v2 = xmmword_3FC2F0;
    v3 = xmmword_3FC300;
    v28 = *((_QWORD *)&xmmword_3FC310 + 1);
    v29 = qword_3FC320;
    v26 = word_3FC328;
    v27 = HIBYTE(word_3FC328);
    v32 = xmmword_3FC2D0;
    v33 = xmmword_3FC2E0;
    v34 = xmmword_3FC2F0;
    v35 = xmmword_3FC300;
    v22 = xmmword_3FC310;
    v36 = xmmword_3FC310;
    *(_QWORD *)&v37 = qword_3FC320;
    WORD4(v37) = word_3FC328;
    sub_DDA0((void *)xmmword_3FC2D0, *((uint64_t *)&xmmword_3FC2D0 + 1), xmmword_3FC2E0, *((uint64_t *)&xmmword_3FC2E0 + 1), xmmword_3FC2F0, SBYTE8(xmmword_3FC2F0), (void *)xmmword_3FC300, *((uint64_t *)&xmmword_3FC300 + 1), xmmword_3FC310, *((uint64_t *)&xmmword_3FC310 + 1), qword_3FC320, word_3FC328, SHIBYTE(word_3FC328));
    *(_QWORD *)&v23[(_QWORD)v25] = sub_A96AC((uint64_t)&v32, 1, 0, 1);
    v24 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_timeLabel;
    v32 = v0;
    v33 = v1;
    v34 = v2;
    v35 = v3;
    *(_QWORD *)&v36 = v22;
    *((_QWORD *)&v36 + 1) = v28;
    *(_QWORD *)&v37 = v29;
    BYTE8(v37) = v26;
    BYTE9(v37) = v27;
    sub_DDA0((void *)v0, *((uint64_t *)&v0 + 1), v1, *((uint64_t *)&v1 + 1), v2, SBYTE8(v2), (void *)v3, *((uint64_t *)&v3 + 1), v22, v28, v29, v26, v27);
    *(_QWORD *)&v24[(_QWORD)v25] = sub_A96AC((uint64_t)&v32, 1, 0, 1);
    v4 = (char *)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_itemDuration;
    *(_QWORD *)v4 = 0;
    v4[8] = 1;
    v5 = (char *)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_legacyPlayedCheckmarkMargins;
    v6 = v27 ? 256 : 0;
    *(_OWORD *)v5 = xmmword_2F15B0;
    *((_OWORD *)v5 + 1) = xmmword_303B30;
    *((_OWORD *)v5 + 2) = v0;
    *((_OWORD *)v5 + 3) = v1;
    *((_OWORD *)v5 + 4) = v2;
    *((_OWORD *)v5 + 5) = v3;
    *((_QWORD *)v5 + 12) = v22;
    *((_QWORD *)v5 + 13) = v28;
    *((_QWORD *)v5 + 14) = v29;
    *((_WORD *)v5 + 60) = v6 | v26 | 0x8000;
    v23 = (char *)objc_opt_self(UIImage);
    sub_DDA0((void *)v0, *((uint64_t *)&v0 + 1), v1, *((uint64_t *)&v1 + 1), v2, SBYTE8(v2), (void *)v3, *((uint64_t *)&v3 + 1), v22, v28, v29, v26, v27);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v23, "imageNamed:", v7);

    if (v8)
      break;
    __break(1u);
LABEL_7:
    swift_once(&qword_3CF5E8, sub_1411F8);
  }
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_checkmarkImageView;
  v10 = objc_msgSend(v8, "imageWithRenderingMode:", 2);

  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v10);
  *(_QWORD *)((char *)v25 + v9) = v11;
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView;
  v13 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EpisodePlayProgressView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight];
  *(_QWORD *)&v15 = swift_beginAccess(&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight], v31, 1, 0).n128_u64[0];
  *(_QWORD *)v14 = 0x4014000000000000;
  objc_msgSend(v13, "setNeedsLayout", v15);
  v16 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius];
  *(_QWORD *)&v17 = swift_beginAccess(&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius], v30, 1, 0).n128_u64[0];
  *(_QWORD *)v16 = 0x4004000000000000;
  objc_msgSend(v13, "setNeedsLayout", v17);
  *(_QWORD *)((char *)v25 + v12) = v13;
  *((_BYTE *)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_preferredBarStyle) = 1;
  *((_BYTE *)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle) = 1;
  *(_QWORD *)((char *)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style) = 31;
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme;
  if (qword_3CFC98 != -1)
    swift_once(&qword_3CFC98, sub_27A374);
  v38 = xmmword_3FD6E8;
  v39 = *(_OWORD *)&byte_3FD6F8;
  v40 = qword_3FD708;
  v34 = xmmword_3FD6A8;
  v35 = *(_OWORD *)&qword_3FD6B8;
  v36 = xmmword_3FD6C8;
  v37 = *(_OWORD *)&qword_3FD6D8;
  v32 = xmmword_3FD688;
  v33 = *(_OWORD *)&qword_3FD698;
  memmove((char *)v25 + v18, &xmmword_3FD688, 0x88uLL);
  *(_QWORD *)((char *)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_horizontalSpacing) = 0x4024000000000000;
  *(_QWORD *)((char *)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_presenter) = 0;
  v19 = (char *)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playStateChangeHandler;
  *v19 = 0;
  v19[1] = 0;
  v20 = (char *)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState;
  v21 = type metadata accessor for PlayState(0);
  swift_storeEnumTagMultiPayload(v20, v21, 3);
  *(_QWORD *)((char *)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_cachedHeight) = 0;
  sub_10D99C((uint64_t)&v32);

  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001CLL, 0x8000000000311E40, "ShelfKitCollectionViews/PlaybackStatusView.swift", 48, 2, 428, 0);
  __break(1u);
}

void sub_27FCAC(char a1, double a2)
{
  char *v2;
  CGFloat Height;
  uint64_t v6;
  double v7;
  void *v8;
  double MaxX;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  objc_msgSend(v2, "bounds");
  Height = CGRectGetHeight(v10);
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_cachedHeight;
  if (Height != *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_cachedHeight])
  {
    objc_msgSend(v2, "bounds");
    *(CGFloat *)&v2[v6] = CGRectGetHeight(v11);
    objc_msgSend(v2, "bounds");
    v7 = CGRectGetHeight(v12) * 0.5 - a2 * 0.5;
    v8 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_progressView];
    MaxX = 0.0;
    if ((a1 & 1) != 0)
    {
      objc_msgSend(v2, "bounds", 0.0);
      MaxX = CGRectGetMaxX(v13);
    }
    objc_msgSend(v8, "setFrame:", MaxX, v7, 0.0, a2);
  }
}

uint64_t sub_27FD88(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int16 v4;

  v4 = *(_WORD *)(a1 + 120);
  a2(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_27FE00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  char v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t OpaqueTypeConformance2;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  __n128 v84;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v2 = v1;
  v93 = a1;
  v87 = type metadata accessor for EpisodeDownloadState(0);
  v3 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v5 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AccessibilityChildBehavior(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF678);
  __chkstk_darwin(v10);
  v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF680);
  v91 = *(_QWORD *)(v13 - 8);
  v92 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF688);
  __chkstk_darwin(v16);
  v88 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v18);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF690);
  v20 = sub_280470(v2, (uint64_t)&v12[*(int *)(v19 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v20);
  v21 = sub_10EDC(&qword_3DF698, &qword_3DF678, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v89 = v15;
  v90 = v10;
  v22 = v10;
  v23 = v21;
  View.accessibilityElement(children:)(v9, v22, v21);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = sub_D1D4((uint64_t)v12, &qword_3DF678);
  v96 = xmmword_2F48B0;
  v97 = LegacyEpisodeLockup.showTitle.getter(v24);
  v98 = v25;
  v99 = EpisodeCaptionGenerator.caption.getter(v26);
  v100 = v27;
  dispatch thunk of EpisodeStateMachine.currentState.getter(v28);
  v29 = EpisodeBookmarkState.isEpisodeBookmarked.getter(v94);
  v31 = 0x6B72616D6B6F6F42;
  if ((v29 & 1) != 0)
  {
    v32 = 0xEA00000000006465;
  }
  else
  {
    v31 = 0;
    v32 = 0;
  }
  v101 = v31;
  v102 = v32;
  v33 = dispatch thunk of EpisodeStateMachine.currentState.getter(v30);
  v34 = EpisodeDownloadState.isDownloadedEpisode.getter(v33);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v87);
  v36 = 0x64616F6C6E776F44;
  if ((v34 & 1) != 0)
  {
    v37 = 0xEA00000000006465;
  }
  else
  {
    v36 = 0;
    v37 = 0;
  }
  v103 = v36;
  v104 = v37;
  v105 = LegacyLockup.title.getter(v35);
  v106 = v38;
  v39 = v98;
  if (!v98)
  {
    v41 = _swiftEmptyArrayStorage;
    v45 = v100;
    if (!v100)
      goto LABEL_18;
    goto LABEL_13;
  }
  v40 = v97;
  swift_bridgeObjectRetain(v98);
  v41 = sub_20FBCC(0, 1, 1, _swiftEmptyArrayStorage);
  v43 = v41[2];
  v42 = v41[3];
  if (v43 >= v42 >> 1)
    v41 = sub_20FBCC((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
  v41[2] = v43 + 1;
  v44 = &v41[2 * v43];
  v44[4] = v40;
  v44[5] = v39;
  v45 = v100;
  if (v100)
  {
LABEL_13:
    v46 = v99;
    swift_bridgeObjectRetain(v45);
    if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
      v41 = sub_20FBCC(0, v41[2] + 1, 1, v41);
    v48 = v41[2];
    v47 = v41[3];
    if (v48 >= v47 >> 1)
      v41 = sub_20FBCC((_QWORD *)(v47 > 1), v48 + 1, 1, v41);
    v41[2] = v48 + 1;
    v49 = &v41[2 * v48];
    v49[4] = v46;
    v49[5] = v45;
  }
LABEL_18:
  v50 = v102;
  if (v102)
  {
    v51 = v101;
    swift_bridgeObjectRetain(v102);
    if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
      v41 = sub_20FBCC(0, v41[2] + 1, 1, v41);
    v53 = v41[2];
    v52 = v41[3];
    if (v53 >= v52 >> 1)
      v41 = sub_20FBCC((_QWORD *)(v52 > 1), v53 + 1, 1, v41);
    v41[2] = v53 + 1;
    v54 = &v41[2 * v53];
    v54[4] = v51;
    v54[5] = v50;
  }
  v55 = v104;
  if (v104)
  {
    v56 = v103;
    swift_bridgeObjectRetain(v104);
    if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
      v41 = sub_20FBCC(0, v41[2] + 1, 1, v41);
    v58 = v41[2];
    v57 = v41[3];
    if (v58 >= v57 >> 1)
      v41 = sub_20FBCC((_QWORD *)(v57 > 1), v58 + 1, 1, v41);
    v41[2] = v58 + 1;
    v59 = &v41[2 * v58];
    v59[4] = v56;
    v59[5] = v55;
  }
  v60 = v106;
  if (v106)
  {
    v61 = v105;
    swift_bridgeObjectRetain(v106);
    if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
      v41 = sub_20FBCC(0, v41[2] + 1, 1, v41);
    v63 = v41[2];
    v62 = v41[3];
    if (v63 >= v62 >> 1)
      v41 = sub_20FBCC((_QWORD *)(v62 > 1), v63 + 1, 1, v41);
    v41[2] = v63 + 1;
    v64 = &v41[2 * v63];
    v64[4] = v61;
    v64[5] = v60;
  }
  v65 = v96;
  v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3DBE40);
  swift_arrayDestroy(&v97, v65, v66);
  v94 = v41;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA198);
  v68 = sub_10EDC((unint64_t *)&qword_3DA860, &qword_3DA198, (uint64_t)&protocol conformance descriptor for [A]);
  v69 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v67, v68);
  v71 = v70;
  swift_bridgeObjectRelease(v41);
  v94 = (_QWORD *)v69;
  v95 = v71;
  v72 = sub_D254();
  v73 = Text.init<A>(_:)(&v94, &type metadata for String, v72);
  v75 = v74;
  v77 = v76;
  v79 = v78 & 1;
  v94 = (_QWORD *)v90;
  v95 = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v81 = (uint64_t)v88;
  v82 = v92;
  v83 = v89;
  View.accessibilityLabel(_:)(v73, v75, v79, v77, v92, OpaqueTypeConformance2);
  sub_D170(v73, v75, v79);
  v84 = swift_bridgeObjectRelease(v77);
  (*(void (**)(char *, uint64_t, __n128))(v91 + 8))(v83, v82, v84);
  return sub_D210(v81, v93, &qword_3DF688);
}

uint64_t sub_280470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;

  v52 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF6A0);
  __chkstk_darwin(v3);
  v51 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v47 - v6;
  v8 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v8);
  v10 = (_OWORD *)((char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v47 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6BB0);
  __chkstk_darwin(v17);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v47 - v21;
  LegacyLockup.artwork.getter(v23);
  sub_D184((uint64_t)v16, (uint64_t)v13, &qword_3D0A58);
  if (qword_3CFCB0 != -1)
    swift_once(&qword_3CFCB0, sub_28E658);
  v24 = xmmword_3DF9D0;
  v25 = (char *)v10 + *(int *)(v8 + 20);
  v26 = enum case for RoundedCornerStyle.continuous(_:);
  v27 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  __asm { FMOV            V0.2D, #5.0 }
  *v10 = _Q0;
  sub_D1D4((uint64_t)v16, &qword_3D0A58);
  sub_D210((uint64_t)v13, (uint64_t)v22, &qword_3D0A58);
  *(_OWORD *)&v22[*(int *)(v17 + 36)] = v24;
  v33 = sub_10A2EC((uint64_t)v10, (uint64_t)&v22[*(int *)(v17 + 40)]);
  v35 = static Alignment.center.getter(v33, v34);
  v37 = _FrameLayout.init(width:height:alignment:)(&v53, 0x4024000000000000, 0, 0, 1, v35, v36);
  v38 = v53;
  LOBYTE(v26) = v54;
  v39 = v55;
  v50 = v56;
  v48 = v58;
  v49 = v57;
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v37);
  *((_QWORD *)v7 + 1) = 0x4000000000000000;
  v7[16] = 0;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF6A8);
  sub_28080C(a1, (uint64_t)&v7[*(int *)(v40 + 44)]);
  sub_D184((uint64_t)v22, (uint64_t)v19, &qword_3D6BB0);
  v41 = v51;
  sub_D184((uint64_t)v7, v51, &qword_3DF6A0);
  v42 = v52;
  sub_D184((uint64_t)v19, v52, &qword_3D6BB0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF6B0);
  v44 = v42 + *(int *)(v43 + 48);
  *(_QWORD *)v44 = 0;
  *(_BYTE *)(v44 + 8) = 1;
  *(_QWORD *)(v44 + 16) = v38;
  *(_BYTE *)(v44 + 24) = v26;
  *(_QWORD *)(v44 + 32) = v39;
  *(_BYTE *)(v44 + 40) = v50;
  v45 = v48;
  *(_QWORD *)(v44 + 48) = v49;
  *(_QWORD *)(v44 + 56) = v45;
  sub_D184(v41, v42 + *(int *)(v43 + 64), &qword_3DF6A0);
  sub_D1D4((uint64_t)v7, &qword_3DF6A0);
  sub_D1D4((uint64_t)v22, &qword_3D6BB0);
  sub_D1D4(v41, &qword_3DF6A0);
  return sub_D1D4((uint64_t)v19, &qword_3D6BB0);
}

uint64_t sub_28080C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  __n128 v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double (*v82)(char *, uint64_t, __n128);
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[2];

  v80 = a1;
  v87 = a2;
  v3 = type metadata accessor for Image.Scale(0);
  v85 = *(_QWORD *)(v3 - 8);
  v86 = v3;
  __chkstk_darwin(v3);
  v84 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PUITextStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v75 - v10;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC88);
  __chkstk_darwin(v78);
  v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC90);
  v14 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDC98);
  __chkstk_darwin(v77);
  v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDCA0);
  __chkstk_darwin(v79);
  v76 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v88 = (uint64_t)&v75 - v21;
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v22);
  *((_QWORD *)v13 + 1) = 0x4000000000000000;
  v13[16] = 0;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDCA8);
  v24 = sub_280D60(a1, &v13[*(int *)(v23 + 44)]);
  v25 = static PUITextStyle.caption2.getter(v24);
  PUITextStyle.emph.getter(v25);
  v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v83 = v5;
  v26(v11, v5);
  v82 = (double (*)(char *, uint64_t, __n128))v26;
  v27 = sub_10EDC(&qword_3DDCB0, &qword_3DDC88, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.puiFont(_:)(v8, v78, v27);
  v26(v8, v5);
  sub_D1D4((uint64_t)v13, &qword_3DDC88);
  v29 = static Color.secondary.getter(v28);
  KeyPath = swift_getKeyPath(&unk_303BC8);
  v31 = v81;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v16, v81);
  v32 = (uint64_t *)&v18[*(int *)(v77 + 36)];
  *v32 = KeyPath;
  v32[1] = v29;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v31);
  v34 = v84;
  v33 = v85;
  v35 = v86;
  (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v84, enum case for Image.Scale.small(_:), v86);
  v36 = swift_getKeyPath(&unk_303BF8);
  v37 = (uint64_t)v76;
  v38 = (uint64_t *)&v76[*(int *)(v79 + 36)];
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))((char *)v38 + *(int *)(v39 + 28), v34, v35);
  *v38 = v36;
  sub_D184((uint64_t)v18, v37, &qword_3DDC98);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  sub_D1D4((uint64_t)v18, &qword_3DDC98);
  v40 = sub_D210(v37, v88, &qword_3DDCA0);
  v41 = LegacyLockup.title.getter(v40);
  if (v42)
    v43 = v41;
  else
    v43 = 0;
  v44 = 0xE000000000000000;
  if (v42)
    v44 = v42;
  v89[0] = v43;
  v89[1] = v44;
  v45 = sub_D254();
  v46 = Text.init<A>(_:)(v89, &type metadata for String, v45);
  v48 = v47;
  v50 = v49;
  v52 = v51 & 1;
  static PUITextStyle.subhead.getter(v46);
  v53 = Text.puiFont(_:)(v11, v46, v48, v52, v50);
  v55 = v54;
  v57 = v56;
  v59 = v58 & 1;
  sub_D170(v46, v48, v52);
  v60 = swift_bridgeObjectRelease(v50);
  v61.n128_f64[0] = v82(v11, v83, v60);
  v62 = static Color.primary.getter(v61);
  v63 = Text.foregroundColor(_:)(v62, v53, v55, v59, v57);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  swift_release(v62);
  LOBYTE(v62) = v67 & 1;
  sub_D170(v53, v55, v59);
  swift_bridgeObjectRelease(v57);
  v70 = swift_getKeyPath(&unk_303C28);
  v71 = v88;
  sub_D184(v88, v37, &qword_3DDCA0);
  v72 = v87;
  sub_D184(v37, v87, &qword_3DDCA0);
  v73 = v72 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DF6B8) + 48);
  *(_QWORD *)v73 = v63;
  *(_QWORD *)(v73 + 8) = v65;
  *(_BYTE *)(v73 + 16) = v62;
  *(_QWORD *)(v73 + 24) = v69;
  *(_QWORD *)(v73 + 32) = v70;
  *(_QWORD *)(v73 + 40) = 2;
  *(_BYTE *)(v73 + 48) = 0;
  *(_WORD *)(v73 + 49) = 256;
  sub_D130(v63, v65, v62);
  swift_bridgeObjectRetain(v69);
  swift_retain(v70);
  sub_D1D4(v71, &qword_3DDCA0);
  sub_D170(v63, v65, v62);
  swift_release(v70);
  swift_bridgeObjectRelease(v69);
  return sub_D1D4(v37, &qword_3DDCA0);
}

uint64_t sub_280D60@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char v35;
  char v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t, __n128);
  __n128 v40;
  __n128 v41;
  char *v43;
  char *v44;
  char v45;
  char v46;
  uint64_t v47;
  unint64_t v48;

  v44 = a2;
  v3 = type metadata accessor for EpisodeLibraryStateView(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - v8;
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  swift_retain(v10);
  v12 = swift_retain(v11);
  v13.n128_f64[0] = EpisodeLibraryStateView.init(bookmarkStateMachine:downloadStateMachine:)(v10, v11, v12);
  v14 = EpisodeCaptionGenerator.caption.getter(v13);
  if (v15)
  {
    v16 = v15;
    v47 = v14;
    v48 = v15;
    v17 = sub_D254();
    v18 = StringProtocol.localizedUppercase.getter(&type metadata for String, v17);
    v20 = v19;
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    v18 = 0;
    v20 = 0xE000000000000000;
  }
  v47 = v18;
  v48 = v20;
  v21 = sub_D254();
  v22 = Text.init<A>(_:)(&v47, &type metadata for String, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  KeyPath = swift_getKeyPath(&unk_303C28);
  v30 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v30(v6, v9, v3);
  LOBYTE(v47) = v26 & 1;
  v46 = 0;
  v45 = 1;
  v43 = v9;
  v31 = v6;
  v32 = v44;
  v30(v44, v31, v3);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDCE8);
  v34 = &v32[*(int *)(v33 + 48)];
  v35 = v47;
  v36 = v46;
  *(_QWORD *)v34 = v22;
  *((_QWORD *)v34 + 1) = v24;
  v34[16] = v35;
  *((_QWORD *)v34 + 3) = v28;
  *((_QWORD *)v34 + 4) = KeyPath;
  *((_QWORD *)v34 + 5) = 1;
  v34[48] = v36;
  v37 = &v32[*(int *)(v33 + 64)];
  v38 = v45;
  *(_QWORD *)v37 = 0;
  v37[8] = v38;
  sub_D130(v22, v24, v35);
  v39 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  swift_bridgeObjectRetain(v28);
  v40 = swift_retain(KeyPath);
  v39(v43, v3, v40);
  sub_D170(v22, v24, v47);
  swift_release(KeyPath);
  v41 = swift_bridgeObjectRelease(v28);
  return ((uint64_t (*)(char *, uint64_t, __n128))v39)(v31, v3, v41);
}

uint64_t sub_280F84@<X0>(uint64_t a1@<X8>)
{
  return sub_27FE00(a1);
}

void sub_280FBC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for EpisodeCaptionGenerator(0);
  swift_retain_n(a1, 2);
  swift_retain_n(a2, 2);
  v7 = EpisodeCaptionGenerator.__allocating_init(asPartOf:episode:showsSubscriptionBadge:useSearchContext:)(a1, a2, 1, 1);
  v8 = sub_89A0(&qword_3DA148, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeCaptionGenerator, (uint64_t)&protocol conformance descriptor for EpisodeCaptionGenerator);
  v9 = ObservedObject.init(wrappedValue:)(v7, v6, v8);
  v11 = v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D84F8);
  BaseObjectGraph.inject<A>(_:)(&v20, v12, v12);
  v13 = v20;
  v15 = EpisodeStateController.stateMachine(for:)(v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCC08);
  BaseObjectGraph.inject<A>(_:)(&v20, v16, v16);
  v17 = v20;
  v19 = EpisodeStateController.stateMachine(for:)(v18);
  swift_release(v13);
  swift_release(v17);
  swift_release(a1);
  swift_release(a2);
  *a3 = a1;
  a3[1] = v9;
  a3[2] = v11;
  a3[3] = a2;
  a3[4] = v15;
  a3[5] = v19;
}

uint64_t destroy for EyebrowSearchResultView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  return swift_release(a1[5]);
}

uint64_t *initializeWithCopy for EyebrowSearchResultView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  swift_retain(v3);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t *assignWithCopy for EyebrowSearchResultView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[4];
  v11 = a1[4];
  a1[4] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[5];
  v13 = a1[5];
  a1[5] = v12;
  swift_retain(v12);
  swift_release(v13);
  return a1;
}

_QWORD *assignWithTake for EyebrowSearchResultView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *(_QWORD *)a2;
  swift_release(v4);
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  swift_release(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for EyebrowSearchResultView()
{
  return &type metadata for EyebrowSearchResultView;
}

uint64_t sub_2812D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_333F18, 1);
}

unint64_t sub_281304()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_3DF6C0;
  if (!qword_3DF6C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF688);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF678);
    v2[1] = sub_10EDC(&qword_3DF698, &qword_3DF678, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_89A0(&qword_3D0D28, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DF6C0);
  }
  return result;
}

void sub_2813D0(_QWORD *a1@<X8>)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[11];

  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___layoutConstants];
  if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___layoutConstants
         + 88] & 1) != 0)
  {
    sub_281484(v1, (uint64_t)v15);
    v5 = v15[0];
    v4 = v15[1];
    v7 = v15[2];
    v6 = v15[3];
    v9 = v15[4];
    v8 = v15[5];
    v11 = v15[6];
    v10 = v15[7];
    v13 = v15[8];
    v12 = v15[9];
    v14 = v15[10];
    *(_QWORD *)v3 = v15[0];
    *((_QWORD *)v3 + 1) = v4;
    *((_QWORD *)v3 + 2) = v7;
    *((_QWORD *)v3 + 3) = v6;
    *((_QWORD *)v3 + 4) = v9;
    *((_QWORD *)v3 + 5) = v8;
    *((_QWORD *)v3 + 6) = v11;
    *((_QWORD *)v3 + 7) = v10;
    *((_QWORD *)v3 + 8) = v13;
    *((_QWORD *)v3 + 9) = v12;
    *((_QWORD *)v3 + 10) = v14;
    v3[88] = 0;
  }
  else
  {
    v12 = *((_QWORD *)v3 + 9);
    v14 = *((_QWORD *)v3 + 10);
    v10 = *((_QWORD *)v3 + 7);
    v13 = *((_QWORD *)v3 + 8);
    v8 = *((_QWORD *)v3 + 5);
    v11 = *((_QWORD *)v3 + 6);
    v6 = *((_QWORD *)v3 + 3);
    v9 = *((_QWORD *)v3 + 4);
    v4 = *((_QWORD *)v3 + 1);
    v7 = *((_QWORD *)v3 + 2);
    v5 = *(_QWORD *)v3;
  }
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v7;
  a1[3] = v6;
  a1[4] = v9;
  a1[5] = v8;
  a1[6] = v11;
  a1[7] = v10;
  a1[8] = v13;
  a1[9] = v12;
  a1[10] = v14;
}

double sub_281484@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  char *v4;
  int32x2_t v5;
  int64x2_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  double v11;
  double result;

  v3 = objc_msgSend(a1, "traitCollection");
  v4 = (char *)objc_msgSend(v3, "userInterfaceIdiom");

  v5 = vdup_n_s32(v4 == (_BYTE *)&dword_4 + 1);
  v6.i64[0] = v5.u32[0];
  v6.i64[1] = v5.u32[1];
  v7 = (int8x16_t)vcltzq_s64(vshlq_n_s64(v6, 0x3FuLL));
  v8 = vbslq_s8(v7, (int8x16_t)xmmword_303C70, (int8x16_t)xmmword_303C60);
  v9 = vbslq_s8(v7, (int8x16_t)xmmword_303C90, (int8x16_t)xmmword_303C80);
  v10 = vbslq_s8(v7, (int8x16_t)xmmword_303CB0, (int8x16_t)xmmword_303CA0);
  v11 = 18.0;
  if (v4 == (_BYTE *)&dword_4 + 1)
    v11 = 14.0;
  *(_QWORD *)a2 = v8.i64[0];
  *(int8x16_t *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 24) = 0x4080400000000000;
  *(int8x16_t *)(a2 + 32) = v9;
  *(int8x16_t *)(a2 + 48) = v10;
  *(double *)(a2 + 64) = v11;
  result = 40.0;
  *(_OWORD *)(a2 + 72) = xmmword_303CC0;
  return result;
}

char *sub_28155C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  __int128 v9[5];

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___upsellArtworkView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___upsellArtworkView);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___upsellArtworkView);
  }
  else
  {
    v4 = type metadata accessor for UpsellArtworkView();
    v5 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    sub_2813D0(v9);
    *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkSize] = v9[0];
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_2815F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_sizeClass;
  v3 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_sizeClass);
  if (a1 == 8)
  {
    if ((_DWORD)v3 != 8)
      goto LABEL_7;
  }
  else if ((_DWORD)v3 == 8 || (v4 = SizeClass.rawValue.getter(a1), v4 != SizeClass.rawValue.getter(v3)))
  {
LABEL_7:
    v5 = sub_28155C();
    v6 = *(unsigned __int8 *)(v1 + v2);
    v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_sizeClass;
    v8 = v5[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_sizeClass];
    v5[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_sizeClass] = v6;
    if ((_DWORD)v8 == 8)
    {
      if ((_DWORD)v6 == 8)
        goto LABEL_14;
    }
    else if ((_DWORD)v6 != 8)
    {
      v13 = v5;
      v9 = SizeClass.rawValue.getter(v8);
      v10 = SizeClass.rawValue.getter(v6);
      v5 = v13;
      if (v9 == v10)
      {
LABEL_14:

        return;
      }
      LOBYTE(v6) = v13[v7];
    }
    v14 = v5;
    v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_bannerView];
    v12 = *(unsigned __int8 *)(v11 + qword_3D96C0);
    *(_BYTE *)(v11 + qword_3D96C0) = v6;
    sub_17D3E4(v12);
    v5 = v14;
    goto LABEL_14;
  }
}

id sub_281710()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  _QWORD v8[11];

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___horizontalStack;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___horizontalStack);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___horizontalStack);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, "setAxis:", 0);
    objc_msgSend(v4, "setAlignment:", 4);
    objc_msgSend(v4, "setBaselineRelativeArrangement:", 1);
    objc_msgSend(v4, "setLayoutMarginsRelativeArrangement:", 1);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    sub_2813D0(v8);
    objc_msgSend(v4, "setSpacing:", *(double *)&v8[9]);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_281818()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___verticalStackContainerView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___verticalStackContainerView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___verticalStackContainerView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2818AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___buttonStackViewBottomConstraint;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___buttonStackViewBottomConstraint);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___buttonStackViewBottomConstraint);
  }
  else
  {
    v4 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_281C60);
    v5 = objc_msgSend(v4, "bottomAnchor");

    v6 = objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_parentVerticalStack), "bottomAnchor");
    v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_281988()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[11];

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showTitleTopConstraint;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showTitleTopConstraint);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showTitleTopConstraint);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showTitle), "firstBaselineAnchor");
    v5 = sub_281818();
    v6 = objc_msgSend(v5, "topAnchor");

    sub_2813D0(v11);
    v7 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v6, *(double *)&v11[10]);

    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_281A6C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[11];

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___descriptionBottomConstraint;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___descriptionBottomConstraint);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___descriptionBottomConstraint);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_verticalStack), "bottomAnchor");
    v5 = sub_281818();
    v6 = objc_msgSend(v5, "bottomAnchor");

    sub_2813D0(v11);
    v7 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v6, -*(double *)&v11[10]);

    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_281B50()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  double v7;
  char v9;
  uint64_t v10;
  char v11;

  v0 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 7, 3, 13.0);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v1, v0);

  if (v2)
    v3 = (uint64_t)v2;
  else
    v3 = 3;
  v11 = 3;
  v10 = v3;
  v9 = 1;
  v4 = objc_allocWithZone((Class)type metadata accessor for MacButton());
  v5 = v2;
  v6 = sub_F3EC0(&v11, &v10, &v9);
  LODWORD(v7) = 1148846080;
  objc_msgSend(v6, "setContentCompressionResistancePriority:forAxis:", 0, v7);

  return v6;
}

id sub_281C60(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  Class isa;
  double v18;
  id v19;
  char v21;
  uint64_t v22;
  uint64_t v23[11];

  v2 = type metadata accessor for Glyph(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v23[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "traitCollection", v4);
  v8 = (char *)objc_msgSend(v7, "userInterfaceIdiom");

  if (v8 == (_BYTE *)&dword_0 + 1)
  {
    v9 = type metadata accessor for RoundHeaderButton();
    v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
    v21 = 0;
    v11 = Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(0x6C69662E79616C70, 0xE90000000000006CLL, 0x4031000000000000, 0, 5, -1, 0, 0, v21);
    v12 = (void *)Glyph.image.getter(v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    objc_msgSend(v10, "setImage:forState:", v12, 0);

    v13 = objc_msgSend(v10, "heightAnchor");
    v14 = objc_msgSend(v13, "constraintEqualToConstant:", 48.0);

    objc_msgSend(v14, "setActive:", 1);
    v15 = objc_msgSend(v10, "widthAnchor");
    sub_2813D0(v23);
    v16 = objc_msgSend(v15, "constraintGreaterThanOrEqualToConstant:", *(double *)&v23[2]);

    isa = NSLayoutConstraint.withPriority(priority:)((__C::UILayoutPriority)1144750080).super.isa;
    -[objc_class setActive:](isa, "setActive:", 1);

    LODWORD(v18) = 1144766464;
    objc_msgSend(v10, "setContentCompressionResistancePriority:forAxis:", 0, v18);

  }
  else
  {
    HIBYTE(v22) = 1;
    v23[0] = 0;
    BYTE6(v22) = 0;
    v19 = objc_allocWithZone((Class)type metadata accessor for MacButton());
    return sub_F3EC0((char *)&v22 + 7, v23, (char *)&v22 + 6);
  }
  return v10;
}

uint64_t sub_281ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  char v11;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell__primaryButtonController;
  v3 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell__primaryButtonController);
  v4 = v3;
  if (!v3)
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_objectGraph);
    if (v5)
    {
      swift_retain(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_objectGraph));
      v6 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_281C60);
      v11 = 1;
      v10 = 1;
      v7 = type metadata accessor for SmartPlayButtonController(0);
      swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
      v4 = SmartPlayButtonController.init(button:context:platform:objectGraph:)(v6, &v11, &v10, v5);
      v8 = *(_QWORD *)(v1 + v2);
      *(_QWORD *)(v1 + v2) = v4;
      swift_retain(v4);
      swift_release(v8);
    }
    else
    {
      v4 = 0;
    }
  }
  swift_retain(v3);
  return v4;
}

char *sub_281FB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showSubtitleButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showSubtitleButton);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showSubtitleButton);
  }
  else
  {
    v4 = sub_1A50A4();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_28200C(void *a1)
{
  id v2;
  id v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend(a1, "traitCollection");
  v4 = UITraitCollection.interfaceIdiomIsMac.getter(v3);

  v5 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  if ((v4 & 1) != 0)
    v6 = static UIFont.footnote.getter(v5);
  else
    v6 = static UIFont.caption1.getter(v5);
  v7 = (void *)v6;
  objc_msgSend(v2, "setFont:", v6);

  v8 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v2, "setTextColor:", v8);

  objc_msgSend(v2, "setHidden:", 1);
  v9 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", a1, "benefitsLabelTapped");
  objc_msgSend(v2, "addGestureRecognizer:", v9);

  return v2;
}

id sub_282164()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___secondaryButton];
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___secondaryButton];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___secondaryButton];
  }
  else
  {
    v4 = sub_2821D4(v0);
    v5 = *(void **)v1;
    *(_QWORD *)v1 = v4;
    *((_QWORD *)v1 + 1) = v6;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_2821D4(void *a1)
{
  id v1;
  char *v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  id v14;
  id v15;
  Class isa;
  id v17;
  char v19;
  char v20;
  uint64_t v21[11];

  v1 = objc_msgSend(a1, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    v3 = type metadata accessor for RoundHeaderButton();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
    v5 = objc_msgSend(v4, "titleLabel");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "setAdjustsFontSizeToFitWidth:", 1);

    }
    v7 = objc_msgSend(v4, "titleLabel");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "setMinimumScaleFactor:", 0.7);

    }
    v9 = objc_msgSend(v4, "titleLabel");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "setNumberOfLines:", 2);

    }
    v11 = objc_msgSend(v4, "heightAnchor");
    v12 = objc_msgSend(v11, "constraintEqualToConstant:", 48.0);

    objc_msgSend(v12, "setActive:", 1);
    LODWORD(v13) = 1144750080;
    objc_msgSend(v4, "setContentCompressionResistancePriority:forAxis:", 0, v13);
    v14 = objc_msgSend(v4, "widthAnchor");
    sub_2813D0(v21);
    v15 = objc_msgSend(v14, "constraintGreaterThanOrEqualToConstant:", *(double *)&v21[2]);

    isa = NSLayoutConstraint.withPriority(priority:)((__C::UILayoutPriority)1144750080).super.isa;
    -[objc_class setActive:](isa, "setActive:", 1);

  }
  else
  {
    v20 = 1;
    v21[0] = 6;
    v19 = 0;
    v17 = objc_allocWithZone((Class)type metadata accessor for MacButton());
    v4 = sub_F3EC0(&v20, v21, &v19);
  }
  objc_msgSend(v4, "setHidden:", 1);
  return v4;
}

void sub_28244C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  NSString v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  NSString v29;
  char *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  char *v39;
  uint64_t *v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  char *v64;
  id v65;
  char *v66;
  id *v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  char *v72;
  void *v73;
  char **v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  void *v80;
  Class isa;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 v112;
  void *v113;
  uint64_t v114;
  unsigned __int8 v115;
  char *v116;
  char v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  id v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  char *v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  __n128 v139;
  char v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  __n128 v150;
  void *v151;
  uint64_t v152;
  __n128 v153;
  char *v154;
  uint64_t v155;
  id v156;
  __n128 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  double v161;
  id v162;
  id v163;
  void *v164;
  id v165;
  char *v166;
  id v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  Class v173;
  uint64_t v174;
  id v175;
  uint64_t v176;
  NSArray v177;
  void *v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  Class v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t ObjectType;
  void *v198;
  __n128 v199;
  uint64_t v200;
  double v201;
  uint64_t v202;
  NSString v203;
  id v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  id v220;
  NSString v221;
  id v222;
  __n128 v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  id v228;
  id v229;
  uint64_t v230;
  uint64_t inited;
  NSString *v232;
  NSString *v233;
  id v234;
  unint64_t v235;
  id v236;
  id v237;
  id v238;
  unint64_t v239;
  unint64_t v240;
  id v241;
  id v242;
  NSString v243;
  Class v244;
  id v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t *v251;
  uint64_t v252;
  void (*v253)(uint64_t *, uint64_t, uint64_t);
  int v254;
  int v255;
  uint64_t *v256;
  int v257;
  uint64_t v258;
  uint64_t v259;
  float v260;
  _BYTE *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void (*v267)(uint64_t *, uint64_t);
  uint64_t *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t *v278;
  _QWORD *v279;
  void *v280;
  void *v281;
  void *v282;
  void *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char v290;
  char v291;
  char v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  int v297;
  uint64_t v298;
  char *v299;
  int v300;
  uint64_t v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  id v305;
  uint64_t v306;
  uint64_t v307;
  void *v308;
  id v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  int v314;
  uint64_t v315;
  __int128 v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  _BYTE *v320;
  uint64_t v321;
  __int128 v322;
  __int128 v323;
  uint64_t v324;
  char *v325;
  __int128 v326;
  uint64_t v327;
  uint64_t v328;
  _BYTE *v329;
  uint64_t *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char v334[8];
  char v335;
  char v336;
  _QWORD v337[3];
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  void *v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  __int16 v346;

  v2 = v1;
  v4 = type metadata accessor for HeaderModel.MetadataComponent(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v293 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FollowButtonPresenter.Data(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v293 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v312 = type metadata accessor for ShowOffer(0);
  __chkstk_darwin(v312);
  __chkstk_darwin(v11);
  v313 = (char *)&v293 - v14;
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_objectGraph];
  if (!v15)
    return;
  v304 = v13;
  v298 = v8;
  v311 = v12;
  v327 = v4;
  v16 = swift_retain(v15);
  v17 = ShowHeader.subtitleAction.getter(v16);
  v18 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subtitleAction];
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subtitleAction] = v17;
  swift_release(v18);
  v19 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showTitle];
  ShowHeader.title.getter(v20);
  if (v21)
  {
    v23 = v21;
    v24 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v22 = swift_bridgeObjectRelease(v23).n128_u64[0];
  }
  else
  {
    v24 = 0;
  }
  objc_msgSend(v19, "setText:", v24, v22);

  v25 = sub_281FB0();
  ShowHeader.providerTitle.getter();
  if (v26)
  {
    v28 = v26;
    v29 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v28).n128_u64[0];
  }
  else
  {
    v29 = 0;
  }
  objc_msgSend(v25, "setTitle:forState:", v29, 0, v27);

  v30 = sub_281FB0();
  v31 = ShowHeader.providerAction.getter(v30);
  swift_release(v31);
  if (v31)
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v32 = (id)qword_3D0890;
  }
  else
  {
    v32 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  }
  v33 = v32;
  objc_msgSend(v30, "setTitleColor:forState:", v32, 0);

  v35 = ShowHeader.providerAction.getter(v34);
  if (v35)
  {
    v36 = v35;
    v37 = sub_281FB0();
    v338 = type metadata accessor for Action(0);
    v339 = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v337[0] = v36;
    swift_retain(v36);
    UIControl.setAction(_:for:asPartOf:)(v337, 0x2000, v15);

    swift_release(v36);
    __swift_destroy_boxed_opaque_existential_0(v337);
  }
  v329 = *(_BYTE **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showMetadataView];
  v38 = objc_msgSend(v2, "traitCollection");
  v39 = (char *)objc_msgSend(v38, "userInterfaceIdiom");

  v328 = v5;
  v330 = (uint64_t *)v7;
  *(_QWORD *)&v326 = v2;
  v321 = v15;
  v315 = a1;
  v299 = v10;
  if (v39 == (_BYTE *)&dword_4 + 1)
  {
    if (qword_3CF4C0 != -1)
      swift_once(&qword_3CF4C0, sub_13FD20);
    v40 = &qword_3FB4F0;
  }
  else
  {
    if (qword_3CF4D8 != -1)
      swift_once(&qword_3CF4D8, sub_13FE40);
    v40 = &qword_3FB610;
  }
  v41 = *((_BYTE *)v40 + 89);
  v42 = *((_BYTE *)v40 + 88);
  v44 = v40[9];
  v43 = v40[10];
  v45 = v40[7];
  v46 = v40[8];
  v47 = v40[5];
  v48 = (void *)v40[6];
  v49 = v40[3];
  v50 = v40[4];
  v51 = v40[1];
  v52 = v40[2];
  v53 = (void *)*v40;
  v54 = &v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase];
  v325 = *(char **)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase];
  v55 = *(_QWORD *)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 16];
  v324 = *(_QWORD *)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 8];
  v56 = *(_QWORD *)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 24];
  v57 = *(_QWORD *)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 32];
  v58 = *(_QWORD *)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 40];
  v59 = *(void **)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 48];
  v60 = *(_QWORD *)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 56];
  v323 = *(_OWORD *)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 64];
  v61 = *(_QWORD *)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 80];
  v62 = v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 88];
  v63 = v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_fontUseCase + 89];
  *(_QWORD *)v54 = v53;
  *((_QWORD *)v54 + 1) = v51;
  *((_QWORD *)v54 + 2) = v52;
  *((_QWORD *)v54 + 3) = v49;
  *((_QWORD *)v54 + 4) = v50;
  *((_QWORD *)v54 + 5) = v47;
  *((_QWORD *)v54 + 6) = v48;
  *((_QWORD *)v54 + 7) = v45;
  *((_QWORD *)v54 + 8) = v46;
  *((_QWORD *)v54 + 9) = v44;
  *((_QWORD *)v54 + 10) = v43;
  v54[88] = v42;
  v54[89] = v41;
  sub_DDA0(v53, v51, v52, v49, v50, v47, v48, v45, v46, v44, v43, v42, v41);
  sub_DCC8(v325, v324, v55, v56, v57, v58, v59, v60, v323, *((uint64_t *)&v323 + 1), v61, v62, v63);
  sub_1D71D0();
  v64 = (char *)v326;
  v65 = objc_msgSend((id)v326, "traitCollection");
  v66 = (char *)objc_msgSend(v65, "userInterfaceIdiom");

  v67 = (id *)&UIFontTextStyleTitle3;
  if (v66 != (_BYTE *)&dword_4 + 1)
    v67 = (id *)&UIFontTextStyleSubheadline;
  v68 = *v67;
  v69 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_descriptionLabelContainer;
  v70 = objc_retain(*(id *)(*(_QWORD *)&v64[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_descriptionLabelContainer]
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel));
  v71 = objc_msgSend(v64, "traitCollection");
  v72 = (char *)objc_msgSend(v71, "userInterfaceIdiom");

  v73 = (void *)objc_opt_self(UIColor);
  v74 = &selRef_labelColor;
  if (v72 != (_BYTE *)&dword_4 + 1)
    v74 = &selRef_secondaryLabelColor;
  v75 = objc_msgSend(v73, *v74);
  objc_msgSend(v70, "setTextColor:", v75);

  v76 = *(void **)(*(_QWORD *)&v64[v69]
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel);
  v77 = (void *)objc_opt_self(UIFont);
  v78 = v76;
  v79 = objc_msgSend(v77, "preferredFontForTextStyle:", v68);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v305 = v68;
  v80 = (void *)static UIFont.preferredFont(forTextStyle:traits:)(v68, 2);
  isa = ShowHeader.richDescription(standardFont:emphasizedFont:)((UIFont)v79, (UIFont)v80).super.isa;

  objc_msgSend(v78, "setAttributedText:", isa);
  v310 = v69;
  v82 = qword_3CF4C0;
  v309 = objc_retain(*(id *)(*(_QWORD *)&v64[v69]
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_moreButton));
  if (v82 != -1)
    swift_once(&qword_3CF4C0, sub_13FD20);
  v83 = *((_QWORD *)&xmmword_3FB530 + 1);
  v84 = xmmword_3FB530;
  v85 = qword_3FB540;
  v86 = word_3FB548;
  LODWORD(v87) = HIBYTE(word_3FB548);
  *(_QWORD *)&v323 = qword_3FB4F0;
  *(_QWORD *)&v322 = qword_3FB4F8;
  v320 = (_BYTE *)qword_3FB500;
  v319 = qword_3FB508;
  v318 = qword_3FB510;
  v317 = qword_3FB518;
  v316 = xmmword_3FB520;
  sub_DDA0((void *)qword_3FB4F0, qword_3FB4F8, qword_3FB500, qword_3FB508, qword_3FB510, qword_3FB518, (void *)xmmword_3FB520, *((uint64_t *)&xmmword_3FB520 + 1), xmmword_3FB530, *((uint64_t *)&xmmword_3FB530 + 1), qword_3FB540, word_3FB548, SHIBYTE(word_3FB548));
  if (qword_3CF4D8 != -1)
    swift_once(&qword_3CF4D8, sub_13FE40);
  v88 = qword_3FB618;
  v90 = qword_3FB620;
  v89 = qword_3FB628;
  v91 = qword_3FB638;
  v325 = *((char **)&xmmword_3FB640 + 1);
  v324 = qword_3FB650;
  v314 = HIBYTE(word_3FB668);
  v303 = (void *)xmmword_3FB640;
  v302 = qword_3FB658;
  v301 = qword_3FB660;
  v300 = word_3FB668;
  v308 = (void *)qword_3FB610;
  v307 = qword_3FB620;
  v306 = qword_3FB630;
  if ((_DWORD)v87)
  {
    sub_DDA0((void *)qword_3FB610, qword_3FB618, qword_3FB620, qword_3FB628, qword_3FB630, qword_3FB638, (void *)xmmword_3FB640, (uint64_t)v325, v324, qword_3FB658, qword_3FB660, word_3FB668, v314);
    sub_DE20((id)v323, v322, (uint64_t)v320, v319, v318, v317);
    v92 = v89;
    v93 = *((_QWORD *)&v316 + 1);
    v94 = (void *)v316;
    sub_DE20((id)v316, *((uint64_t *)&v316 + 1), v84, v83, v85, v86);
    v95 = v94;
    v96 = v92;
    sub_DD48(v95, v93, v84, v83, v85, v86);
  }
  else
  {
    v285 = v83;
    v284 = v84;
    v295 = qword_3FB618;
    v97 = qword_3FB610;
    v294 = qword_3FB628;
    v293 = qword_3FB638;
    v98 = qword_3FB630;
    v297 = 0;
    v296 = v84;
    v87 = v83;
    v99 = (void *)xmmword_3FB640;
    v100 = qword_3FB658;
    v101 = qword_3FB660;
    v102 = word_3FB668;
    sub_DDA0((void *)v323, v322, (uint64_t)v320, v319, v318, v317, (void *)v316, *((uint64_t *)&v316 + 1), v284, v285, v85, v86, 0);
    v287 = v101;
    v103 = (void *)v97;
    v88 = v295;
    v104 = v90;
    v96 = v294;
    v105 = v98;
    v91 = v293;
    v106 = v99;
    v83 = v87;
    v84 = v296;
    LOBYTE(v87) = v297;
    sub_DDA0(v103, v295, v104, v294, v105, v293, v106, (uint64_t)v325, v324, v100, v287, v102, v314);
  }
  if (v314)
  {
    sub_DD48(v308, v88, v307, v96, v306, v91);
    v290 = v86;
    v288 = v85;
    v107 = v323;
    v108 = v322;
    v109 = (uint64_t)v320;
    v110 = v319;
    v111 = v318;
    v112 = v317;
    sub_DCC8((void *)v323, v322, (uint64_t)v320, v319, v318, v317, (void *)v316, *((uint64_t *)&v316 + 1), v84, v83, v288, v290, v87);
    v113 = v303;
    v96 = v302;
    v114 = v301;
    v115 = v300;
  }
  else
  {
    v292 = v87;
    v291 = v86;
    v286 = v83;
    v289 = v85;
    v116 = (char *)v88;
    v107 = v323;
    v108 = v322;
    v117 = v91;
    v109 = (uint64_t)v320;
    v110 = v319;
    v111 = v318;
    v112 = v317;
    sub_DCC8((void *)v323, v322, (uint64_t)v320, v319, v318, v317, (void *)v316, *((uint64_t *)&v316 + 1), v84, v286, v289, v291, v292);
    v113 = v308;
    v325 = v116;
    v324 = v307;
    v114 = v306;
    v115 = v117;
  }
  v337[0] = v107;
  v337[1] = v108;
  v337[2] = v109;
  v338 = v110;
  v339 = v111;
  v340 = v112;
  v341 = v113;
  v342 = v325;
  v343 = v324;
  v344 = v96;
  v345 = v114;
  v346 = v115 | 0x100;
  v118 = v309;
  sub_2D5A30((uint64_t)v337);

  v119 = v315;
  v120 = ShowHeader.fullDescriptionAction.getter();
  v122 = v328;
  v123 = v321;
  v124 = (char *)v326;
  v125 = v312;
  if (v120)
  {
    v126 = v120;
    v127 = *(void **)(*(_QWORD *)(v326 + v310)
                    + OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_moreButton);
    v338 = type metadata accessor for FlowAction(0, v121);
    v339 = sub_239FC(&qword_3D22B0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
    v337[0] = v126;
    v128 = v127;
    v124 = (char *)v326;
    v129 = v128;
    swift_retain(v126);
    UIControl.setAction(_:for:asPartOf:)(v337, 0x2000, v123);

    swift_release(v126);
    __swift_destroy_boxed_opaque_existential_0(v337);
  }
  v130 = sub_281ECC();
  if (v130)
  {
    v131 = v130;
    v132 = ShowHeader.primaryButtonAction.getter(v130);
    swift_release(v132);
    if (v132)
    {
      sub_AB2EC(v119);
      swift_release(v131);
      goto LABEL_43;
    }
    swift_release(v131);
  }
  v133 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_281C60);
  objc_msgSend(v133, "setHidden:", 1);

LABEL_43:
  v134 = sub_28155C();
  v136 = ShowHeader.primaryArtwork.getter(v135);
  v138 = ShowHeader.upsellBanner.getter(v137);
  v140 = ShowHeader.entitlementBadge.getter(v138, v139);
  sub_E5FC4(v136, v138, v140 & 1);

  swift_release(v136);
  v141 = swift_release(v138);
  v142 = ShowHeader.contextAction.getter(v141);
  if (v142)
  {
    v143 = v142;
    v338 = type metadata accessor for Action(0);
    v339 = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v337[0] = v143;
    swift_retain(v143);
    UIControl.setAction(_:for:asPartOf:)(v337, 0x2000, v123);
    swift_release(v143);
    v142 = __swift_destroy_boxed_opaque_existential_0(v337);
  }
  v144 = ShowHeader.followAction.getter(v142);
  v146 = v311;
  v147 = v313;
  if (v144)
  {
    v148 = v144;
    v149 = v304;
    PodcastOfferAction.podcastOffer.getter(v144);
    v150 = swift_release(v148);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v146 + 32))(v147, v149, v125, v150);
    v151 = *(void **)&v124[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subscribeButton];
    v152 = type metadata accessor for ExpandableFollowButton();
    if (swift_dynamicCastClass(v151, v152))
    {
      v154 = v299;
      (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v299, v147, v125);
      swift_storeEnumTagMultiPayload(v154, v298, 1);
      v155 = type metadata accessor for FollowButtonPresenter(0);
      swift_allocObject(v155, *(unsigned int *)(v155 + 48), *(unsigned __int16 *)(v155 + 52));
      swift_retain(v123);
      v156 = v151;
      v158 = FollowButtonPresenter.init(data:displaySuccessHUD:asPartOf:)(v154, 0, v123, v157);
      sub_1FB280(v158);

      v147 = v313;
      v159 = v158;
      v146 = v311;
      v153 = swift_release(v159);
    }
    v145.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v146 + 8))(v147, v125, v153);
  }
  v160 = ShowHeader.upsellBanner.getter(v145);
  *(_QWORD *)&v161 = swift_release(v160).n128_u64[0];
  if (!v160)
  {
    v165 = objc_msgSend(v124, "traitCollection", v161);
    v166 = (char *)objc_msgSend(v165, "userInterfaceIdiom");

    if (v166 != (_BYTE *)&dword_0 + 1)
      goto LABEL_56;
    v167 = sub_2818AC();
    objc_msgSend(v167, "setConstant:", 0.0);

    v168 = (void *)objc_opt_self(NSLayoutConstraint);
    v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v170 = swift_allocObject(v169, 40, 7);
    v326 = xmmword_2F11D0;
    *(_OWORD *)(v170 + 16) = xmmword_2F11D0;
    v171 = sub_281988();
    *(_QWORD *)(v170 + 32) = v171;
    v337[0] = v170;
    specialized Array._endMutation()(v171);
    v172 = v337[0];
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    v173 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v168, "activateConstraints:", v173, swift_bridgeObjectRelease(v172).n128_f64[0]);

    v122 = v328;
    v174 = swift_allocObject(v169, 40, 7);
    *(_OWORD *)(v174 + 16) = v326;
    v175 = sub_281A6C();
    *(_QWORD *)(v174 + 32) = v175;
    v337[0] = v174;
    specialized Array._endMutation()(v175);
    v176 = v337[0];
    v177.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v168, "deactivateConstraints:", v177.super.isa, swift_bridgeObjectRelease(v176).n128_f64[0]);
LABEL_55:

    goto LABEL_56;
  }
  v162 = sub_2818AC();
  sub_2813D0(v337);
  objc_msgSend(v162, "setConstant:", -*(double *)&v342);

  v163 = objc_msgSend(v124, "traitCollection");
  LOBYTE(v162) = UITraitCollection.interfaceIdiomIsMac.getter(v163);

  v164 = *(void **)(*(_QWORD *)&v124[v310]
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel);
  if ((v162 & 1) == 0)
  {
    objc_msgSend(v164, "setNumberOfLines:", 3);
    v178 = (void *)objc_opt_self(NSLayoutConstraint);
    v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v180 = swift_allocObject(v179, 40, 7);
    v326 = xmmword_2F11D0;
    *(_OWORD *)(v180 + 16) = xmmword_2F11D0;
    v181 = sub_281988();
    *(_QWORD *)(v180 + 32) = v181;
    v331 = v180;
    specialized Array._endMutation()(v181);
    v182 = v331;
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    v183 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v178, "deactivateConstraints:", v183, swift_bridgeObjectRelease(v182).n128_f64[0]);

    v122 = v328;
    v184 = swift_allocObject(v179, 40, 7);
    *(_OWORD *)(v184 + 16) = v326;
    v185 = sub_281A6C();
    *(_QWORD *)(v184 + 32) = v185;
    v331 = v184;
    specialized Array._endMutation()(v185);
    v186 = v331;
    v177.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v178, "activateConstraints:", v177.super.isa, swift_bridgeObjectRelease(v186).n128_f64[0]);
    goto LABEL_55;
  }
  objc_msgSend(v164, "setNumberOfLines:", 5);
LABEL_56:
  v187 = type metadata accessor for ExplicitContentPresenter(0);
  v188 = BaseObjectGraph.inject<A>(_:)(&v331, v187, v187);
  v189 = v331;
  v190 = ExplicitContentPresenter.treatment.getter(v188);
  swift_release(v189);
  v192 = ShowHeader.secondaryButtonAction.getter(v191);
  if (v192)
  {
    v193 = v192;
    v194 = sub_282164();
    v196 = v195;
    ObjectType = swift_getObjectType();
    v198 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v196 + 48))(ObjectType, v196);

    Action.title.getter(v199);
    if (v200)
    {
      v202 = v200;
      v203 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v201 = swift_bridgeObjectRelease(v202).n128_u64[0];
    }
    else
    {
      v203 = 0;
    }
    objc_msgSend(v198, "setTitle:forState:", v203, 0, v201);

    v331 = v119;
    v205 = type metadata accessor for ShowHeader(0);
    v206 = EntitlementsActionProviding.entitlementsAction.getter(v205, &protocol witness table for ShowHeader);
    if (v206)
    {
      v207 = v206;
      v208 = sub_282164();
      v210 = v209;
      v211 = swift_getObjectType();
      v332 = type metadata accessor for Action(0);
      v333 = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v331 = v207;
      swift_retain(v207);
      v212 = v211;
      v122 = v328;
      sub_1DF264((uint64_t)&v331, v321, v212, v210);

      swift_release(v207);
    }
    else
    {
      v213 = sub_282164();
      v215 = v214;
      v216 = swift_getObjectType();
      v332 = type metadata accessor for Action(0);
      v333 = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v331 = v193;
      swift_retain(v193);
      sub_1DF264((uint64_t)&v331, v321, v216, v215);

    }
    __swift_destroy_boxed_opaque_existential_0(&v331);
    v204 = sub_282164();
    objc_msgSend(v204, "setHidden:", 0);
    swift_release(v193);
  }
  else
  {
    v204 = sub_282164();
    objc_msgSend(v204, "setHidden:", 1);
  }

  ShowHeader.secondaryButtonSubtitle.getter(v217);
  if (v218)
  {
    v219 = v218;
    v220 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
    v221 = String._bridgeToObjectiveC()();
    objc_msgSend(v220, "setText:", v221, swift_bridgeObjectRelease(v219).n128_f64[0]);

    v222 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
    objc_msgSend(v222, "setHidden:", 0);

    v224 = ShowHeader.subtitleAction.getter(v223);
    if (v224
      && (v225 = v224,
          v226 = type metadata accessor for OAuthAction(0),
          v227 = swift_dynamicCastClass(v225, v226),
          swift_release(v225),
          v227))
    {
      v228 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
      v229 = objc_msgSend(v228, "textColor");

      if (!v229)
      {
        __break(1u);
        return;
      }
      v230 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
      inited = swift_initStackObject(v230, v334);
      *(_OWORD *)(inited + 16) = xmmword_2EFA20;
      *(_QWORD *)(inited + 32) = NSUnderlineStyleAttributeName;
      *(_QWORD *)(inited + 40) = 1;
      *(_QWORD *)(inited + 64) = &type metadata for Int;
      *(_QWORD *)(inited + 72) = NSUnderlineColorAttributeName;
      *(_QWORD *)(inited + 104) = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
      *(_QWORD *)(inited + 80) = v229;
      v232 = NSUnderlineStyleAttributeName;
      v233 = NSUnderlineColorAttributeName;
      v234 = v229;
      v235 = sub_D4784(inited);
      v236 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
      v237 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
      v238 = objc_msgSend(v237, "text");

      if (v238)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v238);
        v240 = v239;

      }
      else
      {
        v240 = 0xE000000000000000;
      }
      v242 = objc_allocWithZone((Class)NSAttributedString);
      v243 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v240);
      type metadata accessor for Key(0);
      sub_239FC((unint64_t *)&qword_3D0150, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
      v244 = Dictionary._bridgeToObjectiveC()().super.isa;
      v245 = objc_msgSend(v242, "initWithString:attributes:", v243, v244, swift_bridgeObjectRelease(v235).n128_f64[0]);

      objc_msgSend(v236, "setAttributedText:", v245);
      v241 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
      objc_msgSend(v241, "setUserInteractionEnabled:", 1);

    }
    else
    {
      v241 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
      objc_msgSend(v241, "setUserInteractionEnabled:", 0);
    }
    v122 = v328;
  }
  else
  {
    v241 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
    objc_msgSend(v241, "setHidden:", 1);
  }

  v247 = ShowHeader.metadata.getter(v246);
  v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_explicitTreatment] = v190 & 1;
  v318 = v247;
  v248 = *(_QWORD *)(v247 + 16);
  v249 = v327;
  if (v248)
  {
    v250 = v318 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
    *(_QWORD *)&v316 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_explicit;
    v317 = (uint64_t)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_newEpisodeCount];
    v320 = &v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_updateFrequency];
    v324 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_titles;
    *(_QWORD *)&v326 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_rating;
    v325 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_numberOfRatings;
    v251 = (uint64_t *)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_formattedRatingCount];
    v252 = *(_QWORD *)(v122 + 72);
    v253 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v122 + 16);
    v254 = enum case for HeaderModel.MetadataComponent.ratings(_:);
    v255 = enum case for HeaderModel.MetadataComponent.category(_:);
    LODWORD(v323) = enum case for HeaderModel.MetadataComponent.updateFrequency(_:);
    LODWORD(v319) = enum case for HeaderModel.MetadataComponent.newEpisodeCount(_:);
    v322 = xmmword_2F03C0;
    DWORD2(v316) = enum case for HeaderModel.MetadataComponent.explicit(_:);
    do
    {
      v256 = v330;
      v253(v330, v250, v249);
      v257 = (*(uint64_t (**)(uint64_t *, uint64_t))(v122 + 88))(v256, v249);
      if (v257 == v254)
      {
        v258 = (*(uint64_t (**)(uint64_t *, uint64_t))(v122 + 96))(v256, v249);
        v259 = *v256;
        v260 = Ratings.ratingAverage.getter(v258);
        v261 = v329;
        *(float *)&v329[v326] = v260;
        *(_QWORD *)&v325[(_QWORD)v261] = Ratings.totalNumberOfRatings.getter();
        v262 = Ratings.formattedCount.getter();
        v263 = v251[1];
        *v251 = v262;
        v251[1] = v264;
        v265 = v259;
        v249 = v327;
        swift_release(v265);
        v266 = v263;
        v122 = v328;
      }
      else if (v257 == v255)
      {
        v267 = *(void (**)(uint64_t *, uint64_t))(v122 + 96);
        v268 = v330;
        v267(v330, v249);
        v269 = *v268;
        v270 = v268[1];
        v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51F0);
        v272 = swift_allocObject(v271, 48, 7);
        *(_OWORD *)(v272 + 16) = v322;
        *(_QWORD *)(v272 + 32) = v269;
        *(_QWORD *)(v272 + 40) = v270;
        v249 = v327;
        v122 = v328;
        v273 = *(_QWORD *)&v329[v324];
        *(_QWORD *)&v329[v324] = v272;
        v266 = v273;
      }
      else
      {
        if (v257 == (_DWORD)v323)
        {
          v274 = v330;
          (*(void (**)(uint64_t *, uint64_t))(v122 + 96))(v330, v249);
          v275 = *v274;
          v276 = v274[1];
          v277 = &v336;
        }
        else
        {
          if (v257 != (_DWORD)v319)
          {
            if (v257 == DWORD2(v316))
              v329[v316] = 1;
            else
              (*(void (**)(uint64_t *, uint64_t))(v122 + 8))(v330, v249);
            goto LABEL_88;
          }
          v278 = v330;
          (*(void (**)(uint64_t *, uint64_t))(v122 + 96))(v330, v249);
          v275 = *v278;
          v276 = v278[1];
          v277 = &v335;
        }
        v279 = (_QWORD *)*((_QWORD *)v277 - 32);
        v266 = v279[1];
        *v279 = v275;
        v279[1] = v276;
      }
      swift_bridgeObjectRelease(v266);
LABEL_88:
      v250 += v252;
      --v248;
    }
    while (v248);
  }
  v280 = v329;
  v281 = *(void **)&v329[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_label];
  sub_1D75F0();
  v283 = v282;
  objc_msgSend(v281, "setAttributedText:", v282);

  objc_msgSend(v280, "invalidateIntrinsicContentSize");
  swift_release(v321);

  swift_bridgeObjectRelease(v318);
}

void sub_283F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_objectGraph) = a1;
  swift_release(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v8, v5, v5);
  v6 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_episodePlayStateController);
  *(_QWORD *)(v2
            + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_episodePlayStateController) = v8;
  swift_release(v6);
  v7 = sub_28155C();
  sub_E66BC(a1);

}

char *sub_284020(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  double v28;
  char *v29;
  char *v30;
  id v31;
  void *v32;
  id v33;
  Swift::String v34;
  Swift::String v35;
  unint64_t v36;
  NSString v37;
  char *v38;
  Swift::String v39;
  Swift::String v40;
  unint64_t v41;
  NSString v42;
  void *v43;
  id v44;
  Swift::String v45;
  Swift::String v46;
  unint64_t v47;
  NSString v48;
  id v49;
  Swift::String v50;
  Swift::String v51;
  unint64_t v52;
  NSString v53;
  id v54;
  Swift::String v55;
  Swift::String v56;
  unint64_t v57;
  NSString v58;
  void *v59;
  id v60;
  Swift::String v61;
  Swift::String v62;
  unint64_t v63;
  NSString v64;
  void *v65;
  id v66;
  Swift::String v67;
  Swift::String v68;
  unint64_t v69;
  NSString v70;
  id v71;
  Swift::String v72;
  Swift::String v73;
  unint64_t v74;
  NSString v75;
  char *v76;
  id v77;
  Swift::String v78;
  Swift::String v79;
  unint64_t v80;
  NSString v81;
  void *v82;
  id v83;
  Swift::String v84;
  Swift::String v85;
  unint64_t v86;
  NSString v87;
  id v88;
  id v89;
  id v90;
  id v91;
  char *v92;
  id v93;
  uint64_t v94;
  id v95;
  id v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  void *v100;
  id v101;
  char *v102;
  void *v103;
  void *v104;
  double v105;
  id v106;
  double *v107;
  double v108;
  id v109;
  char *v110;
  id v111;
  id v112;
  id v113;
  id v114;
  void *v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  char *v122;
  void *v123;
  id v124;
  id v125;
  __C::UILayoutPriority v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  __C::UILayoutPriority v133;
  Class v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  char *v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  id v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  id v198;
  id v199;
  id v200;
  id v201;
  uint64_t v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  void *v212;
  uint64_t v213;
  Class v214;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  objc_class *v219;
  uint64_t v220;
  Class isa;
  objc_class *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  objc_class *ObjectType;
  uint64_t v227;
  uint64_t v228;
  objc_super v229;
  uint64_t v230;
  unint64_t v231;
  double v232;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_episodePlayStateController] = 0;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___layoutConstants];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *((_OWORD *)v10 + 3) = 0u;
  *((_OWORD *)v10 + 4) = 0u;
  *((_QWORD *)v10 + 10) = 0;
  v10[88] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subtitleAction] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___upsellArtworkView] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_sizeClass] = 8;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___horizontalStack] = 0;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_parentVerticalStack;
  v12 = objc_allocWithZone((Class)UIStackView);
  v13 = v4;
  v14 = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v14, "setAxis:", 1);
  objc_msgSend(v14, "setAlignment:", 1);
  objc_msgSend(v14, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v11] = v14;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___verticalStackContainerView] = 0;
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_verticalStack;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v16, "setAxis:", 1);
  objc_msgSend(v16, "setAlignment:", 1);
  objc_msgSend(v16, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v16, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v13[v15] = v16;
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_buttonStackView;
  v18 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v18, "setAxis:", 0);
  objc_msgSend(v18, "setAlignment:", 1);
  objc_msgSend(v18, "setSpacing:", 10.0);
  objc_msgSend(v18, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v13[v17] = v18;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___buttonStackViewBottomConstraint] = 0;
  v19 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showTitle;
  *(_QWORD *)&v13[v19] = sub_1A4CC0();
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showMetadataView;
  v21 = type metadata accessor for ShowMetadataView();
  v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v21)), "init");
  v22[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_uppercased] = 1;
  *(_QWORD *)&v13[v20] = v22;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showTitleTopConstraint] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___descriptionBottomConstraint] = 0;
  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_descriptionLabelContainer;
  v24 = type metadata accessor for FadingDescriptionLabel();
  *(_QWORD *)&v13[v23] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v24)), "init");
  v25 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_contextButton;
  *(_QWORD *)&v13[v25] = sub_281B50();
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_primaryButtonAction] = 0;
  v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subscribeButton;
  v27 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExpandableFollowButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  LODWORD(v28) = 1148846080;
  objc_msgSend(v27, "setContentCompressionResistancePriority:forAxis:", 0, v28);
  *(_QWORD *)&v13[v26] = v27;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___primaryButton] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell__primaryButtonController] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showSubtitleButton] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel] = 0;
  v29 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___secondaryButton];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;

  v229.receiver = v13;
  v229.super_class = ObjectType;
  v30 = (char *)objc_msgSendSuper2(&v229, "initWithFrame:", a1, a2, a3, a4);
  v31 = objc_msgSend(v30, "contentView");
  objc_msgSend(v31, "setHitTestDirectionalInsets:", 0.0, 0.0, -50.0, 0.0);

  objc_msgSend(v30, "setHitTestDirectionalInsets:", 0.0, 0.0, -50.0, 0.0);
  v227 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showTitle;
  v32 = *(void **)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showTitle];
  v230 = 0;
  v231 = 0xE000000000000000;
  v33 = v32;
  v34._countAndFlagsBits = 0xD000000000000014;
  v34._object = (void *)0x8000000000308A30;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 46;
  v35._object = (void *)0xE100000000000000;
  String.append(_:)(v35);
  LOBYTE(v228) = 0;
  _print_unlocked<A, B>(_:_:)(&v228, &v230, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v36 = v231;
  v37 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setAccessibilityIdentifier:", v37, swift_bridgeObjectRelease(v36).n128_f64[0]);

  v38 = sub_281FB0();
  v230 = 0;
  v231 = 0xE000000000000000;
  v39._countAndFlagsBits = 0xD000000000000014;
  v39._object = (void *)0x8000000000308A30;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 46;
  v40._object = (void *)0xE100000000000000;
  String.append(_:)(v40);
  LOBYTE(v228) = 1;
  _print_unlocked<A, B>(_:_:)(&v228, &v230, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v41 = v231;
  v42 = String._bridgeToObjectiveC()();
  objc_msgSend(v38, "setAccessibilityIdentifier:", v42, swift_bridgeObjectRelease(v41).n128_f64[0]);

  v220 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_descriptionLabelContainer;
  v43 = *(void **)(*(_QWORD *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_descriptionLabelContainer]
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel);
  v230 = 0;
  v231 = 0xE000000000000000;
  v44 = v43;
  v45._countAndFlagsBits = 0xD000000000000014;
  v45._object = (void *)0x8000000000308A30;
  String.append(_:)(v45);
  v46._countAndFlagsBits = 46;
  v46._object = (void *)0xE100000000000000;
  String.append(_:)(v46);
  LOBYTE(v228) = 2;
  _print_unlocked<A, B>(_:_:)(&v228, &v230, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v47 = v231;
  v48 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "setAccessibilityIdentifier:", v48, swift_bridgeObjectRelease(v47).n128_f64[0]);

  v49 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_281C60);
  v230 = 0;
  v231 = 0xE000000000000000;
  v50._countAndFlagsBits = 0xD000000000000014;
  v50._object = (void *)0x8000000000308A30;
  String.append(_:)(v50);
  v51._countAndFlagsBits = 46;
  v51._object = (void *)0xE100000000000000;
  String.append(_:)(v51);
  LOBYTE(v228) = 3;
  _print_unlocked<A, B>(_:_:)(&v228, &v230, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v52 = v231;
  v53 = String._bridgeToObjectiveC()();
  objc_msgSend(v49, "setAccessibilityIdentifier:", v53, swift_bridgeObjectRelease(v52).n128_f64[0]);

  v54 = sub_282164();
  v230 = 0;
  v231 = 0xE000000000000000;
  v55._countAndFlagsBits = 0xD000000000000014;
  v55._object = (void *)0x8000000000308A30;
  String.append(_:)(v55);
  v56._countAndFlagsBits = 46;
  v56._object = (void *)0xE100000000000000;
  String.append(_:)(v56);
  LOBYTE(v228) = 4;
  _print_unlocked<A, B>(_:_:)(&v228, &v230, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v57 = v231;
  v58 = String._bridgeToObjectiveC()();
  objc_msgSend(v54, "setAccessibilityIdentifier:", v58, swift_bridgeObjectRelease(v57).n128_f64[0]);

  v218 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_contextButton;
  v59 = *(void **)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_contextButton];
  v230 = 0;
  v231 = 0xE000000000000000;
  v60 = v59;
  v61._countAndFlagsBits = 0xD000000000000014;
  v61._object = (void *)0x8000000000308A30;
  String.append(_:)(v61);
  v62._countAndFlagsBits = 46;
  v62._object = (void *)0xE100000000000000;
  String.append(_:)(v62);
  LOBYTE(v228) = 6;
  _print_unlocked<A, B>(_:_:)(&v228, &v230, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v63 = v231;
  v64 = String._bridgeToObjectiveC()();
  objc_msgSend(v60, "setAccessibilityIdentifier:", v64, swift_bridgeObjectRelease(v63).n128_f64[0]);

  v217 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subscribeButton;
  v65 = *(void **)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subscribeButton];
  v230 = 0;
  v231 = 0xE000000000000000;
  v66 = v65;
  v67._countAndFlagsBits = 0xD000000000000014;
  v67._object = (void *)0x8000000000308A30;
  String.append(_:)(v67);
  v68._countAndFlagsBits = 46;
  v68._object = (void *)0xE100000000000000;
  String.append(_:)(v68);
  LOBYTE(v228) = 7;
  _print_unlocked<A, B>(_:_:)(&v228, &v230, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v69 = v231;
  v70 = String._bridgeToObjectiveC()();
  objc_msgSend(v66, "setAccessibilityIdentifier:", v70, swift_bridgeObjectRelease(v69).n128_f64[0]);

  v71 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
  v230 = 0;
  v231 = 0xE000000000000000;
  v72._countAndFlagsBits = 0xD000000000000014;
  v72._object = (void *)0x8000000000308A30;
  String.append(_:)(v72);
  v73._countAndFlagsBits = 46;
  v73._object = (void *)0xE100000000000000;
  String.append(_:)(v73);
  LOBYTE(v228) = 8;
  _print_unlocked<A, B>(_:_:)(&v228, &v230, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v74 = v231;
  v75 = String._bridgeToObjectiveC()();
  objc_msgSend(v71, "setAccessibilityIdentifier:", v75, swift_bridgeObjectRelease(v74).n128_f64[0]);

  v76 = sub_28155C();
  v77 = *(id *)&v76[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkView];

  v230 = 0;
  v231 = 0xE000000000000000;
  v78._countAndFlagsBits = 0xD000000000000014;
  v78._object = (void *)0x8000000000308A30;
  String.append(_:)(v78);
  v79._countAndFlagsBits = 46;
  v79._object = (void *)0xE100000000000000;
  String.append(_:)(v79);
  LOBYTE(v228) = 10;
  _print_unlocked<A, B>(_:_:)(&v228, &v230, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v80 = v231;
  v81 = String._bridgeToObjectiveC()();
  objc_msgSend(v77, "setAccessibilityIdentifier:", v81, swift_bridgeObjectRelease(v80).n128_f64[0]);

  v224 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showMetadataView;
  v82 = *(void **)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showMetadataView];
  v230 = 0;
  v231 = 0xE000000000000000;
  v83 = v82;
  v84._countAndFlagsBits = 0xD000000000000014;
  v84._object = (void *)0x8000000000308A30;
  String.append(_:)(v84);
  v85._countAndFlagsBits = 46;
  v85._object = (void *)0xE100000000000000;
  String.append(_:)(v85);
  LOBYTE(v228) = 11;
  _print_unlocked<A, B>(_:_:)(&v228, &v230, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v86 = v231;
  v87 = String._bridgeToObjectiveC()();
  objc_msgSend(v83, "setAccessibilityIdentifier:", v87, swift_bridgeObjectRelease(v86).n128_f64[0]);

  v88 = objc_msgSend(v30, "contentView");
  objc_msgSend(v88, "setLayoutMargins:", 8.0, 0.0, 0.0, 0.0);

  v89 = objc_msgSend(v30, "contentView");
  v90 = sub_281710();
  objc_msgSend(v89, "addSubview:", v90);

  v91 = sub_281710();
  v92 = sub_28155C();
  objc_msgSend(v91, "addArrangedSubview:", v92);

  v93 = sub_281710();
  v94 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_parentVerticalStack;
  objc_msgSend(v93, "addArrangedSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_parentVerticalStack]);

  v95 = *(id *)&v30[v94];
  v96 = sub_281818();
  objc_msgSend(v95, "addArrangedSubview:", v96);

  v223 = v94;
  v97 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_buttonStackView;
  objc_msgSend(*(id *)&v30[v94], "addArrangedSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_buttonStackView]);
  v98 = sub_281818();
  v99 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_verticalStack;
  objc_msgSend(v98, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_verticalStack]);

  v100 = *(void **)&v30[v99];
  objc_msgSend(v100, "addArrangedSubview:", *(_QWORD *)&v30[v227]);
  v101 = v100;
  v102 = sub_281FB0();
  objc_msgSend(v101, "addArrangedSubview:", v102);

  v103 = *(void **)&v30[v99];
  objc_msgSend(v103, "addArrangedSubview:", *(_QWORD *)&v30[v224]);
  objc_msgSend(v103, "addArrangedSubview:", *(_QWORD *)&v30[v220]);
  v104 = *(void **)&v30[v227];
  LODWORD(v105) = 1148846080;
  objc_msgSend(v104, "setContentHuggingPriority:forAxis:", 1, v105);
  v106 = v103;
  sub_2813D0(&v230);
  objc_msgSend(v106, "setCustomSpacing:afterView:", v104, v232);

  v107 = (double *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___layoutConstants];
  v108 = *(double *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___layoutConstants
                       + 40];
  v109 = *(id *)&v30[v99];
  v110 = sub_281FB0();
  objc_msgSend(v109, "setCustomSpacing:afterView:", v110, v108);

  objc_msgSend(*(id *)&v30[v99], "setCustomSpacing:afterView:", *(_QWORD *)&v30[v224], v107[6]);
  v111 = *(id *)&v30[v97];
  v112 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_281C60);
  objc_msgSend(v111, "addArrangedSubview:", v112);

  v113 = *(id *)&v30[v97];
  v114 = sub_282164();
  objc_msgSend(v113, "addArrangedSubview:", v114);

  v225 = v97;
  v115 = *(void **)&v30[v97];
  v116 = objc_allocWithZone((Class)UIView);
  v117 = v115;
  v118 = objc_msgSend(v116, "init");
  objc_msgSend(v117, "addArrangedSubview:", v118);

  v119 = objc_msgSend(v30, "contentView");
  v120 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
  objc_msgSend(v119, "addSubview:", v120);

  v121 = objc_msgSend(v30, "traitCollection");
  v122 = (char *)objc_msgSend(v121, "userInterfaceIdiom");

  if (v122 == (_BYTE *)&dword_4 + 1)
  {
    v123 = *(void **)&v30[v97];
    objc_msgSend(v123, "addArrangedSubview:", *(_QWORD *)&v30[v217]);
    objc_msgSend(v123, "addArrangedSubview:", *(_QWORD *)&v30[v218]);
  }
  v124 = objc_msgSend(*(id *)&v30[v220], "widthAnchor", v217);
  v125 = objc_msgSend(v124, "constraintLessThanOrEqualToConstant:", v107[3]);

  v126.rawValue = static UILayoutPriority.highestBreakable.getter();
  isa = NSLayoutConstraint.withPriority(priority:)(v126).super.isa;

  v127 = sub_281710();
  v128 = objc_msgSend(v127, "bottomAnchor");

  v129 = objc_msgSend(v30, "contentView");
  v130 = objc_msgSend(v129, "layoutMarginsGuide");

  v131 = objc_msgSend(v130, "bottomAnchor");
  v132 = objc_msgSend(v128, "constraintEqualToAnchor:", v131);

  v133.rawValue = static UILayoutPriority.highestBreakable.getter();
  v134 = NSLayoutConstraint.withPriority(priority:)(v133).super.isa;

  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v136 = swift_allocObject(v135, 136, 7);
  *(_OWORD *)(v136 + 16) = xmmword_2F8760;
  v137 = sub_281710();
  v138 = objc_msgSend(v137, "leadingAnchor");

  v139 = objc_msgSend(v30, "contentView");
  v140 = objc_msgSend(v139, "layoutMarginsGuide");

  v141 = objc_msgSend(v140, "leadingAnchor");
  v142 = objc_msgSend(v138, "constraintEqualToAnchor:", v141);

  *(_QWORD *)(v136 + 32) = v142;
  v143 = sub_281710();
  v144 = objc_msgSend(v143, "trailingAnchor");

  v145 = objc_msgSend(v30, "contentView");
  v146 = objc_msgSend(v145, "layoutMarginsGuide");

  v147 = objc_msgSend(v146, "trailingAnchor");
  v148 = objc_msgSend(v144, "constraintEqualToAnchor:", v147);

  *(_QWORD *)(v136 + 40) = v148;
  v149 = sub_281710();
  v150 = objc_msgSend(v149, "topAnchor");

  v151 = objc_msgSend(v30, "contentView");
  v152 = objc_msgSend(v151, "layoutMarginsGuide");

  v153 = objc_msgSend(v152, "topAnchor");
  v154 = objc_msgSend(v150, "constraintEqualToAnchor:", v153);

  *(_QWORD *)(v136 + 48) = v154;
  *(_QWORD *)(v136 + 56) = v134;
  *(_QWORD *)(v136 + 64) = isa;
  v219 = v134;
  v222 = isa;
  v155 = sub_28155C();
  v156 = objc_msgSend(v155, "widthAnchor");

  v157 = objc_msgSend(v156, "constraintEqualToConstant:", *v107);
  *(_QWORD *)(v136 + 72) = v157;
  v158 = sub_281818();
  v159 = objc_msgSend(v158, "topAnchor");

  v160 = sub_281710();
  v161 = objc_msgSend(v160, "topAnchor");

  v162 = objc_msgSend(v159, "constraintEqualToAnchor:", v161);
  *(_QWORD *)(v136 + 80) = v162;
  v163 = sub_281818();
  v164 = objc_msgSend(v163, "bottomAnchor");

  v165 = objc_msgSend(*(id *)&v30[v225], "topAnchor");
  v166 = objc_msgSend(v164, "constraintEqualToAnchor:", v165);

  *(_QWORD *)(v136 + 88) = v166;
  v167 = sub_281818();
  v168 = objc_msgSend(v167, "trailingAnchor");

  v169 = objc_msgSend(*(id *)&v30[v223], "trailingAnchor");
  v170 = objc_msgSend(v168, "constraintEqualToAnchor:", v169);

  *(_QWORD *)(v136 + 96) = v170;
  v171 = objc_msgSend(*(id *)&v30[v99], "leadingAnchor");
  v172 = sub_281818();
  v173 = objc_msgSend(v172, "leadingAnchor");

  v174 = objc_msgSend(v171, "constraintEqualToAnchor:", v173);
  *(_QWORD *)(v136 + 104) = v174;
  v175 = objc_msgSend(*(id *)&v30[v99], "trailingAnchor");
  v176 = sub_281818();
  v177 = objc_msgSend(v176, "trailingAnchor");

  v178 = objc_msgSend(v175, "constraintEqualToAnchor:", v177);
  *(_QWORD *)(v136 + 112) = v178;
  v179 = objc_msgSend(*(id *)&v30[v225], "trailingAnchor");
  v180 = objc_msgSend(*(id *)&v30[v223], "trailingAnchor");
  v181 = objc_msgSend(v179, "constraintEqualToAnchor:", v180);

  *(_QWORD *)(v136 + 120) = v181;
  v182 = sub_2818AC();
  *(_QWORD *)(v136 + 128) = v182;
  v228 = v136;
  specialized Array._endMutation()(v182);
  v183 = objc_msgSend(v30, "traitCollection");
  LOBYTE(v136) = UITraitCollection.interfaceIdiomIsMac.getter(v183);

  if ((v136 & 1) != 0)
  {
    v184 = objc_msgSend(*(id *)&v30[v99], "centerYAnchor");
    v185 = sub_281818();
    v186 = objc_msgSend(v185, "centerYAnchor");

    v187 = objc_msgSend(v184, "constraintEqualToAnchor:", v186);
  }
  else
  {
    v188 = sub_281988();
    v187 = v188;
  }
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v188);
  v190 = *(_QWORD *)((char *)&dword_10 + (v228 & 0xFFFFFFFFFFFFFF8));
  v189 = *(_QWORD *)((char *)&dword_18 + (v228 & 0xFFFFFFFFFFFFFF8));
  if (v190 >= v189 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v189 > 1, v190 + 1, 1);
  v191 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v190, v187);
  specialized Array._endMutation()(v191);
  v192 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
  v193 = objc_msgSend(v192, "centerXAnchor");

  v194 = sub_282164();
  v195 = objc_msgSend(v194, "centerXAnchor");

  v196 = objc_msgSend(v193, "constraintEqualToAnchor:", v195);
  v197 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
  v198 = objc_msgSend(v197, "firstBaselineAnchor");

  v199 = sub_282164();
  v200 = objc_msgSend(v199, "bottomAnchor");

  v201 = objc_msgSend(v198, "constraintEqualToAnchor:constant:", v200, v107[8]);
  v202 = v228;
  if ((unint64_t)v228 >> 62)
  {
    if (v228 < 0)
      v216 = v228;
    else
      v216 = v228 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v228);
    v204 = _CocoaArrayWrapper.endIndex.getter(v216);
    swift_bridgeObjectRelease(v202);
    v205 = v204 + 2;
    if (!__OFADD__(v204, 2))
    {
LABEL_10:
      v206 = sub_215E80(v205, 1);
      specialized Array._endMutation()(v206);
      v196 = v196;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v196);
      v204 = *(_QWORD *)((char *)&dword_10 + (v228 & 0xFFFFFFFFFFFFFF8));
      v203 = *(_QWORD *)((char *)&dword_18 + (v228 & 0xFFFFFFFFFFFFFF8));
      if (v204 < v203 >> 1)
        goto LABEL_11;
      goto LABEL_20;
    }
  }
  else
  {
    v203 = v228 & 0xFFFFFFFFFFFFF8;
    v204 = *(_QWORD *)((char *)&dword_10 + (v228 & 0xFFFFFFFFFFFFF8));
    v205 = v204 + 2;
    if (!__OFADD__(v204, 2))
      goto LABEL_10;
  }
  __break(1u);
LABEL_20:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v203 > 1, v204 + 1, 1);
LABEL_11:
  v207 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v204, v196);
  specialized Array._endMutation()(v207);
  v208 = v201;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v208);
  v210 = *(_QWORD *)((char *)&dword_10 + (v228 & 0xFFFFFFFFFFFFFF8));
  v209 = *(_QWORD *)((char *)&dword_18 + (v228 & 0xFFFFFFFFFFFFFF8));
  if (v210 >= v209 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v209 > 1, v210 + 1, 1);
  v211 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v210, v208);
  specialized Array._endMutation()(v211);

  v212 = (void *)objc_opt_self(NSLayoutConstraint);
  v213 = v228;
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  v214 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v212, "activateConstraints:", v214, swift_bridgeObjectRelease(v213).n128_f64[0]);

  return v30;
}

uint64_t sub_28582C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD v27[4];
  _QWORD v28[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v27[-1] - v9;
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subtitleAction);
  if (v11)
  {
    swift_retain(*(_QWORD *)(v1
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subtitleAction));
    v13 = static Logger.purchases.getter(v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "Performing OAuth action on show header subtitle click.", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    v28[3] = type metadata accessor for Action(0);
    v28[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v28[0] = v11;
    swift_retain(v11);
    v17 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel, (uint64_t (*)(uint64_t))sub_28200C);
    v27[3] = sub_E710(0, &qword_3DA868, UILabel_ptr);
    v27[0] = v17;
    v19 = sub_239FC(&qword_3DF7C8, v18, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalShowHeaderCollectionViewCell, (uint64_t)&unk_303E20);
    v20 = ShelfUIKitCell.perform(_:from:in:)(v28, v27, v1, ObjectType, v19);
    swift_release(v20);
    swift_release(v11);
    sub_1FE78((uint64_t)v27);
    return __swift_destroy_boxed_opaque_existential_0(v28);
  }
  else
  {
    v22 = static Logger.purchases.getter(v8);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "User clicked on OAuth but there was no action available.", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_285AF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_objectGraph));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_episodePlayStateController));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subtitleAction));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___upsellArtworkView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___horizontalStack));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_parentVerticalStack));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___verticalStackContainerView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_verticalStack));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_buttonStackView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___buttonStackViewBottomConstraint));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showMetadataView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showTitleTopConstraint));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___descriptionBottomConstraint));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_descriptionLabelContainer));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_contextButton));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_primaryButtonAction));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subscribeButton));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___primaryButton));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell__primaryButtonController));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showSubtitleButton));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___secondaryButton));
}

uint64_t type metadata accessor for HorizontalShowHeaderCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell);
}

uint64_t getEnumTagSinglePayload for HorizontalShowHeaderCollectionViewCell.LayoutConstants(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 88))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HorizontalShowHeaderCollectionViewCell.LayoutConstants(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 88) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalShowHeaderCollectionViewCell.LayoutConstants()
{
  return &type metadata for HorizontalShowHeaderCollectionViewCell.LayoutConstants;
}

void sub_285E8C(uint64_t *a1)
{
  sub_28244C(*a1);
}

double sub_285E94()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_objectGraph)).n128_u64[0];
  return result;
}

void sub_285EA4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = ShelfAttributes.sizeClass.getter();
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_sizeClass);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_sizeClass) = v1;
  sub_2815F8(v2);
}

uint64_t sub_285EE0(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DF7D0, v3, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalShowHeaderCollectionViewCell, (uint64_t)&unk_303E90);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_285F38(int a1, id a2)
{
  char *v2;
  double v3;

  v2 = (char *)objc_msgSend(a2, "userInterfaceIdiom");
  v3 = 318.0;
  if (v2 != (_BYTE *)&dword_4 + 1)
    v3 = 348.0;
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v3);
}

uint64_t sub_285F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DF7D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalShowHeaderCollectionViewCell, (uint64_t)&unk_303E90);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_285FC0()
{
  return 0x4049000000000000;
}

uint64_t sub_285FCC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DF7B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalShowHeaderCollectionViewCell, (uint64_t)&unk_303D68);
}

uint64_t sub_285FF8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C60, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalShowHeaderCollectionViewCell, (uint64_t)&unk_303DF0);
}

uint64_t sub_286024(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DF7C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalShowHeaderCollectionViewCell, (uint64_t)&unk_303DC8);
}

uint64_t sub_286050(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DF7C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalShowHeaderCollectionViewCell, (uint64_t)&unk_303E20);
}

void sub_28607C()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  double v17;
  _QWORD *v18;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_episodePlayStateController] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___layoutConstants];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  *((_OWORD *)v1 + 4) = 0u;
  *((_QWORD *)v1 + 10) = 0;
  v1[88] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subtitleAction] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___upsellArtworkView] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_sizeClass] = 8;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___horizontalStack] = 0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_parentVerticalStack;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, "setAxis:", 1);
  objc_msgSend(v3, "setAlignment:", 1);
  objc_msgSend(v3, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v2] = v3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___verticalStackContainerView] = 0;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_verticalStack;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, "setAxis:", 1);
  objc_msgSend(v5, "setAlignment:", 1);
  objc_msgSend(v5, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v5, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v4] = v5;
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_buttonStackView;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, "setAxis:", 0);
  objc_msgSend(v7, "setAlignment:", 1);
  objc_msgSend(v7, "setSpacing:", 10.0);
  objc_msgSend(v7, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v6] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___buttonStackViewBottomConstraint] = 0;
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showTitle;
  *(_QWORD *)&v0[v8] = sub_1A4CC0();
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_showMetadataView;
  v10 = type metadata accessor for ShowMetadataView();
  v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10)), "init");
  v11[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShowMetadataView_uppercased] = 1;
  *(_QWORD *)&v0[v9] = v11;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showTitleTopConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___descriptionBottomConstraint] = 0;
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_descriptionLabelContainer;
  v13 = type metadata accessor for FadingDescriptionLabel();
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_contextButton;
  *(_QWORD *)&v0[v14] = sub_281B50();
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_primaryButtonAction] = 0;
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell_subscribeButton;
  v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExpandableFollowButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  LODWORD(v17) = 1148846080;
  objc_msgSend(v16, "setContentCompressionResistancePriority:forAxis:", 0, v17);
  *(_QWORD *)&v0[v15] = v16;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___primaryButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell__primaryButtonController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___showSubtitleButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___benefitsLabel] = 0;
  v18 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews38HorizontalShowHeaderCollectionViewCell____lazy_storage___secondaryButton];
  *v18 = 0;
  v18[1] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/HorizontalShowHeaderCollectionViewCell.swift", 68, 2, 515, 0);
  __break(1u);
}

uint64_t sub_286444()
{
  return sub_89A0(&qword_3DF7D8, type metadata accessor for RecentlySearchedHeaderCell, (uint64_t)&unk_303F00);
}

uint64_t type metadata accessor for RecentlySearchedHeaderCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3DF8E0;
  if (!qword_3DF8E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RecentlySearchedHeaderCell);
  return result;
}

uint64_t sub_2864AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  int v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  int v53;
  int v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v2 = v1;
  v67 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF7F8);
  __chkstk_darwin(v3);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF800);
  __chkstk_darwin(v6);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF808);
  __chkstk_darwin(v65);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF810);
  __chkstk_darwin(v66);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v13);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF818);
  sub_286890(v2, (uint64_t *)&v5[*(int *)(v14 + 44)]);
  v16 = static Edge.Set.leading.getter(v15);
  v17 = v16;
  v18 = static Edge.Set.trailing.getter(v16);
  v19 = Edge.Set.init(rawValue:)(0);
  v20 = Edge.Set.init(rawValue:)(v19);
  if (Edge.Set.init(rawValue:)(v20 & v17) != v17)
    v19 = Edge.Set.init(rawValue:)(v19 | v17);
  v21 = Edge.Set.init(rawValue:)(v19);
  if (Edge.Set.init(rawValue:)(v21 & v18) != v18)
    LOBYTE(v19) = Edge.Set.init(rawValue:)(v19 | v18);
  v22 = *(_QWORD *)v2;
  v23 = *(_QWORD *)(v2 + 8);
  v24 = *(_BYTE *)(v2 + 16);
  sub_A304(v22, v23, v24);
  v25 = sub_14874(v22, v23, v24);
  sub_A3A4(v22, v23, v24);
  v26 = SizeClass.init(width:)(v25);
  sub_A304(v22, v23, v24);
  v27 = sub_14874(v22, v23, v24);
  sub_A3A4(v22, v23, v24);
  v28 = SizeClass.margins(width:)(v26, v27);
  v29 = EdgeInsets.init(_all:)(v28);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_D184((uint64_t)v5, (uint64_t)v8, &qword_3DF7F8);
  v36 = &v8[*(int *)(v6 + 36)];
  *v36 = v19;
  *((double *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  v37 = sub_D1D4((uint64_t)v5, &qword_3DF7F8);
  v38 = static Edge.Set.top.getter(v37);
  v39 = Edge.Set.init(rawValue:)(0);
  v40 = v39;
  v41 = Edge.Set.init(rawValue:)(v39);
  if (Edge.Set.init(rawValue:)(v41 & v38) != v38)
    LOBYTE(v40) = Edge.Set.init(rawValue:)(v40 | v38);
  v42 = EdgeInsets.init(_all:)(15.0);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  sub_D184((uint64_t)v8, (uint64_t)v10, &qword_3DF800);
  v49 = &v10[*(int *)(v65 + 36)];
  *v49 = v40;
  *((double *)v49 + 1) = v42;
  *((_QWORD *)v49 + 2) = v44;
  *((_QWORD *)v49 + 3) = v46;
  *((_QWORD *)v49 + 4) = v48;
  v49[40] = 0;
  v50 = sub_D1D4((uint64_t)v8, &qword_3DF800);
  v51 = static Edge.Set.bottom.getter(v50);
  v52 = Edge.Set.init(rawValue:)(0);
  v53 = v52;
  v54 = Edge.Set.init(rawValue:)(v52);
  if (Edge.Set.init(rawValue:)(v54 & v51) != v51)
    LOBYTE(v53) = Edge.Set.init(rawValue:)(v53 | v51);
  v55 = EdgeInsets.init(_all:)(7.0);
  v57 = v56;
  v59 = v58;
  v61 = v60;
  sub_D184((uint64_t)v10, (uint64_t)v12, &qword_3DF808);
  v62 = &v12[*(int *)(v66 + 36)];
  *v62 = v53;
  *((double *)v62 + 1) = v55;
  *((_QWORD *)v62 + 2) = v57;
  *((_QWORD *)v62 + 3) = v59;
  *((_QWORD *)v62 + 4) = v61;
  v62[40] = 0;
  sub_D1D4((uint64_t)v10, &qword_3DF808);
  return sub_D210((uint64_t)v12, v67, &qword_3DF810);
}

double sub_286890@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  void *object;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  id v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t KeyPath;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  __n128 v67;
  double v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, __n128);
  __n128 v98;
  double result;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  Swift::String v133;
  Swift::String v134;
  Swift::String v135;

  v115 = a1;
  v132 = a2;
  v2 = type metadata accessor for AutomaticHoverEffect(0);
  v3 = *(_QWORD *)(v2 - 8);
  v130 = v2;
  v131 = v3;
  __chkstk_darwin(v2);
  v129 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContentShapeKinds(0);
  v127 = *(_QWORD *)(v5 - 8);
  v128 = v5;
  __chkstk_darwin(v5);
  v126 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BorderlessButtonStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  v119 = v7;
  v120 = v8;
  __chkstk_darwin(v7);
  v112 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for RecentlySearchedHeaderCell(0);
  v100 = *(_QWORD *)(v125 - 8);
  v101 = *(_QWORD *)(v100 + 64);
  __chkstk_darwin(v125);
  v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F18);
  v117 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v102 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF820);
  v116 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v103 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF828);
  __chkstk_darwin(v113);
  v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF830);
  v121 = *(_QWORD *)(v16 - 8);
  v122 = v16;
  __chkstk_darwin(v16);
  v109 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF838);
  __chkstk_darwin(v114);
  v110 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF840);
  v124 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v20 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v123 = (char *)&v100 - v22;
  v23 = (void *)objc_opt_self(NSBundle);
  v24 = objc_msgSend(v23, "mainBundle");
  v25._countAndFlagsBits = 0xD00000000000001ELL;
  v134._object = (void *)0xE000000000000000;
  v25._object = (void *)0x80000000003180E0;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v134._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v134)._object;

  v29 = static Font.subheadline.getter(v28);
  v31 = Text.font(_:)(v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRelease(object);
  v38 = swift_release(v29);
  v39 = static Font.Weight.semibold.getter(v38);
  v107 = Text.fontWeight(_:)(*(_QWORD *)&v39, 0, v31, v33, v35 & 1, v37);
  v105 = v40;
  v106 = v41;
  v104 = v42 & 1;
  sub_D170(v31, v33, v35 & 1);
  v43 = objc_msgSend(v23, "mainBundle", swift_bridgeObjectRelease(v37).n128_f64[0]);
  v135._object = (void *)0xE000000000000000;
  v44._object = (void *)0x8000000000318100;
  v44._countAndFlagsBits = 0xD00000000000001BLL;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v135._countAndFlagsBits = 0;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)v43, v45, v135);

  v133 = v46;
  v47 = v115;
  sub_2877AC(v115, (uint64_t)v11);
  v48 = *(unsigned __int8 *)(v100 + 80);
  v49 = (v48 + 16) & ~v48;
  v50 = swift_allocObject(&unk_38F600, v49 + v101, v48 | 7);
  sub_1B79C((uint64_t)v11, v50 + v49, type metadata accessor for RecentlySearchedHeaderCell);
  v51 = sub_D254();
  v52 = v102;
  v53 = Button<>.init<A>(_:action:)(&v133, sub_2878FC, v50, &type metadata for String, v51);
  v54 = v112;
  BorderlessButtonStyle.init()(v53);
  v55 = sub_10EDC(&qword_3D0F30, &qword_3D0F18, (uint64_t)&protocol conformance descriptor for Button<A>);
  v56 = sub_89A0(&qword_3D8750, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v57 = v103;
  v58 = v111;
  v59 = v119;
  View.buttonStyle<A>(_:)(v54, v111, v119, v55, v56);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v54, v59);
  v60 = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v52, v58);
  v61 = static Font.subheadline.getter(v60);
  KeyPath = swift_getKeyPath(&unk_304058);
  v63 = v116;
  v64 = v118;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v15, v57, v118);
  v65 = v113;
  v66 = (uint64_t *)&v15[*(int *)(v113 + 36)];
  *v66 = KeyPath;
  v66[1] = v61;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v57, v64);
  v68 = static Font.Weight.semibold.getter(v67);
  v69 = sub_287930();
  v70 = v109;
  View.fontWeight(_:)(*(_QWORD *)&v68, 0, v65, v69);
  v71 = sub_D1D4((uint64_t)v15, &qword_3DF828);
  v72 = v126;
  static ContentShapeKinds.hoverEffect.getter(v71);
  v73 = v114;
  v74 = (uint64_t)v110;
  v75 = (uint64_t)&v110[*(int *)(v114 + 36)];
  sub_D184(v47 + *(int *)(v125 + 28), v75, &qword_3DF850);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF858);
  v78 = v127;
  v77 = v128;
  (*(void (**)(uint64_t, char *, uint64_t))(v127 + 16))(v75 + *(int *)(v76 + 40), v72, v128);
  *(_BYTE *)(v75 + *(int *)(v76 + 36)) = 0;
  v80 = v121;
  v79 = v122;
  (*(void (**)(uint64_t, char *, uint64_t))(v121 + 16))(v74, v70, v122);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v72, v77);
  v81 = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v70, v79);
  v82 = v129;
  static CustomHoverEffect<>.automatic.getter(v81);
  v83 = sub_287A38();
  v84 = sub_89A0(&qword_3DF870, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v85 = v130;
  View.hoverEffect<A>(_:isEnabled:)(v82, 1, v73, v130, v83, v84);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v82, v85);
  sub_D1D4(v74, &qword_3DF838);
  v87 = v123;
  v86 = v124;
  v88 = v108;
  (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v123, v20, v108);
  v89 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  v90 = v86;
  v89(v20, v87, v88);
  v91 = v132;
  v92 = v107;
  v93 = v105;
  *v132 = v107;
  v91[1] = v93;
  LOBYTE(v77) = v104;
  *((_BYTE *)v91 + 16) = v104;
  v94 = v106;
  v91[3] = v106;
  v91[4] = 0;
  *((_BYTE *)v91 + 40) = 1;
  v95 = v91;
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF878);
  v89((char *)v95 + *(int *)(v96 + 64), v20, v88);
  sub_D130(v92, v93, v77);
  v97 = *(void (**)(char *, uint64_t, __n128))(v90 + 8);
  v98 = swift_bridgeObjectRetain(v94);
  v97(v87, v88, v98);
  ((void (*)(char *, uint64_t))v97)(v20, v88);
  sub_D170(v92, v93, v77);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v94).n128_u64[0];
  return result;
}

uint64_t sub_2870F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  _QWORD *boxed_opaque_existential_0;
  void (*v20)(_QWORD *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];

  v39 = type metadata accessor for ActionMetricsBehavior(0);
  v2 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActionMetrics(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EmptyAction(0, v6);
  v40 = *(_QWORD *)(v9 - 8);
  v10 = v40;
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_28736C((uint64_t)v8);
  EmptyAction.init(actionMetrics:)(v8);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 56);
  sub_4F49C(v13, v14, v15);
  v16 = sub_14ED0(v13, v14, v15);
  v38 = v17;
  sub_19BF4(v13, v14, v15);
  ObjectType = swift_getObjectType();
  v41[3] = v9;
  v41[4] = &protocol witness table for EmptyAction;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v41);
  v20 = *(void (**)(_QWORD *, char *, uint64_t))(v10 + 16);
  v21 = v9;
  v20(boxed_opaque_existential_0, v12, v9);
  v22 = v2;
  v23 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v24 = v39;
  v23(v4, enum case for ActionMetricsBehavior.fromAction(_:), v39);
  v25 = *(_QWORD *)(a1 + 24);
  v26 = *(_BYTE *)(a1 + 32);
  swift_retain(v25);
  v28 = sub_14A78(v27, v26);
  swift_release(v25);
  v29 = ActionRunner.perform(_:withMetrics:asPartOf:)(v41, v4, v28, ObjectType, v38);
  swift_unknownObjectRelease(v16);
  swift_release(v29);
  v30 = swift_release(v28);
  (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v4, v24, v30);
  __swift_destroy_boxed_opaque_existential_0(v41);
  v31 = *(_QWORD *)(a1 + 24);
  LOBYTE(a1) = *(_BYTE *)(a1 + 32);
  swift_retain(v31);
  v33 = sub_14A78(v32, a1);
  swift_release(v31);
  v34 = type metadata accessor for RecentlySearchedStorage(0);
  BaseObjectGraph.inject<A>(_:)(v41, v34, v34);
  swift_release(v33);
  v35 = v41[0];
  RecentlySearchedStorage.clear()();
  v36 = swift_release(v35);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v40 + 8))(v12, v21, v36);
}

uint64_t sub_28736C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  char *v30;
  __n128 v31;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v37 = a1;
  v1 = type metadata accessor for ScalarDictionary(0);
  v2 = __chkstk_darwin(v1);
  v36 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MetricsData.Configuration(0, v2);
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v7);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D30F0);
  v11 = *(_QWORD *)(type metadata accessor for MetricsData(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + v12, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_2F03C0;
  v33[1] = v15 + v14;
  v33[0] = static MetricsTargetID.clear.getter();
  v17 = v16;
  v18 = static MetricsTargetType.button.getter();
  v20 = v19;
  v21 = static MetricsActionType.clear.getter();
  v23 = v22;
  v24 = static MetricsActionContext.recentlySearched.getter();
  v26 = v25;
  v27 = type metadata accessor for URL(0);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v9, 1, 1, v27);
  static MetricsData.Configuration.podcasts.getter(v28);
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(v33[0], v17, v18, v20, v21, v23, v24, v26, 0, 0, v9, &_swiftEmptyDictionarySingleton, v6);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v23);
  v29 = swift_bridgeObjectRelease(v26);
  (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v6, v35, v29);
  sub_D1D4((uint64_t)v9, (uint64_t *)&unk_3D2D70);
  v30 = v36;
  ScalarDictionary.init()(v31);
  return ActionMetrics.init(data:custom:)(v15, v30);
}

uint64_t sub_2875A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _OWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double *v23;
  uint64_t v24;

  *(_QWORD *)a4 = swift_getKeyPath(&unk_304088);
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = swift_getKeyPath(&unk_3040B0);
  *(_BYTE *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 40) = swift_getKeyPath(&unk_3040E0);
  *(_QWORD *)(a4 + 48) = 0;
  *(_BYTE *)(a4 + 56) = 0;
  v8 = (_OWORD *)(a4 + *(int *)(a3 + 28));
  v9 = (char *)v8 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v10 = enum case for RoundedCornerStyle.continuous(_:);
  v11 = type metadata accessor for RoundedCornerStyle(0);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  __asm { FMOV            V0.2D, #4.0 }
  *v8 = _Q0;
  v18 = static UnitPoint.center.getter(v12);
  v20 = v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF850);
  __asm { FMOV            V0.2D, #1.5 }
  *(_OWORD *)((char *)v8 + *(int *)(v21 + 36)) = _Q0;
  v23 = (double *)((char *)v8 + *(int *)(v21 + 40));
  *v23 = v18;
  *((_QWORD *)v23 + 1) = v20;
  v24 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
  return sub_1B79C(a2, a4 + *(int *)(a3 + 32), (uint64_t (*)(_QWORD))&type metadata accessor for RecentlySearchedHeader);
}

uint64_t sub_2876D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_89A0(&qword_3DF880, type metadata accessor for RecentlySearchedHeaderCell, (uint64_t)&unk_303F60);
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

uint64_t sub_287718()
{
  return sub_89A0(&qword_3DF7E0, type metadata accessor for RecentlySearchedHeaderCell, (uint64_t)&unk_303FB0);
}

uint64_t sub_287744()
{
  return sub_89A0(&qword_3DF7E8, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlySearchedHeader, (uint64_t)&protocol conformance descriptor for RecentlySearchedHeader);
}

uint64_t sub_287770(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_333FC8, 1);
}

uint64_t sub_287780()
{
  return sub_89A0(&qword_3DF7F0, type metadata accessor for RecentlySearchedHeaderCell, (uint64_t)&unk_304000);
}

uint64_t sub_2877AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentlySearchedHeaderCell(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2877F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for RecentlySearchedHeaderCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  sub_A3A4(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(_BYTE *)(v0 + v4 + 16));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  sub_19BF4(*(_QWORD *)(v0 + v4 + 40), *(_QWORD *)(v0 + v4 + 48), *(_BYTE *)(v0 + v4 + 56));
  v6 = *(int *)(v1 + 28);
  v7 = v0 + v4 + v6 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v8 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + *(int *)(v1 + 32);
  v10 = swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
  v11 = v9 + *(int *)(type metadata accessor for RecentlySearchedHeader(0, v10) + 20);
  v12 = type metadata accessor for ImpressionMetrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_2878FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RecentlySearchedHeaderCell(0) - 8) + 80);
  return sub_2870F8(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_287930()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_3DF848;
  if (!qword_3DF848)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF828);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0F18);
    v2[1] = type metadata accessor for BorderlessButtonStyle(255);
    v2[2] = sub_10EDC(&qword_3D0F30, &qword_3D0F18, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_89A0(&qword_3D8750, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10EDC(&qword_3D10B0, &qword_3D10B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DF848);
  }
  return result;
}

unint64_t sub_287A38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_3DF860;
  if (!qword_3DF860)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF838);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF828);
    v2[1] = sub_287930();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_10EDC(&qword_3DF868, &qword_3DF858, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DF860);
  }
  return result;
}

unint64_t sub_287AFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(const void *, uint64_t, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v37 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v37);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_A304(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v11;
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 48);
    v14 = *(_BYTE *)(a2 + 56);
    swift_retain(v10);
    sub_4F49C(v12, v13, v14);
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 56) = v14;
    v15 = *(int *)(a3 + 28);
    v16 = a1 + v15;
    v17 = a2 + v15;
    *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
    v18 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v19 = v16 + v18;
    v20 = v17 + v18;
    v21 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF850);
    *(_OWORD *)(v16 + *(int *)(v22 + 36)) = *(_OWORD *)(v17 + *(int *)(v22 + 36));
    v23 = *(int *)(v22 + 40);
    v24 = *(__n128 *)(v17 + v23);
    *(__n128 *)(v16 + v23) = v24;
    v25 = *(int *)(a3 + 32);
    v26 = (_QWORD *)(a1 + v25);
    v27 = a2 + v25;
    v28 = *(_QWORD *)(a2 + v25 + 8);
    *v26 = *(_QWORD *)(a2 + v25);
    v26[1] = v28;
    v29 = *(int *)(type metadata accessor for RecentlySearchedHeader(0, v24) + 20);
    v30 = (char *)v26 + v29;
    v31 = (const void *)(v27 + v29);
    v32 = type metadata accessor for ImpressionMetrics(0);
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v33 + 48);
    v35 = swift_bridgeObjectRetain(v28);
    if (v34(v31, 1, v32, v35))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
  }
  return a1;
}

uint64_t sub_287CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  sub_A3A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 24));
  sub_19BF4(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = v4 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v6 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 32);
  v8 = swift_bridgeObjectRelease(*(_QWORD *)(v7 + 8));
  v9 = v7 + *(int *)(type metadata accessor for RecentlySearchedHeader(0, v8) + 20);
  v10 = type metadata accessor for ImpressionMetrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return result;
}

uint64_t sub_287DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(const void *, uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_A304(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_BYTE *)(a2 + 56);
  swift_retain(v9);
  sub_4F49C(v11, v12, v13);
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_BYTE *)(a1 + 56) = v13;
  v14 = *(int *)(a3 + 28);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v17 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v18 = v15 + v17;
  v19 = v16 + v17;
  v20 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF850);
  *(_OWORD *)(v15 + *(int *)(v21 + 36)) = *(_OWORD *)(v16 + *(int *)(v21 + 36));
  v22 = *(int *)(v21 + 40);
  v23 = *(__n128 *)(v16 + v22);
  *(__n128 *)(v15 + v22) = v23;
  v24 = *(int *)(a3 + 32);
  v25 = (_QWORD *)(a1 + v24);
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a2 + v24 + 8);
  *v25 = *(_QWORD *)(a2 + v24);
  v25[1] = v27;
  v28 = *(int *)(type metadata accessor for RecentlySearchedHeader(0, v23) + 20);
  v29 = (char *)v25 + v28;
  v30 = (const void *)(v26 + v28);
  v31 = type metadata accessor for ImpressionMetrics(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v32 + 48);
  v34 = swift_bridgeObjectRetain(v27);
  if (v33(v30, 1, v31, v34))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v32 + 16))(v29, v30, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  return a1;
}

uint64_t sub_287F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  uint64_t v48;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_A304(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_A3A4(v9, v10, v11);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_BYTE *)(a2 + 32);
  v14 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v12;
  *(_BYTE *)(a1 + 32) = v13;
  swift_retain(v12);
  swift_release(v14);
  v15 = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(_BYTE *)(a2 + 56);
  sub_4F49C(v15, v16, v17);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  *(_BYTE *)(a1 + 56) = v17;
  sub_19BF4(v18, v19, v20);
  v21 = *(int *)(a3 + 28);
  v22 = (_QWORD *)(a1 + v21);
  v23 = a2 + v21;
  *v22 = *(_QWORD *)(a2 + v21);
  v22[1] = *(_QWORD *)(a2 + v21 + 8);
  v24 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v25 = (char *)v22 + v24;
  v26 = v23 + v24;
  v27 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF850);
  v29 = *(int *)(v28 + 36);
  v30 = (_QWORD *)((char *)v22 + v29);
  v31 = (_QWORD *)(v23 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  v32 = *(int *)(v28 + 40);
  v33 = (_QWORD *)((char *)v22 + v32);
  v34 = (_QWORD *)(v23 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  v35 = *(int *)(a3 + 32);
  v36 = (_QWORD *)(a1 + v35);
  v37 = a2 + v35;
  *v36 = *(_QWORD *)(a2 + v35);
  v38 = *(_QWORD *)(a2 + v35 + 8);
  v39 = *(_QWORD *)(a1 + v35 + 8);
  v36[1] = v38;
  swift_bridgeObjectRetain(v38);
  v40 = swift_bridgeObjectRelease(v39);
  v41 = *(int *)(type metadata accessor for RecentlySearchedHeader(0, v40) + 20);
  v42 = (char *)v36 + v41;
  v43 = (char *)(v37 + v41);
  v44 = type metadata accessor for ImpressionMetrics(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  LODWORD(v26) = v46(v42, 1, v44);
  v47 = v46(v43, 1, v44);
  if (!(_DWORD)v26)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v42, v43, v44);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
    goto LABEL_6;
  }
  if (v47)
  {
LABEL_6:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  return a1;
}

uint64_t sub_2881A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *v16;
  __n128 v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  v9 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v10 = v7 + v9;
  v11 = v8 + v9;
  v12 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF850);
  *(_OWORD *)(v7 + *(int *)(v13 + 36)) = *(_OWORD *)(v8 + *(int *)(v13 + 36));
  *(_OWORD *)(v7 + *(int *)(v13 + 40)) = *(_OWORD *)(v8 + *(int *)(v13 + 40));
  v14 = *(int *)(a3 + 32);
  v15 = a1 + v14;
  v16 = (__n128 *)(a2 + v14);
  v17 = *v16;
  *(__n128 *)(a1 + v14) = *v16;
  v18 = *(int *)(type metadata accessor for RecentlySearchedHeader(0, v17) + 20);
  v19 = (void *)(v15 + v18);
  v20 = (char *)v16 + v18;
  v21 = type metadata accessor for ImpressionMetrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_288320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  uint64_t v37;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_A3A4(v7, v8, v9);
  v10 = *(_BYTE *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v10;
  swift_release(v11);
  v12 = *(_BYTE *)(a2 + 56);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v12;
  sub_19BF4(v13, v14, v15);
  v16 = *(int *)(a3 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  v19 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v20 = v17 + v19;
  v21 = v18 + v19;
  v22 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF850);
  *(_OWORD *)(v17 + *(int *)(v23 + 36)) = *(_OWORD *)(v18 + *(int *)(v23 + 36));
  *(_OWORD *)(v17 + *(int *)(v23 + 40)) = *(_OWORD *)(v18 + *(int *)(v23 + 40));
  v24 = *(int *)(a3 + 32);
  v25 = (_QWORD *)(a1 + v24);
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a2 + v24 + 8);
  v28 = *(_QWORD *)(a1 + v24 + 8);
  *v25 = *(_QWORD *)(a2 + v24);
  v25[1] = v27;
  v29 = swift_bridgeObjectRelease(v28);
  v30 = *(int *)(type metadata accessor for RecentlySearchedHeader(0, v29) + 20);
  v31 = (char *)v25 + v30;
  v32 = (char *)(v26 + v30);
  v33 = type metadata accessor for ImpressionMetrics(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  LODWORD(v21) = v35(v31, 1, v33);
  v36 = v35(v32, 1, v33);
  if (!(_DWORD)v21)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_6;
  }
  if (v36)
  {
LABEL_6:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  return a1;
}

uint64_t sub_28850C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_288518);
}

uint64_t sub_288518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF850);
    v10 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v8;
      v12 = *(int *)(a3 + 28);
    }
    else
    {
      v11 = type metadata accessor for RecentlySearchedHeader(0, v9);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_2885B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2885C0);
}

uint64_t sub_2885C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF850);
    v10 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      v11 = v8;
      v12 = *(int *)(a4 + 28);
    }
    else
    {
      v11 = type metadata accessor for RecentlySearchedHeader(0, v9);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5 + v12, a2, a2, v11);
  }
  return result;
}

void sub_28865C(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[5];

  v7[0] = &unk_304150;
  v7[1] = &unk_304168;
  v7[2] = &unk_304150;
  sub_2886F8(319);
  if (v4 <= 0x3F)
  {
    v7[3] = *(_QWORD *)(v2 - 8) + 64;
    v5 = type metadata accessor for RecentlySearchedHeader(319, v3);
    if (v6 <= 0x3F)
    {
      v7[4] = *(_QWORD *)(v5 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v7, a1 + 16);
    }
  }
}

void sub_2886F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_3DF8F0)
  {
    v2 = type metadata accessor for RoundedRectangle(255);
    v3 = sub_89A0(&qword_3D71D0, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
    v4 = type metadata accessor for ScaledShape(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_3DF8F0);
  }
}

uint64_t sub_288770()
{
  return sub_16984(&qword_3DF930, &qword_3DF810, (void (*)(void))sub_28879C);
}

uint64_t sub_28879C()
{
  return sub_16984(&qword_3DF938, &qword_3DF808, (void (*)(void))sub_2887B8);
}

unint64_t sub_2887B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DF940;
  if (!qword_3DF940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF800);
    sub_10EDC(&qword_3DF948, &qword_3DF7F8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DF940);
  }
  return result;
}

double DebugSettingsViewController.debugActionsProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  __n128 v6;
  double result;
  _BYTE v8[24];

  v5 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider, v8, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  sub_289BE0(v6);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void sub_2888A8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_21D154(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_28BCAC(v4);
  *a1 = v2;
}

uint64_t sub_288910(void *a1)
{
  uint64_t v1;
  char *v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  unsigned __int8 v15;
  void *v16;
  id v17;
  Class isa;
  __n128 v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  __n128 v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  __n128 v31;
  void *v32;
  __n128 v33;
  void *v34;
  __n128 v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  __n128 v39;
  void *v40;
  __n128 v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  __n128 v48;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  void *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void **aBlock;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  void *v66;
  void (*v67)();
  uint64_t v68;

  v54 = a1;
  v52 = type metadata accessor for DispatchWorkItemFlags(0);
  v57 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v2 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for DispatchQoS(0);
  v53 = *(void (**)(char *, uint64_t))(v62 - 8);
  v3 = __chkstk_darwin(v62);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for DispatchTime(0, v3);
  v6 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - v10;
  v12 = type metadata accessor for DebugNotificationCenter();
  inited = swift_initStaticObject(v12, &unk_3CFFA8);
  v14 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v15 = NSUserDefaults.debugNotificationsEnabled.getter();

  if ((v15 & 1) != 0)
  {
    sub_22CCE8();
    v16 = *(void **)(inited + 24);
    if (v16)
    {
      sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
      v17 = v16;
      isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.47843, 1.0, 0.5).super.isa;
      sub_22C548(0xD00000000000001ELL, 0x8000000000318780, (uint64_t)isa, 0, 0, 3.0);

    }
  }
  v60 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v20 = static OS_dispatch_queue.main.getter(v19);
  v59 = inited;
  v21 = (void *)v20;
  static DispatchTime.now()(v22);
  + infix(_:_:)(v8, 0.5);
  v55 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23 = v61;
  v55(v8, v61);
  v67 = sub_28DECC;
  v68 = inited;
  aBlock = _NSConcreteStackBlock;
  v64 = 1107296256;
  v65 = sub_24360;
  v66 = &block_descriptor_7_5;
  v24 = _Block_copy(&aBlock);
  v25 = swift_release(v68);
  static DispatchQoS.unspecified.getter(v25);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v26 = sub_CF9B0();
  v51 = v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v56 = v27;
  v58 = sub_CF9F8();
  v28 = v52;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v27, v58, v52, v26);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v11, v5, v2, v24);
  _Block_release(v24);

  v57 = *(_QWORD *)(v57 + 8);
  ((void (*)(char *, uint64_t))v57)(v2, v28);
  v29 = (void (*)(char *, uint64_t))*((_QWORD *)v53 + 1);
  v29(v5, v62);
  v53 = v29;
  v30 = v55;
  v31.n128_f64[0] = ((double (*)(char *, uint64_t))v55)(v11, v23);
  v32 = (void *)static OS_dispatch_queue.main.getter(v31);
  static DispatchTime.now()(v33);
  + infix(_:_:)(v8, 1.0);
  v30(v8, v23);
  v67 = sub_28DED4;
  v68 = v59;
  aBlock = _NSConcreteStackBlock;
  v64 = 1107296256;
  v65 = sub_24360;
  v66 = &block_descriptor_10_0;
  v34 = _Block_copy(&aBlock);
  v35 = swift_release(v68);
  static DispatchQoS.unspecified.getter(v35);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v36 = v51;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v56, v58, v28, v51);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v11, v5, v2, v34);
  _Block_release(v34);

  ((void (*)(char *, uint64_t))v57)(v2, v28);
  v29(v5, v62);
  v37 = v61;
  v38 = v55;
  v39.n128_f64[0] = ((double (*)(char *, uint64_t))v55)(v11, v61);
  v40 = (void *)static OS_dispatch_queue.main.getter(v39);
  static DispatchTime.now()(v41);
  + infix(_:_:)(v8, 1.5);
  v38(v8, v37);
  v42 = swift_allocObject(&unk_38F890, 32, 7);
  v43 = v54;
  v44 = v59;
  *(_QWORD *)(v42 + 16) = v54;
  *(_QWORD *)(v42 + 24) = v44;
  v67 = sub_28DF08;
  v68 = v42;
  aBlock = _NSConcreteStackBlock;
  v64 = 1107296256;
  v65 = sub_24360;
  v66 = &block_descriptor_16_2;
  v45 = _Block_copy(&aBlock);
  v46 = v68;
  v47 = v43;
  v48 = swift_release(v46);
  static DispatchQoS.unspecified.getter(v48);
  aBlock = (void **)_swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v56, v58, v28, v36);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v11, v5, v2, v45);
  _Block_release(v45);

  ((void (*)(char *, uint64_t))v57)(v2, v28);
  v53(v5, v62);
  return ((uint64_t (*)(char *, uint64_t))v38)(v11, v61);
}

void sub_288E94(uint64_t a1)
{
  id v2;
  unsigned __int8 v3;
  void *v4;
  id v5;
  Class isa;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = NSUserDefaults.debugNotificationsEnabled.getter();

  if ((v3 & 1) != 0)
  {
    sub_22CCE8();
    v4 = *(void **)(a1 + 24);
    if (v4)
    {
      sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
      v5 = v4;
      isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.58431, 0.0, 0.5).super.isa;
      sub_22C548(0xD000000000000023, 0x8000000000318860, (uint64_t)isa, 0, 0, 3.0);

    }
  }
}

void sub_288F94(uint64_t a1)
{
  id v2;
  unsigned __int8 v3;
  void *v4;
  id v5;
  Class isa;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = NSUserDefaults.debugNotificationsEnabled.getter();

  if ((v3 & 1) != 0)
  {
    sub_22CCE8();
    v4 = *(void **)(a1 + 24);
    if (v4)
    {
      sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
      v5 = v4;
      isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.23137, 0.18824, 0.5).super.isa;
      sub_22C548(0xD000000000000021, 0x8000000000318830, (uint64_t)isa, 0, 0, 3.0);

    }
  }
}

void sub_28909C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  unsigned __int8 v8;
  void *v9;
  id v10;
  Class isa;

  v4 = swift_allocObject(&unk_38F8E0, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a1);
  v5 = swift_allocObject(&unk_38F908, 32, 7);
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (void *)objc_opt_self(NSUserDefaults);
  swift_retain(a2);
  v7 = objc_msgSend(v6, "standardUserDefaults", swift_retain(v5).n128_f64[0]);
  v8 = NSUserDefaults.debugNotificationsEnabled.getter();

  if ((v8 & 1) != 0 && (sub_22CCE8(), (v9 = *(void **)(a2 + 24)) != 0))
  {
    sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
    v10 = v9;
    isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.47843, 1.0, 0.5).super.isa;
    sub_22C548(0xD00000000000004ELL, 0x80000000003187A0, (uint64_t)isa, (uint64_t)sub_28DF60, v5, 3.0);
    swift_release_n(v5, 2);

  }
  else
  {
    swift_release_n(v5, 2);
  }
}

void sub_289214(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSString v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  void *Strong;
  void *v10;
  void *v11;
  id v12;
  _BYTE v13[24];

  v3 = a1 + 16;
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v4, v5, 1);

  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v7, 0, 0);

  objc_msgSend(v6, "addAction:", v8);
  swift_beginAccess(v3, v13, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v10 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v6, 1, 0);

  }
  v11 = *(void **)(a2 + 24);
  if (v11)
  {
    v12 = v11;
    sub_22C7F4();

    v6 = v12;
  }

}

void sub_28938C()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v0, "simulateStorefrontChange");

}

double sub_2893D8(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::OpaquePointer v20;
  Swift::String_optional v21;
  void *v22;
  void *v23;
  Swift::String v24;
  Swift::String v25;
  double v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  double result;
  id v34;
  char v35;

  v34 = a1;
  v3 = type metadata accessor for InformationViewStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BaseObjectGraph(0);
  v7 = BaseObjectGraph.__allocating_init(name:_:)(0x7974706D45, 0xE500000000000000, _swiftEmptyArrayStorage);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v8 = type metadata accessor for InformationViewCoordinator(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = swift_retain(v7);
  v10 = InformationViewCoordinator.init(asPartOf:withStyle:)(v9);
  v35 = 1;
  v11 = objc_allocWithZone((Class)type metadata accessor for InformationView());
  swift_retain(v7);
  v13 = InformationView.init(asPartOf:withStyle:)(v12, &v35);
  v14 = InformationViewCoordinator.title.getter();
  v16 = v15;
  v17 = InformationViewCoordinator.subtitle.getter();
  v19 = v18;
  v20._rawValue = (void *)InformationViewCoordinator.buttons.getter();
  v21.value._countAndFlagsBits = InformationViewCoordinator.symbolName.getter();
  v23 = v22;
  v24._countAndFlagsBits = v14;
  v24._object = v16;
  v25._countAndFlagsBits = v17;
  v25._object = v19;
  v21.value._object = v23;
  InformationView.apply(title:subtitle:actionButtons:symbolName:)(v24, v25, v20, v21);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v20._rawValue);
  *(_QWORD *)&v26 = swift_bridgeObjectRelease(v23).n128_u64[0];
  v27 = objc_msgSend(v34, "navigationController", v26);
  if (v27)
  {
    v28 = v27;
    v29 = objc_allocWithZone((Class)type metadata accessor for VerticallyCenteredView(0));
    v30 = VerticallyCenteredView.init(wrapping:)(v13);
    v31 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0));
    v32 = (void *)OverlayViewController.init(wrapping:)(v30);
    objc_msgSend(v28, "pushViewController:animated:", v32, 1);

  }
  swift_release(v10);

  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

void sub_2895F0(char a1, void *a2)
{
  Swift::String v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  void *v11;
  char v12;
  _QWORD v13[2];

  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  v12 = a1;
  _print_unlocked<A, B>(_:_:)(&v12, v13, &type metadata for UberStyle, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 0x61426769666E6F43;
  v4._object = (void *)0xED000079654B6573;
  String.append(_:)(v4);
  v5 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3DF9B0));
  v6 = (id)UIHostingController.init(rootView:)(v13);
  sub_19FE94(a1);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setTitle:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v10 = objc_msgSend(a2, "navigationController");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "pushViewController:animated:", v6, 1);

  }
}

void sub_289718(void *a1)
{
  sub_2895F0(3, a1);
}

void sub_289724(void *a1)
{
  sub_2895F0(2, a1);
}

void sub_289730(void *a1)
{
  sub_2895F0(4, a1);
}

void sub_289740()
{
  id v0;

  type metadata accessor for MediaLibraryStorageController(0);
  v0 = (id)static MediaLibraryStorageController.shared.getter();
  MediaLibraryStorageController.ignoreStorageCleanupPrompt()();

}

unint64_t sub_289780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t result;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider, v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return sub_D4404((uint64_t)_swiftEmptyArrayStorage);
  v3 = Strong;
  v4 = *(_QWORD *)(v1 + 8);
  ObjectType = swift_getObjectType();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  v7 = (_QWORD *)sub_D4404((uint64_t)_swiftEmptyArrayStorage);
  v8 = *(_QWORD *)(v6 + 16);
  if (!v8)
  {
    v43 = v6;
LABEL_28:
    swift_bridgeObjectRelease(v43);
    return (unint64_t)v7;
  }
  v45 = v6;
  v9 = v6 + 32;
  while (1)
  {
    sub_1D5D4(v9, (uint64_t)v49);
    v11 = v50;
    v12 = v51;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v12 + 8))(&v46, v11, v12);
    v13 = v47;
    v14 = v48;
    __swift_project_boxed_opaque_existential_1(&v46, v47);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
    v17 = v16;
    if (v7[2])
    {
      v18 = sub_36BA4(v15, v16);
      v19 = _swiftEmptyArrayStorage;
      if ((v20 & 1) != 0)
      {
        v19 = *(_QWORD **)(v7[7] + 8 * v18);
        swift_bridgeObjectRetain(v19);
      }
    }
    else
    {
      v19 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(v17);
    __swift_destroy_boxed_opaque_existential_0(&v46);
    sub_1D5D4((uint64_t)v49, (uint64_t)&v46);
    if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      v19 = sub_20EBB8(0, v19[2] + 1, 1, v19);
    v22 = v19[2];
    v21 = v19[3];
    if (v22 >= v21 >> 1)
      v19 = sub_20EBB8((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
    v19[2] = v22 + 1;
    sub_1B738(&v46, (uint64_t)&v19[5 * v22 + 4]);
    v23 = v50;
    v24 = v51;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v24 + 8))(&v46, v23, v24);
    v25 = v47;
    v26 = v48;
    __swift_project_boxed_opaque_existential_1(&v46, v47);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    v29 = v28;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
    v32 = sub_36BA4(v27, v29);
    v33 = v7[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (v7[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v31 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1601A0();
        if ((v36 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_15B6E0(v35, isUniquelyReferenced_nonNull_native);
      v37 = sub_36BA4(v27, v29);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_32;
      v32 = v37;
      if ((v36 & 1) != 0)
      {
LABEL_4:
        v10 = v7[7];
        swift_bridgeObjectRelease(*(_QWORD *)(v10 + 8 * v32));
        *(_QWORD *)(v10 + 8 * v32) = v19;
        goto LABEL_5;
      }
    }
    v7[(v32 >> 6) + 8] |= 1 << v32;
    v39 = (uint64_t *)(v7[6] + 16 * v32);
    *v39 = v27;
    v39[1] = v29;
    *(_QWORD *)(v7[7] + 8 * v32) = v19;
    v40 = v7[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
      goto LABEL_31;
    v7[2] = v42;
    swift_bridgeObjectRetain(v29);
LABEL_5:
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(0x8000000000000000);
    __swift_destroy_boxed_opaque_existential_0(&v46);
    __swift_destroy_boxed_opaque_existential_0(v49);
    v9 += 40;
    if (!--v8)
    {
      v43 = v45;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t DebugSettingsViewController.debugActionsProvider.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

double sub_289B6C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double result;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider;
  swift_beginAccess(v4, v7, 1, 0);
  *(_QWORD *)(v4 + 8) = v3;
  swift_unknownObjectWeakAssign(v4, v2);
  v5 = swift_unknownObjectRetain(v2);
  sub_289BE0(v5);
  *(_QWORD *)&result = swift_unknownObjectRelease(v2).n128_u64[0];
  return result;
}

void sub_289BE0(__n128 a1)
{
  char *v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  Class isa;
  __n128 v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *i;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  id v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50[3];
  uint64_t v51;
  uint64_t v52;

  v2 = v1;
  v3 = (id)ASKBuildTypeGetCurrent(a1);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF990);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_2EFA20;
  v6 = (void *)ASKBuildTypeDebug;
  v7 = (void *)ASKBuildTypeInternal;
  *(_QWORD *)(v5 + 32) = ASKBuildTypeDebug;
  *(_QWORD *)(v5 + 40) = v7;
  type metadata accessor for BuildType(0);
  v8 = v6;
  v9 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v11 = swift_bridgeObjectRelease(v5);
  LODWORD(v5) = ASKBuildTypeIsAnyOf(v3, isa, v11);

  if ((_DWORD)v5)
  {
    v12 = sub_289780();
    swift_bridgeObjectRetain_n(v12, 2);
    v13 = sub_15B1D0(v12);
    swift_bridgeObjectRelease(v12);
    v50[0] = (uint64_t)v13;
    v14 = 0;
    sub_2888A8(v50);
    swift_bridgeObjectRelease(v12);
    v15 = v50[0];
    v16 = *(_QWORD *)(v50[0] + 16);
    if (!v16)
    {
      swift_bridgeObjectRelease(v12);
      swift_release(v15);
      return;
    }
    v41 = v2;
    v42 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings];
    v40 = v50[0];
    for (i = (uint64_t *)(v50[0] + 40); ; i += 2)
    {
      if (*(_QWORD *)(v12 + 16))
      {
        v18 = *(i - 1);
        v19 = *i;
        swift_bridgeObjectRetain(*i);
        v20 = sub_36BA4(v18, v19);
        if ((v21 & 1) != 0)
        {
          v22 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20);
          swift_bridgeObjectRetain(v22);
          swift_bridgeObjectRelease(v19);
          if (!*(_QWORD *)(v22 + 16))
          {
            v47 = 0u;
            v48 = 0u;
            v49 = 0;
LABEL_19:
            swift_bridgeObjectRelease(v22);
            sub_D1D4((uint64_t)&v47, &qword_3DF998);
            goto LABEL_5;
          }
          sub_1D5D4(v22 + 32, (uint64_t)v44);
          v23 = v45;
          v24 = v46;
          __swift_project_boxed_opaque_existential_1(v44, v45);
          (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v24 + 8))(&v47, v23, v24);
          __swift_destroy_boxed_opaque_existential_0(v44);
          if (!*((_QWORD *)&v48 + 1))
            goto LABEL_19;
          sub_1B738(&v47, (uint64_t)v50);
          v25 = v2;
          v26 = sub_28D04C(v22);
          v43 = v14;
          swift_bridgeObjectRelease(v22);

          v27 = v51;
          v28 = v52;
          __swift_project_boxed_opaque_existential_1(v50, v51);
          v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
          v31 = v30;
          swift_beginAccess(v42, &v47, 33, 0);
          v32 = *(_QWORD **)v42;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v42);
          *(_QWORD *)v42 = v32;
          v34 = v26;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v32 = sub_20EA98(0, v32[2] + 1, 1, v32);
            *(_QWORD *)v42 = v32;
          }
          v36 = v32[2];
          v35 = v32[3];
          if (v36 >= v35 >> 1)
          {
            v32 = sub_20EA98((_QWORD *)(v35 > 1), v36 + 1, 1, v32);
            *(_QWORD *)v42 = v32;
          }
          v32[2] = v36 + 1;
          v37 = &v32[5 * v36];
          v37[4] = v29;
          v37[5] = v31;
          v37[6] = 0;
          v37[7] = 0;
          v37[8] = v34;
          swift_endAccess(&v47);
          v14 = v43;
          if (objc_msgSend(v25, "isViewLoaded"))
          {
            v38 = objc_msgSend(v25, "tableView");
            if (!v38)
            {
              __break(1u);
              swift_release(v50[0]);
              __break(1u);
              return;
            }
            v39 = v38;
            objc_msgSend(v38, "reloadData");

          }
          __swift_destroy_boxed_opaque_existential_0(v50);
          v2 = v41;
        }
        else
        {
          swift_bridgeObjectRelease(v19);
        }
      }
LABEL_5:
      if (!--v16)
      {
        swift_bridgeObjectRelease(v12);
        swift_release(v40);
        return;
      }
    }
  }
}

void (*DebugSettingsViewController.debugActionsProvider.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_28A01C;
}

void sub_28A01C(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    v7 = swift_unknownObjectRelease(v4);
    sub_289BE0(v7);
  }
  free(v3);
}

Swift::Void __swiftcall DebugSettingsViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "viewWillAppear:", a1);
}

uint64_t static DebugSettingsViewController.isActivation(url:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v0 = URL.host.getter();
  if (v1)
  {
    v2 = v1;
    if (v0 == 0x6E656D6775626564 && v1 == 0xE900000000000075)
      v3 = 1;
    else
      v3 = _stringCompareWithSmolCheck(_:_:expecting:)(v0, v1, 0x6E656D6775626564, 0xE900000000000075, 0);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

void sub_28A1B4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;

  v2 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(a1, "navigationController");
  if (v5)
  {
    v6 = v5;
    static JULoadingViewController.PresentationContext.fullCover.getter(v5);
    v7 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
    v8 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v4, 0);
    objc_msgSend(v6, "pushViewController:animated:", v8, 1);

  }
}

uint64_t sub_28A27C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;
  double v7;
  uint64_t v9;

  v2 = type metadata accessor for InformationViewStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for InformationViewStyle.emptyLibrary(_:), v2, v4);
  v7 = sub_2893D8(a1, (uint64_t)v6);
  return (*(uint64_t (**)(_QWORD *, uint64_t, double))(v3 + 8))(v6, v2, v7);
}

uint64_t sub_28A318(void *a1)
{
  return sub_28A378(a1, &enum case for InformationViewStyle.emptyBookmarks(_:));
}

uint64_t sub_28A324(void *a1)
{
  return sub_28A378(a1, &enum case for InformationViewStyle.emptyUnplayedBookmarks(_:));
}

uint64_t sub_28A330(void *a1)
{
  return sub_28A378(a1, &enum case for InformationViewStyle.emptyEpisodes(_:));
}

uint64_t sub_28A33C(void *a1)
{
  return sub_28A378(a1, &enum case for InformationViewStyle.emptyDownloadedEpisodes(_:));
}

uint64_t sub_28A348(void *a1)
{
  return sub_28A378(a1, &enum case for InformationViewStyle.emptyUnplayedDownloadedEpisodes(_:));
}

uint64_t sub_28A354(void *a1)
{
  return sub_28A378(a1, &enum case for InformationViewStyle.emptyLatestEpisodes(_:));
}

uint64_t sub_28A360(void *a1)
{
  return sub_28A378(a1, &enum case for InformationViewStyle.emptyUnplayedLatestEpisodes(_:));
}

uint64_t sub_28A36C(void *a1)
{
  return sub_28A378(a1, &enum case for InformationViewStyle.emptyStation(_:));
}

uint64_t sub_28A378(void *a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v11;

  v4 = type metadata accessor for InformationViewStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, *a2, v4, v6);
  v9 = sub_2893D8(a1, (uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v8, v4, v9);
}

uint64_t sub_28A414(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;
  double v7;
  uint64_t v9;

  v2 = type metadata accessor for InformationViewStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = 0x3E4D5245543CLL;
  v6[1] = 0xE600000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for InformationViewStyle.emptySearch(_:), v2, v4);
  v7 = sub_2893D8(a1, (uint64_t)v6);
  return (*(uint64_t (**)(_QWORD *, uint64_t, double))(v3 + 8))(v6, v2, v7);
}

void sub_28A4C0(void *a1)
{
  sub_28A520(a1, (uint64_t (*)(_QWORD))&type metadata accessor for FairPlayDebugHostingController, (uint64_t (*)(void))&FairPlayDebugHostingController.init());
}

void sub_28A4EC(void *a1)
{
  sub_28A520(a1, (uint64_t (*)(_QWORD))&type metadata accessor for TranscriptDebugHostingController, (uint64_t (*)(void))&TranscriptDebugHostingController.init());
}

void sub_28A520(void *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void))
{
  id v5;
  NSString v6;
  id v7;
  void *v8;
  id v9;

  v5 = objc_allocWithZone((Class)a2(0));
  v9 = (id)a3();
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setTitle:", v6);

  v7 = objc_msgSend(a1, "navigationController");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "presentViewController:animated:completion:", v9, 1, 0);

  }
}

id sub_28A5EC(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  NSString v6;
  id v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings] = a1;
  v10.receiver = v1;
  v10.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v10, "initWithStyle:", 1);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setTitle:", v6);

  v7 = objc_msgSend(v5, "navigationItem");
  v8 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v5, "dismissFrom:");
  objc_msgSend(v7, "setRightBarButtonItem:", v8);

  return v5;
}

void DebugSettingsViewController.init(coder:)()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/DebugSettingsViewController.swift", 57, 2, 413, 0);
  __break(1u);
}

Swift::Void __swiftcall DebugSettingsViewController.viewDidLoad()()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "viewDidLoad");
  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  v3 = (void *)objc_opt_self(NSUserDefaults);
  v4 = objc_msgSend(v3, "standardUserDefaults");
  objc_msgSend(v2, "addObserver:selector:name:object:", v0, "userDefaultsDidChange:", NSUserDefaultsDidChangeNotification, v4);

  v5 = objc_msgSend(v1, "defaultCenter");
  v6 = objc_msgSend(v3, "_applePodcastsFoundationSettingsUserDefaults");
  objc_msgSend(v5, "addObserver:selector:name:object:", v0, "userDefaultsDidChange:", NSUserDefaultsDidChangeNotification, v6);

}

uint64_t DebugSettingsViewController.supportedInterfaceOrientations.getter()
{
  void *v0;
  id v1;
  char *v2;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (_BYTE *)&dword_0 + 1)
    return 30;
  else
    return 2;
}

void sub_28AB04(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "tableView");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "reloadData");

  }
  else
  {
    __break(1u);
  }
}

void sub_28AB98(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  __n128 v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  NSString v40;
  id v41;
  char v42[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v4);
  v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = &v42[-v13 - 8];
  v41 = a1;
  v15 = objc_msgSend(a1, "superview", v12);
  if (!v15)
    return;
  v16 = v15;
  while (1)
  {
    v17 = objc_opt_self(UITableViewCell);
    v18 = swift_dynamicCastObjCClass(v16, v17);
    if (v18)
      break;
    v19 = objc_msgSend(v16, "superview");

    v16 = v19;
    if (!v19)
      return;
  }
  v20 = v18;
  v21 = objc_msgSend(v2, "tableView");
  if (!v21)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "indexPathForCell:", v20);

  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_16;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v23);

  v24 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v24(v6, v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_16:

    sub_D1D4((uint64_t)v6, (uint64_t *)&unk_3D1A00);
    return;
  }
  v25 = ((uint64_t (*)(char *, char *, uint64_t))v24)(v14, v6, v7);
  v26 = IndexPath.section.getter(v25);
  v27 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings];
  swift_beginAccess(v27, v42, 0, 0);
  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v26 >= *(_QWORD *)(*(_QWORD *)v27 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(*(_QWORD *)v27 + 40 * v26 + 64);
  v29 = swift_bridgeObjectRetain(v28);
  v30 = IndexPath.row.getter(v29);
  if ((v30 & 0x8000000000000000) != 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v30 >= *(_QWORD *)(v28 + 16))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v31 = v28 + 40 * v30;
  v32 = *(_QWORD *)(v31 + 40);
  v33 = *(_QWORD *)(v31 + 56);
  v34 = *(__int16 *)(v31 + 64);
  sub_28BC70(*(_QWORD *)(v31 + 32), v32, *(_QWORD *)(v31 + 48), v33, *(_WORD *)(v31 + 64));
  swift_bridgeObjectRelease(v28);
  if (v34 < 0)
  {
    swift_bridgeObjectRelease(v32);
    v36 = (void *)objc_opt_self(NSUserDefaults);
    if ((v34 & 0x100) != 0)
      v37 = objc_msgSend(v36, "_applePodcastsFoundationSettingsUserDefaults");
    else
      v37 = objc_msgSend(v36, "standardUserDefaults");
    v38 = v37;
    v39 = objc_msgSend(v41, "isOn");
    v40 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "setBool:forKey:", v39, v40, swift_bridgeObjectRelease(v33).n128_f64[0]);

  }
  else
  {

    swift_bridgeObjectRelease(v32);
    v35 = swift_release(v33);
  }
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v14, v7, v35);
}

Swift::Int __swiftcall DebugSettingsViewController.numberOfSections(in:)(UITableView in)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings, v4, 0, 0);
  return *(_QWORD *)(*(_QWORD *)v2 + 16);
}

Swift::Int __swiftcall DebugSettingsViewController.tableView(_:numberOfRowsInSection:)(UITableView _, Swift::Int numberOfRowsInSection)
{
  uint64_t v2;
  uint64_t v4;
  Swift::Int result;
  _BYTE v6[24];

  v4 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings;
  swift_beginAccess(v4, v6, 0, 0);
  if (numberOfRowsInSection < 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)v4 + 16) > (unint64_t)numberOfRowsInSection)
  {
    return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 40 * numberOfRowsInSection + 64) + 16);
  }
  __break(1u);
  return result;
}

Swift::String_optional __swiftcall DebugSettingsViewController.tableView(_:titleForHeaderInSection:)(UITableView _, Swift::Int titleForHeaderInSection)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  Swift::Int v7;
  uint64_t v8;
  void *v9;
  Swift::String_optional result;
  _BYTE v11[24];

  v4 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings;
  swift_beginAccess(v4, v11, 0, 0);
  if (titleForHeaderInSection < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(_QWORD *)(*(_QWORD *)v4 + 16) <= (unint64_t)titleForHeaderInSection)
  {
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  v7 = *(_QWORD *)v4 + 40 * titleForHeaderInSection;
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(void **)(v7 + 40);
  swift_bridgeObjectRetain(v9);
  v5 = v8;
  v6 = v9;
LABEL_6:
  result.value._object = v6;
  result.value._countAndFlagsBits = v5;
  return result;
}

Swift::String_optional __swiftcall DebugSettingsViewController.tableView(_:titleForFooterInSection:)(UITableView _, Swift::Int titleForFooterInSection)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  Swift::Int v7;
  uint64_t v8;
  void *v9;
  Swift::String_optional result;
  _BYTE v11[24];

  v4 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings;
  swift_beginAccess(v4, v11, 0, 0);
  if (titleForFooterInSection < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(_QWORD *)(*(_QWORD *)v4 + 16) <= (unint64_t)titleForFooterInSection)
  {
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  v7 = *(_QWORD *)v4 + 40 * titleForFooterInSection;
  v8 = *(_QWORD *)(v7 + 48);
  v9 = *(void **)(v7 + 56);
  swift_bridgeObjectRetain(v9);
  v5 = v8;
  v6 = v9;
LABEL_6:
  result.value._object = v6;
  result.value._countAndFlagsBits = v5;
  return result;
}

void DebugSettingsViewController.tableView(_:cellForRowAt:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  NSString v13;
  id v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  _BYTE v22[24];

  v2 = v1;
  v4 = IndexPath.section.getter(a1);
  v5 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings, v22, 0, 0);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v4 >= *(_QWORD *)(*(_QWORD *)v5 + 16))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 40 * v4 + 64);
  v7 = swift_bridgeObjectRetain(v6);
  v8 = IndexPath.row.getter(v7);
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v8 >= *(_QWORD *)(v6 + 16))
  {
LABEL_15:
    __break(1u);
    return;
  }
  v9 = v6 + 40 * v8;
  v10 = *(_QWORD *)(v9 + 40);
  v11 = *(_QWORD *)(v9 + 56);
  v12 = *(__int16 *)(v9 + 64);
  sub_28BC70(*(_QWORD *)(v9 + 32), v10, *(_QWORD *)(v9 + 48), v11, *(_WORD *)(v9 + 64));
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  if (v12 < 0)
  {
    swift_bridgeObjectRelease(v11);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v17);

    if (v18)
      return;
    v19 = objc_allocWithZone((Class)UITableViewCell);
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v19, "initWithStyle:reuseIdentifier:", 0, v20);

    objc_msgSend(v21, "setSelectionStyle:", 0);
    v16 = objc_msgSend(objc_allocWithZone((Class)UISwitch), "init");
    objc_msgSend(v16, "addTarget:action:forControlEvents:", v2, "takeNewBoolValueFrom:", 4096);
    objc_msgSend(v21, "setAccessoryView:", v16);
  }
  else
  {
    swift_release(v11);
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v13);

    if (v14)
      return;
    v15 = objc_allocWithZone((Class)UITableViewCell);
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "initWithStyle:reuseIdentifier:", 0, v16);
  }

}

void DebugSettingsViewController.tableView(_:willDisplay:forRowAt:)(uint64_t a1, void *a2)
{
  sub_28D778(a2);
}

void DebugSettingsViewController.tableView(_:willSelectRowAt:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v4 = v3;
  v7 = IndexPath.section.getter(a1);
  v8 = v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings;
  swift_beginAccess(v8, v19, 0, 0);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v7 >= *(_QWORD *)(*(_QWORD *)v8 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(*(_QWORD *)v8 + 40 * v7 + 64);
  v10 = swift_bridgeObjectRetain(v9);
  v11 = IndexPath.row.getter(v10);
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v11 >= *(_QWORD *)(v9 + 16))
  {
LABEL_12:
    __break(1u);
    return;
  }
  v12 = v9 + 40 * v11;
  v13 = *(_QWORD *)(v12 + 40);
  v14 = *(_QWORD *)(v12 + 56);
  v15 = *(__int16 *)(v12 + 64);
  sub_28BC70(*(_QWORD *)(v12 + 32), v13, *(_QWORD *)(v12 + 48), v14, *(_WORD *)(v12 + 64));
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  if (v15 < 0)
  {
    swift_bridgeObjectRelease(v14);
    v18 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
  else
  {
    swift_release(v14);
    v16 = type metadata accessor for IndexPath(0);
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a3, a2, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a3, 0, 1, v16);
  }
}

void DebugSettingsViewController.tableView(_:didSelectRowAt:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, __n128);
  int v14;
  __n128 v15;
  Class isa;
  _BYTE v17[24];

  v2 = v1;
  v4 = IndexPath.section.getter(a1);
  v5 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings, v17, 0, 0);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 >= *(_QWORD *)(*(_QWORD *)v5 + 16))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 40 * v4 + 64);
  v7 = swift_bridgeObjectRetain(v6);
  v8 = IndexPath.row.getter(v7);
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v8 >= *(_QWORD *)(v6 + 16))
  {
LABEL_11:
    __break(1u);
    return;
  }
  v9 = v6 + 40 * v8;
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 40);
  v13 = *(void (**)(uint64_t, __n128))(v9 + 48);
  v12 = *(_QWORD *)(v9 + 56);
  v14 = *(__int16 *)(v9 + 64);
  sub_28BC70(v10, v11, (uint64_t)v13, v12, *(_WORD *)(v9 + 64));
  swift_bridgeObjectRelease(v6);
  if ((v14 & 0x80000000) == 0)
  {
    v15 = swift_retain(v12);
    v13(v2, v15);
    swift_release(v12);
  }
  sub_28DB60(v10, v11, (uint64_t)v13, v12, v14);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectRowAtIndexPath:animated:", isa, 1);

}

void DebugSettingsViewController.init(style:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.DebugSettingsViewController", 51, "init(style:)", 12, 0);
  __break(1u);
}

void DebugSettingsViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.DebugSettingsViewController", 51, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

void sub_28BC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  swift_bridgeObjectRetain(a2);
  if (a5 < 0)
    swift_bridgeObjectRetain(a4);
  else
    swift_retain(a4);
}

void sub_28BCAC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int v20;
  Swift::Int v21;
  uint64_t *v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  _QWORD *v110;
  Swift::Int v111;
  Swift::Int v112;
  Swift::Int v113;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_28C394(0, v3, 1, a1);
      return;
    }
    goto LABEL_154;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_162:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v111 = v4;
  v108 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      v101 = v11;
      v110 = v8;
      if (v12 < 2)
        goto LABEL_117;
      v102 = *v108;
      while (1)
      {
        v103 = v12 - 2;
        if (v12 < 2)
          goto LABEL_149;
        if (!v102)
          goto LABEL_161;
        v100 = v101;
        v104 = *(_QWORD *)&v101[16 * v103 + 32];
        v105 = *(_QWORD *)&v101[16 * v12 + 24];
        sub_28C460((char *)(v102 + 16 * v104), (char *)(v102 + 16 * *(_QWORD *)&v101[16 * v12 + 16]), v102 + 16 * v105, __dst);
        if (v1)
          goto LABEL_116;
        if (v105 < v104)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0)
          v100 = sub_21E728((uint64_t)v100);
        if (v103 >= *((_QWORD *)v100 + 2))
          goto LABEL_151;
        v106 = &v100[16 * v103 + 32];
        *(_QWORD *)v106 = v104;
        *((_QWORD *)v106 + 1) = v105;
        v107 = *((_QWORD *)v100 + 2);
        if (v12 > v107)
          goto LABEL_152;
        memmove(&v100[16 * v12 + 16], &v100[16 * v12 + 32], 16 * (v107 - v12));
        v101 = v100;
        *((_QWORD *)v100 + 2) = v107 - 1;
        v12 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_117;
      }
    }
    v110 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for String);
    *(_QWORD *)(v7 + 16) = v6;
    v110 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v109 = v10 + 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v112 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    v18 = v17[1];
    if (*v17 == v15 && v18 == v16)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v20 = 0;
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, v15, v16, 1);
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v22 = (uint64_t *)(v109 + 16 * v21);
    do
    {
      v24 = *(v22 - 1);
      v25 = *v22;
      v26 = (_QWORD *)(v10 + 16 * v9);
      v27 = v26[1];
      if (*v26 == v24 && v27 == v25)
      {
        if ((v20 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v20 ^ _stringCompareWithSmolCheck(_:_:expecting:)(*v26, v27, v24, v25, 1)) & 1) != 0)
      {
        goto LABEL_36;
      }
      v22 += 2;
      v23 = v21 + 1;
      v9 = v21;
      v21 = v23;
    }
    while (v23 < v3);
    v21 = v23;
LABEL_36:
    v9 = v21;
    if ((v20 & 1) != 0)
    {
LABEL_37:
      if (v21 < v13)
        goto LABEL_157;
      if (v13 < v21)
      {
        v29 = 16 * v21;
        v30 = 16 * v13;
        v31 = v21;
        v32 = v13;
        do
        {
          if (v32 != --v31)
          {
            if (!v10)
              goto LABEL_160;
            v33 = v10 + v29;
            v34 = *(_QWORD *)(v10 + v30);
            v35 = *(_QWORD *)(v10 + v30 + 8);
            *(_OWORD *)(v10 + v30) = *(_OWORD *)(v10 + v29 - 16);
            *(_QWORD *)(v33 - 16) = v34;
            *(_QWORD *)(v33 - 8) = v35;
          }
          ++v32;
          v29 -= 16;
          v30 += 16;
        }
        while (v32 < v31);
      }
LABEL_45:
      v9 = v21;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_153;
      if (v9 - v13 < v111)
      {
        if (__OFADD__(v13, v111))
          goto LABEL_155;
        if (v13 + v111 >= v3)
          v36 = v3;
        else
          v36 = v13 + v111;
        if (v36 < v13)
          goto LABEL_156;
        if (v9 != v36)
        {
          v37 = (_QWORD *)(v10 + 16 * v9);
          do
          {
            v38 = (uint64_t *)(v10 + 16 * v9);
            v39 = *v38;
            v40 = v38[1];
            v41 = v13;
            v42 = v37;
            do
            {
              v43 = *(v42 - 2);
              v44 = *(v42 - 1);
              v45 = v43 == v39 && v44 == v40;
              if (v45 || (_stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v39, v40, 1) & 1) == 0)
                break;
              if (!v10)
                goto LABEL_158;
              v39 = *v42;
              v40 = v42[1];
              *(_OWORD *)v42 = *((_OWORD *)v42 - 1);
              *(v42 - 1) = v40;
              *(v42 - 2) = v39;
              v42 -= 2;
              ++v41;
            }
            while (v9 != v41);
            ++v9;
            v37 += 2;
          }
          while (v9 != v36);
          v9 = v36;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_21E2F8(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v47 = *((_QWORD *)v11 + 2);
    v46 = *((_QWORD *)v11 + 3);
    v12 = v47 + 1;
    if (v47 >= v46 >> 1)
      v11 = sub_21E2F8((char *)(v46 > 1), v47 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v48 = v11 + 32;
    v49 = &v11[16 * v47 + 32];
    *(_QWORD *)v49 = v13;
    *((_QWORD *)v49 + 1) = v9;
    if (v47)
      break;
    v12 = 1;
LABEL_15:
    v3 = v112;
    if (v9 >= v112)
    {
      v8 = v110;
      goto LABEL_120;
    }
  }
  v113 = v9;
  while (1)
  {
    v50 = v12 - 1;
    if (v12 >= 4)
    {
      v55 = &v48[16 * v12];
      v56 = *((_QWORD *)v55 - 8);
      v57 = *((_QWORD *)v55 - 7);
      v61 = __OFSUB__(v57, v56);
      v58 = v57 - v56;
      if (v61)
        goto LABEL_137;
      v60 = *((_QWORD *)v55 - 6);
      v59 = *((_QWORD *)v55 - 5);
      v61 = __OFSUB__(v59, v60);
      v53 = v59 - v60;
      v54 = v61;
      if (v61)
        goto LABEL_138;
      v62 = v12 - 2;
      v63 = &v48[16 * v12 - 32];
      v65 = *(_QWORD *)v63;
      v64 = *((_QWORD *)v63 + 1);
      v61 = __OFSUB__(v64, v65);
      v66 = v64 - v65;
      if (v61)
        goto LABEL_140;
      v61 = __OFADD__(v53, v66);
      v67 = v53 + v66;
      if (v61)
        goto LABEL_143;
      if (v67 >= v58)
      {
        v85 = &v48[16 * v50];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v61 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v61)
          goto LABEL_147;
        v78 = v53 < v88;
        goto LABEL_105;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v79 = *((_QWORD *)v11 + 4);
        v80 = *((_QWORD *)v11 + 5);
        v61 = __OFSUB__(v80, v79);
        v72 = v80 - v79;
        v73 = v61;
        goto LABEL_99;
      }
      v52 = *((_QWORD *)v11 + 4);
      v51 = *((_QWORD *)v11 + 5);
      v61 = __OFSUB__(v51, v52);
      v53 = v51 - v52;
      v54 = v61;
    }
    if ((v54 & 1) != 0)
      goto LABEL_139;
    v62 = v12 - 2;
    v68 = &v48[16 * v12 - 32];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v71 = __OFSUB__(v69, v70);
    v72 = v69 - v70;
    v73 = v71;
    if (v71)
      goto LABEL_142;
    v74 = &v48[16 * v50];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v61 = __OFSUB__(v75, v76);
    v77 = v75 - v76;
    if (v61)
      goto LABEL_145;
    if (__OFADD__(v72, v77))
      goto LABEL_146;
    if (v72 + v77 >= v53)
    {
      v78 = v53 < v77;
LABEL_105:
      if (v78)
        v50 = v62;
      goto LABEL_107;
    }
LABEL_99:
    if ((v73 & 1) != 0)
      goto LABEL_141;
    v81 = &v48[16 * v50];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v61 = __OFSUB__(v82, v83);
    v84 = v82 - v83;
    if (v61)
      goto LABEL_144;
    if (v84 < v72)
      goto LABEL_15;
LABEL_107:
    v89 = v50 - 1;
    if (v50 - 1 >= v12)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    v90 = v10;
    if (!v10)
      goto LABEL_159;
    v91 = v11;
    v92 = &v48[16 * v89];
    v93 = *(_QWORD *)v92;
    v94 = v48;
    v95 = v50;
    v96 = &v48[16 * v50];
    v97 = *((_QWORD *)v96 + 1);
    v98 = v90;
    sub_28C460((char *)(v90 + 16 * *(_QWORD *)v92), (char *)(v90 + 16 * *(_QWORD *)v96), v90 + 16 * v97, __dst);
    if (v1)
      break;
    if (v97 < v93)
      goto LABEL_134;
    if (v95 > *((_QWORD *)v91 + 2))
      goto LABEL_135;
    *(_QWORD *)v92 = v93;
    *(_QWORD *)&v94[16 * v89 + 8] = v97;
    v99 = *((_QWORD *)v91 + 2);
    if (v95 >= v99)
      goto LABEL_136;
    v11 = v91;
    v12 = v99 - 1;
    memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
    v48 = v94;
    *((_QWORD *)v91 + 2) = v99 - 1;
    v10 = v98;
    v9 = v113;
    if (v99 <= 2)
      goto LABEL_15;
  }
  v100 = v91;
LABEL_116:
  v101 = v100;
LABEL_117:
  swift_bridgeObjectRelease(v101);
  v110[2] = 0;
  swift_bridgeObjectRelease(v110);
}

uint64_t sub_28C394(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    v10 = *v9;
    v11 = v9[1];
    v12 = v6;
    v13 = (_QWORD *)v8;
    while (1)
    {
      result = *(v13 - 2);
      v14 = *(v13 - 1);
      v15 = result == v10 && v14 == v11;
      if (v15 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v14, v10, v11, 1), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v10 = *v13;
      v11 = v13[1];
      *(_OWORD *)v13 = *((_OWORD *)v13 - 1);
      *(v13 - 1) = v11;
      *(v13 - 2) = v10;
      v13 -= 2;
      if (v4 == ++v12)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_28C460(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v31 = __src;
  v30 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v19 = &v4[16 * v13];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v20 = (char *)(a3 - 16);
        v21 = v6;
        while (1)
        {
          v22 = v20 + 16;
          v23 = *((_QWORD *)v19 - 2);
          v24 = *((_QWORD *)v19 - 1);
          v25 = *((_QWORD *)v21 - 2);
          v26 = *((_QWORD *)v21 - 1);
          v21 -= 16;
          v27 = v25 == v23 && v26 == v24;
          if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, v23, v24, 1) & 1) == 0)
          {
            v29 = v19 - 16;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
              *(_OWORD *)v20 = *((_OWORD *)v19 - 1);
            v21 = v6;
            v19 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
              *(_OWORD *)v20 = *(_OWORD *)v21;
            v31 = v21;
            if (v21 <= v7)
              goto LABEL_50;
          }
          v20 -= 16;
          v6 = v21;
          if (v19 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *((_QWORD *)v6 + 1);
        v16 = *((_QWORD *)v4 + 1);
        v17 = *(_QWORD *)v4 == *(_QWORD *)v6 && v16 == v15;
        if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v4, v16, *(_QWORD *)v6, v15, 1) & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v30 = v4;
          v18 = v6;
        }
        else
        {
          v18 = v6 + 16;
          if (v7 < v6 || v7 >= v18 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v18;
      }
      while ((unint64_t)v18 < a3);
      v31 = v7;
    }
LABEL_50:
    sub_21E3F0((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

_QWORD *sub_28C6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __n128 v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  Class isa;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  int64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  int64_t v68;
  _QWORD *v69;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF9A0);
  v1 = swift_allocObject(v0, 112, 7);
  *(_OWORD *)(v1 + 16) = xmmword_2EFA20;
  if (qword_3CFEC8 != -1)
    swift_once(&qword_3CFEC8, sub_2D7038);
  v2 = type metadata accessor for NSUserDefaults.Keys(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_3E1D48);
  v3 = NSUserDefaults.Keys.rawValue.getter();
  *(_QWORD *)(v1 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v1 + 40) = 0x8000000000318250;
  *(_QWORD *)(v1 + 48) = v3;
  *(_QWORD *)(v1 + 56) = v4;
  *(_WORD *)(v1 + 64) = 0x8000;
  if (qword_3CFED8 != -1)
    swift_once(&qword_3CFED8, sub_2D7120);
  __swift_project_value_buffer(v2, (uint64_t)qword_3E1D78);
  v5 = NSUserDefaults.Keys.rawValue.getter();
  *(_QWORD *)(v1 + 72) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 80) = 0x8000000000318270;
  *(_QWORD *)(v1 + 88) = v5;
  *(_QWORD *)(v1 + 96) = v6;
  *(_WORD *)(v1 + 104) = 0x8000;
  v7 = sub_20EA98(0, 1, 1, _swiftEmptyArrayStorage);
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
    v7 = sub_20EA98((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
  v7[2] = v10 + 1;
  v11 = &v7[5 * v10];
  v11[4] = 0x73676E6974746553;
  v11[5] = 0xE800000000000000;
  v11[6] = 0;
  v11[7] = 0;
  v11[8] = v1;
  v12 = (id)ASKBuildTypeGetCurrent(v8);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF990);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_2EFA20;
  v15 = (void *)ASKBuildTypeDebug;
  v16 = (void *)ASKBuildTypeInternal;
  *(_QWORD *)(v14 + 32) = ASKBuildTypeDebug;
  *(_QWORD *)(v14 + 40) = v16;
  type metadata accessor for BuildType(0);
  v17 = v15;
  v18 = v16;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v20 = swift_bridgeObjectRelease(v14);
  LODWORD(v14) = ASKBuildTypeIsAnyOf(v12, isa, v20);

  if ((_DWORD)v14)
  {
    v21 = swift_allocObject(v0, 72, 7);
    *(_OWORD *)(v21 + 16) = xmmword_2F03C0;
    sub_E710(0, &qword_3DF9A8, NSUserDefaults_ptr);
    v22 = static NSUserDefaults.debugTranscriptCacheEnabled.getter();
    *(_QWORD *)(v21 + 32) = 0xD000000000000021;
    *(_QWORD *)(v21 + 40) = 0x8000000000318290;
    *(_QWORD *)(v21 + 48) = v22;
    *(_QWORD *)(v21 + 56) = v23;
    *(_WORD *)(v21 + 64) = -32511;
    v25 = v7[2];
    v24 = v7[3];
    if (v25 >= v24 >> 1)
      v7 = sub_20EA98((_QWORD *)(v24 > 1), v25 + 1, 1, v7);
    v7[2] = v25 + 1;
    v26 = &v7[5 * v25];
    v26[4] = 0x697263736E617254;
    v26[5] = 0xEB00000000737470;
    v26[6] = 0;
    v26[7] = 0;
    v26[8] = v21;
    v27 = swift_allocObject(v0, 112, 7);
    *(_OWORD *)(v27 + 16) = xmmword_2EFA20;
    if (qword_3CFEE0 != -1)
      swift_once(&qword_3CFEE0, sub_2D7160);
    __swift_project_value_buffer(v2, (uint64_t)qword_3E1D90);
    v28 = NSUserDefaults.Keys.rawValue.getter();
    *(_QWORD *)(v27 + 32) = 0xD000000000000012;
    *(_QWORD *)(v27 + 40) = 0x80000000003182C0;
    *(_QWORD *)(v27 + 48) = v28;
    *(_QWORD *)(v27 + 56) = v29;
    *(_WORD *)(v27 + 64) = 0x8000;
    if (qword_3CFEE8 != -1)
      swift_once(&qword_3CFEE8, sub_2D71A0);
    __swift_project_value_buffer(v2, (uint64_t)qword_3E1DA8);
    v30 = NSUserDefaults.Keys.rawValue.getter();
    *(_OWORD *)(v27 + 72) = xmmword_304180;
    *(_QWORD *)(v27 + 88) = v30;
    *(_QWORD *)(v27 + 96) = v31;
    *(_WORD *)(v27 + 104) = 0x8000;
    v33 = v7[2];
    v32 = v7[3];
    v34 = v32 >> 1;
    v35 = v33 + 1;
    if (v32 >> 1 <= v33)
    {
      v7 = sub_20EA98((_QWORD *)(v32 > 1), v33 + 1, 1, v7);
      v32 = v7[3];
      v34 = v32 >> 1;
    }
    v7[2] = v35;
    v36 = &v7[5 * v33];
    v36[4] = 1869440324;
    v36[5] = 0xE400000000000000;
    v36[6] = 0;
    v36[7] = 0;
    v36[8] = v27;
    if (v34 <= v35)
      v7 = sub_20EA98((_QWORD *)(v32 > 1), v33 + 2, 1, v7);
    v7[2] = v33 + 2;
    v37 = (char *)&v7[5 * v35];
    strcpy(v37 + 32, "Internal Tests");
    v37[47] = -18;
    *((_QWORD *)v37 + 6) = 0;
    *((_QWORD *)v37 + 7) = 0;
    *((_QWORD *)v37 + 8) = &off_379778;
    v38 = swift_allocObject(v0, 72, 7);
    *(_OWORD *)(v38 + 16) = xmmword_2F03C0;
    if (qword_3CFEF0 != -1)
      swift_once(&qword_3CFEF0, sub_2D71DC);
    __swift_project_value_buffer(v2, (uint64_t)qword_3E1DC0);
    v39 = NSUserDefaults.Keys.rawValue.getter();
    *(_QWORD *)(v38 + 32) = 0xD000000000000018;
    *(_QWORD *)(v38 + 40) = 0x80000000003182E0;
    *(_QWORD *)(v38 + 48) = v39;
    *(_QWORD *)(v38 + 56) = v40;
    *(_WORD *)(v38 + 64) = 0x8000;
    v42 = v7[2];
    v41 = v7[3];
    if (v42 >= v41 >> 1)
      v7 = sub_20EA98((_QWORD *)(v41 > 1), v42 + 1, 1, v7);
    v7[2] = v42 + 1;
    v43 = &v7[5 * v42];
    v43[4] = 0x6E69676775626544;
    v43[5] = 0xE900000000000067;
    v43[6] = 0;
    v43[7] = 0;
    v43[8] = v38;
    v44 = swift_allocObject(v0, 72, 7);
    *(_OWORD *)(v44 + 16) = xmmword_2F03C0;
    if (qword_3CFED0 != -1)
      swift_once(&qword_3CFED0, sub_2D7078);
    __swift_project_value_buffer(v2, (uint64_t)qword_3E1D60);
    v45 = NSUserDefaults.Keys.rawValue.getter();
    *(_QWORD *)(v44 + 32) = 0xD000000000000021;
    *(_QWORD *)(v44 + 40) = 0x8000000000318300;
    *(_QWORD *)(v44 + 48) = v45;
    *(_QWORD *)(v44 + 56) = v46;
    *(_WORD *)(v44 + 64) = 0x8000;
    v48 = v7[2];
    v47 = v7[3];
    v49 = v47 >> 1;
    v50 = v48 + 1;
    if (v47 >> 1 <= v48)
    {
      v7 = sub_20EA98((_QWORD *)(v47 > 1), v48 + 1, 1, v7);
      v47 = v7[3];
      v49 = v47 >> 1;
    }
    v7[2] = v50;
    v51 = &v7[5 * v48];
    v51[4] = 0x73726F727245;
    v51[5] = 0xE600000000000000;
    v51[6] = 0;
    v51[7] = 0;
    v51[8] = v44;
    v52 = v48 + 2;
    if (v49 <= v50)
      v7 = sub_20EA98((_QWORD *)(v47 > 1), v52, 1, v7);
    v7[2] = v52;
    v53 = &v7[5 * v50];
    v53[4] = 0xD00000000000001BLL;
    v53[5] = 0x8000000000318330;
    v53[6] = 0;
    v53[7] = 0;
    v53[8] = &off_379810;
    v54 = swift_allocObject(v0, 192, 7);
    *(_OWORD *)(v54 + 16) = xmmword_2F4200;
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMTShouldPromptStorageCleanupKey);
    *(_QWORD *)(v54 + 32) = 0xD000000000000016;
    *(_QWORD *)(v54 + 40) = 0x8000000000318350;
    *(_QWORD *)(v54 + 48) = v55;
    *(_QWORD *)(v54 + 56) = v56;
    *(_WORD *)(v54 + 64) = -32512;
    *(_QWORD *)(v54 + 72) = 0xD000000000000021;
    *(_QWORD *)(v54 + 80) = 0x8000000000318370;
    *(_QWORD *)(v54 + 88) = UINavigationBar.overrideBackButtonStyle.setter;
    *(_QWORD *)(v54 + 96) = 0;
    *(_WORD *)(v54 + 104) = 1;
    *(_QWORD *)(v54 + 112) = 0xD000000000000021;
    *(_QWORD *)(v54 + 120) = 0x80000000003183A0;
    *(_QWORD *)(v54 + 128) = UINavigationBar.overrideBackButtonStyle.setter;
    *(_QWORD *)(v54 + 136) = 0;
    *(_WORD *)(v54 + 144) = 1;
    *(_QWORD *)(v54 + 152) = 0xD000000000000012;
    *(_QWORD *)(v54 + 160) = 0x80000000003183D0;
    *(_QWORD *)(v54 + 168) = sub_289740;
    *(_QWORD *)(v54 + 176) = 0;
    *(_WORD *)(v54 + 184) = 1;
    v58 = v7[2];
    v57 = v7[3];
    v59 = v57 >> 1;
    v60 = v58 + 1;
    if (v57 >> 1 <= v58)
    {
      v7 = sub_20EA98((_QWORD *)(v57 > 1), v58 + 1, 1, v7);
      v57 = v7[3];
      v59 = v57 >> 1;
    }
    v7[2] = v60;
    v61 = &v7[5 * v58];
    v61[4] = 0x20656761726F7453;
    v61[5] = 0xEB00000000706954;
    v61[6] = 0xD0000000000002B8;
    v61[7] = 0x80000000003183F0;
    v61[8] = v54;
    if (v59 <= v60)
      v7 = sub_20EA98((_QWORD *)(v57 > 1), v58 + 2, 1, v7);
    v7[2] = v58 + 2;
    v62 = (char *)&v7[5 * v60];
    strcpy(v62 + 32, "UI Debugging");
    v62[45] = 0;
    *((_WORD *)v62 + 23) = -5120;
    *((_QWORD *)v62 + 6) = 0;
    *((_QWORD *)v62 + 7) = 0;
    *((_QWORD *)v62 + 8) = &off_3798D0;
    v64 = v7[2];
    v63 = v7[3];
    v65 = v63 >> 1;
    v66 = v64 + 1;
    if (v63 >> 1 <= v64)
    {
      v7 = sub_20EA98((_QWORD *)(v63 > 1), v64 + 1, 1, v7);
      v63 = v7[3];
      v65 = v63 >> 1;
    }
    v7[2] = v66;
    v67 = &v7[5 * v64];
    v67[4] = 0x7365727574616546;
    v67[5] = 0xE800000000000000;
    v67[6] = 0;
    v67[7] = 0;
    v67[8] = &off_379AA8;
    v68 = v64 + 2;
    if (v65 <= v66)
      v7 = sub_20EA98((_QWORD *)(v63 > 1), v68, 1, v7);
    v7[2] = v68;
    v69 = &v7[5 * v66];
    v69[4] = 1280136276;
    v69[5] = 0xE400000000000000;
    v69[6] = 0;
    v69[7] = 0;
    v69[8] = &off_379AF0;
  }
  return v7;
}

_QWORD *sub_28D04C(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v15[2];
  _QWORD *v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_F33E4(0, v1, 0);
    v4 = (_QWORD *)(a1 + 32);
    do
    {
      v5 = v4[3];
      v6 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v5);
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
      v9 = v8;
      sub_1D5D4((uint64_t)v4, (uint64_t)v15);
      v10 = swift_allocObject(&unk_38F818, 56, 7);
      sub_1B738(v15, v10 + 16);
      v2 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      {
        sub_F33E4(0, v2[2] + 1, 1);
        v2 = v16;
      }
      v12 = v2[2];
      v11 = v2[3];
      if (v12 >= v11 >> 1)
      {
        sub_F33E4(v11 > 1, v12 + 1, 1);
        v2 = v16;
      }
      v2[2] = v12 + 1;
      v13 = &v2[5 * v12];
      v13[4] = v7;
      v13[5] = v9;
      v13[6] = sub_28DE88;
      v13[7] = v10;
      *((_WORD *)v13 + 32) = 0;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_28D1B0()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  id v3;
  unsigned __int8 v4;
  void *v5;
  id v6;
  Class isa;
  id v8;
  unsigned __int8 v9;
  void *v10;
  id v11;
  Class v12;
  id v13;
  unsigned __int8 v14;
  void *v15;
  id v16;
  Class v17;

  v0 = type metadata accessor for DebugNotificationCenter();
  inited = swift_initStaticObject(v0, &unk_3CFFA8);
  v2 = (void *)objc_opt_self(NSUserDefaults);
  v3 = objc_msgSend(v2, "standardUserDefaults");
  v4 = NSUserDefaults.debugNotificationsEnabled.getter();

  if ((v4 & 1) != 0)
  {
    sub_22CCE8();
    v5 = *(void **)(inited + 24);
    if (v5)
    {
      sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
      v6 = v5;
      isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.47843, 1.0, 0.5).super.isa;
      sub_22C548(0xD000000000000034, 0x80000000003186D0, (uint64_t)isa, 0, 0, -1.0);

    }
  }
  v8 = objc_msgSend(v2, "standardUserDefaults");
  v9 = NSUserDefaults.debugNotificationsEnabled.getter();

  if ((v9 & 1) != 0)
  {
    sub_22CCE8();
    v10 = *(void **)(inited + 24);
    if (v10)
    {
      sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
      v11 = v10;
      v12 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.58431, 0.0, 0.5).super.isa;
      sub_22C548(0xD000000000000030, 0x8000000000318710, (uint64_t)v12, 0, 0, -1.0);

    }
  }
  v13 = objc_msgSend(v2, "standardUserDefaults");
  v14 = NSUserDefaults.debugNotificationsEnabled.getter();

  if ((v14 & 1) != 0)
  {
    sub_22CCE8();
    v15 = *(void **)(inited + 24);
    if (v15)
    {
      sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
      v16 = v15;
      v17 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.23137, 0.18824, 0.5).super.isa;
      sub_22C548(0xD00000000000002ELL, 0x8000000000318750, (uint64_t)v17, 0, 0, -1.0);

    }
  }
}

double sub_28D44C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  id v6;
  Swift::String v7;
  unint64_t v8;
  NSString v9;
  double result;
  char v11;
  uint64_t v12;
  unint64_t v13;

  v0 = static UberStyle.allCases.getter();
  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    v3 = (void *)objc_opt_self(NSUserDefaults);
    v4 = 0;
    do
    {
      v5 = *(_BYTE *)(v1 + v4++ + 32);
      v6 = objc_msgSend(v3, "standardUserDefaults");
      v12 = 0;
      v13 = 0xE000000000000000;
      v11 = v5;
      _print_unlocked<A, B>(_:_:)(&v11, &v12, &type metadata for UberStyle, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v7._countAndFlagsBits = 0x61426769666E6F43;
      v7._object = (void *)0xED000079654B6573;
      String.append(_:)(v7);
      v8 = v13;
      v9 = String._bridgeToObjectiveC()();
      objc_msgSend(v6, "removeObjectForKey:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

    }
    while (v2 != v4);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  }
  return result;
}

uint64_t sub_28D5A0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD aBlock[5];
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_38F7C8, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_28DE44;
  v22 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_67;
  v13 = _Block_copy(aBlock);
  v14 = v22;
  v15 = v1;
  v16 = swift_release(v14);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_CF9B0();
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v19 = sub_CF9F8();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_28D778(void *a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  __n128 v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  double v11;
  id v12;
  void *v13;
  NSString v14;
  double v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  NSString v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  char **v26;
  NSString v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  id v31;
  id v32;
  _OWORD v33[2];
  _BYTE v34[24];
  uint64_t v35;
  _BYTE v36[24];

  v3 = IndexPath.section.getter(a1);
  v4 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_settings, v36, 0, 0);
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v3 >= *(_QWORD *)(*(_QWORD *)v4 + 16))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v3 = *(_QWORD *)(*(_QWORD *)v4 + 40 * v3 + 64);
  v5 = swift_bridgeObjectRetain(v3);
  v6 = IndexPath.row.getter(v5);
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v6 >= *(_QWORD *)(v3 + 16))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v7 = v3 + 40 * v6;
  v8 = *(_QWORD *)(v7 + 40);
  v9 = *(_QWORD *)(v7 + 56);
  v10 = *(__int16 *)(v7 + 64);
  sub_28BC70(*(_QWORD *)(v7 + 32), v8, *(_QWORD *)(v7 + 48), v9, *(_WORD *)(v7 + 64));
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v3).n128_u64[0];
  if (v10 < 0)
  {
    v16 = objc_msgSend(a1, "accessoryView", v11);
    if (!v16)
    {
      __break(1u);
      return;
    }
    v3 = (unint64_t)v16;
    v17 = objc_opt_self(UISwitch);
    v18 = (void *)swift_dynamicCastObjCClassUnconditional(v3, v17, 0, 0, 0);
    v19 = objc_msgSend(a1, "textLabel");
    if (v19)
    {
      v20 = v19;
      v21 = String._bridgeToObjectiveC()();
      objc_msgSend(v20, "setText:", v21, swift_bridgeObjectRelease(v8).n128_f64[0]);

    }
    else
    {
      swift_bridgeObjectRelease(v8);
    }
    v25 = (void *)objc_opt_self(NSUserDefaults);
    v26 = &selRef_standardUserDefaults;
    if ((v10 & 0x100) != 0)
      v26 = &selRef__applePodcastsFoundationSettingsUserDefaults;
    v24 = objc_msgSend(v25, *v26);
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v24, "objectForKey:", v27, swift_bridgeObjectRelease(v9).n128_f64[0]);

    if (v28)
    {
      _bridgeAnyObjectToAny(_:)(v33, v28, v29);
      swift_unknownObjectRelease(v28);
    }
    else
    {
      memset(v33, 0, sizeof(v33));
    }
    sub_56AF8((uint64_t)v33, (uint64_t)v34);
    if (v35)
    {
      v30 = sub_E710(0, (unint64_t *)&qword_3D5AF8, NSNumber_ptr);
      if ((swift_dynamicCast(&v32, v34, (char *)&type metadata for Any + 8, v30, 6) & 1) != 0)
      {
        v31 = v32;
        objc_msgSend(v18, "setOn:animated:", objc_msgSend(v32, "BOOLValue"), 1);

        v3 = (unint64_t)v31;
        goto LABEL_29;
      }
    }
    else
    {
      sub_D1D4((uint64_t)v34, &qword_3D1A70);
    }
    objc_msgSend(v18, "setOn:animated:", v10 & 1, 1);
    goto LABEL_29;
  }
  v12 = objc_msgSend(a1, "textLabel", swift_release(v9).n128_f64[0]);
  if (v12)
  {
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setText:", v14, swift_bridgeObjectRelease(v8).n128_f64[0]);

  }
  else
  {
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v8).n128_u64[0];
  }
  v22 = objc_msgSend(a1, "textLabel", v15);
  if (v22)
  {
    v3 = (unint64_t)v22;
    if ((v10 & 1) == 0)
    {
      v23 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
LABEL_17:
      v24 = v23;
      objc_msgSend((id)v3, "setTextColor:", v23);
LABEL_29:

      return;
    }
    if (qword_3CEFE8 == -1)
    {
LABEL_16:
      v23 = (id)qword_3D0890;
      goto LABEL_17;
    }
LABEL_35:
    swift_once(&qword_3CEFE8, sub_DF80);
    goto LABEL_16;
  }
}

double sub_28DB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  double result;

  swift_bridgeObjectRelease(a2);
  if (a5 < 0)
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  else
    swift_release(a4);
  return result;
}

uint64_t sub_28DB9C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider;
  swift_beginAccess(v3, v6, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t type metadata accessor for DebugSettingsViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews27DebugSettingsViewController);
}

uint64_t method lookup function for DebugSettingsViewController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DebugSettingsViewController);
}

double destroy for DebugSettingsViewController.Section(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[4]).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for DebugSettingsViewController.Section(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for DebugSettingsViewController.Section(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for DebugSettingsViewController.Section(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(a1[3]);
  v6 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugSettingsViewController.Section(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugSettingsViewController.Section(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugSettingsViewController.Section()
{
  return &type metadata for DebugSettingsViewController.Section;
}

uint64_t sub_28DE20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_28DE44()
{
  uint64_t v0;

  sub_28AB04(*(void **)(v0 + 16));
}

double block_copy_helper_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_67(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_28DE64()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_28DE88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

void sub_28DECC()
{
  uint64_t v0;

  sub_288E94(v0);
}

void sub_28DED4()
{
  uint64_t v0;

  sub_288F94(v0);
}

uint64_t sub_28DEDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_28DF08()
{
  uint64_t v0;

  sub_28909C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_28DF10()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_28DF34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_28DF60()
{
  uint64_t v0;

  sub_289214(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double destroy for DebugSettingsViewController.Setting(uint64_t a1)
{
  return sub_28DB60(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_WORD *)(a1 + 32));
}

uint64_t initializeWithCopy for DebugSettingsViewController.Setting(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_WORD *)(a2 + 32);
  sub_28BC70(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for DebugSettingsViewController.Setting(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_WORD *)(a2 + 32);
  sub_28BC70(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_WORD *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v7;
  sub_28DB60(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DebugSettingsViewController.Setting(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int16 v9;

  v3 = *(_WORD *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_WORD *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v3;
  sub_28DB60(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugSettingsViewController.Setting(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFF && *(_BYTE *)(a1 + 34))
    return (*(_DWORD *)a1 + 0x3FFF);
  v3 = (*(_WORD *)(a1 + 32) & 0xFE | (*(unsigned __int16 *)(a1 + 32) >> 15) | (*(unsigned __int16 *)(a1 + 32) >> 1) & 0x3F00) ^ 0x3FFF;
  if (v3 >= 0x3FFE)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DebugSettingsViewController.Setting(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3;

  if (a2 > 0x3FFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x3FFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 1) & 0x1FFF) - (a2 << 13);
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_WORD *)(result + 32) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t sub_28E184(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 32) >> 15;
}

uint64_t sub_28E190(uint64_t result)
{
  *(_WORD *)(result + 32) &= ~0x8000u;
  return result;
}

uint64_t sub_28E1A0(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 32) = *(_WORD *)(result + 32) & 0x101 | (a2 << 15);
  return result;
}

ValueMetadata *type metadata accessor for DebugSettingsViewController.Setting()
{
  return &type metadata for DebugSettingsViewController.Setting;
}

uint64_t storeEnumTagSinglePayload for DebugSettingsViewController.UserDefaultsSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_28E210 + 4 * byte_304195[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_28E244 + 4 * byte_304190[v4]))();
}

uint64_t sub_28E244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_28E24C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x28E254);
  return result;
}

uint64_t sub_28E260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x28E268);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_28E26C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_28E274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugSettingsViewController.UserDefaultsSource()
{
  return &type metadata for DebugSettingsViewController.UserDefaultsSource;
}

unint64_t sub_28E294()
{
  unint64_t result;

  result = qword_3DF9C0;
  if (!qword_3DF9C0)
  {
    result = swift_getWitnessTable(&unk_3042B4, &type metadata for DebugSettingsViewController.UserDefaultsSource);
    atomic_store(result, (unint64_t *)&qword_3DF9C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultListChevronView()
{
  return &type metadata for SearchResultListChevronView;
}

ValueMetadata *type metadata accessor for SearchResultContextMenuButton()
{
  return &type metadata for SearchResultContextMenuButton;
}

uint64_t sub_28E310(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_3341A8, 1);
}

uint64_t sub_28E320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double *v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v48 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC0);
  __chkstk_darwin(v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Artwork(0);
  v47 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *(_QWORD *)(a1 + 16);
  v15 = v44;
  v17 = sub_89A0(&qword_3D0E68, v16, (uint64_t)&protocol conformance descriptor for Artwork);
  v42 = *(_QWORD *)(a1 + 24);
  v43 = v17;
  v49 = v12;
  v50 = v15;
  v51 = v17;
  v52 = v42;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v49, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 0);
  v46 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v41 - v22;
  v24 = v45;
  sub_D184(v45, (uint64_t)v11, &qword_3D0A58);
  v25 = (double *)(v24 + *(int *)(a1 + 36));
  v26 = *v25;
  v27 = v25[1];
  v28 = type metadata accessor for CropCode(0);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 1, 1, v28);
  v30 = static Alignment.top.getter(v29);
  v32 = Artwork.init(artwork:fittingImageSize:isResizable:alignment:cropCodeOverride:contentMode:)(v11, 0, v30, v31, v8, 1, v26, v27);
  v33 = v24 + *(int *)(a1 + 40);
  static ArtworkShadow.default.getter(v32);
  v34 = type metadata accessor for ArtworkShadow(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v5, 0, 1, v34);
  v35 = v33;
  v37 = v43;
  v36 = v44;
  v38 = v42;
  View.artworkStyle<A>(shape:shadow:)(v35, v5, v12, v44, v43, v42);
  sub_D1D4((uint64_t)v5, &qword_3D0EC0);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v12);
  v49 = v12;
  v50 = v36;
  v51 = v37;
  v52 = v38;
  swift_getOpaqueTypeConformance2(&v49, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
  sub_1ECBD0((uint64_t)v20, OpaqueTypeMetadata2, (uint64_t)v23);
  v39 = *(void (**)(char *, uint64_t))(v46 + 8);
  v39(v20, OpaqueTypeMetadata2);
  sub_1E82A0((uint64_t)v23, OpaqueTypeMetadata2, v48);
  return ((uint64_t (*)(char *, uint64_t))v39)(v23, OpaqueTypeMetadata2);
}

int64x2_t sub_28E658()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4051000000000000uLL);
  xmmword_3DF9D0 = (__int128)result;
  return result;
}

uint64_t sub_28E670@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t result;

  v2 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  v3 = static Font.subheadline.getter();
  v4 = Font.bold()();
  swift_release(v3);
  KeyPath = swift_getKeyPath(&unk_3043F0);
  v6 = static Color.secondary.getter();
  result = swift_getKeyPath(&unk_304420);
  *a1 = v2;
  a1[1] = KeyPath;
  a1[2] = v4;
  a1[3] = result;
  a1[4] = v6;
  return result;
}

uint64_t sub_28E70C(uint64_t a1, uint64_t a2, char a3)
{
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];
  __int128 v13;
  __int128 v14;
  uint64_t (*v15)@<X0>(uint64_t@<X8>);
  uint64_t v16;

  v5 = a3 & 1;
  swift_retain(a2);
  v6 = sub_14A78(a2, v5);
  swift_release(a2);
  v12[3] = &type metadata for PodcastsContextMenuProvider;
  v12[4] = &off_3857D0;
  v7 = (_QWORD *)swift_allocObject(&unk_38FB28, 64, 7);
  v12[0] = v7;
  v7[6] = type metadata accessor for LegacyLockup(0);
  v7[7] = sub_89A0(&qword_3DF9E0, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
  v7[2] = v6;
  v7[3] = a1;
  v13 = 0u;
  v14 = 0u;
  v15 = sub_28E878;
  v16 = 0;
  v8 = swift_allocObject(&unk_38FB50, 33, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_BYTE *)(v8 + 32) = v5;
  swift_retain_n(a1, 2);
  swift_retain(a2);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF9E8);
  v10 = sub_10EDC(&qword_3DF9F0, &qword_3DF9E8, (uint64_t)&protocol conformance descriptor for ContextMenuOverlay<A>);
  View.onTapGesture(count:perform:)(1, sub_28EE40, v8, v9, v10);
  swift_release(v8);
  return sub_D1D4((uint64_t)v12, &qword_3DF9E8);
}

uint64_t sub_28E878@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  __chkstk_darwin(v21);
  v2 = (uint64_t *)((char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for Image.Scale(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFA00);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = Image.init(systemName:)(0x73697370696C6C65, 0xE800000000000000);
  v11 = static Font.subheadline.getter(v10);
  v12 = Font.bold()(v11);
  swift_release(v11);
  KeyPath = swift_getKeyPath(&unk_3043F0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Image.Scale.medium(_:), v3);
  v14 = swift_getKeyPath(&unk_304450);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v2 + *(int *)(v21 + 28), v6, v3);
  *v2 = v14;
  sub_D184((uint64_t)v2, (uint64_t)v9 + *(int *)(v7 + 36), &qword_3D2620);
  *v9 = v10;
  v9[1] = KeyPath;
  v9[2] = v12;
  swift_retain(v10);
  swift_retain(KeyPath);
  swift_retain(v12);
  sub_D1D4((uint64_t)v2, &qword_3D2620);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release(v12);
  swift_release(KeyPath);
  v15 = swift_release(v10);
  v16 = static Color.secondary.getter(v15);
  v17 = swift_getKeyPath(&unk_304420);
  v18 = v22;
  sub_D184((uint64_t)v9, v22, &qword_3DFA00);
  v19 = (uint64_t *)(v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_3DFA08) + 36));
  *v19 = v17;
  v19[1] = v16;
  return sub_D1D4((uint64_t)v9, &qword_3DFA00);
}

void sub_28EAC4(uint64_t a1, uint64_t a2, char a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v5 = a3 & 1;
  v6 = type metadata accessor for MetricsData(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActionMetrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DF9F8);
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a2);
  v18 = sub_14A78(v17, v5);
  swift_release(a2);
  v19 = type metadata accessor for MetricsController(0);
  BaseObjectGraph.optional<A>(_:)(v40, v19, v19, v20);
  swift_release(v18);
  v21 = v40[0];
  if (v40[0])
  {
    v39 = a1;
    dispatch thunk of LegacyLockup.clickAction.getter(v40);
    v22 = v41;
    if (v41)
    {
      v38 = v6;
      v23 = v42;
      __swift_project_boxed_opaque_existential_1(v40, v41);
      v24 = dispatch thunk of ActionModel.actionMetrics.getter(v22, v23);
      v25 = ActionMetrics.data.getter(v24);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      if (*(_QWORD *)(v25 + 16))
      {
        v6 = v38;
        (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v16, v25 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v38);
        v26 = 0;
      }
      else
      {
        v26 = 1;
        v6 = v38;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v16, v26, 1, v6);
      v28 = swift_bridgeObjectRelease(v25);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v16, 1, v6, v28) == 1)
      {
        __swift_destroy_boxed_opaque_existential_0(v40);
        sub_D1D4((uint64_t)v16, &qword_3DF9F8);
        v27 = 0;
      }
      else
      {
        v27 = MetricsData.fields.getter();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
        __swift_destroy_boxed_opaque_existential_0(v40);
      }
    }
    else
    {
      sub_D1D4((uint64_t)v40, (uint64_t *)&unk_3D30D0);
      v27 = 0;
    }
    type metadata accessor for ClickMetricsEvent(0);
    v40[0] = LegacyLockup.adamId.getter(v29);
    v30 = sub_5AE80();
    v31 = BinaryInteger.description.getter(&type metadata for UInt64, v30);
    v33 = v32;
    v34 = static ClickMetricsEvent.makeSearchContextMenuClickEvent(for:metricsFields:)(v31);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v27);
    dispatch thunk of MetricsEvent.metricsData.getter(v35);
    MetricsController.process(_:)(v9);
    swift_release(v21);
    v36 = swift_release(v34);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v36);
  }
}

uint64_t sub_28EDBC()
{
  uint64_t v0;

  return sub_28E70C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_28EDC8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_334180, 1);
}

uint64_t sub_28EDE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_28EE14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

void sub_28EE40()
{
  uint64_t v0;

  sub_28EAC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

void sub_28EE54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_27C58(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_304498;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 3, v6, a1 + 32);
    }
  }
}

uint64_t *sub_28EEE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  unsigned int v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  id v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  id v63;
  size_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v6 = type metadata accessor for ArtworkCrop(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = (((*(_QWORD *)(v7 + 64) + 7 + ((v8 + 130) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12 + 16;
  if ((v12 | v8) > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v12 + 16 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12) + *(_QWORD *)(v11 + 64) > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
    swift_retain(v16);
  }
  else
  {
    v17 = v6;
    v68 = ~v8;
    v69 = *(_QWORD *)(v7 + 64) + 7;
    if ((*(_DWORD *)(v7 + 84) & 0x80000000) != 0)
    {
      v19 = (*(uint64_t (**)(unint64_t))(v7 + 48))(((((((((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                       + 39) & 0xFFFFFFFFFFFFFFF8)
                                                                     + 31) & 0xFFFFFFFFFFFFFFF8)
                                                                   + v8
                                                                   + 58) & ~v8);
    }
    else
    {
      v18 = a2[1];
      if (v18 >= 0xFFFFFFFF)
        LODWORD(v18) = -1;
      v19 = v18 + 1;
    }
    v20 = v9 + 16;
    v21 = ~v12;
    if (v19)
    {
      memcpy(a1, a2, v20);
    }
    else
    {
      v64 = v20;
      v65 = v21;
      v66 = v17;
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      v23 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
      v24 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
      v25 = *(unsigned __int8 *)(v24 + 16);
      swift_bridgeObjectRetain(v22);
      v67 = v10;
      if (v25 > 2)
      {
        v28 = *(_OWORD *)v24;
        *(_BYTE *)(v23 + 16) = *(_BYTE *)(v24 + 16);
        *(_OWORD *)v23 = v28;
      }
      else
      {
        v27 = *(_QWORD *)v24;
        v26 = *(_QWORD *)(v24 + 8);
        sub_108110(v27, v26, v25);
        *(_QWORD *)v23 = v27;
        *(_QWORD *)(v23 + 8) = v26;
        *(_BYTE *)(v23 + 16) = v25;
      }
      v29 = (_QWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8);
      v30 = (_QWORD *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFFFF8);
      *v29 = *v30;
      v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
      v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v31 = *v32;
      v33 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
      v34 = ((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8;
      v35 = *(unsigned __int8 *)(v34 + 8);
      if (v35 > 2)
      {
        v36 = *(id *)v34;
        *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
        *(_QWORD *)v33 = v36;
      }
      else
      {
        v63 = *(id *)v34;
        sub_27F80(*(id *)v34, v35);
        *(_QWORD *)v33 = v63;
        *(_BYTE *)(v33 + 8) = v35;
      }
      v37 = ((unint64_t)v31 + 31) & 0xFFFFFFFFFFFFFFF8;
      v38 = ((unint64_t)v32 + 31) & 0xFFFFFFFFFFFFFFF8;
      v39 = *(unsigned __int8 *)(v38 + 8);
      if (v39 == 255)
      {
        v41 = *(id *)v38;
        *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
        *(_QWORD *)v37 = v41;
      }
      else
      {
        v40 = *(id *)v38;
        sub_27F80(*(id *)v38, *(_BYTE *)(v38 + 8));
        *(_QWORD *)v37 = v40;
        *(_BYTE *)(v37 + 8) = v39;
      }
      v42 = (id *)(v38 + 16);
      v43 = *(unsigned __int8 *)(v38 + 24);
      if (v43 == 255)
      {
        v45 = *v42;
        *(_BYTE *)(v37 + 24) = *(_BYTE *)(v38 + 24);
        *(_QWORD *)(v37 + 16) = v45;
      }
      else
      {
        v44 = *v42;
        sub_27F80(*v42, *(_BYTE *)(v38 + 24));
        *(_QWORD *)(v37 + 16) = v44;
        *(_BYTE *)(v37 + 24) = v43;
      }
      v46 = (id *)(v38 + 32);
      v47 = *(unsigned __int8 *)(v38 + 40);
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v37 + 40) = *(_BYTE *)(v38 + 40);
        *(_QWORD *)(v37 + 32) = v49;
      }
      else
      {
        v48 = *v46;
        sub_27F80(*v46, *(_BYTE *)(v38 + 40));
        *(_QWORD *)(v37 + 32) = v48;
        *(_BYTE *)(v37 + 40) = v47;
      }
      v50 = (id *)(v38 + 48);
      v51 = *(unsigned __int8 *)(v38 + 56);
      if (v51 == 255)
      {
        v53 = *v50;
        *(_BYTE *)(v37 + 56) = *(_BYTE *)(v38 + 56);
        *(_QWORD *)(v37 + 48) = v53;
      }
      else
      {
        v52 = *v50;
        sub_27F80(*v50, *(_BYTE *)(v38 + 56));
        *(_QWORD *)(v37 + 48) = v52;
        *(_BYTE *)(v37 + 56) = v51;
      }
      *(_BYTE *)(v37 + 57) = *(_BYTE *)(v38 + 57);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))((v37 + v8 + 58) & v68, (v38 + v8 + 58) & v68, v66);
      v54 = (v69 + ((v37 + v8 + 58) & v68)) & 0xFFFFFFFFFFFFFFF8;
      v55 = (v69 + ((v38 + v8 + 58) & v68)) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v54 = *(_QWORD *)v55;
      v56 = *(_QWORD *)(v55 + 8);
      *(_QWORD *)(v54 + 8) = v56;
      *(_BYTE *)(v54 + 16) = *(_BYTE *)(v55 + 16);
      *(_BYTE *)(v54 + 17) = *(_BYTE *)(v55 + 17);
      *(_BYTE *)(v54 + 18) = *(_BYTE *)(v55 + 18);
      v57 = (_QWORD *)((v54 + 26) & 0xFFFFFFFFFFFFFFF8);
      v58 = (_QWORD *)((v55 + 26) & 0xFFFFFFFFFFFFFFF8);
      *v57 = *v58;
      v59 = v58[1];
      v57[1] = v59;
      swift_bridgeObjectRetain(v56);
      swift_bridgeObjectRetain(v59);
      v10 = v67;
      v20 = v64;
      v21 = v65;
    }
    v60 = (_OWORD *)(((unint64_t)a1 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
    v61 = (_OWORD *)(((unint64_t)a2 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v60 = *v61;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)v60 + v13) & v21, ((unint64_t)v61 + v13) & v21, v10);
  }
  return a1;
}

uint64_t sub_28F314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  unsigned int v17;
  unint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  unint64_t v24;

  v4 = type metadata accessor for ArtworkCrop(0);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  if ((*(_DWORD *)(v6 + 84) & 0x80000000) != 0)
  {
    if ((*(unsigned int (**)(unint64_t))(v6 + 48))((((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
                                                                       + 31) & 0xFFFFFFFFFFFFFFF8)
                                                                     + v7
                                                                     + 58) & v8))
    {
LABEL_5:
      v11 = v9 + 7;
      v12 = a1 + 23;
      return (*(uint64_t (**)(unint64_t, __n128))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((v12 + ((((v11 + ((v7 + 130) & v8)) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)+ *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)+ 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80), v5);
    }
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 8);
    if (v10 >= 0xFFFFFFFF)
      LODWORD(v10) = -1;
    if ((_DWORD)v10 != -1)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v12 = a1 + 23;
  v13 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(unsigned __int8 *)(v13 + 16);
  if (v14 <= 2)
    sub_108270(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), v14);
  v15 = (((a1 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(unsigned __int8 *)(v16 + 8);
  if (v17 <= 2)
    sub_27FA8(*(id *)v16, v17);
  v18 = (v15 + 31) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(unsigned __int8 *)(v18 + 8);
  if (v19 != 255)
    sub_27FA8(*(id *)v18, v19);
  v20 = *(unsigned __int8 *)(v18 + 24);
  if (v20 != 255)
    sub_27FA8(*(id *)(v18 + 16), v20);
  v21 = *(unsigned __int8 *)(v18 + 40);
  if (v21 != 255)
    sub_27FA8(*(id *)(v18 + 32), v21);
  v22 = *(unsigned __int8 *)(v18 + 56);
  if (v22 != 255)
    sub_27FA8(*(id *)(v18 + 48), v22);
  v23 = (v18 + v7 + 58) & v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v23, v4);
  v11 = v9 + 7;
  v24 = (v9 + 7 + v23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v24 + 8));
  v5 = swift_bridgeObjectRelease(*(_QWORD *)((char *)&dword_8 + ((v24 + 26) & 0xFFFFFFFFFFFFF8)));
  return (*(uint64_t (**)(unint64_t, __n128))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((v12 + ((((v11 + ((v7 + 130) & v8)) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)+ *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)+ 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80), v5);
}

_QWORD *sub_28F4EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  size_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  unsigned int v26;
  id v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  id v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v6 = type metadata accessor for ArtworkCrop(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64) + 7;
  v10 = (((v9 + ((v8 + 130) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_DWORD *)(v7 + 84) & 0x80000000) != 0)
  {
    v12 = v10 + 16;
    if ((*(unsigned int (**)(unint64_t))(v7 + 48))(((((((((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                         + 39) & 0xFFFFFFFFFFFFFFF8)
                                                                       + 31) & 0xFFFFFFFFFFFFFFF8)
                                                                     + v8
                                                                     + 58) & ~v8))
    {
LABEL_5:
      memcpy(a1, a2, v12);
      goto LABEL_26;
    }
  }
  else
  {
    v11 = a2[1];
    if (v11 >= 0xFFFFFFFF)
      LODWORD(v11) = -1;
    v12 = v10 + 16;
    if ((_DWORD)v11 != -1)
      goto LABEL_5;
  }
  v57 = ~v8;
  v58 = v9;
  v13 = a2[1];
  *a1 = *a2;
  a1[1] = v13;
  v14 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(unsigned __int8 *)(v15 + 16);
  swift_bridgeObjectRetain(v13);
  v56 = a3;
  v59 = v6;
  if (v16 > 2)
  {
    v19 = *(_OWORD *)v15;
    *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
    *(_OWORD *)v14 = v19;
  }
  else
  {
    v17 = *(_QWORD *)v15;
    v18 = *(_QWORD *)(v15 + 8);
    sub_108110(v17, v18, v16);
    *(_QWORD *)v14 = v17;
    *(_QWORD *)(v14 + 8) = v18;
    *(_BYTE *)(v14 + 16) = v16;
  }
  v20 = (_QWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(unsigned __int8 *)(v25 + 8);
  if (v26 > 2)
  {
    v28 = *(id *)v25;
    *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
    *(_QWORD *)v24 = v28;
  }
  else
  {
    v27 = *(id *)v25;
    sub_27F80(*(id *)v25, *(_BYTE *)(v25 + 8));
    *(_QWORD *)v24 = v27;
    *(_BYTE *)(v24 + 8) = v26;
  }
  a3 = v56;
  v29 = ((unint64_t)v22 + 31) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v23 + 31) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(unsigned __int8 *)(v30 + 8);
  if (v31 == 255)
  {
    v33 = *(id *)v30;
    *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
    *(_QWORD *)v29 = v33;
  }
  else
  {
    v32 = *(id *)v30;
    sub_27F80(*(id *)v30, *(_BYTE *)(v30 + 8));
    *(_QWORD *)v29 = v32;
    *(_BYTE *)(v29 + 8) = v31;
  }
  v34 = (id *)(v30 + 16);
  v35 = *(unsigned __int8 *)(v30 + 24);
  if (v35 == 255)
  {
    v37 = *v34;
    *(_BYTE *)(v29 + 24) = *(_BYTE *)(v30 + 24);
    *(_QWORD *)(v29 + 16) = v37;
  }
  else
  {
    v36 = *v34;
    sub_27F80(*v34, *(_BYTE *)(v30 + 24));
    *(_QWORD *)(v29 + 16) = v36;
    *(_BYTE *)(v29 + 24) = v35;
  }
  v38 = (id *)(v30 + 32);
  v39 = *(unsigned __int8 *)(v30 + 40);
  if (v39 == 255)
  {
    v41 = *v38;
    *(_BYTE *)(v29 + 40) = *(_BYTE *)(v30 + 40);
    *(_QWORD *)(v29 + 32) = v41;
  }
  else
  {
    v40 = *v38;
    sub_27F80(*v38, *(_BYTE *)(v30 + 40));
    *(_QWORD *)(v29 + 32) = v40;
    *(_BYTE *)(v29 + 40) = v39;
  }
  v42 = (id *)(v30 + 48);
  v43 = *(unsigned __int8 *)(v30 + 56);
  if (v43 == 255)
  {
    v45 = *v42;
    *(_BYTE *)(v29 + 56) = *(_BYTE *)(v30 + 56);
    *(_QWORD *)(v29 + 48) = v45;
  }
  else
  {
    v44 = *v42;
    sub_27F80(*v42, *(_BYTE *)(v30 + 56));
    *(_QWORD *)(v29 + 48) = v44;
    *(_BYTE *)(v29 + 56) = v43;
  }
  *(_BYTE *)(v29 + 57) = *(_BYTE *)(v30 + 57);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))((v29 + v8 + 58) & v57, (v30 + v8 + 58) & v57, v59);
  v46 = (v58 + ((v29 + v8 + 58) & v57)) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v58 + ((v30 + v8 + 58) & v57)) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v48 = *(_QWORD *)(v47 + 8);
  *(_QWORD *)(v46 + 8) = v48;
  *(_BYTE *)(v46 + 16) = *(_BYTE *)(v47 + 16);
  *(_BYTE *)(v46 + 17) = *(_BYTE *)(v47 + 17);
  *(_BYTE *)(v46 + 18) = *(_BYTE *)(v47 + 18);
  v49 = (_QWORD *)((v46 + 26) & 0xFFFFFFFFFFFFFFF8);
  v50 = (_QWORD *)((v47 + 26) & 0xFFFFFFFFFFFFFFF8);
  *v49 = *v50;
  v51 = v50[1];
  v49[1] = v51;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRetain(v51);
LABEL_26:
  v52 = (_OWORD *)(((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  v53 = (_OWORD *)(((unint64_t)a2 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v52 = *v53;
  v54 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v54 + 16))(((unint64_t)v52 + *(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80), ((unint64_t)v53 + *(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
  return a1;
}

_QWORD *sub_28F8AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  unsigned int v17;
  unint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(unint64_t, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  __int128 v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  unsigned int v50;
  id v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  int v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id *v60;
  int v61;
  id v62;
  id v63;
  id *v64;
  int v65;
  id v66;
  id v67;
  id *v68;
  int v69;
  id v70;
  id v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  __int128 v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  _QWORD *v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unsigned int v86;
  unsigned int v87;
  void *v88;
  id v89;
  char v90;
  void *v91;
  void *v92;
  unint64_t v93;
  unint64_t v94;
  int v95;
  id v96;
  void *v97;
  char v98;
  id v99;
  char v100;
  id v101;
  id *v102;
  id *v103;
  int v104;
  id v105;
  void *v106;
  char v107;
  id v108;
  char v109;
  id v110;
  id *v111;
  id *v112;
  int v113;
  id v114;
  void *v115;
  char v116;
  id v117;
  char v118;
  id v119;
  id *v120;
  id *v121;
  int v122;
  id v123;
  void *v124;
  char v125;
  id v126;
  char v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  unint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;

  v6 = type metadata accessor for ArtworkCrop(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v146 = ~v9;
  v147 = *(_QWORD *)(v7 + 64) + 7;
  v10 = ((((v147 + ((v9 + 130) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8) + 16;
  if ((v8 & 0x80000000) != 0)
  {
    v25 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
    v145 = v25(((((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ v9+ 58) & ~v9, v8, v6);
    v12 = v25(((((((((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ v9+ 58) & ~v9, v8, v6);
    if (!v145)
      goto LABEL_5;
  }
  else
  {
    v11 = a2[1];
    if (v11 >= 0xFFFFFFFF)
      LODWORD(v11) = -1;
    v12 = v11 + 1;
    if (a1[1] > 0xFFFFFFFEuLL)
    {
LABEL_5:
      if (v12)
      {
        swift_bridgeObjectRelease(a1[1]);
        v13 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
        v14 = *(unsigned __int8 *)(v13 + 16);
        if (v14 <= 2)
          sub_108270(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), v14);
        v15 = ((((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
        v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
        v17 = *(unsigned __int8 *)(v16 + 8);
        if (v17 <= 2)
          sub_27FA8(*(id *)v16, v17);
        v18 = (v15 + 31) & 0xFFFFFFFFFFFFFFF8;
        v19 = *(unsigned __int8 *)(v18 + 8);
        if (v19 != 255)
          sub_27FA8(*(id *)v18, v19);
        v20 = *(unsigned __int8 *)(v18 + 24);
        if (v20 != 255)
          sub_27FA8(*(id *)(v18 + 16), v20);
        v21 = *(unsigned __int8 *)(v18 + 40);
        if (v21 != 255)
          sub_27FA8(*(id *)(v18 + 32), v21);
        v22 = *(unsigned __int8 *)(v18 + 56);
        if (v22 != 255)
          sub_27FA8(*(id *)(v18 + 48), v22);
        v23 = (v18 + v9 + 58) & v146;
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
        v24 = (v147 + v23) & 0xFFFFFFFFFFFFFFF8;
        swift_bridgeObjectRelease(*(_QWORD *)(v24 + 8));
        swift_bridgeObjectRelease(*(_QWORD *)((char *)&dword_8 + ((v24 + 26) & 0xFFFFFFFFFFFFF8)));
        goto LABEL_21;
      }
      v143 = ((((v147 + ((v9 + 130) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8) + 16;
      *a1 = *a2;
      v32 = a2[1];
      v33 = a1[1];
      a1[1] = v32;
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRelease(v33);
      v34 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
      v35 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
      v36 = *(unsigned __int8 *)(v34 + 16);
      v37 = *(unsigned __int8 *)(v35 + 16);
      v144 = a3;
      if (v36 > 2)
      {
        if (v37 <= 2)
        {
          v57 = *(_QWORD *)v35;
          v58 = *(_QWORD *)(v35 + 8);
          sub_108110(*(_QWORD *)v35, v58, v37);
          *(_QWORD *)v34 = v57;
          *(_QWORD *)(v34 + 8) = v58;
          *(_BYTE *)(v34 + 16) = v37;
          goto LABEL_48;
        }
      }
      else
      {
        if (v37 <= 2)
        {
          v38 = *(_QWORD *)v35;
          v39 = *(_QWORD *)(v35 + 8);
          sub_108110(*(_QWORD *)v35, v39, v37);
          v40 = *(_QWORD *)v34;
          v41 = *(_QWORD *)(v34 + 8);
          *(_QWORD *)v34 = v38;
          *(_QWORD *)(v34 + 8) = v39;
          v42 = *(_BYTE *)(v34 + 16);
          *(_BYTE *)(v34 + 16) = v37;
          sub_108270(v40, v41, v42);
          goto LABEL_48;
        }
        sub_108270(*(_QWORD *)v34, *(_QWORD *)(v34 + 8), v36);
      }
      v78 = *(_OWORD *)v35;
      *(_BYTE *)(v34 + 16) = *(_BYTE *)(v35 + 16);
      *(_OWORD *)v34 = v78;
LABEL_48:
      v79 = (_QWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8);
      v80 = (_QWORD *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFFFF8);
      *v79 = *v80;
      v81 = (_QWORD *)(((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF8);
      v82 = (_QWORD *)(((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8);
      v83 = (unint64_t)v82 + 15;
      *v81 = *v82;
      v84 = ((unint64_t)v81 + 15) & 0xFFFFFFFFFFFFFFF8;
      v85 = ((unint64_t)v82 + 15) & 0xFFFFFFFFFFFFFFF8;
      v86 = *(unsigned __int8 *)(v84 + 8);
      v87 = *(unsigned __int8 *)(v85 + 8);
      if (v86 > 2)
      {
        if (v87 <= 2)
        {
          v91 = *(void **)v85;
          sub_27F80(v91, *(_BYTE *)((v83 & 0xFFFFFFFFFFFFFFF8) + 8));
          *(_QWORD *)v84 = v91;
          *(_BYTE *)(v84 + 8) = v87;
          goto LABEL_55;
        }
      }
      else
      {
        if (v87 <= 2)
        {
          v88 = *(void **)v85;
          sub_27F80(v88, *(_BYTE *)((v83 & 0xFFFFFFFFFFFFFFF8) + 8));
          v89 = *(id *)v84;
          *(_QWORD *)v84 = v88;
          v90 = *(_BYTE *)(v84 + 8);
          *(_BYTE *)(v84 + 8) = v87;
          sub_27FA8(v89, v90);
LABEL_55:
          v93 = ((unint64_t)v81 + 31) & 0xFFFFFFFFFFFFFFF8;
          v94 = ((unint64_t)v82 + 31) & 0xFFFFFFFFFFFFFFF8;
          v95 = *(unsigned __int8 *)(v94 + 8);
          if (*(unsigned __int8 *)(v93 + 8) == 255)
          {
            if (v95 == 255)
            {
              v101 = *(id *)v94;
              *(_BYTE *)(v93 + 8) = *(_BYTE *)(v94 + 8);
              *(_QWORD *)v93 = v101;
            }
            else
            {
              v99 = *(id *)v94;
              sub_27F80(*(id *)v94, *(_BYTE *)(v94 + 8));
              *(_QWORD *)v93 = v99;
              *(_BYTE *)(v93 + 8) = v95;
            }
          }
          else if (v95 == 255)
          {
            sub_108E0C(v93);
            v100 = *(_BYTE *)(v94 + 8);
            *(_QWORD *)v93 = *(_QWORD *)v94;
            *(_BYTE *)(v93 + 8) = v100;
          }
          else
          {
            v96 = *(id *)v94;
            sub_27F80(*(id *)v94, *(_BYTE *)(v94 + 8));
            v97 = *(void **)v93;
            *(_QWORD *)v93 = v96;
            v98 = *(_BYTE *)(v93 + 8);
            *(_BYTE *)(v93 + 8) = v95;
            sub_27FA8(v97, v98);
          }
          v102 = (id *)(v93 + 16);
          v103 = (id *)(v94 + 16);
          v104 = *(unsigned __int8 *)(v94 + 24);
          if (*(unsigned __int8 *)(v93 + 24) == 255)
          {
            if (v104 == 255)
            {
              v110 = *v103;
              *(_BYTE *)(v93 + 24) = *(_BYTE *)(v94 + 24);
              *v102 = v110;
            }
            else
            {
              v108 = *v103;
              sub_27F80(*v103, *(_BYTE *)(v94 + 24));
              *(_QWORD *)(v93 + 16) = v108;
              *(_BYTE *)(v93 + 24) = v104;
            }
          }
          else if (v104 == 255)
          {
            sub_108E0C(v93 + 16);
            v109 = *(_BYTE *)(v94 + 24);
            *v102 = *v103;
            *(_BYTE *)(v93 + 24) = v109;
          }
          else
          {
            v105 = *v103;
            sub_27F80(*v103, *(_BYTE *)(v94 + 24));
            v106 = *(void **)(v93 + 16);
            *(_QWORD *)(v93 + 16) = v105;
            v107 = *(_BYTE *)(v93 + 24);
            *(_BYTE *)(v93 + 24) = v104;
            sub_27FA8(v106, v107);
          }
          v111 = (id *)(v93 + 32);
          v112 = (id *)(v94 + 32);
          v113 = *(unsigned __int8 *)(v94 + 40);
          if (*(unsigned __int8 *)(v93 + 40) == 255)
          {
            if (v113 == 255)
            {
              v119 = *v112;
              *(_BYTE *)(v93 + 40) = *(_BYTE *)(v94 + 40);
              *v111 = v119;
            }
            else
            {
              v117 = *v112;
              sub_27F80(*v112, *(_BYTE *)(v94 + 40));
              *(_QWORD *)(v93 + 32) = v117;
              *(_BYTE *)(v93 + 40) = v113;
            }
          }
          else if (v113 == 255)
          {
            sub_108E0C(v93 + 32);
            v118 = *(_BYTE *)(v94 + 40);
            *v111 = *v112;
            *(_BYTE *)(v93 + 40) = v118;
          }
          else
          {
            v114 = *v112;
            sub_27F80(*v112, *(_BYTE *)(v94 + 40));
            v115 = *(void **)(v93 + 32);
            *(_QWORD *)(v93 + 32) = v114;
            v116 = *(_BYTE *)(v93 + 40);
            *(_BYTE *)(v93 + 40) = v113;
            sub_27FA8(v115, v116);
          }
          v120 = (id *)(v93 + 48);
          v121 = (id *)(v94 + 48);
          v122 = *(unsigned __int8 *)(v94 + 56);
          if (*(unsigned __int8 *)(v93 + 56) == 255)
          {
            if (v122 == 255)
            {
              v128 = *v121;
              *(_BYTE *)(v93 + 56) = *(_BYTE *)(v94 + 56);
              *v120 = v128;
            }
            else
            {
              v126 = *v121;
              sub_27F80(*v121, *(_BYTE *)(v94 + 56));
              *(_QWORD *)(v93 + 48) = v126;
              *(_BYTE *)(v93 + 56) = v122;
            }
          }
          else if (v122 == 255)
          {
            sub_108E0C(v93 + 48);
            v127 = *(_BYTE *)(v94 + 56);
            *v120 = *v121;
            *(_BYTE *)(v93 + 56) = v127;
          }
          else
          {
            v123 = *v121;
            sub_27F80(*v121, *(_BYTE *)(v94 + 56));
            v124 = *(void **)(v93 + 48);
            *(_QWORD *)(v93 + 48) = v123;
            v125 = *(_BYTE *)(v93 + 56);
            *(_BYTE *)(v93 + 56) = v122;
            sub_27FA8(v124, v125);
          }
          *(_BYTE *)(v93 + 57) = *(_BYTE *)(v94 + 57);
          v129 = (v93 + v9 + 58) & v146;
          v130 = (v94 + v9 + 58) & v146;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v129, v130, v6);
          v131 = (v147 + v129) & 0xFFFFFFFFFFFFFFF8;
          v132 = (v147 + v130) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v131 = *(_QWORD *)v132;
          v133 = *(_QWORD *)(v132 + 8);
          v134 = *(_QWORD *)(v131 + 8);
          *(_QWORD *)(v131 + 8) = v133;
          swift_bridgeObjectRetain(v133);
          swift_bridgeObjectRelease(v134);
          *(_BYTE *)(v131 + 16) = *(_BYTE *)(v132 + 16);
          *(_BYTE *)(v131 + 17) = *(_BYTE *)(v132 + 17);
          *(_BYTE *)(v131 + 18) = *(_BYTE *)(v132 + 18);
          v135 = (_QWORD *)((v131 + 26) & 0xFFFFFFFFFFFFFFF8);
          v136 = (_QWORD *)((v132 + 26) & 0xFFFFFFFFFFFFFFF8);
          *v135 = *v136;
          v137 = v136[1];
          v138 = v135[1];
          v135[1] = v137;
          swift_bridgeObjectRetain(v137);
          swift_bridgeObjectRelease(v138);
LABEL_84:
          v10 = v143;
          a3 = v144;
          goto LABEL_85;
        }
        sub_27FA8(*(id *)v84, v86);
      }
      v92 = *(void **)v85;
      *(_BYTE *)(v84 + 8) = *(_BYTE *)(v85 + 8);
      *(_QWORD *)v84 = v92;
      goto LABEL_55;
    }
  }
  if (!v12)
  {
    v144 = a3;
    *a1 = *a2;
    v26 = a2[1];
    a1[1] = v26;
    v27 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v28 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    v29 = *(unsigned __int8 *)(v28 + 16);
    swift_bridgeObjectRetain(v26);
    v143 = ((((v147 + ((v9 + 130) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v29 > 2)
    {
      v43 = *(_OWORD *)v28;
      *(_BYTE *)(v27 + 16) = *(_BYTE *)(v28 + 16);
      *(_OWORD *)v27 = v43;
    }
    else
    {
      v30 = *(_QWORD *)v28;
      v31 = *(_QWORD *)(v28 + 8);
      sub_108110(v30, v31, v29);
      *(_QWORD *)v27 = v30;
      *(_QWORD *)(v27 + 8) = v31;
      *(_BYTE *)(v27 + 16) = v29;
    }
    v44 = (_QWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8);
    v45 = (_QWORD *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFFFF8);
    *v44 = *v45;
    v46 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
    v47 = (_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v46 = *v47;
    v48 = ((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8;
    v49 = ((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8;
    v50 = *(unsigned __int8 *)(v49 + 8);
    if (v50 > 2)
    {
      v52 = *(id *)v49;
      *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
      *(_QWORD *)v48 = v52;
    }
    else
    {
      v51 = *(id *)v49;
      sub_27F80(*(id *)v49, *(_BYTE *)(v49 + 8));
      *(_QWORD *)v48 = v51;
      *(_BYTE *)(v48 + 8) = v50;
    }
    v53 = ((unint64_t)v46 + 31) & 0xFFFFFFFFFFFFFFF8;
    v54 = ((unint64_t)v47 + 31) & 0xFFFFFFFFFFFFFFF8;
    v55 = *(unsigned __int8 *)(v54 + 8);
    if (v55 == 255)
    {
      v59 = *(id *)v54;
      *(_BYTE *)(v53 + 8) = *(_BYTE *)(v54 + 8);
      *(_QWORD *)v53 = v59;
    }
    else
    {
      v56 = *(id *)v54;
      sub_27F80(*(id *)v54, *(_BYTE *)(v54 + 8));
      *(_QWORD *)v53 = v56;
      *(_BYTE *)(v53 + 8) = v55;
    }
    v60 = (id *)(v54 + 16);
    v61 = *(unsigned __int8 *)(v54 + 24);
    if (v61 == 255)
    {
      v63 = *v60;
      *(_BYTE *)(v53 + 24) = *(_BYTE *)(v54 + 24);
      *(_QWORD *)(v53 + 16) = v63;
    }
    else
    {
      v62 = *v60;
      sub_27F80(*v60, *(_BYTE *)(v54 + 24));
      *(_QWORD *)(v53 + 16) = v62;
      *(_BYTE *)(v53 + 24) = v61;
    }
    v64 = (id *)(v54 + 32);
    v65 = *(unsigned __int8 *)(v54 + 40);
    if (v65 == 255)
    {
      v67 = *v64;
      *(_BYTE *)(v53 + 40) = *(_BYTE *)(v54 + 40);
      *(_QWORD *)(v53 + 32) = v67;
    }
    else
    {
      v66 = *v64;
      sub_27F80(*v64, *(_BYTE *)(v54 + 40));
      *(_QWORD *)(v53 + 32) = v66;
      *(_BYTE *)(v53 + 40) = v65;
    }
    v68 = (id *)(v54 + 48);
    v69 = *(unsigned __int8 *)(v54 + 56);
    if (v69 == 255)
    {
      v71 = *v68;
      *(_BYTE *)(v53 + 56) = *(_BYTE *)(v54 + 56);
      *(_QWORD *)(v53 + 48) = v71;
    }
    else
    {
      v70 = *v68;
      sub_27F80(*v68, *(_BYTE *)(v54 + 56));
      *(_QWORD *)(v53 + 48) = v70;
      *(_BYTE *)(v53 + 56) = v69;
    }
    *(_BYTE *)(v53 + 57) = *(_BYTE *)(v54 + 57);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))((v53 + v9 + 58) & v146, (v54 + v9 + 58) & v146, v6);
    v72 = (v147 + ((v53 + v9 + 58) & v146)) & 0xFFFFFFFFFFFFFFF8;
    v73 = (v147 + ((v54 + v9 + 58) & v146)) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v72 = *(_QWORD *)v73;
    v74 = *(_QWORD *)(v73 + 8);
    *(_QWORD *)(v72 + 8) = v74;
    *(_BYTE *)(v72 + 16) = *(_BYTE *)(v73 + 16);
    *(_BYTE *)(v72 + 17) = *(_BYTE *)(v73 + 17);
    *(_BYTE *)(v72 + 18) = *(_BYTE *)(v73 + 18);
    v75 = (_QWORD *)((v72 + 26) & 0xFFFFFFFFFFFFFFF8);
    v76 = (_QWORD *)((v73 + 26) & 0xFFFFFFFFFFFFFFF8);
    *v75 = *v76;
    v77 = v76[1];
    v75[1] = v77;
    swift_bridgeObjectRetain(v74);
    swift_bridgeObjectRetain(v77);
    goto LABEL_84;
  }
LABEL_21:
  memcpy(a1, a2, v10);
LABEL_85:
  v139 = (_QWORD *)(((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  v140 = (_QWORD *)(((unint64_t)a2 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v139 = *v140;
  v139[1] = v140[1];
  v141 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v141 + 24))(((unint64_t)v139 + *(unsigned __int8 *)(v141 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80), ((unint64_t)v140 + *(unsigned __int8 *)(v141 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80));
  return a1;
}

_OWORD *sub_290264(_OWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  size_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;

  v6 = type metadata accessor for ArtworkCrop(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ~v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = (((v10 + ((v8 + 130) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_DWORD *)(v7 + 84) & 0x80000000) == 0)
  {
    v12 = a2[1];
    if (v12 >= 0xFFFFFFFF)
      LODWORD(v12) = -1;
    v13 = v11 + 16;
    if ((_DWORD)v12 != -1)
      goto LABEL_5;
LABEL_7:
    *a1 = *(_OWORD *)a2;
    v14 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v15 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    v16 = *(_OWORD *)v15;
    *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
    *(_OWORD *)v14 = v16;
    v17 = (_QWORD *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFF8);
    v18 = (_QWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFF8);
    *v18 = *v17;
    v19 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
    *(_QWORD *)v21 = v23;
    v24 = ((unint64_t)v19 + 31) & 0xFFFFFFFFFFFFFFF8;
    v25 = ((unint64_t)v20 + 31) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_OWORD *)v25;
    v27 = *(_OWORD *)(v25 + 16);
    v28 = *(_OWORD *)(v25 + 32);
    *(_OWORD *)(v24 + 41) = *(_OWORD *)(v25 + 41);
    *(_OWORD *)(v24 + 16) = v27;
    *(_OWORD *)(v24 + 32) = v28;
    *(_OWORD *)v24 = v26;
    *(_BYTE *)(v24 + 57) = *(_BYTE *)(v25 + 57);
    v29 = v25 + v8;
    v30 = (v24 + v8 + 58) & v9;
    v31 = (v29 + 58) & v9;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v30, v31, v6);
    v32 = (v10 + v30) & 0xFFFFFFFFFFFFFFF8;
    v33 = (v10 + v31) & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
    *(_BYTE *)(v32 + 17) = *(_BYTE *)(v33 + 17);
    *(_BYTE *)(v32 + 18) = *(_BYTE *)(v33 + 18);
    *(_OWORD *)((v32 + 26) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v33 + 26) & 0xFFFFFFFFFFFFF8);
    goto LABEL_8;
  }
  v13 = v11 + 16;
  if (!(*(unsigned int (**)(unint64_t))(v7 + 48))(((((((((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                        + 39) & 0xFFFFFFFFFFFFFFF8)
                                                                      + 31) & 0xFFFFFFFFFFFFFFF8)
                                                                    + v8
                                                                    + 58) & v9))
    goto LABEL_7;
LABEL_5:
  memcpy(a1, a2, v13);
LABEL_8:
  v34 = (_OWORD *)(((unint64_t)a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_OWORD *)(((unint64_t)a2 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v36 + 32))(((unint64_t)v34 + *(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80), ((unint64_t)v35 + *(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  return a1;
}

_QWORD *sub_2904A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(unint64_t, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __int128 v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  unsigned int v67;
  unsigned int v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int v73;
  int v74;
  void *v75;
  uint64_t v76;
  char v77;
  uint64_t *v78;
  uint64_t *v79;
  int v80;
  int v81;
  void *v82;
  uint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t *v86;
  int v87;
  int v88;
  void *v89;
  uint64_t v90;
  char v91;
  uint64_t *v92;
  uint64_t *v93;
  int v94;
  int v95;
  void *v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v6 = type metadata accessor for ArtworkCrop(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v10 + 7;
  v12 = ((((v10 + 7 + ((v9 + 130) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8) + 16;
  v113 = ~v9;
  v114 = v6;
  v112 = v7;
  if ((v8 & 0x80000000) != 0)
  {
    v27 = v6;
    v28 = ((((v10 + 7 + ((v9 + 130) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8) + 16;
    v29 = v10 + 7;
    v30 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
    v31 = v30(((((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ v9+ 58) & ~v9, v8, v6);
    v32 = v27;
    LODWORD(v27) = v31;
    v14 = v30(((((((((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ v9+ 58) & ~v9, v8, v32);
    v11 = v29;
    v12 = v28;
    if (!(_DWORD)v27)
      goto LABEL_5;
LABEL_20:
    if (!v14)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v33 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
      v34 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
      v35 = *(_OWORD *)v34;
      *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
      *(_OWORD *)v33 = v35;
      v36 = (_QWORD *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFF8);
      v37 = (_QWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFF8);
      *v37 = *v36;
      v38 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
      v39 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v38 = *v39;
      v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
      v41 = ((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8;
      v42 = *(_QWORD *)v41;
      *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
      *(_QWORD *)v40 = v42;
      v43 = ((unint64_t)v38 + 31) & 0xFFFFFFFFFFFFFFF8;
      v44 = ((unint64_t)v39 + 31) & 0xFFFFFFFFFFFFFFF8;
      v45 = *(_OWORD *)v44;
      v46 = *(_OWORD *)(v44 + 16);
      v47 = *(_OWORD *)(v44 + 32);
      *(_OWORD *)(v43 + 41) = *(_OWORD *)(v44 + 41);
      *(_OWORD *)(v43 + 16) = v46;
      *(_OWORD *)(v43 + 32) = v47;
      *(_OWORD *)v43 = v45;
      *(_BYTE *)(v43 + 57) = *(_BYTE *)(v44 + 57);
      v48 = (v43 + v9 + 58) & v113;
      v49 = (v44 + v9 + 58) & v113;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 32))(v48, v49, v114);
      v50 = (v11 + v48) & 0xFFFFFFFFFFFFFFF8;
      v51 = (v11 + v49) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)v50 = *(_OWORD *)v51;
      *(_BYTE *)(v50 + 16) = *(_BYTE *)(v51 + 16);
      *(_BYTE *)(v50 + 17) = *(_BYTE *)(v51 + 17);
      *(_BYTE *)(v50 + 18) = *(_BYTE *)(v51 + 18);
      *(_OWORD *)((v50 + 26) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v51 + 26) & 0xFFFFFFFFFFFFF8);
      goto LABEL_54;
    }
    goto LABEL_21;
  }
  v13 = a2[1];
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 + 1;
  if (a1[1] <= 0xFFFFFFFEuLL)
    goto LABEL_20;
LABEL_5:
  if (v14)
  {
    swift_bridgeObjectRelease(a1[1]);
    v15 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v16 = *(unsigned __int8 *)(v15 + 16);
    if (v16 <= 2)
      sub_108270(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), v16);
    v17 = ((((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
    v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
    v19 = *(unsigned __int8 *)(v18 + 8);
    if (v19 <= 2)
      sub_27FA8(*(id *)v18, v19);
    v20 = (v17 + 31) & 0xFFFFFFFFFFFFFFF8;
    v21 = *(unsigned __int8 *)(v20 + 8);
    if (v21 != 255)
      sub_27FA8(*(id *)v20, v21);
    v22 = *(unsigned __int8 *)(v20 + 24);
    if (v22 != 255)
      sub_27FA8(*(id *)(v20 + 16), v22);
    v23 = *(unsigned __int8 *)(v20 + 40);
    if (v23 != 255)
      sub_27FA8(*(id *)(v20 + 32), v23);
    v24 = *(unsigned __int8 *)(v20 + 56);
    if (v24 != 255)
      sub_27FA8(*(id *)(v20 + 48), v24);
    v25 = (v20 + v9 + 58) & v113;
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v25, v114);
    v26 = (v11 + v25) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v26 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)&dword_8 + ((v26 + 26) & 0xFFFFFFFFFFFFF8)));
LABEL_21:
    memcpy(a1, a2, v12);
    goto LABEL_54;
  }
  v52 = a2[1];
  v53 = a1[1];
  *a1 = *a2;
  a1[1] = v52;
  swift_bridgeObjectRelease(v53);
  v54 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v55 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v56 = *(unsigned __int8 *)(v54 + 16);
  v111 = v11;
  if (v56 <= 2)
  {
    v57 = *(unsigned __int8 *)(v55 + 16);
    v58 = *(_QWORD *)v54;
    v59 = *(_QWORD *)(v54 + 8);
    if (v57 <= 2)
    {
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *(_BYTE *)(v54 + 16) = v57;
      sub_108270(v58, v59, v56);
      goto LABEL_28;
    }
    sub_108270(v58, v59, v56);
  }
  v60 = *(_OWORD *)v55;
  *(_BYTE *)(v54 + 16) = *(_BYTE *)(v55 + 16);
  *(_OWORD *)v54 = v60;
LABEL_28:
  v61 = (_QWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8);
  v62 = (_QWORD *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFFFF8);
  *v61 = *v62;
  v63 = (_QWORD *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
  v64 = (_QWORD *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v63 = *v64;
  v65 = ((unint64_t)v63 + 15) & 0xFFFFFFFFFFFFFFF8;
  v66 = ((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  v67 = *(unsigned __int8 *)(v65 + 8);
  if (v67 > 2)
  {
LABEL_32:
    v70 = *(_QWORD *)v66;
    *(_BYTE *)(v65 + 8) = *(_BYTE *)(v66 + 8);
    *(_QWORD *)v65 = v70;
    goto LABEL_33;
  }
  v68 = *(unsigned __int8 *)(v66 + 8);
  if (v68 > 2)
  {
    sub_27FA8(*(id *)v65, v67);
    goto LABEL_32;
  }
  v69 = *(id *)v65;
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *(_BYTE *)(v65 + 8) = v68;
  sub_27FA8(v69, v67);
LABEL_33:
  v71 = ((unint64_t)v63 + 31) & 0xFFFFFFFFFFFFFFF8;
  v72 = ((unint64_t)v64 + 31) & 0xFFFFFFFFFFFFFFF8;
  v73 = *(unsigned __int8 *)(v71 + 8);
  if (v73 == 255)
  {
    v76 = *(_QWORD *)v72;
    *(_BYTE *)(v71 + 8) = *(_BYTE *)(v72 + 8);
    *(_QWORD *)v71 = v76;
  }
  else
  {
    v74 = *(unsigned __int8 *)(v72 + 8);
    if (v74 == 255)
    {
      sub_108E0C(v71);
      v77 = *(_BYTE *)(v72 + 8);
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *(_BYTE *)(v71 + 8) = v77;
    }
    else
    {
      v75 = *(void **)v71;
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *(_BYTE *)(v71 + 8) = v74;
      sub_27FA8(v75, v73);
    }
  }
  v78 = (uint64_t *)(v71 + 16);
  v79 = (uint64_t *)(v72 + 16);
  v80 = *(unsigned __int8 *)(v71 + 24);
  if (v80 == 255)
  {
    v83 = *v79;
    *(_BYTE *)(v71 + 24) = *(_BYTE *)(v72 + 24);
    *v78 = v83;
  }
  else
  {
    v81 = *(unsigned __int8 *)(v72 + 24);
    if (v81 == 255)
    {
      sub_108E0C(v71 + 16);
      v84 = *(_BYTE *)(v72 + 24);
      *v78 = *v79;
      *(_BYTE *)(v71 + 24) = v84;
    }
    else
    {
      v82 = *(void **)(v71 + 16);
      *(_QWORD *)(v71 + 16) = *v79;
      *(_BYTE *)(v71 + 24) = v81;
      sub_27FA8(v82, v80);
    }
  }
  v85 = (uint64_t *)(v71 + 32);
  v86 = (uint64_t *)(v72 + 32);
  v87 = *(unsigned __int8 *)(v71 + 40);
  if (v87 == 255)
  {
    v90 = *v86;
    *(_BYTE *)(v71 + 40) = *(_BYTE *)(v72 + 40);
    *v85 = v90;
  }
  else
  {
    v88 = *(unsigned __int8 *)(v72 + 40);
    if (v88 == 255)
    {
      sub_108E0C(v71 + 32);
      v91 = *(_BYTE *)(v72 + 40);
      *v85 = *v86;
      *(_BYTE *)(v71 + 40) = v91;
    }
    else
    {
      v89 = *(void **)(v71 + 32);
      *(_QWORD *)(v71 + 32) = *v86;
      *(_BYTE *)(v71 + 40) = v88;
      sub_27FA8(v89, v87);
    }
  }
  v92 = (uint64_t *)(v71 + 48);
  v93 = (uint64_t *)(v72 + 48);
  v94 = *(unsigned __int8 *)(v71 + 56);
  if (v94 == 255)
  {
    v97 = *v93;
    *(_BYTE *)(v71 + 56) = *(_BYTE *)(v72 + 56);
    *v92 = v97;
  }
  else
  {
    v95 = *(unsigned __int8 *)(v72 + 56);
    if (v95 == 255)
    {
      sub_108E0C(v71 + 48);
      v98 = *(_BYTE *)(v72 + 56);
      *v92 = *v93;
      *(_BYTE *)(v71 + 56) = v98;
    }
    else
    {
      v96 = *(void **)(v71 + 48);
      *(_QWORD *)(v71 + 48) = *v93;
      *(_BYTE *)(v71 + 56) = v95;
      sub_27FA8(v96, v94);
    }
  }
  *(_BYTE *)(v71 + 57) = *(_BYTE *)(v72 + 57);
  v99 = (v71 + v9 + 58) & v113;
  v100 = (v72 + v9 + 58) & v113;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 40))(v99, v100, v114);
  v101 = (v111 + v99) & 0xFFFFFFFFFFFFFFF8;
  v102 = (v111 + v100) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v101 = *(_QWORD *)v102;
  v103 = *(_QWORD *)(v101 + 8);
  *(_QWORD *)(v101 + 8) = *(_QWORD *)(v102 + 8);
  swift_bridgeObjectRelease(v103);
  *(_BYTE *)(v101 + 16) = *(_BYTE *)(v102 + 16);
  *(_BYTE *)(v101 + 17) = *(_BYTE *)(v102 + 17);
  *(_BYTE *)(v101 + 18) = *(_BYTE *)(v102 + 18);
  v104 = (_QWORD *)((v101 + 26) & 0xFFFFFFFFFFFFFFF8);
  v105 = (_QWORD *)((v102 + 26) & 0xFFFFFFFFFFFFFFF8);
  *v104 = *v105;
  v106 = v104[1];
  v104[1] = v105[1];
  swift_bridgeObjectRelease(v106);
LABEL_54:
  v107 = (_QWORD *)(((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  v108 = (_QWORD *)(((unint64_t)a2 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v107 = *v108;
  v107[1] = v108[1];
  v109 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v109 + 40))(((unint64_t)v107 + *(unsigned __int8 *)(v109 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80), ((unint64_t)v108 + *(unsigned __int8 *)(v109 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80));
  return a1;
}

uint64_t sub_290B8C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  unint64_t v24;
  unsigned int v25;

  v6 = *(_QWORD *)(type metadata accessor for ArtworkCrop(0) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = v8 - 1;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v9)
    v12 = v9;
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = (((*(_QWORD *)(v6 + 64) + ((v13 + 130) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8) + 26) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = v15 + 16;
  if (a2 <= v12)
    goto LABEL_27;
  v17 = ((v16 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15) + *(_QWORD *)(v10 + 64);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v21 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 < 2)
    {
LABEL_27:
      if (v9 < v11)
        return (*(uint64_t (**)(unint64_t, _QWORD))(v10 + 48))((v16 + ((a1 + v14 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15, *(unsigned int *)(v10 + 84));
      if ((v7 & 0x80000000) != 0)
      {
        v25 = (*(uint64_t (**)(unint64_t))(v6 + 48))((((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
                                                                       + 31) & 0xFFFFFFFFFFFFFFF8)
                                                                     + v13
                                                                     + 58) & ~v13);
      }
      else
      {
        v24 = *(_QWORD *)(a1 + 8);
        if (v24 >= 0xFFFFFFFF)
          LODWORD(v24) = -1;
        v25 = v24 + 1;
      }
      if (v25 >= 2)
        return v25 - 1;
      else
        return 0;
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_27;
LABEL_18:
  v22 = (v19 - 1) << v18;
  if (v17 > 3)
    v22 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v23 = ((v16 + ((v14 + 23) & 0xFFFFFFF8)) & ~(_DWORD)v15) + *(_DWORD *)(v10 + 64);
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  return v12 + v22 + 1;
}

void sub_290DB0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v8 = *(_QWORD *)(type metadata accessor for ArtworkCrop(0) - 8);
  if (*(_DWORD *)(v8 + 84) <= 0x7FFFFFFFu)
    v9 = 0x7FFFFFFF;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v10 + 84) <= (v9 - 1))
    v11 = v9 - 1;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = ((*(unsigned __int8 *)(v10 + 80)
        + 16
        + ((((((*(_QWORD *)(v8 + 64)
              + ((*(unsigned __int8 *)(v8 + 80) + 130) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
              + 7) & 0xFFFFFFFFFFFFFFF8)
            + 26) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(_QWORD *)(v10 + 64);
  if (a3 <= v11)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v11 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = &dword_4;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = &dword_0 + 1;
  }
  if (v11 < a2)
  {
    v14 = ~v11 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8
                           * (((*(_BYTE *)(v10 + 80)
                              + 16
                              + ((((((*(_BYTE *)(v8 + 64) + ((*(_BYTE *)(v8 + 80) - 126) & ~*(_BYTE *)(v8 + 80)) + 7) & 0xF8)
                                  + 26) & 0xF8)
                                + 23) & 0xF8)) & ~*(_BYTE *)(v10 + 80))
                            + *(_BYTE *)(v10 + 64))));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

uint64_t type metadata accessor for SearchResultArtwork(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SearchResultArtwork);
}

unint64_t sub_291098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DFA90;
  if (!qword_3DFA90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DFA98);
    sub_29111C();
    sub_10EDC(&qword_3D10C0, &qword_3D10C8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DFA90);
  }
  return result;
}

unint64_t sub_29111C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DFAA0;
  if (!qword_3DFAA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DFAA8);
    sub_10EDC(&qword_3D10B0, &qword_3D10B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DFAA0);
  }
  return result;
}

uint64_t sub_2911A0()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DF9E8);
  v1[1] = sub_10EDC(&qword_3DF9F0, &qword_3DF9E8, (uint64_t)&protocol conformance descriptor for ContextMenuOverlay<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
}

uint64_t sub_291204(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_3341D0, 1);
}

uint64_t sub_291238(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v1 = *a1;
  v2 = a1[1];
  v4[0] = type metadata accessor for Artwork(255);
  v4[1] = v1;
  v4[2] = sub_89A0(&qword_3D0E68, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
  v4[3] = v2;
  return swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
}

double static NSDirectionalEdgeInsets.- prefix(_:)(double a1)
{
  return -a1;
}

double sub_2912D0(uint64_t a1, id a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  double v11;
  double v12;
  id v13;
  double v14;
  double MinX;
  double v16;
  double MinY;
  double Width;
  double Height;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  objc_msgSend(a2, "displayScale");
  v12 = v11;
  if (v11 < COERCE_DOUBLE(1))
  {
    v13 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v13, "scale");
    v12 = v14;

  }
  v21.origin.x = a3;
  v21.origin.y = a4;
  v21.size.width = a5;
  v21.size.height = a6;
  MinX = CGRectGetMinX(v21);
  v16 = CGFloat.rounded(_:toScale:)(a1, v12, MinX);
  v22.origin.x = a3;
  v22.origin.y = a4;
  v22.size.width = a5;
  v22.size.height = a6;
  MinY = CGRectGetMinY(v22);
  CGFloat.rounded(_:toScale:)(a1, v12, MinY);
  v23.origin.x = a3;
  v23.origin.y = a4;
  v23.size.width = a5;
  v23.size.height = a6;
  Width = CGRectGetWidth(v23);
  CGFloat.rounded(_:toScale:)(a1, v12, Width);
  v24.origin.x = a3;
  v24.origin.y = a4;
  v24.size.width = a5;
  v24.size.height = a6;
  Height = CGRectGetHeight(v24);
  CGFloat.rounded(_:toScale:)(a1, v12, Height);
  return v16;
}

double static CGSize.max.getter()
{
  return 9.22337204e18;
}

double sub_291438(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9, double a10, double a11, double a12)
{
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MinX;
  double v28;
  double MinY;
  double v30;
  double MaxX;
  double v32;
  CGFloat v33;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;

  v36.origin.x = UIEdgeInsetsInsetRect(a9, a10, a11, a12, a1, a2);
  y = v36.origin.y;
  width = v36.size.width;
  height = v36.size.height;
  MinX = CGRectGetMinX(v36);
  v37.origin.x = a5;
  v37.origin.y = a6;
  v37.size.width = a7;
  v37.size.height = a8;
  v28 = CGRectGetMinX(v37);
  if (MinX <= v28)
    MinX = v28;
  v38.origin.x = MinX;
  v38.origin.y = y;
  v38.size.width = width;
  v38.size.height = height;
  MinY = CGRectGetMinY(v38);
  v39.origin.x = a5;
  v39.origin.y = a6;
  v39.size.width = a7;
  v39.size.height = a8;
  v30 = CGRectGetMinY(v39);
  if (MinY <= v30)
    MinY = v30;
  v40.origin.x = MinX;
  v40.origin.y = MinY;
  v40.size.width = width;
  v40.size.height = height;
  MaxX = CGRectGetMaxX(v40);
  v41.origin.x = a5;
  v41.origin.y = a6;
  v41.size.width = a7;
  v41.size.height = a8;
  v32 = CGRectGetMaxX(v41);
  if (v32 < MaxX)
    MaxX = v32;
  v42.origin.x = MinX;
  v42.origin.y = MinY;
  v42.size.width = width;
  v42.size.height = height;
  v33 = MaxX - CGRectGetMinX(v42);
  v43.origin.x = MinX;
  v43.origin.y = MinY;
  v43.size.width = v33;
  v43.size.height = height;
  CGRectGetMaxY(v43);
  v44.origin.x = a5;
  v44.origin.y = a6;
  v44.size.width = a7;
  v44.size.height = a8;
  CGRectGetMaxY(v44);
  v45.origin.x = MinX;
  v45.origin.y = MinY;
  v45.size.width = v33;
  v45.size.height = height;
  CGRectGetMinY(v45);
  return MinX;
}

uint64_t *sub_2915B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v6 = v4;
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

double sub_291678(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  }
  return result;
}

uint64_t *sub_2916DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = a1;
    v7 = v4;
    v8 = 1;
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    swift_retain(v9);
    v6 = a1;
    v7 = v4;
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v7, v8);
  return a1;
}

uint64_t *sub_291778(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_D1D4((uint64_t)a1, &qword_3D0DE0);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = a1;
      v7 = v4;
      v8 = 1;
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      v6 = a1;
      v7 = v4;
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(v6, v7, v8);
  }
  return a1;
}

void *sub_29182C(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload(a1, v4, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_2918C4(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_D1D4((uint64_t)a1, &qword_3D0DE0);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload(a1, v4, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_291974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_291980);
}

uint64_t sub_291980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFAB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2919C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2919CC);
}

uint64_t sub_2919CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFAB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CategorySelectionContainerModifier(uint64_t a1)
{
  uint64_t result;

  result = qword_3DFB10;
  if (!qword_3DFB10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CategorySelectionContainerModifier);
  return result;
}

void sub_291A4C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_291AB4(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

void sub_291AB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3DFB20)
  {
    v2 = type metadata accessor for ColorScheme(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3DFB20);
  }
}

uint64_t sub_291B08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_33422C, 1);
}

uint64_t sub_291B18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t KeyPath;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _OWORD v53[2];
  uint64_t v54;

  v50 = a1;
  v52 = a2;
  v2 = type metadata accessor for ColorScheme(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v51 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char **)((char *)&v48 - v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFB50);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_3DFB58);
  __chkstk_darwin(v48);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFB60);
  __chkstk_darwin(v49);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CF8C0 != -1)
    swift_once(&qword_3CF8C0, sub_1B020C);
  v18 = __swift_project_value_buffer(v15, (uint64_t)qword_3FCCC8);
  sub_291F54(v18, (uint64_t)v17);
  sub_156A8(v7);
  v19 = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 88))(v7, v2);
  v21 = enum case for ColorScheme.dark(_:);
  if (v19 == enum case for ColorScheme.dark(_:))
  {
    v22 = static Color.white.getter(v20);
    v23 = Color.opacity(_:)(0.2);
    swift_release(v22);
  }
  else
  {
    v24 = static Color.black.getter(v20);
    v23 = Color.opacity(_:)(0.08);
    v25 = swift_release(v24);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v3 + 8))(v7, v2, v25);
  }
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v53, 0, 0, _swiftEmptyArrayStorage, 1.0, 10.0, 0.0);
  sub_291F54((uint64_t)v17, (uint64_t)v10);
  v26 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DFB68) + 36)];
  v27 = v53[1];
  *(_OWORD *)v26 = v53[0];
  *((_OWORD *)v26 + 1) = v27;
  *((_QWORD *)v26 + 4) = v54;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFB70);
  *(_QWORD *)&v10[*(int *)(v28 + 52)] = v23;
  *(_WORD *)&v10[*(int *)(v28 + 56)] = 256;
  v30 = static Alignment.center.getter(v28, v29);
  v32 = v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFB78);
  v34 = (uint64_t *)&v10[*(int *)(v33 + 36)];
  *v34 = v30;
  v34[1] = v32;
  v36 = static Alignment.center.getter(v33, v35);
  v38 = v37;
  v39 = (uint64_t)&v12[*((int *)v48 + 9)];
  v48 = v17;
  sub_D184((uint64_t)v10, v39, &qword_3DFB50);
  v40 = (uint64_t *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DFB80) + 36));
  *v40 = v36;
  v40[1] = v38;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFB88);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v12, v50, v41);
  sub_D1D4((uint64_t)v10, &qword_3DFB50);
  v42 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 104))(v51, v21, v2);
  KeyPath = swift_getKeyPath(&unk_3045A8);
  v44 = (uint64_t *)&v14[*(int *)(v49 + 36)];
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DE848);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)v44 + *(int *)(v45 + 28), v42, v2);
  *v44 = KeyPath;
  sub_D184((uint64_t)v12, (uint64_t)v14, &qword_3DFB58);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v42, v2);
  sub_D1D4((uint64_t)v12, &qword_3DFB58);
  v46 = v52;
  sub_D184((uint64_t)v14, v52, &qword_3DFB60);
  *(_BYTE *)(v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DFB90) + 36)) = 1;
  sub_D1D4((uint64_t)v14, &qword_3DFB60);
  return sub_1C690((uint64_t)v48);
}

uint64_t sub_291F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_291F98()
{
  return EnvironmentValues.colorScheme.getter();
}

unint64_t sub_291FC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DFB98;
  if (!qword_3DFB98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DFB90);
    sub_29202C();
    sub_29214C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DFB98);
  }
  return result;
}

unint64_t sub_29202C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DFBA0;
  if (!qword_3DFBA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DFB60);
    sub_2920B0();
    sub_10EDC(&qword_3DE8C0, &qword_3DE848, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DFBA0);
  }
  return result;
}

unint64_t sub_2920B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DFBA8;
  if (!qword_3DFBA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DFB58);
    sub_10EDC(&qword_3DFBB0, &qword_3DFB88, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10EDC(&qword_3DFBB8, &qword_3DFB80, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DFBA8);
  }
  return result;
}

unint64_t sub_29214C()
{
  unint64_t result;

  result = qword_3DFBC0;
  if (!qword_3DFBC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AccessibilityIgnoresInvertColorsViewModifier, &type metadata for _AccessibilityIgnoresInvertColorsViewModifier);
    atomic_store(result, (unint64_t *)&qword_3DFBC0);
  }
  return result;
}

uint64_t sub_292190(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  id v11;
  void (*v12)(_QWORD *, _QWORD);
  __n128 v13;
  uint64_t v14;
  id v15;
  void (*v16)(_QWORD *, _QWORD);
  unint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD);
  _QWORD *boxed_opaque_existential_0;
  _QWORD v25[5];

  v6 = type metadata accessor for UIListContentConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewListCell.defaultContentConfiguration()(v8);
  if ((a3 & 1) != 0)
  {
    v13 = swift_retain(a1);
    v14 = Action.title.getter(v13);
    UIListContentConfiguration.text.setter(v14);
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v15 = (id)qword_3D0890;
    v16 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v25);
    UIListContentConfiguration.TextProperties.color.setter(v15);
    v16(v25, 0);
    sub_D170(a1, a2, 1);
  }
  else
  {
    swift_bridgeObjectRetain(a2);
    UIListContentConfiguration.text.setter(a1);
    v11 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    v12 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v25);
    UIListContentConfiguration.TextProperties.color.setter(v11);
    v12(v25, 0);
  }
  v17 = sub_A1E18();
  v18 = (void *)static UIFont.body.getter(v17);
  v19 = (void *)static UIFont.title3.getter(v18);
  v20 = static UIFont.preferredFont(iOS:mac:)(v18, v19);

  v21 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v25);
  UIListContentConfiguration.TextProperties.font.setter(v20);
  v21(v25, 0);
  v25[3] = v6;
  v25[4] = &protocol witness table for UIListContentConfiguration;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v25);
  (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 16))(boxed_opaque_existential_0, v10, v6);
  UICollectionViewCell.contentConfiguration.setter(v25);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_2923AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v7 + 104))(v6, enum case for ShelfCellListSeparatorMode.Layout.marginToMargin(_:));
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Placement.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v3, v6);
}

id sub_292558()
{
  return sub_29285C(type metadata accessor for LabelCell);
}

uint64_t type metadata accessor for LabelCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews9LabelCell);
}

uint64_t sub_292594(uint64_t a1)
{
  return sub_292190(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2925A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

double sub_2925AC()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews9LabelCell_objectGraph)).n128_u64[0];
  return result;
}

uint64_t sub_2925C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews9LabelCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews9LabelCell_objectGraph) = a1;
  swift_retain(a1);
  return swift_release(v2);
}

uint64_t sub_2925F0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_3047B0, a2);
  return TypedShelfUIKitCell.apply(model:)(a1, a2, WitnessTable);
}

void sub_292630()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ELL, 0x8000000000318930, "ShelfKitCollectionViews/LabelCell.swift", 39, 2, 48, 0);
  __break(1u);
}

uint64_t sub_292688(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_3047B0, a1);
  return static TypedShelfUIKitCell.modelType.getter(a1, WitnessTable);
}

uint64_t sub_2926BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v7 + 104))(v6, enum case for ShelfCellListSeparatorMode.Placement.never(_:));
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Layout.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v6, v3);
}

id sub_292850()
{
  return sub_29285C(type metadata accessor for LabelWithoutTopSeparatorCell);
}

id sub_29285C(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for LabelWithoutTopSeparatorCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews28LabelWithoutTopSeparatorCell);
}

uint64_t sub_2928AC()
{
  return sub_292960(&qword_3DFC20, (uint64_t)&unk_304630);
}

uint64_t sub_2928D0()
{
  return sub_292960(&qword_3D5BE8, (uint64_t)&unk_3046B8);
}

uint64_t sub_2928F4()
{
  return sub_292960(&qword_3DFC28, (uint64_t)&unk_304690);
}

uint64_t sub_292918()
{
  return sub_292960(&qword_3DFC30, (uint64_t)&unk_3046E8);
}

uint64_t sub_29293C()
{
  return sub_292960(&qword_3DFC38, (uint64_t)&unk_304710);
}

uint64_t sub_292960(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for LabelCell();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2929A0()
{
  unint64_t result;

  result = qword_3DFC40;
  if (!qword_3DFC40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Label, &type metadata for Label);
    atomic_store(result, (unint64_t *)&qword_3DFC40);
  }
  return result;
}

double sub_2929E4()
{
  double result;

  result = 10.0;
  xmmword_3DFC48 = xmmword_3047F0;
  *(_OWORD *)algn_3DFC58 = xmmword_3047F0;
  return result;
}

void sub_2929FC()
{
  qword_3DFC68 = 0x4014000000000000;
}

void sub_292A0C()
{
  qword_3DFC70 = 0x4034000000000000;
}

void sub_292A1C()
{
  qword_3DFC78 = 0x4014000000000000;
}

void sub_292A2C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  NSString v42;
  id v43;
  void *v44;
  uint64_t v45;
  NSString v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  NSString v72;
  id v73;
  void *v74;
  NSString v75;
  id v76;
  void *v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  NSString v90;
  id v91;
  void *v92;
  NSString v93;
  id v94;
  void *v95;
  void *v96;
  void *v97;
  uint64_t v98;
  void *v99;
  double *v100;
  double v101;
  id v102;
  id v103;
  id v104;
  void *object;
  Swift::String v106;
  Swift::String v107;
  void *v108;
  NSString v109;
  void *v110;
  double v111;
  id v112;
  id v113;
  id v114;
  void *v115;
  Swift::String v116;
  Swift::String v117;
  void *v118;
  NSString v119;
  char *v120;
  uint64_t v121;
  uint64_t (**v122)(char);
  uint64_t v123;
  uint64_t v124;
  char *v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  objc_super v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  __int16 v154;
  Swift::String v155;
  Swift::String v156;

  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_delegate];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_playbackProgress];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_durationFormatter;
  v12 = objc_allocWithZone((Class)NSDateComponentsFormatter);
  v13 = v4;
  v14 = objc_msgSend(v12, "init");
  objc_msgSend(v14, "setUnitsStyle:", 0);
  objc_msgSend(v14, "setAllowedUnits:", 192);
  objc_msgSend(v14, "setZeroFormattingBehavior:", 0x10000);
  *(_QWORD *)&v4[v11] = v14;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_backdrop] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoControlBackdrop()), "initWithFrame:", a1, a2, a3, a4);
  v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", a1, a2, a3, a4);
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_progressBar] = v15;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", a1, a2, a3, a4);
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_progressBarFill] = v16;
  v17 = objc_allocWithZone((Class)type metadata accessor for VideoControlButton());
  sub_2A48C0(2, 0, 1, 0);
  v139 = v13;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_playPauseButton] = v18;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF670 != -1)
    swift_once(&qword_3CF670, sub_142EC0);
  v19 = *(_QWORD *)byte_3FC958;
  v20 = (void *)qword_3FC960;
  v21 = qword_3FC968;
  v22 = qword_3FC970;
  v23 = qword_3FC978;
  v24 = qword_3FC980;
  v25 = word_3FC988;
  v26 = HIBYTE(word_3FC988);
  v134 = *(_QWORD *)algn_3FC938;
  v137 = (void *)qword_3FC930;
  v143 = qword_3FC930;
  v144 = *(_QWORD *)algn_3FC938;
  v130 = qword_3FC948;
  v132 = qword_3FC940;
  v145 = qword_3FC940;
  v146 = qword_3FC948;
  v128 = qword_3FC950;
  v147 = qword_3FC950;
  v148 = *(_QWORD *)byte_3FC958;
  v149 = qword_3FC960;
  v150 = qword_3FC968;
  v151 = qword_3FC970;
  v152 = qword_3FC978;
  v153 = qword_3FC980;
  v154 = word_3FC988;
  sub_DDA0((void *)qword_3FC930, *(uint64_t *)algn_3FC938, qword_3FC940, qword_3FC948, qword_3FC950, byte_3FC958[0], (void *)qword_3FC960, qword_3FC968, qword_3FC970, qword_3FC978, qword_3FC980, word_3FC988, SHIBYTE(word_3FC988));
  *(_QWORD *)&v139[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_currentTimeLabel] = sub_A96AC((uint64_t)&v143, 1, 0, 1);
  v143 = (uint64_t)v137;
  v144 = v134;
  v145 = v132;
  v146 = v130;
  v147 = v128;
  v148 = v19;
  v149 = (uint64_t)v20;
  v150 = v21;
  v151 = v22;
  v152 = v23;
  v153 = v24;
  LOBYTE(v154) = v25;
  HIBYTE(v154) = v26;
  sub_DDA0(v137, v134, v132, v130, v128, v19, v20, v21, v22, v23, v24, v25, v26);
  *(_QWORD *)&v139[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_totalDurationLabel] = sub_A96AC((uint64_t)&v143, 1, 0, 1);

  v142.receiver = v139;
  v142.super_class = (Class)type metadata accessor for FullScreenVideoControls();
  v27 = (char *)objc_msgSendSuper2(&v142, "initWithFrame:", a1, a2, a3, a4);
  v129 = OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_backdrop;
  v131 = v27;
  v28 = *(_QWORD *)&v27[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_backdrop];
  v29 = v27;
  objc_msgSend(v29, "addSubview:", v28);
  v138 = OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_currentTimeLabel;
  v133 = v29;
  v30 = *(void **)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_currentTimeLabel];
  v31 = (void *)objc_opt_self(UIColor);
  v32 = v30;
  v135 = v31;
  v33 = objc_msgSend(v31, "whiteColor");
  v34 = objc_msgSend(v33, "colorWithAlphaComponent:", 0.45);

  v140 = kCAFilterPlusL;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v36 = v35;
  v37 = objc_opt_self(UILabel);
  v38 = swift_dynamicCastObjCClass(v32, v37);
  if (v38)
  {
    v39 = (void *)v38;
    v126 = v32;
    objc_msgSend(v39, "_setTextColorFollowsTintColor:", 1);
    objc_msgSend(v39, "setTintColor:", v34);
    v40 = objc_msgSend(v39, "layer");
    v41 = objc_allocWithZone((Class)CAFilter);
    swift_bridgeObjectRetain(v36);
    v42 = String._bridgeToObjectiveC()();
    v43 = objc_msgSend(v41, "initWithType:", v42, swift_bridgeObjectRelease(v36).n128_f64[0]);

    objc_msgSend(v40, "setCompositingFilter:", v43);
    swift_bridgeObjectRelease(v36);

    v44 = v135;
    goto LABEL_8;
  }
  v45 = objc_opt_self(_UIVisualEffectTintLayerConfig);
  v46 = String._bridgeToObjectiveC()();
  v47 = (void *)v45;
  v48 = v34;
  v40 = objc_msgSend(v47, "layerWithTintColor:filterType:", v34, v46);

  v49 = objc_msgSend((id)objc_opt_self(_UIVisualEffectConfig), "configWithContentConfig:", v40);
  if (!v49)
  {
    __break(1u);
    goto LABEL_26;
  }
  v50 = v49;
  v43 = objc_msgSend(v49, "contentConfig");

  v44 = v135;
  if (!v43)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  objc_msgSend(v43, "configureLayerView:", v32);

  swift_bridgeObjectRelease(v36);
LABEL_8:

  v136 = OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_progressBar;
  v51 = *(id *)&v133[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_progressBar];
  v52 = objc_msgSend(v44, "whiteColor");
  v53 = objc_msgSend(v52, "colorWithAlphaComponent:", 0.1);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
  v55 = v54;
  sub_9F1DC((uint64_t)v51, (uint64_t)v53, 1.0);

  swift_bridgeObjectRelease(v55);
  v127 = OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_progressBarFill;
  v56 = *(id *)&v133[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_progressBarFill];
  v57 = objc_msgSend(v44, "whiteColor");
  v58 = objc_msgSend(v57, "colorWithAlphaComponent:", 0.35);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
  v60 = v59;
  sub_9F1DC((uint64_t)v56, (uint64_t)v58, 1.0);

  swift_bridgeObjectRelease(v60);
  v61 = *(id *)&v133[v138];
  v62 = objc_msgSend(v44, "whiteColor");
  v63 = objc_msgSend(v62, "colorWithAlphaComponent:", 0.45);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
  v65 = v64;
  v66 = objc_opt_self(UILabel);
  v67 = swift_dynamicCastObjCClass(v61, v66);
  if (v67)
  {
    v68 = (void *)v67;
    v69 = v61;
    objc_msgSend(v68, "_setTextColorFollowsTintColor:", 1);
    objc_msgSend(v68, "setTintColor:", v63);
    v70 = objc_msgSend(v68, "layer");
    v71 = objc_allocWithZone((Class)CAFilter);
    swift_bridgeObjectRetain(v65);
    v72 = String._bridgeToObjectiveC()();
    v73 = objc_msgSend(v71, "initWithType:", v72, swift_bridgeObjectRelease(v65).n128_f64[0]);

    objc_msgSend(v70, "setCompositingFilter:", v73);
    swift_bridgeObjectRelease(v65);

    goto LABEL_13;
  }
  v74 = (void *)objc_opt_self(_UIVisualEffectTintLayerConfig);
  v75 = String._bridgeToObjectiveC()();
  v70 = objc_msgSend(v74, "layerWithTintColor:filterType:", v63, v75);

  v76 = objc_msgSend((id)objc_opt_self(_UIVisualEffectConfig), "configWithContentConfig:", v70);
  if (!v76)
    goto LABEL_27;
  v77 = v76;
  v73 = objc_msgSend(v76, "contentConfig");

  if (!v73)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v73, "configureLayerView:", v61);

  swift_bridgeObjectRelease(v65);
LABEL_13:

  v78 = OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_totalDurationLabel;
  v79 = *(id *)&v133[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_totalDurationLabel];
  v80 = objc_msgSend(v44, "whiteColor");
  v81 = objc_msgSend(v80, "colorWithAlphaComponent:", 0.45);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
  v83 = v82;
  v84 = objc_opt_self(UILabel);
  v85 = swift_dynamicCastObjCClass(v79, v84);
  if (!v85)
  {
    v92 = (void *)objc_opt_self(_UIVisualEffectTintLayerConfig);
    v93 = String._bridgeToObjectiveC()();
    v88 = objc_msgSend(v92, "layerWithTintColor:filterType:", v81, v93);

    v94 = objc_msgSend((id)objc_opt_self(_UIVisualEffectConfig), "configWithContentConfig:", v88);
    if (v94)
    {
      v95 = v94;
      v91 = objc_msgSend(v94, "contentConfig");

      if (v91)
      {
        objc_msgSend(v91, "configureLayerView:", v79);

        swift_bridgeObjectRelease(v83);
        goto LABEL_18;
      }
LABEL_30:
      __break(1u);
      return;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v86 = (void *)v85;
  v87 = v79;
  objc_msgSend(v86, "_setTextColorFollowsTintColor:", 1);
  objc_msgSend(v86, "setTintColor:", v81);
  v88 = objc_msgSend(v86, "layer");
  v89 = objc_allocWithZone((Class)CAFilter);
  swift_bridgeObjectRetain(v83);
  v90 = String._bridgeToObjectiveC()();
  v91 = objc_msgSend(v89, "initWithType:", v90, swift_bridgeObjectRelease(v83).n128_f64[0]);

  objc_msgSend(v88, "setCompositingFilter:", v91);
  swift_bridgeObjectRelease(v83);

LABEL_18:
  v96 = *(void **)(*(_QWORD *)&v131[v129] + OBJC_IVAR____TtC23ShelfKitCollectionViews20VideoControlBackdrop_contentView);
  objc_msgSend(v96, "addSubview:", *(_QWORD *)&v133[v136]);
  objc_msgSend(v96, "addSubview:", *(_QWORD *)&v133[v127]);
  v141 = OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_playPauseButton;
  objc_msgSend(v96, "addSubview:", *(_QWORD *)&v133[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_playPauseButton]);
  v97 = *(void **)&v133[v138];
  objc_msgSend(v96, "addSubview:", v97);
  objc_msgSend(v96, "addSubview:", *(_QWORD *)&v133[v78]);
  v98 = OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_durationFormatter;
  v99 = *(void **)&v133[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_durationFormatter];
  v100 = (double *)&v133[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_playbackProgress];
  v101 = *(double *)&v133[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_playbackProgress];
  v102 = v97;
  v103 = objc_msgSend(v99, "stringFromTimeInterval:", v101);
  if (v103)
  {
    v104 = v103;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v103);
  }
  else
  {
    v104 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v155._object = (void *)0xE000000000000000;
    v106._object = (void *)0x8000000000318A70;
    v106._countAndFlagsBits = 0xD00000000000001FLL;
    v107._countAndFlagsBits = 0;
    v107._object = (void *)0xE000000000000000;
    v155._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v106, (Swift::String_optional)0, (NSBundle)v104, v107, v155)._object;
  }
  v108 = object;

  v109 = String._bridgeToObjectiveC()();
  objc_msgSend(v102, "setText:", v109, swift_bridgeObjectRelease(v108).n128_f64[0]);

  v110 = *(void **)&v133[v98];
  v111 = v100[1];
  v112 = *(id *)&v133[v78];
  v113 = objc_msgSend(v110, "stringFromTimeInterval:", v111);
  if (v113)
  {
    v114 = v113;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
  }
  else
  {
    v114 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v156._object = (void *)0xE000000000000000;
    v116._object = (void *)0x8000000000318A70;
    v116._countAndFlagsBits = 0xD00000000000001FLL;
    v117._countAndFlagsBits = 0;
    v117._object = (void *)0xE000000000000000;
    v156._countAndFlagsBits = 0;
    v115 = NSLocalizedString(_:tableName:bundle:value:comment:)(v116, (Swift::String_optional)0, (NSBundle)v114, v117, v156)._object;
  }
  v118 = v115;

  v119 = String._bridgeToObjectiveC()();
  objc_msgSend(v112, "setText:", v119, swift_bridgeObjectRelease(v118).n128_f64[0]);

  v120 = *(char **)&v133[v141];
  v121 = swift_allocObject(&unk_38FD88, 24, 7);
  swift_unknownObjectWeakInit(v121 + 16, v133);
  v122 = (uint64_t (**)(char))&v120[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectionHandler];
  v123 = *(_QWORD *)&v120[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectionHandler];
  v124 = *(_QWORD *)&v120[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectionHandler + 8];
  *v122 = sub_293F78;
  v122[1] = (uint64_t (*)(char))v121;
  v125 = v120;
  swift_retain(v121);
  sub_1D618(v123, v124);

  swift_release(v121);
}

uint64_t sub_2937A8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  uint64_t v14;
  _BYTE v15[24];

  v2 = a2 + 16;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess(v2, v15, 0, 0);
    result = swift_unknownObjectWeakLoadStrong(v2);
    if (!result)
      return result;
    v4 = (void *)result;
    sub_293F80(result + OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_delegate, (uint64_t)v13);

    if (v14)
    {
      sub_1D5D4((uint64_t)v13, (uint64_t)v10);
      sub_293FC8((uint64_t)v13);
      v5 = v11;
      v6 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
      return __swift_destroy_boxed_opaque_existential_0(v10);
    }
  }
  else
  {
    swift_beginAccess(v2, v15, 0, 0);
    result = swift_unknownObjectWeakLoadStrong(v2);
    if (!result)
      return result;
    v7 = (void *)result;
    sub_293F80(result + OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_delegate, (uint64_t)v13);

    if (v14)
    {
      sub_1D5D4((uint64_t)v13, (uint64_t)v10);
      sub_293FC8((uint64_t)v13);
      v8 = v11;
      v9 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      return __swift_destroy_boxed_opaque_existential_0(v10);
    }
  }
  return sub_293FC8((uint64_t)v13);
}

id sub_293918()
{
  char *v0;
  void *v1;
  BOOL v2;
  double v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double MaxX;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  CGFloat v29;
  double v30;
  double Width;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double Height;
  double v38;
  double v39;
  void *v40;
  double v41;
  void *v42;
  double v43;
  double v44;
  objc_super v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v46.receiver = v0;
  v46.super_class = (Class)type metadata accessor for FullScreenVideoControls();
  objc_msgSendSuper2(&v46, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_backdrop];
  objc_msgSend(v0, "bounds");
  v2 = CGRectGetHeight(v47) <= 40.0;
  v3 = 8.0;
  if (!v2)
    v3 = 16.0;
  objc_msgSend(v1, "_setContinuousCornerRadius:", v3);
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v4 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_playPauseButton];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v4, "sizeThatFits:", v5, v6);
  v8 = v7;
  v10 = v9;
  if (qword_3CFCB8 != -1)
    swift_once(&qword_3CFCB8, sub_2929E4);
  v11 = *((double *)&xmmword_3DFC48 + 1);
  objc_msgSend(v0, "bounds");
  objc_msgSend(v4, "setFrame:", v11, (CGRectGetHeight(v48) - v10) * 0.5, v8, v10);
  v12 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_currentTimeLabel];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v12, "sizeThatFits:", v13, v14);
  v16 = v15;
  v18 = v17;
  objc_msgSend(v0, "bounds");
  v19 = (CGRectGetHeight(v49) - v18) * 0.5;
  objc_msgSend(v4, "frame");
  MaxX = CGRectGetMaxX(v50);
  if (qword_3CFCC8 != -1)
    swift_once(&qword_3CFCC8, sub_292A0C);
  objc_msgSend(v12, "setFrame:", MaxX + *(double *)&qword_3DFC70, v19, v16, v18);
  v21 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_totalDurationLabel];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v21, "sizeThatFits:", v22, v23);
  v25 = v24;
  v27 = v26;
  objc_msgSend(v0, "bounds");
  v28 = (CGRectGetHeight(v51) - v27) * 0.5;
  objc_msgSend(v0, "bounds");
  v29 = CGRectGetMaxX(v52);
  v30 = *(double *)&qword_3DFC60;
  objc_msgSend(v21, "setFrame:", v29 - v25 - *(double *)&qword_3DFC60, v28, v25, v27);
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v53);
  objc_msgSend(v12, "frame");
  v32 = Width - CGRectGetMaxX(v54);
  objc_msgSend(v21, "frame");
  v33 = v32 - CGRectGetWidth(v55) - v30;
  if (qword_3CFCD0 != -1)
    swift_once(&qword_3CFCD0, sub_292A1C);
  v34 = *(double *)&qword_3DFC78;
  v35 = v33 - (v34 + v34);
  objc_msgSend(v12, "frame");
  v36 = v34 + CGRectGetMaxX(v56);
  objc_msgSend(v0, "bounds");
  Height = CGRectGetHeight(v57);
  if (qword_3CFCC0 != -1)
    swift_once(&qword_3CFCC0, sub_2929FC);
  v38 = *(double *)&qword_3DFC68;
  v39 = (Height - *(double *)&qword_3DFC68) * 0.5;
  v40 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_progressBar];
  v41 = *(double *)&qword_3DFC68 * 0.5;
  UIRoundToViewScale(v40, *(double *)&qword_3DFC68 * 0.5);
  objc_msgSend(v40, "_setCornerRadius:");
  objc_msgSend(v40, "setFrame:", v36, v39, v35, v38);
  v42 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_progressBarFill];
  UIRoundToViewScale(v42, v41);
  objc_msgSend(v42, "_setCornerRadius:");
  v43 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_playbackProgress + 8];
  v44 = 0.0;
  if (v43 > 0.0)
    v44 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_playbackProgress] / v43;
  return objc_msgSend(v42, "setFrame:", v36, v39, v35 * v44, v38);
}

id sub_293D80()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenVideoControls();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FullScreenVideoControls()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23FullScreenVideoControls);
}

void sub_293E68()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_delegate];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_playbackProgress];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews23FullScreenVideoControls_durationFormatter;
  v4 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
  objc_msgSend(v4, "setUnitsStyle:", 0);
  objc_msgSend(v4, "setAllowedUnits:", 192);
  objc_msgSend(v4, "setZeroFormattingBehavior:", 0x10000);
  *(_QWORD *)&v0[v3] = v4;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/FullScreenVideoControls.swift", 53, 2, 110, 0);
  __break(1u);
}

uint64_t sub_293F54()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_293F78(char a1)
{
  uint64_t v1;

  return sub_2937A8(a1, v1);
}

uint64_t sub_293F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFCF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_293FC8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFCF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_294008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeometryProxy(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_294044(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GeometryProxy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_294078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_2940BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_294100(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_294144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_294188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_294194);
}

uint64_t sub_294194(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeometryProxy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2941D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2941DC);
}

uint64_t sub_2941DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeometryProxy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultipleSubscriptionTextView(uint64_t a1)
{
  uint64_t result;

  result = qword_3DFD50;
  if (!qword_3DFD50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MultipleSubscriptionTextView);
  return result;
}

uint64_t sub_294258(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for GeometryProxy(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_2942C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_3343C0, 1);
}

void *sub_2942D0@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *result;
  _BYTE v22[416];
  char v23;
  _BYTE __src[400];

  v3 = GeometryProxy.size.getter(a2);
  v4 = SizeClass.init(width:)(v3);
  v5 = static HorizontalAlignment.center.getter(v4);
  sub_294434(v4, (uint64_t)__src, v3);
  v7 = static Edge.Set.leading.getter(v6);
  v8 = v7;
  v9 = static Edge.Set.trailing.getter(v7);
  v10 = Edge.Set.init(rawValue:)(0);
  v11 = Edge.Set.init(rawValue:)(v10);
  if (Edge.Set.init(rawValue:)(v11 & v8) != v8)
    v10 = Edge.Set.init(rawValue:)(v10 | v8);
  v12 = Edge.Set.init(rawValue:)(v10);
  if (Edge.Set.init(rawValue:)(v12 & v9) != v9)
    LOBYTE(v10) = Edge.Set.init(rawValue:)(v10 | v9);
  v13 = 0.0;
  if ((SizeClass.isIpadWide.getter(v4) & 1) == 0)
    v13 = SizeClass.margins(width:)(v4, v3);
  v22[408] = 1;
  memcpy(&v22[7], __src, 0x190uLL);
  v14 = EdgeInsets.init(_all:)(v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v23 = 0;
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  result = memcpy((void *)(a1 + 17), v22, 0x197uLL);
  *(_BYTE *)(a1 + 424) = v10;
  *(double *)(a1 + 432) = v14;
  *(_QWORD *)(a1 + 440) = v16;
  *(_QWORD *)(a1 + 448) = v18;
  *(_QWORD *)(a1 + 456) = v20;
  *(_BYTE *)(a1 + 464) = v23;
  return result;
}

void sub_294434(unsigned int a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *object;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  int v39;
  int v40;
  id v41;
  char v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  id v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  int v71;
  int v72;
  id v73;
  char v74;
  double v75;
  char v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t KeyPath;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  unsigned __int8 v130;
  uint64_t v131;
  unsigned __int8 v132;
  __int128 v133;
  uint64_t v134;
  unsigned __int8 v135;
  uint64_t v136;
  unsigned __int8 v137;
  __int128 v138;
  Swift::String v139;
  Swift::String v140;

  v5 = (void *)objc_opt_self(UITraitCollection);
  v6 = objc_msgSend(v5, "currentTraitCollection");
  v7 = UITraitCollection.interfaceIdiomIsMac.getter(v6);

  v11 = static Alignment.center.getter(v8, v9);
  if ((v7 & 1) != 0)
  {
    _FrameLayout.init(width:height:alignment:)(&v129, 0, 1, 0x404E800000000000, 0, v11, v10);
    v114 = xmmword_2ED840;
    v115 = v129;
    v116 = v130;
    v117 = v131;
    v118 = v132;
    v119 = v133;
    v120 = 0;
  }
  else
  {
    _FrameLayout.init(width:height:alignment:)(&v129, 0, 1, 0x4049000000000000, 0, v11, v10);
    v114 = xmmword_2ED840;
    v115 = v129;
    v116 = v130;
    v117 = v131;
    v118 = v132;
    v119 = v133;
    v120 = 1;
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFD88);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EA8);
  v14 = sub_294D28(&qword_3DFD90, &qword_3DFD88);
  v15 = sub_294D28((unint64_t *)&qword_3D0EB8, &qword_3D0EA8);
  _ConditionalContent<>.init(storage:)(&v114, v12, v13, v14, v15);
  v111 = v122;
  v112 = v121;
  v109 = v124;
  v110 = v123;
  v107 = *((_QWORD *)&v125 + 1);
  v108 = v125;
  v105 = v127;
  v106 = v126;
  v104 = v128;
  v16 = (void *)objc_opt_self(NSBundle);
  v17 = objc_msgSend(v16, "mainBundle");
  v18._countAndFlagsBits = 0xD000000000000028;
  v139._object = (void *)0x8000000000318AC0;
  v18._object = (void *)0x8000000000318A90;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v139._countAndFlagsBits = 0xD000000000000013;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v139)._object;

  v21 = static Font.largeTitle.getter();
  v23 = Text.font(_:)(v22);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_bridgeObjectRelease(object);
  v30 = swift_release(v21);
  v31 = Text.bold()(v23, v25, v27 & 1, v29, v30);
  v101 = v32;
  v102 = v31;
  v99 = v33;
  v103 = v34;
  sub_D170(v23, v25, v27 & 1);
  swift_bridgeObjectRelease(v29);
  KeyPath = swift_getKeyPath(&unk_304900);
  v35 = static Edge.Set.leading.getter(KeyPath);
  v36 = v35;
  v37 = static Edge.Set.trailing.getter(v35);
  v38 = Edge.Set.init(rawValue:)(0);
  v39 = Edge.Set.init(rawValue:)(v38);
  if (Edge.Set.init(rawValue:)(v39 & v36) != v36)
    v38 = Edge.Set.init(rawValue:)(v38 | v36);
  v40 = Edge.Set.init(rawValue:)(v38);
  if (Edge.Set.init(rawValue:)(v40 & v37) != v37)
    LOBYTE(v38) = Edge.Set.init(rawValue:)(v38 | v37);
  v41 = objc_msgSend(v5, "currentTraitCollection");
  v42 = UITraitCollection.interfaceIdiomIsMac.getter(v41);

  v43 = 0.0;
  if ((v42 & 1) == 0)
  {
    if ((SizeClass.isIpadWide.getter(a1) & 1) != 0)
    {
      v43 = 106.0;
    }
    else if ((SizeClass.isIpadWide.getter(a1) & 1) == 0)
    {
      v43 = SizeClass.margins(width:)(a1, a3);
    }
  }
  v44 = EdgeInsets.init(_all:)(v43);
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v51 = objc_msgSend(v5, "currentTraitCollection");
  v52 = UITraitCollection.interfaceIdiomIsMac.getter(v51);

  v56 = static Alignment.center.getter(v53, v54);
  if ((v52 & 1) != 0)
  {
    _FrameLayout.init(width:height:alignment:)(&v134, 0, 1, 0x4040800000000000, 0, v56, v55);
    v114 = xmmword_2ED840;
    v115 = v134;
    v116 = v135;
    v117 = v136;
    v118 = v137;
    v119 = v138;
    v120 = 0;
  }
  else
  {
    _FrameLayout.init(width:height:alignment:)(&v134, 0, 1, 0x402C000000000000, 0, v56, v55);
    v114 = xmmword_2ED840;
    v115 = v134;
    v116 = v135;
    v117 = v136;
    v118 = v137;
    v119 = v138;
    v120 = 1;
  }
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFD88);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EA8);
  v59 = sub_294D28(&qword_3DFD90, &qword_3DFD88);
  v60 = sub_294D28((unint64_t *)&qword_3D0EB8, &qword_3D0EA8);
  _ConditionalContent<>.init(storage:)(&v114, v57, v58, v59, v60);
  v97 = v122;
  v98 = v121;
  v95 = v124;
  v96 = v123;
  v93 = *((_QWORD *)&v125 + 1);
  v94 = v125;
  v91 = v127;
  v92 = v126;
  v61 = v128;
  v62 = objc_msgSend(v16, "mainBundle");
  v140._countAndFlagsBits = 0xD000000000000023;
  v63._countAndFlagsBits = 0xD00000000000002BLL;
  v140._object = (void *)0x8000000000318B10;
  v63._object = (void *)0x8000000000318AE0;
  v64._countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)v62, v64, v140);

  v66 = swift_getKeyPath(&unk_304900);
  v67 = static Edge.Set.leading.getter(v66);
  v68 = v67;
  v69 = static Edge.Set.trailing.getter(v67);
  v70 = Edge.Set.init(rawValue:)(0);
  v71 = Edge.Set.init(rawValue:)(v70);
  if (Edge.Set.init(rawValue:)(v71 & v68) != v68)
    v70 = Edge.Set.init(rawValue:)(v70 | v68);
  v72 = Edge.Set.init(rawValue:)(v70);
  if (Edge.Set.init(rawValue:)(v72 & v69) != v69)
    LOBYTE(v70) = Edge.Set.init(rawValue:)(v70 | v69);
  v73 = objc_msgSend(v5, "currentTraitCollection");
  v74 = UITraitCollection.interfaceIdiomIsMac.getter(v73);

  v75 = 0.0;
  if ((v74 & 1) == 0)
  {
    if ((SizeClass.isIpadWide.getter(a1) & 1) != 0)
    {
      v75 = 106.0;
    }
    else if ((SizeClass.isIpadWide.getter(a1) & 1) == 0)
    {
      v75 = SizeClass.margins(width:)(a1, a3);
    }
  }
  v76 = v99 & 1;
  v77 = EdgeInsets.init(_all:)(v75);
  v79 = v78;
  v81 = v80;
  v83 = v82;
  v84 = objc_msgSend(v5, "currentTraitCollection");
  v85 = UITraitCollection.interfaceIdiomIsMac.getter(v84);

  if ((v85 & 1) != 0)
    v88 = 0x403D000000000000;
  else
    v88 = 0x402C000000000000;
  v89 = static Alignment.center.getter(v86, v87);
  _FrameLayout.init(width:height:alignment:)(&v121, 0, 1, v88, 0, v89, v90);
  *(_QWORD *)a2 = v112;
  *(_QWORD *)(a2 + 8) = v111;
  *(_QWORD *)(a2 + 16) = v110;
  *(_QWORD *)(a2 + 24) = v109;
  *(_QWORD *)(a2 + 32) = v108;
  *(_QWORD *)(a2 + 40) = v107;
  *(_QWORD *)(a2 + 48) = v106;
  *(_QWORD *)(a2 + 56) = v105;
  LOBYTE(v114) = v104;
  *(_BYTE *)(a2 + 64) = v104;
  *(_BYTE *)(a2 + 120) = v38;
  *(_QWORD *)(a2 + 168) = v98;
  *(_QWORD *)(a2 + 176) = v97;
  *(_QWORD *)(a2 + 184) = v96;
  *(_QWORD *)(a2 + 192) = v95;
  *(_QWORD *)(a2 + 200) = v94;
  *(_QWORD *)(a2 + 208) = v93;
  *(_QWORD *)(a2 + 216) = v92;
  *(_QWORD *)(a2 + 224) = v91;
  *(_BYTE *)(a2 + 232) = v61;
  *(_BYTE *)(a2 + 288) = v70;
  *(_BYTE *)(a2 + 112) = 1;
  *(_BYTE *)(a2 + 280) = 1;
  *(_BYTE *)(a2 + 344) = 1;
  *(_QWORD *)(a2 + 352) = v121;
  *(_BYTE *)(a2 + 360) = v122;
  *(_QWORD *)(a2 + 368) = v123;
  *(_BYTE *)(a2 + 376) = v124;
  *(_QWORD *)(a2 + 72) = v102;
  *(_QWORD *)(a2 + 80) = v101;
  *(_BYTE *)(a2 + 88) = v76;
  *(_QWORD *)(a2 + 96) = v103;
  *(_QWORD *)(a2 + 104) = KeyPath;
  *(double *)(a2 + 128) = v44;
  *(_QWORD *)(a2 + 136) = v46;
  *(_QWORD *)(a2 + 144) = v48;
  *(_QWORD *)(a2 + 152) = v50;
  *(_BYTE *)(a2 + 160) = 0;
  *(Swift::String *)(a2 + 240) = v65;
  *(_BYTE *)(a2 + 256) = 0;
  *(_QWORD *)(a2 + 264) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 272) = v66;
  *(double *)(a2 + 296) = v77;
  *(_QWORD *)(a2 + 304) = v79;
  *(_QWORD *)(a2 + 312) = v81;
  *(_QWORD *)(a2 + 320) = v83;
  *(_BYTE *)(a2 + 328) = 0;
  *(_QWORD *)(a2 + 336) = 0;
  *(_OWORD *)(a2 + 384) = v125;
  sub_D130(v102, v101, v76);
  swift_bridgeObjectRetain(v103);
  swift_retain(KeyPath);
  sub_D130(v65._countAndFlagsBits, (uint64_t)v65._object, 0);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  swift_retain(v66);
  sub_D170(v65._countAndFlagsBits, (uint64_t)v65._object, 0);
  swift_release(v66);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  sub_D170(v102, v101, v76);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v103);
}

uint64_t sub_294D28(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_294D90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DFD98;
  if (!qword_3DFD98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DFDA0);
    sub_294DFC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DFD98);
  }
  return result;
}

unint64_t sub_294DFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DFDA8;
  if (!qword_3DFDA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_3DFDB0);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3DFDA8);
  }
  return result;
}

id UITabBarController.selectedNavigationController.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(v0, "selectedViewController");
  if (result)
  {
    v2 = result;
    v3 = type metadata accessor for FlowNavigationController();
    result = (id)swift_dynamicCastClass(v2, v3);
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

id sub_294EA0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  void *v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "selectedViewController");
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for FlowNavigationController();
    result = (id)swift_dynamicCastClass(v4, v5);
    if (!result)
    {

      result = 0;
    }
  }
  *a2 = result;
  return result;
}

void UITabBarController.selectedNavigationController.setter(void *a1)
{
  void *v1;

  objc_msgSend(v1, "setSelectedViewController:", a1);

}

void (*UITabBarController.selectedNavigationController.modify(_QWORD *a1))(id *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;

  a1[1] = v1;
  v3 = objc_msgSend(v1, "selectedViewController");
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for FlowNavigationController();
    v3 = (id)swift_dynamicCastClass(v4, v5);
    if (!v3)
    {

      v3 = 0;
    }
  }
  *a1 = v3;
  return sub_294FA4;
}

void sub_294FA4(id *a1)
{
  id v1;

  v1 = *a1;
  objc_msgSend(a1[1], "setSelectedViewController:");

}

uint64_t UITabBarController.rootViewControllers.getter()
{
  void *v0;
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, "viewControllers");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_10EDAC();
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

void sub_295038(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, "viewControllers");
  if (v3)
  {
    v4 = v3;
    v5 = sub_10EDAC();
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
}

void sub_2950A4(uint64_t *a1, void **a2, double a3)
{
  uint64_t v3;
  void *v4;
  Class isa;

  v3 = *a1;
  v4 = *a2;
  if (*a1)
  {
    sub_10EDAC();
    swift_bridgeObjectRetain(v3);
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&a3 = swift_bridgeObjectRelease(v3).n128_u64[0];
  }
  else
  {
    isa = 0;
  }
  objc_msgSend(v4, "setViewControllers:", isa, a3);

}

void UITabBarController.rootViewControllers.setter(uint64_t a1, double a2)
{
  void *v2;
  Class isa;

  if (a1)
  {
    sub_10EDAC();
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&a2 = swift_bridgeObjectRelease(a1).n128_u64[0];
  }
  else
  {
    isa = 0;
  }
  objc_msgSend(v2, "setViewControllers:", isa, a2);

}

void (*UITabBarController.rootViewControllers.modify(uint64_t *a1))(uint64_t *a1, char a2, double a3)
{
  void *v1;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;

  a1[1] = (uint64_t)v1;
  v3 = objc_msgSend(v1, "viewControllers");
  if (v3)
  {
    v4 = v3;
    v5 = sub_10EDAC();
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  return sub_295204;
}

void sub_295204(uint64_t *a1, char a2, double a3)
{
  uint64_t v4;
  Class isa;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    if (v4)
    {
      sub_10EDAC();
      swift_bridgeObjectRetain(v4);
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&a3 = swift_bridgeObjectRelease(v4).n128_u64[0];
      v4 = *a1;
    }
    else
    {
      isa = 0;
    }
    objc_msgSend((id)a1[1], "setViewControllers:", isa, a3);
    swift_bridgeObjectRelease(v4);
  }
  else if (v4)
  {
    sub_10EDAC();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend((id)a1[1], "setViewControllers:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);
  }
  else
  {
    isa = 0;
    objc_msgSend((id)a1[1], "setViewControllers:", 0, a3);
  }

}

id UITabBarController.showTransientController(_:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "setTransientViewController:animated:", a1, 0);
}

BOOL UITabBarController.isShowingTransientController.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "transientViewController");
  v2 = v1;
  if (v1)

  return v2 != 0;
}

void UITabBarController.navigationControllers.getter()
{
  void *v0;
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(v0, "viewControllers");
  if (v1)
  {
    v2 = v1;
    v3 = sub_10EDAC();
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v15 = v4;
      else
        v15 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v5 = _CocoaArrayWrapper.endIndex.getter(v15);
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v4);
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
          else
            v7 = *(id *)(v4 + 8 * i + 32);
          v8 = v7;
          v9 = type metadata accessor for FlowNavigationController();
          v10 = swift_dynamicCastClass(v8, v9);
          if (v10)
          {
            v11 = v10;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
            v13 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
            v12 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
            if (v13 >= v12 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
            v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
            specialized Array._endMutation()(v14);
          }
          else
          {

          }
        }
      }
    }
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v4);
  }
}

id sub_2954DC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setSelectedViewController:", *a1);
}

uint64_t sub_2954F8(_QWORD *a1, unsigned __int8 *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  return a3(*a1, *a2);
}

uint64_t sub_295520(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *, char *))
{
  char v4;
  uint64_t v5;

  v5 = a1;
  v4 = a2;
  return a3(&v5, &v4);
}

double ParentFlowController.interfaceMode.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  double result;
  _BYTE v15[24];

  v2 = a1 & 1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_interfaceMode);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_interfaceMode, v15, 1, 0);
  *v3 = v2;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager);
  v5 = *(unsigned __int8 *)(v4 + 56);
  *(_BYTE *)(v4 + 56) = v2;
  v6 = InterfaceMode.rawValue.getter(v5);
  v8 = v7;
  v9 = InterfaceMode.rawValue.getter(v2);
  if (v6 == v9 && v8 == v10)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v8, 2).n128_u64[0];
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
    if ((v13 & 1) == 0)
      sub_11A728(v5, *(_BYTE *)(v4 + 56));
  }
  return result;
}

uint64_t sub_295638@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)@<X0>(_QWORD *@<X0>, unsigned __int8 *@<X1>, uint64_t *@<X8>);
  _BYTE v9[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator);
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject(&unk_38FEE0, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_297F40;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_2C690(v4, v5);
}

uint64_t sub_2956CC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, char);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_38FEB8, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_297EFC;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator);
  swift_beginAccess(v7, v11, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_2C690(v3, v4);
  return sub_1D618(v8, v9);
}

uint64_t ParentFlowController.viewControllerGenerator.getter()
{
  return sub_9B2A4(&OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator, (void (*)(_QWORD, _QWORD))sub_2C690);
}

uint64_t ParentFlowController.interfaceMode.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_interfaceMode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_interfaceMode, v3, 0, 0);
  return *v1;
}

void (*ParentFlowController.interfaceMode.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_interfaceMode;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_295834;
}

void sub_295834(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager);
    v6 = *(unsigned __int8 *)(v4 + v3[4]);
    v7 = *(unsigned __int8 *)(v5 + 56);
    *(_BYTE *)(v5 + 56) = v6;
    v8 = InterfaceMode.rawValue.getter(v7);
    v10 = v9;
    v11 = InterfaceMode.rawValue.getter(v6);
    if (v8 == v11 && v10 == v12)
    {
      swift_bridgeObjectRelease_n(v10, 2);
    }
    else
    {
      v14 = v12;
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v10);
      if ((v15 & 1) == 0)
        sub_11A728(v7, *(_BYTE *)(v5 + 56));
    }
  }
  free(v3);
}

uint64_t ParentFlowController.__allocating_init(asPartOf:splitViewController:tabBarController:interfaceMode:)(uint64_t a1, void *a2, void *a3, _UNKNOWN **a4, char a5)
{
  uint64_t v5;
  char v10;

  v10 = a5 & 1;
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  return ParentFlowController.init(asPartOf:splitViewController:tabBarController:interfaceMode:)(a1, a2, a3, a4, v10);
}

uint64_t ParentFlowController.init(asPartOf:splitViewController:tabBarController:interfaceMode:)(uint64_t a1, void *a2, void *a3, _UNKNOWN **a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v11;
  __n128 v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  char v23;
  void *v24;
  _UNKNOWN **v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t inited;
  id v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  objc_class *v35;
  char *v36;
  double v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v54[3];
  objc_super v55;
  _BYTE v56[80];
  _BYTE v57[32];

  v6 = v5;
  v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator);
  *v11 = 0;
  v11[1] = 0;
  v12 = swift_retain(v5);
  if ((static Podcasts.isUIPSidebarEnabled.getter(v12) & 1) != 0)
    v13 = a3;
  else
    v13 = a2;
  v14 = v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v16 = type metadata accessor for FlowActionRunner();
  v17 = swift_allocObject(v16, 32, 7);
  v18 = objc_allocWithZone((Class)type metadata accessor for ModelViewOverflowTransitioning(0));
  v19 = v14;
  *(_QWORD *)(v17 + 16) = objc_msgSend(v18, "init");
  v20 = swift_unknownObjectWeakInit(v17 + 24, 0);
  swift_beginAccess(v20, v57, 1, 0);
  swift_unknownObjectWeakAssign(v17 + 24, v19);

  v54[0] = v17;
  v54[1] = sub_89A0(&qword_3D31F0, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
  v21 = BaseObjectGraph.satisfying<A>(_:with:)(v15, v54, v15);
  v22 = swift_release(v17);
  v23 = static Podcasts.isUIPSidebarEnabled.getter(v22);
  if ((v23 & 1) != 0)
    v24 = a3;
  else
    v24 = a2;
  if ((v23 & 1) != 0)
    v25 = a4;
  else
    v25 = &protocol witness table for RootSplitViewController;
  v26 = v24;
  v27 = a5 & 1;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFDC0);
  inited = swift_initStackObject(v28, v56);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  *(_BYTE *)(inited + 32) = 1;
  *(_QWORD *)(inited + 40) = v26;
  *(_QWORD *)(inited + 48) = v25;
  *(_BYTE *)(inited + 56) = 0;
  *(_QWORD *)(inited + 64) = a3;
  *(_QWORD *)(inited + 72) = a4;
  v30 = a3;
  v31 = v26;
  v32 = sub_D52E4(inited);
  v33 = type metadata accessor for TabManager();
  v34 = swift_allocObject(v33, 80, 7);
  *(_QWORD *)(v34 + 24) = 0;
  *(_QWORD *)(v34 + 32) = 0;
  swift_retain(v21);
  *(_QWORD *)(v34 + 48) = sub_D51DC((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v34 + 64) = sub_D50D4((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v34 + 72) = 0;
  *(_BYTE *)(v34 + 56) = v27;
  *(_QWORD *)(v34 + 32) = 0;
  *(_QWORD *)(v34 + 40) = v21;
  *(_QWORD *)(v34 + 16) = v32;
  *(_QWORD *)(v34 + 24) = 0;
  sub_1D618(0, 0);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager) = v34;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_interfaceMode) = v27;
  v35 = (objc_class *)type metadata accessor for RootTabBarControllerDelegate();
  v36 = (char *)objc_allocWithZone(v35);
  *(_QWORD *)&v36[OBJC_IVAR____TtC23ShelfKitCollectionViews28RootTabBarControllerDelegate_objectGraph] = v21;
  v55.receiver = v36;
  v55.super_class = v35;
  *(_QWORD *)&v37 = swift_retain(v21).n128_u64[0];
  v38 = objc_msgSendSuper2(&v55, "init", v37);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabBarControllerDelegate) = v38;
  v39 = v30;
  v40 = v38;
  objc_msgSend(v39, "setDelegate:", v40, swift_release(v6).n128_f64[0]);

  v41 = v19;
  swift_retain(v21);
  v42 = sub_8CBF0((uint64_t)v41, v21);

  swift_release(a1);
  swift_release(v21);
  v43 = swift_allocObject(&unk_38FE10, 32, 7);
  *(_QWORD *)(v43 + 16) = v42;
  *(_QWORD *)(v43 + 24) = v21;
  v44 = (uint64_t *)(v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator);
  swift_beginAccess(v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator, v54, 1, 0);
  v45 = *v44;
  v46 = v44[1];
  *v44 = (uint64_t)sub_297320;
  v44[1] = v43;
  swift_retain(v42);
  sub_1D618(v45, v46);
  v47 = *(_QWORD *)(v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager);
  v48 = *v44;
  v49 = v44[1];
  v50 = *(_QWORD *)(v47 + 24);
  v51 = *(_QWORD *)(v47 + 32);
  *(_QWORD *)(v47 + 24) = v48;
  *(_QWORD *)(v47 + 32) = v49;
  sub_2C690(v48, v49);
  sub_1D618(v50, v51);
  return v42;
}

id RootTabBarControllerDelegate.__allocating_init(asPartOf:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews28RootTabBarControllerDelegate_objectGraph] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t type metadata accessor for RootTabBarControllerDelegate()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews28RootTabBarControllerDelegate);
}

Swift::Void __swiftcall ParentFlowController.initializePageContextForMetrics()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_119F40();
  if (v0 != 18)
  {
    v1 = v0;
    v2 = NavigationTab.metricsPageContext.getter(v0);
    if (v3)
    {
      v4 = v2;
      v5 = v3;
      type metadata accessor for PageContextTracker(0);
      v6 = static PageContextTracker.shared.getter();
      PageContextTracker.push(_:)(v4, v5);
      swift_bridgeObjectRelease(v5);
      swift_release(v6);
    }
    sub_91F0C(v1);
  }
}

void ParentFlowController.change(tab:execute:popToRoot:preserveTransientView:userInitiated:suppressMetrics:objectGraph:)(void *a1, uint64_t a2, int a3, char a4, int a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t ObjectType;
  int v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  unsigned int *v67;
  __n128 v68;
  uint64_t v69;
  void *v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  id v93;
  void *v94;
  id v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  _BYTE v105[32];
  _QWORD v106[5];
  _OWORD v107[2];
  char v108[24];
  char v109[32];

  v101 = a7;
  LODWORD(v9) = a5;
  v104 = a1;
  v102 = type metadata accessor for ActionMetricsBehavior(0);
  v13 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = v7;
  v16 = *(_QWORD *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager);
  v17 = *(_QWORD *)(v16 + 16);
  if (!*(_QWORD *)(v17 + 16))
    goto LABEL_5;
  v18 = sub_36D7C(*(_BYTE *)(v16 + 56));
  if ((v19 & 1) == 0)
    goto LABEL_5;
  v20 = *(_QWORD *)(v17 + 56) + 16 * v18;
  v21 = *(void **)v20;
  v22 = *(_QWORD *)(v20 + 8);
  ObjectType = swift_getObjectType();
  v100 = v16;
  v24 = a3;
  v25 = ObjectType;
  v99 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 56);
  v26 = v21;
  v27 = v25;
  a3 = v24;
  v16 = v100;
  LOBYTE(v22) = v99(v27, v22);

  if ((v22 & 1) == 0 || (a4 & 1) == 0)
  {
LABEL_5:
    if ((v9 & 1) != 0)
    {
      sub_119F40();
      if (v28 != 18)
      {
        v29 = v28;
        v30 = (uint64_t)v104;
        sub_3D600((uint64_t)v104);
        v31 = static NavigationTab.== infix(_:_:)(v29, v30);
        sub_7C28(v30);
        sub_91F0C(v29);
        if ((v31 & 1) != 0)
        {
          v32 = *(_QWORD *)(v16 + 16);
          if (*(_QWORD *)(v32 + 16))
          {
            v33 = sub_36D7C(*(_BYTE *)(v16 + 56));
            if ((v34 & 1) != 0)
            {
              v35 = *(_QWORD *)(v32 + 56) + 16 * v33;
              v36 = *(void **)v35;
              v37 = *(_QWORD *)(v35 + 8);
              v38 = swift_getObjectType();
              LODWORD(v99) = v9;
              v9 = v38;
              v100 = a2;
              v39 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 24);
              v40 = v36;
              v97 = a3;
              v41 = v40;
              v42 = v9;
              LOBYTE(v9) = (_BYTE)v99;
              v43 = v39(v42, v37);
              a2 = v100;
              v44 = (void *)v43;

              a3 = v97;
              if (v44)
              {
                v104 = objc_msgSend(v44, "popToRootViewControllerAnimated:", 1);

                return;
              }
            }
          }
        }
      }
      sub_29641C((uint64_t)v104);
    }
    sub_11A244((uint64_t)v104, v9 & 1);
    v45 = *(_QWORD *)(v16 + 16);
    if (*(_QWORD *)(v45 + 16))
    {
      v46 = sub_36D7C(*(_BYTE *)(v16 + 56));
      if ((v47 & 1) != 0)
      {
        v48 = *(_QWORD *)(v45 + 56) + 16 * v46;
        v49 = *(void **)v48;
        v50 = *(_QWORD *)(v48 + 8);
        v51 = swift_getObjectType();
        v100 = a2;
        v52 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 24);
        v53 = v49;
        v54 = v52(v51, v50);
        v55 = v100;
        v56 = (char *)v54;

        if (v56)
        {
          if (v55)
          {
            v57 = (uint64_t *)&v56[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner];
            swift_beginAccess(&v56[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner], v109, 0, 0);
            v58 = *v57;
            v97 = a3;
            v98 = v13;
            v59 = v15;
            if (v58)
            {
              v60 = v57[1];
              v61 = swift_bridgeObjectRetain(v55);
              v62 = v58;
            }
            else
            {
              v63 = type metadata accessor for FlowActionRunner();
              v62 = swift_allocObject(v63, 32, 7);
              v64 = objc_allocWithZone((Class)type metadata accessor for ModelViewOverflowTransitioning(0));
              swift_bridgeObjectRetain(v55);
              v65 = v56;
              *(_QWORD *)(v62 + 16) = objc_msgSend(v64, "init");
              v66 = swift_unknownObjectWeakInit(v62 + 24, 0);
              swift_beginAccess(v66, v108, 1, 0);
              swift_unknownObjectWeakAssign(v62 + 24, v65);

              v60 = sub_89A0(&qword_3D31F0, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
            }
            v67 = (unsigned int *)&enum case for ActionMetricsBehavior.notProcessed(_:);
            if ((a6 & 1) == 0)
              v67 = (unsigned int *)&enum case for ActionMetricsBehavior.fromAction(_:);
            (*(void (**)(char *, _QWORD, uint64_t, __n128))(v98 + 104))(v59, *v67, v102, v61);
            type metadata accessor for ActionRunnerOptions(0);
            swift_unknownObjectRetain(v58);
            v68 = swift_retain(v101);
            v69 = BaseObjectGraph.__allocating_init(_:)(v68);
            memset(v107, 0, sizeof(v107));
            v70 = v56;
            v71 = objc_msgSend(v56, "view");
            sub_430E8((uint64_t)v107, (uint64_t)v105);
            v72 = v71;
            ActionOrigin.init(sender:view:)(v106, v105, v71);
            v73 = ActionRunnerOptions.withActionOrigin(_:)(v106);
            sub_D1D4((uint64_t)v106, (uint64_t *)&unk_3D30E0);
            swift_release(v69);

            sub_D1D4((uint64_t)v107, &qword_3D1A70);
            v74 = *(_QWORD *)(v55 + 16);
            if (v74)
            {
              v75 = swift_getObjectType();
              v76 = v100 + 32;
              do
              {
                v77 = ActionRunner.perform(_:withMetrics:asPartOf:)(v76, v59, v73, v75, v60);
                swift_release(v77);
                v76 += 40;
                --v74;
              }
              while (v74);
            }
            swift_unknownObjectRelease(v62);
            swift_release(v73);
            swift_bridgeObjectRelease(v100);

            (*(void (**)(char *, uint64_t))(v98 + 8))(v59, v102);
            LOBYTE(a3) = v97;
          }
          else
          {

          }
        }
      }
    }
    sub_119F40();
    if (v78 != 18)
    {
      v79 = v78;
      v80 = NavigationTab.metricsPageContext.getter(v78);
      if (v81)
      {
        v82 = v80;
        v83 = v81;
        type metadata accessor for PageContextTracker(0);
        v84 = static PageContextTracker.shared.getter();
        PageContextTracker.push(_:)(v82, v83);
        swift_bridgeObjectRelease(v83);
        swift_release(v84);
      }
      sub_91F0C(v79);
    }
    if ((a3 & 1) != 0)
    {
      v85 = *(_QWORD *)(v16 + 16);
      if (*(_QWORD *)(v85 + 16))
      {
        v86 = sub_36D7C(*(_BYTE *)(v16 + 56));
        if ((v87 & 1) != 0)
        {
          v88 = *(_QWORD *)(v85 + 56) + 16 * v86;
          v89 = *(void **)v88;
          v90 = *(_QWORD *)(v88 + 8);
          v91 = swift_getObjectType();
          v92 = *(uint64_t (**)(uint64_t, uint64_t))(v90 + 24);
          v93 = v89;
          v94 = (void *)v92(v91, v90);

          if (v94)
          {
            v95 = objc_msgSend(v94, "popToRootViewControllerAnimated:", 1);

          }
        }
      }
    }
    sub_2967F4(v103);
  }
}

void sub_29641C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, __n128);
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  _QWORD v68[3];

  v58 = a1;
  v60 = type metadata accessor for MetricsData(0);
  v2 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetricsPipeline(0);
  v67 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v66 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B50);
  v61 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3100);
  v10 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for MetricsFieldsContext(0);
  v13 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - v17;
  __chkstk_darwin(v19);
  v63 = (char *)&v53 - v20;
  v65 = v1;
  sub_119F40();
  if (v21 != 18)
  {
    v54 = v9;
    v22 = v21;
    v56 = v21;
    type metadata accessor for ClickMetricsEvent(0);
    v53 = v10;
    v23 = v58;
    v24 = NavigationTab.pageContext.getter(v58);
    v55 = v5;
    v25 = v24;
    v57 = v2;
    v27 = v26;
    v28 = NavigationTab.intValue.getter(v23);
    v29 = NavigationTab.pageContext.getter(v22);
    v30 = v4;
    v32 = v31;
    v33 = static ClickMetricsEvent.tabClickEvent(named:at:from:)(v25, v27, v28, v29, v31);
    swift_bridgeObjectRelease(v27);
    v34 = swift_bridgeObjectRelease(v32);
    MetricsFieldsContext.init()(v34);
    v35 = type metadata accessor for PageContextTracker(0);
    v68[0] = static PageContextTracker.shared.getter();
    static MetricsFieldsContext.Property<A>.pageContextTracker.getter(v36);
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(v68, v12, v35);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v59);
    v37 = swift_release(v68[0]);
    v38 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
    v39 = v64;
    v38(v15, v64, v37);
    type metadata accessor for MetricsActivity(0);
    v40 = (void *)static MetricsActivity.shared.getter();
    v41 = MetricsActivity.currentPageFields.getter();

    v68[0] = v41;
    v42 = v54;
    static MetricsFieldsContext.Property<A>.pageFields.getter();
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B60);
    v44 = v63;
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(v68, v42, v43);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v62);
    v45 = swift_bridgeObjectRelease(v68[0]);
    v38(v18, v39, v45);
    v46 = v65 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_metricsPipeline;
    v47 = swift_beginAccess(v65 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_metricsPipeline, v68, 0, 0);
    v49 = v66;
    v48 = v67;
    v50 = v55;
    v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v67 + 16))(v66, v46, v55, v47);
    dispatch thunk of MetricsEvent.metricsData.getter(v51);
    v52 = MetricsPipeline.process(_:using:)(v30, v44);
    swift_release(v33);
    swift_release(v52);
    sub_91F0C(v56);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v30, v60);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    ((void (*)(char *, uint64_t))v38)(v44, v39);
  }
}

void sub_2967F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t);
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager);
  v2 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = sub_36D7C(*(_BYTE *)(v1 + 56));
    if ((v4 & 1) != 0)
    {
      v5 = *(_QWORD *)(v2 + 56) + 16 * v3;
      v6 = *(void **)v5;
      v7 = *(_QWORD *)(v5 + 8);
      ObjectType = swift_getObjectType();
      v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 24);
      v10 = v6;
      v11 = (void *)v9(ObjectType, v7);

      if (v11)
      {
        v12 = objc_msgSend(v11, "view");

        if (v12)
        {
          v19 = objc_msgSend(v12, "window");

          if (v19)
          {
            sub_119F40();
            if (v13 == 18)
            {
              v14 = v19;
LABEL_11:

              return;
            }
            v15 = v13;
            sub_E710(0, (unint64_t *)&unk_3DFFF0, NSUserActivity_ptr);
            v16 = (void *)static NSUserActivity.stateRestorationActivity(for:)(v15);
            v17 = objc_msgSend(v19, "windowScene");
            if (v17)
            {
              v18 = v17;
              objc_msgSend(v17, "setUserActivity:", v16);

              sub_91F0C(v15);
              v14 = v18;
              goto LABEL_11;
            }

            sub_91F0C(v15);
          }
        }
        else
        {
          __break(1u);
        }
      }
    }
  }
}

double ParentFlowController.dismiss(_:animate:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  double result;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  id v22;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager);
  v3 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v3 + 16))
  {
    v5 = sub_36D7C(*(_BYTE *)(v2 + 56));
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v3 + 56) + 16 * v5;
      v9 = *(void **)v8;
      v10 = *(_QWORD *)(v8 + 8);
      ObjectType = swift_getObjectType();
      v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
      v13 = v9;
      v22 = (id)v12(ObjectType, v10);

      if (v22)
      {
        v14 = objc_msgSend(v22, "viewControllers");
        v15 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
        v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

        sub_8FCCC(a1, v16);
        v18 = v17;
        v20 = v19;
        swift_bridgeObjectRelease(v16);
        if ((v20 & 1) != 0 || v18)
        {

        }
        else
        {
          type metadata accessor for BaseObjectGraph(0);
          v21 = BaseObjectGraph.__allocating_init(name:_:)(0x7974706D45, 0xE500000000000000, _swiftEmptyArrayStorage);
          ParentFlowController.change(tab:execute:popToRoot:preserveTransientView:userInitiated:suppressMetrics:objectGraph:)(&dword_8, 0, 0, 0, 0, 0, v21);

          *(_QWORD *)&result = swift_release(v21).n128_u64[0];
        }
      }
    }
  }
  return result;
}

void ParentFlowController.pop(animate:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager);
  v3 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v3 + 16))
  {
    v5 = sub_36D7C(*(_BYTE *)(v2 + 56));
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(v3 + 56) + 16 * v5;
      v8 = *(void **)v7;
      v9 = *(_QWORD *)(v7 + 8);
      ObjectType = swift_getObjectType();
      v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
      v12 = v8;
      v13 = (char *)v11(ObjectType, v9);

      if (v13)
      {
        v14 = (uint64_t)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController];
        swift_beginAccess(&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController], v20, 0, 0);
        if (*(_QWORD *)(v14 + 24))
        {
          sub_1D5D4(v14, (uint64_t)v17);

          v15 = v18;
          v16 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 56))(a1, v15, v16);
          __swift_destroy_boxed_opaque_existential_0(v17);
        }
        else
        {

        }
      }
    }
  }
}

void sub_296C44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager));
  sub_1D618(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator + 8));

}

_QWORD *ParentFlowController.deinit()
{
  _QWORD *v0;

  v0 = BaseFlowController.deinit();
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager));
  sub_1D618(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator + 8));
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabBarControllerDelegate));
  return v0;
}

uint64_t ParentFlowController.__deallocating_deinit()
{
  _QWORD *v0;

  v0 = BaseFlowController.deinit();
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager));
  sub_1D618(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator + 8));
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabBarControllerDelegate));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_296D40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, unsigned __int8 *);
  _BYTE v9[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews32RootNavigationControllerDelegate_stackUpdateHandler);
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject(&unk_38FE90, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_297ED4;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_2C690(v4, v5);
}

uint64_t sub_296DD4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, char);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_38FE68, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_297E78;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews32RootNavigationControllerDelegate_stackUpdateHandler);
  swift_beginAccess(v7, v11, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_2C690(v3, v4);
  return sub_1D618(v8, v9);
}

uint64_t sub_296E8C()
{
  return sub_9B2A4(&OBJC_IVAR____TtC23ShelfKitCollectionViews32RootNavigationControllerDelegate_stackUpdateHandler, (void (*)(_QWORD, _QWORD))sub_9E890);
}

uint64_t sub_296EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews32RootNavigationControllerDelegate_stackUpdateHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_1D618(v6, v7);
}

uint64_t (*sub_296EFC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews32RootNavigationControllerDelegate_stackUpdateHandler, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_296F40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, __n128);
  uint64_t v8;
  __n128 v9;
  _BYTE v10[24];

  v6 = v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews32RootNavigationControllerDelegate_stackUpdateHandler;
  swift_beginAccess(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews32RootNavigationControllerDelegate_stackUpdateHandler, v10, 0, 0);
  v7 = *(void (**)(uint64_t, _QWORD, __n128))v6;
  if (*(_QWORD *)v6)
  {
    v8 = *(_QWORD *)(v6 + 8);
    v9 = swift_retain(v8);
    v7(a1, a3 & 1, v9);
    sub_1D618((uint64_t)v7, v8);
  }
}

id sub_297084(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_297978(a1, a3);
}

id RootNavigationControllerDelegate.init()()
{
  char *v0;
  char *v1;
  objc_class *v2;
  objc_super v4;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews32RootNavigationControllerDelegate_stackUpdateHandler];
  v2 = (objc_class *)type metadata accessor for RootNavigationControllerDelegate();
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v4.receiver = v0;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, "init");
}

id RootNavigationControllerDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RootNavigationControllerDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id RootTabBarControllerDelegate.init(asPartOf:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28RootTabBarControllerDelegate_objectGraph] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "init");
}

Swift::Bool __swiftcall RootTabBarControllerDelegate.tabBarController(_:shouldSelect:)(UITabBarController _, UIViewController shouldSelect)
{
  return sub_297A38(shouldSelect.super.super.isa);
}

void RootTabBarControllerDelegate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.RootTabBarControllerDelegate", 52, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_2972F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

char *sub_297320(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  char *v6;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(v2 + 16);
  swift_retain(v5);
  v6 = sub_2976B4(a1, v4, v5);
  swift_release(v5);
  return v6;
}

char *sub_297374(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  id v28;
  char *result;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];

  v6 = type metadata accessor for AutomationSemantics(0);
  v45 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FlowDestination(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a2);
  v17 = TabMenu.Item.navigationTab.getter(v16);
  sub_7654(v17, (uint64_t)v11);
  sub_7C28(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_D1D4((uint64_t)v11, &qword_3D2B30);
    v18 = 0;
LABEL_15:
    swift_release(a2);
    return v18;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v19 = sub_5BB78((uint64_t)v15, 0, (char *)0xE000000000000000);
  v18 = v19;
  if (!v19)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    goto LABEL_15;
  }
  v43 = v6;
  v44 = a2;
  v20 = a3;
  TabMenu.Item.title.getter(v19);
  v22 = v21;
  v23 = (void *)TabMenu.Item.tabImage(for:)(a1 & 1);
  v42 = v20;
  v24 = TabMenu.Item.navigationTab.getter(v23);
  v25 = NavigationTab.intValue.getter(v24);
  sub_7C28(v24);
  v26 = objc_allocWithZone((Class)UITabBarItem);
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v26, "initWithTitle:image:tag:", v27, v23, v25, swift_bridgeObjectRelease(v22).n128_f64[0]);

  objc_msgSend(v18, "setTabBarItem:", v28);
  result = (char *)objc_msgSend(v18, "tabBarItem");
  if (result)
  {
    v30 = result;
    v31 = TabMenu.Item.navigationTab.getter(result);
    v32 = NavigationTab.stringValue.getter();
    v34 = v33;
    sub_7C28(v31);
    v46[3] = &type metadata for String;
    v46[0] = v32;
    v46[1] = v34;
    static AutomationSemantics.tabBar(tabName:)(v46);
    __swift_destroy_boxed_opaque_existential_0(v46);
    UITabBarItem.setAutomationSemantics(_:)(v8);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v43);
    ObjectType = swift_getObjectType();
    v36 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NavigationTabIdentifiable);
    if (v36)
      v37 = v36;
    else
      v37 = 0;
    if (v36)
      v38 = v18;
    else
      v38 = 0;
    if (v38)
    {
      v39 = swift_getObjectType();
      v40 = v18;
      v41 = TabMenu.Item.navigationTab.getter(v40);
      dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.setter(v41, v39, v37);

    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    a2 = v44;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

char *sub_2976B4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = a2 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v6);
  v39 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowDestination(0);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E0000);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TabMenu.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3;
  v19 = swift_retain(a3);
  static TabMenu.item(for:interfaceMode:)(a1, v5, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v20 = (uint64_t)v10;
    v21 = a3;
    sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3E0000);
    v22 = v39;
    sub_7654(a1, v39);
    v23 = v37;
    v24 = v38;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v22, 1, v38) == 1)
    {
      sub_D1D4(v22, &qword_3D2B30);
      v25 = 0;
      v18 = v21;
    }
    else
    {
      v26 = a1;
      v27 = v20;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v20, v22, v24);
      v18 = v21;
      v25 = sub_5BB78(v20, 0, (char *)0xE000000000000000);
      if (v25)
      {
        ObjectType = swift_getObjectType();
        v29 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NavigationTabIdentifiable);
        if (v29)
          v30 = v29;
        else
          v30 = 0;
        if (v29)
          v31 = v25;
        else
          v31 = 0;
        if (v31)
        {
          v39 = v30;
          v32 = swift_getObjectType();
          v33 = v25;
          sub_3D600(v26);
          v34 = v32;
          v27 = v20;
          v18 = v21;
          dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.setter(v26, v34, v39);

        }
      }
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v27, v24);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v25 = sub_297374(v5, a3, (uint64_t)v17);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  swift_release(v18);
  return v25;
}

id sub_297978(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;

  v3 = objc_msgSend(a1, "viewControllers");
  v4 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  LOBYTE(a2) = sub_17C3C8(a2, v5);
  swift_bridgeObjectRelease(v5);
  if ((a2 & 1) != 0)
    v6 = (objc_class *)type metadata accessor for CrossFadeAnimator();
  else
    v6 = (objc_class *)type metadata accessor for StaticTransitionAnimator();
  return objc_msgSend(objc_allocWithZone(v6), "init");
}

uint64_t type metadata accessor for RootNavigationControllerDelegate()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews32RootNavigationControllerDelegate);
}

uint64_t sub_297A38(void *a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  _BYTE v31[32];
  _QWORD v32[5];
  _QWORD v33[4];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v6 = type metadata accessor for ActionPerformer(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v10);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a1;
  v14 = objc_msgSend(v13, "tabBarItem");
  if (v14)
  {
    v15 = v14;
    v16 = NavigationTab.init(intValue:)(objc_msgSend(v14, "tag"));

    if (v16 != 18)
    {
      sub_3D600(v16);
      v17 = Link.Presentation.init(rawValue:)(0);
      v18 = v17;
      static ActionMetrics.notInstrumented.getter(v17);
      v19 = type metadata accessor for TabChangeAction(0);
      swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
      v29 = v18;
      v20 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, v16, _swiftEmptyArrayStorage, 0, 0, 1, 0, v29, v12);
      type metadata accessor for ActionRunnerOptions(0);
      v21 = swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews28RootTabBarControllerDelegate_objectGraph]);
      v22 = BaseObjectGraph.__allocating_init(_:)(v21);
      v33[3] = ObjectType;
      v33[0] = v2;
      sub_430E8((uint64_t)v33, (uint64_t)v31);
      v23 = v2;
      ActionOrigin.init(sender:view:)(v32, v31, 0);
      v24 = ActionRunnerOptions.withActionOrigin(_:)(v32);
      sub_D1D4((uint64_t)v32, (uint64_t *)&unk_3D30E0);
      swift_release(v22);
      sub_D1D4((uint64_t)v33, &qword_3D1A70);
      v32[3] = v19;
      v32[4] = sub_89A0((unint64_t *)&unk_3DFFE0, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
      v32[0] = v20;
      swift_retain(v20);
      v25 = swift_retain(v24);
      v26 = ActionPerformer.init(_:asPartOf:)(v32, v24, v25);
      v27 = ActionPerformer.callAsFunction()(v26);
      swift_release(v20);
      swift_release(v24);
      swift_release(v27);
      sub_91F0C(v16);
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  else
  {

  }
  return 0;
}

void sub_297CD4(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_interfaceMode);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

double sub_297D24(char *a1)
{
  return ParentFlowController.interfaceMode.setter(*a1);
}

uint64_t sub_297D50()
{
  return type metadata accessor for ParentFlowController(0);
}

uint64_t type metadata accessor for ParentFlowController(uint64_t a1)
{
  uint64_t result;

  result = qword_3DFE10;
  if (!qword_3DFE10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ParentFlowController);
  return result;
}

uint64_t sub_297D94(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_304988;
  v2[2] = &unk_3049A0;
  v2[3] = &unk_3049B8;
  return swift_updateClassMetadata2(a1, 256, 4, v2, a1 + 304);
}

uint64_t method lookup function for ParentFlowController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ParentFlowController);
}

uint64_t dispatch thunk of ParentFlowController.__allocating_init(asPartOf:splitViewController:tabBarController:interfaceMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v5 + 336))(a1, a2, a3, a4, a5 & 1);
}

uint64_t method lookup function for RootNavigationControllerDelegate(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for RootNavigationControllerDelegate);
}

uint64_t dispatch thunk of RootNavigationControllerDelegate.stackUpdateHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_20.maxprot + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootNavigationControllerDelegate.stackUpdateHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_20.nsects + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootNavigationControllerDelegate.navigationController(_:animationControllerFor:from:to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])();
}

uint64_t method lookup function for RootTabBarControllerDelegate(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for RootTabBarControllerDelegate);
}

uint64_t sub_297E78(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *, char *);
  char v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *, char *))(v2 + 16);
  v6 = a1;
  v5 = a2;
  return v3(&v6, &v5);
}

uint64_t sub_297EB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_297ED4(_QWORD *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
}

uint64_t sub_297EFC(uint64_t a1, char a2)
{
  uint64_t v2;
  void (*v3)(uint64_t *__return_ptr, uint64_t *, char *);
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *(void (**)(uint64_t *__return_ptr, uint64_t *, char *))(v2 + 16);
  v7 = a1;
  v6 = a2 & 1;
  v3(&v5, &v7, &v6);
  return v5;
}

uint64_t sub_297F40@<X0>(_QWORD *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v3 + 16))(*a1, *a2);
  *a3 = result;
  return result;
}

id sub_298124()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ErrorViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_298194()
{
  return type metadata accessor for ErrorViewController(0);
}

uint64_t type metadata accessor for ErrorViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_3E0040;
  if (!qword_3E0040)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ErrorViewController);
  return result;
}

uint64_t sub_2981D8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for ErrorPresenter.ReachabilityType(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = "\t";
    result = swift_updateClassMetadata2(a1, 256, 2, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

char *sub_29824C(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double (**v8)();
  uint64_t v9;
  uint64_t v10;

  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ErrorShieldView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = qword_3CEFF0;
  v6 = (char *)v4;
  if (v5 != -1)
    swift_once(&qword_3CEFF0, sub_DFAC);
  objc_msgSend(v6, "setBackgroundColor:", qword_3D0898);

  swift_errorRetain(a1);
  ErrorPresenter.error.setter(a1);
  v7 = swift_allocObject(&unk_390048, 24, 7);
  swift_weakInit(v7 + 16, a2);
  v8 = (double (**)())&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_retryHandler];
  v9 = *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_retryHandler];
  v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15ErrorShieldView_retryHandler + 8];
  *v8 = sub_29A4B8;
  v8[1] = (double (*)())v7;
  swift_retain_n(v7, 2);
  sub_1D618(v9, v10);
  ErrorShieldView.reload()();
  swift_release_n(v7, 2);
  return v6;
}

double sub_298378(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E00F0);
    v6 = sub_10EDC(&qword_3E00F8, &qword_3E00F0, (uint64_t)&protocol conformance descriptor for BasePresenter<A>);
    dispatch thunk of PresenterProtocol.update(ignoringCache:)(1, v5, v6);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

char *sub_29840C(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  id v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  NSString v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  objc_super v31;
  Swift::String v32;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewLayout;
  v6 = objc_allocWithZone((Class)UICollectionViewTableLayout);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDataSource] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDelegate] = 0;
  v7[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_authenticating] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_objectGraph] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_activityIndicator] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100, swift_retain(a1).n128_f64[0]);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E00F0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = swift_retain(a1);
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_presenter] = AccountPresenter.init(asPartOf:)(v9);

  v10 = *(_QWORD *)&v2[v5];
  v31.receiver = v7;
  v31.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v31, "initWithCollectionViewLayout:", v10);
  v11[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_prefersLargeTitle] = 0;
  v12 = v11;
  sub_10EB40();
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_presenter;
  v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_presenter];
  v15 = v12;
  swift_retain(v14);
  dispatch thunk of BasePresenter.view.setter(v12);
  swift_release(v14);
  v16 = *(_QWORD *)&v12[v13];
  v17 = v15;
  v18 = swift_retain(v16);
  AccountPresenter.accountViewController.setter(v12, v18);
  v19 = objc_msgSend(v17, "navigationItem", swift_release(v16).n128_f64[0]);
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v32._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0x544E554F434341;
  v21._object = (void *)0xE700000000000000;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v32)._object;

  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setTitle:", v24, swift_bridgeObjectRelease(object).n128_f64[0]);

  v25 = *(void **)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_activityIndicator];
  objc_msgSend(v25, "setHidesWhenStopped:", 1);
  v26 = objc_msgSend(v17, "navigationItem");
  v27 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v25);
  objc_msgSend(v26, "setLeftBarButtonItem:", v27);

  v28 = objc_msgSend(v17, "navigationItem");
  v29 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v17, "tappedDoneButton");
  objc_msgSend(v28, "setRightBarButtonItem:", v29);

  swift_release(a1);
  return v17;
}

void sub_29876C()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  double v9;
  id v10;
  uint64_t v11;
  void *v12;
  objc_class *v13;
  char *v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  void (*v41)(uint64_t, uint64_t);
  double v42;
  double v43;
  Class isa;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  objc_class *ObjCClassFromMetadata;
  NSString *v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  uint64_t v54;
  objc_class *v55;
  NSString *v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  uint64_t v60;
  objc_class *v61;
  NSString *v62;
  NSString *v63;
  uint64_t v64;
  uint64_t v65;
  NSString v66;
  NSString *v67;
  NSString *v68;
  uint64_t v69;
  uint64_t v70;
  NSString v71;
  void *v72;
  objc_super v73;
  objc_super v74;
  objc_super v75;

  v1 = v0;
  v75.receiver = v0;
  v75.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v75, "viewDidLoad");
  v2 = objc_msgSend(v0, "collectionView");
  if (v2)
  {
    v72 = v2;
    v3 = UIViewController.snapshotPageTraitEnvironment.getter();
    v5 = v4;
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_presenter];
    v7 = (objc_class *)type metadata accessor for AccountCollectionViewDataSource();
    v8 = (char *)objc_allocWithZone(v7);
    *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountCollectionViewDataSource_presenter] = v6;
    v74.receiver = v8;
    v74.super_class = v7;
    *(_QWORD *)&v9 = swift_retain(v6).n128_u64[0];
    v10 = objc_msgSendSuper2(&v74, "init", v9);
    v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDataSource;
    v12 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDataSource];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDataSource] = v10;

    v13 = (objc_class *)type metadata accessor for AccountCollectionViewDelegate();
    v14 = (char *)objc_allocWithZone(v13);
    swift_unknownObjectWeakInit(&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_activeTextField], 0);
    ObjectType = swift_getObjectType();
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 32);
    swift_retain(v6);
    swift_unknownObjectRetain(v3);
    v17 = v14;
    v18 = v16(ObjectType, v5);
    v19 = (uint64_t *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits];
    *v19 = v18;
    v19[1] = v20;
    *(_QWORD *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_presenter] = v6;
    swift_retain(v6);

    v73.receiver = v17;
    v73.super_class = v13;
    v21 = objc_msgSendSuper2(&v73, "init");
    swift_release(v6);
    swift_unknownObjectRelease(v3);
    v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDelegate;
    v23 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDelegate];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDelegate] = v21;

    v24 = *(_QWORD *)&v1[v22];
    v25 = OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDelegate;
    v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDelegate];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDelegate] = v24;
    swift_unknownObjectRetain(v24);
    v28 = v27;
    v29 = objc_msgSend(v1, "collectionView", swift_unknownObjectRelease(v26).n128_f64[0]);
    if (v29)
    {
      v30 = v29;
      v31 = *(_QWORD *)&v1[v25];
      objc_msgSend(v29, "setDelegate:", v31, swift_unknownObjectRetain(v31).n128_f64[0]);

      swift_unknownObjectRelease(v31);
      v28 = v30;
    }

    v32 = *(_QWORD *)&v1[v11];
    v33 = OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDataSource;
    v34 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDataSource];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDataSource] = v32;
    swift_unknownObjectRetain(v32);
    v36 = v35;
    v37 = objc_msgSend(v1, "collectionView", swift_unknownObjectRelease(v34).n128_f64[0]);
    if (v37)
    {
      v38 = v37;
      v39 = *(_QWORD *)&v1[v33];
      objc_msgSend(v37, "setDataSource:", v39, swift_unknownObjectRetain(v39).n128_f64[0]);

      swift_unknownObjectRelease(v39);
      v36 = v38;
    }

    v40 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewLayout];
    objc_msgSend(v40, "setSeparatorStyle:", 1);
    v41 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
    v41(ObjectType, v5);
    v43 = v42;
    v41(ObjectType, v5);
    objc_msgSend(v40, "setSeparatorInset:", 0.0, v43, 0.0);
    objc_msgSend(v40, "_setShowsAdditionalSeparators:", 0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v40, "_setFloatingElementKinds:", isa);

    v45 = (void *)objc_opt_self(UIColor);
    v46 = v72;
    v47 = objc_msgSend(v45, "systemGroupedBackgroundColor");
    objc_msgSend(v46, "setBackgroundColor:", v47);

    objc_msgSend(v46, "setAlwaysBounceVertical:", 1);
    v48 = type metadata accessor for TextInputCollectionViewCell();
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v48);
    v50 = NSStringFromClass(ObjCClassFromMetadata);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v52 = v51;

    v53 = String._bridgeToObjectiveC()();
    objc_msgSend(v46, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v53, swift_bridgeObjectRelease(v52).n128_f64[0]);

    v54 = type metadata accessor for AccountDetailCollectionViewCell();
    v55 = (objc_class *)swift_getObjCClassFromMetadata(v54);
    v56 = NSStringFromClass(v55);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v58 = v57;

    v59 = String._bridgeToObjectiveC()();
    objc_msgSend(v46, "registerClass:forCellWithReuseIdentifier:", v55, v59, swift_bridgeObjectRelease(v58).n128_f64[0]);

    v60 = type metadata accessor for AccountSectionSupplementaryView();
    v61 = (objc_class *)swift_getObjCClassFromMetadata(v60);
    v62 = UICollectionElementKindSectionFooter;
    v63 = NSStringFromClass(v61);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
    v65 = v64;

    v66 = String._bridgeToObjectiveC()();
    objc_msgSend(v46, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v61, v62, v66, swift_bridgeObjectRelease(v65).n128_f64[0]);

    v67 = UICollectionElementKindSectionHeader;
    v68 = NSStringFromClass(v61);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
    v70 = v69;

    v71 = String._bridgeToObjectiveC()();
    objc_msgSend(v46, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v61, v67, v71, swift_bridgeObjectRelease(v70).n128_f64[0]);

    AccountPresenter.didLoad()();
    swift_unknownObjectRelease(v3);
  }
}

void sub_298D3C(uint64_t a1, double a2, double a3)
{
  char *v3;
  char *v4;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t);
  double v14;
  double v15;
  void *v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;

  v4 = v3;
  v23.receiver = v4;
  v23.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v23, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v8 = UIViewController.transitionPageTraitEnvironment(newSize:)(a2, a3);
  v10 = v9;
  v11 = *(void **)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewLayout];
  ObjectType = swift_getObjectType();
  v13 = *(void (**)(uint64_t, uint64_t))(v10 + 16);
  v13(ObjectType, v10);
  v15 = v14;
  v13(ObjectType, v10);
  objc_msgSend(v11, "setSeparatorInset:", 0.0, v15, 0.0);
  v16 = *(void **)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDelegate];
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v4, "collectionView");
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
    v20 = (uint64_t *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits];
    v21 = *(_QWORD *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits];
    *v20 = v19;
    v20[1] = v22;
    objc_msgSend(v18, "reloadData", swift_unknownObjectRelease(v21).n128_f64[0]);

  }
  swift_unknownObjectRelease(v8);
}

void sub_298EFC(uint64_t a1)
{
  char *v1;
  void *v3;
  double v4;
  double v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "traitCollectionDidChange:", a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewLayout];
  objc_msgSend(v1, "pageMarginInsets");
  v5 = v4;
  objc_msgSend(v1, "pageMarginInsets");
  objc_msgSend(v3, "setSeparatorInset:", 0.0, v5, 0.0);
  v6 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDelegate];
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v1, "collectionView");
    v9 = UIViewController.snapshotPageTraitEnvironment.getter();
    v10 = &v7[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits];
    v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_pageTraits];
    *(_QWORD *)v10 = v9;
    *((_QWORD *)v10 + 1) = v12;
    objc_msgSend(v8, "reloadData", swift_unknownObjectRelease(v11).n128_f64[0]);

  }
}

void sub_299070()
{
  uint64_t v0;
  _BYTE *v1;
  double v2;
  void *v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  _BYTE v7[24];

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_authenticating);
  *(_QWORD *)&v2 = swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_authenticating, v7, 0, 0).n128_u64[0];
  v3 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_activityIndicator);
  if (*v1 == 1)
  {
    objc_msgSend(v3, "startAnimating", v2);
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDelegate);
    if (v4)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews29AccountCollectionViewDelegate_activeTextField);
      if (Strong)
      {
        v6 = Strong;
        objc_msgSend(Strong, "resignFirstResponder");

      }
    }
  }
  else
  {
    objc_msgSend(v3, "stopAnimating", v2);
  }
}

void sub_299120(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD aBlock[5];
  uint64_t v12;

  v3 = objc_msgSend(v1, "collectionView");
  if (v3)
  {
    v10 = v3;
    if (AccountPresenter.sectionCount.getter(v3) <= a1)
    {

    }
    else
    {
      v4 = objc_opt_self(UIView);
      v5 = swift_allocObject(&unk_38FF58, 32, 7);
      *(_QWORD *)(v5 + 16) = v10;
      *(_QWORD *)(v5 + 24) = a1;
      v6 = swift_allocObject(&unk_38FF80, 32, 7);
      *(_QWORD *)(v6 + 16) = sub_29A11C;
      *(_QWORD *)(v6 + 24) = v5;
      aBlock[4] = sub_101EC;
      v12 = v6;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_920D4;
      aBlock[3] = &block_descriptor_68;
      v7 = _Block_copy(aBlock);
      v8 = v12;
      v9 = v10;
      swift_retain(v6);
      objc_msgSend((id)v4, "performWithoutAnimation:", v7, swift_release(v8).n128_f64[0]);

      _Block_release(v7);
      LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v6, "", 133, 156, 40, 1);
      swift_release(v5);
      swift_release(v6);
      if ((v4 & 1) != 0)
        __break(1u);
    }
  }
}

void sub_2992BC(void *a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSIndexSet *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = type metadata accessor for IndexSet(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, "collectionViewLayout", v7);
  objc_msgSend(v10, "invalidateLayout");

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCD90);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v12 + 32) = a2;
  v20 = v12;
  v13 = sub_239FC(&qword_3E00D0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E00D8);
  v15 = sub_10EDC((unint64_t *)&unk_3E00E0, &qword_3E00D8, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v14, v15, v5, v13);
  IndexSet._bridgeToObjectiveC()(v16);
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  objc_msgSend(a1, "reloadSections:", v18);

}

uint64_t sub_299434(_QWORD *a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  __n128 v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *boxed_opaque_existential_0;
  Swift::String v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _BYTE v41[32];
  _QWORD v42[5];

  v3 = v2;
  v39 = a2;
  v40 = a1;
  v4 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OSLogger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetricsBehavior(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = UIResponder.nearestActionRunner.getter(v13);
  if (v16)
  {
    v18 = v16;
    v19 = v17;
    type metadata accessor for ActionRunnerOptions(0);
    v20 = swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_objectGraph]);
    v21 = BaseObjectGraph.__allocating_init(_:)(v20);
    v22 = objc_msgSend(v3, "view");
    sub_430E8(v39, (uint64_t)v41);
    v23 = v22;
    ActionOrigin.init(sender:view:)(v42, v41, v22);
    v24 = ActionRunnerOptions.withActionOrigin(_:)(v42);
    sub_D1D4((uint64_t)v42, (uint64_t *)&unk_3D30E0);
    swift_release(v21);

    ObjectType = swift_getObjectType();
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, enum case for ActionMetricsBehavior.fromAction(_:), v11);
    v26 = ActionRunner.perform(_:withMetrics:asPartOf:)(v40, v15, v24, ObjectType, v19);
    swift_unknownObjectRelease(v18);
    swift_release(v24);
    v27 = swift_release(v26);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v15, v11, v27);
  }
  else
  {
    static OSLogger.actions.getter(0);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
    v30 = type metadata accessor for LogMessage(0);
    v31 = swift_allocObject(v29, ((*(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80) | 7);
    *(_OWORD *)(v31 + 16) = xmmword_2F03C0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(44, 1);
    v32._object = (void *)0x800000000030A650;
    v32._countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    v33 = v40[3];
    v34 = __swift_project_boxed_opaque_existential_1(v40, v33);
    v42[3] = v33;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v42);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(boxed_opaque_existential_0, v34, v33);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v42);
    sub_D1D4((uint64_t)v42, &qword_3D1A70);
    v36._countAndFlagsBits = 0xD00000000000001ALL;
    v36._object = (void *)0x8000000000312E70;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    LogMessage.init(stringInterpolation:)(v6);
    Logger.error(_:)(v31, v7, &protocol witness table for OSLogger);
    v37 = swift_bridgeObjectRelease(v31);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v37);
  }
}

void sub_299760()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v1 = v0;
  v2 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (AccountPresenter.sectionCount.getter(v3))
  {
    v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController;
    v7 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController];
    v8 = v7;
    static ViewControllerContainment.remove(_:)(v7);

    v9 = *(void **)&v1[v6];
    *(_QWORD *)&v1[v6] = 0;

    v10 = *(void **)&v1[v6];
    v40 = v10;
    v11 = objc_msgSend(v1, "view");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "bounds");
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v20 = v19;

      v41 = v14;
      v42 = v16;
      v43 = v18;
      v44 = v20;
      v45 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v10, v1, &v41);

      return;
    }
    __break(1u);
  }
  else
  {
    static JULoadingViewController.PresentationContext.fullCover.getter(0);
    v21 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
    v22 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v5, 0);
    v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController;
    v24 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController];
    v25 = v24;
    static ViewControllerContainment.remove(_:)(v24);

    v26 = *(void **)&v1[v23];
    *(_QWORD *)&v1[v23] = v22;
    v27 = v22;

    v28 = *(void **)&v1[v23];
    v29 = v28;
    v30 = objc_msgSend(v1, "view");
    if (v30)
    {
      v31 = v30;
      objc_msgSend(v30, "bounds");
      v33 = v32;
      v35 = v34;
      v37 = v36;
      v39 = v38;

      v41 = v33;
      v42 = v35;
      v43 = v37;
      v44 = v39;
      v45 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v28, v1, &v41);

      return;
    }
  }
  __break(1u);
}

void sub_299988()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  _QWORD v33[4];
  char v34;
  _QWORD v35[4];
  char v36;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController];
  v3 = v2;
  static ViewControllerContainment.remove(_:)(v2);

  v4 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = 0;

  v5 = *(void **)&v0[v1];
  v6 = v5;
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  v8 = v7;
  objc_msgSend(v7, "bounds");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v35[0] = v10;
  v35[1] = v12;
  v35[2] = v14;
  v35[3] = v16;
  v36 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v5, v0, v35);

  v17 = *(void **)&v0[v1];
  if (v17)
  {
    v18 = type metadata accessor for JULoadingViewController(0);
    if (swift_dynamicCastClass(v17, v18))
    {
      v19 = v17;
      static ViewControllerContainment.remove(_:)(v17);

      v20 = *(void **)&v0[v1];
      *(_QWORD *)&v0[v1] = 0;

      v21 = *(void **)&v0[v1];
      v32 = v21;
      v22 = objc_msgSend(v0, "view");
      if (v22)
      {
        v23 = v22;
        objc_msgSend(v22, "bounds");
        v25 = v24;
        v27 = v26;
        v29 = v28;
        v31 = v30;

        v33[0] = v25;
        v33[1] = v27;
        v33[2] = v29;
        v33[3] = v31;
        v34 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v21, v0, v33);

        return;
      }
      goto LABEL_8;
    }
  }
}

void sub_299B3C(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v3;
  id v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD v24[4];
  char v25;

  v2 = v1;
  v3 = sub_29824C(a1, *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_presenter]);
  v4 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0));
  v5 = v3;
  v6 = (void *)OverlayViewController.init(wrapping:)(v5);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController;
  v8 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController];
  v9 = v8;
  static ViewControllerContainment.remove(_:)(v8);

  v10 = *(void **)&v2[v7];
  *(_QWORD *)&v2[v7] = v6;
  v11 = v6;

  v12 = *(void **)&v2[v7];
  v23 = v12;
  v13 = objc_msgSend(v2, "view");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    v24[0] = v16;
    v24[1] = v18;
    v24[2] = v20;
    v24[3] = v22;
    v25 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v12, v2, v24);

  }
  else
  {
    __break(1u);
  }
}

void sub_299C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v1 = objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_38FFD0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v3 = swift_allocObject(&unk_38FFF8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_29A47C;
  *(_QWORD *)(v3 + 24) = v2;
  v6[4] = sub_EC6A0;
  v7 = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_920D4;
  v6[3] = &block_descriptor_14_1;
  v4 = _Block_copy(v6);
  v5 = v7;
  swift_retain(v3);
  objc_msgSend((id)v1, "performWithoutAnimation:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v3, "", 133, 201, 40, 1);
  swift_release(v2);
  swift_release(v3);
  if ((v1 & 1) != 0)
    __break(1u);
}

void sub_299DA0(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "collectionView");
    objc_msgSend(v4, "reloadData");

  }
}

void sub_299E44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_objectGraph));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_presenter));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDataSource));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDelegate));

}

uint64_t type metadata accessor for AccountViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21AccountViewController);
}

uint64_t sub_299F48()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_authenticating);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_authenticating, v3, 0, 0);
  return *v1;
}

void sub_299F8C(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_authenticating);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_authenticating, v4, 1, 0);
  *v3 = a1;
  sub_299070();
}

void (*sub_299FE0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_authenticating, a1, 33, 0);
  return sub_29A028;
}

void sub_29A028(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_299070();
}

uint64_t sub_29A074(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E00B0, a2, (uint64_t (*)(uint64_t))type metadata accessor for AccountViewController, (uint64_t)&unk_304AD8);
}

uint64_t sub_29A0A0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E00B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AccountViewController, (uint64_t)&unk_304B10);
}

uint64_t sub_29A0CC(uint64_t a1, uint64_t a2)
{
  return sub_239FC((unint64_t *)&unk_3E00C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for AccountViewController, (uint64_t)&unk_304B40);
}

uint64_t sub_29A0F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_29A11C(__n128 a1)
{
  uint64_t v1;

  sub_2992BC(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_29A124()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double block_copy_helper_68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_68(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_29A14C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewLayout;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UICollectionViewTableLayout), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_accountCollectionViewDelegate] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21AccountViewController_authenticating] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/AccountViewController.swift", 51, 2, 50, 0);
  __break(1u);
}

void sub_29A210()
{
  void *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  NSString v10;
  NSString v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  NSString v16;
  id v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v19._object = (void *)0xE000000000000000;
  v3._object = (void *)0x8000000000318EA0;
  v3._countAndFlagsBits = 0xD000000000000017;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v19)._object;

  v6 = objc_msgSend(v1, "mainBundle");
  v7._countAndFlagsBits = 0xD00000000000001ALL;
  v20._object = (void *)0xE000000000000000;
  v7._object = (void *)0x8000000000318EC0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v20)._object;

  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v10, v11, 1);

  v12 = objc_msgSend(v1, "mainBundle");
  v21._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 19279;
  v13._object = (void *)0xE200000000000000;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v21)._object;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v16, 0, 0);

  objc_msgSend(v18, "addAction:", v17);
  objc_msgSend(v0, "presentViewController:animated:completion:", v18, 1, 0);

}

uint64_t sub_29A458()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_29A47C()
{
  uint64_t v0;

  sub_299DA0(v0);
}

uint64_t sub_29A484()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_29A494()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_29A4B8()
{
  uint64_t v0;

  return sub_298378(v0);
}

double sub_29A4C8()
{
  double result;

  result = 265.0;
  xmmword_3FD850 = xmmword_304BD0;
  return result;
}

void sub_29A4DC()
{
  qword_3FD860 = 0x4070000000000000;
}

id sub_29A4EC()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setAllowsGroupBlending:", 0);

  objc_msgSend(v0, "setAxis:", 1);
  objc_msgSend(v0, "setAlignment:", 3);
  objc_msgSend(v0, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v0, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v0;
}

id sub_29A5C4()
{
  return sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_29A5D8);
}

char *sub_29A5D8()
{
  int *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char *v17;
  char *v18;
  id v19;
  char *v20;
  double v21;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v0 = (int *)type metadata accessor for VEVButtonContainer.Style(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CF498 != -1)
    swift_once(&qword_3CF498, sub_13FB40);
  v3 = qword_3FB318;
  v5 = qword_3FB320;
  v4 = qword_3FB328;
  v6 = qword_3FB330;
  v7 = qword_3FB338;
  v32 = qword_3FB330;
  v33 = qword_3FB328;
  v8 = xmmword_3FB340;
  v30 = (void *)xmmword_3FB340;
  v31 = qword_3FB338;
  v29 = *((_QWORD *)&xmmword_3FB340 + 1);
  v27 = qword_3FB310;
  v28 = qword_3FB350;
  v25 = qword_3FB360;
  v26 = qword_3FB358;
  v9 = &v2[v0[5]];
  v23 = HIBYTE(word_3FB368);
  v24 = word_3FB368;
  v10 = type metadata accessor for Glyph(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (void *)v27;
  *(_QWORD *)v2 = v27;
  *((_QWORD *)v2 + 1) = v3;
  *((_QWORD *)v2 + 2) = v5;
  *((_QWORD *)v2 + 3) = v4;
  *((_QWORD *)v2 + 4) = v6;
  *((_QWORD *)v2 + 5) = v7;
  *((_OWORD *)v2 + 3) = v8;
  v12 = v28;
  v14 = v25;
  v13 = v26;
  *((_QWORD *)v2 + 8) = v28;
  *((_QWORD *)v2 + 9) = v13;
  *((_QWORD *)v2 + 10) = v14;
  v16 = v23;
  v15 = v24;
  v2[88] = v24;
  v2[89] = v16;
  v17 = &v2[v0[6]];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  v18 = &v2[v0[8]];
  *(_OWORD *)v18 = xmmword_2F1580;
  *((_OWORD *)v18 + 1) = xmmword_2F1580;
  *(_QWORD *)&v2[v0[9]] = 9;
  v2[v0[7]] = 0;
  v19 = objc_allocWithZone((Class)type metadata accessor for VEVButtonContainer(0));
  sub_DDA0(v11, v3, v5, v33, v32, v31, v30, v29, v12, v13, v14, v15, v16);
  v20 = sub_1DF878((uint64_t)v2);
  LODWORD(v21) = 1144750080;
  objc_msgSend(*(id *)&v20[qword_3D5D10], "setContentHuggingPriority:forAxis:", 0, v21);
  objc_msgSend(v20, "setHidden:", 1);
  return v20;
}

id sub_29A7E8()
{
  return sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_29A7FC);
}

id sub_29A7FC(void *a1)
{
  uint64_t v1;
  char v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  double v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  int v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  _QWORD v56[11];
  char v57;
  char v58;

  if (qword_3CF4A8 != -1)
    swift_once(&qword_3CF4A8, sub_13FC00);
  v1 = qword_3FB420;
  v2 = word_3FB428;
  v48 = HIBYTE(word_3FB428);
  v49 = unk_3FB418;
  v43 = qword_3FB410;
  v54 = *(_QWORD *)algn_3FB3D8;
  v55 = (void *)qword_3FB3D0;
  v52 = qword_3FB3E8;
  v53 = qword_3FB3E0;
  v50 = qword_3FB3F8;
  v51 = qword_3FB3F0;
  v3 = xmmword_3FB400;
  sub_DDA0((void *)qword_3FB3D0, *(uint64_t *)algn_3FB3D8, qword_3FB3E0, qword_3FB3E8, qword_3FB3F0, qword_3FB3F8, (void *)xmmword_3FB400, *((uint64_t *)&xmmword_3FB400 + 1), qword_3FB410, unk_3FB418, qword_3FB420, word_3FB428, SHIBYTE(word_3FB428));
  if (qword_3CF4E0 != -1)
    swift_once(&qword_3CF4E0, sub_13FEA0);
  v4 = *(_QWORD *)algn_3FB678;
  v47 = (void *)qword_3FB670;
  v5 = qword_3FB688;
  v6 = qword_3FB690;
  v7 = unk_3FB6B8;
  v8 = qword_3FB6C0;
  v9 = word_3FB6C8;
  v42 = HIBYTE(word_3FB6C8);
  v41 = qword_3FB6B0;
  v36 = qword_3FB6C0;
  v37 = unk_3FB6B8;
  v35 = word_3FB6C8;
  v38 = qword_3FB698;
  v39 = qword_3FB688;
  v46 = (void *)xmmword_3FB6A0;
  v44 = qword_3FB680;
  v45 = *((_QWORD *)&xmmword_3FB6A0 + 1);
  if (v48)
  {
    sub_DDA0((void *)qword_3FB670, *(uint64_t *)algn_3FB678, qword_3FB680, qword_3FB688, qword_3FB690, qword_3FB698, (void *)xmmword_3FB6A0, *((uint64_t *)&xmmword_3FB6A0 + 1), qword_3FB6B0, unk_3FB6B8, qword_3FB6C0, word_3FB6C8, SHIBYTE(word_3FB6C8));
    sub_DE20(v55, v54, v53, v52, v51, v50);
    sub_DE20((id)v3, *((uint64_t *)&v3 + 1), v43, v49, v1, v2);
    sub_DD48((void *)v3, *((uint64_t *)&v3 + 1), v43, v49, v1, v2);
    if (!v42)
    {
LABEL_7:
      v32 = v2;
      v31 = v1;
      v11 = v54;
      v10 = v55;
      v12 = v6;
      v13 = v53;
      v14 = v4;
      v16 = v51;
      v15 = v52;
      v17 = v50;
      sub_DCC8(v55, v54, v53, v52, v51, v50, (void *)v3, *((uint64_t *)&v3 + 1), v43, v49, v31, v32, v48);
      v45 = v14;
      v46 = v47;
      v41 = v44;
      v18 = v39;
      v19 = v38;
      goto LABEL_10;
    }
  }
  else
  {
    v20 = qword_3FB698;
    v21 = qword_3FB6B0;
    v34 = qword_3FB690;
    sub_DDA0(v55, v54, v53, v52, v51, v50, (void *)v3, *((uint64_t *)&v3 + 1), v43, v49, v1, v2, 0);
    v6 = v34;
    sub_DDA0(v47, v4, v44, v5, v34, v20, v46, v45, v21, v7, v8, v9, v42);
    if (!v42)
      goto LABEL_7;
  }
  sub_DD48(v47, v4, v44, v39, v6, v38);
  v33 = v2;
  v11 = v54;
  v10 = v55;
  v15 = v52;
  v13 = v53;
  v17 = v50;
  v16 = v51;
  sub_DCC8(v55, v54, v53, v52, v51, v50, (void *)v3, *((uint64_t *)&v3 + 1), v43, v49, v1, v33, v48);
  v12 = v36;
  v18 = v37;
  v19 = v35;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v56[0] = v10;
  v56[1] = v11;
  v56[2] = v13;
  v56[3] = v15;
  v56[4] = v16;
  v56[5] = v17;
  v56[6] = v46;
  v56[7] = v45;
  v56[8] = v41;
  v56[9] = v18;
  v56[10] = v12;
  v57 = v19;
  v58 = 1;
  v22 = sub_A96AC((uint64_t)v56, 1, 4, 0);
  v23 = qword_3CF020;
  v24 = v22;
  if (v23 != -1)
    swift_once(&qword_3CF020, sub_E274);
  objc_msgSend(v24, "setTextColor:", qword_3FA880);

  LODWORD(v25) = 1148846080;
  objc_msgSend(v24, "setContentCompressionResistancePriority:forAxis:", 1, v25);
  v26 = objc_msgSend(v24, "layer");
  v27 = objc_msgSend(a1, "traitCollection");
  v28 = (void *)UITraitCollection.suggestedTextBlendModeFilter.getter();

  objc_msgSend(v26, "setCompositingFilter:", v28);
  v29 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", a1, "buttonCaptionLabelTapped");
  objc_msgSend(v24, "addGestureRecognizer:", v29);
  objc_msgSend(v24, "setHidden:", 1);

  return v24;
}

id sub_29AC98()
{
  return sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_29ACAC);
}

id sub_29ACAC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int16 v39;
  char v40;
  unsigned __int8 v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void *v53;
  void *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  _QWORD v64[11];
  char v65;
  char v66;

  if (qword_3CF480 != -1)
    swift_once(&qword_3CF480, sub_13FA20);
  v0 = qword_3FB230;
  v1 = qword_3FB240;
  v2 = word_3FB248;
  v56 = HIBYTE(word_3FB248);
  v55 = unk_3FB238;
  v63 = (void *)qword_3FB1F0;
  v61 = qword_3FB200;
  v62 = *(_QWORD *)algn_3FB1F8;
  v59 = qword_3FB210;
  v60 = qword_3FB208;
  v57 = *((_QWORD *)&xmmword_3FB220 + 1);
  v58 = qword_3FB218;
  v54 = (void *)xmmword_3FB220;
  sub_DDA0((void *)qword_3FB1F0, *(uint64_t *)algn_3FB1F8, qword_3FB200, qword_3FB208, qword_3FB210, qword_3FB218, (void *)xmmword_3FB220, *((uint64_t *)&xmmword_3FB220 + 1), qword_3FB230, unk_3FB238, qword_3FB240, word_3FB248, SHIBYTE(word_3FB248));
  if (qword_3CF4C0 != -1)
    swift_once(&qword_3CF4C0, sub_13FD20);
  v3 = (void *)qword_3FB4F0;
  v4 = qword_3FB4F8;
  v5 = qword_3FB500;
  v7 = qword_3FB510;
  v6 = qword_3FB518;
  v8 = *((_QWORD *)&xmmword_3FB520 + 1);
  v52 = HIBYTE(word_3FB548);
  v50 = qword_3FB508;
  v51 = xmmword_3FB530;
  v45 = qword_3FB540;
  v46 = *((_QWORD *)&xmmword_3FB530 + 1);
  v44 = word_3FB548;
  v47 = qword_3FB518;
  v48 = qword_3FB510;
  v49 = *((_QWORD *)&xmmword_3FB520 + 1);
  v53 = (void *)xmmword_3FB520;
  if (v56)
  {
    sub_DDA0((void *)qword_3FB4F0, qword_3FB4F8, qword_3FB500, qword_3FB508, qword_3FB510, qword_3FB518, (void *)xmmword_3FB520, *((uint64_t *)&xmmword_3FB520 + 1), xmmword_3FB530, *((uint64_t *)&xmmword_3FB530 + 1), qword_3FB540, word_3FB548, SHIBYTE(word_3FB548));
    sub_DE20(v63, v62, v61, v60, v59, v58);
    sub_DE20(v54, v57, v0, v55, v1, v2);
    sub_DD48(v54, v57, v0, v55, v1, v2);
    if (!v52)
    {
LABEL_7:
      v38 = v2;
      v35 = v1;
      v9 = v63;
      v11 = v61;
      v10 = v62;
      v12 = v4;
      v13 = v60;
      v14 = v5;
      v15 = v58;
      v16 = v59;
      sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v35, v38, v56);
      v53 = v3;
      v49 = v12;
      v51 = v14;
      v17 = v50;
      v18 = v48;
      v19 = v47;
      goto LABEL_10;
    }
  }
  else
  {
    v39 = v2;
    v36 = v1;
    v33 = v0;
    v20 = xmmword_3FB530;
    v42 = (void *)qword_3FB4F0;
    v43 = v0;
    v21 = *((_QWORD *)&xmmword_3FB530 + 1);
    v41 = v2;
    v22 = v1;
    v23 = qword_3FB540;
    v24 = qword_3FB500;
    v25 = qword_3FB4F8;
    v26 = word_3FB548;
    sub_DDA0(v63, v62, v61, v60, v59, v58, v54, v57, v33, v55, v36, v39, SHIBYTE(v39));
    v40 = v26;
    v4 = v25;
    v5 = v24;
    v34 = v21;
    v37 = v23;
    v1 = v22;
    v2 = v41;
    v3 = v42;
    v0 = v43;
    sub_DDA0(v42, v4, v5, v50, v7, v6, v53, v8, v20, v34, v37, v40, v52);
    if (!v52)
      goto LABEL_7;
  }
  sub_DD48(v3, v4, v5, v50, v48, v47);
  v9 = v63;
  v11 = v61;
  v10 = v62;
  v16 = v59;
  v13 = v60;
  v15 = v58;
  sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v1, v2, v56);
  v18 = v45;
  v17 = v46;
  v19 = v44;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v64[0] = v9;
  v64[1] = v10;
  v64[2] = v11;
  v64[3] = v13;
  v64[4] = v16;
  v64[5] = v15;
  v64[6] = v53;
  v64[7] = v49;
  v64[8] = v51;
  v64[9] = v17;
  v64[10] = v18;
  v65 = v19;
  v66 = 1;
  v27 = sub_A96AC((uint64_t)v64, 2, 4, 0);
  objc_msgSend(v27, "setTextAlignment:", 1);
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v27;
  v30 = objc_msgSend(v28, "labelColor");
  objc_msgSend(v29, "setTextColor:", v30);

  LODWORD(v31) = 1148846080;
  objc_msgSend(v29, "setContentCompressionResistancePriority:forAxis:", 1, v31);
  if (qword_3CFAA0 != -1)
    swift_once(&qword_3CFAA0, sub_1D66E8);
  sub_11B6E4((void *)qword_3FCF58, *(double *)&qword_3FCF60, *(double *)&qword_3FCF68, *(double *)&qword_3FCF70);
  return v29;
}

id sub_29B0F8()
{
  return sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))sub_29B10C);
}

id sub_29B10C(void *a1)
{
  uint64_t v1;
  char v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  double v27;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  int v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  _QWORD v54[11];
  char v55;
  char v56;

  if (qword_3CF4A8 != -1)
    swift_once(&qword_3CF4A8, sub_13FC00);
  v1 = qword_3FB420;
  v2 = word_3FB428;
  v46 = HIBYTE(word_3FB428);
  v47 = unk_3FB418;
  v41 = qword_3FB410;
  v52 = *(_QWORD *)algn_3FB3D8;
  v53 = (void *)qword_3FB3D0;
  v50 = qword_3FB3E8;
  v51 = qword_3FB3E0;
  v48 = qword_3FB3F8;
  v49 = qword_3FB3F0;
  v3 = xmmword_3FB400;
  sub_DDA0((void *)qword_3FB3D0, *(uint64_t *)algn_3FB3D8, qword_3FB3E0, qword_3FB3E8, qword_3FB3F0, qword_3FB3F8, (void *)xmmword_3FB400, *((uint64_t *)&xmmword_3FB400 + 1), qword_3FB410, unk_3FB418, qword_3FB420, word_3FB428, SHIBYTE(word_3FB428));
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v4 = qword_3FB498;
  v45 = (void *)qword_3FB490;
  v5 = qword_3FB4A8;
  v6 = qword_3FB4B0;
  v7 = xmmword_3FB4D8;
  v8 = word_3FB4E8;
  v40 = HIBYTE(word_3FB4E8);
  v39 = qword_3FB4D0;
  v34 = *((_QWORD *)&xmmword_3FB4D8 + 1);
  v35 = xmmword_3FB4D8;
  v33 = word_3FB4E8;
  v36 = qword_3FB4B8;
  v37 = qword_3FB4A8;
  v44 = (void *)xmmword_3FB4C0;
  v42 = qword_3FB4A0;
  v43 = *((_QWORD *)&xmmword_3FB4C0 + 1);
  if (v46)
  {
    sub_DDA0((void *)qword_3FB490, qword_3FB498, qword_3FB4A0, qword_3FB4A8, qword_3FB4B0, qword_3FB4B8, (void *)xmmword_3FB4C0, *((uint64_t *)&xmmword_3FB4C0 + 1), qword_3FB4D0, xmmword_3FB4D8, *((uint64_t *)&xmmword_3FB4D8 + 1), word_3FB4E8, SHIBYTE(word_3FB4E8));
    sub_DE20(v53, v52, v51, v50, v49, v48);
    sub_DE20((id)v3, *((uint64_t *)&v3 + 1), v41, v47, v1, v2);
    sub_DD48((void *)v3, *((uint64_t *)&v3 + 1), v41, v47, v1, v2);
    if (!v40)
    {
LABEL_7:
      v30 = v2;
      v29 = v1;
      v10 = v52;
      v9 = v53;
      v11 = v6;
      v12 = v51;
      v13 = v4;
      v15 = v49;
      v14 = v50;
      v16 = v48;
      sub_DCC8(v53, v52, v51, v50, v49, v48, (void *)v3, *((uint64_t *)&v3 + 1), v41, v47, v29, v30, v46);
      v43 = v13;
      v44 = v45;
      v39 = v42;
      v17 = v37;
      v18 = v36;
      goto LABEL_10;
    }
  }
  else
  {
    v19 = qword_3FB4B8;
    v20 = qword_3FB4D0;
    v32 = qword_3FB4B0;
    sub_DDA0(v53, v52, v51, v50, v49, v48, (void *)v3, *((uint64_t *)&v3 + 1), v41, v47, v1, v2, 0);
    v6 = v32;
    sub_DDA0(v45, v4, v42, v5, v32, v19, v44, v43, v20, v7, *((uint64_t *)&v7 + 1), v8, v40);
    if (!v40)
      goto LABEL_7;
  }
  sub_DD48(v45, v4, v42, v37, v6, v36);
  v31 = v2;
  v10 = v52;
  v9 = v53;
  v14 = v50;
  v12 = v51;
  v16 = v48;
  v15 = v49;
  sub_DCC8(v53, v52, v51, v50, v49, v48, (void *)v3, *((uint64_t *)&v3 + 1), v41, v47, v1, v31, v46);
  v11 = v34;
  v17 = v35;
  v18 = v33;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v54[0] = v9;
  v54[1] = v10;
  v54[2] = v12;
  v54[3] = v14;
  v54[4] = v15;
  v54[5] = v16;
  v54[6] = v44;
  v54[7] = v43;
  v54[8] = v39;
  v54[9] = v17;
  v54[10] = v11;
  v55 = v18;
  v56 = 1;
  v21 = sub_A96AC((uint64_t)v54, 1, 4, 0);
  v22 = qword_3CF020;
  v23 = v21;
  if (v22 != -1)
    swift_once(&qword_3CF020, sub_E274);
  objc_msgSend(v23, "setTextColor:", qword_3FA880);

  v24 = objc_msgSend(v23, "layer");
  v25 = objc_msgSend(a1, "traitCollection");
  v26 = (void *)UITraitCollection.suggestedTextBlendModeFilter.getter();

  objc_msgSend(v24, "setCompositingFilter:", v26);
  LODWORD(v27) = 1148846080;
  objc_msgSend(v23, "setContentCompressionResistancePriority:forAxis:", 1, v27);
  if (qword_3CFAA0 != -1)
    swift_once(&qword_3CFAA0, sub_1D66E8);
  sub_11B6E4((void *)qword_3FCF58, *(double *)&qword_3FCF60, *(double *)&qword_3FCF68, *(double *)&qword_3FCF70);
  return v23;
}

id sub_29B590()
{
  return sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___benefitsTextLabel, (uint64_t (*)(void))sub_29B5A4);
}

id sub_29B5A4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int16 v39;
  char v40;
  unsigned __int8 v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void *v53;
  void *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  _QWORD v64[11];
  char v65;
  char v66;

  if (qword_3CF478 != -1)
    swift_once(&qword_3CF478, sub_13F9C0);
  v0 = qword_3FB1D0;
  v1 = qword_3FB1E0;
  v2 = word_3FB1E8;
  v56 = HIBYTE(word_3FB1E8);
  v55 = unk_3FB1D8;
  v63 = (void *)qword_3FB190;
  v61 = qword_3FB1A0;
  v62 = *(_QWORD *)algn_3FB198;
  v59 = qword_3FB1B0;
  v60 = qword_3FB1A8;
  v57 = *((_QWORD *)&xmmword_3FB1C0 + 1);
  v58 = qword_3FB1B8;
  v54 = (void *)xmmword_3FB1C0;
  sub_DDA0((void *)qword_3FB190, *(uint64_t *)algn_3FB198, qword_3FB1A0, qword_3FB1A8, qword_3FB1B0, qword_3FB1B8, (void *)xmmword_3FB1C0, *((uint64_t *)&xmmword_3FB1C0 + 1), qword_3FB1D0, unk_3FB1D8, qword_3FB1E0, word_3FB1E8, SHIBYTE(word_3FB1E8));
  if (qword_3CF4C0 != -1)
    swift_once(&qword_3CF4C0, sub_13FD20);
  v3 = (void *)qword_3FB4F0;
  v4 = qword_3FB4F8;
  v5 = qword_3FB500;
  v7 = qword_3FB510;
  v6 = qword_3FB518;
  v8 = *((_QWORD *)&xmmword_3FB520 + 1);
  v52 = HIBYTE(word_3FB548);
  v50 = qword_3FB508;
  v51 = xmmword_3FB530;
  v45 = qword_3FB540;
  v46 = *((_QWORD *)&xmmword_3FB530 + 1);
  v44 = word_3FB548;
  v47 = qword_3FB518;
  v48 = qword_3FB510;
  v49 = *((_QWORD *)&xmmword_3FB520 + 1);
  v53 = (void *)xmmword_3FB520;
  if (!v56)
  {
    v39 = v2;
    v36 = v1;
    v33 = v0;
    v20 = xmmword_3FB530;
    v42 = (void *)qword_3FB4F0;
    v43 = v0;
    v21 = *((_QWORD *)&xmmword_3FB530 + 1);
    v41 = v2;
    v22 = v1;
    v23 = qword_3FB540;
    v24 = qword_3FB500;
    v25 = qword_3FB4F8;
    v26 = word_3FB548;
    sub_DDA0(v63, v62, v61, v60, v59, v58, v54, v57, v33, v55, v36, v39, SHIBYTE(v39));
    v40 = v26;
    v4 = v25;
    v5 = v24;
    v34 = v21;
    v37 = v23;
    v1 = v22;
    v2 = v41;
    v3 = v42;
    v0 = v43;
    sub_DDA0(v42, v4, v5, v50, v7, v6, v53, v8, v20, v34, v37, v40, v52);
    if (!v52)
      goto LABEL_7;
LABEL_9:
    sub_DD48(v3, v4, v5, v50, v48, v47);
    v9 = v63;
    v11 = v61;
    v10 = v62;
    v16 = v59;
    v13 = v60;
    v15 = v58;
    sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v1, v2, v56);
    v18 = v45;
    v17 = v46;
    v19 = v44;
    goto LABEL_10;
  }
  sub_DDA0((void *)qword_3FB4F0, qword_3FB4F8, qword_3FB500, qword_3FB508, qword_3FB510, qword_3FB518, (void *)xmmword_3FB520, *((uint64_t *)&xmmword_3FB520 + 1), xmmword_3FB530, *((uint64_t *)&xmmword_3FB530 + 1), qword_3FB540, word_3FB548, SHIBYTE(word_3FB548));
  sub_DE20(v63, v62, v61, v60, v59, v58);
  sub_DE20(v54, v57, v0, v55, v1, v2);
  sub_DD48(v54, v57, v0, v55, v1, v2);
  if (v52)
    goto LABEL_9;
LABEL_7:
  v38 = v2;
  v35 = v1;
  v9 = v63;
  v11 = v61;
  v10 = v62;
  v12 = v4;
  v13 = v60;
  v14 = v5;
  v15 = v58;
  v16 = v59;
  sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v35, v38, v56);
  v53 = v3;
  v49 = v12;
  v51 = v14;
  v17 = v50;
  v18 = v48;
  v19 = v47;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v64[0] = v9;
  v64[1] = v10;
  v64[2] = v11;
  v64[3] = v13;
  v64[4] = v16;
  v64[5] = v15;
  v64[6] = v53;
  v64[7] = v49;
  v64[8] = v51;
  v64[9] = v17;
  v64[10] = v18;
  v65 = v19;
  v66 = 1;
  v27 = sub_A96AC((uint64_t)v64, 3, 4, 0);
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v27;
  v30 = objc_msgSend(v28, "labelColor");
  objc_msgSend(v29, "setTextColor:", v30);

  objc_msgSend(v29, "setTextAlignment:", 1);
  LODWORD(v31) = 1148846080;
  objc_msgSend(v29, "setContentCompressionResistancePriority:forAxis:", 1, v31);
  objc_msgSend(v29, "setHidden:", 1);
  return v29;
}

id sub_29B9C8()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  _QWORD v7[5];
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = objc_allocWithZone((Class)UIColor);
  v7[4] = sub_4605C;
  v8 = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_EBBFC;
  v7[3] = &block_descriptor_69;
  v2 = _Block_copy(v7);
  v3 = objc_msgSend(v1, "initWithDynamicProvider:", v2);
  _Block_release(v2);
  objc_msgSend(v0, "setBackgroundColor:", v3, swift_release(v8).n128_f64[0]);

  v4 = objc_msgSend(v0, "heightAnchor");
  v5 = objc_msgSend(v4, "constraintEqualToConstant:", 1.0);

  objc_msgSend(v5, "setActive:", 1);
  objc_msgSend(v0, "setHidden:", 1);
  return v0;
}

void sub_29BB1C(id a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = v1;
  if (a1)
    v4 = objc_msgSend(a1, "userInterfaceStyle");
  else
    v4 = 0;
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = objc_msgSend(v5, "userInterfaceStyle");

  if (!a1 || v4 != v6)
  {
    v7 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_29A7FC);
    v8 = objc_msgSend(v7, "layer");

    v9 = objc_msgSend(v2, "traitCollection");
    v10 = (void *)UITraitCollection.suggestedTextBlendModeFilter.getter();

    objc_msgSend(v8, "setCompositingFilter:", v10);
    v11 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))sub_29B10C);
    v12 = objc_msgSend(v11, "layer");

    v13 = objc_msgSend(v2, "traitCollection");
    v14 = (id)UITraitCollection.suggestedTextBlendModeFilter.getter();

    objc_msgSend(v12, "setCompositingFilter:", v14);
  }
}

char *sub_29BD10(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  id v30;
  char *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  _BYTE *v57;
  double v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  double v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  id v82;
  double v83;
  uint64_t v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  void *v97;
  id v98;
  id v99;
  id v100;
  id v101;
  __C::UILayoutPriority v102;
  Class isa;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  id v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  id v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  id v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  id v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  void *v178;
  uint64_t v179;
  Class v180;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char v191[120];
  uint64_t v192;
  char v193[48];
  objc_super v194;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_logoView;
  v12 = type metadata accessor for ArtworkView(0);
  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12));
  v14 = v5;
  v15 = (char *)objc_msgSend(v13, "init");
  v16 = &v15[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v17 = *(void **)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;

  sub_E9020();
  v18 = (void *)objc_opt_self(UIColor);
  v19 = objc_msgSend(v18, "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v19);

  *(_QWORD *)&v5[v11] = v15;
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_upsellBanner;
  v21 = objc_allocWithZone((Class)type metadata accessor for UpsellBannerView(0));
  *(_QWORD *)&v14[v20] = sub_17D618(0);
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_bannerModel] = 0;
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_verticalStack;
  *(_QWORD *)&v14[v22] = sub_29A4EC();
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subscribeButton] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___buttonCaptionLabel] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___benefitsTextLabel] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_blurView] = 0;
  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_separatorView;
  *(_QWORD *)&v14[v23] = sub_29B9C8();
  v24 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_entitlementBadge;
  v25 = objc_allocWithZone((Class)type metadata accessor for EntitlementBadgeView(0));
  *(_QWORD *)&v14[v24] = sub_FD3E8();
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_objectGraph] = 0;

  v194.receiver = v14;
  v194.super_class = ObjectType;
  v26 = (char *)objc_msgSendSuper2(&v194, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v26, "setPreservesSuperviewLayoutMargins:", 1);
  type metadata accessor for FadedBlurView();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22D8);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_2EFA20;
  *(_OWORD *)(v28 + 32) = xmmword_2F1590;
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  inited = swift_initStackObject(v185, v193);
  *(_OWORD *)(inited + 16) = xmmword_2EFC90;
  *(_QWORD *)(inited + 32) = objc_msgSend(v18, "clearColor");
  v30 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 1.0);
  *(_QWORD *)(inited + 40) = v30;
  v192 = inited;
  specialized Array._endMutation()(v30);
  v31 = sub_1CD1E4(v28, inited, 50.0);
  objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v26, "addSubview:", v31);
  v32 = *(void **)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_blurView];
  *(_QWORD *)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_blurView] = v31;
  v189 = v31;

  v33 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_verticalStack;
  v34 = *(void **)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_verticalStack];
  objc_msgSend(v26, "addSubview:", v34);
  v192 = (uint64_t)_swiftEmptyArrayStorage;
  v187 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_logoView;
  v35 = *(_QWORD *)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_logoView];
  objc_msgSend(v34, "addArrangedSubview:", v35);
  objc_msgSend(v34, "setCustomSpacing:afterView:", v35, 25.0);
  v36 = v34;
  v37 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_29ACAC);
  objc_msgSend(v36, "addArrangedSubview:", v37);

  v38 = *(id *)&v26[v33];
  v39 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_29ACAC);
  objc_msgSend(v38, "setCustomSpacing:afterView:", v39, 23.0);

  v40 = *(id *)&v26[v33];
  v41 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))sub_29B10C);
  objc_msgSend(v40, "addArrangedSubview:", v41);

  v42 = *(void **)&v26[v33];
  v43 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_separatorView;
  objc_msgSend(v42, "addArrangedSubview:", *(_QWORD *)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_separatorView]);
  v188 = v43;
  objc_msgSend(v42, "setCustomSpacing:afterView:", *(_QWORD *)&v26[v43], 36.34);
  v44 = v42;
  v45 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___benefitsTextLabel, (uint64_t (*)(void))sub_29B5A4);
  objc_msgSend(v44, "addArrangedSubview:", v45);

  v46 = *(id *)&v26[v33];
  v47 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___benefitsTextLabel, (uint64_t (*)(void))sub_29B5A4);
  objc_msgSend(v46, "setCustomSpacing:afterView:", v47, 36.67);

  v48 = *(id *)&v26[v33];
  v49 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_29A5D8);
  objc_msgSend(v48, "addArrangedSubview:", v49);

  v50 = *(id *)&v26[v33];
  v51 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_29A5D8);
  objc_msgSend(v50, "setCustomSpacing:afterView:", v51, 17.34);

  v52 = *(id *)&v26[v33];
  v53 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_29A7FC);
  objc_msgSend(v52, "addArrangedSubview:", v53);

  v54 = *(id *)&v26[v33];
  v55 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_29A7FC);
  objc_msgSend(v54, "setCustomSpacing:afterView:", v55, 27.0);

  v190 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_entitlementBadge;
  objc_msgSend(v26, "addSubview:", *(_QWORD *)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_entitlementBadge]);
  sub_1F6D9C((uint64_t)_swiftEmptyArrayStorage);
  v56 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_upsellBanner;
  v57 = *(_BYTE **)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_upsellBanner];
  v57[qword_3D96B0] = 0;
  objc_msgSend(v57, "setHidden:", 1);
  LODWORD(v58) = 1148846080;
  objc_msgSend(v57, "setContentCompressionResistancePriority:forAxis:", 1, v58);
  v59 = *(void **)&v26[v33];
  v60 = objc_allocWithZone((Class)UIView);
  v61 = v59;
  v62 = objc_msgSend(v60, "init");
  objc_msgSend(v61, "addArrangedSubview:", v62);

  v63 = *(void **)&v26[v33];
  v64 = *(void **)&v26[v56];
  objc_msgSend(v63, "addArrangedSubview:", v64);
  objc_msgSend(v63, "setCustomSpacing:afterView:", v64, 25.0);
  v65 = objc_msgSend(v64, "widthAnchor");
  v66 = objc_msgSend(v63, "widthAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  LODWORD(v68) = 1144750080;
  objc_msgSend(v67, "setPriority:", v68);
  v69 = v67;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
  v71 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFFF8));
  v70 = *(_QWORD *)((char *)&dword_18 + (v192 & 0xFFFFFFFFFFFFFF8));
  if (v71 >= v70 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
  v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v69);
  specialized Array._endMutation()(v72);
  v73 = objc_msgSend(*(id *)&v26[v56], "widthAnchor");
  if (qword_3CF768 != -1)
    swift_once(&qword_3CF768, sub_17D3D0);
  v74 = objc_msgSend(v73, "constraintLessThanOrEqualToConstant:", *(double *)&qword_3FCA98, v69);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
  v77 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFFF8));
  v76 = *(_QWORD *)((char *)&dword_18 + (v192 & 0xFFFFFFFFFFFFFF8));
  if (v77 >= v76 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
  v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v74);
  specialized Array._endMutation()(v78);
  objc_msgSend(*(id *)&v26[v190], "setHidden:", 1);
  v79 = objc_msgSend(*(id *)&v26[v33], "bottomAnchor");
  v80 = objc_msgSend(v26, "layoutMarginsGuide");
  v81 = objc_msgSend(v80, "bottomAnchor");

  v82 = objc_msgSend(v79, "constraintEqualToAnchor:", v81);
  LODWORD(v83) = 1148846080;
  objc_msgSend(v82, "setPriority:", v83);
  v84 = swift_initStackObject(v185, v191);
  *(_OWORD *)(v84 + 16) = xmmword_304BE0;
  v85 = objc_msgSend(*(id *)&v26[v33], "leadingAnchor");
  v86 = objc_msgSend(v26, "layoutMarginsGuide");
  v87 = objc_msgSend(v86, "leadingAnchor");

  v88 = objc_msgSend(v85, "constraintEqualToAnchor:", v87);
  *(_QWORD *)(v84 + 32) = v88;
  v89 = objc_msgSend(*(id *)&v26[v33], "trailingAnchor");
  v90 = objc_msgSend(v26, "layoutMarginsGuide");
  v91 = objc_msgSend(v90, "trailingAnchor");

  v92 = objc_msgSend(v89, "constraintEqualToAnchor:", v91);
  *(_QWORD *)(v84 + 40) = v92;
  v93 = objc_msgSend(*(id *)&v26[v33], "topAnchor");
  v94 = objc_msgSend(v26, "layoutMarginsGuide");
  v95 = objc_msgSend(v94, "topAnchor");

  v96 = objc_msgSend(v93, "constraintEqualToAnchor:", v95);
  *(_QWORD *)(v84 + 48) = v96;
  *(_QWORD *)(v84 + 56) = v82;
  v97 = *(void **)&v26[v187];
  v186 = v82;
  v98 = objc_msgSend(v97, "widthAnchor");
  if (qword_3CFCD8 != -1)
    swift_once(&qword_3CFCD8, sub_29A4C8);
  v99 = objc_msgSend(v98, "constraintEqualToConstant:", *(double *)&xmmword_3FD850);

  *(_QWORD *)(v84 + 64) = v99;
  v100 = objc_msgSend(*(id *)&v26[v187], "heightAnchor");
  v101 = objc_retainAutoreleasedReturnValue(objc_msgSend(v100, "constraintEqualToConstant:", *((double *)&xmmword_3FD850
                                                                                             + 1)));

  v102.rawValue = static UILayoutPriority.highestBreakable.getter();
  isa = NSLayoutConstraint.withPriority(priority:)(v102).super.isa;

  *(_QWORD *)(v84 + 72) = isa;
  v104 = objc_msgSend(*(id *)&v26[v188], "leadingAnchor");
  v105 = objc_msgSend(v26, "layoutMarginsGuide");
  v106 = objc_msgSend(v105, "leadingAnchor");

  v107 = objc_msgSend(v104, "constraintEqualToAnchor:", v106);
  *(_QWORD *)(v84 + 80) = v107;
  v108 = objc_msgSend(*(id *)&v26[v188], "trailingAnchor");
  v109 = objc_msgSend(v26, "layoutMarginsGuide");
  v110 = objc_msgSend(v109, "trailingAnchor");

  v111 = objc_msgSend(v108, "constraintEqualToAnchor:", v110);
  *(_QWORD *)(v84 + 88) = v111;
  v112 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_29A5D8);
  v113 = objc_msgSend(v112, "heightAnchor");

  v114 = objc_msgSend(v113, "constraintEqualToConstant:", 44.0);
  *(_QWORD *)(v84 + 96) = v114;
  v115 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_29A5D8);
  v116 = objc_msgSend(v115, "centerXAnchor");

  v117 = objc_msgSend(v26, "layoutMarginsGuide");
  v118 = objc_msgSend(v117, "centerXAnchor");

  v119 = objc_msgSend(v116, "constraintEqualToAnchor:", v118);
  *(_QWORD *)(v84 + 104) = v119;
  v120 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_29A5D8);
  v121 = objc_msgSend(v120, "widthAnchor");

  if (qword_3CFCE0 != -1)
    swift_once(&qword_3CFCE0, sub_29A4DC);
  v122 = objc_msgSend(v121, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_3FD860);

  *(_QWORD *)(v84 + 112) = v122;
  specialized Array._endMutation()(v123);
  sub_1F6D9C(v84);
  v124 = objc_msgSend(v189, "bottomAnchor");
  v125 = objc_msgSend(v26, "bottomAnchor");
  v126 = objc_msgSend(v124, "constraintEqualToAnchor:", v125);

  v127 = objc_msgSend(v189, "leadingAnchor");
  v128 = objc_msgSend(v26, "leadingAnchor");
  v129 = objc_msgSend(v127, "constraintEqualToAnchor:", v128);

  v130 = objc_msgSend(v189, "trailingAnchor");
  v131 = objc_msgSend(v26, "trailingAnchor");
  v132 = objc_msgSend(v130, "constraintEqualToAnchor:", v131);

  v133 = objc_msgSend(v189, "heightAnchor");
  v134 = objc_msgSend(v133, "constraintEqualToConstant:", 300.0);

  v135 = v192;
  if ((unint64_t)v192 >> 62)
  {
    if (v192 < 0)
      v182 = v192;
    else
      v182 = v192 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v192);
    v137 = _CocoaArrayWrapper.endIndex.getter(v182);
    swift_bridgeObjectRelease(v135);
    v138 = v137 + 4;
    if (!__OFADD__(v137, 4))
    {
LABEL_13:
      v139 = sub_215E80(v138, 1);
      specialized Array._endMutation()(v139);
      v126 = v126;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v126);
      v137 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFFF8));
      v136 = *(_QWORD *)((char *)&dword_18 + (v192 & 0xFFFFFFFFFFFFFF8));
      if (v137 < v136 >> 1)
        goto LABEL_14;
      goto LABEL_34;
    }
  }
  else
  {
    v136 = v192 & 0xFFFFFFFFFFFFF8;
    v137 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFF8));
    v138 = v137 + 4;
    if (!__OFADD__(v137, 4))
      goto LABEL_13;
  }
  __break(1u);
LABEL_34:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v136 > 1, v137 + 1, 1);
LABEL_14:
  v140 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v137, v126);
  specialized Array._endMutation()(v140);
  v141 = v129;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v141);
  v143 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFFF8));
  v142 = *(_QWORD *)((char *)&dword_18 + (v192 & 0xFFFFFFFFFFFFFF8));
  if (v143 >= v142 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v142 > 1, v143 + 1, 1);
  v144 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v143, v141);
  specialized Array._endMutation()(v144);
  v145 = v132;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v145);
  v147 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFFF8));
  v146 = *(_QWORD *)((char *)&dword_18 + (v192 & 0xFFFFFFFFFFFFFF8));
  if (v147 >= v146 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v146 > 1, v147 + 1, 1);
  v148 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v147, v145);
  specialized Array._endMutation()(v148);
  v149 = v134;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v149);
  v151 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFFF8));
  v150 = *(_QWORD *)((char *)&dword_18 + (v192 & 0xFFFFFFFFFFFFFF8));
  if (v151 >= v150 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v150 > 1, v151 + 1, 1);
  v152 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v151, v149);
  specialized Array._endMutation()(v152);

  v153 = objc_msgSend(*(id *)&v26[v190], "leadingAnchor");
  v154 = objc_msgSend(v26, "safeAreaLayoutGuide");
  v155 = objc_msgSend(v154, "leadingAnchor");

  v156 = objc_msgSend(v153, "constraintEqualToAnchor:", v155);
  v157 = objc_msgSend(*(id *)&v26[v190], "trailingAnchor");
  v158 = objc_msgSend(v26, "safeAreaLayoutGuide");
  v159 = objc_msgSend(v158, "trailingAnchor");

  v160 = objc_msgSend(v157, "constraintEqualToAnchor:", v159);
  v161 = objc_msgSend(*(id *)&v26[v190], "bottomAnchor");
  v162 = objc_msgSend(v26, "bottomAnchor");
  v163 = objc_msgSend(v161, "constraintEqualToAnchor:", v162);

  v164 = v192;
  if ((unint64_t)v192 >> 62)
  {
    if (v192 < 0)
      v183 = v192;
    else
      v183 = v192 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v192);
    v166 = _CocoaArrayWrapper.endIndex.getter(v183);
    swift_bridgeObjectRelease(v164);
    v167 = v166 + 3;
    if (!__OFADD__(v166, 3))
    {
LABEL_22:
      v168 = sub_215E80(v167, 1);
      specialized Array._endMutation()(v168);
      v156 = v156;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v156);
      v166 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFFF8));
      v165 = *(_QWORD *)((char *)&dword_18 + (v192 & 0xFFFFFFFFFFFFFF8));
      if (v166 < v165 >> 1)
        goto LABEL_23;
      goto LABEL_41;
    }
  }
  else
  {
    v165 = v192 & 0xFFFFFFFFFFFFF8;
    v166 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFF8));
    v167 = v166 + 3;
    if (!__OFADD__(v166, 3))
      goto LABEL_22;
  }
  __break(1u);
LABEL_41:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v165 > 1, v166 + 1, 1);
LABEL_23:
  v169 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v166, v156);
  specialized Array._endMutation()(v169);
  v170 = v160;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v170);
  v172 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFFF8));
  v171 = *(_QWORD *)((char *)&dword_18 + (v192 & 0xFFFFFFFFFFFFFF8));
  if (v172 >= v171 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v171 > 1, v172 + 1, 1);
  v173 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v172, v170);
  specialized Array._endMutation()(v173);
  v174 = v163;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v174);
  v176 = *(_QWORD *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFFF8));
  v175 = *(_QWORD *)((char *)&dword_18 + (v192 & 0xFFFFFFFFFFFFFF8));
  if (v176 >= v175 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v175 > 1, v176 + 1, 1);
  v177 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v176, v174);
  specialized Array._endMutation()(v177);

  v178 = (void *)objc_opt_self(NSLayoutConstraint);
  v179 = v192;
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v179);
  v180 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v178, "activateConstraints:", v180, swift_bridgeObjectRelease(v179).n128_f64[0]);

  swift_bridgeObjectRelease(v192);
  return v26;
}

void sub_29D1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  _QWORD v27[15];

  v1 = v0;
  v2 = type metadata accessor for NetworkTaskPriority(0);
  __chkstk_darwin(v2);
  v27[9] = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Logger(0);
  v27[7] = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v27[6] = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v6);
  v27[8] = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v12);
  v27[14] = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArtworkModel(0);
  __chkstk_darwin(v14);
  v27[5] = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)v27 - v19;
  v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_objectGraph);
  if (v21)
  {
    v27[10] = v18;
    v27[11] = v17;
    v27[2] = v4;
    v27[3] = v11;
    v27[13] = v21;
    v22 = swift_retain(v21);
    v23 = ChannelHeader.banner.getter(v22);
    v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_bannerModel);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_bannerModel) = v23;
    v25 = swift_release(v24);
    v26 = (char *)&loc_29D3D8 + *((int *)qword_29EA28 + ChannelHeader.offerType.getter(v25));
    v27[12] = v20;
    v27[4] = v9;
    __asm { BR              X10 }
  }
}

BOOL sub_29EA38()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v0 = ChannelHeader.banner.getter();
  if (v0)
  {
    v1 = v0;
    v2 = UpsellBanner.isEntitlementsBanner.getter();
    swift_release(v1);
    if ((v2 & 1) != 0)
      return 1;
  }
  v3 = ChannelHeader.offerDescription.getter();
  if (!v4)
    return 0;
  v5 = v3;
  v6 = v4;
  swift_bridgeObjectRelease(v4);
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = v5 & 0xFFFFFFFFFFFFLL;
  return v7 != 0;
}

uint64_t sub_29EABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD v28[4];
  _QWORD v29[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v28[-1] - v9;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_bannerModel);
  if (v11 && (v12 = swift_retain(v11), v13 = UpsellBanner.subtitleAction.getter(v12), swift_release(v11), v13))
  {
    v14 = static Logger.purchases.getter(v8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "Performing OAuth action on channel header subtitle click.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    v29[3] = type metadata accessor for Action(0);
    v29[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v29[0] = v13;
    swift_retain(v13);
    v18 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_29A7FC);
    v28[3] = type metadata accessor for DynamicTypeLabel();
    v28[0] = v18;
    v20 = sub_239FC(&qword_3E0190, v19, (uint64_t (*)(uint64_t))type metadata accessor for ChannelHeaderView, (uint64_t)&unk_304C54);
    v21 = DependencyBindableView.perform(_:from:in:)(v29, v28, v1, ObjectType, v20);
    swift_release(v21);
    swift_release(v13);
    sub_D1D4((uint64_t)v28, &qword_3D1A70);
    return __swift_destroy_boxed_opaque_existential_0(v29);
  }
  else
  {
    v23 = static Logger.purchases.getter(v8);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "User clicked on OAuth but there was no action available.", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_29ED98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12[24];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_objectGraph) = a1;
  swift_release(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_upsellBanner);
  v5 = *(_QWORD *)(v4 + qword_3D9750);
  *(_QWORD *)(v4 + qword_3D9750) = a1;
  swift_retain(a1);
  swift_release(v5);
  v6 = (uint64_t *)(*(_QWORD *)(v4 + qword_3D96E8)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph);
  swift_beginAccess(v6, v12, 1, 0);
  v7 = *v6;
  *v6 = a1;
  swift_retain_n(a1, 2);
  swift_release(v7);
  v8 = (char *)SubscriptionNameAreaView.channelLinkButton.getter();
  v9 = &v8[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph];
  swift_beginAccess(&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph], &v11, 1, 0);
  v10 = *(_QWORD *)v9;
  *(_QWORD *)v9 = a1;
  swift_release(v10);
  swift_retain(a1);

}

uint64_t type metadata accessor for ChannelHeaderView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17ChannelHeaderView);
}

void sub_29EFA4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_upsellBanner);
  v3 = *(unsigned __int8 *)(v2 + qword_3D96C0);
  *(_BYTE *)(v2 + qword_3D96C0) = a1;
  sub_17D3E4(v3);
}

double sub_29EFE4()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_objectGraph)).n128_u64[0];
  return result;
}

uint64_t sub_29EFF8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_239FC(&qword_3E0190, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChannelHeaderView, (uint64_t)&unk_304C54);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_29F034()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_29F058()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_logoView;
  v3 = type metadata accessor for ArtworkView(0);
  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  v5 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v6 = *(void **)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;

  sub_E9020();
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v7);

  *(_QWORD *)&v1[v2] = v4;
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_upsellBanner;
  v9 = objc_allocWithZone((Class)type metadata accessor for UpsellBannerView(0));
  *(_QWORD *)&v1[v8] = sub_17D618(0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_bannerModel] = 0;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_verticalStack;
  *(_QWORD *)&v1[v10] = sub_29A4EC();
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subscribeButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___buttonCaptionLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView____lazy_storage___benefitsTextLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_blurView] = 0;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_separatorView;
  *(_QWORD *)&v1[v11] = sub_29B9C8();
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_entitlementBadge;
  v13 = objc_allocWithZone((Class)type metadata accessor for EntitlementBadgeView(0));
  *(_QWORD *)&v1[v12] = sub_FD3E8();
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17ChannelHeaderView_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ChannelHeaderView.swift", 47, 2, 246, 0);
  __break(1u);
}

double block_copy_helper_69(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_69(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t destroy for EpisodeHeroContextMenu(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  return swift_release(a1[3]);
}

uint64_t initializeWithCopy for EpisodeHeroContextMenu(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  v6 = a2[3];
  v7 = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for EpisodeHeroContextMenu(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = *((_BYTE *)a2 + 32);
  v12 = a1[3];
  a1[3] = v10;
  *((_BYTE *)a1 + 32) = v11;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

uint64_t assignWithTake for EpisodeHeroContextMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v6;
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeHeroContextMenu(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeHeroContextMenu(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeHeroContextMenu()
{
  return &type metadata for EpisodeHeroContextMenu;
}

uint64_t sub_29F46C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_334620, 1);
}

void sub_29F47C()
{
  qword_3E0198 = 0x402C000000000000;
}

uint64_t sub_29F48C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  __n128 v48;
  uint64_t v49;
  double v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[5];
  _BYTE v80[48];
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;

  v2 = v1;
  v78 = a1;
  v77 = type metadata accessor for Image.Scale(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v75 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for BlendMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D8);
  __chkstk_darwin(v69);
  v9 = (uint64_t *)((char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01A8);
  __chkstk_darwin(v68);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01B0);
  __chkstk_darwin(v70);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01B8);
  __chkstk_darwin(v72);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01C0);
  v19 = __chkstk_darwin(v73);
  v71 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v12 = static Axis.Set.horizontal.getter(v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01C8);
  sub_29FA7C(v2, (uint64_t)&v12[*(int *)(v21 + 44)]);
  v23 = static Color.white.getter(v22);
  v24 = Color.opacity(_:)(0.5);
  v25 = swift_release(v23);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v7, enum case for BlendMode.plusLighter(_:), v4, v25);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v9 + *(int *)(v69 + 36), v7, v4);
  *v9 = v24;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_D184((uint64_t)v9, (uint64_t)&v14[*(int *)(v68 + 36)], &qword_3D07D8);
  sub_D184((uint64_t)v12, (uint64_t)v14, &qword_3E01A0);
  sub_D1D4((uint64_t)v9, &qword_3D07D8);
  sub_D1D4((uint64_t)v12, &qword_3E01A0);
  v27 = static Color.white.getter(v26);
  KeyPath = swift_getKeyPath(&unk_304D28);
  sub_D184((uint64_t)v14, (uint64_t)v16, &qword_3E01A8);
  v29 = (uint64_t *)&v16[*(int *)(v70 + 36)];
  *v29 = KeyPath;
  v29[1] = v27;
  v30 = sub_D1D4((uint64_t)v14, &qword_3E01A8);
  v31 = static Font.body.getter(v30);
  v32 = Font.bold()(v31);
  swift_release(v31);
  v33 = swift_getKeyPath(&unk_304D58);
  sub_D184((uint64_t)v16, (uint64_t)v18, &qword_3E01B0);
  v34 = (uint64_t *)&v18[*(int *)(v72 + 36)];
  *v34 = v33;
  v34[1] = v32;
  sub_D1D4((uint64_t)v16, &qword_3E01B0);
  v35 = v76;
  v36 = v75;
  v37 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v75, enum case for Image.Scale.small(_:), v77);
  v38 = swift_getKeyPath(&unk_304D88);
  v39 = (uint64_t)v71;
  v40 = (uint64_t *)&v71[*(int *)(v73 + 36)];
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))((char *)v40 + *(int *)(v41 + 28), v36, v37);
  *v40 = v38;
  sub_D184((uint64_t)v18, v39, &qword_3E01B8);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  sub_D1D4((uint64_t)v18, &qword_3E01B8);
  v42 = *(_QWORD *)(v74 + 24);
  LOBYTE(v40) = *(_BYTE *)(v74 + 32);
  v43 = (uint64_t *)v74;
  swift_retain(v42);
  v45 = sub_14A78(v44, (char)v40);
  swift_release(v42);
  v46 = *v43;
  v79[3] = &type metadata for PodcastsContextMenuProvider;
  v79[4] = &off_3857D0;
  v47 = (_QWORD *)swift_allocObject(&unk_390220, 64, 7);
  v79[0] = v47;
  v47[6] = type metadata accessor for LegacyEpisodeLockup(0);
  v47[7] = sub_2A099C();
  v47[2] = v45;
  v47[3] = v46;
  v48 = swift_retain(v46);
  v49 = static HeroContainer.chinPadding.getter(v48);
  v51 = -v50;
  LOBYTE(v46) = static Edge.Set.all.getter(v49);
  v52 = EdgeInsets.init(_all:)(v51);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  sub_276240((uint64_t)v79, (uint64_t)v80);
  v80[40] = v46;
  v81 = v52;
  v82 = v54;
  v83 = v56;
  v84 = v58;
  v85 = 0;
  v59 = sub_27627C((uint64_t)v79);
  v61 = static Alignment.center.getter(v59, v60);
  v63 = v62;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01D0);
  v65 = v78;
  v66 = v78 + *(int *)(v64 + 36);
  sub_D184((uint64_t)v80, v66, &qword_3DF2A8);
  *(_QWORD *)(v66 + 88) = v61;
  *(_QWORD *)(v66 + 96) = v63;
  sub_D184(v39, v65, &qword_3E01C0);
  sub_D1D4((uint64_t)v80, &qword_3DF2A8);
  return sub_D1D4(v39, &qword_3E01C0);
}

uint64_t sub_29FA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01D8);
  __chkstk_darwin(v3);
  v38 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01E0);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01E8);
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v37 - v18;
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v22 = *(_QWORD *)(a1 + 16);
  v39 = *(_QWORD *)(a1 + 24);
  v40 = *(_BYTE *)(a1 + 32);
  swift_retain(v20);
  swift_retain(v21);
  swift_retain(v22);
  v23 = sub_50988(&v39);
  if (qword_3CFCE8 != -1)
    v23 = (_QWORD *)swift_once(&qword_3CFCE8, sub_29F47C);
  v24 = qword_3E0198;
  *(_QWORD *)v19 = static VerticalAlignment.center.getter(v23);
  *((_QWORD *)v19 + 1) = v24;
  v19[16] = 0;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01F0);
  sub_2A052C(a1, (uint64_t)&v19[*(int *)(v25 + 44)]);
  swift_retain(v20);
  swift_retain(v21);
  swift_retain(v22);
  v26 = sub_50988(&v39);
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v26);
  *((_QWORD *)v13 + 1) = v24;
  v13[16] = 0;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E01F8);
  v28 = sub_2A01BC((_QWORD *)a1, &v13[*(int *)(v27 + 44)]);
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v28);
  *((_QWORD *)v7 + 1) = v24;
  v7[16] = 0;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0200);
  sub_29FF5C((uint64_t)&v7[*(int *)(v29 + 44)]);
  sub_D184((uint64_t)v19, (uint64_t)v16, &qword_3E01E8);
  sub_D184((uint64_t)v13, (uint64_t)v10, &qword_3E01E0);
  v30 = v38;
  sub_D184((uint64_t)v7, v38, &qword_3E01D8);
  v31 = (uint64_t)v16;
  v32 = (uint64_t)v16;
  v33 = (uint64_t)v10;
  v34 = v37;
  sub_D184(v31, v37, &qword_3E01E8);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0208);
  sub_D184(v33, v34 + *(int *)(v35 + 48), &qword_3E01E0);
  sub_D184(v30, v34 + *(int *)(v35 + 64), &qword_3E01D8);
  sub_D1D4((uint64_t)v7, &qword_3E01D8);
  sub_D1D4((uint64_t)v13, &qword_3E01E0);
  sub_D1D4((uint64_t)v19, &qword_3E01E8);
  sub_D1D4(v30, &qword_3E01D8);
  sub_D1D4(v33, &qword_3E01E0);
  return sub_D1D4(v32, &qword_3E01E8);
}

uint64_t sub_29FDAC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  __n128 v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  char *v28;

  v28 = a2;
  v3 = type metadata accessor for EpisodeDownloadStateView(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v27 - v9;
  v11 = type metadata accessor for EpisodeBookmarkStateView(0, v8);
  v27 = *(_QWORD *)(v11 - 8);
  v12 = v27;
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v27 - v16;
  v18 = swift_retain(*(_QWORD *)(a1 + 8));
  EpisodeBookmarkStateView.init(stateMachine:)(v18);
  v19 = swift_retain(*(_QWORD *)(a1 + 16));
  EpisodeDownloadStateView.init(stateMachine:)(v19);
  v20 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v20(v14, v17, v11);
  v21 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v21(v6, v10, v3);
  v22 = v28;
  v20(v28, v14, v11);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0228);
  v21(&v22[*(int *)(v23 + 48)], v6, v3);
  v24 = *(void (**)(char *, uint64_t))(v4 + 8);
  v24(v10, v3);
  v25 = *(void (**)(char *, uint64_t))(v27 + 8);
  v25(v17, v11);
  v24(v6, v3);
  return ((uint64_t (*)(char *, uint64_t))v25)(v14, v11);
}

uint64_t sub_29FF5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  __chkstk_darwin(v21);
  v2 = (uint64_t *)((char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for Image.Scale(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFA00);
  __chkstk_darwin(v20);
  v8 = (uint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - v10;
  v12 = Image.init(systemName:)(0x73697370696C6C65, 0xE800000000000000);
  v14 = static Font.title3.getter(v13);
  v15 = Font.bold()(v14);
  swift_release(v14);
  KeyPath = swift_getKeyPath(&unk_304D58);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Image.Scale.medium(_:), v3);
  v17 = swift_getKeyPath(&unk_304D88);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v2 + *(int *)(v21 + 28), v6, v3);
  *v2 = v17;
  sub_D184((uint64_t)v2, (uint64_t)v8 + *(int *)(v20 + 36), &qword_3D2620);
  *v8 = v12;
  v8[1] = KeyPath;
  v8[2] = v15;
  swift_retain(v12);
  swift_retain(KeyPath);
  swift_retain(v15);
  sub_D1D4((uint64_t)v2, &qword_3D2620);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release(v15);
  swift_release(KeyPath);
  swift_release(v12);
  sub_2A09E4((uint64_t)v8, (uint64_t)v11);
  sub_D184((uint64_t)v11, (uint64_t)v8, &qword_3DFA00);
  sub_D184((uint64_t)v8, v22, &qword_3DFA00);
  sub_D1D4((uint64_t)v11, &qword_3DFA00);
  return sub_D1D4((uint64_t)v8, &qword_3DFA00);
}

_QWORD *sub_2A01BC@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  char v47;

  v44 = a1;
  v45 = a2;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  __chkstk_darwin(v40);
  v4 = (uint64_t *)((char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Image.Scale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFA00);
  __chkstk_darwin(v37);
  v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __chkstk_darwin(v11);
  v42 = (uint64_t)&v36 - v13;
  v14 = type metadata accessor for EpisodeBookmarkStateView(0, v12);
  v41 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v39 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v38 = (char *)&v36 - v17;
  v43 = a1[1];
  v18 = swift_retain(v43);
  EpisodeBookmarkStateView.init(stateMachine:)(v18);
  v19 = Image.init(systemName:)(0x73697370696C6C65, 0xE800000000000000);
  v21 = static Font.title3.getter(v20);
  v22 = Font.bold()(v21);
  swift_release(v21);
  KeyPath = swift_getKeyPath(&unk_304D58);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.medium(_:), v5);
  v24 = swift_getKeyPath(&unk_304D88);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v40 + 28), v8, v5);
  *v4 = v24;
  sub_D184((uint64_t)v4, (uint64_t)v10 + *(int *)(v37 + 36), &qword_3D2620);
  *v10 = v19;
  v10[1] = KeyPath;
  v10[2] = v22;
  swift_retain(v19);
  swift_retain(KeyPath);
  swift_retain(v22);
  sub_D1D4((uint64_t)v4, &qword_3D2620);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release(v22);
  swift_release(KeyPath);
  swift_release(v19);
  v25 = v42;
  sub_2A09E4((uint64_t)v10, v42);
  v26 = v41;
  v27 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v29 = v38;
  v28 = v39;
  v27(v39, v38, v14);
  sub_D184(v25, (uint64_t)v10, &qword_3DFA00);
  v30 = v45;
  v27(v45, v28, v14);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0210);
  sub_D184((uint64_t)v10, (uint64_t)&v30[*(int *)(v31 + 48)], &qword_3DFA00);
  sub_D1D4(v25, &qword_3DFA00);
  v32 = *(void (**)(char *, uint64_t))(v26 + 8);
  v32(v29, v14);
  sub_D1D4((uint64_t)v10, &qword_3DFA00);
  v32(v28, v14);
  v33 = v44;
  v34 = *v44;
  swift_release(v43);
  swift_release(v34);
  swift_release(v33[2]);
  v46 = v33[3];
  v47 = *((_BYTE *)v33 + 32);
  return sub_1EC1AC(&v46);
}

_QWORD *sub_2A052C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v34 = (_QWORD *)a1;
  v35 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  __chkstk_darwin(v32);
  v4 = (uint64_t *)((char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Image.Scale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFA00);
  __chkstk_darwin(v30);
  v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v33 = (uint64_t)&v30 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0218);
  __chkstk_darwin(v13);
  v31 = (uint64_t)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - v16;
  sub_29FDAC(a1, (char *)&v30 - v16);
  v18 = Image.init(systemName:)(0x73697370696C6C65, 0xE800000000000000);
  v20 = static Font.title3.getter(v19);
  v21 = Font.bold()(v20);
  swift_release(v20);
  KeyPath = swift_getKeyPath(&unk_304D58);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.medium(_:), v5);
  v23 = swift_getKeyPath(&unk_304D88);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v32 + 28), v8, v5);
  *v4 = v23;
  sub_D184((uint64_t)v4, (uint64_t)v10 + *(int *)(v30 + 36), &qword_3D2620);
  *v10 = v18;
  v10[1] = KeyPath;
  v10[2] = v21;
  swift_retain(v18);
  swift_retain(KeyPath);
  swift_retain(v21);
  sub_D1D4((uint64_t)v4, &qword_3D2620);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release(v21);
  swift_release(KeyPath);
  swift_release(v18);
  v24 = v33;
  sub_2A09E4((uint64_t)v10, v33);
  v25 = v31;
  sub_D184((uint64_t)v17, v31, &qword_3E0218);
  sub_D184(v24, (uint64_t)v10, &qword_3DFA00);
  v26 = v35;
  sub_D184(v25, v35, &qword_3E0218);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0220);
  sub_D184((uint64_t)v10, v26 + *(int *)(v27 + 48), &qword_3DFA00);
  sub_D1D4(v24, &qword_3DFA00);
  sub_D1D4((uint64_t)v17, &qword_3E0218);
  sub_D1D4((uint64_t)v10, &qword_3DFA00);
  sub_D1D4(v25, &qword_3E0218);
  v28 = v34;
  swift_release(*v34);
  swift_release(v28[1]);
  swift_release(v28[2]);
  v36 = v28[3];
  v37 = *((_BYTE *)v28 + 32);
  return sub_1EC1AC(&v36);
}

uint64_t sub_2A0888@<X0>(uint64_t a1@<X8>)
{
  return sub_29F48C(a1);
}

uint64_t sub_2A08C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2A08E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2A0910(_QWORD *a1)
{
  __n128 v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_2A0938(_QWORD *a1)
{
  __n128 v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_2A0970()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

unint64_t sub_2A099C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7600;
  if (!qword_3D7600)
  {
    v1 = type metadata accessor for LegacyEpisodeLockup(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for LegacyLockup, v1);
    atomic_store(result, (unint64_t *)&qword_3D7600);
  }
  return result;
}

uint64_t sub_2A09E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFA00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2A0A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0230;
  if (!qword_3E0230)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E01D0);
    sub_2A0AB4();
    sub_10EDC(qword_3DF2B8, &qword_3DF2A0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0230);
  }
  return result;
}

unint64_t sub_2A0AB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0238;
  if (!qword_3E0238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E01C0);
    sub_2A0B38();
    sub_10EDC(&qword_3D2630, &qword_3D2620, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0238);
  }
  return result;
}

unint64_t sub_2A0B38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0240;
  if (!qword_3E0240)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E01B8);
    sub_2A0BBC();
    sub_10EDC(&qword_3D10B0, &qword_3D10B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0240);
  }
  return result;
}

unint64_t sub_2A0BBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0248;
  if (!qword_3E0248)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E01B0);
    sub_2A0C40();
    sub_10EDC(&qword_3D10C0, &qword_3D10C8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0248);
  }
  return result;
}

unint64_t sub_2A0C40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0250;
  if (!qword_3E0250)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E01A8);
    sub_10EDC(&qword_3E0258, &qword_3E01A0, (uint64_t)&protocol conformance descriptor for ViewThatFits<A>);
    sub_10EDC(&qword_3DE7C8, &qword_3D0808, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0250);
  }
  return result;
}

void sub_2A0CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  id v7;
  char v8[24];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_objectGraph) = a1;
  swift_release(v3);
  v4 = (uint64_t *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_button)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph);
  swift_beginAccess(v4, v8, 1, 0);
  v5 = *v4;
  *v4 = a1;
  swift_retain(a1);
  swift_release(v5);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_icon);
  swift_retain(a1);
  v7 = v6;
  sub_1D6A8(a1);

}

id sub_2A0D8C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  int v21;
  void *v22;
  __n128 v23;
  id v24;
  double v25;
  double v26;
  id v27;
  id v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for ArtworkRequest(0);
  v6 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ArtworkModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v31 - v17;
  sub_DA064(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_44C28((uint64_t)v11);
    return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_icon], "setHidden:", 1);
  }
  else
  {
    sub_2376C((uint64_t)v11, (uint64_t)v18);
    v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_icon;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_icon], "setHidden:", 0);
    v21 = v18[64];
    if (v21 == 255)
    {
      if (qword_3CF028 != -1)
        swift_once(&qword_3CF028, sub_E308);
      v24 = (id)qword_3FA888;
    }
    else
    {
      v22 = (void *)*((_QWORD *)v18 + 7);
      sub_27F80(v22, v18[64]);
      v24 = (id)Color.color.getter(v22, v23);
      sub_27F94(v22, v21);
    }
    objc_msgSend(*(id *)&v1[v20], "setBackgroundColor:", v24);
    v25 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_iconSize];
    v26 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_iconSize + 8];
    v27 = *(id *)&v1[v20];
    v28 = objc_msgSend(v1, "traitCollection");
    v29 = UITraitCollection.safeDisplayScale.getter();

    sub_27E84((uint64_t)v18, (uint64_t)v16);
    v30 = type metadata accessor for CropCode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v5, 1, 1, v30);
    v34 = 0;
    memset(v33, 0, sizeof(v33));
    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v16, 1, 0, v5, 0, _swiftEmptyArrayStorage, v33, v25, v26, v29);
    sub_1DAA4(v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v32);

    return (id)sub_239C0((uint64_t)v18);
  }
}

char *sub_2A10BC(char a1)
{
  char *v1;
  int v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  char v21;
  char v22;
  char *v23;
  __int16 v24;
  double v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  char *v37;
  id v38;
  char *v39;
  void *v40;
  id v41;
  _BYTE *v42;
  char v43;
  _BYTE *v44;
  char *v45;
  uint64_t v46;
  void *v47;
  char *v48;
  double leading;
  double bottom;
  double trailing;
  char *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  Swift::OpaquePointer v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  void *v72;
  Class isa;
  void *v74;
  id v75;
  Swift::String v76;
  Swift::String v77;
  unint64_t v78;
  NSString v79;
  void *v80;
  id v81;
  Swift::String v82;
  Swift::String v83;
  unint64_t v84;
  NSString v85;
  id v87;
  int v88;
  void *v89;
  uint64_t v90;
  __int16 v91;
  uint64_t v92;
  char *v93;
  int v94;
  objc_class *ObjectType;
  uint64_t v96;
  uint64_t v97;
  char v98;
  objc_super v99;
  void *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int16 v110;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = a1 & 1;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_hStackView;
  v5 = objc_allocWithZone((Class)UIStackView);
  v6 = v1;
  v7 = objc_msgSend(v5, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, "setAxis:", 0);
  objc_msgSend(v7, "setAlignment:", 3);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setAllowsGroupBlending:", 0);

  objc_msgSend(v7, "setSpacing:", 6.0);
  *(_QWORD *)&v1[v4] = v7;
  __asm { FMOV            V0.2D, #22.0 }
  *(_OWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_iconSize] = _Q0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_objectGraph] = 0;
  v94 = v3;
  v93 = v6;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_style] = v3;
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v14 = (void *)qword_3FB490;
  v15 = qword_3FB4A0;
  v16 = qword_3FB4A8;
  v17 = qword_3FB4B0;
  v18 = qword_3FB4B8;
  v89 = (void *)xmmword_3FB4C0;
  v90 = qword_3FB498;
  v19 = qword_3FB4D0;
  v96 = *((_QWORD *)&xmmword_3FB4C0 + 1);
  v92 = qword_3FB4D0;
  v20 = xmmword_3FB4D8;
  v21 = byte_3FB4E8;
  v91 = byte_3FB4E8;
  v22 = byte_3FB4E9;
  v88 = byte_3FB4E9;
  v87 = objc_allocWithZone((Class)type metadata accessor for ChevronButton());
  sub_DDA0(v14, v90, v15, v16, v17, v18, v89, v96, v19, v20, *((uint64_t *)&v20 + 1), v21, v22);
  v23 = (char *)objc_msgSend(v87, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v100 = v14;
  v101 = v90;
  if (v88)
    v24 = 256;
  else
    v24 = 0;
  v102 = v15;
  v103 = v16;
  v104 = v17;
  v105 = v18;
  v106 = v89;
  v107 = v96;
  v108 = v92;
  v109 = v20;
  v110 = v24 | v91;
  sub_22158C((uint64_t)&v100);
  *(_QWORD *)&v93[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_button] = v23;
  LODWORD(v25) = 1148846080;
  objc_msgSend(v23, "setContentCompressionResistancePriority:forAxis:", 1, v25);
  if (v94)
  {
    v31 = (void *)objc_opt_self(UIColor);
    v32 = v23;
    v28 = objc_msgSend(v31, "labelColor");
    v30 = 0x4010000000000000;
    v29 = 0x3FF0000000000000;
  }
  else
  {
    v26 = qword_3CF020;
    v27 = v23;
    if (v26 != -1)
      swift_once(&qword_3CF020, sub_E274);
    v28 = (id)qword_3FA880;
    v29 = 0;
    v30 = 0x4008000000000000;
  }
  objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_imageView], "setTintColor:", v28);
  v33 = *(id *)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel];
  objc_msgSend(v33, "setTextColor:", v28);

  v34 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CachingArtworkView(0)), "init");
  v35 = OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_icon;
  *(_QWORD *)&v93[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_icon] = v34;
  v36 = objc_allocWithZone((Class)UIColor);
  v37 = (char *)v34;
  v38 = objc_msgSend(v36, "initWithWhite:alpha:", 0.0, 0.13);
  v39 = &v37[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v40 = *(void **)&v37[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_QWORD *)v39 = v38;
  *((_QWORD *)v39 + 1) = v30;
  *((_QWORD *)v39 + 2) = 0;
  *((_QWORD *)v39 + 3) = v29;
  v41 = v38;

  sub_E9020();
  v42 = *(_BYTE **)&v93[v35];
  v43 = v42[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v42[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = v94 ^ 1;
  LOBYTE(v100) = v43;
  v44 = v42;
  sub_EB33C((unsigned __int8 *)&v100);

  v99.receiver = v93;
  v99.super_class = ObjectType;
  v45 = (char *)objc_msgSendSuper2(&v99, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v46 = OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_hStackView;
  v47 = *(void **)&v45[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_hStackView];
  v48 = v45;
  objc_msgSend(v48, "addSubview:", v47);
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v52 = v48;
  v53 = v47;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v53, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  v54 = *(void **)&v45[v46];
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v56 = swift_allocObject(v55, 48, 7);
  *(_OWORD *)(v56 + 16) = xmmword_2EFC90;
  v57 = OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_icon;
  v58 = *(void **)&v52[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_icon];
  *(_QWORD *)(v56 + 32) = v58;
  v97 = OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_button;
  v59 = *(void **)&v52[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_button];
  *(_QWORD *)(v56 + 40) = v59;
  v100 = (void *)v56;
  specialized Array._endMutation()(v56);
  v60._rawValue = v100;
  v61 = v54;
  v62 = v58;
  v63 = v59;
  UIStackView.addArrangedSubviews(_:)(v60);

  swift_bridgeObjectRelease(v60._rawValue);
  v64 = (void *)objc_opt_self(NSLayoutConstraint);
  v65 = swift_allocObject(v55, 48, 7);
  *(_OWORD *)(v65 + 16) = xmmword_2EFC90;
  v66 = objc_msgSend(*(id *)&v52[v57], "heightAnchor");
  v67 = objc_msgSend(v66, "constraintEqualToConstant:", *(double *)&v52[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_iconSize + 8]);

  *(_QWORD *)(v65 + 32) = v67;
  v68 = objc_msgSend(*(id *)&v52[v57], "heightAnchor");
  v69 = objc_msgSend(*(id *)&v52[v57], "widthAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:", v69);

  *(_QWORD *)(v65 + 40) = v70;
  v100 = (void *)v65;
  specialized Array._endMutation()(v71);
  v72 = v100;
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v64, "activateConstraints:", isa, swift_bridgeObjectRelease(v72).n128_f64[0]);

  v74 = *(void **)&v52[v57];
  v100 = 0;
  v101 = 0xE000000000000000;
  v75 = v74;
  v76._countAndFlagsBits = 0xD000000000000014;
  v76._object = (void *)0x8000000000308A30;
  String.append(_:)(v76);
  v77._countAndFlagsBits = 46;
  v77._object = (void *)0xE100000000000000;
  String.append(_:)(v77);
  v98 = 15;
  _print_unlocked<A, B>(_:_:)(&v98, &v100, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v78 = v101;
  v79 = String._bridgeToObjectiveC()();
  objc_msgSend(v75, "setAccessibilityIdentifier:", v79, swift_bridgeObjectRelease(v78).n128_f64[0]);

  v80 = *(void **)&v52[v97];
  v100 = 0;
  v101 = 0xE000000000000000;
  v81 = v80;
  v82._countAndFlagsBits = 0xD000000000000014;
  v82._object = (void *)0x8000000000308A30;
  String.append(_:)(v82);
  v83._countAndFlagsBits = 46;
  v83._object = (void *)0xE100000000000000;
  String.append(_:)(v83);
  v98 = 1;
  _print_unlocked<A, B>(_:_:)(&v98, &v100, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v84 = v101;
  v85 = String._bridgeToObjectiveC()();
  objc_msgSend(v81, "setAccessibilityIdentifier:", v85, swift_bridgeObjectRelease(v84).n128_f64[0]);

  return v52;
}

uint64_t type metadata accessor for PrimaryButtonView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17PrimaryButtonView);
}

uint64_t storeEnumTagSinglePayload for PrimaryButtonView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2A1994 + 4 * byte_304DC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2A19C8 + 4 * byte_304DC0[v4]))();
}

uint64_t sub_2A19C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2A19D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2A19D8);
  return result;
}

uint64_t sub_2A19E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2A19ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2A19F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2A19F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrimaryButtonView.Style()
{
  return &type metadata for PrimaryButtonView.Style;
}

unint64_t sub_2A1A18()
{
  unint64_t result;

  result = qword_3E02B8;
  if (!qword_3E02B8)
  {
    result = swift_getWitnessTable(&unk_304E48, &type metadata for PrimaryButtonView.Style);
    atomic_store(result, (unint64_t *)&qword_3E02B8);
  }
  return result;
}

double sub_2A1A5C()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_objectGraph)).n128_u64[0];
  return result;
}

void sub_2A1A70()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_hStackView;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setAxis:", 0);
  objc_msgSend(v2, "setAlignment:", 3);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend(v2, "layer");
  objc_msgSend(v3, "setAllowsGroupBlending:", 0);

  objc_msgSend(v2, "setSpacing:", 6.0);
  *(_QWORD *)&v0[v1] = v2;
  __asm { FMOV            V0.2D, #22.0 }
  *(_OWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_iconSize] = _Q0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/PrimaryButtonView.swift", 47, 2, 110, 0);
  __break(1u);
}

double UIView.firstBaselineFromTop.getter()
{
  void *v0;
  CGRect v2;

  objc_msgSend(v0, "frame");
  return CGRectGetMaxY(v2);
}

double UIView.lastBaselineFromBottom.getter()
{
  return 0.0;
}

double UIView.lastBaselineMaxY.getter()
{
  void *v0;
  double MaxY;
  double v2;
  CGRect v4;

  objc_msgSend(v0, "frame");
  MaxY = CGRectGetMaxY(v4);
  objc_msgSend(v0, "lastBaselineFromBottom");
  return MaxY - v2;
}

id UILabel.firstBaselineFromTop.getter()
{
  void *v0;

  return objc_msgSend(v0, "_firstBaselineOffsetFromTop");
}

id UILabel.lastBaselineFromBottom.getter()
{
  void *v0;

  return objc_msgSend(v0, "_baselineOffsetFromBottom");
}

double UIButton.lastBaselineFromBottom.getter()
{
  void *v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double Height;
  double MaxY;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  CGRect v28;
  CGRect v29;

  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, "contentRectForBounds:");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v28.origin.x = v2;
  v28.origin.y = v4;
  v28.size.width = v6;
  v28.size.height = v8;
  Height = CGRectGetHeight(v28);
  v29.origin.x = v10;
  v29.origin.y = v12;
  v29.size.width = v14;
  v29.size.height = v16;
  MaxY = CGRectGetMaxY(v29);
  v19 = objc_msgSend(v0, "titleLabel");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "_baselineOffsetFromBottom");
    v22 = v21;

  }
  else
  {
    v22 = 0.0;
  }
  v23 = vabdd_f64(Height, MaxY);
  objc_msgSend(v0, "contentEdgeInsets");
  v25 = v24;
  objc_msgSend(v0, "titleEdgeInsets");
  return v23 + v22 + v25 + v26;
}

double UIButton.firstBaselineFromTop.getter()
{
  void *v0;
  double MinY;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  CGRect v10;

  objc_msgSend(v0, "bounds");
  objc_msgSend(v0, "contentRectForBounds:");
  MinY = CGRectGetMinY(v10);
  v2 = objc_msgSend(v0, "titleLabel");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "_firstBaselineOffsetFromTop");
    v5 = v4;

  }
  else
  {
    v5 = 0.0;
  }
  objc_msgSend(v0, "contentEdgeInsets");
  v7 = v6;
  objc_msgSend(v0, "titleEdgeInsets");
  return MinY + v5 + v7 + v8;
}

double UIImageView.firstBaselineFromTop.getter()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;

  v1 = objc_msgSend(v0, "image");
  if (!v1)
    return 0.0;
  v2 = v1;
  objc_msgSend(v1, "size");
  v4 = v3;

  return v4;
}

void *sub_2A201C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13BookmarkBadge_bookmarkButtonPresenter) = 0;
  sub_113AC0(a1, v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13BookmarkBadge_iconsSet);
  v10 = type metadata accessor for PlayControlsIconsSet(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1 + *(int *)(v10 + 20), v6);
  v11 = type metadata accessor for Glyph.Color(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v9, (uint64_t)v5, 0, 0, 1, 0.0, 0.0, 0.0, 0.0);
  v13 = v12;
  objc_msgSend(v12, "addTarget:action:forControlEvents:", v12, "primaryActionTriggered", 0x2000);
  sub_2A2428(a1);
  return v13;
}

void sub_2A2238()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.BookmarkBadge", 37, "init(frame:glyph:color:style:layout:autolayoutMode:)", 52, 0);
  __break(1u);
}

uint64_t sub_2A2264()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13BookmarkBadge_bookmarkButtonPresenter));
  return sub_2A2428(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13BookmarkBadge_iconsSet);
}

uint64_t sub_2A22C8()
{
  return type metadata accessor for BookmarkBadge(0);
}

uint64_t type metadata accessor for BookmarkBadge(uint64_t a1)
{
  uint64_t result;

  result = qword_3E02F0;
  if (!qword_3E02F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookmarkBadge);
  return result;
}

uint64_t sub_2A230C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\b";
  result = type metadata accessor for PlayControlsIconsSet(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 880);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2A2384(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = type metadata accessor for Glyph(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13BookmarkBadge_iconsSet;
  if ((a1 & 1) == 0)
    v8 += *(int *)(type metadata accessor for PlayControlsIconsSet(0) + 20);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, v8, v3, v5);
  return sub_1E2B60(v7);
}

uint64_t sub_2A2428(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlayControlsIconsSet(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_2A2464@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

id sub_2A24D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnimatedTransitionWithTasks();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AnimatedTransitionWithTasks()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks);
}

uint64_t sub_2A253C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for AnimatedTransitionWithTasks.TransitionTaskAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for AnimatedTransitionWithTasks.TransitionTaskAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for AnimatedTransitionWithTasks.TransitionTaskAction()
{
  return &type metadata for AnimatedTransitionWithTasks.TransitionTaskAction;
}

double sub_2A2608(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks_tasks);
  *(_QWORD *)&result = swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks_tasks, v12, 1, 0).n128_u64[0];
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(*v3);
    v7 = (unsigned __int8 *)(v5 + 48);
    do
    {
      if (*v7 == a1)
      {
        v9 = (void (*)(uint64_t, uint64_t, __n128))*((_QWORD *)v7 - 2);
        v8 = *((_QWORD *)v7 - 1);
        v10 = swift_retain(v8);
        v9(a1, 1, v10);
        swift_release(v8);
      }
      v7 += 24;
      --v6;
    }
    while (v6);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  if (a1 == 2)
  {
    v11 = *v3;
    *v3 = &_swiftEmptyArrayStorage;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnimationTaskTransitionPhase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2A2730 + 4 * byte_304F25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2A2764 + 4 * byte_304F20[v4]))();
}

uint64_t sub_2A2764(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2A276C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2A2774);
  return result;
}

uint64_t sub_2A2780(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2A2788);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2A278C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2A2794(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnimationTaskTransitionPhase()
{
  return &type metadata for AnimationTaskTransitionPhase;
}

unint64_t sub_2A27B4()
{
  unint64_t result;

  result = qword_3E0390;
  if (!qword_3E0390)
  {
    result = swift_getWitnessTable(&unk_305028, &type metadata for AnimationTaskTransitionPhase);
    atomic_store(result, (unint64_t *)&qword_3E0390);
  }
  return result;
}

uint64_t sub_2A27F8()
{
  off_3E03A8[0] = 0;
  return swift_unknownObjectWeakInit(&unk_3E03A0, 0);
}

id sub_2A280C()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_super v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_spinner;
  v2 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "initWithActivityIndicatorStyle:", 101);
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_titleLabel;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF660 != -1)
    swift_once(&qword_3CF660, sub_142AA8);
  v9 = qword_3FC870;
  v10 = *(_QWORD *)algn_3FC878;
  v11 = qword_3FC880;
  v12 = qword_3FC888;
  v13 = qword_3FC890;
  v14 = *(_QWORD *)byte_3FC898;
  v15 = qword_3FC8A0;
  v16 = qword_3FC8A8;
  v17 = qword_3FC8B0;
  v18 = qword_3FC8B8;
  v19 = qword_3FC8C0;
  v20 = word_3FC8C8;
  sub_DDA0((void *)qword_3FC870, *(uint64_t *)algn_3FC878, qword_3FC880, qword_3FC888, qword_3FC890, byte_3FC898[0], (void *)qword_3FC8A0, qword_3FC8A8, qword_3FC8B0, qword_3FC8B8, qword_3FC8C0, word_3FC8C8, SHIBYTE(word_3FC8C8));
  *(_QWORD *)&v3[v4] = sub_A96AC((uint64_t)&v9, 1, 4, 0);
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_messageLabel;
  if (qword_3CF668 != -1)
    swift_once(&qword_3CF668, sub_142CB4);
  v9 = qword_3FC8D0;
  v10 = *(_QWORD *)algn_3FC8D8;
  v11 = qword_3FC8E0;
  v12 = qword_3FC8E8;
  v13 = qword_3FC8F0;
  v14 = *(_QWORD *)byte_3FC8F8;
  v15 = qword_3FC900;
  v16 = qword_3FC908;
  v17 = qword_3FC910;
  v18 = qword_3FC918;
  v19 = qword_3FC920;
  v20 = word_3FC928;
  sub_DDA0((void *)qword_3FC8D0, *(uint64_t *)algn_3FC8D8, qword_3FC8E0, qword_3FC8E8, qword_3FC8F0, byte_3FC8F8[0], (void *)qword_3FC900, qword_3FC908, qword_3FC910, qword_3FC918, qword_3FC920, word_3FC928, SHIBYTE(word_3FC928));
  *(_QWORD *)&v3[v5] = sub_A96AC((uint64_t)&v9, 1, 4, 0);
  v6 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_deferredBlock];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_isAcknowledgementRequired] = 1;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for MigrationViewController();
  return objc_msgSendSuper2(&v8, "initWithNibName:bundle:", 0, 0);
}

void sub_2A2A54()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  NSString v16;
  void *v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  NSString v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  Class isa;
  objc_super v62;
  Swift::String v63;
  Swift::String v64;

  v62.receiver = v0;
  v62.super_class = (Class)type metadata accessor for MigrationViewController();
  objc_msgSendSuper2(&v62, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v2 = v1;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "systemBackgroundColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v0, "navigationController");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setPreferredContentSize:", 540.0, 620.0);
    v7 = objc_msgSend(v6, "presentationController");
    v8 = objc_msgSend(v7, "containerView");

    objc_msgSend(v8, "setNeedsLayout");
    objc_msgSend(v8, "layoutIfNeeded");

  }
  objc_msgSend(v0, "setPreferredContentSize:", 540.0, 620.0);
  v9 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_titleLabel];
  v10 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v9, "setTextColor:", v10);

  v11 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v11, "mainBundle");
  v63._object = (void *)0xE000000000000000;
  v13._object = (void *)0x80000000003191E0;
  v13._countAndFlagsBits = 0xD000000000000017;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v63)._object;

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v16, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_messageLabel];
  v18 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v17, "setTextColor:", v18);

  v19 = objc_msgSend(v11, "mainBundle");
  v20._countAndFlagsBits = 0xD000000000000019;
  v64._object = (void *)0xE000000000000000;
  v20._object = (void *)0x8000000000319200;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v64._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v64)._object;

  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v24 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_spinner];
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v24, "startAnimating");
  v25 = objc_msgSend(v0, "view");
  if (!v25)
    goto LABEL_13;
  v26 = v25;
  objc_msgSend(v25, "addSubview:", v17);

  v27 = objc_msgSend(v0, "view");
  if (!v27)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v28 = v27;
  objc_msgSend(v27, "addSubview:", v9);

  v29 = objc_msgSend(v0, "view");
  if (!v29)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v30 = v29;
  objc_msgSend(v29, "addSubview:", v24);

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v32 = swift_allocObject(v31, 80, 7);
  *(_OWORD *)(v32 + 16) = xmmword_2EFC70;
  v33 = objc_msgSend(v24, "centerXAnchor");
  v34 = objc_msgSend(v0, "view");
  if (!v34)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, "centerXAnchor");

  v37 = objc_msgSend(v33, "constraintEqualToAnchor:", v36);
  *(_QWORD *)(v32 + 32) = v37;
  v38 = objc_msgSend(v24, "centerYAnchor");
  v39 = objc_msgSend(v0, "view");
  if (!v39)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "centerYAnchor");

  v42 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v41, -30.0);
  *(_QWORD *)(v32 + 40) = v42;
  v43 = objc_msgSend(v9, "centerXAnchor");
  v44 = objc_msgSend(v0, "view");
  if (!v44)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v45 = v44;
  v46 = objc_msgSend(v44, "centerXAnchor");

  v47 = objc_msgSend(v43, "constraintEqualToAnchor:", v46);
  *(_QWORD *)(v32 + 48) = v47;
  v48 = objc_msgSend(v9, "topAnchor");
  v49 = objc_msgSend(v24, "bottomAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, 26.0);

  *(_QWORD *)(v32 + 56) = v50;
  v51 = objc_msgSend(v17, "topAnchor");
  v52 = objc_msgSend(v9, "bottomAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v52, 5.0);

  *(_QWORD *)(v32 + 64) = v53;
  v54 = objc_msgSend(v17, "centerXAnchor");
  v55 = objc_msgSend(v0, "view");
  if (v55)
  {
    v56 = v55;
    v57 = (void *)objc_opt_self(NSLayoutConstraint);
    v58 = objc_msgSend(v56, "centerXAnchor");

    v59 = objc_msgSend(v54, "constraintEqualToAnchor:", v58);
    *(_QWORD *)(v32 + 72) = v59;
    specialized Array._endMutation()(v60);
    sub_12D34();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v57, "activateConstraints:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t type metadata accessor for MigrationViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23MigrationViewController);
}

id sub_2A3210(char a1)
{
  char *v1;
  id result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for MigrationViewController();
  result = objc_msgSendSuper2(&v12, "viewDidDisappear:", a1 & 1);
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_deferredBlock];
  if (v4)
  {
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_deferredBlock + 8];
    v6 = (void *)objc_opt_self(NSRunLoop);
    v7 = objc_msgSend(v6, "currentRunLoop", swift_retain(v5).n128_f64[0]);
    v10[4] = v4;
    v11 = v5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_24360;
    v10[3] = &block_descriptor_70;
    v8 = _Block_copy(v10);
    v9 = v11;
    swift_retain(v5);
    objc_msgSend(v7, "performBlock:", v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);

    return (id)sub_1D618(v4, v5);
  }
  return result;
}

double block_copy_helper_70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_70(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2A3380()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_isAcknowledgementRequired);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_isAcknowledgementRequired, v3, 0, 0);
  return *v1;
}

void sub_2A33C4(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_isAcknowledgementRequired);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*sub_2A340C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_isAcknowledgementRequired, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_2A3450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_deferredBlock);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_deferredBlock);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_deferredBlock + 8);
  *v3 = a1;
  v3[1] = a2;
  swift_retain(a2);
  return sub_1D618(v4, v5);
}

void MigrationViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.MigrationViewController", 47, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id MigrationViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MigrationViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_2A3574(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_isAcknowledgementRequired);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_2A35C4(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_isAcknowledgementRequired);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

uint64_t method lookup function for MigrationViewController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for MigrationViewController);
}

uint64_t dispatch thunk of MigrationViewController.isAcknowledgementRequired.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of MigrationViewController.isAcknowledgementRequired.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of MigrationViewController.deferUntilAcknowledged(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v0)))();
}

void sub_2A3670()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_spinner;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_titleLabel;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF660 != -1)
    swift_once(&qword_3CF660, sub_142AA8);
  v6 = qword_3FC870;
  v7 = *(_QWORD *)algn_3FC878;
  v8 = qword_3FC880;
  v9 = qword_3FC888;
  v10 = qword_3FC890;
  v11 = *(_QWORD *)byte_3FC898;
  v12 = qword_3FC8A0;
  v13 = qword_3FC8A8;
  v14 = qword_3FC8B0;
  v15 = qword_3FC8B8;
  v16 = qword_3FC8C0;
  v17 = word_3FC8C8;
  sub_DDA0((void *)qword_3FC870, *(uint64_t *)algn_3FC878, qword_3FC880, qword_3FC888, qword_3FC890, byte_3FC898[0], (void *)qword_3FC8A0, qword_3FC8A8, qword_3FC8B0, qword_3FC8B8, qword_3FC8C0, word_3FC8C8, SHIBYTE(word_3FC8C8));
  *(_QWORD *)&v1[v3] = sub_A96AC((uint64_t)&v6, 1, 4, 0);
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_messageLabel;
  if (qword_3CF668 != -1)
    swift_once(&qword_3CF668, sub_142CB4);
  v6 = qword_3FC8D0;
  v7 = *(_QWORD *)algn_3FC8D8;
  v8 = qword_3FC8E0;
  v9 = qword_3FC8E8;
  v10 = qword_3FC8F0;
  v11 = *(_QWORD *)byte_3FC8F8;
  v12 = qword_3FC900;
  v13 = qword_3FC908;
  v14 = qword_3FC910;
  v15 = qword_3FC918;
  v16 = qword_3FC920;
  v17 = word_3FC928;
  sub_DDA0((void *)qword_3FC8D0, *(uint64_t *)algn_3FC8D8, qword_3FC8E0, qword_3FC8E8, qword_3FC8F0, byte_3FC8F8[0], (void *)qword_3FC900, qword_3FC908, qword_3FC910, qword_3FC918, qword_3FC920, word_3FC928, SHIBYTE(word_3FC928));
  *(_QWORD *)&v1[v4] = sub_A96AC((uint64_t)&v6, 1, 4, 0);
  v5 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_deferredBlock];
  *v5 = 0;
  v5[1] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23MigrationViewController_isAcknowledgementRequired] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/MigrationViewController.swift", 53, 2, 24, 0);
  __break(1u);
}

uint64_t sub_2A386C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShelfCellListSeparatorMode(0);
  __swift_allocate_value_buffer(v8, qword_3FD870);
  __swift_project_value_buffer(v8, (uint64_t)qword_3FD870);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ShelfCellListSeparatorMode.Layout.marginToMargin(_:), v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Placement.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v3, v7);
}

uint64_t sub_2A3984(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  id v9;
  void *v10;
  id v11;
  void (*v12)(_QWORD *, _QWORD);
  void *v13;
  id v14;
  uint64_t (*v15)(_QWORD *, _QWORD);
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void (*v29)(_QWORD *, _QWORD);
  void *v30;
  id v31;
  void (*v32)(_QWORD *, _QWORD);
  void (*v33)(_QWORD *, _QWORD);
  uint64_t v34;
  void (*v35)(_QWORD *, _QWORD);
  uint64_t v36;
  uint64_t v37;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v39;
  UIFontTextStyle v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];

  v2 = v1;
  v4 = type metadata accessor for UIListContentConfiguration(0);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewListCell.defaultContentConfiguration()(v5);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v8);

  UIListContentConfiguration.image.setter(v9);
  v10 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v41 = UIFontTextStyleBody;
  v11 = objc_msgSend(v10, "configurationWithTextStyle:", UIFontTextStyleBody);
  v12 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v44);
  UIListContentConfiguration.ImageProperties.preferredSymbolConfiguration.setter(v11);
  v12(v44, 0);
  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "labelColor");
  v15 = (uint64_t (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v44);
  UIListContentConfiguration.ImageProperties.tintColor.setter(v14);
  v16 = v15(v44, 0);
  UIListContentConfiguration.imageToTextPadding.setter(v16, 8.0);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain(v17);
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "initWithString:", v19, swift_bridgeObjectRelease(v17).n128_f64[0]);

  if (*(_QWORD *)(a1 + 40))
  {
    v21 = objc_msgSend(v13, "labelColor");
    v22 = String._bridgeToObjectiveC()();
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v22, "rangeOfString:options:", v23, 385);
    v26 = v25;

    objc_msgSend(v20, "addAttribute:value:range:", NSForegroundColorAttributeName, v21, v24, v26);
  }
  v27 = v20;
  UIListContentConfiguration.attributedText.setter(v20);
  v28 = objc_msgSend(v13, "secondaryLabelColor");
  v29 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v44);
  UIListContentConfiguration.TextProperties.color.setter(v28);
  v29(v44, 0);
  v30 = (void *)objc_opt_self(UIFont);
  v31 = objc_msgSend(v30, "preferredFontForTextStyle:", v41);
  v32 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v44);
  UIListContentConfiguration.TextProperties.font.setter(v31);
  v32(v44, 0);
  v33 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.directionalLayoutMargins.modify(v44);
  *(_QWORD *)(v34 + 8) = 0;
  v33(v44, 0);
  v35 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.directionalLayoutMargins.modify(v44);
  *(_QWORD *)(v36 + 24) = 0;
  v35(v44, 0);
  objc_msgSend(v2, "directionalLayoutMargins");
  objc_msgSend(v2, "setDirectionalLayoutMargins:");
  objc_msgSend(v2, "directionalLayoutMargins");
  objc_msgSend(v2, "setDirectionalLayoutMargins:");
  v37 = v43;
  v44[3] = v43;
  v44[4] = &protocol witness table for UIListContentConfiguration;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v44);
  v39 = v42;
  (*(void (**)(_QWORD *, char *, uint64_t))(v42 + 16))(boxed_opaque_existential_0, v7, v37);
  UICollectionViewCell.contentConfiguration.setter(v44);

  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v7, v37);
}

uint64_t type metadata accessor for SearchHintCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews14SearchHintCell);
}

uint64_t sub_2A3E78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3CFCF8 != -1)
    swift_once(&qword_3CFCF8, sub_2A386C);
  v2 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_3FD870);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

double sub_2A3EE8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC23ShelfKitCollectionViews14SearchHintCell_objectGraph)).n128_u64[0];
  return result;
}

double sub_2A3EF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14SearchHintCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14SearchHintCell_objectGraph) = a1;
  swift_release(v3);
  *(_QWORD *)&result = swift_retain(a1).n128_u64[0];
  return result;
}

uint64_t sub_2A3F2C(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3E0458, v3, (uint64_t (*)(uint64_t))type metadata accessor for SearchHintCell, (uint64_t)&unk_3052C8);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

void sub_2A3F84()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000018, 0x800000000030C020, "ShelfKitCollectionViews/SearchHintCell.swift", 44, 2, 23, 0);
  __break(1u);
}

uint64_t sub_2A3FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3E0458, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchHintCell, (uint64_t)&unk_3052C8);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_2A4010(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E0430, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchHintCell, (uint64_t)&unk_305148);
}

uint64_t sub_2A403C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C90, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchHintCell, (uint64_t)&unk_3051D0);
}

uint64_t sub_2A4068(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E0438, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchHintCell, (uint64_t)&unk_3051A8);
}

uint64_t sub_2A4094(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E0440, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchHintCell, (uint64_t)&unk_305200);
}

uint64_t sub_2A40C0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E0448, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchHintCell, (uint64_t)&unk_305228);
}

uint64_t sub_2A40EC()
{
  return sub_239FC(&qword_3E0450, 255, (uint64_t (*)(uint64_t))&type metadata accessor for SearchHint, (uint64_t)&protocol conformance descriptor for SearchHint);
}

__n128 sub_2A411C()
{
  __n128 result;

  __asm { FMOV            V0.2D, #-10.0 }
  xmmword_3E0460 = (__int128)result;
  *(__n128 *)&qword_3E0470 = result;
  return result;
}

void sub_2A4130()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E0480 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2A41F4()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E0488 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2A42B8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E0490 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2A437C()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E0498 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2A4440()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E04A0 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2A4504()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E04A8 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2A45C8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E04B0 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2A4728()
{
  char *v0;
  void *v1;
  id v2;
  unsigned __int8 v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(id);
  uint64_t v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectedGlyph];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "isSelected");
    v4 = v2;
    if ((v3 & 1) == 0)
      v4 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_glyph];
    v5 = v4;
    v6 = v2;
    if (objc_msgSend(v0, "isSelected"))
      v6 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_glyph];
    v7 = (void *)objc_opt_self(UIView);
    v8 = swift_allocObject(&unk_3906F8, 32, 7);
    *(_QWORD *)(v8 + 16) = v5;
    *(_QWORD *)(v8 + 24) = v6;
    v17[4] = sub_2A58B0;
    v18 = v8;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_24360;
    v17[3] = &block_descriptor_71;
    v9 = _Block_copy(v17);
    v10 = v18;
    v11 = v6;
    v12 = v5;
    v13 = v11;
    swift_release(v10);
    objc_msgSend(v7, "animateWithDuration:animations:", v9, 0.2);
    _Block_release(v9);

  }
  v14 = *(void (**)(id))&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectionHandler];
  if (v14)
  {
    v15 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectionHandler + 8];
    v16 = objc_msgSend(v0, "isSelected", swift_retain(v15).n128_f64[0]);
    v14(v16);
    sub_1D618((uint64_t)v14, v15);
  }
}

void sub_2A48C0(char a1, char a2, char a3, char a4)
{
  _BYTE *v4;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  _BYTE *v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  int v19;
  char **p_name;
  _UNKNOWN **v21;
  _UNKNOWN **v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  NSString v43;
  id v44;
  void *v45;
  NSString v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  NSString v66;
  id v67;
  void *v68;
  NSString v69;
  id v70;
  void *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char v75;
  char *v76;
  objc_super v77;

  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectedGlyph] = 0;
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectedType;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectedType] = 7;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectionHandler];
  *v10 = 0;
  v10[1] = 0;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v4;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_glyph] = v13;
  v75 = a1;
  v12[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_type] = a1;
  v4[v9] = a2;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_backdrop] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoControlBackdrop()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_isGlyphOnlyButton] = a3;
  v12[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_isFullScreenButton] = a4;

  v77.receiver = v12;
  v77.super_class = (Class)type metadata accessor for VideoControlButton();
  v14 = (char *)objc_msgSendSuper2(&v77, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v72 = OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_backdrop;
  v73 = v14;
  v15 = *(char **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_backdrop];
  v16 = v14;
  objc_msgSend(v15, "setUserInteractionEnabled:", 0);
  v74 = OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_isGlyphOnlyButton;
  v17 = v16;
  if ((v16[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_isGlyphOnlyButton] & 1) == 0)
    v17 = *(char **)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews20VideoControlBackdrop_contentView];
  v18 = v17;
  v19 = v16[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectedType];
  p_name = (char **)(&stru_3B7FF8 + 8);
  v21 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
  v22 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
  v76 = v18;
  if (v19 == 7)
  {
    v23 = kCAFilterPlusL;
    goto LABEL_15;
  }
  v24 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v25 = OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectedGlyph;
  v26 = *(void **)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectedGlyph];
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectedGlyph] = v24;

  v27 = *(void **)&v16[v25];
  if (!v27
    || (v28 = v27,
        sub_2A5650(v19),
        objc_msgSend(v28, "setImage:", v29),
        v28,
        (v30 = *(void **)&v16[v25]) == 0))
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v31 = (void *)objc_opt_self(UIColor);
  v32 = v30;
  v33 = objc_msgSend(v31, "whiteColor");
  v34 = objc_msgSend(v33, "colorWithAlphaComponent:", 0.75);

  v23 = kCAFilterPlusL;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v36 = v35;
  v37 = objc_opt_self(UILabel);
  v38 = swift_dynamicCastObjCClass(v32, v37);
  if (v38)
  {
    v39 = (void *)v38;
    v40 = v32;
    objc_msgSend(v39, "_setTextColorFollowsTintColor:", 1);
    objc_msgSend(v39, "setTintColor:", v34);
    v41 = objc_msgSend(v39, "layer");
    v42 = objc_allocWithZone((Class)CAFilter);
    swift_bridgeObjectRetain(v36);
    v43 = String._bridgeToObjectiveC()();
    v44 = objc_msgSend(v42, "initWithType:", v43, swift_bridgeObjectRelease(v36).n128_f64[0]);

    objc_msgSend(v41, "setCompositingFilter:", v44);
    swift_bridgeObjectRelease(v36);

    p_name = (char **)(&stru_3B7FF8 + 8);
  }
  else
  {
    v45 = (void *)objc_opt_self(_UIVisualEffectTintLayerConfig);
    v46 = String._bridgeToObjectiveC()();
    v41 = objc_msgSend(v45, "layerWithTintColor:filterType:", v34, v46);

    v47 = objc_msgSend((id)objc_opt_self(_UIVisualEffectConfig), "configWithContentConfig:", v41);
    if (!v47)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v48 = v47;
    v44 = objc_msgSend(v47, "contentConfig");

    p_name = &stru_3B7FF8.name;
    if (!v44)
    {
LABEL_28:
      __break(1u);
      return;
    }
    objc_msgSend(v44, "configureLayerView:", v32);

    swift_bridgeObjectRelease(v36);
  }

  v49 = *(void **)&v16[v25];
  v22 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
  if (!v49)
    goto LABEL_24;
  objc_msgSend(v49, "setAlpha:", 0.0);
  if (!*(_QWORD *)&v16[v25])
    goto LABEL_24;
  objc_msgSend(v76, "addSubview:");
  v21 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
LABEL_15:
  v50 = OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_glyph;
  v51 = *(id *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_glyph];
  sub_2A5650(v75);
  objc_msgSend(v51, p_name[269], v52);

  v53 = *(void **)&v16[v50];
  v54 = (void *)objc_opt_self(v21[362]);
  v55 = v53;
  v56 = objc_msgSend(v54, "whiteColor");
  v57 = objc_msgSend(v56, "colorWithAlphaComponent:", 0.75);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v59 = v58;
  v60 = objc_opt_self(v22[389]);
  v61 = swift_dynamicCastObjCClass(v55, v60);
  if (!v61)
  {
    v68 = (void *)objc_opt_self(_UIVisualEffectTintLayerConfig);
    v69 = String._bridgeToObjectiveC()();
    v64 = objc_msgSend(v68, "layerWithTintColor:filterType:", v57, v69);

    v70 = objc_msgSend((id)objc_opt_self(_UIVisualEffectConfig), "configWithContentConfig:", v64);
    if (v70)
    {
      v71 = v70;
      v67 = objc_msgSend(v70, "contentConfig");

      if (v67)
      {
        objc_msgSend(v67, "configureLayerView:", v55);

        swift_bridgeObjectRelease(v59);
        goto LABEL_20;
      }
      goto LABEL_26;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v62 = (void *)v61;
  v63 = v55;
  objc_msgSend(v62, "_setTextColorFollowsTintColor:", 1);
  objc_msgSend(v62, "setTintColor:", v57);
  v64 = objc_msgSend(v62, "layer");
  v65 = objc_allocWithZone((Class)CAFilter);
  swift_bridgeObjectRetain(v59);
  v66 = String._bridgeToObjectiveC()();
  v67 = objc_msgSend(v65, "initWithType:", v66, swift_bridgeObjectRelease(v59).n128_f64[0]);

  objc_msgSend(v64, "setCompositingFilter:", v67);
  swift_bridgeObjectRelease(v59);

LABEL_20:
  objc_msgSend(v76, "addSubview:", *(_QWORD *)&v16[v50]);
  if ((v16[v74] & 1) == 0)
    objc_msgSend(v16, "addSubview:", *(_QWORD *)&v73[v72]);
  objc_msgSend(v16, "addTarget:action:forControlEvents:", v16, "wasTapped", 64);

}

void sub_2A5088()
{
  char *v0;
  void *v1;
  double Width;
  double v3;
  char **v4;
  BOOL v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  void *v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  id v25;
  objc_super v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for VideoControlButton();
  objc_msgSendSuper2(&v26, "layoutSubviews");
  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_isGlyphOnlyButton] & 1) == 0)
  {
    v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_backdrop];
    objc_msgSend(v0, "bounds");
    objc_msgSend(v1, "setFrame:");
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v27);
    objc_msgSend(v0, "bounds");
    if (Width == CGRectGetHeight(v28))
    {
      objc_msgSend(v1, "bounds");
      v3 = CGRectGetWidth(v29) * 0.5;
      v4 = &selRef__setCornerRadius_;
    }
    else
    {
      objc_msgSend(v0, "bounds");
      v5 = CGRectGetHeight(v30) <= 40.0;
      v3 = 8.0;
      if (!v5)
        v3 = 16.0;
      v4 = &selRef__setContinuousCornerRadius_;
    }
    objc_msgSend(v1, *v4, v3);
  }
  v6 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_glyph];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v6, "sizeThatFits:", v7, v8);
  v10 = v9;
  v12 = v11;
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectedGlyph;
  v14 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_selectedGlyph];
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v15, "sizeThatFits:", v16, v17);
    v19 = v18;
    v21 = v20;

  }
  else
  {
    v21 = 0.0;
    v19 = 0.0;
  }
  if (v19 >= v10)
    v22 = v19;
  else
    v22 = v10;
  objc_msgSend(v0, "bounds");
  v23 = (CGRectGetMaxX(v31) - v22) * 0.5;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v6, "setFrame:", v23, (CGRectGetMaxY(v32) - v12) * 0.5, v10, v12);
  v24 = *(void **)&v0[v13];
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v25, "setFrame:", v23, (CGRectGetMaxY(v33) - v21) * 0.5, v19, v21);

  }
}

id sub_2A5490()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoControlButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VideoControlButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews18VideoControlButton);
}

uint64_t storeEnumTagSinglePayload for VideoControlButtonType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2A5588 + 4 * byte_305315[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2A55BC + 4 * byte_305310[v4]))();
}

uint64_t sub_2A55BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2A55C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2A55CCLL);
  return result;
}

uint64_t sub_2A55D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2A55E0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2A55E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2A55EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoControlButtonType()
{
  return &type metadata for VideoControlButtonType;
}

unint64_t sub_2A560C()
{
  unint64_t result;

  result = qword_3E0520;
  if (!qword_3E0520)
  {
    result = swift_getWitnessTable(&unk_3053C8, &type metadata for VideoControlButtonType);
    atomic_store(result, (unint64_t *)&qword_3E0520);
  }
  return result;
}

void sub_2A5650(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2A5674()
{
  if (qword_3CFD08 != -1)
    swift_once(&qword_3CFD08, sub_2A4130);
  return qword_3E0480;
}

double sub_2A57E8()
{
  uint64_t v0;
  id v1;
  double result;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_isGlyphOnlyButton) == 1)
  {
    sub_2A5650(*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_type));
    objc_msgSend(v1, "size");
  }
  else if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_isFullScreenButton) == 1)
  {
    return dbl_3053F8[*(char *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_type)];
  }
  else
  {
    return dbl_305468[*(char *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18VideoControlButton_type)];
  }
  return result;
}

uint64_t sub_2A5884()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_2A58B0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
  return objc_msgSend(v1, "setAlpha:", 0.0);
}

double block_copy_helper_71(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_71(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_2A5900@<D0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  id v7;
  id v9;
  uint64_t v10;
  double result;
  void *v12;

  if (*(char *)(v3 + 56) < 0)
  {
    v12 = a1;
    v6 = sub_E710(0, &qword_3E0608, UITabBarController_ptr);
    v9 = a1;
LABEL_5:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0600);
    if ((swift_dynamicCast(a3, &v12, v6, v10, 6) & 1) != 0)
      return result;
    goto LABEL_6;
  }
  if (a2)
  {
    v12 = a2;
    v6 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
    v7 = a2;
    goto LABEL_5;
  }
LABEL_6:
  *(_QWORD *)(a3 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

__n128 PerformanceTestCase.type.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_BYTE *)(v1 + 56);
  result = *(__n128 *)(v1 + 16);
  v5 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  return result;
}

uint64_t PerformanceTestCase.shouldUseRecap.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t PerformanceTestCase.tab.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  sub_3D600(v1);
  return v1;
}

uint64_t PerformanceTestCase.popToRoot.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t PerformanceTestCase.flowDestination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PerformanceTestCase(0);
  return sub_D184(v1 + *(int *)(v3 + 36), a1, &qword_3D2B30);
}

uint64_t PerformanceTestCase.presentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PerformanceTestCase(0) + 40);
  v4 = type metadata accessor for FlowPresentationContext(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PerformanceTestCase.searchTerm.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PerformanceTestCase(0) + 44));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t PerformanceTestCase.editing.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PerformanceTestCase(0) + 48));
}

uint64_t PerformanceTestCase.init(name:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  int v64;
  __n128 v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  int v76;
  BOOL v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  int v83;
  BOOL v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  int v90;
  BOOL v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  char v99;
  Swift::String v100;
  uint64_t v101;
  Swift::Bool v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int128 *v114;
  unint64_t v115;
  char v116;
  uint64_t *v117;
  __int128 *v118;
  unint64_t v119;
  char v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  unint64_t v125;
  char v126;
  char v127;
  uint64_t v128;
  char v129;
  void (*v130)(char *, __int128 *, uint64_t);
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD v147[2];
  _QWORD v148[5];
  __int128 v149;
  __int128 v150;

  v146 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0528);
  __chkstk_darwin(v7);
  v144 = (char *)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowPresentationContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v138 = (char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0530);
  __chkstk_darwin(v12);
  v141 = (char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v140 = (char *)&v132 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v16);
  v142 = (char *)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v137 = (uint64_t)&v132 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v20);
  v22 = (char *)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for URL(0);
  v139 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v136 = (unint64_t *)((char *)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  v27 = (char *)&v132 - v26;
  v28 = (int *)type metadata accessor for PerformanceTestCase(0);
  v145 = *((_QWORD *)v28 - 1);
  __chkstk_darwin(v28);
  v30 = (char *)&v132 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = a1;
  *(_QWORD *)v30 = a1;
  *((_QWORD *)v30 + 1) = a2;
  if (*(_QWORD *)(a3 + 16))
  {
    v134 = v10;
    v135 = v9;
    v147[0] = 6447476;
    v147[1] = 0xE300000000000000;
    swift_bridgeObjectRetain(a2);
    AnyHashable.init<A>(_:)(v148, v147, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a3 + 16) && (v31 = sub_36FB4((uint64_t)v148), (v32 & 1) != 0))
    {
      sub_1D66C(*(_QWORD *)(a3 + 56) + 32 * v31, (uint64_t)&v149);
    }
    else
    {
      v149 = 0u;
      v150 = 0u;
    }
    sub_3D5CC((uint64_t)v148);
    if (*((_QWORD *)&v150 + 1))
    {
      if ((swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        *((_QWORD *)v30 + 8) = NavigationTab.init(stringValue:)(v147[0], v147[1]);
        strcpy((char *)v147, "popToRoot");
        WORD1(v147[1]) = 0;
        HIDWORD(v147[1]) = -385875968;
        AnyHashable.init<A>(_:)(v148, v147, &type metadata for String, &protocol witness table for String);
        v33 = *(_QWORD *)(a3 + 16);
        v133 = a2;
        if (v33 && (v34 = sub_36FB4((uint64_t)v148), (v35 & 1) != 0))
        {
          sub_1D66C(*(_QWORD *)(a3 + 56) + 32 * v34, (uint64_t)&v149);
        }
        else
        {
          v149 = 0u;
          v150 = 0u;
        }
        sub_3D5CC((uint64_t)v148);
        v45 = a3;
        if (*((_QWORD *)&v150 + 1))
        {
          if ((swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
          {
            v46 = v147[1];
            if (v147[0] == 5457241 && v147[1] == 0xE300000000000000)
            {
              swift_bridgeObjectRelease(0xE300000000000000);
              v47 = 1;
            }
            else
            {
              v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v147[0], v147[1], 5457241, 0xE300000000000000, 0);
              swift_bridgeObjectRelease(v46);
            }
            goto LABEL_23;
          }
        }
        else
        {
          sub_D1D4((uint64_t)&v149, &qword_3D1A70);
        }
        v47 = 0;
LABEL_23:
        v30[72] = v47 & 1;
        strcpy((char *)v147, "pushToUrl");
        WORD1(v147[1]) = 0;
        HIDWORD(v147[1]) = -385875968;
        AnyHashable.init<A>(_:)(v148, v147, &type metadata for String, &protocol witness table for String);
        v48 = v45;
        if (*(_QWORD *)(v45 + 16) && (v49 = sub_36FB4((uint64_t)v148), (v50 & 1) != 0))
        {
          sub_1D66C(*(_QWORD *)(v45 + 56) + 32 * v49, (uint64_t)&v149);
        }
        else
        {
          v149 = 0u;
          v150 = 0u;
        }
        sub_3D5CC((uint64_t)v148);
        if (*((_QWORD *)&v150 + 1))
        {
          if ((swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
          {
            v51 = v147[1];
            URL.init(string:)(v147[0]);
            v52 = swift_bridgeObjectRelease(v51);
            v53 = v139;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v139 + 48))(v22, 1, v23, v52) != 1)
            {
              (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v27, v22, v23);
              v71 = v136;
              (*(void (**)(unint64_t *, char *, uint64_t))(v53 + 16))(v136, v27, v23);
              v72 = v137;
              FlowDestination.init(testUrl:)(v71, v137);
              (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v23);
              v73 = type metadata accessor for FlowDestination(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v72, 0, 1, v73);
              v54 = v72;
              v48 = v45;
              goto LABEL_61;
            }
            sub_D1D4((uint64_t)v22, (uint64_t *)&unk_3D2D70);
            v48 = v45;
          }
        }
        else
        {
          sub_D1D4((uint64_t)&v149, &qword_3D1A70);
        }
        *(_QWORD *)&v149 = 0x65676150776F6C66;
        *((_QWORD *)&v149 + 1) = 0xE800000000000000;
        AnyHashable.init<A>(_:)(v148, &v149, &type metadata for String, &protocol witness table for String);
        v55 = (uint64_t)v141;
        v54 = (uint64_t)v142;
        v56 = (uint64_t)v140;
        if (*(_QWORD *)(v48 + 16) && (v57 = sub_36FB4((uint64_t)v148), (v58 & 1) != 0))
        {
          sub_1D66C(*(_QWORD *)(v48 + 56) + 32 * v57, (uint64_t)&v149);
        }
        else
        {
          v149 = 0u;
          v150 = 0u;
        }
        sub_3D5CC((uint64_t)v148);
        if (*((_QWORD *)&v150 + 1))
        {
          v59 = swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if (v59)
            v60 = v147[0];
          else
            v60 = 0;
          if (v59)
            v61 = v147[1];
          else
            v61 = 0;
        }
        else
        {
          sub_D1D4((uint64_t)&v149, &qword_3D1A70);
          v60 = 0;
          v61 = 0;
        }
        *(_QWORD *)&v149 = 0xD000000000000010;
        *((_QWORD *)&v149 + 1) = 0x8000000000319470;
        AnyHashable.init<A>(_:)(v148, &v149, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v48 + 16) && (v62 = sub_36FB4((uint64_t)v148), (v63 & 1) != 0))
        {
          sub_1D66C(*(_QWORD *)(v48 + 56) + 32 * v62, (uint64_t)&v149);
        }
        else
        {
          v149 = 0u;
          v150 = 0u;
        }
        sub_3D5CC((uint64_t)v148);
        if (*((_QWORD *)&v150 + 1))
        {
          v64 = swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if (v64)
            v66 = (void (*)(char *, uint64_t))v147[0];
          else
            v66 = 0;
          if (v64)
            v67 = v147[1];
          else
            v67 = 0;
        }
        else
        {
          sub_D1D4((uint64_t)&v149, &qword_3D1A70);
          v66 = 0;
          v67 = 0;
        }
        sub_2A6C78(v60, v61, v66, v67, v56, v65);
        sub_D184(v56, v55, &qword_3E0530);
        v68 = type metadata accessor for LazyJSFlowDestination(0);
        v69 = *(_QWORD *)(v68 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v55, 1, v68) == 1)
        {
          sub_D1D4(v56, &qword_3E0530);
          sub_D1D4(v55, &qword_3E0530);
          v70 = type metadata accessor for FlowDestination(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v54, 1, 1, v70);
        }
        else
        {
          LazyJSFlowDestination.destination.getter();
          v48 = v45;
          sub_D1D4(v56, &qword_3E0530);
          (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v55, v68);
        }
LABEL_61:
        sub_2A7B00(v54, (uint64_t)&v30[v28[9]]);
        *(_QWORD *)&v149 = 0xD000000000000010;
        *((_QWORD *)&v149 + 1) = 0x8000000000319490;
        AnyHashable.init<A>(_:)(v148, &v149, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v48 + 16) && (v74 = sub_36FB4((uint64_t)v148), (v75 & 1) != 0))
        {
          sub_1D66C(*(_QWORD *)(v48 + 56) + 32 * v74, (uint64_t)&v149);
        }
        else
        {
          v149 = 0u;
          v150 = 0u;
        }
        sub_3D5CC((uint64_t)v148);
        if (*((_QWORD *)&v150 + 1))
        {
          v76 = swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          v77 = v76 == 0;
          if (v76)
            v78 = v147[0];
          else
            v78 = 0;
          if (v77)
            v79 = 0;
          else
            v79 = v147[1];
        }
        else
        {
          sub_D1D4((uint64_t)&v149, &qword_3D1A70);
          v78 = 0;
          v79 = 0;
        }
        v80 = sub_2A7B48(v78, v79);
        *(_QWORD *)&v149 = 0x6874676E656CLL;
        *((_QWORD *)&v149 + 1) = 0xE600000000000000;
        AnyHashable.init<A>(_:)(v148, &v149, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v48 + 16) && (v81 = sub_36FB4((uint64_t)v148), (v82 & 1) != 0))
        {
          sub_1D66C(*(_QWORD *)(v48 + 56) + 32 * v81, (uint64_t)&v149);
        }
        else
        {
          v149 = 0u;
          v150 = 0u;
        }
        sub_3D5CC((uint64_t)v148);
        if (*((_QWORD *)&v150 + 1))
        {
          v83 = swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          v84 = v83 == 0;
          if (v83)
            v85 = v147[0];
          else
            v85 = 0;
          if (v84)
            v86 = 0;
          else
            v86 = v147[1];
        }
        else
        {
          sub_D1D4((uint64_t)&v149, &qword_3D1A70);
          v85 = 0;
          v86 = 0;
        }
        v87 = sub_2A7B48(v85, v86);
        *(_QWORD *)&v149 = 0x65446C6C6F726373;
        *((_QWORD *)&v149 + 1) = 0xEB0000000061746CLL;
        AnyHashable.init<A>(_:)(v148, &v149, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v48 + 16) && (v88 = sub_36FB4((uint64_t)v148), (v89 & 1) != 0))
        {
          sub_1D66C(*(_QWORD *)(v48 + 56) + 32 * v88, (uint64_t)&v149);
        }
        else
        {
          v149 = 0u;
          v150 = 0u;
        }
        sub_3D5CC((uint64_t)v148);
        if (*((_QWORD *)&v150 + 1))
        {
          v90 = swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          v91 = v90 == 0;
          if (v90)
            v92 = v147[0];
          else
            v92 = 0;
          if (v91)
            v93 = 0;
          else
            v93 = v147[1];
        }
        else
        {
          sub_D1D4((uint64_t)&v149, &qword_3D1A70);
          v92 = 0;
          v93 = 0;
        }
        v94 = sub_2A7B48(v92, v93);
        strcpy((char *)v147, "useCornobble");
        BYTE5(v147[1]) = 0;
        HIWORD(v147[1]) = -5120;
        AnyHashable.init<A>(_:)(v148, v147, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v48 + 16) && (v95 = sub_36FB4((uint64_t)v148), (v96 & 1) != 0))
        {
          sub_1D66C(*(_QWORD *)(v48 + 56) + 32 * v95, (uint64_t)&v149);
        }
        else
        {
          v149 = 0u;
          v150 = 0u;
        }
        sub_3D5CC((uint64_t)v148);
        if (*((_QWORD *)&v150 + 1))
        {
          if ((swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
          {
            v97 = v147[1];
            if (v147[0] == 5457241 && v147[1] == 0xE300000000000000)
            {
              swift_bridgeObjectRelease(0xE300000000000000);
              v98 = 1;
            }
            else
            {
              v98 = _stringCompareWithSmolCheck(_:_:expecting:)(v147[0], v147[1], 5457241, 0xE300000000000000, 0);
              swift_bridgeObjectRelease(v97);
            }
            v99 = v98 & 1;
LABEL_110:
            v30[57] = v99;
            v100._countAndFlagsBits = 0x6979616C50776F4ELL;
            v100._object = (void *)0xEA0000000000676ELL;
            v101 = v133;
            v102 = String.hasPrefix(_:)(v100);
            swift_bridgeObjectRelease(v101);
            if (v102)
            {
              *((_QWORD *)v30 + 6) = 0;
              *((_OWORD *)v30 + 1) = 0u;
              *((_OWORD *)v30 + 2) = 0u;
              v30[56] = 0x80;
              v103 = v45;
              goto LABEL_131;
            }
            v147[0] = 0x657A69736572;
            v147[1] = 0xE600000000000000;
            AnyHashable.init<A>(_:)(v148, v147, &type metadata for String, &protocol witness table for String);
            v103 = v45;
            if (*(_QWORD *)(v45 + 16) && (v104 = sub_36FB4((uint64_t)v148), (v105 & 1) != 0))
            {
              sub_1D66C(*(_QWORD *)(v45 + 56) + 32 * v104, (uint64_t)&v149);
            }
            else
            {
              v149 = 0u;
              v150 = 0u;
            }
            sub_3D5CC((uint64_t)v148);
            if (*((_QWORD *)&v150 + 1))
            {
              if ((swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
              {
                v106 = v147[1];
                if (v147[0] == 5457241 && v147[1] == 0xE300000000000000)
                {
                  swift_bridgeObjectRelease(0xE300000000000000);
                  v103 = v45;
LABEL_123:
                  *((_QWORD *)v30 + 6) = 0;
                  *((_OWORD *)v30 + 1) = 0u;
                  *((_OWORD *)v30 + 2) = 0u;
                  v30[56] = 64;
                  goto LABEL_131;
                }
                v107 = _stringCompareWithSmolCheck(_:_:expecting:)(v147[0], v147[1], 5457241, 0xE300000000000000, 0);
                swift_bridgeObjectRelease(v106);
                v103 = v45;
                if ((v107 & 1) != 0)
                  goto LABEL_123;
              }
            }
            else
            {
              sub_D1D4((uint64_t)&v149, &qword_3D1A70);
            }
            v108 = v80;
            v109 = v94;
            if ((v80 & 0x100000000) != 0)
              v108 = 0;
            v110 = v87 << 32;
            if ((v87 & 0x100000000) != 0)
              v110 = 0;
            v111 = v110 | v108;
            if ((v94 & 0x100000000) != 0)
              v109 = 0;
            *((_QWORD *)v30 + 2) = v111;
            *((_QWORD *)v30 + 3) = v109;
            *((_QWORD *)v30 + 5) = 0;
            *((_QWORD *)v30 + 6) = 0;
            *((_QWORD *)v30 + 4) = 0;
            v30[56] = 0;
LABEL_131:
            strcpy((char *)v147, "presentation");
            BYTE5(v147[1]) = 0;
            HIWORD(v147[1]) = -5120;
            AnyHashable.init<A>(_:)(v148, v147, &type metadata for String, &protocol witness table for String);
            v39 = v146;
            v112 = v135;
            v113 = v134;
            v114 = (__int128 *)v144;
            if (*(_QWORD *)(v103 + 16) && (v115 = sub_36FB4((uint64_t)v148), (v116 & 1) != 0))
            {
              sub_1D66C(*(_QWORD *)(v103 + 56) + 32 * v115, (uint64_t)&v149);
            }
            else
            {
              v149 = 0u;
              v150 = 0u;
            }
            sub_3D5CC((uint64_t)v148);
            if (*((_QWORD *)&v150 + 1))
            {
              if ((swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
              {
LABEL_141:
                (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(&v30[v28[10]], enum case for FlowPresentationContext.infer(_:), v112);
LABEL_142:
                *(_QWORD *)&v149 = 0x6554686372616573;
                *((_QWORD *)&v149 + 1) = 0xEA00000000006D72;
                AnyHashable.init<A>(_:)(v148, &v149, &type metadata for String, &protocol witness table for String);
                if (*(_QWORD *)(v103 + 16) && (v119 = sub_36FB4((uint64_t)v148), (v120 & 1) != 0))
                {
                  sub_1D66C(*(_QWORD *)(v103 + 56) + 32 * v119, (uint64_t)&v149);
                }
                else
                {
                  v149 = 0u;
                  v150 = 0u;
                }
                sub_3D5CC((uint64_t)v148);
                if (*((_QWORD *)&v150 + 1))
                {
                  v121 = swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                  v122 = v147[0];
                  v123 = v147[1];
                  if (!v121)
                  {
                    v122 = 0;
                    v123 = 0;
                  }
                }
                else
                {
                  sub_D1D4((uint64_t)&v149, &qword_3D1A70);
                  v122 = 0;
                  v123 = 0;
                }
                v124 = &v30[v28[11]];
                *(_QWORD *)v124 = v122;
                *((_QWORD *)v124 + 1) = v123;
                strcpy((char *)v147, "editing");
                v147[1] = 0xE700000000000000;
                AnyHashable.init<A>(_:)(v148, v147, &type metadata for String, &protocol witness table for String);
                if (*(_QWORD *)(v103 + 16) && (v125 = sub_36FB4((uint64_t)v148), (v126 & 1) != 0))
                {
                  sub_1D66C(*(_QWORD *)(v103 + 56) + 32 * v125, (uint64_t)&v149);
                }
                else
                {
                  v149 = 0u;
                  v150 = 0u;
                }
                swift_bridgeObjectRelease(v103);
                sub_3D5CC((uint64_t)v148);
                if (*((_QWORD *)&v150 + 1))
                {
                  v127 = swift_dynamicCast(v147, &v149, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                  v40 = v145;
                  if ((v127 & 1) != 0)
                  {
                    v128 = v147[1];
                    if (v147[0] == 5457241 && v147[1] == 0xE300000000000000)
                    {
                      swift_bridgeObjectRelease(0xE300000000000000);
                      v129 = 1;
                    }
                    else
                    {
                      v129 = _stringCompareWithSmolCheck(_:_:expecting:)(v147[0], v147[1], 5457241, 0xE300000000000000, 0);
                      swift_bridgeObjectRelease(v128);
                    }
                    goto LABEL_161;
                  }
                }
                else
                {
                  sub_D1D4((uint64_t)&v149, &qword_3D1A70);
                  v40 = v145;
                }
                v129 = 0;
LABEL_161:
                v30[v28[12]] = v129 & 1;
                goto LABEL_162;
              }
              FlowPresentationContext.init(rawValue:)(v147[0], v147[1]);
              if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v113 + 48))(v114, 1, v112) != 1)
              {
                v130 = *(void (**)(char *, __int128 *, uint64_t))(v113 + 32);
                v131 = v138;
                v130(v138, v114, v112);
                v130(&v30[v28[10]], (__int128 *)v131, v112);
                goto LABEL_142;
              }
              v117 = &qword_3E0528;
              v118 = v114;
            }
            else
            {
              v117 = &qword_3D1A70;
              v118 = &v149;
            }
            sub_D1D4((uint64_t)v118, v117);
            goto LABEL_141;
          }
        }
        else
        {
          sub_D1D4((uint64_t)&v149, &qword_3D1A70);
        }
        v99 = 2;
        goto LABEL_110;
      }
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a3);
    }
    else
    {
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a3);
      sub_D1D4((uint64_t)&v149, &qword_3D1A70);
    }
    v42 = v145;
    v41 = v146;
    v43 = swift_bridgeObjectRelease(*((_QWORD *)v30 + 1));
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *, __n128))(v42 + 56))(v41, 1, 1, v28, v43);
  }
  swift_bridgeObjectRelease(a3);
  *((_QWORD *)v30 + 8) = 15;
  v36 = &v30[v28[9]];
  v37 = type metadata accessor for FlowDestination(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
  v38 = &v30[v28[11]];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  v30[v28[12]] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(&v30[v28[10]], enum case for FlowPresentationContext.infer(_:), v9);
  *((_QWORD *)v30 + 2) = 0;
  *((_QWORD *)v30 + 3) = 0;
  *((_QWORD *)v30 + 5) = 0;
  *((_QWORD *)v30 + 6) = 0;
  *((_QWORD *)v30 + 4) = 1;
  *((_WORD *)v30 + 28) = 577;
  v30[72] = 0;
  v40 = v145;
  v39 = v146;
LABEL_162:
  sub_10B1A4((uint64_t)v30, v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v40 + 56))(v39, 0, 1, v28);
  return sub_2A7E10((uint64_t)v30);
}

uint64_t sub_2A6C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, __n128 a6@<Q0>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;

  v67 = a3;
  v68 = a5;
  v9 = type metadata accessor for FlowOrigin(0, a6);
  v61 = *(_QWORD *)(v9 - 8);
  v62 = v9;
  __chkstk_darwin(v9);
  v63 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v11);
  v60 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0530);
  v14 = __chkstk_darwin(v13);
  v64 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for JSONContext(0, v14);
  v65 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v58 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v56 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v56 - v21;
  __chkstk_darwin(v23);
  v66 = (char *)&v56 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E05F8);
  __chkstk_darwin(v25);
  v27 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v56 - v30;
  v32 = type metadata accessor for JSONObject(0, v29);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = __chkstk_darwin(v32);
  v36 = (char *)&v56 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    v57 = a1;
    JSONObject.init(fromFile:)(v67, a4, v34);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
    {
      swift_bridgeObjectRelease(a2);
      v37 = &qword_3E05F8;
      v38 = (uint64_t)v31;
    }
    else
    {
      v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v33 + 32))(v36, v31, v32);
      v43 = JSONContext.init()(v42);
      JSONContext.withActionKinds()(v43);
      v56 = a2;
      v44 = *(uint64_t (**)(char *, uint64_t))(v65 + 8);
      v45 = v59;
      v46 = v44(v19, v59);
      v47 = v66;
      JSONContext.withIntentKinds()(v46);
      v67 = (void (*)(char *, uint64_t))v44;
      v44(v22, v45);
      v48 = type metadata accessor for URL(0);
      v49 = v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v60, 1, 1, v48);
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v27, v36, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v27, 0, 1, v32);
      v50 = v58;
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v58, v47, v45);
      v51 = v63;
      (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v63, enum case for FlowOrigin.inapp(_:), v62);
      v52 = v64;
      LazyJSFlowDestination.init(pageString:pageUrl:pageDataJSON:context:origin:)(v57, v56, v49, v27, v50, v51);
      v67(v66, v45);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v32);
      v53 = type metadata accessor for LazyJSFlowDestination(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 0, 1, v53);
      type metadata accessor for LazyJSFlowDestination(0);
      v54 = *(_QWORD *)(v53 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = v68;
        (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v68, v52, v53);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v55, 0, 1, v53);
      }
      v37 = &qword_3E0530;
      v38 = (uint64_t)v52;
    }
    sub_D1D4(v38, v37);
  }
  else
  {
    swift_bridgeObjectRelease(a2);
  }
  v39 = v68;
  v40 = type metadata accessor for LazyJSFlowDestination(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
}

_QWORD *sub_2A7150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1D70);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = _swift_stdlib_malloc_size_0(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_2A71B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned __int8 *v14;
  uint64_t v16;
  uint64_t v17;

  v16 = a1;
  v17 = a2;
  v4 = swift_bridgeObjectRetain(a2);
  v5 = String.init<A>(_:)(&v16, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v4);
  v8 = v5;
  v9 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v11 = HIBYTE(v9) & 0xF;
    v16 = v8;
    v17 = v9 & 0xFFFFFFFFFFFFFFLL;
    v10 = (unsigned __int8 *)&v16;
    goto LABEL_7;
  }
  v8 = sub_2A7518(v5, v6, v7);
  v13 = v12;
  swift_bridgeObjectRelease(v9);
  v9 = v13;
  if ((v13 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v8 & 0x1000000000000000) != 0)
  {
    v10 = (unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v10 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v8, v9);
  }
LABEL_7:
  v14 = sub_2A7298(v10, v11, a3);
  swift_bridgeObjectRelease(v9);
  return v14 | ((((unint64_t)v14 >> 32) & 1) << 32);
}

unsigned __int8 *sub_2A7298(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__OFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__OFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (__OFSUB__((_DWORD)v14, v15))
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2A7518(uint64_t a1, unint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v3 = a1;
  v4 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v4 = 11;
  v5 = String.subscript.getter(15, v4 | (v3 << 16), a1, a2, a3);
  v7 = v6;
  v10 = sub_2A7594(v5, v8, v9, v6);
  swift_bridgeObjectRelease(v7);
  return v10;
}

uint64_t sub_2A7594(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v11 = sub_2A76D8(a1, a2, a3, a4);
    if (v11)
    {
      v12 = v11;
      v8 = (unint64_t)sub_2A7150(v11, 0);
      v5 = sub_2A77C4((unint64_t)v15, v8 + 32, v12, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v12)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32);
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v9 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v9 += v8;
        return static String._uncheckedFromUTF8(_:)(v9);
      }
LABEL_11:
      v9 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v9)
        return static String._uncheckedFromUTF8(_:)(v9);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8);
  }
}

unint64_t sub_2A76D8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_2703A0(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_2703A0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }
  __break(1u);
  return result;
}

unint64_t sub_2A77C4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_2703A0(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_2703A0(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

BOOL _s23ShelfKitCollectionViews19PerformanceTestCaseV0F4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  double v5;
  double v6;
  unsigned int v7;
  double v8;
  uint64_t v9;
  double v10;
  uint64_t v13;
  BOOL v14;

  v2 = *(double *)a1;
  v3 = *(double *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 40);
  v5 = *(double *)a2;
  v6 = *(double *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 40);
  if (v4 >> 6)
  {
    v9 = *(_QWORD *)(a2 + 16);
    v8 = *(double *)(a2 + 24);
    v10 = *(double *)(a2 + 32);
    if (v4 >> 6 == 1)
    {
      if ((v7 & 0xC0) != 0x40)
        return 0;
      if ((*(_BYTE *)(a1 + 16) & 1) != 0)
      {
        if ((v9 & 1) == 0)
          return 0;
      }
      else
      {
        if ((v9 & 1) != 0)
          return 0;
        if (v2 != v5 || v3 != v6)
          return 0;
      }
      if ((v4 & 1) == 0)
        return (v7 & 1) == 0 && *(double *)(a1 + 24) == v8 && *(double *)(a1 + 32) == v10;
      return (v7 & 1) != 0;
    }
    else
    {
      v13 = *(_QWORD *)&v6 | *(_QWORD *)&v5 | v9 | *(_QWORD *)&v8 | *(_QWORD *)&v10;
      v14 = (v7 & 0xC0) == 0x80 && v13 == 0;
      return v14 && v7 == 128;
    }
  }
  else
  {
    if (v7 >= 0x40)
      return 0;
    return *(_QWORD *)&v2 == *(_QWORD *)&v5 && LODWORD(v3) == LODWORD(v6);
  }
}

uint64_t type metadata accessor for PerformanceTestCase(uint64_t a1)
{
  uint64_t result;

  result = qword_3E0598;
  if (!qword_3E0598)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PerformanceTestCase);
  return result;
}

uint64_t sub_2A7B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2A7B48(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  unsigned __int8 *v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD v24[2];
  char v25;

  if (!a2)
    goto LABEL_56;
  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_56;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v8 = sub_2A71B4(result, a2, 10);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 0x100000000) == 0)
    {
      v20 = 0;
      return v8 | ((unint64_t)v20 << 32);
    }
LABEL_56:
    LODWORD(v8) = 0;
    v20 = 1;
    return v8 | ((unint64_t)v20 << 32);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, a2);
    v7 = sub_2A7298(v6, v4, 10);
    LODWORD(v8) = (_DWORD)v7;
    v25 = BYTE4(v7) & 1;
    v9 = BYTE4(v7) & 1;
LABEL_45:
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) == 0)
    {
      v20 = 0;
      return v8 | ((unint64_t)v20 << 32);
    }
    goto LABEL_56;
  }
  v24[0] = result;
  v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v3)
      goto LABEL_60;
    if (v3 == 1)
      goto LABEL_32;
    LODWORD(v8) = (BYTE1(result) - 48);
    if (v8 > 9)
      goto LABEL_32;
    if (v3 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_32;
      LODWORD(v8) = 10 * v8 + (BYTE2(result) - 48);
      v11 = v3 - 3;
      if (v11)
      {
        v12 = (unsigned __int8 *)v24 + 3;
        while (1)
        {
          v13 = *v12 - 48;
          if (v13 > 9)
            goto LABEL_32;
          v14 = 10 * (int)v8;
          if (v14 != (int)v14)
            goto LABEL_32;
          LODWORD(v8) = v14 + v13;
          if (__OFADD__((_DWORD)v14, v13))
            goto LABEL_32;
          v9 = 0;
          ++v12;
          if (!--v11)
            goto LABEL_45;
        }
      }
    }
LABEL_44:
    v9 = 0;
    goto LABEL_45;
  }
  if (result != 45)
  {
    if (!v3)
      goto LABEL_32;
    LODWORD(v8) = (result - 48);
    if (v8 > 9)
      goto LABEL_32;
    if (v3 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_32;
      LODWORD(v8) = 10 * v8 + (BYTE1(result) - 48);
      v15 = v3 - 2;
      if (v15)
      {
        v16 = (unsigned __int8 *)v24 + 2;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            goto LABEL_32;
          v18 = 10 * (int)v8;
          if (v18 != (int)v18)
            goto LABEL_32;
          LODWORD(v8) = v18 + v17;
          if (__OFADD__((_DWORD)v18, v17))
            goto LABEL_32;
          v9 = 0;
          ++v16;
          if (!--v15)
            goto LABEL_45;
        }
      }
    }
    goto LABEL_44;
  }
  if (v3)
  {
    if (v3 != 1)
    {
      v10 = (BYTE1(result) - 48);
      if (v10 <= 9)
      {
        if (v3 == 2)
        {
          v9 = 0;
          LODWORD(v8) = -v10;
          goto LABEL_45;
        }
        if ((BYTE2(result) - 48) <= 9u)
        {
          LODWORD(v8) = -10 * v10 - (BYTE2(result) - 48);
          v19 = v3 - 3;
          if (!v19)
            goto LABEL_44;
          v21 = (unsigned __int8 *)v24 + 3;
          while (1)
          {
            v22 = *v21 - 48;
            if (v22 > 9)
              break;
            v23 = 10 * (int)v8;
            if (v23 != (int)v23)
              break;
            LODWORD(v8) = v23 - v22;
            if (__OFSUB__((_DWORD)v23, v22))
              break;
            v9 = 0;
            ++v21;
            if (!--v19)
              goto LABEL_45;
          }
        }
      }
    }
LABEL_32:
    LODWORD(v8) = 0;
    v9 = 1;
    goto LABEL_45;
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_2A7E10(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PerformanceTestCase(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for PerformanceTestCase(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v16);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
    v9 = a2[8];
    *(_BYTE *)(a1 + 57) = *((_BYTE *)a2 + 57);
    swift_bridgeObjectRetain(v7);
    if ((unint64_t)(v9 - 1) >= 0x11)
      swift_retain(v9);
    *(_QWORD *)(a1 + 64) = v9;
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    v10 = a3[9];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for FlowDestination(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v17 = a3[10];
    v18 = a1 + v17;
    v19 = (uint64_t)a2 + v17;
    v20 = type metadata accessor for FlowPresentationContext(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[11];
    v22 = a3[12];
    v23 = (_QWORD *)(a1 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    *(_BYTE *)(a1 + v22) = *((_BYTE *)a2 + v22);
    swift_bridgeObjectRetain(v25);
  }
  return a1;
}

double destroy for PerformanceTestCase(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 64);
  if ((unint64_t)(v4 - 1) >= 0x11)
    swift_release(v4);
  v5 = a1 + a2[9];
  v6 = type metadata accessor for FlowDestination(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = a1 + a2[10];
  v9 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[11] + 8)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for PerformanceTestCase(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = *(_OWORD *)(a2 + 41);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v9 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 41) = v8;
  swift_bridgeObjectRetain(v6);
  if ((unint64_t)(v9 - 1) >= 0x11)
    swift_retain(v9);
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v10 = a3[9];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = type metadata accessor for FlowDestination(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[10];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[11];
  v21 = a3[12];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  swift_bridgeObjectRetain(v24);
  return a1;
}

uint64_t assignWithCopy for PerformanceTestCase(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_OWORD *)(a2 + 16);
  v9 = *(_OWORD *)(a2 + 32);
  v10 = (_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = v12 - 1;
  if ((unint64_t)(v11 - 1) >= 0x11)
  {
    if (v13 >= 0x11)
    {
      *v10 = v12;
      swift_retain(v12);
      swift_release(v11);
    }
    else
    {
      sub_D1D4(a1 + 64, &qword_3E0538);
      *v10 = *(_QWORD *)(a2 + 64);
    }
  }
  else
  {
    *v10 = v12;
    if (v13 >= 0x11)
      swift_retain(v12);
  }
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v14 = a3[9];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = type metadata accessor for FlowDestination(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_13;
  }
  if (v21)
  {
LABEL_13:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_14:
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[11];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v30 = v29[1];
  v31 = v28[1];
  v28[1] = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t initializeWithTake for PerformanceTestCase(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 41);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = a3[9];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 41) = v7;
  v11 = type metadata accessor for FlowDestination(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[10];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for PerformanceTestCase(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v9 = (_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 64);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v11 = *(_QWORD *)(a2 + 64);
  if ((unint64_t)(v8 - 1) < 0x11)
    goto LABEL_4;
  if ((unint64_t)(v11 - 1) < 0x11)
  {
    sub_D1D4(a1 + 64, &qword_3E0538);
LABEL_4:
    *v9 = v11;
    goto LABEL_6;
  }
  *v9 = v11;
  swift_release(v8);
LABEL_6:
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v12 = a3[9];
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = type metadata accessor for FlowDestination(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_11;
  }
  if (v19)
  {
LABEL_11:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_12:
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = a3[11];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  v30 = v26[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease(v30);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PerformanceTestCase(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2A8724);
}

uint64_t sub_2A8724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = type metadata accessor for FlowPresentationContext(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PerformanceTestCase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2A87D4);
}

uint64_t sub_2A87D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = type metadata accessor for FlowPresentationContext(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2A8874(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = &unk_305578;
  v6[1] = &unk_305590;
  v6[2] = &unk_3055A8;
  v6[3] = &unk_3055C0;
  v6[4] = &unk_3055D8;
  sub_2A8938(319);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for FlowPresentationContext(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = &unk_3055F0;
      v6[8] = &unk_3055D8;
      swift_initStructMetadata(a1, 256, 9, v6, a1 + 16);
    }
  }
}

void sub_2A8938(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3E05A8)
  {
    v2 = type metadata accessor for FlowDestination(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3E05A8);
  }
}

uint64_t getEnumTagSinglePayload for PerformanceTestCase.TestType(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for PerformanceTestCase.TestType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      *(_BYTE *)(result + 40) = 0;
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2A8A38(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 40);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2A8A58(uint64_t result)
{
  *(_BYTE *)(result + 40) &= 0x3Fu;
  return result;
}

uint64_t sub_2A8A68(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 2)
  {
    v2 = *(_BYTE *)(result + 40) & 1 | ((_BYTE)a2 << 6);
    *(_QWORD *)(result + 16) &= 1uLL;
    *(_BYTE *)(result + 40) = v2;
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_BYTE *)(result + 40) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformanceTestCase.TestType()
{
  return &type metadata for PerformanceTestCase.TestType;
}

uint64_t sub_2A8ABC()
{
  return sub_89A0(&qword_3E0610, type metadata accessor for UpNextAffinityEpisodeHero, (uint64_t)&unk_305650);
}

uint64_t type metadata accessor for UpNextAffinityEpisodeHero(uint64_t a1)
{
  uint64_t result;

  result = qword_3E06F8;
  if (!qword_3E06F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UpNextAffinityEpisodeHero);
  return result;
}

void sub_2A8B24(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v25[9];
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8AB8);
  v5 = __chkstk_darwin(v4);
  v7 = (double *)&v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v25[0] = 0;
  State.init(wrappedValue:)(v25, &type metadata for Bool, v5);
  v8 = v26;
  *(_BYTE *)(a2 + 40) = v25[1];
  *(_QWORD *)(a2 + 48) = v8;
  v9 = (_QWORD *)(a2 + *(int *)(type metadata accessor for UpNextAffinityEpisodeHero(0) + 32));
  *v9 = swift_getKeyPath(&unk_3057A8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  *(_QWORD *)a2 = a1;
  v12 = type metadata accessor for LibraryEpisodeLockup(0, v11);
  if (swift_dynamicCastClass(a1, v12))
  {
    v13 = swift_retain(a1);
    LegacyEpisodeLockup.listenNowReason.getter(v13);
    v14 = type metadata accessor for EpisodeListenNowReason(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v14) == 1)
    {
      swift_release(a1);
      sub_D1D4((uint64_t)v7, &qword_3D8AB8);
    }
    else
    {
      if ((*(unsigned int (**)(double *, uint64_t))(v15 + 88))(v7, v14) == enum case for EpisodeListenNowReason.prototypedUpNextScore(_:))
      {
        v16 = (*(uint64_t (**)(double *, uint64_t))(v15 + 96))(v7, v14);
        v17 = *v7;
        v18 = LibraryEpisodeLockup.podcastUuid.getter(v16);
        *(_QWORD *)(a2 + 8) = v18;
        *(_QWORD *)(a2 + 16) = v19;
        v20 = Double.description.getter(v18, round(v17 * 100.0) / 100.0);
        v22 = v21;
        swift_release(a1);
        *(_QWORD *)(a2 + 24) = v20;
        *(_QWORD *)(a2 + 32) = v22;
        return;
      }
      v23 = swift_release(a1);
      (*(void (**)(double *, uint64_t, __n128))(v15 + 8))(v7, v14, v23);
    }
  }
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 8) = 0u;
}

uint64_t sub_2A8D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  unsigned int v14;
  uint64_t v16;

  v0 = type metadata accessor for Color.RGBColorSpace(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ColorScheme(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - v9;
  type metadata accessor for UpNextAffinityEpisodeHero(0);
  sub_156A8(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ColorScheme.dark(_:), v4);
  v11 = static ColorScheme.== infix(_:_:)(v10, v7);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  v12(v10, v4);
  if ((v11 & 1) != 0)
    v13 = 134744319;
  else
    v13 = 4126537215;
  v14 = HexColor.init(integerLiteral:)(v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Color.RGBColorSpace.sRGB(_:), v0);
  return Color.init(_:red:green:blue:opacity:)(v3, (double)v14 / 255.0, (double)BYTE1(v14) / 255.0, (double)BYTE2(v14) / 255.0, (double)HIBYTE(v14) / 255.0);
}

void sub_2A8EAC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AffinityEpisodeHero;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  char v58;
  uint64_t v59;
  _QWORD v60[2];
  unsigned __int8 v61;

  AffinityEpisodeHero = type metadata accessor for UpNextAffinityEpisodeHero(0);
  v5 = *(_QWORD *)(AffinityEpisodeHero - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(AffinityEpisodeHero);
  v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0628);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  __chkstk_darwin(v8);
  v53 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0630);
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  __chkstk_darwin(v10);
  v50 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0638);
  __chkstk_darwin(v12);
  v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v48 - v16;
  v18 = *(_QWORD *)a1;
  KeyPath = swift_getKeyPath(&unk_305750);
  v57 = swift_getKeyPath(&unk_305780);
  v19 = *(_QWORD *)(a1 + 16);
  if (v19 && (v20 = *(_QWORD *)(a1 + 32)) != 0)
  {
    v49 = *(_QWORD *)(a1 + 8);
    v48[0] = *(_QWORD *)(a1 + 24);
    sub_2A9654(a1, (uint64_t)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    v21 = *(unsigned __int8 *)(v5 + 80);
    v22 = (v21 + 16) & ~v21;
    v23 = swift_allocObject(&unk_390820, v22 + v6, v21 | 7);
    v24 = sub_2A9760((uint64_t)v7, v23 + v22);
    v48[1] = v48;
    __chkstk_darwin(v24);
    v45 = v48[0];
    v46 = v20;
    v47 = a1;
    swift_retain(v18);
    swift_bridgeObjectRetain(v19);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0648);
    v26 = sub_2A97DC();
    Button.init(action:label:)(sub_2A97A4, v23, sub_2A97D0, &v48[-6], v25, v26);
    v27 = *(_QWORD *)(a1 + 48);
    v58 = *(_BYTE *)(a1 + 40);
    v59 = v27;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
    State.projectedValue.getter(v60, v28);
    v30 = v60[0];
    v29 = v60[1];
    v31 = v61;
    v32 = swift_allocObject(&unk_390848, 32, 7);
    *(_QWORD *)(v32 + 16) = v49;
    *(_QWORD *)(v32 + 24) = v19;
    v33 = sub_10EDC(&qword_3E0688, &qword_3E0628, (uint64_t)&protocol conformance descriptor for Button<A>);
    v34 = sub_2A99E0();
    v46 = v33;
    v35 = v50;
    v36 = v31;
    v38 = v52;
    v37 = v53;
    View.sheet<A>(isPresented:onDismiss:content:)(v30, v29, v36, 0, 0, sub_2A99D8, v32, v52, &type metadata for PrototypeUpNextSingleShowControllerView, v46, v34);
    swift_release(v29);
    swift_release(v32);
    v39 = swift_release(v30);
    (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v37, v38, v39);
    v41 = v54;
    v40 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v17, v35, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v17, 0, 1, v40);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v17, 1, 1, v55);
    swift_retain(v18);
  }
  sub_2A960C((uint64_t)v17, (uint64_t)v14);
  v43 = KeyPath;
  v42 = (void *)v57;
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v43;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v42;
  *(_BYTE *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0640);
  sub_2A960C((uint64_t)v14, a2 + *(int *)(v44 + 48));
  swift_retain(v18);
  swift_retain(v43);
  sub_15E90(v42, 0);
  sub_D1D4((uint64_t)v17, &qword_3E0638);
  sub_D1D4((uint64_t)v14, &qword_3E0638);
  swift_release(v43);
  swift_release(v18);
  sub_15E9C(v42, 0);
}

uint64_t sub_2A92D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[9];
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 48);
  v4[1] = *(_BYTE *)(a1 + 40);
  v5 = v1;
  v4[0] = 1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  return State.wrappedValue.setter(v4, v2);
}

void sub_2A932C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v30 = a1;
  v31 = a2;
  v5 = sub_D254();
  swift_bridgeObjectRetain(a2);
  v6 = Text.init<A>(_:)(&v30, &type metadata for String, v5);
  v28 = v7;
  v29 = v6;
  v26 = v8;
  v27 = v9;
  v11 = static Alignment.center.getter(v6, v10);
  _FrameLayout.init(width:height:alignment:)(&v30, 0x4046800000000000, 0, 0x4046800000000000, 0, v11, v12);
  v13 = v30;
  v14 = v31;
  v15 = v32;
  LOBYTE(v5) = v33;
  v17 = v34;
  v16 = v35;
  v18 = sub_2A8D0C();
  v19 = static Edge.Set.all.getter(v18);
  v20 = v19;
  v21 = static Edge.Set.all.getter(v19);
  v22 = EdgeInsets.init(_all:)(6.0);
  v36 = 0;
  *(_QWORD *)a3 = v29;
  *(_QWORD *)(a3 + 8) = v28;
  *(_BYTE *)(a3 + 16) = v26 & 1;
  *(_QWORD *)(a3 + 24) = v27;
  *(_QWORD *)(a3 + 32) = v13;
  *(_BYTE *)(a3 + 40) = v14;
  *(_QWORD *)(a3 + 48) = v15;
  *(_BYTE *)(a3 + 56) = v5;
  *(_QWORD *)(a3 + 64) = v17;
  *(_QWORD *)(a3 + 72) = v16;
  *(_QWORD *)(a3 + 80) = v18;
  *(_BYTE *)(a3 + 88) = v20;
  *(_WORD *)(a3 + 89) = 256;
  *(_BYTE *)(a3 + 96) = v21;
  *(double *)(a3 + 104) = v22;
  *(_QWORD *)(a3 + 112) = v23;
  *(_QWORD *)(a3 + 120) = v24;
  *(_QWORD *)(a3 + 128) = v25;
  *(_BYTE *)(a3 + 136) = v36;
}

uint64_t sub_2A9470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  swift_bridgeObjectRetain(a2);
  sub_FFF0(a1, a2);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  a3[3] = (uint64_t)&type metadata for PrototypeUpNextSingleShowController;
  a3[4] = (uint64_t)&off_37B1F8;
  result = swift_allocObject(&unk_390870, 48, 7);
  *a3 = result;
  *(_QWORD *)(result + 16) = v7;
  *(_QWORD *)(result + 24) = v9;
  *(_BYTE *)(result + 32) = v11 & 1;
  *(_QWORD *)(result + 40) = v13;
  return result;
}

void sub_2A9504(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *a2 = static Alignment.topTrailing.getter(a1);
  a2[1] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0620);
  sub_2A8EAC(v2, (uint64_t)a2 + *(int *)(v5 + 44));
}

uint64_t sub_2A9544@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;

  sub_2A8B24(*a2, a3);
  v4 = type metadata accessor for ModernShelf.ItemPresentation(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t sub_2A9580(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_89A0(&qword_3E0698, type metadata accessor for UpNextAffinityEpisodeHero, (uint64_t)&unk_3056B0);
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

uint64_t sub_2A95C0()
{
  return sub_89A0(&qword_3E0618, type metadata accessor for UpNextAffinityEpisodeHero, (uint64_t)&unk_305700);
}

uint64_t sub_2A95EC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_3349A4, 1);
}

uint64_t sub_2A960C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2A9654(uint64_t a1, uint64_t a2)
{
  uint64_t AffinityEpisodeHero;

  AffinityEpisodeHero = type metadata accessor for UpNextAffinityEpisodeHero(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AffinityEpisodeHero - 8) + 16))(a2, a1, AffinityEpisodeHero);
  return a2;
}

uint64_t sub_2A9698()
{
  uint64_t v0;
  uint64_t AffinityEpisodeHero;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  AffinityEpisodeHero = type metadata accessor for UpNextAffinityEpisodeHero(0);
  v2 = *(_QWORD *)(AffinityEpisodeHero - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(AffinityEpisodeHero + 32));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_2A9760(uint64_t a1, uint64_t a2)
{
  uint64_t AffinityEpisodeHero;

  AffinityEpisodeHero = type metadata accessor for UpNextAffinityEpisodeHero(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AffinityEpisodeHero - 8) + 32))(a2, a1, AffinityEpisodeHero);
  return a2;
}

uint64_t sub_2A97A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UpNextAffinityEpisodeHero(0) - 8) + 80);
  return sub_2A92D8(v0 + ((v1 + 16) & ~v1));
}

void sub_2A97D0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2A932C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_2A97DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0650;
  if (!qword_3E0650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0648);
    sub_2A9848();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0650);
  }
  return result;
}

unint64_t sub_2A9848()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0658;
  if (!qword_3E0658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0660);
    sub_2A98CC();
    sub_10EDC(&qword_3DE8C8, &qword_3DE8D0, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0658);
  }
  return result;
}

unint64_t sub_2A98CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0668;
  if (!qword_3E0668)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0670);
    sub_2A9950();
    sub_10EDC(&qword_3DD4C0, &qword_3DD4C8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0668);
  }
  return result;
}

unint64_t sub_2A9950()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0678;
  if (!qword_3E0678)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0680);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0678);
  }
  return result;
}

uint64_t sub_2A99B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2A99D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2A9470(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_2A99E0()
{
  unint64_t result;

  result = qword_3E0690;
  if (!qword_3E0690)
  {
    result = swift_getWitnessTable(&unk_2EFC18, &type metadata for PrototypeUpNextSingleShowControllerView);
    atomic_store(result, (unint64_t *)&qword_3E0690);
  }
  return result;
}

uint64_t sub_2A9A24()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_2A9A58(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v5);
  }
  else
  {
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    v7 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v7;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v8 = a2[6];
    v9 = *(int *)(a3 + 32);
    v10 = (uint64_t *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 48) = v8;
    swift_retain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_retain(v8);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = v10;
      v15 = v12;
      v16 = 1;
    }
    else
    {
      v17 = *v11;
      *v10 = *v11;
      swift_retain(v17);
      v14 = v10;
      v15 = v12;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return a1;
}

double sub_2A9B6C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*a1);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[4]);
  swift_release(a1[6]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 32));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_2A9BFC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = a2[2];
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = a2[4];
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  v9 = a2[6];
  v10 = *(int *)(a3 + 32);
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  *(_QWORD *)(a1 + 48) = v9;
  swift_retain(v4);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_retain(v9);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    v16 = *v12;
    *v11 = *v12;
    swift_retain(v16);
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  return a1;
}

uint64_t *sub_2A9CE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  a1[1] = a2[1];
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[3] = a2[3];
  v10 = a2[4];
  v11 = a1[4];
  a1[4] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  v12 = a1[6];
  v13 = a2[6];
  a1[6] = v13;
  swift_retain(v13);
  swift_release(v12);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 32);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_D1D4((uint64_t)a1 + v14, &qword_3D0DE0);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      v20 = *v16;
      *v15 = *v16;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
  }
  return a1;
}

uint64_t sub_2A9E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_2A9ED8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a2[2];
  v8 = a1[2];
  a1[1] = a2[1];
  a1[2] = v7;
  swift_bridgeObjectRelease(v8);
  v9 = a2[4];
  v10 = a1[4];
  a1[3] = a2[3];
  a1[4] = v9;
  swift_bridgeObjectRelease(v10);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  v11 = a1[6];
  a1[6] = a2[6];
  swift_release(v11);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 32);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_D1D4((uint64_t)a1 + v12, &qword_3D0DE0);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2A9FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2A9FEC);
}

uint64_t sub_2A9FEC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFAB0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t sub_2AA06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2AA078);
}

char *sub_2AA078(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DFAB0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

void sub_2AA0F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_305820;
  v4[2] = &unk_305820;
  v4[3] = &unk_305820;
  sub_291AB4(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_2AA174()
{
  return sub_10EDC(&qword_3E0740, &qword_3E0748, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

int64x2_t sub_2AA1A0()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4057800000000000uLL);
  xmmword_3E0750 = (__int128)result;
  return result;
}

void sub_2AA1BC()
{
  qword_3E0760 = 0x4024000000000000;
}

void sub_2AA1CC()
{
  qword_3E0768 = 0x402C000000000000;
}

void sub_2AA1DC()
{
  qword_3E0770 = 0x4024000000000000;
}

uint64_t sub_2AA1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for PlayControlsIconsSet(0);
  __swift_allocate_value_buffer(v0, qword_3E0778);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3E0778);
  if (qword_3CFDE0 != -1)
    swift_once(&qword_3CFDE0, sub_2B3230);
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_3FD8A0);
  return sub_113AC0(v2, v1);
}

id sub_2AA26C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell____lazy_storage___badgesGradient;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell____lazy_storage___badgesGradient);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell____lazy_storage___badgesGradient);
  }
  else
  {
    v4 = type metadata accessor for GradientView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    objc_msgSend(v5, "setAlpha:", 0.0);
    objc_msgSend(v5, "setHidden:", 1);
    objc_msgSend(v5, "setUserInteractionEnabled:", 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_2AA31C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesPresenter);
  if (v2)
  {
    v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_isHovering;
    *(_BYTE *)(v2 + 56) = *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_isHovering);
    swift_retain(v2);
    sub_2B33B8();
    swift_release(v2);
    v4 = *(_QWORD *)(v1
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressPresenter);
    if (v4)
    {
      *(_BYTE *)(v4 + 56) = *(_BYTE *)(v1 + v3);
      swift_retain(v4);
      sub_2B33B8();
      swift_release(v4);
      sub_2AA3AC(*(_BYTE *)(v1 + v3));
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_2AA3AC(char a1)
{
  char *v1;
  char *v2;
  double v4;
  id v5;
  char *v6;
  id result;
  char v8;
  double Width;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  CGRect v34;
  CGRect v35;

  v2 = v1;
  v4 = 0.0;
  if ((a1 & 1) != 0)
  {
    v5 = sub_2AA26C();
    v6 = (char *)objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection");
    result = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesView];
    if (!result)
      goto LABEL_9;
    v8 = v6 == (_BYTE *)&dword_0 + 1;
    objc_msgSend(result, "bounds");
    Width = CGRectGetWidth(v34);
    v10 = sub_2AA26C();
    objc_msgSend(v10, "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v35.origin.x = v12;
    v35.origin.y = v14;
    v35.size.width = v16;
    v35.size.height = v18;
    v19 = CGRectGetWidth(v35);
    sub_2ACADC(v8, (uint64_t)&v29, Width, v19);
    v24 = v29;
    v25 = v30;
    v26 = v31;
    v27 = v32;
    v28 = v33;
    sub_ECA74(&v24);

    v4 = 1.0;
  }
  v20 = sub_2AA26C();
  objc_msgSend(v20, "setAlpha:", v4);

  v21 = sub_2AA26C();
  v22 = a1 ^ 1;
  objc_msgSend(v21, "setHidden:", v22 & 1);

  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesView;
  result = *(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesView];
  if (result)
  {
    objc_msgSend(result, "setAlpha:", v4);
    result = *(id *)&v2[v23];
    if (result)
      return objc_msgSend(result, "setHidden:", v22 & 1);
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

id sub_2AA560(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  objc_super v19;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_episodeInfoView] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_style] = 0;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_ordinalLabel;
  v12 = objc_allocWithZone((Class)UILabel);
  v13 = v5;
  v14 = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v16 = (void *)static UIFont.title3Emph.getter(v15);
  objc_msgSend(v14, "setFont:", v16);

  objc_msgSend(v14, "setHidden:", 1);
  *(_QWORD *)&v5[v11] = v14;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToArtwork] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToOrdinal] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressPresenter] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressView] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesPresenter] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesView] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell____lazy_storage___badgesGradient] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_internalArtworkContainer] = 0;
  v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_isHovering] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_objectGraph] = 0;

  v19.receiver = v13;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  sub_B1144();

  return v17;
}

void sub_2AA778(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  _BYTE *v16;
  char v17;
  _BYTE *v18;
  void *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  char *v24;
  void *v25;
  __int128 v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double leading;
  double bottom;
  double trailing;
  objc_class *v52;
  uint64_t v53;
  id v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  void *v65;
  Swift::Int v66;
  id v67;
  id v68;
  uint64_t v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  Swift::String v75;
  Swift::String v76;
  uint64_t v77;
  NSString v78;
  void *v79;
  id v80;
  Swift::String v81;
  Swift::String v82;
  uint64_t v83;
  NSString v84;
  id v85;
  void *v86;
  id v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  id v101;
  void *v102;
  uint64_t v103;
  id *v104;
  double v105;
  id v106;
  id v107;
  id v108;
  id v109;
  void *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  double v116;
  double v117;
  void *v118;
  id v119;
  void *v120;
  id v121;
  id v122;
  void *v123;
  void *v124;
  id v125;
  id v126;
  id v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  id v132;
  id v133;
  id v134;
  id v135;
  void *v136;
  char *v137;
  id v138;
  id v139;
  id v140;
  id v141;
  void *v142;
  id v143;
  id v144;
  id v145;
  id v146;
  void *v147;
  id v148;
  uint64_t v149;
  id v150;
  void *v151;
  id v152;
  id v153;
  id v154;
  void *v155;
  id v156;
  id v157;
  void *v158;
  id v159;
  id v160;
  void *v161;
  id v162;
  void *v163;
  id v164;
  id v165;
  void *v166;
  id v167;
  id v168;
  id v169;
  id v170;
  void *v171;
  id v172;
  void *v173;
  id v174;
  id v175;
  void *v176;
  id v177;
  void *v178;
  id v179;
  id v180;
  void *v181;
  id v182;
  id v183;
  id v184;
  id v185;
  void *v186;
  id v187;
  id v188;
  id v189;
  id v190;
  void *v191;
  id v192;
  id v193;
  id v194;
  id v195;
  void *v196;
  void *v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  id v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  id v210;
  id v211;
  id v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  id v221;
  uint64_t v222;
  uint64_t v223;
  Class isa;
  __int128 v225;
  __int128 v226;
  uint64_t v227;
  id v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  int v232;
  int v233;
  _OWORD v234[2];
  uint64_t v235;
  uint64_t v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  __int128 v241;
  __int16 v242;

  v2 = v1;
  v4 = type metadata accessor for PlayControlsIconsSet(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v225 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v7);
  v9 = (char *)&v225 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesView;
  if (!*(_QWORD *)((char *)v2
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesView)
    || !*(_QWORD *)((char *)v2
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressView)
    || !*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_episodeInfoView)
    || !*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback)
    || !*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_internalArtworkContainer))
  {
    type metadata accessor for LegacyArtworkWithPlaybackStatusView(0);
    v11 = type metadata accessor for ImageBlur(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
    swift_retain(a1);
    v13 = sub_224850(v12, (uint64_t)v9);
    swift_release(a1);
    v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback;
    v15 = *(void **)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback);
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback) = v13;

    v16 = *(_BYTE **)((char *)v2 + v14);
    if (v16)
    {
      v17 = v16[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
      v16[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
      LOBYTE(v234[0]) = v17;
      v18 = v16;
      sub_EB33C((unsigned __int8 *)v234);

      v19 = *(void **)((char *)v2 + v14);
      if (v19)
      {
        v20 = qword_3CFA90;
        v21 = v19;
        if (v20 != -1)
          swift_once(&qword_3CFA90, sub_1D6620);
        v22 = (void *)qword_3FCF18;
        v23 = qword_3FCF30;
        v24 = &v21[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v25 = *(void **)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v26 = unk_3FCF20;
        *(_QWORD *)v24 = qword_3FCF18;
        *(_OWORD *)(v24 + 8) = v26;
        *((_QWORD *)v24 + 3) = v23;
        v27 = v22;

        sub_E9020();
        v28 = *(void **)((char *)v2 + v14);
        if (v28)
        {
          v227 = v4;
          v228 = v6;
          v230 = v10;
          v29 = qword_3CFB40;
          v229 = v28;
          if (v29 != -1)
            swift_once(&qword_3CFB40, sub_20B358);
          v30 = qword_3FD248;
          v31 = unk_3FD250;
          v32 = xmmword_3FD258;
          v34 = qword_3FD268;
          v33 = unk_3FD270;
          v35 = qword_3FD278;
          v226 = xmmword_3FD228;
          v234[0] = xmmword_3FD228;
          v234[1] = unk_3FD238;
          v235 = qword_3FD248;
          v236 = unk_3FD250;
          v237 = xmmword_3FD258;
          v238 = qword_3FD268;
          v239 = unk_3FD270;
          v240 = qword_3FD278;
          v225 = unk_3FD280;
          v241 = unk_3FD280;
          v242 = word_3FD290 | (HIBYTE(word_3FD290) << 8);
          v36 = objc_allocWithZone((Class)type metadata accessor for ArtworkContainer(0));
          v37 = (id)v226;
          sub_B7A24(v30, v31, v32, *((uint64_t *)&v32 + 1), v34, v33, v35, (void *)v225);
          v38 = sub_2633EC(2, v229, (uint64_t *)v234);
          v39 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_internalArtworkContainer;
          v40 = *(void **)((char *)v2
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_internalArtworkContainer);
          *(_QWORD *)((char *)v2
                    + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_internalArtworkContainer) = v38;

          LOBYTE(v234[0]) = 3;
          if (qword_3CFD60 != -1)
            swift_once(&qword_3CFD60, sub_2AA1EC);
          v41 = __swift_project_value_buffer(v227, (uint64_t)qword_3E0778);
          v42 = (uint64_t)v228;
          sub_113AC0(v41, (uint64_t)v228);
          v43 = type metadata accessor for PlayControlsPresenter(0);
          swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
          swift_retain(a1);
          v44 = sub_2B4D24((unsigned __int8 *)v234, v42, a1);
          swift_release(a1);
          v45 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesPresenter;
          v46 = *(_QWORD *)((char *)v2
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesPresenter);
          *(_QWORD *)((char *)v2
                    + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesPresenter) = v44;
          swift_release(v46);
          v47 = *(_QWORD *)((char *)v2 + v45);
          v48 = v230;
          if (v47)
          {
            leading = NSDirectionalEdgeInsetsZero.leading;
            bottom = NSDirectionalEdgeInsetsZero.bottom;
            trailing = NSDirectionalEdgeInsetsZero.trailing;
            v52 = (objc_class *)type metadata accessor for PlayControlsStackView();
            objc_allocWithZone(v52);
            swift_retain(v47);
            v54 = sub_10B650(v53, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);
            v55 = *(void **)((char *)v2 + v48);
            *(_QWORD *)((char *)v2 + v48) = v54;

            v56 = *(void **)((char *)v2 + v48);
            if (v56)
            {
              objc_msgSend(v56, "setAlpha:", 0.0);
              v57 = *(void **)((char *)v2 + v48);
              if (v57)
              {
                objc_msgSend(v57, "setHidden:", 1);
                LOBYTE(v234[0]) = 2;
                sub_113AC0(v41, v42);
                swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
                swift_retain(a1);
                v58 = sub_2B4D24((unsigned __int8 *)v234, v42, a1);
                swift_release(a1);
                v59 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressPresenter;
                v60 = *(_QWORD *)((char *)v2
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressPresenter);
                *(_QWORD *)((char *)v2
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressPresenter) = v58;
                swift_release(v60);
                v61 = *(_QWORD *)((char *)v2 + v59);
                if (v61)
                {
                  objc_allocWithZone(v52);
                  swift_retain(v61);
                  v63 = sub_10B650(v62, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);
                  v64 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressView;
                  v65 = *(void **)((char *)v2
                                 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressView);
                  *(_QWORD *)((char *)v2
                            + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressView) = v63;

                  LOBYTE(v234[0]) = 6;
                  v66 = sub_F3870((uint64_t)&off_379CE0);
                  v67 = objc_allocWithZone((Class)type metadata accessor for EpisodeInfoView());
                  v68 = sub_1B80D8((char *)v234, v66);
                  v69 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_episodeInfoView;
                  v70 = *(void **)((char *)v2
                                 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_episodeInfoView);
                  *(_QWORD *)((char *)v2
                            + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_episodeInfoView) = v68;

                  v71 = objc_msgSend(v2, "contentView");
                  objc_msgSend(v71, "setEdgesPreservingSuperviewLayoutMargins:", 0);

                  v72 = objc_msgSend(v2, "contentView");
                  objc_msgSend(v72, "setDirectionalLayoutMargins:", NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

                  v73 = *(void **)((char *)v2 + v48);
                  if (v73)
                  {
                    *(_QWORD *)&v234[0] = 0;
                    *((_QWORD *)&v234[0] + 1) = 0xE000000000000000;
                    v74 = v73;
                    v75._countAndFlagsBits = 0xD00000000000001ELL;
                    v75._object = (void *)0x80000000003078F0;
                    String.append(_:)(v75);
                    v76._countAndFlagsBits = 46;
                    v76._object = (void *)0xE100000000000000;
                    String.append(_:)(v76);
                    LOBYTE(v231) = 1;
                    _print_unlocked<A, B>(_:_:)(&v231, v234, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
                    v77 = *((_QWORD *)&v234[0] + 1);
                    v78 = String._bridgeToObjectiveC()();
                    objc_msgSend(v74, "setAccessibilityIdentifier:", v78, swift_bridgeObjectRelease(v77).n128_f64[0]);

                    v79 = *(void **)((char *)v2 + v69);
                    if (v79)
                    {
                      *(_QWORD *)&v234[0] = 0;
                      *((_QWORD *)&v234[0] + 1) = 0xE000000000000000;
                      v80 = v79;
                      v81._countAndFlagsBits = 0xD00000000000001ELL;
                      v81._object = (void *)0x80000000003078F0;
                      String.append(_:)(v81);
                      v82._countAndFlagsBits = 46;
                      v82._object = (void *)0xE100000000000000;
                      String.append(_:)(v82);
                      LOBYTE(v231) = 2;
                      _print_unlocked<A, B>(_:_:)(&v231, v234, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
                      v83 = *((_QWORD *)&v234[0] + 1);
                      v84 = String._bridgeToObjectiveC()();
                      objc_msgSend(v80, "setAccessibilityIdentifier:", v84, swift_bridgeObjectRelease(v83).n128_f64[0]);

                      v85 = objc_msgSend(v2, "contentView");
                      if (*(_QWORD *)((char *)v2 + v69))
                      {
                        v86 = v85;
                        objc_msgSend(v85, "addSubview:");

                        v87 = objc_msgSend(v2, "contentView");
                        v88 = v230;
                        if (*(_QWORD *)&v64[(_QWORD)v2])
                        {
                          v89 = v87;
                          objc_msgSend(v87, "addSubview:");

                          v90 = objc_msgSend(v2, "contentView");
                          v91 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_ordinalLabel;
                          objc_msgSend(v90, "addSubview:", *(_QWORD *)((char *)v2+ OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_ordinalLabel));

                          v92 = objc_msgSend(v2, "contentView");
                          v93 = sub_2AA26C();
                          objc_msgSend(v92, "addSubview:", v93);

                          v94 = objc_msgSend(v2, "contentView");
                          if (*(_QWORD *)((char *)v2 + v88))
                          {
                            v95 = v94;
                            objc_msgSend(v94, "addSubview:");

                            v96 = objc_msgSend(v2, "contentView");
                            if (*(_QWORD *)((char *)v2 + v39))
                            {
                              v97 = v96;
                              objc_msgSend(v96, "addSubview:");

                              v98 = *(void **)((char *)v2 + v39);
                              if (v98)
                              {
                                objc_msgSend(v98, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                v99 = *(void **)((char *)v2 + v69);
                                if (v99)
                                {
                                  objc_msgSend(v99, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                  v100 = *(void **)((char *)v2 + v88);
                                  if (v100)
                                  {
                                    objc_msgSend(v100, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                    v101 = sub_2AA26C();
                                    objc_msgSend(v101, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

                                    v102 = *(void **)&v64[(_QWORD)v2];
                                    if (v102)
                                    {
                                      objc_msgSend(v102, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                      objc_msgSend(*(id *)((char *)v2 + v91), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                      v103 = *(_QWORD *)((char *)v2 + v69);
                                      if (v103)
                                      {
                                        v104 = (id *)(v103
                                                    + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel);
                                        *(_QWORD *)&v105 = swift_beginAccess(v103+ OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel, v234, 0, 0).n128_u64[0];
                                        if (*v104
                                          && (v106 = objc_msgSend(*v104, "firstBaselineAnchor", v105)) != 0)
                                        {
                                          v107 = v106;
                                          v108 = objc_msgSend(*(id *)((char *)v2 + v91), "firstBaselineAnchor");
                                          v109 = objc_msgSend(v108, "constraintEqualToAnchor:", v107);
                                        }
                                        else
                                        {
                                          v108 = objc_msgSend(*(id *)((char *)v2 + v91), "topAnchor", v105);
                                          v110 = *(void **)((char *)v2 + v69);
                                          if (!v110)
                                          {
LABEL_103:
                                            __break(1u);
                                            return;
                                          }
                                          v107 = objc_msgSend(v110, "topAnchor");
                                          v109 = objc_msgSend(v108, "constraintEqualToAnchor:", v107);
                                        }
                                        v228 = v109;

                                        v111 = *(void **)((char *)v2 + v91);
                                        type metadata accessor for UILayoutPriority(0);
                                        v113 = v112;
                                        v232 = 1065353216;
                                        v233 = 1132068864;
                                        v114 = sub_239FC((unint64_t *)&qword_3DAE38, 255, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
                                        v115 = v111;
                                        static _UIKitNumericRawRepresentable.+ infix(_:_:)(&v231, &v233, &v232, v113, v114);
                                        LODWORD(v116) = v231;
                                        objc_msgSend(v115, "setContentHuggingPriority:forAxis:", 0, v116);

                                        LODWORD(v117) = 1148846080;
                                        objc_msgSend(*(id *)((char *)v2 + v91), "setContentCompressionResistancePriority:forAxis:", 0, v117);
                                        v118 = *(void **)((char *)v2 + v69);
                                        if (v118)
                                        {
                                          v119 = objc_msgSend(v118, "leadingAnchor");
                                          v120 = *(void **)((char *)v2 + v39);
                                          if (v120)
                                          {
                                            v229 = v64;
                                            v121 = objc_msgSend(v120, "trailingAnchor");
                                            if (qword_3CFD50 != -1)
                                              swift_once(&qword_3CFD50, sub_2AA1CC);
                                            v122 = objc_msgSend(v119, "constraintEqualToAnchor:constant:", v121, *(double *)&qword_3E0768);

                                            v123 = *(void **)((char *)v2
                                                            + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToArtwork);
                                            *(_QWORD *)((char *)v2
                                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToArtwork) = v122;

                                            v124 = *(void **)((char *)v2 + v69);
                                            if (v124)
                                            {
                                              v125 = objc_msgSend(v124, "leadingAnchor");
                                              v126 = objc_msgSend(*(id *)((char *)v2 + v91), "trailingAnchor");
                                              v127 = objc_msgSend(v125, "constraintEqualToAnchor:constant:", v126, *(double *)&qword_3E0768);

                                              v128 = *(void **)((char *)v2
                                                              + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToOrdinal);
                                              *(_QWORD *)((char *)v2
                                                        + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToOrdinal) = v127;

                                              v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
                                              v130 = swift_allocObject(v129, 184, 7);
                                              *(_OWORD *)(v130 + 16) = xmmword_305840;
                                              v131 = *(void **)((char *)v2 + v39);
                                              if (v131)
                                              {
                                                v132 = objc_msgSend(v131, "leadingAnchor");
                                                v133 = objc_msgSend(v2, "contentView");
                                                v134 = objc_msgSend(v133, "leadingAnchor");

                                                v135 = objc_msgSend(v132, "constraintEqualToAnchor:", v134);
                                                *(_QWORD *)(v130 + 32) = v135;
                                                v136 = *(void **)((char *)v2 + v39);
                                                v137 = v229;
                                                if (v136)
                                                {
                                                  v138 = objc_msgSend(v136, "topAnchor");
                                                  v139 = objc_msgSend(v2, "contentView");
                                                  v140 = objc_msgSend(v139, "topAnchor");

                                                  if (qword_3CFD48 != -1)
                                                    swift_once(&qword_3CFD48, sub_2AA1BC);
                                                  v141 = objc_msgSend(v138, "constraintEqualToAnchor:constant:", v140, *(double *)&qword_3E0760);

                                                  *(_QWORD *)(v130 + 40) = v141;
                                                  v142 = *(void **)((char *)v2 + v39);
                                                  if (v142)
                                                  {
                                                    v143 = objc_msgSend(v142, "bottomAnchor");
                                                    v144 = objc_msgSend(v2, "contentView");
                                                    v145 = objc_msgSend(v144, "bottomAnchor");

                                                    v146 = objc_msgSend(v143, "constraintGreaterThanOrEqualToAnchor:constant:", v145, -*(double *)&qword_3E0760);
                                                    *(_QWORD *)(v130 + 48) = v146;
                                                    v147 = *(void **)((char *)v2 + v39);
                                                    if (v147)
                                                    {
                                                      v148 = objc_msgSend(v147, "heightAnchor");
                                                      v149 = v230;
                                                      if (qword_3CFD40 != -1)
                                                        swift_once(&qword_3CFD40, sub_2AA1A0);
                                                      v150 = objc_msgSend(v148, "constraintEqualToConstant:", *((double *)&xmmword_3E0750 + 1));

                                                      *(_QWORD *)(v130 + 56) = v150;
                                                      v151 = *(void **)((char *)v2 + v39);
                                                      if (v151)
                                                      {
                                                        v152 = objc_msgSend(v151, "widthAnchor");
                                                        v153 = objc_msgSend(v152, "constraintEqualToConstant:", *(double *)&xmmword_3E0750);

                                                        v154 = v228;
                                                        *(_QWORD *)(v130 + 64) = v153;
                                                        *(_QWORD *)(v130 + 72) = v154;
                                                        v155 = *(void **)((char *)v2 + v91);
                                                        v156 = v154;
                                                        v157 = objc_msgSend(v155, "leadingAnchor");
                                                        v158 = *(void **)((char *)v2 + v39);
                                                        if (v158)
                                                        {
                                                          v228 = v156;
                                                          v159 = objc_msgSend(v158, "trailingAnchor");
                                                          v160 = objc_msgSend(v157, "constraintEqualToAnchor:constant:", v159, *(double *)&qword_3E0768);

                                                          *(_QWORD *)(v130 + 80) = v160;
                                                          v161 = *(void **)((char *)v2 + v69);
                                                          if (v161)
                                                          {
                                                            v162 = objc_msgSend(v161, "topAnchor");
                                                            v163 = *(void **)((char *)v2 + v39);
                                                            if (v163)
                                                            {
                                                              v164 = objc_msgSend(v163, "topAnchor");
                                                              v165 = objc_msgSend(v162, "constraintEqualToAnchor:", v164);

                                                              *(_QWORD *)(v130 + 88) = v165;
                                                              v166 = *(void **)((char *)v2 + v69);
                                                              if (v166)
                                                              {
                                                                v167 = objc_msgSend(v166, "trailingAnchor");
                                                                v168 = objc_msgSend(v2, "contentView");
                                                                v169 = objc_msgSend(v168, "trailingAnchor");

                                                                v170 = objc_msgSend(v167, "constraintEqualToAnchor:", v169);
                                                                *(_QWORD *)(v130 + 96) = v170;
                                                                v171 = *(void **)&v137[(_QWORD)v2];
                                                                if (v171)
                                                                {
                                                                  v172 = objc_msgSend(v171, "topAnchor");
                                                                  v173 = *(void **)((char *)v2 + v69);
                                                                  if (v173)
                                                                  {
                                                                    v174 = objc_msgSend(v173, "bottomAnchor");
                                                                    v175 = objc_msgSend(v172, "constraintGreaterThanOrEqualToAnchor:", v174);

                                                                    *(_QWORD *)(v130 + 104) = v175;
                                                                    v176 = *(void **)&v137[(_QWORD)v2];
                                                                    if (v176)
                                                                    {
                                                                      v177 = objc_msgSend(v176, "leadingAnchor");
                                                                      v178 = *(void **)((char *)v2 + v69);
                                                                      if (v178)
                                                                      {
                                                                        v179 = objc_msgSend(v178, "leadingAnchor");
                                                                        v180 = objc_msgSend(v177, "constraintEqualToAnchor:", v179);

                                                                        *(_QWORD *)(v130 + 112) = v180;
                                                                        v181 = *(void **)&v137[(_QWORD)v2];
                                                                        if (v181)
                                                                        {
                                                                          v182 = objc_msgSend(v181, "trailingAnchor");
                                                                          v183 = objc_msgSend(v2, "contentView");
                                                                          v184 = objc_msgSend(v183, "trailingAnchor");

                                                                          v185 = objc_msgSend(v182, "constraintEqualToAnchor:", v184);
                                                                          *(_QWORD *)(v130 + 120) = v185;
                                                                          v186 = *(void **)&v137[(_QWORD)v2];
                                                                          if (v186)
                                                                          {
                                                                            v187 = objc_msgSend(v186, "bottomAnchor");
                                                                            v188 = objc_msgSend(v2, "contentView");
                                                                            v189 = objc_msgSend(v188, "bottomAnchor");

                                                                            if (qword_3CFD58 != -1)
                                                                              swift_once(&qword_3CFD58, sub_2AA1DC);
                                                                            v190 = objc_msgSend(v187, "constraintGreaterThanOrEqualToAnchor:constant:", v189, -*(double *)&qword_3E0770);

                                                                            *(_QWORD *)(v130 + 128) = v190;
                                                                            v191 = *(void **)((char *)v2 + v149);
                                                                            if (v191)
                                                                            {
                                                                              v192 = objc_msgSend(v191, "centerYAnchor");
                                                                              v193 = objc_msgSend(v2, "contentView");
                                                                              v194 = objc_msgSend(v193, "centerYAnchor");

                                                                              v195 = objc_msgSend(v192, "constraintEqualToAnchor:", v194);
                                                                              *(_QWORD *)(v130 + 136) = v195;
                                                                              v196 = *(void **)((char *)v2 + v149);
                                                                              if (v196)
                                                                              {
                                                                                v197 = (void *)objc_opt_self(NSLayoutConstraint);
                                                                                v198 = objc_msgSend(v196, "trailingAnchor");
                                                                                v199 = objc_msgSend(v2, "contentView");
                                                                                v200 = objc_msgSend(v199, "trailingAnchor");

                                                                                v201 = objc_msgSend(v198, "constraintEqualToAnchor:", v200);
                                                                                *(_QWORD *)(v130 + 144) = v201;
                                                                                v202 = sub_2AA26C();
                                                                                v203 = objc_msgSend(v202, "topAnchor");

                                                                                v204 = objc_msgSend(v2, "contentView");
                                                                                v205 = objc_msgSend(v204, "topAnchor");

                                                                                v206 = objc_msgSend(v203, "constraintEqualToAnchor:", v205);
                                                                                *(_QWORD *)(v130 + 152) = v206;
                                                                                v207 = sub_2AA26C();
                                                                                v208 = objc_msgSend(v207, "leadingAnchor");

                                                                                v209 = objc_msgSend(v2, "contentView");
                                                                                v210 = objc_msgSend(v209, "leadingAnchor");

                                                                                v211 = objc_msgSend(v208, "constraintEqualToAnchor:", v210);
                                                                                *(_QWORD *)(v130 + 160) = v211;
                                                                                v212 = sub_2AA26C();
                                                                                v213 = objc_msgSend(v212, "bottomAnchor");

                                                                                v214 = objc_msgSend(v2, "contentView");
                                                                                v215 = objc_msgSend(v214, "bottomAnchor");

                                                                                v216 = objc_msgSend(v213, "constraintEqualToAnchor:", v215);
                                                                                *(_QWORD *)(v130 + 168) = v216;
                                                                                v217 = sub_2AA26C();
                                                                                v218 = objc_msgSend(v217, "trailingAnchor");

                                                                                v219 = objc_msgSend(v2, "contentView");
                                                                                v220 = objc_msgSend(v219, "trailingAnchor");

                                                                                v221 = objc_msgSend(v218, "constraintEqualToAnchor:", v220);
                                                                                *(_QWORD *)(v130 + 176) = v221;
                                                                                v231 = v130;
                                                                                specialized Array._endMutation()(v222);
                                                                                v223 = v231;
                                                                                sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
                                                                                isa = Array._bridgeToObjectiveC()().super.isa;
                                                                                objc_msgSend(v197, "activateConstraints:", isa, swift_bridgeObjectRelease(v223).n128_f64[0]);

                                                                                return;
                                                                              }
                                                                              goto LABEL_102;
                                                                            }
LABEL_101:
                                                                            __break(1u);
LABEL_102:
                                                                            __break(1u);
                                                                            goto LABEL_103;
                                                                          }
LABEL_100:
                                                                          __break(1u);
                                                                          goto LABEL_101;
                                                                        }
LABEL_99:
                                                                        __break(1u);
                                                                        goto LABEL_100;
                                                                      }
LABEL_98:
                                                                      __break(1u);
                                                                      goto LABEL_99;
                                                                    }
LABEL_97:
                                                                    __break(1u);
                                                                    goto LABEL_98;
                                                                  }
LABEL_96:
                                                                  __break(1u);
                                                                  goto LABEL_97;
                                                                }
LABEL_95:
                                                                __break(1u);
                                                                goto LABEL_96;
                                                              }
LABEL_94:
                                                              __break(1u);
                                                              goto LABEL_95;
                                                            }
LABEL_93:
                                                            __break(1u);
                                                            goto LABEL_94;
                                                          }
LABEL_92:
                                                          __break(1u);
                                                          goto LABEL_93;
                                                        }
LABEL_91:
                                                        __break(1u);
                                                        goto LABEL_92;
                                                      }
LABEL_90:
                                                      __break(1u);
                                                      goto LABEL_91;
                                                    }
LABEL_89:
                                                    __break(1u);
                                                    goto LABEL_90;
                                                  }
LABEL_88:
                                                  __break(1u);
                                                  goto LABEL_89;
                                                }
LABEL_87:
                                                __break(1u);
                                                goto LABEL_88;
                                              }
LABEL_86:
                                              __break(1u);
                                              goto LABEL_87;
                                            }
LABEL_85:
                                            __break(1u);
                                            goto LABEL_86;
                                          }
LABEL_84:
                                          __break(1u);
                                          goto LABEL_85;
                                        }
LABEL_83:
                                        __break(1u);
                                        goto LABEL_84;
                                      }
LABEL_82:
                                      __break(1u);
                                      goto LABEL_83;
                                    }
LABEL_81:
                                    __break(1u);
                                    goto LABEL_82;
                                  }
LABEL_80:
                                  __break(1u);
                                  goto LABEL_81;
                                }
LABEL_79:
                                __break(1u);
                                goto LABEL_80;
                              }
LABEL_78:
                              __break(1u);
                              goto LABEL_79;
                            }
LABEL_77:
                            __break(1u);
                            goto LABEL_78;
                          }
LABEL_76:
                          __break(1u);
                          goto LABEL_77;
                        }
LABEL_75:
                        __break(1u);
                        goto LABEL_76;
                      }
LABEL_74:
                      __break(1u);
                      goto LABEL_75;
                    }
LABEL_73:
                    __break(1u);
                    goto LABEL_74;
                  }
LABEL_72:
                  __break(1u);
                  goto LABEL_73;
                }
LABEL_71:
                __break(1u);
                goto LABEL_72;
              }
LABEL_70:
              __break(1u);
              goto LABEL_71;
            }
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_67;
  }
}

void sub_2ABD10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  char v20[24];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_objectGraph) = a1;
  swift_release(v4);
  swift_retain(a1);
  v6 = ModernShelf.ItemPresentation.itemKind.getter(v5) == 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_style) = v6;
  sub_2AA778(a1);
  v7 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_episodeInfoView);
  if (!v7)
  {
    __break(1u);
    goto LABEL_7;
  }
  v8 = (uint64_t *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph];
  swift_beginAccess(&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph], v20, 1, 0);
  v9 = *v8;
  *v8 = a1;
  v10 = v7;
  swift_release(v9);
  v11 = type metadata accessor for ExplicitContentPresenter(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v19, v11, v11);
  v12 = *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter];
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter] = v19;

  swift_release(v12);
  v13 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_internalArtworkContainer);
  if (!v13)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v14 = v13;
  sub_262730(a1);

  v15 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesView);
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = v15;
  PlayControlsStackView.bind(to:)(a1);

  v17 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressView);
  if (v17)
  {
    v18 = v17;
    PlayControlsStackView.bind(to:)(a1);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_2ABE9C(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  objc_super v14;

  v2 = v1;
  v14.receiver = v1;
  v14.super_class = (Class)swift_getObjectType();
  v4 = objc_msgSendSuper2(&v14, "preferredLayoutAttributesFittingAttributes:", a1);
  objc_msgSend(v4, "size");
  v6 = v5;
  if (qword_3CFD40 != -1)
    swift_once(&qword_3CFD40, sub_2AA1A0);
  v7 = *(double *)&xmmword_3E0750;
  if (qword_3CFD50 != -1)
    swift_once(&qword_3CFD50, sub_2AA1CC);
  v8 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_episodeInfoView];
  if (!v8)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  v9 = v6 - v7 - *(double *)&qword_3E0768;
  v10 = v8;
  EpisodeInfoView.prepareForLayout(fitting:)(v9);

  if (qword_3CFD48 != -1)
    swift_once(&qword_3CFD48, sub_2AA1BC);
  v11 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressView];
  if (!v11)
    goto LABEL_15;
  v12 = qword_3CF348;
  v13 = v11;
  if (v12 != -1)
    swift_once(&qword_3CF348, sub_10BB04);

  if (qword_3CFD58 != -1)
    swift_once(&qword_3CFD58, sub_2AA1DC);
  objc_msgSend(v4, "size");
  objc_msgSend(v4, "setSize:");
}

void sub_2AC0FC()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11[24];
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_episodeInfoView];
  if (!v1)
    goto LABEL_16;
  v2 = (uint64_t *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables], v11, 1, 0);
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    if (v3 < 0)
      v8 = *v2;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*v2, 2);
    v9 = v1;
    v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (v4)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease_n(v3, 2);
    v10 = *v2;
    *v2 = (uint64_t)&_swiftEmptyArrayStorage;

    swift_bridgeObjectRelease(v10);
    return;
  }
  v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n(*v2, 2);
  v5 = v1;
  if (!v4)
    goto LABEL_14;
LABEL_4:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      }
      else
      {
        v7 = *(_QWORD *)(v3 + 8 * i + 32);
        swift_retain(v7);
      }
      AnyCancellable.cancel()();
      swift_release(v7);
    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

uint64_t type metadata accessor for SwooshMacEpisodeCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell);
}

uint64_t storeEnumTagSinglePayload for SwooshMacEpisodeCellStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2AC3E8 + 4 * byte_305855[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2AC41C + 4 * byte_305850[v4]))();
}

uint64_t sub_2AC41C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2AC424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2AC42CLL);
  return result;
}

uint64_t sub_2AC438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2AC440);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2AC444(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2AC44C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SwooshMacEpisodeCellStyle()
{
  return &type metadata for SwooshMacEpisodeCellStyle;
}

unint64_t sub_2AC46C()
{
  unint64_t result;

  result = qword_3E0828;
  if (!qword_3E0828)
  {
    result = swift_getWitnessTable(&unk_3058FC, &type metadata for SwooshMacEpisodeCellStyle);
    atomic_store(result, (unint64_t *)&qword_3E0828);
  }
  return result;
}

void sub_2AC4B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_episodeInfoView);
  if (!v2)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v3 = v1;
  v5 = v2;
  sub_1BA170(a1, 0);
  sub_1BA4B4();
  sub_1BA5E4();
  sub_1BA9D4(a1);
  v7 = type metadata accessor for LibraryEpisodeLockup(0, v6);
  if (swift_dynamicCastClass(a1, v7))
  {
    swift_retain(a1);
    sub_1BADF4();
    swift_release(a1);
  }
  else
  {
    v9 = LegacyLockup.adamId.getter(v8);
    if ((AdamID.isEmpty.getter(v9) & 1) == 0)
    {
      v11 = LegacyLockup.adamId.getter(v10);
      sub_1BAFF4(v11);
    }
  }
  EpisodeInfoView.beginUpdates()();

  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesPresenter);
  if (!v12)
    goto LABEL_12;
  swift_retain(*(_QWORD *)(v3
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesPresenter));
  sub_2B2D0C(a1);
  swift_release(v12);
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressPresenter);
  if (!v13)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  swift_retain(*(_QWORD *)(v3
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressPresenter));
  sub_2B2D0C(a1);
  swift_release(v13);
  v14 = *(void **)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback);
  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v14;
  sub_22400C(a1);

  v16 = *(void **)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_internalArtworkContainer);
  if (v16)
  {
    v17 = v16;
    sub_262C1C(a1);

    sub_2AC630();
    return;
  }
LABEL_15:
  __break(1u);
}

id sub_2AC630()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id result;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_style] != 1
    || (LegacyLockup.ordinal.getter(), !v2))
  {
    v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_ordinalLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_ordinalLabel], "setText:", 0);
    objc_msgSend(*(id *)&v1[v9], "setHidden:", 1);
    result = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToArtwork];
    if (result)
    {
      objc_msgSend(result, "setActive:", 1);
      result = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToOrdinal];
      if (result)
      {
        v8 = 0;
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
  v3 = v2;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_ordinalLabel;
  v5 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_ordinalLabel];
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setText:", v6, swift_bridgeObjectRelease(v3).n128_f64[0]);

  objc_msgSend(*(id *)&v1[v4], "setHidden:", 0);
  result = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToArtwork];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(result, "setActive:", 0);
  result = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToOrdinal];
  if (result)
  {
    v8 = 1;
LABEL_9:
    objc_msgSend(result, "setActive:", v8);
    return objc_msgSend(v1, "setNeedsLayout");
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_2AC79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v14;
  char v15;

  v0 = type metadata accessor for Glyph(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 6;
  v5 = _s23ShelfKitCollectionViews15EpisodeInfoViewC15estimatedHeight3for05traitC012CoreGraphics7CGFloatVAA0efG5StyleO_So07UITraitC0CtFZ_0(&v15);
  if (qword_3CFD48 != -1)
    v4 = swift_once(&qword_3CFD48, sub_2AA1BC);
  v6 = *(double *)&qword_3E0760;
  v7 = static Glyph.PlayControls.play.getter(v4);
  v8 = (void *)Glyph.image.getter(v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v8, "size");
  v10 = v9;

  if (qword_3CFD58 != -1)
    swift_once(&qword_3CFD58, sub_2AA1DC);
  v11 = *(double *)&qword_3E0770;
  if (qword_3CFD40 != -1)
    swift_once(&qword_3CFD40, sub_2AA1A0);
  v12 = *(double *)&qword_3E0760 + *((double *)&xmmword_3E0750 + 1) + *(double *)&qword_3E0760;
  if (v5 + v6 + v10 + v11 > v12)
    v12 = v5 + v6 + v10 + v11;
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v12);
}

void sub_2AC928(uint64_t *a1)
{
  sub_2AC4B0(*a1);
}

double sub_2AC930()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_objectGraph)).n128_u64[0];
  return result;
}

uint64_t sub_2AC944(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3E0850, v3, (uint64_t (*)(uint64_t))type metadata accessor for SwooshMacEpisodeCell, (uint64_t)&unk_305AEC);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_2AC99C()
{
  return sub_2AC79C();
}

uint64_t sub_2AC9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3E0850, a2, (uint64_t (*)(uint64_t))type metadata accessor for SwooshMacEpisodeCell, (uint64_t)&unk_305AEC);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

double sub_2AC9E4()
{
  double v0;

  if (qword_3CFD40 != -1)
    swift_once(&qword_3CFD40, sub_2AA1A0);
  v0 = *(double *)&xmmword_3E0750;
  if (qword_3CFD50 != -1)
    swift_once(&qword_3CFD50, sub_2AA1CC);
  return v0 + *(double *)&qword_3E0768;
}

id sub_2ACA60(uint64_t a1, uint64_t a2)
{
  return sub_1139D4(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback);
}

double sub_2ACA6C()
{
  if (qword_3CFD40 != -1)
    swift_once(&qword_3CFD40, sub_2AA1A0);
  return *(double *)&xmmword_3E0750;
}

id sub_2ACAB0(uint64_t a1, uint64_t a2)
{
  return sub_1139D4(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_internalArtworkContainer);
}

uint64_t sub_2ACABC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_isHovering);
}

void sub_2ACACC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_isHovering) = a1;
  sub_2AA31C();
}

CAGradientLayerType sub_2ACADC@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  double v12;
  void *v13;
  id v14;
  id v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_2EFC90;
  if ((a1 & 1) != 0)
  {
    if (qword_3CEFF0 != -1)
      swift_once(&qword_3CEFF0, sub_DFAC);
    v10 = (void *)qword_3D0898;
    *(_QWORD *)(v9 + 32) = qword_3D0898;
    v11 = objc_msgSend(v10, "colorWithAlphaComponent:", 0.0);
    *(_QWORD *)(v9 + 40) = v11;
    specialized Array._endMutation()(v11);
    v12 = a3 + 30.0;
  }
  else
  {
    if (qword_3CEFF0 != -1)
      swift_once(&qword_3CEFF0, sub_DFAC);
    v13 = (void *)qword_3D0898;
    v14 = objc_msgSend((id)qword_3D0898, "colorWithAlphaComponent:", 0.0);
    *(_QWORD *)(v9 + 32) = v14;
    *(_QWORD *)(v9 + 40) = v13;
    specialized Array._endMutation()(v14);
    v12 = a4 - a3;
    a3 = a4 - a3 + -30.0;
    v15 = v13;
  }
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = v9;
  *(double *)(a2 + 24) = a3 / a4;
  *(_QWORD *)(a2 + 32) = 0;
  *(double *)(a2 + 40) = v12 / a4;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = kCAGradientLayerAxial;
  return kCAGradientLayerAxial;
}

uint64_t sub_2ACC50()
{
  _QWORD *v0;

  if (*(_BYTE *)(*v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_style))
    return 3;
  else
    return 2;
}

uint64_t sub_2ACC70(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E0830, a2, (uint64_t (*)(uint64_t))type metadata accessor for SwooshMacEpisodeCell, (uint64_t)&unk_3059C4);
}

uint64_t sub_2ACC9C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E0838, a2, (uint64_t (*)(uint64_t))type metadata accessor for SwooshMacEpisodeCell, (uint64_t)&unk_305A4C);
}

uint64_t sub_2ACCC8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E0840, a2, (uint64_t (*)(uint64_t))type metadata accessor for SwooshMacEpisodeCell, (uint64_t)&unk_305A24);
}

uint64_t sub_2ACCF4(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E0848, a2, (uint64_t (*)(uint64_t))type metadata accessor for SwooshMacEpisodeCell, (uint64_t)&unk_305A7C);
}

void sub_2ACD20()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_episodeInfoView] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_style] = 0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_ordinalLabel;
  v3 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v5 = (void *)static UIFont.title3Emph.getter(v4);
  objc_msgSend(v3, "setFont:", v5);

  objc_msgSend(v3, "setHidden:", 1);
  *(_QWORD *)&v1[v2] = v3;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToArtwork] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_pinEpisodeInfoToOrdinal] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressPresenter] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForProgressView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesPresenter] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_playControlsForBadgesView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell____lazy_storage___badgesGradient] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_internalArtworkContainer] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_isHovering] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/SwooshMacEpisodeCell.swift", 50, 2, 93, 0);
  __break(1u);
}

id UpsellSubscriptionPlansView.__allocating_init(upsellInformation:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return UpsellSubscriptionPlansView.init(upsellInformation:)(a1);
}

_QWORD *sub_2ACEF8()
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x4024000000000000;
  v2 = 0x4030000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3E0858, &v2, &v1, &type metadata for CGFloat);
}

_QWORD *sub_2ACF38()
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x402E000000000000;
  v2 = 0x403E000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3E0860, &v2, &v1, &type metadata for CGFloat);
}

_QWORD *sub_2ACF78()
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x4014000000000000;
  v2 = 0x4030000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3E0868, &v2, &v1, &type metadata for CGFloat);
}

void sub_2ACFB8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "blackColor");
  v2 = objc_msgSend(v1, "colorWithAlphaComponent:", 0.15);

  v3 = objc_msgSend(v0, "blackColor");
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.7);

  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v2, v4);
  v6 = v5;

  qword_3E0870 = v6;
}

uint64_t sub_2AD08C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);
  _BYTE v9[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_didSelect);
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject(&unk_390D08, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_2AF538;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_2C690(v4, v5);
}

uint64_t sub_2AD120(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_390CE0, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_2AF508;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_didSelect);
  swift_beginAccess(v7, v11, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_2C690(v3, v4);
  return sub_1D618(v8, v9);
}

uint64_t UpsellSubscriptionPlansView.didSelect.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_didSelect);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_didSelect, v4, 0, 0);
  v2 = *v1;
  sub_2C690(*v1, v1[1]);
  return v2;
}

uint64_t UpsellSubscriptionPlansView.didSelect.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_didSelect);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_1D618(v6, v7);
}

uint64_t (*UpsellSubscriptionPlansView.didSelect.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_didSelect, a1, 33, 0);
  return j__swift_endAccess;
}

id UpsellSubscriptionPlansView.init(upsellInformation:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  char *v5;
  id v6;
  __n128 v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_subscriptionPlanButtons] = _swiftEmptyArrayStorage;
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_didSelect];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = v1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_subscriptionPlans] = UpsellInformation.subscriptionPlans.getter(v5);

  v9.receiver = v5;
  v9.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if ((UpsellInformation.hasTwoSubscriptionPlans.getter(v7) & 1) != 0)
    sub_2AD394();

  return v6;
}

void sub_2AD394()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  double leading;
  double bottom;
  double trailing;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::OpaquePointer v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for ShadowView();
  v3 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  if (qword_3CFD80 != -1)
    swift_once(&qword_3CFD80, sub_2ACFB8);
  v4 = qword_3CFD70;
  v5 = (id)qword_3E0870;
  if (v4 != -1)
    swift_once(&qword_3CFD70, sub_2ACF38);
  v6 = qword_3E0860;
  if (qword_3CFD78 != -1)
    swift_once(&qword_3CFD78, sub_2ACF78);
  v7 = qword_3E0868;
  v8 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
  v9 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
  *(_QWORD *)v8 = v5;
  *((_QWORD *)v8 + 1) = v6;
  *((_QWORD *)v8 + 2) = 0;
  *((_QWORD *)v8 + 3) = v7;
  v10 = v5;

  sub_CC328();
  objc_msgSend(v1, "addSubview:", v3);
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v3, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v14, "setAxis:", 0);
  objc_msgSend(v14, "setDistribution:", 1);
  if (qword_3CFD68 != -1)
    swift_once(&qword_3CFD68, sub_2ACEF8);
  objc_msgSend(v14, "setSpacing:", *(double *)&qword_3E0858);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v14);
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v14, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_subscriptionPlans];
  v16 = v1;
  v17 = swift_bridgeObjectRetain(v15);
  v18 = sub_2AF55C(v17, (uint64_t)v16);
  swift_bridgeObjectRelease(v15);

  v19 = OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_subscriptionPlanButtons;
  v20 = *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_subscriptionPlanButtons];
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_subscriptionPlanButtons] = v18;
  swift_bridgeObjectRelease(v20);
  v21 = *(_QWORD *)&v16[v19];
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v24 = *(_QWORD *)&v16[v19];
    else
      v24 = v21 & 0xFFFFFFFFFFFFFF8;
    v25 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
    swift_bridgeObjectRetain(v21);
    v23._rawValue = (void *)_bridgeCocoaArray<A>(_:)(v24, v25);
  }
  else
  {
    v22 = swift_bridgeObjectRetain_n(v21, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v22);
    sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
    v23._rawValue = (void *)v21;
  }
  swift_bridgeObjectRelease(v21);
  UIStackView.addArrangedSubviews(_:)(v23);

  swift_bridgeObjectRelease(v23._rawValue);
}

void sub_2AD748(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  char *v6;
  char *v7;
  _BOOL8 v8;
  objc_class *v9;
  unsigned int v10;
  unsigned int v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, __n128);
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  char v21[24];
  objc_super v22;
  objc_super v23;
  objc_super v24;
  objc_super v25;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_subscriptionPlanButtons);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v14 = *(_QWORD *)(v1
                      + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_subscriptionPlanButtons);
    else
      v14 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_subscriptionPlanButtons));
    v3 = _CocoaArrayWrapper.endIndex.getter(v14);
    if (v3)
      goto LABEL_3;
LABEL_27:
    swift_bridgeObjectRelease(v2);
    goto LABEL_28;
  }
  v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(*(_QWORD *)(v1
                                     + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_subscriptionPlanButtons));
  if (!v3)
    goto LABEL_27;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
    else
      v7 = (char *)*(id *)(v2 + 8 * i + 32);
    v6 = v7;
    v8 = v7 == a1;
    v9 = (objc_class *)type metadata accessor for UpsellSubscriptionPlanButton();
    v25.receiver = v6;
    v25.super_class = v9;
    v10 = objc_msgSendSuper2(&v25, "isSelected");
    v24.receiver = v6;
    v24.super_class = v9;
    objc_msgSendSuper2(&v24, "setSelected:", v8);
    v23.receiver = v6;
    v23.super_class = v9;
    if (v10 != objc_msgSendSuper2(&v23, "isSelected"))
    {
      v22.receiver = v6;
      v22.super_class = v9;
      v11 = objc_msgSendSuper2(&v22, "isSelected");
      v12 = objc_msgSend(v6, "layer");
      if (v11)
      {
        if (qword_3CFDA8 != -1)
          swift_once(&qword_3CFDA8, sub_2ADC24);
        objc_msgSend(v12, "setBorderWidth:", *(double *)&qword_3E0898);

        v13 = objc_msgSend(v6, "layer");
        if (qword_3CEFE8 != -1)
          swift_once(&qword_3CEFE8, sub_DF80);
        v5 = objc_msgSend((id)qword_3D0890, "CGColor");
        objc_msgSend(v13, "setBorderColor:", v5);

        v6 = (char *)v13;
      }
      else
      {
        if (qword_3CFDA0 != -1)
          swift_once(&qword_3CFDA0, sub_2ADC14);
        objc_msgSend(v12, "setBorderWidth:", *(double *)&qword_3E0890);

        v5 = objc_msgSend(v6, "layer");
        if (qword_3CFDC0 != -1)
          swift_once(&qword_3CFDC0, sub_2ADCB4);
        objc_msgSend(v5, "setBorderColor:", qword_3E08B0);
      }

      v6 = (char *)v5;
    }

  }
  swift_bridgeObjectRelease(v2);
LABEL_28:
  v15 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_didSelect;
  swift_beginAccess(v15, v21, 0, 0);
  v16 = *(void (**)(uint64_t, __n128))v15;
  if (*(_QWORD *)v15)
  {
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton_subscriptionPlan];
    v19 = swift_retain(v17);
    v16(v18, v19);
    sub_1D618((uint64_t)v16, v17);
  }
}

void UpsellSubscriptionPlansView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.UpsellSubscriptionPlansView", 51, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t type metadata accessor for UpsellSubscriptionPlansView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView);
}

uint64_t method lookup function for UpsellSubscriptionPlansView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for UpsellSubscriptionPlansView);
}

uint64_t dispatch thunk of UpsellSubscriptionPlansView.__allocating_init(upsellInformation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

_QWORD *sub_2ADBAC()
{
  uint64_t v1;
  uint64_t v2;

  v2 = 0x4051800000000000;
  v1 = 0x404B000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3E0878, &v2, &v1, &type metadata for CGFloat);
}

void sub_2ADBF4()
{
  qword_3E0880 = 0x402C000000000000;
}

void sub_2ADC04()
{
  qword_3E0888 = 0x4008000000000000;
}

void sub_2ADC14()
{
  qword_3E0890 = 0x3FF0000000000000;
}

void sub_2ADC24()
{
  qword_3E0898 = 0x4008000000000000;
}

_QWORD *sub_2ADC34()
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x4020000000000000;
  v2 = 0x4022000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3E08A0, &v2, &v1, &type metadata for CGFloat);
}

_QWORD *sub_2ADC74()
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x4026000000000000;
  v2 = 0x4028000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3E08A8, &v2, &v1, &type metadata for CGFloat);
}

void sub_2ADCB4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "blackColor");
  v2 = objc_msgSend(v1, "colorWithAlphaComponent:", 0.08);

  v3 = objc_msgSend(v0, "whiteColor");
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.1);

  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v2, v4);
  v6 = v5;

  v7 = objc_msgSend(v6, "CGColor");
  qword_3E08B0 = (uint64_t)v7;
}

id sub_2ADD9C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___vStack;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___vStack);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___vStack);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v4, "setUserInteractionEnabled:", 0);
    objc_msgSend(v4, "setAxis:", 1);
    objc_msgSend(v4, "setAlignment:", 3);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2ADE5C()
{
  uint64_t v0;
  id v1;
  double v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v0 = type metadata accessor for DynamicTypeLabel();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, "setContentCompressionResistancePriority:forAxis:", 1, v2);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v3 = (void *)static UIFont.caption2Emph.getter();
  v4 = (void *)static UIFont.footnoteEmph.getter();
  v5 = (void *)static UIFont.preferredFont(iOS:mac:)(v3, v4);

  objc_msgSend(v1, "setFont:", v5);
  objc_msgSend(v1, "setNumberOfLines:", 1);
  objc_msgSend(v1, "setLineBreakMode:", 4);
  v6 = qword_3CEFE8;
  v7 = v1;
  if (v6 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  objc_msgSend(v7, "setTextColor:", qword_3D0890);

  return v7;
}

id sub_2ADF88()
{
  uint64_t v0;
  id v1;
  double v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v0 = type metadata accessor for DynamicTypeLabel();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, "setContentCompressionResistancePriority:forAxis:", 1, v2);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v3 = (void *)static UIFont.bodyEmph.getter();
  objc_msgSend(v1, "setFont:", v3);

  objc_msgSend(v1, "setNumberOfLines:", 1);
  objc_msgSend(v1, "setLineBreakMode:", 4);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v1;
  v6 = objc_msgSend(v4, "labelColor");
  objc_msgSend(v5, "setTextColor:", v6);

  return v5;
}

id sub_2AE090()
{
  uint64_t v0;
  id v1;
  double v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v0 = type metadata accessor for DynamicTypeLabel();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, "setContentCompressionResistancePriority:forAxis:", 1, v2);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v3 = (void *)static UIFont.caption1.getter();
  v4 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleFootnote, UIFontWeightMedium);
  v5 = (void *)static UIFont.preferredFont(iOS:mac:)(v3, v4);

  objc_msgSend(v1, "setFont:", v5);
  objc_msgSend(v1, "setNumberOfLines:", 1);
  objc_msgSend(v1, "setLineBreakMode:", 4);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v1;
  v8 = objc_msgSend(v6, "secondaryLabelColor");
  objc_msgSend(v7, "setTextColor:", v8);

  return v7;
}

void sub_2AE2B0()
{
  void *v0;
  unsigned int v1;
  id v2;
  id v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  v1 = objc_msgSendSuper2(&v5, "isSelected");
  v2 = objc_msgSend(v0, "layer");
  if (v1)
  {
    if (qword_3CFDA8 != -1)
      swift_once(&qword_3CFDA8, sub_2ADC24);
    objc_msgSend(v2, "setBorderWidth:", *(double *)&qword_3E0898);

    v3 = objc_msgSend(v0, "layer");
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v4 = objc_msgSend((id)qword_3D0890, "CGColor");
    objc_msgSend(v3, "setBorderColor:", v4);

  }
  else
  {
    if (qword_3CFDA0 != -1)
      swift_once(&qword_3CFDA0, sub_2ADC14);
    objc_msgSend(v2, "setBorderWidth:", *(double *)&qword_3E0890);

    v4 = objc_msgSend(v0, "layer");
    if (qword_3CFDC0 != -1)
      swift_once(&qword_3CFDC0, sub_2ADCB4);
    objc_msgSend(v4, "setBorderColor:", qword_3E08B0);
  }

}

void sub_2AE478()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  char v10;
  unsigned int v11;
  id v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  Swift::String v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSString v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;
  objc_super v36;
  objc_super v37;
  objc_super v38;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v1, "setBackgroundColor:", v3);

  v4 = objc_msgSend(v1, "layer");
  if (qword_3CFD90 != -1)
    swift_once(&qword_3CFD90, sub_2ADBF4);
  objc_msgSend(v4, "setCornerRadius:", *(double *)&qword_3E0880);

  v5 = sub_2ADD9C();
  objc_msgSend(v1, "addSubview:", v5);

  v6 = sub_2ADD9C();
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v6, 0, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);

  v7 = sub_2ADD9C();
  v8 = objc_msgSend(v7, "heightAnchor");

  if (qword_3CFD88 != -1)
    swift_once(&qword_3CFD88, sub_2ADBAC);
  v9 = objc_msgSend(v8, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_3E0878);

  objc_msgSend(v9, "setActive:", 1);
  if ((*((_BYTE *)v1
        + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton_style) & 1) != 0)
    sub_2AEE08();
  else
    sub_2AE998();
  v10 = UpsellSubscriptionPlan.isRecommended.getter();
  v38.receiver = v1;
  v38.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v38, "isSelected");
  v37.receiver = v1;
  v37.super_class = ObjectType;
  objc_msgSendSuper2(&v37, "setSelected:", v10 & 1);
  v36.receiver = v1;
  v36.super_class = ObjectType;
  if (v11 != objc_msgSendSuper2(&v36, "isSelected"))
    sub_2AE2B0();
  sub_2AE2B0();
  v12 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___titleLabel, (uint64_t (*)(void))sub_2ADF88);
  v13 = objc_msgSend(v12, "text");

  if (v13)
  {
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;
    v17 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_2AE090);
    v18 = objc_msgSend(v17, "text");

    if (v18)
    {

      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      v33 = v14;
      v22._countAndFlagsBits = 8236;
      v22._object = (void *)0xE200000000000000;
      String.append(_:)(v22);
      v23._countAndFlagsBits = v19;
      v23._object = v21;
      String.append(_:)(v23);
      swift_bridgeObjectRelease(v21);
      v13 = String._bridgeToObjectiveC()();
    }
    objc_msgSend(v1, "setAccessibilityLabel:", v13, swift_bridgeObjectRelease(v16).n128_f64[0]);

  }
  v35.receiver = v1;
  v35.super_class = ObjectType;
  objc_msgSendSuper2(&v35, "isSelected");
  objc_msgSend(v1, "setAccessibilityTraits:");
  v25 = UpsellSubscriptionPlan.offerAction.getter(v24);
  v26 = ChannelOfferAction.buyParams.getter();
  v28 = v27;
  swift_release(v25);
  v33 = v26;
  v34 = v28;
  v31 = 0x594C48544E4F4DLL;
  v32 = 0xE700000000000000;
  v29 = sub_D254();
  StringProtocol.contains<A>(_:)(&v31, &type metadata for String, &type metadata for String, v29, v29);
  swift_bridgeObjectRelease(v28);
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setAccessibilityIdentifier:", v30, v31, v32, v33, v34);

}

void sub_2AE998()
{
  void *v0;
  void *v1;
  id v2;
  char v3;
  id v4;
  id v5;
  id v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  id v20;
  id v21;
  char v22;
  id v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  id v32;

  if ((*((_BYTE *)v0
        + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton_style) & 1) == 0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "traitCollection");
    v3 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v3 & 1) == 0)
    {
      v4 = sub_2ADD9C();
      if (qword_3CFD98 != -1)
        swift_once(&qword_3CFD98, sub_2ADC04);
      objc_msgSend(v4, "setSpacing:", *(double *)&qword_3E0888);

    }
    v5 = sub_2ADD9C();
    objc_msgSend(v5, "setLayoutMarginsRelativeArrangement:", 1);

    v6 = sub_2ADD9C();
    if (qword_3CFDB0 != -1)
      swift_once(&qword_3CFDB0, sub_2ADC34);
    v7 = *(double *)&qword_3E08A0;
    if (qword_3CFDB8 != -1)
      swift_once(&qword_3CFDB8, sub_2ADC74);
    objc_msgSend(v6, "setLayoutMargins:", v7, 0.0, *(double *)&qword_3E08A8, 0.0);

    UpsellSubscriptionPlan.callout.getter();
    if (v8)
    {
      v9 = v8;
      v10 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___calloutLabel, (uint64_t (*)(void))sub_2ADE5C);
      v11 = String._bridgeToObjectiveC()();
      objc_msgSend(v10, "setText:", v11, swift_bridgeObjectRelease(v9).n128_f64[0]);

      v12 = sub_2ADD9C();
      v13 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___calloutLabel, (uint64_t (*)(void))sub_2ADE5C);
    }
    else
    {
      v12 = sub_2ADD9C();
      v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    }
    v14 = v13;
    objc_msgSend(v12, "addArrangedSubview:", v13);

    v15 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___titleLabel, (uint64_t (*)(void))sub_2ADF88);
    UpsellSubscriptionPlan.title.getter();
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setText:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

    v19 = sub_2ADD9C();
    v20 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___titleLabel, (uint64_t (*)(void))sub_2ADF88);
    objc_msgSend(v19, "addArrangedSubview:", v20);

    v21 = objc_msgSend(v1, "traitCollection");
    v22 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v22 & 1) != 0)
    {
      v23 = sub_2ADD9C();
      if (qword_3CFD98 != -1)
        swift_once(&qword_3CFD98, sub_2ADC04);
      v24 = *(double *)&qword_3E0888;
      v25 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___titleLabel, (uint64_t (*)(void))sub_2ADF88);
      objc_msgSend(v23, "setCustomSpacing:afterView:", v25, v24);

    }
    UpsellSubscriptionPlan.subtitle.getter();
    if (v26)
    {
      v27 = v26;
      v28 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_2AE090);
      v29 = String._bridgeToObjectiveC()();
      objc_msgSend(v28, "setText:", v29, swift_bridgeObjectRelease(v27).n128_f64[0]);

      v30 = sub_2ADD9C();
      v31 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_2AE090);
    }
    else
    {
      v30 = sub_2ADD9C();
      v31 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    }
    v32 = v31;
    objc_msgSend(v30, "addArrangedSubview:");

  }
}

void sub_2AEE08()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  char **v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  id v35;
  id v36;

  if (*((_BYTE *)v0
       + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton_style) == 1)
  {
    v1 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    objc_msgSend(v1, "setUserInteractionEnabled:", 0);
    v2 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v2, "setAxis:", 1);
    objc_msgSend(v2, "setAlignment:", 3);
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v3 = objc_msgSend(v0, "traitCollection");
    v4 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v4 & 1) == 0)
    {
      if (qword_3CFD98 != -1)
        swift_once(&qword_3CFD98, sub_2ADC04);
      objc_msgSend(v2, "setSpacing:", *(double *)&qword_3E0888);
    }
    objc_msgSend(v1, "addSubview:", v2);
    v5 = (void *)objc_opt_self(NSLayoutConstraint);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v7 = swift_allocObject(v6, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_2F1D10;
    v8 = objc_msgSend(v2, "centerYAnchor");
    v9 = objc_msgSend(v1, "centerYAnchor");
    v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

    *(_QWORD *)(v7 + 32) = v10;
    v11 = objc_msgSend(v2, "leadingAnchor");
    v12 = objc_msgSend(v1, "leadingAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    *(_QWORD *)(v7 + 40) = v13;
    v14 = objc_msgSend(v2, "trailingAnchor");
    v15 = objc_msgSend(v1, "trailingAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(v7 + 48) = v16;
    v17 = objc_msgSend(v2, "topAnchor");
    v18 = objc_msgSend(v1, "topAnchor");
    v19 = objc_msgSend(v17, "constraintGreaterThanOrEqualToAnchor:", v18);

    *(_QWORD *)(v7 + 56) = v19;
    v20 = objc_msgSend(v2, "bottomAnchor");
    v21 = objc_msgSend(v1, "bottomAnchor");
    v22 = objc_msgSend(v20, "constraintLessThanOrEqualToAnchor:", v21);

    *(_QWORD *)(v7 + 64) = v22;
    specialized Array._endMutation()(v23);
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

    UpsellSubscriptionPlan.callout.getter();
    v26 = &selRef_accessibilityContextButton;
    if (v25)
    {
      v27 = v25;
      v28 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___calloutLabel, (uint64_t (*)(void))sub_2ADE5C);
      v29 = String._bridgeToObjectiveC()();
      objc_msgSend(v28, "setText:", v29, swift_bridgeObjectRelease(v27).n128_f64[0]);

      v26 = &selRef_accessibilityContextButton;
      v30 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___calloutLabel, (uint64_t (*)(void))sub_2ADE5C);
      objc_msgSend(v2, "addArrangedSubview:", v30);

    }
    v31 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___titleLabel, (uint64_t (*)(void))sub_2ADF88);
    UpsellSubscriptionPlan.title.getter();
    v33 = v32;
    v34 = String._bridgeToObjectiveC()();
    objc_msgSend(v31, "setText:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

    v35 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___titleLabel, (uint64_t (*)(void))sub_2ADF88);
    objc_msgSend(v2, v26[116], v35);

    v36 = sub_2ADD9C();
    objc_msgSend(v36, v26[116], v1);

  }
}

uint64_t type metadata accessor for UpsellSubscriptionPlanButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton);
}

uint64_t storeEnumTagSinglePayload for UpsellSubscriptionPlanButton.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2AF41C + 4 * byte_305B35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2AF450 + 4 * byte_305B30[v4]))();
}

uint64_t sub_2AF450(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2AF458(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2AF460);
  return result;
}

uint64_t sub_2AF46C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2AF474);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2AF478(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2AF480(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpsellSubscriptionPlanButton.Style()
{
  return &type metadata for UpsellSubscriptionPlanButton.Style;
}

unint64_t sub_2AF4A0()
{
  unint64_t result;

  result = qword_3E0950[0];
  if (!qword_3E0950[0])
  {
    result = swift_getWitnessTable(&unk_305BF4, &type metadata for UpsellSubscriptionPlanButton.Style);
    atomic_store(result, qword_3E0950);
  }
  return result;
}

uint64_t sub_2AF4E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2AF508(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_2AF538(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

_QWORD *sub_2AF55C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  id v6;
  void *v7;
  objc_class *v8;
  char *v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_super v20;
  _QWORD *v21;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v3)
      break;
    v21 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v3);
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    v5 = 0;
    while (v3 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = (objc_class *)type metadata accessor for UpsellSubscriptionPlanButton();
      v9 = (char *)objc_allocWithZone(v8);
      *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___vStack] = 0;
      *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___calloutLabel] = 0;
      *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___titleLabel] = 0;
      *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton____lazy_storage___subtitleLabel] = 0;
      v10 = v7;
      v11 = v9;
      UpsellSubscriptionPlan.subtitle.getter();
      v13 = v12;

      swift_bridgeObjectRelease(v13);
      v11[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton_style] = v13 == 0;
      *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_A89005DB8D4382AA5AEAA7A07C0C750128UpsellSubscriptionPlanButton_subscriptionPlan] = v10;
      v14 = v10;

      v20.receiver = v11;
      v20.super_class = v8;
      v15 = objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      objc_msgSend(v15, "setIsAccessibilityElement:", 1);
      sub_2AE478();

      objc_msgSend(v15, "addTarget:action:forControlEvents:", a2, "planButtonTappedWithButton:", 64);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v16 = v21[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
      specialized ContiguousArray._endMutation()(v17);
      if (v3 == v5)
        return v21;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

uint64_t IdiomAwareValue.init(mac:ios:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  v10 = a5 + *(int *)(swift_getTupleTypeMetadata2(0, a3, a3, "mac ios ", 0) + 48);
  v12 = type metadata accessor for IdiomAwareValue(0, a3, a4, v11);
  IdiomAwareValue.macValue.getter(v12, a5);
  IdiomAwareValue.iosValue.getter(v12, v10);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(a2, v12);
  v13(a1, v12);
  return swift_storeEnumTagMultiPayload(a5, v12, 1);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = a5 + *(int *)(swift_getTupleTypeMetadata2(0, a3, a3, "mac ios ", 0) + 48);
  v12 = type metadata accessor for IdiomAwareValue(0, a3, a4, v11);
  IdiomAwareValue.macValue.getter(v12, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v10, a2, a3);
  return swift_storeEnumTagMultiPayload(a5, v12, 1);
}

{
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v10 = a5 + *(int *)(swift_getTupleTypeMetadata2(0, a3, a3, "mac ios ", 0) + 48);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32);
  v11(a5, a1, a3);
  v11(v10, a2, a3);
  v13 = type metadata accessor for IdiomAwareValue(0, a3, a4, v12);
  return swift_storeEnumTagMultiPayload(a5, v13, 1);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = a5 + *(int *)(swift_getTupleTypeMetadata2(0, a3, a3, "mac ios ", 0) + 48);
  v11 = *(_QWORD *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a5, a1, a3);
  v13 = type metadata accessor for IdiomAwareValue(0, a3, a4, v12);
  IdiomAwareValue.iosValue.getter(v13, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, a3);
  return swift_storeEnumTagMultiPayload(a5, v13, 1);
}

uint64_t IdiomAwareValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  unint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v24;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - v9;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v15 + 16))(v14, v12);
  if (swift_getEnumCaseMultiPayload(v14, a1) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v14, v4);
  v16 = &v14[*(int *)(swift_getTupleTypeMetadata2(0, v4, v4, "mac ios ", 0) + 48)];
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v17(v10, v14, v4);
  v17(v7, v16, v4);
  v18 = sub_1FEB8();
  v19 = static UITraitCollection.interfaceIdiomIsMac.getter(v18);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  if ((v19 & 1) != 0)
  {
    v20(v7, v4);
    v21 = a2;
    v22 = v10;
  }
  else
  {
    v20(v10, v4);
    v21 = a2;
    v22 = v7;
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v17)(v21, v22, v4);
}

uint64_t static IdiomAwareValue.== infix(_:_:)(char *a1, char *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t TupleTypeMetadata2;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t, __n128);
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;

  v48 = a1;
  v49 = a2;
  v50 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v43 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v44 = (char *)&v43 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - v11;
  v47 = v13;
  v15 = type metadata accessor for IdiomAwareValue(0, v14, v13, v13);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v43 - v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v15, v15, 0, 0);
  v45 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v23 = __chkstk_darwin(TupleTypeMetadata2);
  v25 = (char *)&v43 - v24;
  v27 = (char *)&v43 + *(int *)(v26 + 48) - v24;
  v46 = v16;
  v28 = *(void (**)(char *, char *, uint64_t, __n128))(v16 + 16);
  v28((char *)&v43 - v24, v48, v15, v23);
  ((void (*)(char *, char *, uint64_t))v28)(v27, v49, v15);
  if (swift_getEnumCaseMultiPayload(v25, v15) != 1)
  {
    ((void (*)(char *, char *, uint64_t))v28)(v21, v25, v15);
    if (swift_getEnumCaseMultiPayload(v27, v15) != 1)
    {
      v40 = v50;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v12, v27, a3);
      v38 = dispatch thunk of static Equatable.== infix(_:_:)(v21, v12, a3, v47);
      v41 = *(void (**)(char *, uint64_t))(v40 + 8);
      v41(v12, a3);
      v41(v21, a3);
      v37 = v46;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v21, a3);
    goto LABEL_8;
  }
  v49 = v9;
  ((void (*)(char *, char *, uint64_t))v28)(v18, v25, v15);
  v29 = *(int *)(swift_getTupleTypeMetadata2(0, a3, a3, "mac ios ", 0) + 48);
  v30 = &v18[v29];
  if (swift_getEnumCaseMultiPayload(v27, v15) != 1)
  {
    v39 = *(void (**)(char *, uint64_t))(v50 + 8);
    v39(&v18[v29], a3);
    v39(v18, a3);
LABEL_8:
    v38 = 0;
    v37 = v45;
    v15 = TupleTypeMetadata2;
    goto LABEL_11;
  }
  v48 = &v27[v29];
  v31 = v49;
  v32 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  v32(v49, v27, a3);
  v33 = v44;
  v32(v44, v30, a3);
  v34 = v43;
  v32(v43, v48, a3);
  v35 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v31, a3, v47);
  v36 = *(void (**)(char *, uint64_t))(v50 + 8);
  v36(v18, a3);
  v37 = v46;
  if ((v35 & 1) != 0)
  {
    v38 = dispatch thunk of static Equatable.== infix(_:_:)(v33, v34, a3, v47);
    v36(v34, a3);
    v36(v33, a3);
    v36(v31, a3);
  }
  else
  {
    v36(v34, a3);
    v36(v33, a3);
    v36(v31, a3);
    v38 = 0;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v15);
  return v38 & 1;
}

uint64_t sub_2AFE58(char *a1, char *a2, uint64_t a3)
{
  return static IdiomAwareValue.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t IdiomAwareValue<>.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(a1);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v15, v17, a2);
  if (swift_getEnumCaseMultiPayload(v15, a2) == 1)
  {
    v18 = &v15[*(int *)(swift_getTupleTypeMetadata2(0, v6, v6, "mac ios ", 0) + 48)];
    v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v19(v13, v15, v6);
    v19(v10, v18, v6);
    Hasher._combine(_:)(1uLL);
    dispatch thunk of Hashable.hash(into:)(a1, v6, a3);
    dispatch thunk of Hashable.hash(into:)(a1, v6, a3);
    v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20(v10, v6);
    return ((uint64_t (*)(char *, uint64_t))v20)(v13, v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v15, v6);
    Hasher._combine(_:)(0);
    dispatch thunk of Hashable.hash(into:)(a1, v6, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
}

Swift::Int IdiomAwareValue<>.hashValue.getter(uint64_t a1, uint64_t a2)
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  IdiomAwareValue<>.hash(into:)((uint64_t)v5, a1, a2);
  return Hasher._finalize()();
}

Swift::Int sub_2B0078(uint64_t a1, uint64_t a2)
{
  return IdiomAwareValue<>.hashValue.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_2B0080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return IdiomAwareValue<>.hash(into:)(a1, a2, *(_QWORD *)(a3 - 8));
}

Swift::Int sub_2B0088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD v6[9];

  v4 = *(_QWORD *)(a3 - 8);
  Hasher.init(_seed:)(v6, a1);
  IdiomAwareValue<>.hash(into:)((uint64_t)v6, a2, v4);
  return Hasher._finalize()();
}

uint64_t IdiomAwareValue.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a4, a1, a2);
  v8 = type metadata accessor for IdiomAwareValue(0, a2, a3, v7);
  return swift_storeEnumTagMultiPayload(a4, v8, 0);
}

uint64_t IdiomAwareValue.macValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  __chkstk_darwin(a1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, a1);
  v8 = *(_QWORD *)(a1 + 16);
  if (EnumCaseMultiPayload != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, v5, v8);
  v9 = &v5[*(int *)(swift_getTupleTypeMetadata2(0, v8, v8, "mac ios ", 0) + 48)];
  v10 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v5, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v9, v8);
}

uint64_t type metadata accessor for IdiomAwareValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IdiomAwareValue);
}

uint64_t IdiomAwareValue.iosValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v12;

  __chkstk_darwin(a1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, a1);
  v8 = *(_QWORD *)(a1 + 16);
  if (EnumCaseMultiPayload != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, v5, v8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v8, v8, "mac ios ", 0);
  v10 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, &v5[*(int *)(TupleTypeMetadata2 + 48)], v8);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v8);
}

uint64_t sub_2B0490(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for IdiomAwareValue<A>, a1);
}

uint64_t sub_2B04A0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v4, v5[0], v5[0]);
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v5);
    return 0;
  }
  return result;
}

uint64_t *sub_2B051C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  if (((v7 + v9) & ~v9) + v7 <= v7)
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = ((v7 + v8) & ~(unint64_t)v8) + v7;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || (unint64_t)(v12 + 1) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain(v16);
  }
  else
  {
    v17 = *((unsigned __int8 *)a2 + v12);
    if (v17 >= 2)
    {
      if (v12 <= 3)
        v18 = v12;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v19(a1, a2, *(_QWORD *)(a3 + 16));
    if (v17 == 1)
    {
      v19((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)(((unint64_t)a2 + v11) & v10), v5);
      *((_BYTE *)v4 + v12) = 1;
    }
    else
    {
      *((_BYTE *)v4 + v12) = 0;
    }
  }
  return v4;
}

uint64_t sub_2B066C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t result;
  uint64_t (*v11)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  if (((v5 + v6) & ~v6) + v5 > v5)
    v5 += (v5 + v6) & ~v6;
  v8 = *(unsigned __int8 *)(a1 + v5);
  if (v8 >= 2)
  {
    if (v5 <= 3)
      v9 = v5;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  result = v11(a1, *(_QWORD *)(a2 + 16));
  if (v8 == 1)
    return v11((v7 + a1) & ~v6, v3);
  return result;
}

uint64_t sub_2B077C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  char v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 <= v7)
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = ((v7 + v8) & ~v8) + v7;
  v11 = *(unsigned __int8 *)(a2 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v13(a1, a2, *(_QWORD *)(a3 + 16));
  if (v11 == 1)
  {
    v13((v9 + a1) & ~v8, (v9 + a2) & ~v8, v5);
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  *(_BYTE *)(a1 + v10) = v14;
  return a1;
}

uint64_t sub_2B0894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  unsigned int v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 <= v7)
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = ((v7 + v8) & ~v8) + v7;
    v11 = *(unsigned __int8 *)(a1 + v10);
    if (v11 >= 2)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    v13 = ~v8;
    v14 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v14(a1, *(_QWORD *)(a3 + 16));
    if (v11 == 1)
      v14((v9 + a1) & v13, v5);
    v15 = *(unsigned __int8 *)(a2 + v10);
    if (v15 >= 2)
    {
      if (v10 <= 3)
        v16 = v10;
      else
        v16 = 4;
      __asm { BR              X11 }
    }
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v17(a1, a2, v5);
    if (v15 == 1)
    {
      v17((v9 + a1) & v13, (v9 + a2) & v13, v5);
      v18 = 1;
    }
    else
    {
      v18 = 0;
    }
    *(_BYTE *)(a1 + v10) = v18;
  }
  return a1;
}

uint64_t sub_2B0A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  char v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 <= v7)
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = ((v7 + v8) & ~v8) + v7;
  v11 = *(unsigned __int8 *)(a2 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v13(a1, a2, *(_QWORD *)(a3 + 16));
  if (v11 == 1)
  {
    v13((v9 + a1) & ~v8, (v9 + a2) & ~v8, v5);
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  *(_BYTE *)(a1 + v10) = v14;
  return a1;
}

uint64_t sub_2B0B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  unsigned int v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 <= v7)
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = ((v7 + v8) & ~v8) + v7;
    v11 = *(unsigned __int8 *)(a1 + v10);
    if (v11 >= 2)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    v13 = ~v8;
    v14 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v14(a1, *(_QWORD *)(a3 + 16));
    if (v11 == 1)
      v14((v9 + a1) & v13, v5);
    v15 = *(unsigned __int8 *)(a2 + v10);
    if (v15 >= 2)
    {
      if (v10 <= 3)
        v16 = v10;
      else
        v16 = 4;
      __asm { BR              X11 }
    }
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v17(a1, a2, v5);
    if (v15 == 1)
    {
      v17((v9 + a1) & v13, (v9 + a2) & v13, v5);
      v18 = 1;
    }
    else
    {
      v18 = 0;
    }
    *(_BYTE *)(a1 + v10) = v18;
  }
  return a1;
}

uint64_t sub_2B0D2C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  int v8;
  unsigned int v10;
  int v11;
  unsigned int v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = ((v4 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v5 > v4)
    v4 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v6 = v4 + 1;
  v7 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v10 = ((a2 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = *(_DWORD *)(a1 + v6);
      if (!v8)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      v8 = *(unsigned __int16 *)(a1 + v6);
      if (!*(_WORD *)(a1 + v6))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_21:
      v12 = *(unsigned __int8 *)(a1 + v4);
      if (v12 >= 2)
        return (v12 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (!*(_BYTE *)(a1 + v6))
    goto LABEL_21;
LABEL_14:
  v11 = (v8 - 1) << v7;
  if (v6 > 3)
    v11 = 0;
  if (!(_DWORD)v6)
    return (v11 + 255);
  if (v6 > 3)
    LODWORD(v6) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2B0DFC + 4 * byte_305C48[(v6 - 1)]))();
}

void sub_2B0E48(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v7 <= v6)
    v7 = v6;
  v8 = v7 + 1;
  if (a3 < 0xFF)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 + ~(-1 << (8 * v8)) - 254) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = &dword_4;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = &dword_0 + 1;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v10 = a2 - 255;
  if (v8 < 4)
  {
    if ((_DWORD)v7 != -1)
    {
      v12 = v10 & ~(-1 << (8 * v8));
      bzero(a1, v8);
      if ((_DWORD)v8 == 3)
      {
        *a1 = v12;
        *((_BYTE *)a1 + 2) = BYTE2(v12);
      }
      else if ((_DWORD)v8 == 2)
      {
        *a1 = v12;
      }
      else
      {
        *(_BYTE *)a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v7 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

uint64_t sub_2B0FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = ((v3 + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v4 > v3)
    v3 = v4;
  if (*(unsigned __int8 *)(a1 + v3) < 2u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v5 = v3;
  else
    v5 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2B1050 + 4 * byte_305C56[v5]))();
}

void sub_2B1098(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  size_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = ((v5 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
  if (a2 > 1)
  {
    if (v6 <= v5)
      v7 = v5;
    else
      v7 = v6;
    v8 = a2 - 2;
    if (v7 < 4)
    {
      v9 = v8 >> (8 * v7);
      v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if ((_DWORD)v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    if (v6 > v5)
      v5 = v6;
    a1[v5] = a2;
  }
}

void sub_2B1174(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  char *v7;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  char v34[24];
  _QWORD v35[5];

  v7 = v6;
  v14 = (uint64_t *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViews];
  swift_beginAccess(v14, v34, 0, 0);
  v15 = *v14;
  swift_bridgeObjectRetain(*v14);
  v16 = sub_17C0DC((uint64_t)a1, v15);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) == 0)
  {
    swift_beginAccess(v14, v35, 33, 0);
    v17 = a1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)((char *)&dword_10 + (*v14 & 0xFFFFFFFFFFFFFF8));
    v18 = *(_QWORD *)((char *)&dword_18 + (*v14 & 0xFFFFFFFFFFFFFF8));
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v20);
    v21 = swift_endAccess(v35);
    v22 = NSObject.hashValue.getter(v21);
    *(double *)v35 = a3;
    *(double *)&v35[1] = a4;
    *(double *)&v35[2] = a5;
    *(double *)&v35[3] = a6;
    v35[4] = a2;
    v23 = &v7[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViewSettings];
    swift_beginAccess(&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViewSettings], v33, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v23);
    v32 = *(_QWORD *)v23;
    *(_QWORD *)v23 = 0x8000000000000000;
    sub_15F5C0((uint64_t)v35, v22, isUniquelyReferenced_nonNull_native);
    v25 = *(_QWORD *)v23;
    *(_QWORD *)v23 = v32;
    swift_bridgeObjectRelease(v25);
    swift_endAccess(v33);
    objc_msgSend(v17, "setAlpha:", 0.0);
    v26 = NSObject.hashValue.getter(objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0));
    v27 = &v7[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hiddenViews];
    swift_beginAccess(&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hiddenViews], v33, 33, 0);
    v28 = *(_QWORD **)v27;
    v29 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v27);
    *(_QWORD *)v27 = v28;
    if ((v29 & 1) == 0)
    {
      v28 = sub_20F39C(0, v28[2] + 1, 1, v28);
      *(_QWORD *)v27 = v28;
    }
    v31 = v28[2];
    v30 = v28[3];
    if (v31 >= v30 >> 1)
    {
      v28 = sub_20F39C((_QWORD *)(v30 > 1), v31 + 1, 1, v28);
      *(_QWORD *)v27 = v28;
    }
    v28[2] = v31 + 1;
    v28[v31 + 4] = v26;
    swift_endAccess(v33);
    objc_msgSend(v7, "addSubview:", v17);
  }
}

void sub_2B13E8(void *a1, void (*a2)(__n128), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  double *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  Class isa;
  void *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void **v59;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  char v65[32];

  v4 = v3;
  v8 = (_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hiddenViews);
  swift_beginAccess(v8, &v59, 33, 0);
  v9 = a1;
  sub_2B2AE8(v8);
  v11 = v10;

  v12 = *(_QWORD *)(*v8 + 16);
  if (v12 < v11)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  sub_E2C40(v11, v12);
  swift_endAccess(&v59);
  v13 = (uint64_t *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViews);
  swift_beginAccess(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViews, v65, 0, 0);
  v14 = *v13;
  swift_bridgeObjectRetain(*v13);
  sub_8FCE0((uint64_t)v9, v14);
  v16 = v15;
  v18 = v17;
  v20 = swift_bridgeObjectRelease(v14);
  if ((v18 & 1) == 0)
  {
    v21 = OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentView;
    v22 = *(void **)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentView);
    if (!v22
      || (sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr),
          v23 = v9,
          v24 = v22,
          v25 = static NSObject.== infix(_:_:)(v23, v24),
          v23,
          v24,
          (v25 & 1) == 0))
    {
      v26 = NSObject.hashValue.getter(v19);
      v27 = (uint64_t *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViewSettings);
      swift_beginAccess(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViewSettings, &v59, 32, 0);
      v28 = *v27;
      if (*(_QWORD *)(v28 + 16))
      {
        v29 = sub_36F84(v26);
        if ((v30 & 1) != 0)
        {
          v31 = (double *)(*(_QWORD *)(v28 + 56) + 40 * v29);
          v32 = *v31;
          v33 = v31[1];
          v34 = v31[2];
          v35 = v31[3];
          swift_endAccess(&v59);
          v36 = *(void **)(v4 + v21);
          if (v36)
          {
            v37 = *v13;
            swift_bridgeObjectRetain(*v13);
            v38 = v36;
            sub_8FCE0((uint64_t)v38, v37);
            v40 = v39;
            v42 = v41;
            swift_bridgeObjectRelease(v37);
            if ((v42 & 1) != 0)
            {
              if (v16 <= 0)
                goto LABEL_10;
            }
            else if (v40 >= v16)
            {
LABEL_10:
              v43 = 0;
LABEL_19:
              sub_2B1E20(v38, v9, v43, a2, a3);

              return;
            }
            v43 = 1;
            goto LABEL_19;
          }
          objc_msgSend(v9, "setAlpha:", 0.0);
          v44 = UIView.layoutMarginsSubviewConstraints(_:insets:edges:)(v32, v33, v34, v35);
          v45 = OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentViewConstraints;
          v46 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentViewConstraints);
          *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentViewConstraints) = v44;
          swift_bridgeObjectRelease(v46);
          v47 = *(_QWORD *)(v4 + v45);
          if (v47)
          {
            v48 = (void *)objc_opt_self(NSLayoutConstraint);
            sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
            swift_bridgeObjectRetain(v47);
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v48, "activateConstraints:", isa, swift_bridgeObjectRelease(v47).n128_f64[0]);

            objc_msgSend(v9, "layoutIfNeeded");
            v50 = *(void **)(v4 + v21);
            *(_QWORD *)(v4 + v21) = v9;

            v51 = (void *)objc_opt_self(UIView);
            v52 = swift_allocObject(&unk_390F30, 24, 7);
            *(_QWORD *)(v52 + 16) = v9;
            v63 = sub_AF734;
            v64 = v52;
            v59 = _NSConcreteStackBlock;
            v60 = 1107296256;
            v61 = sub_24360;
            v62 = &block_descriptor_12_2;
            v53 = _Block_copy(&v59);
            v54 = v64;
            v55 = v9;
            swift_release(v54);
            v56 = swift_allocObject(&unk_390F80, 32, 7);
            *(_QWORD *)(v56 + 16) = a2;
            *(_QWORD *)(v56 + 24) = a3;
            v63 = sub_437CC;
            v64 = v56;
            v59 = _NSConcreteStackBlock;
            v60 = 1107296256;
            v61 = sub_1E3D64;
            v62 = &block_descriptor_18_1;
            v57 = _Block_copy(&v59);
            v58 = v64;
            sub_2C690((uint64_t)a2, a3);
            swift_release(v58);
            objc_msgSend(v51, "animateWithDuration:delay:options:animations:completion:", 6, v53, v57, 0.3, 0.0);
            _Block_release(v57);
            _Block_release(v53);
            return;
          }
          goto LABEL_21;
        }
      }
      v20 = swift_endAccess(&v59);
    }
  }
  if (a2)
    a2(v20);
}

void *sub_2B1834(void *a1, void (*a2)(__n128), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  id v35;
  _QWORD *v36;
  void *v37;
  _QWORD *v38;
  void **aBlock;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  _QWORD *v45;
  char v46[24];

  v4 = v3;
  v8 = NSObject.hashValue.getter(a1);
  v9 = (_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hiddenViews);
  swift_beginAccess(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hiddenViews, &aBlock, 33, 0);
  v10 = (_QWORD *)*v9;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
  *v9 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_20F39C(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_20F39C((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v13 + 1;
  v10[v13 + 4] = v8;
  v14 = swift_endAccess(&aBlock);
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentView;
  v16 = *(void **)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentView);
  if (!v16)
    goto LABEL_11;
  sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
  v17 = v16;
  if ((static NSObject.== infix(_:_:)(v17, a1) & 1) == 0)
  {

LABEL_11:
    if (a2)
      a2(v14);
    return 0;
  }
  v18 = (uint64_t *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViews);
  swift_beginAccess(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViews, v46, 0, 0);
  v19 = *v18;
  swift_bridgeObjectRetain(*v18);
  sub_8FCE0((uint64_t)a1, v19);
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRelease(v19);
  if ((v23 & 1) != 0 || (v24 = (void *)sub_2B1CC0(v21)) == 0)
  {
    v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentViewConstraints;
    v27 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentViewConstraints);
    if (v27)
      v28 = *(_QWORD **)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentViewConstraints);
    else
      v28 = _swiftEmptyArrayStorage;
    v29 = *(void **)(v4 + v15);
    *(_QWORD *)(v4 + v15) = 0;
    swift_bridgeObjectRetain(v27);

    v30 = *(_QWORD *)(v4 + v26);
    *(_QWORD *)(v4 + v26) = 0;
    swift_bridgeObjectRelease(v30);
    v31 = (void *)objc_opt_self(UIView);
    v32 = swift_allocObject(&unk_390E90, 24, 7);
    *(_QWORD *)(v32 + 16) = a1;
    v44 = sub_EC67C;
    v45 = (_QWORD *)v32;
    aBlock = _NSConcreteStackBlock;
    v41 = 1107296256;
    v42 = sub_24360;
    v43 = &block_descriptor_72;
    v33 = _Block_copy(&aBlock);
    v34 = v45;
    v35 = a1;
    swift_release(v34);
    v36 = (_QWORD *)swift_allocObject(&unk_390EE0, 40, 7);
    v36[2] = v28;
    v36[3] = a2;
    v36[4] = a3;
    v44 = sub_2B2940;
    v45 = v36;
    aBlock = _NSConcreteStackBlock;
    v41 = 1107296256;
    v42 = sub_1E3D64;
    v43 = &block_descriptor_6_9;
    v37 = _Block_copy(&aBlock);
    v38 = v45;
    sub_2C690((uint64_t)a2, a3);
    swift_release(v38);
    objc_msgSend(v31, "animateWithDuration:delay:options:animations:completion:", 6, v33, v37, 0.3, 0.0);

    _Block_release(v37);
    _Block_release(v33);
    return 0;
  }
  v25 = v24;
  sub_2B13E8(v24, a2, a3);

  return v25;
}

uint64_t sub_2B1CC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViews);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViews, v15, 0, 0);
  v4 = *v3;
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hiddenViews);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hiddenViews, v14, 0, 0);
  v6 = *v5;
  swift_bridgeObjectRetain(*v5);
  swift_bridgeObjectRetain(v4);
  v8 = (uint64_t)sub_2B294C(v7, v6);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  if (!((unint64_t)v8 >> 62))
  {
    result = *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8));
    if (result >= 1)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease(v8);
    return 0;
  }
  if (v8 < 0)
    v13 = v8;
  else
    v13 = v8 & 0xFFFFFFFFFFFFFF8;
  result = _CocoaArrayWrapper.endIndex.getter(v13);
  if (result < 1)
    goto LABEL_15;
LABEL_3:
  v10 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (result < v10)
  {
    v10 = a1 - 1;
    if (__OFSUB__(a1, 1))
      goto LABEL_21;
  }
  result = v10 % result;
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v8);
    goto LABEL_10;
  }
  if (result < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)result < *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
  {
    v11 = *(id *)(v8 + 8 * result + 32);
LABEL_10:
    v12 = v11;
    swift_bridgeObjectRelease(v8);
    return (uint64_t)v12;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

void sub_2B1E20(void *a1, void *a2, char a3, void (*a4)(__n128), uint64_t a5)
{
  char *v5;
  void *v6;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  Class isa;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Class v40;
  Class v41;
  Class v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  char *v48;
  _QWORD *v49;
  void *v50;
  _QWORD *v51;
  id v52;
  __n128 v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  void **aBlock;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  _QWORD *v67;
  _OWORD v68[2];
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  v6 = v5;
  v12 = NSObject.hashValue.getter(a1);
  v13 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViewSettings];
  swift_beginAccess(&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_hostedViewSettings], &aBlock, 32, 0);
  v14 = *(_QWORD *)v13;
  if (!*(_QWORD *)(*(_QWORD *)v13 + 16))
    goto LABEL_9;
  v15 = sub_36F84(v12);
  if ((v16 & 1) == 0)
    goto LABEL_9;
  v17 = *(_QWORD *)(v14 + 56) + 40 * v15;
  v18 = *(_OWORD *)(v17 + 16);
  v68[0] = *(_OWORD *)v17;
  v68[1] = v18;
  v69 = *(_QWORD *)(v17 + 32);
  swift_endAccess(&aBlock);
  v20 = NSObject.hashValue.getter(v19);
  swift_beginAccess(v13, &aBlock, 32, 0);
  v21 = *(_QWORD *)v13;
  if (!*(_QWORD *)(*(_QWORD *)v13 + 16))
    goto LABEL_9;
  v22 = sub_36F84(v20);
  if ((v23 & 1) != 0)
  {
    v24 = *(_QWORD *)(v21 + 56) + 40 * v22;
    v25 = *(_OWORD *)(v24 + 16);
    v70 = *(_OWORD *)v24;
    v71 = v25;
    v72 = *(_QWORD *)(v24 + 32);
    swift_endAccess(&aBlock);
    v57 = a3 & 1;
    v26 = sub_2B23CC(a2, (uint64_t)&v70, a3 & 1);
    v27 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    v59 = v26;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v60 = v27;
    objc_msgSend(v27, "activateConstraints:", isa);

    v29 = (void *)objc_opt_self(UIView);
    v30 = swift_allocObject(&unk_390FD0, 24, 7);
    *(_QWORD *)(v30 + 16) = v6;
    v31 = swift_allocObject(&unk_390FF8, 32, 7);
    *(_QWORD *)(v31 + 16) = sub_27F75C;
    *(_QWORD *)(v31 + 24) = v30;
    v66 = sub_101EC;
    v67 = (_QWORD *)v31;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_920D4;
    v65 = &block_descriptor_27_1;
    v32 = _Block_copy(&aBlock);
    v33 = v67;
    v34 = v6;
    swift_retain(v31);
    v61 = v29;
    objc_msgSend(v29, "performWithoutAnimation:", v32, swift_release(v33).n128_f64[0]);
    _Block_release(v32);
    LOBYTE(v32) = swift_isEscapingClosureAtFileLocation(v31, "", 121, 206, 40, 1);
    swift_release(v31);
    if ((v32 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v56 = v30;
      v35 = sub_2B23CC(a1, (uint64_t)v68, v57 ^ 1u);
      v36 = UIView.layoutMarginsSubviewConstraints(_:insets:edges:)(*(double *)&v70, *((double *)&v70 + 1), *(double *)&v71, *((double *)&v71 + 1));
      aBlock = (void **)v35;
      v58 = v35;
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v36);
      v55 = v36;
      sub_1F6D9C(v37);
      v54 = aBlock;
      v38 = OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentViewConstraints;
      v39 = *(_QWORD *)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentViewConstraints];
      if (v39)
      {
        swift_bridgeObjectRetain(*(_QWORD *)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentViewConstraints]);
        v40 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v60, "deactivateConstraints:", v40, swift_bridgeObjectRelease(v39).n128_f64[0]);

      }
      v41 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v60, "deactivateConstraints:", v41, swift_bridgeObjectRelease(v59).n128_f64[0]);

      v42 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v60, "activateConstraints:", v42, swift_bridgeObjectRelease(v54).n128_f64[0]);

      v43 = *(_QWORD *)&v34[v38];
      *(_QWORD *)&v34[v38] = v55;
      swift_bridgeObjectRelease(v43);
      v44 = *(void **)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentView];
      *(_QWORD *)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews9CycleView_currentView] = a2;

      objc_msgSend(a2, "setAlpha:", 1.0);
      v45 = swift_allocObject(&unk_391048, 24, 7);
      *(_QWORD *)(v45 + 16) = v34;
      v66 = sub_2B2CF0;
      v67 = (_QWORD *)v45;
      aBlock = _NSConcreteStackBlock;
      v63 = 1107296256;
      v64 = sub_24360;
      v65 = &block_descriptor_33_3;
      v46 = _Block_copy(&aBlock);
      v47 = v67;
      v48 = v34;
      swift_release(v47);
      v49 = (_QWORD *)swift_allocObject(&unk_391098, 48, 7);
      v49[2] = a1;
      v49[3] = v58;
      v49[4] = a4;
      v49[5] = a5;
      v66 = sub_2B2CC0;
      v67 = v49;
      aBlock = _NSConcreteStackBlock;
      v63 = 1107296256;
      v64 = sub_1E3D64;
      v65 = &block_descriptor_39_0;
      v50 = _Block_copy(&aBlock);
      v51 = v67;
      v52 = a1;
      sub_2C690((uint64_t)a4, a5);
      swift_release(v51);
      objc_msgSend(v61, "animateWithDuration:delay:options:animations:completion:", 6, v46, v50, 0.3, 0.0);
      _Block_release(v50);
      _Block_release(v46);
      swift_release(v56);
    }
  }
  else
  {
LABEL_9:
    v53 = swift_endAccess(&aBlock);
    if (a4)
      a4(v53);
  }
}

void sub_2B2340(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v4;
  Class isa;

  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "deactivateConstraints:", isa);

  if (a3)
    a3();
}

uint64_t sub_2B23CC(void *a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v9 = swift_allocObject(v8, 56, 7);
  *(_OWORD *)(v9 + 16) = xmmword_2EFC80;
  v10 = objc_msgSend(a1, "leadingAnchor");
  v11 = *(_QWORD *)(a2 + 32);
  if ((v11 & 2) != 0)
  {
    v13 = objc_msgSend(v4, "layoutMarginsGuide");
    v12 = objc_msgSend(v13, "leadingAnchor");

  }
  else
  {
    v12 = objc_msgSend(v4, "leadingAnchor");
  }
  v14 = *(double *)a2;
  v15 = *(double *)(a2 + 16);
  v16 = *(double *)(a2 + 24);
  v17 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v12, *(double *)(a2 + 8));

  *(_QWORD *)(v9 + 32) = v17;
  v18 = objc_msgSend(a1, "trailingAnchor");
  if ((v11 & 8) != 0)
  {
    v20 = objc_msgSend(v4, "layoutMarginsGuide");
    v19 = objc_msgSend(v20, "trailingAnchor");

  }
  else
  {
    v19 = objc_msgSend(v4, "trailingAnchor");
  }
  v21 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, -v16);

  *(_QWORD *)(v9 + 40) = v21;
  v22 = objc_msgSend(a1, "heightAnchor");
  v23 = objc_msgSend(v4, "heightAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, -(v14 + v15));

  *(_QWORD *)(v9 + 48) = v24;
  v34 = v9;
  specialized Array._endMutation()(v25);
  if ((a3 & 1) != 0)
  {
    v26 = objc_msgSend(a1, "topAnchor");
    v27 = objc_msgSend(v4, "bottomAnchor");
  }
  else
  {
    v26 = objc_msgSend(a1, "bottomAnchor");
    v27 = objc_msgSend(v4, "topAnchor");
  }
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
  v31 = *(_QWORD *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8));
  v30 = *(_QWORD *)((char *)&dword_18 + (v34 & 0xFFFFFFFFFFFFFF8));
  if (v31 >= v30 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
  v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v28);
  specialized Array._endMutation()(v32);
  return v34;
}

void sub_2B2718(int a1, id a2, uint64_t a3, void (*a4)(void))
{
  void *v5;
  Class isa;

  objc_msgSend(a2, "setAlpha:", 0.0);
  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "deactivateConstraints:", isa);

  if (a4)
    a4();
}

uint64_t type metadata accessor for CycleView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews9CycleView);
}

uint64_t getEnumTagSinglePayload for CycleView.LayoutSettings(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CycleView.LayoutSettings(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CycleView.LayoutSettings()
{
  return &type metadata for CycleView.LayoutSettings;
}

uint64_t sub_2B28D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double block_copy_helper_72(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_72(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2B290C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_2B2940(uint64_t a1)
{
  uint64_t v1;

  sub_2B2340(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

_QWORD *sub_2B294C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;

  v3 = a1;
  v22 = &_swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      v21 = v3 & 0xC000000000000001;
      v20 = v3 & 0xFFFFFFFFFFFFFF8;
      v19 = v3;
      v6 = v3 + 32;
      while (v21)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v19);
LABEL_9:
        v10 = v9;
        if (__OFADD__(v5++, 1))
          goto LABEL_19;
        v12 = *(_QWORD *)(a2 + 16);
        if (v12)
        {
          v13 = v4;
          v14 = swift_bridgeObjectRetain(a2);
          v15 = 0;
          while (1)
          {
            v16 = *(_QWORD *)(a2 + 8 * v15 + 32);
            v3 = (uint64_t)v10;
            v14 = NSObject.hashValue.getter(v14);
            if (v14 == v16)
              break;
            if (v12 == ++v15)
            {
              swift_bridgeObjectRelease(a2);
              v4 = v13;
              goto LABEL_4;
            }
          }

          swift_bridgeObjectRelease(a2);
          v4 = v13;
        }
        else
        {
LABEL_4:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v7 = v22[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
          v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v10);
          v3 = (uint64_t)&v22;
          specialized ContiguousArray._endMutation()(v8);
        }
        if (v5 == v4)
          return v22;
      }
      if (v5 < *(_QWORD *)(v20 + 16))
        break;
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      if (v3 < 0)
        v18 = v3;
      else
        v18 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    v9 = *(id *)(v6 + 8 * v5);
    goto LABEL_9;
  }
  return &_swiftEmptyArrayStorage;
}

void sub_2B2AE8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t i;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (_QWORD *)*a1;
  v2 = *(_QWORD *)(*a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(*a1);
    v5 = 0;
    while (1)
    {
      v6 = v1[v5 + 4];
      v4 = NSObject.hashValue.getter(v4);
      if (v6 == v4)
        break;
      if (v2 == ++v5)
      {
        swift_bridgeObjectRelease(v1);
        return;
      }
    }
    swift_bridgeObjectRelease(v1);
    if (!__OFADD__(v5, 1))
    {
      v8 = v1[2];
      if (v5 + 1 == v8)
        return;
      for (i = v5 + 5; ; ++i)
      {
        v12 = i - 4;
        if (i - 4 >= v8)
          break;
        v13 = v1[i];
        isUniquelyReferenced_nonNull_native = NSObject.hashValue.getter(isUniquelyReferenced_nonNull_native);
        if (v13 != isUniquelyReferenced_nonNull_native)
        {
          if (v12 != v5)
          {
            if ((v5 & 0x8000000000000000) != 0)
              goto LABEL_24;
            v14 = v1[2];
            if (v5 >= v14)
              goto LABEL_25;
            if (v12 >= v14)
              goto LABEL_26;
            v15 = v1[v5 + 4];
            v16 = v1[i];
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v1);
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              isUniquelyReferenced_nonNull_native = (uint64_t)sub_E1D20(v1);
              v1 = (_QWORD *)isUniquelyReferenced_nonNull_native;
            }
            v1[v5 + 4] = v16;
            v1[i] = v15;
            *a1 = v1;
          }
          if (__OFADD__(v5++, 1))
            goto LABEL_23;
        }
        v8 = v1[2];
        v11 = i - 3;
        if (v11 == v8)
          return;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_2B2C48()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2B2C74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2B2C84()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_2B2CC0(int a1)
{
  uint64_t v1;

  sub_2B2718(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

uint64_t sub_2B2D0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 80) = a1;
  swift_release(v4);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  swift_retain(a1);
  if (Strong)
  {
    sub_10C3FC(a1);
    swift_unknownObjectRelease(Strong);
  }
  v6 = sub_2B3924(a1);
  v7 = LegacyEpisodeLockup.mediaType.getter(v6);
  v8 = *(unsigned __int8 *)(v2 + 72);
  *(_BYTE *)(v2 + 72) = v7;
  sub_2B3704(v8);
  sub_2B3CA0(a1);
  return sub_2173C4(a1);
}

uint64_t sub_2B2DA4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;

  v30 = type metadata accessor for Glyph.Settings(0);
  v0 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Glyph(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  v13 = (int *)type metadata accessor for DownloadButton.Style(0);
  __swift_allocate_value_buffer((uint64_t)v13, qword_3E0A28);
  v14 = __swift_project_value_buffer((uint64_t)v13, (uint64_t)qword_3E0A28);
  v15 = static Glyph.PlayControls.Medium.notDownloaded.getter();
  v16 = static Glyph.PlayControls.Medium.downloaded.getter(v15);
  Glyph.settings.getter(v16);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v18 = (void *)Glyph.Settings.font.getter(v17);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v0 + 8))(v2, v30);
  if (v18)
  {
    v20 = UIFont.metrics.getter(v19);

  }
  else
  {
    v20 = 0;
  }
  static Glyph.PlayControls.Medium.downloaded.getter(v19);
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v21(v14, v12, v3);
  v22 = v14 + v13[5];
  __asm { FMOV            V0.2D, #12.0 }
  *(_OWORD *)v22 = _Q0;
  *(_BYTE *)(v22 + 16) = 0;
  *(_OWORD *)(v22 + 24) = xmmword_2F15B0;
  *(_QWORD *)(v22 + 40) = 0;
  *(_QWORD *)(v22 + 48) = 0;
  *(_BYTE *)(v22 + 56) = 1;
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  *(_QWORD *)(v22 + 80) = 0;
  *(_QWORD *)(v22 + 88) = v20;
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v21)(v14 + v13[6], v6, v3);
  *(_BYTE *)(v14 + v13[7]) = 0;
  return result;
}

uint64_t sub_2B2F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v17;

  v0 = type metadata accessor for Glyph(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - v5;
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - v8;
  v10 = (int *)type metadata accessor for PlayControlsIconsSet(0);
  __swift_allocate_value_buffer((uint64_t)v10, qword_3FD888);
  v11 = __swift_project_value_buffer((uint64_t)v10, (uint64_t)qword_3FD888);
  v12 = static Glyph.PlayControls.Medium.bookmarked.getter();
  static Glyph.PlayControls.Medium.notBookmarked.getter(v12);
  if (qword_3CFDC8 != -1)
    swift_once(&qword_3CFDC8, sub_2B2DA4);
  v13 = type metadata accessor for DownloadButton.Style(0);
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_3E0A28);
  static Glyph.PlayControls.Medium.more.getter();
  v15 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 32);
  v15(v11, v9, v0);
  v15(v11 + v10[5], v6, v0);
  sub_19C4C(v14, v11 + v10[6], type metadata accessor for DownloadButton.Style);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(v11 + v10[7], v3, v0);
}

uint64_t sub_2B310C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, char *, uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v19;

  v0 = type metadata accessor for Glyph(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v19 - v5;
  v7 = (int *)type metadata accessor for DownloadButton.Style(0);
  __swift_allocate_value_buffer((uint64_t)v7, qword_3E0A40);
  v8 = __swift_project_value_buffer((uint64_t)v7, (uint64_t)qword_3E0A40);
  v9 = static Glyph.PlayControls.Large.notDownloaded.getter();
  static Glyph.PlayControls.Large.downloaded.getter(v9);
  v10 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 32);
  v10(v8, v6, v0);
  v11 = v8 + v7[5];
  __asm { FMOV            V0.2D, #13.0 }
  *(_OWORD *)v11 = _Q0;
  *(_BYTE *)(v11 + 16) = 0;
  *(_OWORD *)(v11 + 24) = xmmword_305D60;
  __asm { FMOV            V0.2D, #4.5 }
  *(_OWORD *)(v11 + 40) = _Q0;
  *(_BYTE *)(v11 + 56) = 0;
  *(_QWORD *)(v11 + 64) = 0x3FE0000000000000;
  *(_QWORD *)(v11 + 72) = 0;
  *(_QWORD *)(v11 + 80) = 0;
  *(_QWORD *)(v11 + 88) = 0;
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v10)(v8 + v7[6], v4, v0);
  *(_BYTE *)(v8 + v7[7]) = 0;
  return result;
}

uint64_t sub_2B3230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v17;

  v0 = type metadata accessor for Glyph(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v17 - v6;
  __chkstk_darwin(v5);
  v9 = (char *)&v17 - v8;
  v10 = (int *)type metadata accessor for PlayControlsIconsSet(0);
  __swift_allocate_value_buffer((uint64_t)v10, qword_3FD8A0);
  v11 = __swift_project_value_buffer((uint64_t)v10, (uint64_t)qword_3FD8A0);
  v12 = static Glyph.PlayControls.Large.bookmarked.getter();
  static Glyph.PlayControls.Large.notBookmarked.getter(v12);
  if (qword_3CFDD8 != -1)
    swift_once(&qword_3CFDD8, sub_2B310C);
  v13 = type metadata accessor for DownloadButton.Style(0);
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_3E0A40);
  static Glyph.PlayControls.Large.more.getter();
  v15 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 32);
  v15(v11, v9, v0);
  v15(v11 + v10[5], v7, v0);
  sub_19C4C(v14, v11 + v10[6], type metadata accessor for DownloadButton.Style);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(v11 + v10[7], v4, v0);
}

double sub_2B33B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(unsigned __int8 *)(v1 + 56);
  *(_BYTE *)(v2 + 33) = v3;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge), "setUserInteractionEnabled:", v3);
    objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge), "setUserInteractionEnabled:", v3);
    swift_unknownObjectRelease(v5);
  }
  sub_2177B0();
  sub_217968(1);
  sub_217A74(1);
  return sub_2B3450();
}

double sub_2B3450()
{
  unsigned __int8 *v0;
  uint64_t Strong;
  double result;
  uint64_t v3;
  char *v4;
  unsigned __int8 *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  unsigned __int8 v10;
  char v11;
  unsigned __int8 v12;
  char v13;

  if (v0[58] == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
    if (!Strong)
      return result;
    v3 = Strong;
    v9 = 1;
    v8 = v0[96];
    v4 = &v9;
    v5 = &v8;
  }
  else
  {
    v6 = v0[56];
    v7 = swift_unknownObjectWeakLoadStrong(v0 + 16);
    v3 = v7;
    if (v6 == 1)
    {
      if (!v7)
        return result;
      v11 = 2;
      v10 = v0[96];
      v4 = &v11;
      v5 = &v10;
    }
    else
    {
      if (!v7)
        return result;
      v13 = 0;
      v12 = v0[96];
      v4 = &v13;
      v5 = &v12;
    }
  }
  sub_10CBD8(v4, v5);
  *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  return result;
}

void sub_2B3510(char a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char *v22;
  char *v23;

  v4 = v3;
  v7 = EpisodeMediaType.rawValue.getter(a2);
  v9 = v8;
  v10 = EpisodeMediaType.rawValue.getter(2);
  if (v7 == v10 && v9 == v11)
  {
    v15 = 2;
    swift_bridgeObjectRelease_n(v9, 2);
  }
  else
  {
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) != 0)
      v15 = 2;
    else
      v15 = a1 & 1;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 16);
  if (Strong)
  {
    v17 = Strong;
    sub_10C63C(v15, a3 & 1);
    swift_unknownObjectRelease(v17);
  }
  v18 = swift_unknownObjectWeakLoadStrong(v4 + 32);
  if (v18)
  {
    v19 = v18;
    v20 = v18 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playButtonState;
    *(_QWORD *)v20 = v15;
    *(_BYTE *)(v20 + 8) = 0;
    v23 = (char *)sub_201D4();
    v21 = *(_BYTE *)(v20 + 8);
    v22 = &v23[OBJC_IVAR____TtC23ShelfKitCollectionViews15GlyphPlayButton_playButtonState];
    *(_QWORD *)v22 = *(_QWORD *)v20;
    v22[8] = v21;
    sub_157A28();
    swift_unknownObjectRelease(v19);

  }
}

double sub_2B3668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 48);
  *(_BYTE *)(v2 + 34) = *(_BYTE *)(v1 + 58);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(unsigned __int8 *)(v2 + 33);
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge), "setUserInteractionEnabled:", v5);
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge), "setUserInteractionEnabled:", v5);
    swift_unknownObjectRelease(v4);
  }
  sub_2177B0();
  sub_217968(1);
  sub_217A74(1);
  return sub_2B3450();
}

double sub_2B3704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  double result;
  int v12;
  uint64_t Strong;
  uint64_t v14;
  void *v15;

  v3 = EpisodeMediaType.rawValue.getter(*(unsigned __int8 *)(v1 + 72));
  v5 = v4;
  v6 = EpisodeMediaType.rawValue.getter(a1);
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
    swift_bridgeObjectRelease(v5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
    if ((v10 & 1) == 0)
    {
      sub_2B3510(*(_BYTE *)(v1 + 73), *(unsigned __int8 *)(v1 + 72), *(_BYTE *)(v1 + 57));
      v12 = *(unsigned __int8 *)(v1 + 72);
      Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
      v14 = Strong;
      if (v12 == 2)
      {
        if (Strong)
        {
          sub_10CDA4();
LABEL_14:
          *(_QWORD *)&result = swift_unknownObjectRelease(v14).n128_u64[0];
        }
      }
      else if (Strong)
      {
        v15 = *(void **)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_infoLabel);
        if (v15)
          objc_msgSend(v15, "setHidden:", 1);
        goto LABEL_14;
      }
    }
  }
  return result;
}

_QWORD *PlayControlsPresenter.deinit()
{
  _QWORD *v0;

  sub_10DBC8((uint64_t)(v0 + 2));
  sub_10DBC8((uint64_t)(v0 + 4));
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  sub_FA4C((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_iconsSet, type metadata accessor for PlayControlsIconsSet);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_dependencyGraph));
  swift_release(*(_QWORD *)((char *)v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_episodeDownloadStateController));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)((char *)v0
                                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_libraryActionController));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)((char *)v0
                                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_episodeController));
  return v0;
}

uint64_t type metadata accessor for PlayControlsIconsSet(uint64_t a1)
{
  return sub_AE00(a1, qword_3E0AD8, (uint64_t)&nominal type descriptor for PlayControlsIconsSet);
}

uint64_t PlayControlsPresenter.__deallocating_deinit()
{
  uint64_t v0;

  PlayControlsPresenter.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

unint64_t sub_2B38E0()
{
  unint64_t result;

  result = qword_3E0A78;
  if (!qword_3E0A78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayControlsStyle, &type metadata for PlayControlsStyle);
    atomic_store(result, (unint64_t *)&qword_3E0A78);
  }
  return result;
}

uint64_t sub_2B3924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = dispatch thunk of LegacyLockup.playAction.getter(v6);
  if (v9)
  {
    v11 = v9;
    v43 = v9;
    v12 = type metadata accessor for Action(0);
    swift_retain(v11);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36A8);
    if (swift_dynamicCast(&v44, &v43, v12, v13, 0))
    {
      sub_1B738(&v44, (uint64_t)&v39);
      v14 = v41;
      v15 = v42;
      __swift_project_boxed_opaque_existential_1(&v39, v41);
      v16 = dispatch thunk of PlayEpisodeActionModel.playPauseAction.getter(v14, v15);
      swift_release(v11);
      v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction) = v16;
      swift_release(v17);
      __swift_destroy_boxed_opaque_existential_0(&v39);
      v18 = v43;
      goto LABEL_11;
    }
    v19 = swift_release(v43);
    v20 = type metadata accessor for FlowAction(0, v19);
    v21 = swift_dynamicCastClass(v11, v20);
    if (v21)
    {
      v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction) = v21;
      v18 = v22;
      goto LABEL_11;
    }
    v10 = swift_release(v11);
  }
  static Logger.playback.getter(v10);
  v23 = swift_retain_n(a1, 2);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v38 = v27;
    *(_QWORD *)&v44 = v27;
    *(_DWORD *)v26 = 136315138;
    v37 = v26 + 4;
    v39 = dispatch thunk of LegacyLockup.playAction.getter(v27);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0C50);
    v29 = String.init<A>(describing:)(&v39, v28);
    v31 = v30;
    v39 = sub_37E78(v29, v30, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v31);
    _os_log_impl(&dword_0, v24, v25, "We don't know how to handle this type of playAction %s", v26, 0xCu);
    v32 = v38;
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction) = 0;
LABEL_11:
  swift_release(v18);
  result = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (result)
  {
    v34 = result;
    v35 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction);
    if (v35)
    {
      *((_QWORD *)&v45 + 1) = type metadata accessor for Action(0);
      v46 = sub_221308();
      *(_QWORD *)&v44 = v35;
    }
    else
    {
      v46 = 0;
      v44 = 0u;
      v45 = 0u;
    }
    v36 = v34 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playPauseAction;
    swift_beginAccess(v34 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playPauseAction, &v39, 33, 0);
    swift_retain(v35);
    sub_2B4CDC((uint64_t)&v44, v36);
    swift_endAccess(&v39);
    swift_unknownObjectRelease(v34);
    return sub_D1D4((uint64_t)&v44, (uint64_t *)&unk_3D30D0);
  }
  return result;
}

void sub_2B3CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, __n128);
  __n128 v61;
  uint64_t v62;
  _QWORD v63[2];
  uint64_t v64;
  uint64_t v65[3];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v8);
  v10 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LibraryEpisodeLockup(0, v11);
  if (swift_dynamicCastClass(a1, v12))
  {
    v14 = swift_retain(a1);
    v15 = LibraryEpisodeLockup.uuid.getter(v14);
    v17 = v16;
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_dependencyGraph);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
    v20 = type metadata accessor for BaseObjectGraph(0);
    v21 = swift_retain(v18);
    inject<A, B>(_:from:)(v65, v19, v18, v19, v20, v21);
    v22 = v65[0];
    v23 = type metadata accessor for PlaybackStatusPresenter(0);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    v24 = sub_276AA0(v15, v17, v22);
    swift_release(v18);
    v24[5] = &off_3910D8;
    v25 = swift_unknownObjectWeakAssign(v24 + 4, v2);
    Strong = swift_unknownObjectWeakLoadStrong(v25);
    if (Strong)
    {
      v27 = Strong;
      v28 = v24[5];
      ObjectType = swift_getObjectType();
      v30 = (uint64_t)v24 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
      swift_beginAccess((char *)v24 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v65, 0, 0);
      sub_19C4C(v30, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
      v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v28 + 8);
      v32 = swift_retain(v2);
      v31(v10, ObjectType, v28, v32);
      swift_unknownObjectRelease(v27);
      sub_FA4C((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
      swift_release(a1);
      v33 = v2;
    }
    else
    {
      v33 = a1;
    }
    swift_release(v33);
    v45 = *(_QWORD *)(v2 + 64);
    *(_QWORD *)(v2 + 64) = v24;
    swift_release(v45);
  }
  else
  {
    v34 = LegacyLockup.adamId.getter(v13);
    if ((AdamID.isEmpty.getter(v34) & 1) != 0)
    {
      static Logger.playback.getter(v35);
      v36 = swift_retain_n(a1, 2);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(12, -1);
        v40 = swift_slowAlloc(32, -1);
        v64 = a1;
        v65[0] = v40;
        *(_DWORD *)v39 = 136315138;
        v63[1] = v39 + 4;
        v41 = type metadata accessor for LegacyEpisodeLockup(0);
        swift_retain(a1);
        v42 = String.init<A>(describing:)(&v64, v41);
        v44 = v43;
        v64 = sub_37E78(v42, v43, v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65);
        swift_release_n(a1, 2);
        swift_bridgeObjectRelease(v44);
        _os_log_impl(&dword_0, v37, v38, "We can't establish the play status of LegacyEpisodeLockup %s", v39, 0xCu);
        swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1, -1);
        swift_slowDealloc(v39, -1, -1);

      }
      else
      {

        swift_release_n(a1, 2);
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      v46 = LegacyLockup.adamId.getter(v35);
      v47 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_dependencyGraph);
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
      v49 = type metadata accessor for BaseObjectGraph(0);
      v50 = swift_retain(v47);
      inject<A, B>(_:from:)(v65, v48, v47, v48, v49, v50);
      v51 = v65[0];
      v52 = type metadata accessor for PlaybackStatusPresenter(0);
      swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
      v53 = sub_276978(v46, v51);
      swift_release(v47);
      v53[5] = &off_3910D8;
      v54 = swift_unknownObjectWeakAssign(v53 + 4, v2);
      v55 = swift_unknownObjectWeakLoadStrong(v54);
      if (v55)
      {
        v56 = v55;
        v57 = v53[5];
        v58 = swift_getObjectType();
        v59 = (uint64_t)v53 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
        swift_beginAccess((char *)v53 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v65, 0, 0);
        sub_19C4C(v59, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
        v60 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v57 + 8);
        v61 = swift_retain(v2);
        v60(v10, v58, v57, v61);
        swift_unknownObjectRelease(v56);
        sub_FA4C((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
        swift_release(v2);
      }
      v62 = *(_QWORD *)(v2 + 64);
      *(_QWORD *)(v2 + 64) = v53;
      swift_release(v62);
    }
  }
}

void sub_2B4174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  int EnumCaseMultiPayload;
  char v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C(a1, (uint64_t)v5, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v3);
  if (((1 << EnumCaseMultiPayload) & 0x33) != 0)
  {
LABEL_4:
    v8 = 0;
    v9 = *(unsigned __int8 *)(v1 + 73);
    *(_BYTE *)(v1 + 73) = 0;
    if (v9 != 1)
      return;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 2)
  {
    sub_D1D4((uint64_t)v5, &qword_3D0A50);
    goto LABEL_4;
  }
  v10 = v5[16];
  v8 = v10 ^ 1;
  v11 = *(unsigned __int8 *)(v1 + 73);
  *(_BYTE *)(v1 + 73) = v10 ^ 1;
  if (v10 != v11)
    return;
LABEL_5:
  sub_2B3510(v8, *(unsigned __int8 *)(v1 + 72), *(_BYTE *)(v1 + 57));
}

uint64_t storeEnumTagSinglePayload for PlayControlsStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2B42A8 + 4 * byte_305D75[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2B42DC + 4 * byte_305D70[v4]))();
}

uint64_t sub_2B42DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2B42E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2B42ECLL);
  return result;
}

uint64_t sub_2B42F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2B4300);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2B4304(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2B430C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayControlsStyle()
{
  return &type metadata for PlayControlsStyle;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlayControlsIconsSet(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v25;
  char *v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v23);
  }
  else
  {
    v7 = type metadata accessor for Glyph(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v8((uint64_t *)((char *)a1 + v9), (uint64_t *)((char *)a2 + v9), v7);
    v12 = (int *)type metadata accessor for DownloadButton.Style(0);
    v13 = v12[5];
    v14 = &v10[v13];
    v15 = &v11[v13];
    *(_OWORD *)v14 = *(_OWORD *)v15;
    v14[16] = v15[16];
    *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
    *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
    v14[56] = v15[56];
    v16 = (void *)*((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 9) = v16;
    v17 = (void *)*((_QWORD *)v15 + 10);
    v18 = (void *)*((_QWORD *)v15 + 11);
    *((_QWORD *)v14 + 10) = v17;
    *((_QWORD *)v14 + 11) = v18;
    v19 = v12[6];
    v25 = &v11[v19];
    v26 = &v10[v19];
    v20 = v16;
    v21 = v17;
    v22 = v18;
    v8((uint64_t *)v26, (uint64_t *)v25, v7);
    v10[v12[7]] = v11[v12[7]];
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
  }
  return a1;
}

uint64_t destroy for PlayControlsIconsSet(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  void (*v9)(uint64_t, uint64_t);

  v4 = type metadata accessor for Glyph(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v9(a1, v4);
  v9(a1 + a2[5], v4);
  v5 = a1 + a2[6];
  v9(v5, v4);
  v6 = type metadata accessor for DownloadButton.Style(0);
  v7 = (id *)(v5 + *(int *)(v6 + 20));

  v9(v5 + *(int *)(v6 + 24), v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + a2[7], v4);
}

uint64_t initializeWithCopy for PlayControlsIconsSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for DownloadButton.Style(0);
  v12 = v11[5];
  v13 = v9 + v12;
  v14 = v10 + v12;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  v15 = *(void **)(v14 + 72);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = v15;
  v17 = *(void **)(v14 + 80);
  v16 = *(void **)(v14 + 88);
  *(_QWORD *)(v13 + 80) = v17;
  *(_QWORD *)(v13 + 88) = v16;
  v18 = v11[6];
  v19 = v9 + v18;
  v20 = v10 + v18;
  v21 = v15;
  v22 = v17;
  v23 = v16;
  v7(v19, v20, v6);
  *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t assignWithCopy for PlayControlsIconsSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for DownloadButton.Style(0);
  v12 = v11[5];
  v13 = v9 + v12;
  v14 = v10 + v12;
  LOBYTE(v12) = *(_BYTE *)(v10 + v12 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_BYTE *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v15 = *(_OWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  *(_OWORD *)(v13 + 40) = v15;
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  v16 = *(void **)(v13 + 72);
  v17 = *(void **)(v14 + 72);
  *(_QWORD *)(v13 + 72) = v17;
  v18 = v17;

  v19 = *(void **)(v13 + 80);
  v20 = *(void **)(v14 + 80);
  *(_QWORD *)(v13 + 80) = v20;
  v21 = v20;

  v22 = *(void **)(v13 + 88);
  v23 = *(void **)(v14 + 88);
  *(_QWORD *)(v13 + 88) = v23;
  v24 = v23;

  v7(v9 + v11[6], v10 + v11[6], v6);
  *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t initializeWithTake for PlayControlsIconsSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for DownloadButton.Style(0);
  v12 = v11[5];
  v13 = (_OWORD *)(v9 + v12);
  v14 = (_OWORD *)(v10 + v12);
  v15 = v14[3];
  v13[2] = v14[2];
  v13[3] = v15;
  v16 = v14[5];
  v13[4] = v14[4];
  v13[5] = v16;
  v17 = v14[1];
  *v13 = *v14;
  v13[1] = v17;
  v7(v9 + v11[6], v10 + v11[6], v6);
  *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t assignWithTake for PlayControlsIconsSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  void *v16;
  void *v17;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for DownloadButton.Style(0);
  v12 = v11[5];
  v13 = v9 + v12;
  v14 = (_QWORD *)(v10 + v12);
  *(_OWORD *)v13 = *(_OWORD *)(v10 + v12);
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v10 + v12 + 16);
  *(_OWORD *)(v13 + 24) = *(_OWORD *)(v10 + v12 + 24);
  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v10 + v12 + 40);
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v10 + v12 + 56);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v10 + v12 + 64);
  v15 = *(void **)(v9 + v12 + 72);
  *(_QWORD *)(v13 + 72) = v14[9];

  v16 = *(void **)(v13 + 80);
  *(_QWORD *)(v13 + 80) = v14[10];

  v17 = *(void **)(v13 + 88);
  *(_QWORD *)(v13 + 88) = v14[11];

  v7(v9 + v11[6], v10 + v11[6], v6);
  *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayControlsIconsSet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2B4A68);
}

uint64_t sub_2B4A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for DownloadButton.Style(0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PlayControlsIconsSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2B4AE8);
}

uint64_t sub_2B4AE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Glyph(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for DownloadButton.Style(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2B4B64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  result = type metadata accessor for Glyph(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v6[0] = v4;
    v6[1] = v4;
    result = type metadata accessor for DownloadButton.Style(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(result - 8) + 64;
      v6[3] = v4;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_2B4BE8()
{
  return type metadata accessor for PlayControlsPresenter(0);
}

uint64_t type metadata accessor for PlayControlsPresenter(uint64_t a1)
{
  return sub_AE00(a1, qword_3E0B40, (uint64_t)&nominal type descriptor for PlayControlsPresenter);
}

uint64_t sub_2B4C04(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[18];

  v4[0] = &unk_305F38;
  v4[1] = &unk_305F38;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = &unk_305F50;
  v4[4] = &unk_305F50;
  v4[5] = &unk_305F50;
  v4[6] = &unk_305F68;
  v4[7] = &unk_305F80;
  v4[8] = &unk_305F50;
  v4[9] = &unk_305F68;
  v4[10] = &unk_305F68;
  v4[11] = &unk_305F98;
  result = type metadata accessor for PlayControlsIconsSet(319);
  if (v3 <= 0x3F)
  {
    v4[12] = *(_QWORD *)(result - 8) + 64;
    v4[13] = &unk_305F68;
    v4[14] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[15] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[16] = &unk_305FB0;
    v4[17] = &unk_305FB0;
    return swift_updateClassMetadata2(a1, 256, 18, v4, a1 + 80);
  }
  return result;
}

uint64_t method lookup function for PlayControlsPresenter(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PlayControlsPresenter);
}

uint64_t sub_2B4CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D30D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2B4D24(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18[2];

  v4 = v3;
  v7 = *a1;
  *(_QWORD *)(v4 + 24) = 0;
  swift_unknownObjectWeakInit(v4 + 16, 0);
  *(_QWORD *)(v4 + 40) = 0;
  swift_unknownObjectWeakInit(v4 + 32, 0);
  *(_WORD *)(v4 + 56) = 0;
  *(_BYTE *)(v4 + 58) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  *(_WORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction) = 0;
  *(_BYTE *)(v4 + 96) = v7;
  sub_19C4C(a2, v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_iconsSet, type metadata accessor for PlayControlsIconsSet);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_dependencyGraph) = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DCC08);
  v9 = type metadata accessor for BaseObjectGraph(0);
  v10 = swift_retain(a3);
  inject<A, B>(_:from:)(v18, v8, a3, v8, v9, v10);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_episodeDownloadStateController) = *(_QWORD *)&v18[0];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  inject<A, B>(_:from:)(v18, v11, a3, v11, v9, v12);
  sub_1B738(v18, v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_libraryActionController);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  inject<A, B>(_:from:)(v18, v13, a3, v13, v9, v14);
  sub_1B738(v18, v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_episodeController);
  v15 = type metadata accessor for EpisodeStateControlsPresenter();
  swift_allocObject(v15, 112, 7);
  v16 = sub_217CA8(v7 != 0, a3);
  sub_FA4C(a2, type metadata accessor for PlayControlsIconsSet);
  *(_QWORD *)(v4 + 48) = v16;
  return v4;
}

ValueMetadata *type metadata accessor for UpsellSheetButtonStyle()
{
  return &type metadata for UpsellSheetButtonStyle;
}

uint64_t sub_2B4EEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_334C90, 1);
}

uint64_t sub_2B4EFC@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  __n128 v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  id v23;
  char v24;
  double v25;
  double v26;
  double v27;
  id v28;
  char v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t KeyPath;
  _BYTE *v42;
  uint64_t v43;
  __n128 v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  void *v52;
  uint64_t *v53;
  void *v54;
  uint64_t v55;
  char v56;
  _BYTE *v57;
  id v58;
  char v59;
  double v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  _BYTE *v72;
  _BYTE v74[16];
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  _OWORD v94[7];

  v84 = a1;
  v91 = a2;
  v90 = type metadata accessor for RoundedRectangle(0);
  v2 = __chkstk_darwin(v90);
  v4 = (double *)&v74[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v76 = type metadata accessor for TintShapeStyle(0, v2);
  __chkstk_darwin(v76);
  v75 = (uint64_t *)&v74[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v80 = type metadata accessor for ButtonStyleConfiguration.Label(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v7 = &v74[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0CB8);
  __chkstk_darwin(v77);
  v9 = &v74[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0CA8);
  __chkstk_darwin(v78);
  v11 = &v74[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0C98);
  __chkstk_darwin(v81);
  v13 = &v74[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0C88);
  __chkstk_darwin(v82);
  v15 = &v74[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0C78);
  __chkstk_darwin(v83);
  v17 = &v74[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0C60);
  __chkstk_darwin(v89);
  v88 = &v74[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0C58);
  v86 = *(_QWORD *)(v87 - 8);
  v19 = __chkstk_darwin(v87);
  v85 = &v74[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = SizeClassProxy.width.getter(v19);
  v22 = SizeClass.init(width:)(v21);
  ButtonStyleConfiguration.label.getter(v22);
  v92 = (id)objc_opt_self(UITraitCollection);
  v23 = objc_msgSend(v92, "currentTraitCollection");
  v24 = UITraitCollection.interfaceIdiomIsMac.getter(v23);

  if ((v24 & 1) != 0)
  {
    v25 = 175.0;
  }
  else
  {
    if ((SizeClass.isIpadWide.getter(v22) & 1) != 0)
    {
      v26 = 212.0;
    }
    else
    {
      v27 = SizeClass.margins(width:)(v22, v21);
      v26 = v27 + v27;
    }
    v25 = v21 - v26;
  }
  v28 = objc_msgSend(v92, "currentTraitCollection");
  v29 = UITraitCollection.interfaceIdiomIsMac.getter(v28);

  v33 = static Alignment.center.getter(v30, v31);
  if ((v29 & 1) != 0)
    v34 = 0x4040000000000000;
  else
    v34 = 0x4048000000000000;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v94, *(_QWORD *)&v25, 0, 0, 1, 0, 1, v34, 0, 0, 1, 0, 1, v33, v32);
  v35 = v79;
  v36 = v80;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v79 + 16))(v9, v7, v80);
  v37 = &v9[*(int *)(v77 + 36)];
  v38 = v94[5];
  v37[4] = v94[4];
  v37[5] = v38;
  v37[6] = v94[6];
  v39 = v94[1];
  *v37 = v94[0];
  v37[1] = v39;
  v40 = v94[3];
  v37[2] = v94[2];
  v37[3] = v40;
  (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v7, v36);
  KeyPath = swift_getKeyPath(&unk_306050);
  sub_D184((uint64_t)v9, (uint64_t)v11, &qword_3E0CB8);
  v42 = &v11[*(int *)(v78 + 36)];
  *(_QWORD *)v42 = KeyPath;
  v42[8] = 1;
  v43 = sub_D1D4((uint64_t)v9, &qword_3E0CB8);
  v45 = v84;
  if ((v84 & 1) != 0)
    v46 = static Color.accentColor.getter(v43);
  else
    v46 = static Color.white.getter(v44);
  v47 = v46;
  v48 = swift_getKeyPath(&unk_306080);
  sub_D184((uint64_t)v11, (uint64_t)v13, &qword_3E0CA8);
  v49 = (uint64_t *)&v13[*(int *)(v81 + 36)];
  *v49 = v48;
  v49[1] = v47;
  v50 = sub_D1D4((uint64_t)v11, &qword_3E0CA8);
  if ((v45 & 1) != 0)
  {
    v93 = static Color.clear.getter(v50);
    v54 = &type metadata for Color;
    v52 = &protocol witness table for Color;
    v53 = &v93;
  }
  else
  {
    v51 = v75;
    TintShapeStyle.init()(v50);
    v52 = &protocol witness table for TintShapeStyle;
    v53 = v51;
    v54 = (void *)v76;
  }
  v55 = AnyShapeStyle.init<A>(_:)(v53, v54, v52);
  v56 = static Edge.Set.all.getter(v55);
  sub_D184((uint64_t)v13, (uint64_t)v15, &qword_3E0C98);
  v57 = &v15[*(int *)(v82 + 36)];
  *(_QWORD *)v57 = v55;
  v57[8] = v56;
  sub_D1D4((uint64_t)v13, &qword_3E0C98);
  v58 = objc_msgSend(v92, "currentTraitCollection");
  v59 = UITraitCollection.interfaceIdiomIsMac.getter(v58);

  if ((v59 & 1) != 0)
    v60 = 4.0;
  else
    v60 = 14.0;
  v61 = (char *)v4 + *(int *)(v90 + 20);
  v62 = enum case for RoundedCornerStyle.continuous(_:);
  v63 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 104))(v61, v62, v63);
  *v4 = v60;
  v4[1] = v60;
  v64 = (uint64_t)&v17[*(int *)(v83 + 36)];
  sub_291F54((uint64_t)v4, v64);
  *(_WORD *)(v64 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D2640) + 36)) = 256;
  sub_D184((uint64_t)v15, (uint64_t)v17, &qword_3E0C88);
  sub_1C690((uint64_t)v4);
  v65 = sub_D1D4((uint64_t)v15, &qword_3E0C88);
  v66 = static Font.body.getter(v65);
  v67 = swift_getKeyPath(&unk_3060B0);
  v68 = v88;
  sub_D184((uint64_t)v17, (uint64_t)v88, &qword_3E0C78);
  v69 = v89;
  v70 = (uint64_t *)&v68[*(int *)(v89 + 36)];
  *v70 = v67;
  v70[1] = v66;
  sub_D1D4((uint64_t)v17, &qword_3E0C78);
  v71 = sub_2B5880();
  v72 = v85;
  View.bold(_:)(1, v69, v71);
  sub_D1D4((uint64_t)v68, &qword_3E0C60);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v86 + 32))(v91, v72, v87);
}

uint64_t sub_2B569C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t OpaqueTypeConformance2;
  _QWORD v18[2];

  v3 = type metadata accessor for ButtonStyleConfiguration(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(v3);
  v7 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v6);
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = v10 + v5;
  v12 = swift_allocObject(&unk_391250, v11 + 1, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v12 + v10, v7, v3);
  *(_BYTE *)(v12 + v11) = v8;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0C58);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0C60);
  v15 = sub_2B5880();
  v18[0] = v14;
  v18[1] = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v18, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
  return SizeClassReader.init(content:)(sub_2B5828, v12, v13, OpaqueTypeConformance2);
}

uint64_t sub_2B57C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ButtonStyleConfiguration(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_2B5828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ButtonStyleConfiguration(0);
  return sub_2B4EFC(*(unsigned __int8 *)(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)), a1);
}

unint64_t sub_2B5880()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0C68;
  if (!qword_3E0C68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0C60);
    sub_2B5904();
    sub_10EDC(&qword_3D10B0, &qword_3D10B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0C68);
  }
  return result;
}

unint64_t sub_2B5904()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0C70;
  if (!qword_3E0C70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0C78);
    sub_2B5988();
    sub_10EDC(&qword_3D2690, &qword_3D2640, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0C70);
  }
  return result;
}

unint64_t sub_2B5988()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0C80;
  if (!qword_3E0C80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0C88);
    sub_2B5A0C();
    sub_10EDC(&qword_3E0CC0, &qword_3E0CC8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0C80);
  }
  return result;
}

unint64_t sub_2B5A0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0C90;
  if (!qword_3E0C90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0C98);
    sub_2B5A90();
    sub_10EDC(&qword_3D10C0, &qword_3D10C8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0C90);
  }
  return result;
}

unint64_t sub_2B5A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0CA0;
  if (!qword_3E0CA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0CA8);
    sub_2B5B14();
    sub_10EDC(&qword_3D0C10, &qword_3D0C18, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0CA0);
  }
  return result;
}

unint64_t sub_2B5B14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E0CB0;
  if (!qword_3E0CB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E0CB8);
    sub_2B5B80();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E0CB0);
  }
  return result;
}

unint64_t sub_2B5B80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D1050;
  if (!qword_3D1050)
  {
    v1 = type metadata accessor for ButtonStyleConfiguration.Label(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ButtonStyleConfiguration.Label, v1);
    atomic_store(result, (unint64_t *)&qword_3D1050);
  }
  return result;
}

uint64_t _s23ShelfKitCollectionViews22UpsellSheetButtonStyleV7FlavourOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2B5C2C + 4 * byte_305FD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2B5C60 + 4 * byte_305FD0[v4]))();
}

uint64_t sub_2B5C60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2B5C68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2B5C70);
  return result;
}

uint64_t sub_2B5C7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2B5C84);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2B5C88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2B5C90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpsellSheetButtonStyle.Flavour()
{
  return &type metadata for UpsellSheetButtonStyle.Flavour;
}

uint64_t sub_2B5CAC()
{
  return sub_10EDC(&qword_3E0CD0, &qword_3E0CD8, (uint64_t)&protocol conformance descriptor for SizeClassReader<A>);
}

unint64_t sub_2B5CDC()
{
  unint64_t result;

  result = qword_3E0CE0;
  if (!qword_3E0CE0)
  {
    result = swift_getWitnessTable(&unk_306128, &type metadata for UpsellSheetButtonStyle.Flavour);
    atomic_store(result, (unint64_t *)&qword_3E0CE0);
  }
  return result;
}

void sub_2B5D20()
{
  qword_3E0CE8 = 0x403C000000000000;
}

void sub_2B5D30()
{
  qword_3E0CF0 = 0x4018000000000000;
}

void sub_2B5D40()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  double v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  __C::UILayoutPriority v16;
  Class isa;
  id v18;
  id v19;
  id v20;
  __C::UILayoutPriority v21;
  Class v22;
  id v23;
  id v24;
  __C::UILayoutPriority v25;
  Class v26;
  id v27;
  id v28;
  id v29;
  __C::UILayoutPriority v30;
  Class v31;
  uint64_t v32;
  id v33;
  void *v34;
  Class v35;
  Swift::OpaquePointer v36;

  objc_msgSend(v0, "setAxis:", 0);
  objc_msgSend(v0, "setAlignment:", 3);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v2 = swift_allocObject(v1, 56, 7);
  *(_OWORD *)(v2 + 16) = xmmword_2EFC80;
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge];
  v4 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge];
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  v5 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton];
  *(_QWORD *)(v2 + 48) = v5;
  v36._rawValue = (void *)v2;
  specialized Array._endMutation()(v2);
  v6 = v3;
  v7 = v4;
  v8 = v5;
  UIStackView.addArrangedSubviews(_:)(v36);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0, swift_bridgeObjectRelease(v36._rawValue).n128_f64[0]);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v6, "setContentMode:", 4);
  objc_msgSend(v7, "setContentMode:", 4);
  if (objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection") == (char *)&dword_0 + 1)
    v9 = 8;
  else
    v9 = 7;
  objc_msgSend(v8, "setContentMode:", v9);
  v10 = objc_msgSend(v8, "widthAnchor");
  if (qword_3CFDE8 != -1)
    swift_once(&qword_3CFDE8, sub_2B5D20);
  v11 = *(double *)&qword_3E0CE8;
  if (qword_3CFDF0 != -1)
    swift_once(&qword_3CFDF0, sub_2B5D30);
  v12 = objc_msgSend(v10, "constraintEqualToConstant:", v11 - *(double *)&qword_3E0CF0);

  static UILayoutPriority.highestBreakable.getter();
  objc_msgSend(v12, "setPriority:");
  v34 = (void *)objc_opt_self(NSLayoutConstraint);
  v13 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_2F1D10;
  v14 = objc_msgSend(v6, "widthAnchor");
  v15 = objc_msgSend(v14, "constraintEqualToConstant:", *(double *)&qword_3E0CE8);

  v16.rawValue = static UILayoutPriority.highestBreakable.getter();
  isa = NSLayoutConstraint.withPriority(priority:)(v16).super.isa;

  *(_QWORD *)(v13 + 32) = isa;
  v18 = objc_msgSend(v6, "heightAnchor");
  v19 = objc_msgSend(v6, "widthAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  v21.rawValue = static UILayoutPriority.highestBreakable.getter();
  v22 = NSLayoutConstraint.withPriority(priority:)(v21).super.isa;

  *(_QWORD *)(v13 + 40) = v22;
  v23 = objc_msgSend(v7, "widthAnchor");
  v24 = objc_msgSend(v23, "constraintEqualToConstant:", *(double *)&qword_3E0CE8);

  v25.rawValue = static UILayoutPriority.highestBreakable.getter();
  v26 = NSLayoutConstraint.withPriority(priority:)(v25).super.isa;

  *(_QWORD *)(v13 + 48) = v26;
  v27 = objc_msgSend(v7, "heightAnchor");
  v28 = objc_msgSend(v7, "widthAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  v30.rawValue = static UILayoutPriority.highestBreakable.getter();
  v31 = NSLayoutConstraint.withPriority(priority:)(v30).super.isa;

  *(_QWORD *)(v13 + 56) = v31;
  *(_QWORD *)(v13 + 64) = v12;
  specialized Array._endMutation()(v32);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  v33 = v12;
  v35 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "activateConstraints:", v35, swift_bridgeObjectRelease(v13).n128_f64[0]);

}

void sub_2B618C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  char *v8;
  double *v17;
  double *v18;
  double Width;
  double v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double Height;
  double v30;
  double MinX;
  double MinY;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_expandedTapAreaInsets], *(float64x2_t *)&NSDirectionalEdgeInsetsZero.top), (int32x4_t)vceqq_f64(*(float64x2_t *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_expandedTapAreaInsets+ 16], *(float64x2_t *)&NSDirectionalEdgeInsetsZero.bottom))), 0xFuLL))) & 1) == 0)
  {
    v17 = (double *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_cachedBounds];
    v39.origin.x = a1;
    v39.origin.y = a2;
    v39.size.width = a3;
    v39.size.height = a4;
    if (!CGRectEqualToRect(*(CGRect *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_cachedBounds], v39))
    {
      v18 = (double *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_cachedMoreButtonFrame];
      v40.origin.x = a5;
      v40.origin.y = a6;
      v40.size.width = a7;
      v40.size.height = a8;
      if (!CGRectEqualToRect(*(CGRect *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_cachedMoreButtonFrame], v40))
      {
        *v17 = a1;
        v17[1] = a2;
        v17[2] = a3;
        v17[3] = a4;
        *v18 = a5;
        v18[1] = a6;
        v18[2] = a7;
        v18[3] = a8;
        v33.origin.x = a5;
        v33.origin.y = a6;
        v33.size.width = a7;
        v33.size.height = a8;
        MinY = CGRectGetMinY(v33);
        v34.origin.x = a5;
        v34.origin.y = a6;
        v34.size.width = a7;
        v34.size.height = a8;
        MinX = CGRectGetMinX(v34);
        v35.origin.x = a1;
        v35.origin.y = a2;
        v35.size.width = a3;
        v35.size.height = a4;
        Height = CGRectGetHeight(v35);
        v36.origin.x = a5;
        v36.origin.y = a6;
        v36.size.width = a7;
        v36.size.height = a8;
        v30 = Height - CGRectGetMaxY(v36);
        v37.origin.x = a1;
        v37.origin.y = a2;
        v37.size.width = a3;
        v37.size.height = a4;
        Width = CGRectGetWidth(v37);
        v38.origin.x = a5;
        v38.origin.y = a6;
        v38.size.width = a7;
        v38.size.height = a8;
        v20 = Width - CGRectGetMaxX(v38);
        v21 = *(void **)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton];
        objc_msgSend(v8, "hitTestInsets");
        v23 = v22 - MinY;
        objc_msgSend(v8, "hitTestInsets");
        v25 = v24 - MinX;
        objc_msgSend(v8, "hitTestInsets");
        v27 = v26 - v30;
        objc_msgSend(v8, "hitTestInsets");
        objc_msgSend(v21, "setHitTestInsets:", v23, v25, v27, v28 - v20);
      }
    }
  }
}

uint64_t sub_2B65B8()
{
  return type metadata accessor for EpisodeStateControlsStackView(0);
}

uint64_t type metadata accessor for EpisodeStateControlsStackView(uint64_t a1)
{
  uint64_t result;

  result = qword_3E0D58;
  if (!qword_3E0D58)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EpisodeStateControlsStackView);
  return result;
}

uint64_t sub_2B65FC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for PlayControlsIconsSet(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = " ";
    v4[7] = " ";
    v4[8] = " ";
    v4[9] = &unk_3061A8;
    result = swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

double sub_2B66AC()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_objectGraph)).n128_u64[0];
  return result;
}

uint64_t sub_2B66BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_objectGraph) = a1;
  swift_release(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph) = a1;
  swift_retain_n(a1, 2);
  return swift_release(v5);
}

void sub_2B671C(_BYTE *a1)
{
  uint64_t v1;
  int v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  char v14;

  v2 = *a1;
  if (!*a1)
  {
    v8 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge);
    v9 = (void *)objc_opt_self(UIColor);
    v10 = objc_msgSend(v9, "systemGray2Color");
    objc_msgSend(v8, "setTintColor:", v10);

    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton);
    v7 = objc_msgSend(v9, "systemGray2Color");
    goto LABEL_5;
  }
  if (v2 == 1)
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge);
    v4 = (void *)objc_opt_self(UIColor);
    v5 = objc_msgSend(v4, "whiteColor");
    objc_msgSend(v3, "setTintColor:", v5);

    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton);
    v7 = objc_msgSend(v4, "whiteColor");
LABEL_5:
    v11 = v7;
    objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_button), "setTintColor:", v11);

    goto LABEL_9;
  }
  v12 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge);
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  v13 = qword_3D0890;
  objc_msgSend(v12, "setTintColor:", qword_3D0890);
  objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton)+ OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_button), "setTintColor:", v13);
LABEL_9:
  *(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge)
           + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_episodeCellState) = v2;
  v14 = v2;
  sub_FA1D8(&v14);
}

void sub_2B68F8(unsigned __int8 a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  char v12;
  int v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  _QWORD aBlock[5];
  uint64_t v26;
  uint64_t v27;

  v4 = v3;
  v8 = (_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_currentVisibilities);
  swift_beginAccess(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_currentVisibilities, aBlock, 32, 0);
  v9 = *v8;
  if (*(_QWORD *)(*v8 + 16))
  {
    v10 = a2;
    v11 = sub_36E48((uint64_t)v10);
    if ((v12 & 1) != 0)
    {
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 56) + v11);
      swift_endAccess(aBlock);

      if (v13 == a1)
        return;
    }
    else
    {
      swift_endAccess(aBlock);

    }
  }
  else
  {
    swift_endAccess(aBlock);
  }
  swift_beginAccess(v8, aBlock, 33, 0);
  v14 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
  v27 = *v8;
  *v8 = 0x8000000000000000;
  sub_15EDC0(a1, v14, isUniquelyReferenced_nonNull_native);
  v16 = *v8;
  *v8 = v27;

  swift_bridgeObjectRelease(v16);
  swift_endAccess(aBlock);
  v17 = swift_allocObject(&unk_3913B0, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v4);
  v18 = swift_allocObject(&unk_3913D8, 41, 7);
  *(_BYTE *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = v14;
  *(_QWORD *)(v18 + 32) = v17;
  *(_BYTE *)(v18 + 40) = a3 & 1;
  if ((a3 & 1) != 0)
  {
    v19 = (void *)objc_opt_self(UIView);
    aBlock[4] = sub_2B6C94;
    v26 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_73;
    v20 = _Block_copy(aBlock);
    v21 = v26;
    v22 = v14;
    swift_retain_n(v17, 2);
    v23 = v22;
    swift_retain(v18);
    swift_release(v21);
    objc_msgSend(v19, "animateWithDuration:animations:", v20, 0.25);
    _Block_release(v20);
  }
  else
  {
    v24 = v14;
    swift_retain_n(v17, 2);
    sub_2B6B54(a1, v24, v17, 0);
  }
  swift_release_n(v17, 2);

  swift_release(v18);
}

void sub_2B6B54(char a1, id a2, uint64_t a3, char a4)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _BYTE v14[24];

  v6 = a3 + 16;
  if (a1)
  {
    v7 = 0.0;
    if (a1 == 1)
      goto LABEL_6;
    v8 = 1;
  }
  else
  {
    v8 = 0;
    v7 = 1.0;
  }
  objc_msgSend(a2, "setHidden:", v8);
LABEL_6:
  objc_msgSend(a2, "setAlpha:", v7);
  swift_beginAccess(v6, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v10 = Strong;
    objc_msgSend(Strong, "setNeedsLayout");

  }
  if ((a4 & 1) != 0)
  {
    swift_beginAccess(v6, &v13, 0, 0);
    v11 = (void *)swift_unknownObjectWeakLoadStrong(v6);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "layoutIfNeeded");

    }
  }
}

uint64_t sub_2B6C44()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2B6C68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

void sub_2B6C94()
{
  uint64_t v0;

  sub_2B6B54(*(_BYTE *)(v0 + 16), *(id *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

double block_copy_helper_73(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_73(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_2B6CBC(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  char *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  double *v34;
  id v35;
  _BYTE *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  id v46;
  __n128 v47;
  void *v48;
  id v49;
  NSString v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  id v56;
  uint64_t v57;
  uint64_t Strong;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  id v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  objc_class *ObjectType;
  uint64_t v72;
  objc_super v73;

  v7 = v6;
  v72 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  __chkstk_darwin(v13);
  v70 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v15);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Glyph(0);
  v65 = *(_QWORD *)(v18 - 8);
  v66 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DownloadButton.Style(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PlayControlsIconsSet(0);
  v67 = v24;
  __chkstk_darwin(v24);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton;
  v69 = OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton;
  v28 = objc_allocWithZone((Class)type metadata accessor for DynamicContextMenuButton(0));
  v68 = v7;
  v29 = v7;
  *(_QWORD *)&v7[v27] = objc_msgSend(v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v30 = OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_currentVisibilities;
  *(_QWORD *)&v29[v30] = sub_D4A58((uint64_t)_swiftEmptyArrayStorage);
  v31 = &v29[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_cachedBounds];
  *(_OWORD *)v31 = 0u;
  *((_OWORD *)v31 + 1) = 0u;
  v32 = &v29[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_cachedMoreButtonFrame];
  *(_OWORD *)v32 = 0u;
  *((_OWORD *)v32 + 1) = 0u;
  *(_QWORD *)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_objectGraph] = 0;
  v33 = v72;
  sub_19C4C(v72, (uint64_t)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_iconsSet], type metadata accessor for PlayControlsIconsSet);
  *(_QWORD *)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_episodeStateControlsPresenter] = a1;
  v34 = (double *)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_expandedTapAreaInsets];
  *v34 = a3;
  v34[1] = a4;
  v34[2] = a5;
  v34[3] = a6;
  sub_19C4C(v33, (uint64_t)v26, type metadata accessor for PlayControlsIconsSet);
  v35 = objc_allocWithZone((Class)type metadata accessor for BookmarkBadge(0));
  swift_retain(a1);
  *(_QWORD *)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge] = sub_2A201C((uint64_t)v26);
  sub_19C4C(v33 + *(int *)(v24 + 24), (uint64_t)v23, type metadata accessor for DownloadButton.Style);
  v36 = objc_allocWithZone((Class)type metadata accessor for DownloadButton(0));
  v36[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_episodeCellState] = 3;
  *(_QWORD *)&v36[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter] = 0;
  *(_QWORD *)&v36[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressView] = 0;
  v37 = &v36[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressState];
  *(_QWORD *)v37 = 0;
  *((_WORD *)v37 + 4) = 256;
  v38 = &v36[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_downloadButtonStyle];
  sub_19C4C((uint64_t)v23, (uint64_t)&v36[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_downloadButtonStyle], type metadata accessor for DownloadButton.Style);
  v40 = v65;
  v39 = v66;
  v41 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v41(v20, v38, v66);
  v42 = type metadata accessor for Glyph.Color(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v17, 1, 1, v42);
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v20, (uint64_t)v17, 0, 0, 1, 0.0, 0.0, 0.0, 0.0);
  v44 = v43;
  sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
  v45 = swift_allocObject(&unk_391428, 24, 7);
  swift_unknownObjectWeakInit(v45 + 16, v44);
  v46 = v44;
  v48 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v47, 0, 0, 0, sub_FB1A4, v45);
  objc_msgSend(v46, "addAction:forControlEvents:", v48, 0x2000);

  v49 = v46;
  v50 = String._bridgeToObjectiveC()();
  objc_msgSend(v49, "setAccessibilityIdentifier:", v50);

  sub_FA4C((uint64_t)v23, type metadata accessor for DownloadButton.Style);
  *(_QWORD *)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge] = v49;
  v51 = *(void **)&v68[v69];
  v52 = v72;
  v53 = (uint64_t)v70;
  v41(v70, (char *)(v72 + *(int *)(v67 + 28)), v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v53, 0, 1, v39);
  sub_2421CC(v53);
  v54 = v51;

  v55 = &v54[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_configProvider];
  *((_QWORD *)v55 + 1) = &off_38BEE0;
  swift_unknownObjectWeakAssign(v55, a1);

  v73.receiver = v29;
  v73.super_class = ObjectType;
  v56 = objc_msgSendSuper2(&v73, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_2B5D40();
  *(_QWORD *)(a1 + 24) = &off_391370;
  v57 = swift_unknownObjectWeakAssign(a1 + 16, v56);
  Strong = swift_unknownObjectWeakLoadStrong(v57);
  if (Strong)
  {
    v59 = Strong;
    v60 = *(unsigned __int8 *)(a1 + 33);
    v61 = *(void **)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_bookmarkBadge);
    v62 = v56;
    objc_msgSend(v61, "setUserInteractionEnabled:", v60);
    objc_msgSend(*(id *)(v59 + OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_downloadBadge), "setUserInteractionEnabled:", v60);
    swift_unknownObjectRelease(v59);
  }
  else
  {
    v63 = v56;
  }
  sub_2177B0();
  sub_217968(0);
  sub_217A74(0);

  objc_msgSend(v56, "setHitTestDirectionalInsets:", a3, a4, a5, a6);
  sub_FA4C(v52, type metadata accessor for PlayControlsIconsSet);
  return v56;
}

void sub_2B72F4(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;

  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton;
  *(_QWORD *)&v2[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DynamicContextMenuButton(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_currentVisibilities;
  *(_QWORD *)&v2[v6] = sub_D4A58((uint64_t)_swiftEmptyArrayStorage);
  v7 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_cachedBounds];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v8 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_cachedMoreButtonFrame];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, a1, "ShelfKitCollectionViews/EpisodeStateControlsStackView.swift", 59, 2, a2, 0);
  __break(1u);
}

uint64_t sub_2B73EC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t result;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  void *v27;

  v10 = type metadata accessor for UIBackgroundConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v25[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listPlainCell()(v12);
  v15 = type metadata accessor for UICellConfigurationState(0);
  v26 = v15;
  v27 = &protocol witness table for UICellConfigurationState;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v25);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(boxed_opaque_existential_0, a1, v15);
  UIBackgroundConfiguration.updated(for:)(v25);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v17 = __swift_destroy_boxed_opaque_existential_0(v25);
  v18 = UIBackgroundConfiguration.backgroundInsets.setter(v17, a2, a3, a4, a5);
  v19 = UIBackgroundConfiguration.cornerRadius.setter(v18, 6.0);
  if ((UICellConfigurationState.isSelected.getter(v19) & 1) != 0)
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v20 = qword_3D0890;
    v21 = (id)qword_3D0890;
    v22 = (id)v20;
    return UIBackgroundConfiguration.backgroundColor.setter(v22);
  }
  if (qword_3CFDF8 != -1)
    swift_once(&qword_3CFDF8, sub_2B75E8);
  UICellConfigurationState.subscript.getter(v25, qword_3FD8E0);
  if (!v26)
    return sub_2B761C((uint64_t)v25);
  result = swift_dynamicCast((char *)&v24 + 7, v25, &type metadata for AnyHashable, &type metadata for Bool, 6);
  if ((result & 1) != 0 && (v24 & 0x100000000000000) != 0)
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
    return UIBackgroundConfiguration.backgroundColor.setter(v22);
  }
  return result;
}

NSString sub_2B75E8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_3FD8E0 = (uint64_t)result;
  return result;
}

uint64_t sub_2B761C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2B765C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_D1D4(a1, &qword_3D4E88);
    v9 = "/System/Library/PrivateFrameworks/ShareSheet.framework/ShareSheet";
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      v13 = swift_unknownObjectRetain(v10);
      v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11, v13);
      v16 = v15;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v17 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = (char *)(v17 | 0x1C00);
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v14 = 0;
  v16 = 0;
LABEL_6:
  v18 = swift_allocObject(&unk_3914A8, 32, 7);
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  if (v16 | v14)
  {
    v21[0] = 0;
    v21[1] = 0;
    v19 = v21;
    v21[2] = v14;
    v21[3] = v16;
  }
  else
  {
    v19 = 0;
  }
  return swift_task_create(v9, v19, (char *)&type metadata for () + 8, &unk_3D4EA0, v18);
}

uint64_t sub_2B77A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  char v82;
  char v83;
  char v84;
  uint64_t v85;
  char v86;
  char v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(void);
  void (*v109)(uint64_t, _OWORD *, uint64_t, uint64_t);
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(void);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  id v152;
  void (*v153)(uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __n128 v157;
  void *v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  uint64_t ObjectType;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  Swift::String v168;
  uint64_t v169;
  _QWORD *v170;
  _QWORD *boxed_opaque_existential_0;
  Swift::String v172;
  uint64_t v173;
  __n128 v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  _QWORD *v193;
  _QWORD v194[3];
  uint64_t v195;
  uint64_t v196;
  uint64_t v197[3];
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201[24];
  _OWORD v202[2];
  uint64_t v203;

  v193 = a1;
  v192 = type metadata accessor for ActionOutcome(0);
  v190 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v191 = (char *)&v176 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v3);
  v183 = (char *)&v176 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSLogger(0);
  v185 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v184 = (char *)&v176 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for LoadingAction.ViewToken(0);
  v181 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v180 = (uint64_t)&v176 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LoadingAction.Configuration(0, v8);
  v10 = __chkstk_darwin(v9);
  v179 = (char *)&v176 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = type metadata accessor for ShareSheetAction(0, v10);
  v178 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v177 = (char *)&v176 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v187 = (char *)&v176 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D45D0);
  __chkstk_darwin(v15);
  v17 = (char *)&v176 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v176 - v19;
  v21 = type metadata accessor for EpisodeOffer(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v176 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  v26 = dispatch thunk of BaseObjectGraph.subtracting(dependencyFor:)();
  v189 = v1;
  swift_beginAccess(v1 + 24, v201, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
  v186 = v5;
  if (Strong)
  {
    v28 = (void *)Strong;
    UIResponder.nearestFlowController.getter((uint64_t)v202);

  }
  else
  {
    v203 = 0;
    memset(v202, 0, sizeof(v202));
  }
  v29 = BaseObjectGraph.satisfyingIfPresent<A>(_:with:)(v25, v202, v25);
  swift_release(v26);
  sub_D1D4((uint64_t)v202, &qword_3D31A0);
  sub_1D5D4((uint64_t)v193, (uint64_t)v202);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
  v32 = type metadata accessor for FlowAction(0, v31);
  if (swift_dynamicCast(v197, v202, v30, v32, 0))
  {
    v33 = v197[0];
    sub_2B8984(v197[0]);
    v34 = v33;
LABEL_20:
    swift_release(v34);
LABEL_21:
    v59 = v192;
    v60 = v191;
    v61 = v190;
LABEL_22:
    __swift_destroy_boxed_opaque_existential_0(v202);
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D62B0);
    (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, enum case for ActionOutcome.performed(_:), v59);
    v62 = Promise.__allocating_init(value:)(v60);
    swift_release(v29);
    return v62;
  }
  v35 = v29;
  v36 = type metadata accessor for TabChangeAction(0);
  if (swift_dynamicCast(v197, v202, v30, v36, 0))
  {
    v37 = v197[0];
    sub_2BD20C(v197[0], v29);
    v34 = v37;
    goto LABEL_20;
  }
  v38 = type metadata accessor for SheetAction(0);
  if (swift_dynamicCast(v197, v202, v30, v38, 0))
  {
    v39 = v197[0];
    sub_2B9008(v197[0], v29);
    v34 = v39;
    goto LABEL_20;
  }
  v40 = type metadata accessor for AlertAction(0);
  if (swift_dynamicCast(v197, v202, v30, v40, 0))
  {
    v41 = v197[0];
    sub_2B9850(v197[0], v29);
    v34 = v41;
    goto LABEL_20;
  }
  v42 = type metadata accessor for PresentNowPlayingAction(0);
  if (swift_dynamicCast(v194, v202, v30, v42, 0))
  {
    v43 = v194[0];
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
    BaseObjectGraph.inject<A>(_:)(v197, v44, v44);
    v45 = v198;
    v46 = v199;
    __swift_project_boxed_opaque_existential_1(v197, v198);
    dispatch thunk of EpisodeControllerProtocol.presentNowPlaying(animated:)(1, v45, v46);
    __swift_destroy_boxed_opaque_existential_0(v197);
    v34 = v43;
    goto LABEL_20;
  }
  v47 = type metadata accessor for PlayAction(0);
  if (swift_dynamicCast(v197, v202, v30, v47, 0))
  {
    v49 = v197[0];
    v50 = PlayAction.episodeOffer.getter(v48);
    v51 = PlayAction.timestamp.getter(v50);
    v53 = v52 & 1;
    v54 = (uint64_t)v24;
    v55 = 0;
LABEL_18:
    sub_2BD32C(v54, v55, v51, v53);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
LABEL_19:
    v34 = v49;
    goto LABEL_20;
  }
  v56 = type metadata accessor for PlayPauseAction(0, v48);
  if (swift_dynamicCast(v197, v202, v30, v56, 0))
  {
    v49 = v197[0];
    v57 = PlayPauseAction.episodeOffer.getter();
    v51 = PlayPauseAction.timestamp.getter(v57);
    v53 = v58 & 1;
    v54 = (uint64_t)v24;
    v55 = 1;
    goto LABEL_18;
  }
  v64 = type metadata accessor for LibraryPlayAction(0);
  if (swift_dynamicCast(v197, v202, v30, v64, 0))
  {
    v49 = v197[0];
    v65 = LibraryPlayAction.episodeUuid.getter();
    v67 = v66;
    v68 = LibraryPlayAction.settings.getter();
    v69 = LibraryPlayAction.showPlayerIfPlaying.getter(v68);
    v70 = LibraryPlayAction.forcePlay.getter();
    v71 = LibraryPlayAction.timestamp.getter();
    sub_2BD67C(v65, v67, (uint64_t)v20, v69, 0, v70, 0, v71, v72 & 1, 0, 0, 1, 0);
    swift_bridgeObjectRelease(v67);
    v73 = (uint64_t)v20;
LABEL_31:
    sub_D1D4(v73, &qword_3D45D0);
    goto LABEL_19;
  }
  v74 = type metadata accessor for LibraryPlayPauseAction(0);
  if (swift_dynamicCast(v197, v202, v30, v74, 0))
  {
    v49 = v197[0];
    v193 = (_QWORD *)LibraryPlayPauseAction.episodeUuid.getter(v75);
    v77 = v76;
    v78 = LibraryPlayPauseAction.settings.getter();
    LODWORD(v189) = LibraryPlayPauseAction.showPlayerIfPlaying.getter(v78);
    LODWORD(v188) = LibraryPlayPauseAction.forcePlay.getter();
    v79 = LibraryPlayPauseAction.isSmartPlayButton.getter();
    v80 = LibraryPlayPauseAction.timestamp.getter();
    v82 = v81 & 1;
    v83 = LibraryPlayPauseAction.shouldPreventQueueing.getter();
    v84 = LibraryPlayPauseAction.isWidgetPlayButton.getter();
    if ((v84 & 1) != 0)
      v85 = 15;
    else
      v85 = 0;
    v86 = LibraryPlayPauseAction.waitForEngine.getter();
    v87 = v83 & 1;
    v29 = v35;
    sub_2BD67C((uint64_t)v193, v77, (uint64_t)v17, v189, 1, v188, v79 & 1, v80, v82, v87, v85, (v84 & 1) == 0, v86 & 1);
    swift_bridgeObjectRelease(v77);
    v73 = (uint64_t)v17;
    goto LABEL_31;
  }
  v88 = type metadata accessor for PlayStationAction(0);
  if (swift_dynamicCast(v197, v202, v30, v88, 0))
  {
    v90 = v197[0];
    v91 = PlayStationAction.stationUuid.getter();
    v93 = v92;
    v94 = PlayStationAction.episodeUuid.getter();
    v96 = v95;
    v97 = v91;
    v98 = v93;
    v99 = v96;
    v100 = 0;
LABEL_36:
    sub_2BDE64(v97, v98, v94, v99, v100);
    swift_release(v90);
    swift_bridgeObjectRelease(v93);
    swift_bridgeObjectRelease(v96);
    goto LABEL_21;
  }
  v101 = type metadata accessor for PlayPauseStationAction(0, v89);
  if (swift_dynamicCast(v197, v202, v30, v101, 0))
  {
    v90 = v197[0];
    v102 = PlayPauseStationAction.stationUuid.getter();
    v93 = v103;
    v94 = PlayPauseStationAction.episodeUuid.getter(v104);
    v96 = v105;
    v97 = v102;
    v98 = v93;
    v99 = v96;
    v100 = 1;
    goto LABEL_36;
  }
  v106 = type metadata accessor for PodcastPlayAction(0);
  if (swift_dynamicCast(v197, v202, v30, v106, 0))
  {
    v107 = v197[0];
    v108 = (uint64_t (*)(void))&PodcastPlayAction.showId.getter;
    v109 = (void (*)(uint64_t, _OWORD *, uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.play(storeShowId:sender:);
LABEL_41:
    sub_2BE23C(v107, v29, v108, v109);
    v34 = v107;
    goto LABEL_20;
  }
  v110 = type metadata accessor for StoreEpisodePlayAction(0);
  if (swift_dynamicCast(v197, v202, v30, v110, 0))
  {
    v107 = v197[0];
    v108 = (uint64_t (*)(void))&StoreEpisodePlayAction.episodeId.getter;
    v109 = (void (*)(uint64_t, _OWORD *, uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.play(storeEpisodeId:sender:);
    goto LABEL_41;
  }
  v112 = type metadata accessor for SeekToTimestampAndPlayAction(0, v111);
  if (swift_dynamicCast(v197, v202, v30, v112, 0))
  {
    v113 = v197[0];
    sub_2BE39C();
    v34 = v113;
    goto LABEL_20;
  }
  v114 = type metadata accessor for PlayPauseQueueAction(0);
  if (swift_dynamicCast(v197, v202, v30, v114, 0))
  {
    v115 = v197[0];
    sub_2BE504();
    v34 = v115;
    goto LABEL_20;
  }
  v116 = type metadata accessor for ClosureAction(0);
  if (swift_dynamicCast(v197, v202, v30, v116, 0))
  {
    v117 = v197[0];
    v118 = (void (*)(void))ClosureAction.closure.getter();
    v120 = v119;
    v118();
    swift_release(v117);
    v121 = v120;
LABEL_48:
    swift_release(v121);
LABEL_49:
    v59 = v192;
    v60 = v191;
    v61 = v190;
    goto LABEL_22;
  }
  v122 = type metadata accessor for PopoverAction(0);
  if (swift_dynamicCast(v197, v202, v30, v122, 0))
  {
    v123 = v197[0];
    sub_2BE874(v197[0]);
    v34 = v123;
    goto LABEL_20;
  }
  v124 = type metadata accessor for TextFieldAction(0);
  if (swift_dynamicCast(v197, v202, v30, v124, 0))
  {
    v125 = v197[0];
    sub_2BA804(v197[0], v29);
    v34 = v125;
    goto LABEL_20;
  }
  v126 = type metadata accessor for EpisodeContextAction(0);
  if (swift_dynamicCast(v197, v202, v30, v126, 0))
  {
    v127 = v197[0];
    sub_2BADBC(v197[0], v29);
    v34 = v127;
    goto LABEL_20;
  }
  v128 = type metadata accessor for PodcastContextAction(0);
  if (swift_dynamicCast(v197, v202, v30, v128, 0))
  {
    v129 = v197[0];
    sub_2BADD8(v197[0], v29);
    v34 = v129;
    goto LABEL_20;
  }
  v130 = type metadata accessor for LibraryEpisodeContextAction(0);
  if (swift_dynamicCast(v197, v202, v30, v130, 0))
  {
    v131 = v197[0];
    sub_2BB0F8(v197[0], v29);
    v34 = v131;
    goto LABEL_20;
  }
  v132 = type metadata accessor for LibraryPodcastContextAction(0);
  if (swift_dynamicCast(v197, v202, v30, v132, 0))
  {
    v133 = v197[0];
    sub_2BB3C8(v197[0], v29);
    v34 = v133;
    goto LABEL_20;
  }
  v134 = type metadata accessor for NavigateBackAction(0);
  if (swift_dynamicCast(&v200, v202, v30, v134, 0))
  {
    v135 = v200;
    BaseObjectGraph.injectIfAvailable<A>(_:)(v197, v25, v25);
    sub_D184((uint64_t)v197, (uint64_t)v194, &qword_3D31A0);
    v136 = v195;
    if (v195)
    {
      v137 = v196;
      __swift_project_boxed_opaque_existential_1(v194, v195);
      v138 = NavigateBackAction.animationBehavior.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v137 + 56))(v138, v136, v137);
      sub_D1D4((uint64_t)v197, &qword_3D31A0);
      __swift_destroy_boxed_opaque_existential_0(v194);
    }
    else
    {
      sub_D1D4((uint64_t)v197, &qword_3D31A0);
      sub_D1D4((uint64_t)v194, &qword_3D31A0);
    }
    v121 = v135;
    goto LABEL_48;
  }
  if (swift_dynamicCast(v187, v202, v30, v188, 0))
  {
    v139 = v178;
    v140 = (uint64_t)v177;
    v141 = v188;
    (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v177, v187, v188);
    sub_2BEC98(v140);
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v140, v141);
    goto LABEL_21;
  }
  v142 = type metadata accessor for DismissAction(0);
  if (swift_dynamicCast(v197, v202, v30, v142, 0))
  {
    v143 = v197[0];
    sub_2BEE04(v197[0]);
    v34 = v143;
    goto LABEL_20;
  }
  v144 = type metadata accessor for CompoundAction(0);
  if (swift_dynamicCast(v197, v202, v30, v144, 0))
  {
    v145 = v197[0];
    sub_2BB694(v197[0], v29);
    v34 = v145;
    goto LABEL_20;
  }
  v146 = type metadata accessor for OverflowAction(0);
  if (swift_dynamicCast(v197, v202, v30, v146, 0))
  {
    v147 = v197[0];
    sub_2BB7EC();
    v34 = v147;
    goto LABEL_20;
  }
  v148 = type metadata accessor for LoadingAction(0);
  if (swift_dynamicCast(v197, v202, v30, v148, 0))
  {
    v149 = v197[0];
    v150 = (uint64_t)v179;
    LoadingAction.config.getter();
    v151 = objc_allocWithZone((Class)type metadata accessor for HUDLoadingController(0));
    v152 = sub_F0140(v150);
    v153 = (void (*)(uint64_t))LoadingAction.updateHandler.getter();
    v155 = v154;
    v156 = v180;
    sub_F04D0(v180);
    v153(v156);
    v157 = swift_release(v155);
    (*(void (**)(uint64_t, uint64_t, __n128))(v181 + 8))(v156, v182, v157);
    sub_F0F8C();
    swift_release(v149);

    goto LABEL_49;
  }
  v158 = sub_2B87E8();
  if (v158)
  {
    v160 = v158;
    v161 = v159;
    ObjectType = swift_getObjectType();
    v62 = dispatch thunk of ActionRunner.performEffects(of:asPartOf:)(v193, v29, ObjectType, v161);
    swift_unknownObjectRelease(v160);
  }
  else
  {
    v163 = v184;
    static OSLogger.actions.getter(0);
    v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
    v165 = type metadata accessor for LogMessage(0);
    v166 = swift_allocObject(v164, ((*(unsigned __int8 *)(*(_QWORD *)(v165 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v165 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v165 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v165 - 8) + 80) | 7);
    *(_OWORD *)(v166 + 16) = xmmword_2F03C0;
    v167 = v183;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1);
    v168._object = (void *)0x8000000000308060;
    v168._countAndFlagsBits = 0xD00000000000001DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v168);
    v169 = v193[3];
    v170 = __swift_project_boxed_opaque_existential_1(v193, v169);
    v198 = v169;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v197);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(boxed_opaque_existential_0, v170, v169);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v197);
    sub_D1D4((uint64_t)v197, &qword_3D1A70);
    v172._countAndFlagsBits = 46;
    v172._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v172);
    LogMessage.init(stringInterpolation:)(v167);
    v173 = v186;
    Logger.error(_:)(v166, v186, &protocol witness table for OSLogger);
    v174 = swift_bridgeObjectRelease(v166);
    (*(void (**)(char *, uint64_t, __n128))(v185 + 8))(v163, v173, v174);
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D62B0);
    v175 = v191;
    (*(void (**)(char *, _QWORD, uint64_t))(v190 + 104))(v191, enum case for ActionOutcome.unsupported(_:), v192);
    v62 = Promise.__allocating_init(value:)(v175);
  }
  swift_release(v29);
  __swift_destroy_boxed_opaque_existential_0(v202);
  return v62;
}

void *sub_2B87E8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *Strong;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  char v17[24];

  v1 = v0;
  v2 = type metadata accessor for OSLogger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (uint64_t)v0 + 24;
  swift_beginAccess(v6, v17, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  v8 = Strong;
  if (Strong)
  {
    v9 = objc_msgSend(Strong, "nextResponder");

    if (!v9)
      return 0;
    v8 = (void *)UIResponder.nearestActionRunner.getter();

    if (v8 && v8 == v1)
    {
      static OSLogger.actions.getter(v10);
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
      v12 = type metadata accessor for LogMessage(0);
      v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
      *(_OWORD *)(v13 + 16) = xmmword_2F03C0;
      LogMessage.init(stringLiteral:)(0xD000000000000030, 0x8000000000319D10);
      Logger.error(_:)(v13, v2, &protocol witness table for OSLogger);
      swift_unknownObjectRelease(v1);
      v14 = swift_bridgeObjectRelease(v13);
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v14);
      return 0;
    }
  }
  return v8;
}

uint64_t sub_2B8984(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(uint64_t *, char *, uint64_t);
  unsigned int (*v35)(uint64_t *, uint64_t);
  __n128 v36;
  __n128 v37;
  uint64_t *v38;
  uint64_t *v40;
  void (*v41)(uint64_t *, uint64_t);
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD v61[4];
  _OWORD v62[2];
  _OWORD v63[2];
  uint64_t v64[3];
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[5];
  _QWORD v68[4];

  v57 = type metadata accessor for Logger(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v59 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v55 - v14);
  __chkstk_darwin(v16);
  v18 = (char *)&v55 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v68, v19, v19);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v67, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  v20 = type metadata accessor for FlowTransitionSource(0);
  v21 = BaseObjectGraph.injectIfAvailable<A>(_:)(v64, v20, v20);
  v58 = v64[0];
  dispatch thunk of FlowAction.destination.getter(v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v22 = v56;
    sub_D1D4((uint64_t)v8, &qword_3D2B30);
    static Logger.navigation.getter(v23);
    v24 = swift_retain_n(a1, 2);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v64[0] = v28;
      v29.n128_u64[0] = 136315138;
      *(_DWORD *)v27 = 136315138;
      v60 = a1;
      v30 = type metadata accessor for FlowAction(0, v29);
      swift_retain(a1);
      v31 = String.init<A>(describing:)(&v60, v30);
      v33 = v32;
      v60 = sub_37E78(v31, v32, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease(v33);
      _os_log_impl(&dword_0, v25, v26, "Could not create destination for %s", v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      swift_release_n(a1, 2);
    }

    v37 = swift_release(v58);
    (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v59, v57, v37);
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
  v34 = *(void (**)(uint64_t *, char *, uint64_t))(v10 + 16);
  v34(v15, v18, v9);
  v35 = *(unsigned int (**)(uint64_t *, uint64_t))(v10 + 88);
  if (v35(v15, v9) == enum case for FlowDestination.writeReviewNew(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v15, v9);
    sub_2BB9E0(*v15);
    v36 = swift_release(v58);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v18, v9, v36);
LABEL_8:
    sub_D1D4((uint64_t)v67, (uint64_t *)&unk_3D30E0);
    v38 = v68;
    return sub_D1D4((uint64_t)v38, &qword_3D31A0);
  }
  v40 = v15;
  v41 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
  v41(v40, v9);
  v34(v12, v18, v9);
  if (v35(v12, v9) == enum case for FlowDestination.inAppProductPage(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    v42 = v12[2];
    sub_2BCF50(*v12, v12[1], v42);
    swift_bridgeObjectRelease(v42);
    v43 = swift_release(v58);
    ((void (*)(char *, uint64_t, __n128))v41)(v18, v9, v43);
    goto LABEL_8;
  }
  v41(v12, v9);
  sub_D184((uint64_t)v68, (uint64_t)v64, &qword_3D31A0);
  v44 = v65;
  if (!v65)
  {
    v49 = swift_release(v58);
    ((void (*)(char *, uint64_t, __n128))v41)(v18, v9, v49);
    sub_D1D4((uint64_t)v67, (uint64_t *)&unk_3D30E0);
    sub_D1D4((uint64_t)v68, &qword_3D31A0);
    v38 = v64;
    return sub_D1D4((uint64_t)v38, &qword_3D31A0);
  }
  v45 = v66;
  __swift_project_boxed_opaque_existential_1(v64, v65);
  memset(v63, 0, sizeof(v63));
  v46 = v58;
  v59 = (char *)v41;
  if (v58)
  {
    v47 = swift_retain(v58);
    v48 = FlowTransitionSource.view.getter(v47);
    swift_release(v46);
  }
  else
  {
    v48 = 0;
  }
  sub_D184((uint64_t)v67, (uint64_t)&v60, (uint64_t *)&unk_3D30E0);
  if (v61[2] == 1)
  {
    sub_D1D4((uint64_t)&v60, (uint64_t *)&unk_3D30E0);
    memset(v62, 0, sizeof(v62));
  }
  else
  {
    sub_D184((uint64_t)&v60, (uint64_t)v62, &qword_3D1A70);
    sub_1D628((uint64_t)&v60);
  }
  swift_retain(a1);
  v51 = sub_54DAC(v50, (uint64_t)v63, v48, (uint64_t)v62, (uint64_t)v5);
  v52 = FlowAction.referrerUrl.getter(v51);
  v54 = v53;
  (*(void (**)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 32))(v18, v5, v52, v53, v44, v45);
  swift_bridgeObjectRelease(v54);
  swift_release(v46);
  sub_FA4C((uint64_t)v5, type metadata accessor for FlowPresentationHints);
  ((void (*)(char *, uint64_t))v59)(v18, v9);
  sub_D1D4((uint64_t)v67, (uint64_t *)&unk_3D30E0);
  sub_D1D4((uint64_t)v68, &qword_3D31A0);
  return __swift_destroy_boxed_opaque_existential_0(v64);
}

void *sub_2B9008(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  void *result;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  unsigned int v25;
  uint64_t v26;
  unsigned __int8 v27;
  int v28;
  _BOOL4 v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  NSString v34;
  void *v35;
  double v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  unsigned __int8 v40;
  int v41;
  __n128 v42;
  id v43;
  Swift::String v44;
  Swift::String v45;
  void *object;
  NSString v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  uint64_t v76;
  id v77;
  __int128 v78;
  __int128 v79;
  __int128 aBlock;
  uint64_t (*v81)();
  char *v82;
  uint64_t (*v83)(uint64_t);
  _QWORD *v84;
  _QWORD v85[5];
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;
  Swift::String v89;

  v3 = v2;
  v6 = type metadata accessor for FlowDestination(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&aBlock, v10, v10);
  if (!v82)
    return (void *)sub_D1D4((uint64_t)&aBlock, &qword_3D31A0);
  sub_1B738(&aBlock, (uint64_t)v86);
  v11 = BaseObjectGraph.injectIfAvailable<A>(_:)(v85, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  SheetAction.sheetTitle.getter(v11);
  v13 = v12;
  SheetAction.message.getter();
  v15 = v14;
  if (v13)
  {
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v16 = 0;
  }
  v73 = v6;
  v72 = v7;
  if (v15)
  {
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v18 = 0;
  }
  v77 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, v18, 0);

  v19 = SheetAction.actions.getter();
  v20 = v19;
  v71 = v9;
  v76 = a1;
  if ((unint64_t)v19 >> 62)
  {
    if (v19 >= 0)
      v19 &= 0xFFFFFFFFFFFFFF8uLL;
    v21 = _CocoaArrayWrapper.endIndex.getter(v19);
    if (!v21)
      goto LABEL_25;
  }
  else
  {
    v21 = *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8));
    if (!v21)
      goto LABEL_25;
  }
  result = (void *)objc_opt_self(UIAlertAction);
  v75 = result;
  if (v21 < 1)
  {
    __break(1u);
    return result;
  }
  v22 = 0;
  v74 = v20 & 0xC000000000000001;
  do
  {
    if (v74)
    {
      v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v20);
    }
    else
    {
      v23 = *(_QWORD *)(v20 + 8 * v22 + 32);
      v24 = swift_retain(v23);
    }
    v25 = Action.presentationStyle.getter(v24);
    v26 = static Link.Presentation.alertDestructive.getter();
    v27 = v26;
    v28 = Link.Presentation.init(rawValue:)(v26);
    v29 = Link.Presentation.init(rawValue:)(v28 & v25) == v27;
    Action.title.getter(v30);
    v32 = v31;
    v33 = (_QWORD *)swift_allocObject(&unk_391538, 40, 7);
    v33[2] = v3;
    v33[3] = v23;
    v33[4] = a2;
    swift_retain(v3);
    swift_retain(v23);
    swift_retain(a2);
    if (v32)
    {
      v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v32);
    }
    else
    {
      v34 = 0;
    }
    v83 = sub_2BF33C;
    v84 = v33;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v81 = sub_2BBC60;
    v82 = (char *)&block_descriptor_19_1;
    v35 = _Block_copy(&aBlock);
    *(_QWORD *)&v36 = swift_release(v84).n128_u64[0];
    v37 = objc_msgSend(v75, "actionWithTitle:style:handler:", v34, 2 * v29, v35, v36);
    _Block_release(v35);

    LODWORD(v35) = Action.presentationStyle.getter(v38);
    v39 = static Link.Presentation.checked.getter();
    v40 = v39;
    v41 = Link.Presentation.init(rawValue:)(v39);
    if (Link.Presentation.init(rawValue:)(v41 & v35) == v40)
      objc_msgSend(v37, "_setChecked:", 1);
    ++v22;
    objc_msgSend(v77, "addAction:", v37);
    swift_release(v23);

  }
  while (v21 != v22);
LABEL_25:
  v42 = swift_bridgeObjectRelease(v20);
  if ((SheetAction.isCancelable.getter(v42) & 1) != 0)
  {
    v43 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v89._object = (void *)0xE000000000000000;
    v44._countAndFlagsBits = 0x435F4E4F49544341;
    v44._object = (void *)0xED00004C45434E41;
    v45._countAndFlagsBits = 0;
    v45._object = (void *)0xE000000000000000;
    v89._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)v43, v45, v89)._object;

    v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v48 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v47, 1, 0);

    v49 = v77;
    objc_msgSend(v77, "addAction:", v48);
    objc_msgSend(v49, "setPreferredAction:", v48);

  }
  sub_D184((uint64_t)v85, (uint64_t)&aBlock, (uint64_t *)&unk_3D30E0);
  v50 = v73;
  v51 = v72;
  v52 = v71;
  if (v82 == (_BYTE *)&dword_0 + 1)
  {
    sub_D1D4((uint64_t)&aBlock, (uint64_t *)&unk_3D30E0);
    v78 = 0u;
    v79 = 0u;
LABEL_36:
    sub_D1D4((uint64_t)&v78, &qword_3D1A70);
    goto LABEL_37;
  }
  sub_D184((uint64_t)&aBlock, (uint64_t)&v78, &qword_3D1A70);
  sub_1D628((uint64_t)&aBlock);
  if (!*((_QWORD *)&v79 + 1))
    goto LABEL_36;
  v53 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
  if ((swift_dynamicCast(&aBlock, &v78, (char *)&type metadata for Any + 8, v53, 6) & 1) != 0)
  {
    v54 = (void *)aBlock;
    v55 = objc_msgSend(v77, "popoverPresentationController");
    if (v55)
    {
      v56 = v55;
      objc_msgSend(v55, "setBarButtonItem:", v54);

    }
    v57 = objc_msgSend(v77, "popoverPresentationController");
    if (!v57)
      goto LABEL_46;
    v58 = v57;
    objc_msgSend(v57, "_setIgnoreBarButtonItemSiblings:", 1);
LABEL_45:

LABEL_46:
    goto LABEL_48;
  }
LABEL_37:
  sub_D184((uint64_t)v85, (uint64_t)&aBlock, (uint64_t *)&unk_3D30E0);
  if (v82 == (_BYTE *)&dword_0 + 1)
  {
    sub_D1D4((uint64_t)&aBlock, (uint64_t *)&unk_3D30E0);
    v78 = 0u;
    v79 = 0u;
LABEL_47:
    sub_D1D4((uint64_t)&v78, &qword_3D1A70);
    goto LABEL_48;
  }
  sub_D184((uint64_t)&aBlock, (uint64_t)&v78, &qword_3D1A70);
  sub_1D628((uint64_t)&aBlock);
  if (!*((_QWORD *)&v79 + 1))
    goto LABEL_47;
  v59 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  if ((swift_dynamicCast(&aBlock, &v78, (char *)&type metadata for Any + 8, v59, 6) & 1) != 0)
  {
    v54 = (void *)aBlock;
    v60 = objc_msgSend(v77, "popoverPresentationController");
    if (v60)
    {
      v61 = v60;
      objc_msgSend(v60, "setSourceView:", v54);

    }
    v62 = objc_msgSend(v77, "popoverPresentationController");
    if (!v62)
      goto LABEL_46;
    v58 = v62;
    objc_msgSend(v54, "bounds");
    objc_msgSend(v58, "setSourceRect:");
    goto LABEL_45;
  }
LABEL_48:
  v63 = v87;
  v64 = v88;
  __swift_project_boxed_opaque_existential_1(v86, v87);
  v65 = v77;
  *v52 = v77;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v51 + 104))(v52, enum case for FlowDestination.viewController(_:), v50);
  v66 = qword_3CF148;
  v67 = v65;
  if (v66 != -1)
    swift_once(&qword_3CF148, sub_54BE4);
  v68 = type metadata accessor for FlowPresentationHints(0);
  v69 = __swift_project_value_buffer(v68, (uint64_t)qword_3D2840);
  (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v64 + 32))(v52, v69, 0, 0, v63, v64);

  (*(void (**)(_QWORD *, uint64_t))(v51 + 8))(v52, v50);
  sub_D1D4((uint64_t)v85, (uint64_t *)&unk_3D30E0);
  return (void *)__swift_destroy_boxed_opaque_existential_0(v86);
}

uint64_t sub_2B9850(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t (*v46)(uint64_t);
  void *v47;
  id countAndFlagsBits;
  NSString v49;
  NSString v50;
  void (*v51)(char *, _QWORD, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  char v57;
  __n128 v58;
  uint64_t v59;
  __n128 v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  void *v72;
  void *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  char *v79;
  char *v80;
  Swift::String v81;
  uint64_t v82;
  Swift::String v83;
  NSString v84;
  id v85;
  id v86;
  void *v87;
  uint64_t v88;
  void *v89;
  void *v90;
  unint64_t v91;
  uint64_t v92;
  NSString v93;
  void *v94;
  id v95;
  uint64_t v96;
  __n128 v97;
  int v98;
  _BOOL4 v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  void *v110;
  id v111;
  uint64_t (*v112)(uint64_t);
  id v113;
  __int128 *p_aBlock;
  char *v115;
  char v116;
  __n128 v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  char v124;
  __n128 v125;
  char *v126;
  void (*v127)(char *, _QWORD, uint64_t);
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  NSString v132;
  __n128 v133;
  uint64_t v134;
  double v135;
  uint64_t v136;
  NSString v137;
  char v138;
  __n128 v139;
  id v140;
  void *v141;
  id v142;
  id v143;
  id v144;
  uint64_t v145;
  NSObject *v146;
  os_log_type_t v147;
  uint8_t *v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  _QWORD *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, _QWORD, uint64_t);
  char *v177;
  uint64_t v178;
  __int128 aBlock;
  uint64_t (*v180)();
  void *v181;
  uint64_t (*v182)(uint64_t);
  _QWORD *v183;
  __int128 v184;
  _QWORD v185[4];

  v162 = type metadata accessor for Logger(0);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v163 = (char *)&v159 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v4);
  v173 = (char *)&v159 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for ArtworkModel(0);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v167 = (char **)((char *)&v159 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v170 = type metadata accessor for FlowDestination(0);
  v169 = *(_QWORD *)(v170 - 8);
  v7 = __chkstk_darwin(v170);
  v177 = (char *)&v159 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AlertActionStyle(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v165 = (char *)&v159 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v166 = (char *)&v159 - v13;
  __chkstk_darwin(v14);
  v159 = (char *)&v159 - v15;
  __chkstk_darwin(v16);
  v160 = (char *)&v159 - v17;
  __chkstk_darwin(v18);
  v168 = (char *)&v159 - v19;
  __chkstk_darwin(v20);
  v164 = (char *)&v159 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v159 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v159 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v159 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v159 - v32;
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  v174 = a2;
  v35 = BaseObjectGraph.injectIfAvailable<A>(_:)(v185, v34, v34);
  AlertAction.style.getter(v35);
  v176 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
  v176(v30, enum case for AlertActionStyle.normal(_:), v9);
  v36 = sub_239FC(&qword_3E0F88, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AlertActionStyle, (uint64_t)&protocol conformance descriptor for AlertActionStyle);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v9, v36);
  v178 = v36;
  dispatch thunk of RawRepresentable.rawValue.getter(&v184, v9, v36);
  v37 = *((_QWORD *)&aBlock + 1);
  v38 = *((_QWORD *)&v184 + 1);
  if (aBlock == v184)
  {
    v39 = 1;
    v38 = *((_QWORD *)&aBlock + 1);
  }
  else
  {
    v39 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, *((_QWORD *)&aBlock + 1), v184, *((_QWORD *)&v184 + 1), 0);
  }
  swift_bridgeObjectRelease(v37);
  v40 = swift_bridgeObjectRelease(v38);
  v41 = *(_QWORD *)(v10 + 8);
  ((void (*)(char *, uint64_t, __n128))v41)(v30, v9, v40);
  v42 = ((uint64_t (*)(char *, uint64_t))v41)(v33, v9);
  if ((v39 & 1) == 0)
  {
    AlertAction.style.getter(v42);
    v51 = v176;
    v176(v24, enum case for AlertActionStyle.toast(_:), v9);
    v52 = v178;
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v9, v178);
    dispatch thunk of RawRepresentable.rawValue.getter(&v184, v9, v52);
    v53 = *((_QWORD *)&aBlock + 1);
    v54 = *((_QWORD *)&v184 + 1);
    if (aBlock == v184)
    {
      v55 = swift_bridgeObjectRelease_n(*((_QWORD *)&aBlock + 1), 2);
      ((void (*)(char *, uint64_t, __n128))v41)(v24, v9, v55);
      v56 = ((uint64_t (*)(char *, uint64_t))v41)(v27, v9);
LABEL_11:
      v59 = (uint64_t)v173;
      AlertAction.artwork.getter(v56);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48))(v59, 1, v172) == 1)
      {
        sub_D1D4(v59, &qword_3D0A58);
        v61 = 0;
      }
      else
      {
        v71 = v167;
        sub_2376C(v59, (uint64_t)v167);
        sub_14D1C8(v71);
        if (v72)
        {
          v73 = v72;
          v61 = (uint64_t (*)(uint64_t))objc_msgSend(v72, "imageWithRenderingMode:", 2);

        }
        else
        {
          v61 = 0;
        }
        sub_FA4C((uint64_t)v71, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      }
      v105 = Action.title.getter(v60);
      if (v106)
        v107 = v105;
      else
        v107 = 0;
      if (v106)
        v108 = v106;
      else
        v108 = 0xE000000000000000;
      v109 = AlertAction.message.getter(v105);
      *(_QWORD *)&aBlock = v107;
      *((_QWORD *)&aBlock + 1) = v108;
      v180 = (uint64_t (*)())v109;
      v181 = v110;
      v182 = v61;
      v111 = objc_allocWithZone((Class)type metadata accessor for HUDViewController());
      v112 = v61;
      v113 = HUDViewController.init(type:)(&aBlock);
      sub_1068BC();

      goto LABEL_50;
    }
    v57 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, *((_QWORD *)&aBlock + 1), v184, *((_QWORD *)&v184 + 1), 0);
    swift_bridgeObjectRelease(v53);
    v58 = swift_bridgeObjectRelease(v54);
    ((void (*)(char *, uint64_t, __n128))v41)(v24, v9, v58);
    v56 = ((uint64_t (*)(char *, uint64_t))v41)(v27, v9);
    if ((v57 & 1) != 0)
      goto LABEL_11;
    v74 = v164;
    AlertAction.style.getter(v56);
    v51(v168, enum case for AlertActionStyle.authenticate(_:), v9);
    v75 = v178;
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v9, v178);
    dispatch thunk of RawRepresentable.rawValue.getter(&v184, v9, v75);
    v76 = *((_QWORD *)&aBlock + 1);
    v77 = *((_QWORD *)&v184 + 1);
    if (aBlock == v184)
    {
      v78 = swift_bridgeObjectRelease_n(*((_QWORD *)&aBlock + 1), 2);
      v79 = v166;
      v80 = v165;
LABEL_27:
      ((void (*)(char *, uint64_t, __n128))v41)(v168, v9, v78);
      ((void (*)(char *, uint64_t))v41)(v74, v9);
      goto LABEL_52;
    }
    v115 = v74;
    v116 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, *((_QWORD *)&aBlock + 1), v184, *((_QWORD *)&v184 + 1), 0);
    swift_bridgeObjectRelease(v76);
    v117 = swift_bridgeObjectRelease(v77);
    ((void (*)(char *, uint64_t, __n128))v41)(v168, v9, v117);
    v118 = ((uint64_t (*)(char *, uint64_t))v41)(v115, v9);
    v79 = v166;
    v80 = v165;
    if ((v116 & 1) == 0)
    {
      AlertAction.style.getter(v118);
      v127 = v51;
      v128 = v159;
      v127(v159, enum case for AlertActionStyle.authenticateEnableAccountCreation(_:), v9);
      v129 = v178;
      dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v9, v178);
      dispatch thunk of RawRepresentable.rawValue.getter(&v184, v9, v129);
      v130 = *((_QWORD *)&aBlock + 1);
      v131 = *((_QWORD *)&v184 + 1);
      if (aBlock == v184)
      {
        v78 = swift_bridgeObjectRelease_n(*((_QWORD *)&aBlock + 1), 2);
        v168 = v128;
        v74 = v160;
        v51 = v176;
        goto LABEL_27;
      }
      v138 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, *((_QWORD *)&aBlock + 1), v184, *((_QWORD *)&v184 + 1), 0);
      swift_bridgeObjectRelease(v130);
      v139 = swift_bridgeObjectRelease(v131);
      ((void (*)(char *, uint64_t, __n128))v41)(v128, v9, v139);
      ((void (*)(char *, uint64_t))v41)(v160, v9);
      v51 = v176;
      if ((v138 & 1) == 0)
      {
LABEL_50:
        p_aBlock = (__int128 *)v185;
        return sub_D1D4((uint64_t)p_aBlock, &qword_3D31A0);
      }
    }
LABEL_52:
    v119 = objc_msgSend(objc_allocWithZone((Class)AMSAuthenticateOptions), "init");
    AlertAction.style.getter(v119);
    v51(v80, enum case for AlertActionStyle.authenticateEnableAccountCreation(_:), v9);
    v120 = v178;
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v9, v178);
    dispatch thunk of RawRepresentable.rawValue.getter(&v184, v9, v120);
    v121 = *((_QWORD *)&aBlock + 1);
    v122 = *((_QWORD *)&v184 + 1);
    if (aBlock == v184)
    {
      v123 = swift_bridgeObjectRelease_n(*((_QWORD *)&aBlock + 1), 2);
      ((void (*)(char *, uint64_t, __n128))v41)(v80, v9, v123);
      ((void (*)(char *, uint64_t))v41)(v79, v9);
    }
    else
    {
      v124 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, *((_QWORD *)&aBlock + 1), v184, *((_QWORD *)&v184 + 1), 0);
      swift_bridgeObjectRelease(v121);
      v125 = swift_bridgeObjectRelease(v122);
      ((void (*)(char *, uint64_t, __n128))v41)(v80, v9, v125);
      ((void (*)(char *, uint64_t))v41)(v79, v9);
      if ((v124 & 1) == 0)
      {
        objc_msgSend(v119, "setAuthenticationType:", 2);
        v132 = String._bridgeToObjectiveC()();
        objc_msgSend(v119, "setReason:", v132);

        Action.title.getter(v133);
        if (v134)
        {
          v136 = v134;
          v137 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v135 = swift_bridgeObjectRelease(v136).n128_u64[0];
        }
        else
        {
          v137 = 0;
        }
        v126 = v163;
        objc_msgSend(v119, "setPromptTitle:", v137, v135);

LABEL_64:
        v140 = objc_msgSend((id)objc_opt_self(UIViewController), "mt_rootViewController");
        if (v140
          && (v141 = v140,
              v142 = objc_msgSend(v140, "mt_topViewController"),
              v141,
              v142))
        {
          v143 = objc_msgSend(objc_allocWithZone((Class)AMSUIAuthenticateTask), "initWithAccount:presentingViewController:options:", 0, v142, v119);
          v144 = objc_msgSend(v143, "performAuthentication");

        }
        else
        {
          v145 = static Logger.purchases.getter(v140);
          v146 = Logger.logObject.getter(v145);
          v147 = static os_log_type_t.error.getter(v146);
          if (os_log_type_enabled(v146, v147))
          {
            v148 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v148 = 0;
            _os_log_impl(&dword_0, v146, v147, "Unable to display AMSUIAuthenticationTask because could not get topVC.", v148, 2u);
            swift_slowDealloc(v148, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v161 + 8))(v126, v162);
        }
        goto LABEL_50;
      }
    }
    objc_msgSend(v119, "setEnableAccountCreation:", 1);
    v126 = v163;
    goto LABEL_64;
  }
  v44 = Action.title.getter(v43);
  v46 = v45;
  AlertAction.message.getter(v44);
  countAndFlagsBits = v47;
  if (v46)
  {
    v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v46);
    if (countAndFlagsBits)
    {
LABEL_7:
      v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(countAndFlagsBits);
      goto LABEL_15;
    }
  }
  else
  {
    v49 = 0;
    if (v47)
      goto LABEL_7;
  }
  v50 = 0;
LABEL_15:
  v176 = (void (*)(char *, _QWORD, uint64_t))objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v49, v50, 1);

  v62 = AlertAction.buttonActions.getter();
  if (v62)
    v63 = v62;
  else
    v63 = (unint64_t)_swiftEmptyArrayStorage;
  v64 = AlertAction.isCancelable.getter();
  v178 = v63;
  v65 = v63 >> 62;
  v66 = v177;
  if ((v64 & 1) != 0)
  {
    if (v65)
    {
      v156 = v178;
      if (v178 < 0)
        v157 = v178;
      else
        v157 = v178 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v178);
      v67 = _CocoaArrayWrapper.endIndex.getter(v157);
      swift_bridgeObjectRelease(v156);
    }
    else
    {
      v67 = *(_QWORD *)((char *)&dword_10 + (v178 & 0xFFFFFFFFFFFFF8));
    }
    v68 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v158 = 0xE000000000000000;
    if (v67)
    {
      v69 = 0x435F4E4F49544341;
      v70 = 0xED00004C45434E41;
    }
    else
    {
      v69 = 0x4F5F4E4F49544341;
      v70 = 0xE90000000000004BLL;
    }
    v81._countAndFlagsBits = 0;
    v81._object = (void *)0xE000000000000000;
    v82 = 0;
    v83 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v69, (Swift::String_optional)0, (NSBundle)v68, v81, *(Swift::String *)(&v158 - 1));
    countAndFlagsBits = (id)v83._countAndFlagsBits;

    v84 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v83._object);
    v85 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v84, 1, 0);

    v86 = v176;
    objc_msgSend(v176, "addAction:", v85);
    objc_msgSend(v86, "setPreferredAction:", v85);

  }
  if (v65)
  {
    v149 = v178;
    if (v178 < 0)
      v150 = v178;
    else
      v150 = v178 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v178);
    v87 = (void *)_CocoaArrayWrapper.endIndex.getter(v150);
    swift_bridgeObjectRelease(v149);
    if (v87)
      goto LABEL_32;
  }
  else
  {
    v87 = *(void **)((char *)&dword_10 + (v178 & 0xFFFFFFFFFFFFF8));
    if (v87)
    {
LABEL_32:
      v88 = objc_opt_self(UIAlertAction);
      if ((uint64_t)v87 < 1)
      {
        __break(1u);
        goto LABEL_80;
      }
      v89 = (void *)v88;
      v90 = 0;
      v91 = v178 & 0xC000000000000001;
      v92 = v174;
      do
      {
        if (v91)
        {
          v96 = specialized _ArrayBuffer._getElementSlowPath(_:)(v90, v178);
        }
        else
        {
          v96 = *(_QWORD *)(v178 + 8 * (_QWORD)v90 + 32);
          v97 = swift_retain(v96);
        }
        v98 = Action.presentationStyle.getter(v97);
        v99 = v98 == static Link.Presentation.alertDestructive.getter();
        Action.title.getter(v100);
        v102 = v101;
        v103 = (_QWORD *)swift_allocObject(&unk_391588, 40, 7);
        v104 = v175;
        v103[2] = v175;
        v103[3] = v96;
        v103[4] = v92;
        swift_retain(v104);
        swift_retain(v96);
        swift_retain(v92);
        if (v102)
        {
          v93 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v102);
        }
        else
        {
          v93 = 0;
        }
        v90 = (char *)v90 + 1;
        v182 = sub_2BF37C;
        v183 = v103;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v180 = sub_2BBC60;
        v181 = &block_descriptor_25_1;
        v94 = _Block_copy(&aBlock);
        v95 = objc_msgSend(v89, "actionWithTitle:style:handler:", v93, 2 * v99, v94, swift_release(v183).n128_f64[0]);
        _Block_release(v94);

        objc_msgSend(v176, "addAction:", v95);
        swift_release(v96);

        v66 = v177;
      }
      while (v87 != v90);
    }
  }
  swift_bridgeObjectRelease(v178);
  sub_D184((uint64_t)v185, (uint64_t)&aBlock, &qword_3D31A0);
  v87 = v181;
  if (v181)
  {
    v46 = v182;
    __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v181);
    v151 = v176;
    *v66 = v176;
    v41 = v169;
    v65 = v170;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v169 + 104))(v66, enum case for FlowDestination.viewController(_:), v170);
    v152 = qword_3CF148;
    countAndFlagsBits = v151;
    if (v152 == -1)
    {
LABEL_76:
      v153 = type metadata accessor for FlowPresentationHints(0);
      v154 = __swift_project_value_buffer(v153, (uint64_t)qword_3D2840);
      (*((void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, void *, uint64_t (*)(uint64_t)))v46 + 4))(v66, v154, 0, 0, v87, v46);

      (*(void (**)(_QWORD *, unint64_t))(v41 + 8))(v66, v65);
      sub_D1D4((uint64_t)v185, &qword_3D31A0);
      return __swift_destroy_boxed_opaque_existential_0(&aBlock);
    }
LABEL_80:
    swift_once(&qword_3CF148, sub_54BE4);
    goto LABEL_76;
  }
  sub_D1D4((uint64_t)v185, &qword_3D31A0);

  p_aBlock = &aBlock;
  return sub_D1D4((uint64_t)p_aBlock, &qword_3D31A0);
}

uint64_t sub_2BA804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  NSString v16;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  NSString v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  Swift::String v33;
  Swift::String v34;
  void *object;
  uint64_t v36;
  _QWORD *v37;
  NSString v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 aBlock;
  uint64_t (*v55)();
  void *v56;
  void *v57;
  _QWORD *v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;

  v3 = v2;
  v53 = type metadata accessor for FlowDestination(0);
  v6 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&aBlock, v9, v9);
  if (!v56)
    return sub_D1D4((uint64_t)&aBlock, &qword_3D31A0);
  v51 = v8;
  sub_1B738(&aBlock, (uint64_t)v59);
  Action.title.getter(v10);
  v12 = v11;
  TextFieldAction.message.getter();
  v14 = v13;
  if (!v12)
  {
    v15 = 0;
    v52 = v6;
    if (v13)
      goto LABEL_4;
LABEL_7:
    v16 = 0;
    goto LABEL_8;
  }
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v52 = v6;
  if (!v14)
    goto LABEL_7;
LABEL_4:
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
LABEL_8:
  v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v15, v16, 1);

  v19 = swift_allocObject(&unk_3915D8, 24, 7);
  *(_QWORD *)(v19 + 16) = 0;
  v20 = swift_allocObject(&unk_391600, 32, 7);
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = v19;
  v57 = sub_2BF438;
  v58 = (_QWORD *)v20;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v55 = sub_2BBC60;
  v56 = &block_descriptor_34_0;
  v21 = _Block_copy(&aBlock);
  v22 = v58;
  swift_retain(a1);
  swift_retain(v19);
  objc_msgSend(v18, "addTextFieldWithConfigurationHandler:", v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);
  TextFieldAction.okButtonTitle.getter();
  v24 = v23;
  v25 = swift_allocObject(&unk_391650, 24, 7);
  swift_weakInit(v25 + 16, v3);
  v26 = (_QWORD *)swift_allocObject(&unk_391678, 48, 7);
  v50 = v3;
  v27 = v26;
  v26[2] = v19;
  v26[3] = a1;
  v26[4] = v25;
  v26[5] = a2;
  swift_retain(a1);
  swift_retain(v19);
  swift_retain(v25);
  swift_retain(a2);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v57 = sub_2BF4A0;
  v58 = v27;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v55 = sub_2BBC60;
  v56 = &block_descriptor_43_0;
  v29 = _Block_copy(&aBlock);
  swift_release(v58);
  v30 = (void *)objc_opt_self(UIAlertAction);
  v31 = objc_msgSend(v30, "actionWithTitle:style:handler:", v28, 0, v29);
  _Block_release(v29);
  swift_release(v25);

  objc_msgSend(v18, "addAction:", v31);
  if ((TextFieldAction.isCancelable.getter(objc_msgSend(v18, "setPreferredAction:", v31)) & 1) != 0)
  {
    v32 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v62._object = (void *)0xE000000000000000;
    v33._countAndFlagsBits = 0x435F4E4F49544341;
    v33._object = (void *)0xED00004C45434E41;
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v62._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v62)._object;

    v36 = swift_allocObject(&unk_391650, 24, 7);
    swift_weakInit(v36 + 16, v50);
    v37 = (_QWORD *)swift_allocObject(&unk_3916C8, 40, 7);
    v37[2] = a1;
    v37[3] = v36;
    v37[4] = a2;
    swift_retain(a1);
    swift_retain(a2);
    swift_retain(v36);
    v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v57 = sub_2BF4B0;
    v58 = v37;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v55 = sub_2BBC60;
    v56 = &block_descriptor_50_0;
    v39 = _Block_copy(&aBlock);
    v40 = objc_msgSend(v30, "actionWithTitle:style:handler:", v38, 1, v39, swift_release(v58).n128_f64[0]);
    _Block_release(v39);
    swift_release(v36);

    objc_msgSend(v18, "addAction:", v40);
  }
  v41 = v60;
  v42 = v61;
  __swift_project_boxed_opaque_existential_1(v59, v60);
  v43 = v51;
  v44 = v52;
  *v51 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v44 + 104))(v43, enum case for FlowDestination.viewController(_:), v53);
  v45 = qword_3CF148;
  v46 = v18;
  if (v45 != -1)
    swift_once(&qword_3CF148, sub_54BE4);
  v47 = type metadata accessor for FlowPresentationHints(0);
  v48 = __swift_project_value_buffer(v47, (uint64_t)qword_3D2840);
  (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v42 + 32))(v43, v48, 0, 0, v41, v42);

  (*(void (**)(_QWORD *, uint64_t))(v44 + 8))(v43, v53);
  swift_release(v19);
  return __swift_destroy_boxed_opaque_existential_0(v59);
}

double sub_2BADBC(uint64_t a1, uint64_t a2)
{
  return sub_2BADF4(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodeOffer, (void (*)(void))&EpisodeContextAction.episodeOffer.getter, (void (*)(uint64_t, id, void *, char *, uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.presentContextActions(asPartOf:viewController:view:episodeOffer:));
}

double sub_2BADD8(uint64_t a1, uint64_t a2)
{
  return sub_2BADF4(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for ShowOffer, (void (*)(void))&PodcastContextAction.podcastOffer.getter, (void (*)(uint64_t, id, void *, char *, uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.presentContextActions(asPartOf:viewController:view:podcastOffer:));
}

double sub_2BADF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(void), void (*a5)(uint64_t, id, void *, char *, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  double result;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void (*v28)(uint64_t, id, void *, char *, uint64_t, uint64_t);
  void *v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  _QWORD v35[5];
  _BYTE v36[32];

  v9 = a3(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - v11;
  v13 = v5 + 24;
  swift_beginAccess(v13, v36, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = objc_opt_self(UIViewController);
    v17 = (id)swift_dynamicCastObjCClass(v15, v16);
    if (v17)
      goto LABEL_7;

  }
  v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v19 = objc_msgSend(v18, "delegate");

  if (v19)
  {
    if ((objc_msgSend(v19, "respondsToSelector:", "window") & 1) != 0)
    {
      v21 = objc_msgSend(v19, "window");
      v17 = objc_msgSend(v21, "rootViewController", swift_unknownObjectRelease(v19).n128_f64[0]);

      if (v17)
      {
LABEL_7:
        BaseObjectGraph.injectIfAvailable<A>(_:)(v35, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
        sub_D184((uint64_t)v35, (uint64_t)v30, (uint64_t *)&unk_3D30E0);
        if (v31 == 1)
        {
          sub_D1D4((uint64_t)v30, (uint64_t *)&unk_3D30E0);
          v33 = 0u;
          v34 = 0u;
        }
        else
        {
          sub_D184((uint64_t)v30, (uint64_t)&v33, &qword_3D1A70);
          sub_1D628((uint64_t)v30);
          if (*((_QWORD *)&v34 + 1))
          {
            v22 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
            if ((swift_dynamicCast(v30, &v33, (char *)&type metadata for Any + 8, v22, 6) & 1) != 0)
            {
              v29 = (void *)v30[0];
              v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
              BaseObjectGraph.inject<A>(_:)(v30, v23, v23);
              v28 = a5;
              v24 = v31;
              v27 = v32;
              __swift_project_boxed_opaque_existential_1(v30, v31);
              a4();
              v25 = a2;
              v26 = v29;
              v28(v25, v17, v29, v12, v24, v27);

              (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
              sub_D1D4((uint64_t)v35, (uint64_t *)&unk_3D30E0);
              __swift_destroy_boxed_opaque_existential_0(v30);
              return result;
            }

            goto LABEL_13;
          }
        }

        sub_D1D4((uint64_t)&v33, &qword_3D1A70);
LABEL_13:
        sub_D1D4((uint64_t)v35, (uint64_t *)&unk_3D30E0);
      }
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v19).n128_u64[0];
    }
  }
  return result;
}

double sub_2BB0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  double result;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _QWORD v29[5];
  _BYTE v30[24];

  v4 = v2 + 24;
  swift_beginAccess(v4, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_opt_self(UIViewController);
    v8 = (id)swift_dynamicCastObjCClass(v6, v7);
    if (v8)
      goto LABEL_7;

  }
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v10 = objc_msgSend(v9, "delegate");

  if (v10)
  {
    if ((objc_msgSend(v10, "respondsToSelector:", "window") & 1) != 0)
    {
      v12 = objc_msgSend(v10, "window");
      v8 = objc_msgSend(v12, "rootViewController", swift_unknownObjectRelease(v10).n128_f64[0]);

      if (v8)
      {
LABEL_7:
        BaseObjectGraph.injectIfAvailable<A>(_:)(v29, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
        sub_D184((uint64_t)v29, (uint64_t)v24, (uint64_t *)&unk_3D30E0);
        if (v25 == 1)
        {
          sub_D1D4((uint64_t)v24, (uint64_t *)&unk_3D30E0);
          v27 = 0u;
          v28 = 0u;
        }
        else
        {
          sub_D184((uint64_t)v24, (uint64_t)&v27, &qword_3D1A70);
          sub_1D628((uint64_t)v24);
          if (*((_QWORD *)&v28 + 1))
          {
            v13 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
            if ((swift_dynamicCast(v24, &v27, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
            {
              v14 = (void *)v24[0];
              v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
              BaseObjectGraph.inject<A>(_:)(v24, v15, v15);
              v16 = v25;
              v17 = v26;
              __swift_project_boxed_opaque_existential_1(v24, v25);
              v18 = LibraryEpisodeContextAction.episodeUuid.getter();
              v20 = v19;
              v21 = LibraryEpisodeContextAction.stationUuid.getter();
              v23 = v22;
              dispatch thunk of EpisodeControllerProtocol.presentContextActions(asPartOf:viewController:view:episodeUuid:stationUuid:)(a2, v8, v14, v18, v20, v21, v22, v16, v17);

              swift_bridgeObjectRelease(v20);
              swift_bridgeObjectRelease(v23);
              sub_D1D4((uint64_t)v29, (uint64_t *)&unk_3D30E0);
              __swift_destroy_boxed_opaque_existential_0(v24);
              return result;
            }

            goto LABEL_13;
          }
        }

        sub_D1D4((uint64_t)&v27, &qword_3D1A70);
LABEL_13:
        sub_D1D4((uint64_t)v29, (uint64_t *)&unk_3D30E0);
      }
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
    }
  }
  return result;
}

double sub_2BB3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  double result;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD v24[5];
  _BYTE v25[24];
  _QWORD v26[10];

  v4 = v2 + 24;
  swift_beginAccess(v4, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_opt_self(UIViewController);
    v8 = (id)swift_dynamicCastObjCClass(v6, v7);
    if (v8)
      goto LABEL_7;

  }
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v10 = objc_msgSend(v9, "delegate");

  if (v10)
  {
    if ((objc_msgSend(v10, "respondsToSelector:", "window") & 1) != 0)
    {
      v12 = objc_msgSend(v10, "window");
      v8 = objc_msgSend(v12, "rootViewController", swift_unknownObjectRelease(v10).n128_f64[0]);

      if (v8)
      {
LABEL_7:
        BaseObjectGraph.injectIfAvailable<A>(_:)(v24, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
        sub_D184((uint64_t)v24, (uint64_t)v26, (uint64_t *)&unk_3D30E0);
        if (v26[3] == 1)
        {
          sub_D1D4((uint64_t)v26, (uint64_t *)&unk_3D30E0);
          v21 = 0u;
          v22 = 0u;
        }
        else
        {
          sub_D184((uint64_t)v26, (uint64_t)&v21, &qword_3D1A70);
          sub_1D628((uint64_t)v26);
          if (*((_QWORD *)&v22 + 1))
          {
            v13 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
            if ((swift_dynamicCast(v26, &v21, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
            {
              v14 = (void *)v26[0];
              v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
              BaseObjectGraph.inject<A>(_:)(&v21, v15, v15);
              v16 = *((_QWORD *)&v22 + 1);
              v17 = v23;
              __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
              v18 = LibraryPodcastContextAction.podcastUuid.getter();
              v20 = v19;
              LibraryPodcastContextAction.groupedEpisodeListType.getter(v26);
              dispatch thunk of EpisodeControllerProtocol.presentContextActions(asPartOf:viewController:view:podcastUuid:groupedEpisodeListType:)(a2, v8, v14, v18, v20, v26, v16, v17);
              sub_2BF510((uint64_t)v26);

              swift_bridgeObjectRelease(v20);
              sub_D1D4((uint64_t)v24, (uint64_t *)&unk_3D30E0);
              __swift_destroy_boxed_opaque_existential_0(&v21);
              return result;
            }

            goto LABEL_13;
          }
        }

        sub_D1D4((uint64_t)&v21, &qword_3D1A70);
LABEL_13:
        sub_D1D4((uint64_t)v24, (uint64_t *)&unk_3D30E0);
      }
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
    }
  }
  return result;
}

double sub_2BB694(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  double result;
  uint64_t v18;
  _QWORD v19[5];

  v3 = type metadata accessor for ActionMetricsBehavior(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = CompoundAction.actions.getter(v5);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v18 = v8;
    v10 = v8 + 32;
    v11 = enum case for ActionMetricsBehavior.fromAction(_:);
    do
    {
      sub_1D5D4(v10, (uint64_t)v19);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 104))(v7, v11, v3);
      v12 = type metadata accessor for FlowActionRunner();
      v14 = sub_239FC(&qword_3D31F0, v13, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
      v15 = ActionRunner.perform(_:withMetrics:asPartOf:)(v19, v7, a2, v12, v14);
      v16 = swift_release(v15);
      (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v7, v3, v16);
      __swift_destroy_boxed_opaque_existential_0(v19);
      v10 += 40;
      --v9;
    }
    while (v9);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_2BB7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for FlowDestination(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v20, v6, v6);
  if (!v21)
    return sub_D1D4((uint64_t)&v20, &qword_3D31A0);
  v7 = sub_1B738(&v20, (uint64_t)v22);
  v8 = OverflowAction.model.getter(&v20, v7);
  v9 = OverflowAction.cellType.getter(v8);
  v10 = OverflowAction.objectGraph.getter();
  v11 = objc_allocWithZone((Class)type metadata accessor for ModelViewOverflowViewController());
  v12 = (void *)sub_ED988(&v20, v9, v10, 0, 0);
  *(_BYTE *)(*(_QWORD *)(v1 + 16)
           + OBJC_IVAR____TtC23ShelfKitCollectionViews30ModelViewOverflowTransitioning_transitionFromAccessoryView) = 1;
  objc_msgSend(v12, "setTransitioningDelegate:");
  objc_msgSend(v12, "setModalPresentationStyle:", 4);
  v13 = v23;
  v14 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  *v5 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FlowDestination.viewController(_:), v2);
  v15 = qword_3CF148;
  v16 = v12;
  if (v15 != -1)
    swift_once(&qword_3CF148, sub_54BE4);
  v17 = type metadata accessor for FlowPresentationHints(0);
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_3D2840);
  (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v14 + 32))(v5, v18, 0, 0, v13, v14);

  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  return __swift_destroy_boxed_opaque_existential_0(v22);
}

void sub_2BB9E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E88);
  __chkstk_darwin(v3);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + 24;
  swift_beginAccess(v6, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = objc_opt_self(UIViewController);
    v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
    if (v10)
    {
      v11 = objc_msgSend(v10, "view");

      if (v11)
      {
        v12 = objc_msgSend(v11, "window");

        if (v12)
        {
          v13 = objc_msgSend(v12, "windowScene");

          if (v13)
          {
            if (qword_3CEFD8 != -1)
              swift_once(&qword_3CEFD8, sub_DE78);
            v14 = (void *)qword_3D0880;
            v15 = (void *)objc_opt_self(AMSProcessInfo);
            v16 = v14;
            v17 = objc_msgSend(v15, "currentProcess");
            v30 = a1;
            v18 = sub_5AE80();
            v19 = BinaryInteger.description.getter(&type metadata for UInt64, v18);
            v21 = v20;
            v22 = objc_allocWithZone((Class)type metadata accessor for ReviewContext(0));
            v23 = ReviewContext.init(accentColor:lockupStyle:lockupDetails:mediaTaskType:clientInfo:itemIdentifier:)(v14, 0, 0, 300, 0, v17, v19, v21);
            v24 = objc_msgSend((id)objc_opt_self(IMURLBag), "sharedInstance");
            v25 = type metadata accessor for ReviewCoordinator(0);
            swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
            v26 = ReviewCoordinator.init()();
            v27 = type metadata accessor for TaskPriority(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v5, 1, 1, v27);
            v28 = (_QWORD *)swift_allocObject(&unk_391480, 64, 7);
            v28[2] = 0;
            v28[3] = 0;
            v28[4] = v26;
            v28[5] = v13;
            v28[6] = v23;
            v28[7] = v24;
            v29 = sub_2B765C((uint64_t)v5, (uint64_t)&unk_3E0F60, (uint64_t)v28);
            swift_release(v29);
          }
        }
      }
    }
    else
    {

    }
  }
}

void sub_2BBC64(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

void sub_2BBCB4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *boxed_opaque_existential_0;
  Swift::String v25;
  __n128 v26;
  _QWORD v27[4];

  v6 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v6);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OSLogger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2B87E8();
  if (v13)
  {
    v15 = v13;
    v16 = v14;
    ObjectType = swift_getObjectType();
    dispatch thunk of ActionRunner.processMetrics(of:using:asPartOf:)(a1, a2, a3, ObjectType, v16);
    swift_unknownObjectRelease(v15);
  }
  else
  {
    static OSLogger.actions.getter(0);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
    v19 = type metadata accessor for LogMessage(0);
    v20 = swift_allocObject(v18, ((*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) | 7);
    *(_OWORD *)(v20 + 16) = xmmword_2F03C0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1);
    v21._object = (void *)0x8000000000308040;
    v21._countAndFlagsBits = 0xD00000000000001DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    v22 = a1[3];
    v23 = __swift_project_boxed_opaque_existential_1(a1, v22);
    v27[3] = v22;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v27);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(boxed_opaque_existential_0, v23, v22);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v27);
    sub_D1D4((uint64_t)v27, &qword_3D1A70);
    v25._countAndFlagsBits = 46;
    v25._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    LogMessage.init(stringInterpolation:)(v8);
    Logger.error(_:)(v20, v9, &protocol witness table for OSLogger);
    v26 = swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v26);
  }
}

uint64_t sub_2BBEDC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = TabChangeAction.navigationTab.getter();
  v7 = TabChangeAction.actions.getter();
  v8 = TabChangeAction.popToRoot.getter();
  v9 = TabChangeAction.preserveTransientView.getter();
  v10 = TabChangeAction.userInitiated.getter();
  v11 = TabChangeAction.suppressMetrics.getter();
  (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v5 + 40))(v6, v7, v8 & 1, v9 & 1, v10 & 1, v11 & 1, a3, v4, v5);
  swift_bridgeObjectRelease(v7);
  return sub_7C28(v6);
}

uint64_t sub_2BBF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD v19[5];

  v8 = type metadata accessor for ActionMetricsBehavior(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[3] = type metadata accessor for Action(0);
  v19[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
  v19[0] = a3;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *a5, v8);
  v12 = type metadata accessor for FlowActionRunner();
  v14 = sub_239FC(&qword_3D31F0, v13, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
  swift_retain(a3);
  v15 = ActionRunner.perform(_:withMetrics:asPartOf:)(v19, v11, a4, v12, v14);
  v16 = swift_release(v15);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v16);
  return __swift_destroy_boxed_opaque_existential_0(v19);
}

id sub_2BC0C8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  void *v13;
  _BYTE v16[24];

  v4 = TextFieldAction.textFieldPlaceholder.getter();
  if (v5)
  {
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setPlaceholder:", v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

  }
  v8 = TextFieldAction.textFieldContent.getter(v4);
  if (v9)
  {
    v10 = v9;
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setText:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  if ((TextFieldAction.keyboardStyle.getter(v8) & 1) != 0)
    v12 = 3;
  else
    v12 = 0;
  objc_msgSend(a1, "setKeyboardType:", v12);
  swift_beginAccess(a3 + 16, v16, 1, 0);
  v13 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a1;

  return a1;
}

uint64_t sub_2BC1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[5];
  _QWORD *v43;
  char v44[24];

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = swift_beginAccess(a2 + 16, v44, 0, 0).n128_u64[0];
  v18 = *(void **)(a2 + 16);
  v40 = v13;
  v41 = v10;
  v38 = a5;
  v39 = v14;
  v37 = a4;
  if (v18 && (v19 = objc_msgSend(v18, "text", v17)) != 0)
  {
    v20 = v19;
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v25 = (void *)static OS_dispatch_queue.main.getter(v24);
  v26 = (_QWORD *)swift_allocObject(&unk_391718, 64, 7);
  v26[2] = a2;
  v26[3] = v21;
  v26[4] = v23;
  v26[5] = a3;
  v27 = a3;
  v29 = v37;
  v28 = v38;
  v26[6] = v37;
  v26[7] = v28;
  aBlock[4] = sub_2BF500;
  v43 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_56;
  v30 = _Block_copy(aBlock);
  v31 = v43;
  swift_retain(a2);
  swift_retain(v27);
  swift_retain(v29);
  swift_retain(v28);
  v32 = swift_release(v31);
  static DispatchQoS.unspecified.getter(v32);
  aBlock[0] = _swiftEmptyArrayStorage;
  v33 = sub_239FC((unint64_t *)&qword_3D2FD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v35 = sub_CF9F8();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v9, v33);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v12, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v16, v40);
}

double sub_2BC43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  id v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t (*v29)(_QWORD, _QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[5];
  _BYTE v36[24];
  _BYTE v37[24];

  v11 = type metadata accessor for ActionMetricsBehavior(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v35[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_beginAccess(a1 + 16, v37, 0, 0);
  v16 = *(id *)(a1 + 16);
  if (v16)
    v16 = objc_msgSend(v16, "resignFirstResponder", v15.n128_f64[0]);
  if (a3 && (v16 = (id)String.count.getter(a2, a3), (uint64_t)v16 >= 1))
  {
    v17 = (uint64_t (*)(uint64_t, uint64_t))TextFieldAction.okClosure.getter(v16, v15);
    v19 = v18;
    v20 = v17(a2, a3);
    *(_QWORD *)&result = swift_release(v19).n128_u64[0];
    if (!v20)
      return result;
    swift_beginAccess(a5 + 16, v36, 0, 0);
    Strong = swift_weakLoadStrong(a5 + 16);
    if (Strong)
    {
      v23 = Strong;
      v35[3] = type metadata accessor for Action(0);
      v35[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v35[0] = v20;
      (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for ActionMetricsBehavior.notProcessed(_:), v11);
      v24 = type metadata accessor for FlowActionRunner();
      v26 = sub_239FC(&qword_3D31F0, v25, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
      swift_retain(v20);
      v27 = ActionRunner.perform(_:withMetrics:asPartOf:)(v35, v14, a6, v24, v26);
      swift_release(v20);
      swift_release(v27);
      v28 = swift_release(v23);
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v28);
      __swift_destroy_boxed_opaque_existential_0(v35);
      return result;
    }
    v33 = v20;
  }
  else
  {
    v29 = (uint64_t (*)(_QWORD, _QWORD))TextFieldAction.okClosure.getter(v16, v15);
    v31 = v30;
    v32 = v29(0, 0);
    swift_release(v31);
    v33 = v32;
  }
  *(_QWORD *)&result = swift_release(v33).n128_u64[0];
  return result;
}

double sub_2BC660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  _QWORD v24[5];
  _BYTE v25[24];

  v6 = type metadata accessor for ActionMetricsBehavior(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(void))TextFieldAction.cancelClosure.getter(v8);
  if (v11)
  {
    v14 = (uint64_t)v11;
    v15 = v12;
    v16 = v11();
    sub_1D618(v14, v15);
    if (v16)
    {
      swift_beginAccess(a3 + 16, v25, 0, 0);
      Strong = swift_weakLoadStrong(a3 + 16);
      if (Strong)
      {
        v18 = Strong;
        v24[3] = type metadata accessor for Action(0);
        v24[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        v24[0] = v16;
        (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for ActionMetricsBehavior.notProcessed(_:), v6);
        v19 = type metadata accessor for FlowActionRunner();
        v21 = sub_239FC(&qword_3D31F0, v20, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
        swift_retain(v16);
        v22 = ActionRunner.perform(_:withMetrics:asPartOf:)(v24, v10, a4, v19, v21);
        swift_release(v16);
        swift_release(v22);
        v23 = swift_release(v18);
        (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v23);
        __swift_destroy_boxed_opaque_existential_0(v24);
      }
      else
      {
        *(_QWORD *)&result = swift_release(v16).n128_u64[0];
      }
    }
  }
  return result;
}

uint64_t sub_2BC804(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = DismissAction.animationBehavior.getter();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 48))(a2, v5, v3, v4);
}

uint64_t sub_2BC864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E0F70);
  v13 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v12);
  *(_QWORD *)(v7 + 16) = v13;
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of ReviewCoordinator.presentReviewComposer(scene:context:bag:)
                                                                   + async function pointer to dispatch thunk of ReviewCoordinator.presentReviewComposer(scene:context:bag:));
  v15 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of ReviewCoordinator.presentReviewComposer(scene:context:bag:)+ 1), v14);
  *(_QWORD *)(v7 + 24) = v15;
  *v15 = v7;
  v15[1] = sub_2BC91C;
  return v17(v13, a5, a6, a7);
}

uint64_t sub_2BC91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 24));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_2BC9F0;
  }
  else
  {
    v2 = sub_2BC988;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_2BC988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for ReviewResult(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  sub_D1D4(v1, &qword_3E0F70);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2BC9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for ReviewResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  sub_D1D4(v1, &qword_3E0F70);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2BCA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v7[36] = a6;
  v7[37] = a7;
  v7[34] = a4;
  v7[35] = a5;
  v8 = type metadata accessor for MainActor(0);
  v7[38] = static MainActor.shared.getter();
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  v7[39] = v10;
  v7[40] = v11;
  return swift_task_switch(sub_2BCAC8, v10, v11);
}

uint64_t sub_2BCAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  void *v17;
  Class isa;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51A0);
  inited = swift_initStackObject(v3, v0 + 80);
  *(_OWORD *)(inited + 16) = xmmword_2F03C0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(SKStoreProductParameterITunesItemIdentifier);
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(v0 + 264) = v2;
  v6 = sub_5AE80();
  v7 = BinaryInteger.description.getter(&type metadata for UInt64, v6);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 56) = v8;
  v9 = sub_D4B54(inited);
  if (v1)
  {
    v11 = *(_QWORD *)(v0 + 280);
    v10 = *(_QWORD *)(v0 + 288);
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(SKStoreProductParameterCustomProductPageIdentifier);
    v14 = v13;
    *(_QWORD *)(v0 + 200) = v11;
    *(_QWORD *)(v0 + 224) = &type metadata for String;
    *(_QWORD *)(v0 + 208) = v10;
    sub_1D65C((_OWORD *)(v0 + 200), (_OWORD *)(v0 + 232));
    swift_bridgeObjectRetain(v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    sub_15EA48((_OWORD *)(v0 + 232), v12, v14, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);
    swift_bridgeObjectRelease(v14);
  }
  v16 = v0 + 16;
  v17 = *(void **)(v0 + 296);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)(v0 + 328) = isa;
  v19 = swift_bridgeObjectRelease(v9);
  *(_QWORD *)(v0 + 56) = v0 + 344;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_2BCCA4;
  v20 = swift_continuation_init(v0 + 16, 1, v19);
  *(_QWORD *)(v0 + 160) = _NSConcreteStackBlock;
  v21 = (_QWORD *)(v0 + 160);
  v21[1] = 0x40000000;
  v21[2] = sub_2BCD84;
  v21[3] = &block_descriptor_74;
  v21[4] = v20;
  objc_msgSend(v17, "loadProductWithParameters:completionBlock:", isa, v21);
  return swift_continuation_await(v16);
}

uint64_t sub_2BCCA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 336) = v2;
  if (v2)
    v3 = sub_2BCD3C;
  else
    v3 = sub_2BCD00;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 312), *(_QWORD *)(v1 + 320));
}

uint64_t sub_2BCD00()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 328);
  swift_release(*(_QWORD *)(v0 + 304));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2BCD3C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 328);
  v2 = swift_release(*(_QWORD *)(v0 + 304));
  swift_willThrow(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2BCD84(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6288);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_2BCE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned __int8 v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_D1D4(a1, &qword_3D4E88);
    v9 = "/System/Library/PrivateFrameworks/ShareSheet.framework/ShareSheet";
    v10 = *(_QWORD *)(a3 + 16);
    if (!v10)
    {
LABEL_6:
      v17 = 0;
      return swift_task_create(v9, v17, (char *)&type metadata for () + 8, a2, a3);
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = (char *)(v18 | 0x1C00);
    v10 = *(_QWORD *)(a3 + 16);
    if (!v10)
      goto LABEL_6;
  }
  v11 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType();
  v13 = swift_unknownObjectRetain(v10);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11, v13);
  v16 = v15;
  swift_unknownObjectRelease(v10);
  if (!(v16 | v14))
    goto LABEL_6;
  v20[0] = 0;
  v20[1] = 0;
  v17 = v20;
  v20[2] = v14;
  v20[3] = v16;
  return swift_task_create(v9, v17, (char *)&type metadata for () + 8, a2, a3);
}

uint64_t dispatch thunk of FlowActionRunner.performEffects(of:asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of FlowActionRunner.processMetrics(of:using:asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

id sub_2BCF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id result;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for FlowDestination(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (_QWORD *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E88);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v29, v13, v13);
  if (!v30)
    return (id)sub_D1D4((uint64_t)&v29, &qword_3D31A0);
  sub_1B738(&v29, (uint64_t)v31);
  v14 = objc_msgSend(objc_allocWithZone((Class)SKStoreProductViewController), "init");
  result = objc_msgSend(v14, "view");
  if (result)
  {
    v16 = result;
    v17 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
    objc_msgSend(v16, "setTintColor:", v17);

    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain(a3);
    v19 = v14;
    v20 = static MainActor.shared.getter();
    v21 = (_QWORD *)swift_allocObject(&unk_3914D0, 64, 7);
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = a1;
    v21[5] = a2;
    v21[6] = a3;
    v21[7] = v19;
    v22 = sub_2BCE04((uint64_t)v12, (uint64_t)&unk_3E0F80, (uint64_t)v21);
    swift_release(v22);
    v23 = v32;
    v24 = v33;
    __swift_project_boxed_opaque_existential_1(v31, v32);
    *v9 = v19;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for FlowDestination.viewController(_:), v6);
    v25 = qword_3CF148;
    v26 = v19;
    if (v25 != -1)
      swift_once(&qword_3CF148, sub_54BE4);
    v27 = type metadata accessor for FlowPresentationHints(0);
    v28 = __swift_project_value_buffer(v27, (uint64_t)qword_3D2840);
    (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v24 + 32))(v9, v28, 0, 0, v23, v24);

    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    return (id)__swift_destroy_boxed_opaque_existential_0(v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2BD20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __int128 v11[2];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v12, v4, v4);
  if (!v13)
    return sub_D1D4((uint64_t)&v12, &qword_3D31A0);
  sub_1B738(&v12, (uint64_t)v15);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  BaseObjectGraph.inject<A>(_:)(&v12, v5, v5);
  v6 = v13;
  v7 = v14;
  __swift_project_boxed_opaque_existential_1(&v12, v13);
  sub_1D5D4((uint64_t)v15, (uint64_t)v11);
  v8 = swift_allocObject(&unk_391510, 72, 7);
  sub_1B738(v11, v8 + 16);
  *(_QWORD *)(v8 + 56) = a1;
  *(_QWORD *)(v8 + 64) = a2;
  swift_retain(a1);
  v9 = swift_retain(a2);
  dispatch thunk of EpisodeControllerProtocol.dismissNowPlaying(animated:completion:)(1, sub_2BF32C, v8, v6, v7, v9);
  swift_release(v8);
  __swift_destroy_boxed_opaque_existential_0(v15);
  return __swift_destroy_boxed_opaque_existential_0(&v12);
}

uint64_t sub_2BD32C(uint64_t a1, int a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v40[4];
  int v41;
  _BYTE v42[24];
  uint64_t v43;
  _OWORD v44[2];
  _QWORD v45[5];
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;

  v7 = a4 & 1;
  v8 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v8);
  v10 = &v40[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v40[-v12];
  __chkstk_darwin(v14);
  v16 = &v40[-v15];
  v17 = type metadata accessor for FreezableContentSubject(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v46, v17, v17);
  v18 = v46[0];
  v41 = a2;
  if (v46[0])
  {
    FreezableContentSubject.send(_:)(0);
    swift_release(v18);
  }
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  BaseObjectGraph.inject<A>(_:)(v46, v19, v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  BaseObjectGraph.inject<A>(_:)(v45, v20, v20);
  v21 = v45[0];
  v22 = BaseObjectGraph.injectIfAvailable<A>(_:)(v45, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  v23 = EpisodeOffer.contentId.getter(v22);
  v25 = EpisodeStateController.stateMachine(for:)(v23, v24);
  dispatch thunk of EpisodeStateMachine.currentState.getter(v26);
  swift_release(v25);
  sub_F8BC((uint64_t)v16, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload(v13, v8) == 3)
  {
    sub_F8BC((uint64_t)v13, (uint64_t)v10);
    if ((v10[16] & 1) != 0)
    {
      if (!(_DWORD)v7)
      {
        v27 = *(double *)&a3;
        v28 = v47;
        v29 = v48;
        __swift_project_boxed_opaque_existential_1(v46, v47);
        dispatch thunk of EpisodeControllerProtocol.seekTo(time:)(v28, v29, v27);
      }
      v30 = v47;
      v31 = v48;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      dispatch thunk of EpisodeControllerProtocol.playPlayer()(v30, v31);
    }
    else if ((_DWORD)v7)
    {
      v38 = v47;
      v37 = v48;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      if ((v41 & 1) != 0)
        dispatch thunk of EpisodeControllerProtocol.pausePlayer()(v38, v37);
      else
        dispatch thunk of EpisodeControllerProtocol.presentNowPlaying(animated:)(1, v38, v37);
    }
    else
    {
      v34 = *(double *)&a3;
      v35 = v47;
      v36 = v48;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      dispatch thunk of EpisodeControllerProtocol.seekTo(time:)(v35, v36, v34);
    }
    swift_release(v21);
  }
  else
  {
    v32 = v47;
    v33 = v48;
    __swift_project_boxed_opaque_existential_1(v46, v47);
    sub_D184((uint64_t)v45, (uint64_t)v42, (uint64_t *)&unk_3D30E0);
    if (v43 == 1)
    {
      sub_D1D4((uint64_t)v42, (uint64_t *)&unk_3D30E0);
      memset(v44, 0, sizeof(v44));
    }
    else
    {
      sub_D184((uint64_t)v42, (uint64_t)v44, &qword_3D1A70);
      sub_1D628((uint64_t)v42);
    }
    dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:queueEpisodesIds:timestamp:sender:)(a1, 0, a3, v7, v44, v32, v33);
    swift_release(v21);
    sub_D1D4((uint64_t)v44, &qword_3D1A70);
  }
  sub_FA4C((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  sub_D1D4((uint64_t)v45, (uint64_t *)&unk_3D30E0);
  sub_FA4C((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  return __swift_destroy_boxed_opaque_existential_0(v46);
}

uint64_t sub_2BD67C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, uint64_t a8, char a9, char a10, uint64_t a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  int EnumCaseMultiPayload;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int16 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int v77;
  int v78;
  double v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _OWORD v87[2];
  _BYTE v88[24];
  uint64_t v89;
  id v90;
  _QWORD v91[5];
  _QWORD v92[3];
  uint64_t v93;
  uint64_t v94;

  v79 = *(double *)&a8;
  v77 = a7;
  v80 = a6;
  v83 = a5;
  v78 = a4;
  v74 = a3;
  v86 = a2;
  v85 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D45D0);
  __chkstk_darwin(v13);
  v75 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v76 = (char *)&v72 - v16;
  __chkstk_darwin(v17);
  v82 = (uint64_t)&v72 - v18;
  v73 = type metadata accessor for InteractionContext(0);
  v19 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DDF40);
  __chkstk_darwin(v22);
  v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v81 = (uint64_t)&v72 - v26;
  v27 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v72 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v72 - v34;
  v36 = type metadata accessor for FreezableContentSubject(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v92, v36, v36);
  v37 = v92[0];
  if (v92[0])
  {
    FreezableContentSubject.send(_:)(0);
    swift_release(v37);
  }
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  BaseObjectGraph.inject<A>(_:)(v92, v38, v38);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  BaseObjectGraph.inject<A>(_:)(v91, v39, v39);
  v40 = v91[0];
  BaseObjectGraph.injectIfAvailable<A>(_:)(v91, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  v84 = v40;
  v41 = EpisodeStateController.stateMachine(for:)(v85, v86);
  dispatch thunk of EpisodeStateMachine.currentState.getter(v42);
  swift_release(v41);
  sub_F8BC((uint64_t)v35, (uint64_t)v32);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v32, v27);
  if (!EnumCaseMultiPayload)
    goto LABEL_9;
  if (EnumCaseMultiPayload != 3)
  {
    if (v80 != 2 && (v80 & 1) == 0)
    {
      v51 = v93;
      v52 = v94;
      __swift_project_boxed_opaque_existential_1(v92, v93);
      if ((dispatch thunk of EpisodeControllerProtocol.isPlayerPlaying()(v51, v52) & 1) != 0)
      {
LABEL_14:
        swift_release(v84);
LABEL_34:
        sub_FA4C((uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
        sub_D1D4((uint64_t)v91, (uint64_t *)&unk_3D30E0);
        sub_FA4C((uint64_t)v32, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
        return __swift_destroy_boxed_opaque_existential_0(v92);
      }
    }
    sub_D184((uint64_t)v91, (uint64_t)v88, (uint64_t *)&unk_3D30E0);
    if (v89 == 1)
    {
      sub_D1D4((uint64_t)v88, (uint64_t *)&unk_3D30E0);
      v55 = v81;
      v56 = (uint64_t)v75;
    }
    else
    {
      v57 = v90;
      v58 = v90;
      v59 = sub_1D628((uint64_t)v88);
      v55 = v81;
      v56 = (uint64_t)v75;
      if (v57)
      {
        UIView.interactionContext.getter(v59);

        InteractionContext.page.getter();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v73);
        v60 = type metadata accessor for InteractionContext.Page(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v55, 0, 1, v60);
LABEL_24:
        sub_D184(v55, (uint64_t)v24, &qword_3DDF40);
        type metadata accessor for InteractionContext.Page(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48))(v24, 1, v60) == 1)
        {
          sub_D1D4((uint64_t)v24, &qword_3DDF40);
          v61 = type metadata accessor for EpisodeListSettings(0);
          v62 = (uint64_t)v76;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v76, 1, 1, v61);
        }
        else
        {
          v62 = (uint64_t)v76;
          InteractionContext.Page.episodeListSettings.getter();
          sub_FA4C((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
        }
        sub_D184(v74, v56, &qword_3D45D0);
        v63 = type metadata accessor for EpisodeListSettings(0);
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63) == 1)
        {
          sub_2BF3A0(v56, v82);
          sub_D1D4(v62, &qword_3D45D0);
        }
        else
        {
          sub_D1D4(v56, &qword_3D45D0);
          v65 = v82;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v82, v62, v63);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v63);
        }
        v66 = v93;
        v67 = v94;
        __swift_project_boxed_opaque_existential_1(v92, v93);
        sub_D184((uint64_t)v91, (uint64_t)v88, (uint64_t *)&unk_3D30E0);
        if (v89 == 1)
        {
          sub_D1D4((uint64_t)v88, (uint64_t *)&unk_3D30E0);
          memset(v87, 0, sizeof(v87));
        }
        else
        {
          sub_D184((uint64_t)v88, (uint64_t)v87, &qword_3D1A70);
          sub_1D628((uint64_t)v88);
        }
        v71 = v66;
        HIBYTE(v70) = a13 & 1;
        LOBYTE(v70) = a9 & 1;
        v68 = v82;
        dispatch thunk of EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:reason:timestamp:waitForEngine:)(v85, v86, v82, v87, v77 & 1, a10 & 1, 0, 1, a11, a12 & 1, *(_QWORD *)&v79, v70, v71, v67);
        swift_release(v84);
        sub_D1D4((uint64_t)v87, &qword_3D1A70);
        sub_D1D4(v68, &qword_3D45D0);
        sub_D1D4(v81, &qword_3DDF40);
        goto LABEL_34;
      }
    }
    v60 = type metadata accessor for InteractionContext.Page(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v55, 1, 1, v60);
    goto LABEL_24;
  }
  sub_F8BC((uint64_t)v32, (uint64_t)v29);
  if (v29[16] == 1)
  {
    if ((a9 & 1) == 0)
    {
      v44 = v79;
      v45 = v93;
      v46 = v94;
      __swift_project_boxed_opaque_existential_1(v92, v93);
      dispatch thunk of EpisodeControllerProtocol.seekTo(time:)(v45, v46, v44);
    }
    v47 = v93;
    v48 = v94;
    __swift_project_boxed_opaque_existential_1(v92, v93);
    dispatch thunk of EpisodeControllerProtocol.playPlayer()(v47, v48);
    goto LABEL_14;
  }
LABEL_9:
  sub_FA4C((uint64_t)v32, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  if ((v83 & 1) != 0)
  {
    v49 = v93;
    v50 = v94;
    __swift_project_boxed_opaque_existential_1(v92, v93);
    dispatch thunk of EpisodeControllerProtocol.pausePlayer()(v49, v50);
  }
  else if (v78 == 2 || (v78 & 1) != 0)
  {
    v53 = v93;
    v54 = v94;
    __swift_project_boxed_opaque_existential_1(v92, v93);
    dispatch thunk of EpisodeControllerProtocol.presentNowPlaying(animated:)(1, v53, v54);
  }
  swift_release(v84);
  sub_FA4C((uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  sub_D1D4((uint64_t)v91, (uint64_t *)&unk_3D30E0);
  return __swift_destroy_boxed_opaque_existential_0(v92);
}

uint64_t sub_2BDE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  _QWORD v41[5];
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v36 = a2;
  v35 = a1;
  v8 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v34 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  v17 = type metadata accessor for FreezableContentSubject(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v42, v17, v17);
  v18 = v42[0];
  if (v42[0])
  {
    FreezableContentSubject.send(_:)(0);
    swift_release(v18);
  }
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  BaseObjectGraph.inject<A>(_:)(v42, v19, v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  BaseObjectGraph.inject<A>(_:)(v41, v20, v20);
  v21 = v41[0];
  BaseObjectGraph.injectIfAvailable<A>(_:)(v41, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  if (a4)
  {
    v22 = EpisodeStateController.stateMachine(for:)(a3, a4);
    dispatch thunk of EpisodeStateMachine.currentState.getter(v23);
    swift_release(v22);
    sub_F8BC((uint64_t)v16, (uint64_t)v13);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v8);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 3)
      {
        v31 = v43;
        v32 = v44;
        __swift_project_boxed_opaque_existential_1(v42, v43);
        sub_D184((uint64_t)v41, (uint64_t)v37, (uint64_t *)&unk_3D30E0);
        if (v38 == 1)
        {
          sub_D1D4((uint64_t)v37, (uint64_t *)&unk_3D30E0);
          v39 = 0u;
          v40 = 0u;
        }
        else
        {
          sub_D184((uint64_t)v37, (uint64_t)&v39, &qword_3D1A70);
          sub_1D628((uint64_t)v37);
        }
        dispatch thunk of EpisodeControllerProtocol.play(stationUuid:episodeUuid:from:)(v35, v36, a3, a4, &v39, v31, v32);
        swift_release(v21);
        sub_D1D4((uint64_t)&v39, &qword_3D1A70);
        goto LABEL_21;
      }
      sub_F8BC((uint64_t)v13, (uint64_t)v10);
      if (v10[16] == 1)
      {
        v25 = v43;
        v26 = v44;
        __swift_project_boxed_opaque_existential_1(v42, v43);
        dispatch thunk of EpisodeControllerProtocol.playPlayer()(v25, v26);
        swift_release(v21);
LABEL_21:
        sub_FA4C((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
        sub_D1D4((uint64_t)v41, (uint64_t *)&unk_3D30E0);
        sub_FA4C((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
        return __swift_destroy_boxed_opaque_existential_0(v42);
      }
    }
    sub_FA4C((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    v29 = v43;
    v30 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    if ((a5 & 1) != 0)
      dispatch thunk of EpisodeControllerProtocol.pausePlayer()(v29, v30);
    else
      dispatch thunk of EpisodeControllerProtocol.presentNowPlaying(animated:)(1, v29, v30);
    swift_release(v21);
    sub_FA4C((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  }
  else
  {
    v27 = v43;
    v28 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    sub_D184((uint64_t)v41, (uint64_t)v37, (uint64_t *)&unk_3D30E0);
    if (v38 == 1)
    {
      sub_D1D4((uint64_t)v37, (uint64_t *)&unk_3D30E0);
      v39 = 0u;
      v40 = 0u;
    }
    else
    {
      sub_D184((uint64_t)v37, (uint64_t)&v39, &qword_3D1A70);
      sub_1D628((uint64_t)v37);
    }
    dispatch thunk of EpisodeControllerProtocol.play(stationUuid:episodeUuid:from:)(v35, v36, a3, 0, &v39, v27, v28);
    swift_release(v21);
    sub_D1D4((uint64_t)&v39, &qword_3D1A70);
  }
  sub_D1D4((uint64_t)v41, (uint64_t *)&unk_3D30E0);
  return __swift_destroy_boxed_opaque_existential_0(v42);
}

uint64_t sub_2BE23C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(uint64_t, _OWORD *, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  uint64_t v14;
  _OWORD v15[2];
  _QWORD v16[5];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for FreezableContentSubject(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v17, v6, v6);
  v7 = v17[0];
  if (v17[0])
  {
    FreezableContentSubject.send(_:)(0);
    swift_release(v7);
  }
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  BaseObjectGraph.inject<A>(_:)(v17, v8, v8);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v16, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  v9 = v18;
  v10 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v11 = a3();
  sub_D184((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_3D30E0);
  if (v14 == 1)
  {
    sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D30E0);
    memset(v15, 0, sizeof(v15));
  }
  else
  {
    sub_D184((uint64_t)v13, (uint64_t)v15, &qword_3D1A70);
    sub_1D628((uint64_t)v13);
  }
  a4(v11, v15, v9, v10);
  sub_D1D4((uint64_t)v15, &qword_3D1A70);
  sub_D1D4((uint64_t)v16, (uint64_t *)&unk_3D30E0);
  return __swift_destroy_boxed_opaque_existential_0(v17);
}

uint64_t sub_2BE39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  _BYTE v8[24];
  uint64_t v9;
  _OWORD v10[2];
  _QWORD v11[5];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v0 = type metadata accessor for FreezableContentSubject(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v12, v0, v0);
  v1 = v12[0];
  if (v12[0])
  {
    FreezableContentSubject.send(_:)(0);
    swift_release(v1);
  }
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  BaseObjectGraph.inject<A>(_:)(v12, v2, v2);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v11, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  v3 = v13;
  v4 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v5 = SeekToTimestampAndPlayAction.episodeId.getter();
  v6 = SeekToTimestampAndPlayAction.timestamp.getter();
  sub_D184((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_3D30E0);
  if (v9 == 1)
  {
    sub_D1D4((uint64_t)v8, (uint64_t *)&unk_3D30E0);
    memset(v10, 0, sizeof(v10));
  }
  else
  {
    sub_D184((uint64_t)v8, (uint64_t)v10, &qword_3D1A70);
    sub_1D628((uint64_t)v8);
  }
  dispatch thunk of EpisodeControllerProtocol.play(storeEpisodeId:timestamp:sender:)(v5, *(_QWORD *)&v6, 0, v10, v3, v4);
  sub_D1D4((uint64_t)v10, &qword_3D1A70);
  sub_D1D4((uint64_t)v11, (uint64_t *)&unk_3D30E0);
  return __swift_destroy_boxed_opaque_existential_0(v12);
}

uint64_t sub_2BE504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  double (*v22)(char *, uint64_t);
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _BYTE v39[24];
  uint64_t v40;
  _OWORD v41[2];
  _QWORD v42[5];
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;

  v38 = type metadata accessor for EpisodeOffer(0);
  v0 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - v3;
  v5 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  v14 = type metadata accessor for FreezableContentSubject(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v43, v14, v14);
  v15 = v43[0];
  if (v43[0])
  {
    FreezableContentSubject.send(_:)(0);
    swift_release(v15);
  }
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  BaseObjectGraph.inject<A>(_:)(v43, v16, v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  BaseObjectGraph.inject<A>(_:)(v42, v17, v17);
  v18 = v42[0];
  v19 = BaseObjectGraph.injectIfAvailable<A>(_:)(v42, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  v20 = PlayPauseQueueAction.episodeOffer.getter(v19);
  v21 = EpisodeOffer.contentId.getter(v20);
  v22 = *(double (**)(char *, uint64_t))(v0 + 8);
  v23 = v38;
  v24.n128_f64[0] = v22(v4, v38);
  v25 = EpisodeStateController.stateMachine(for:)(v21, v24);
  dispatch thunk of EpisodeStateMachine.currentState.getter(v26);
  swift_release(v25);
  sub_F8BC((uint64_t)v13, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v5) == 3)
  {
    sub_F8BC((uint64_t)v10, (uint64_t)v7);
    v27 = v7[16];
    v28 = v44;
    v29 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    if ((v27 & 1) != 0)
      dispatch thunk of EpisodeControllerProtocol.playPlayer()(v28, v29);
    else
      dispatch thunk of EpisodeControllerProtocol.pausePlayer()(v28, v29);
    swift_release(v18);
  }
  else
  {
    v30 = v44;
    v36 = v45;
    v31 = __swift_project_boxed_opaque_existential_1(v43, v44);
    v32 = PlayPauseQueueAction.episodeOffer.getter(v31);
    v33 = PlayPauseQueueAction.queueEpisodeIds.getter(v32);
    sub_D184((uint64_t)v42, (uint64_t)v39, (uint64_t *)&unk_3D30E0);
    if (v40 == 1)
    {
      sub_D1D4((uint64_t)v39, (uint64_t *)&unk_3D30E0);
      memset(v41, 0, sizeof(v41));
    }
    else
    {
      sub_D184((uint64_t)v39, (uint64_t)v41, &qword_3D1A70);
      sub_1D628((uint64_t)v39);
    }
    v34 = v37;
    dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:queueEpisodesIds:timestamp:sender:)(v37, v33, 0, 1, v41, v30, v36);
    swift_release(v18);
    swift_bridgeObjectRelease(v33);
    sub_D1D4((uint64_t)v41, &qword_3D1A70);
    v22(v34, v23);
  }
  sub_FA4C((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  sub_D1D4((uint64_t)v42, (uint64_t *)&unk_3D30E0);
  sub_FA4C((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  return __swift_destroy_boxed_opaque_existential_0(v43);
}

uint64_t sub_2BE874(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v36[2];
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v9);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FlowDestination(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v40, v16, v16);
  if (!v41)
    return sub_D1D4((uint64_t)&v40, &qword_3D31A0);
  sub_1B738(&v40, (uint64_t)v42);
  v17 = BaseObjectGraph.injectIfAvailable<A>(_:)(&v40, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  v18 = PopoverAction.flowAction.getter(v17);
  dispatch thunk of FlowAction.destination.getter(v18);
  v19 = swift_release(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v19) == 1)
  {
    sub_D1D4((uint64_t)v11, &qword_3D2B30);
    static Logger.navigation.getter(v20);
    v21 = swift_retain_n(a1, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v37 = v25;
      *(_DWORD *)v24 = 136315138;
      v36[1] = v24 + 4;
      *(_QWORD *)&v39[0] = PopoverAction.flowAction.getter(v25);
      v27 = type metadata accessor for FlowAction(0, v26);
      v28 = String.init<A>(describing:)(v39, v27);
      v30 = v29;
      *(_QWORD *)&v39[0] = sub_37E78(v28, v29, (uint64_t *)&v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v39, (char *)v39 + 8);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease(v30);
      _os_log_impl(&dword_0, v22, v23, "Could not create destination for %s", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      swift_release_n(a1, 2);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v32 = v43;
    v33 = v44;
    v34 = __swift_project_boxed_opaque_existential_1(v42, v43);
    v35 = PopoverAction.flowAction.getter(v34);
    sub_D184((uint64_t)&v40, (uint64_t)&v37, (uint64_t *)&unk_3D30E0);
    if (*((_QWORD *)&v38 + 1) == 1)
    {
      sub_D1D4((uint64_t)&v37, (uint64_t *)&unk_3D30E0);
      memset(v39, 0, sizeof(v39));
    }
    else
    {
      sub_D184((uint64_t)&v37, (uint64_t)v39, &qword_3D1A70);
      sub_1D628((uint64_t)&v37);
    }
    v37 = 0u;
    v38 = 0u;
    sub_54DAC(v35, (uint64_t)v39, 0, (uint64_t)&v37, (uint64_t)v8);
    (*(void (**)(char *, char *, _QWORD, _QWORD, uint64_t, uint64_t))(v33 + 32))(v15, v8, 0, 0, v32, v33);
    sub_FA4C((uint64_t)v8, type metadata accessor for FlowPresentationHints);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_D1D4((uint64_t)&v40, (uint64_t *)&unk_3D30E0);
  return __swift_destroy_boxed_opaque_existential_0(v42);
}

uint64_t sub_2BEC98(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _QWORD v13[5];

  BaseObjectGraph.injectIfAvailable<A>(_:)(v13, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  sub_D184((uint64_t)v13, (uint64_t)v8, (uint64_t *)&unk_3D30E0);
  if (v9 == 1)
  {
    sub_D1D4((uint64_t)v8, (uint64_t *)&unk_3D30E0);
    v11 = 0u;
    v12 = 0u;
LABEL_6:
    sub_D1D4((uint64_t)&v11, &qword_3D1A70);
    return sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D30E0);
  }
  sub_D184((uint64_t)v8, (uint64_t)&v11, &qword_3D1A70);
  sub_1D628((uint64_t)v8);
  if (!*((_QWORD *)&v12 + 1))
    goto LABEL_6;
  v2 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  if ((swift_dynamicCast(v8, &v11, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
  {
    v3 = (void *)v8[0];
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
    BaseObjectGraph.inject<A>(_:)(v8, v4, v4);
    v5 = v9;
    v6 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    dispatch thunk of EpisodeControllerProtocol.presentShareSheet(for:from:)(a1, v3, v5, v6);

    sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D30E0);
    return __swift_destroy_boxed_opaque_existential_0(v8);
  }
  return sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D30E0);
}

uint64_t sub_2BEE04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[5];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v17, v2, v2);
  if (!v18)
    return sub_D1D4((uint64_t)&v17, &qword_3D31A0);
  sub_1B738(&v17, (uint64_t)v20);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  BaseObjectGraph.inject<A>(_:)(&v17, v3, v3);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v16, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
  sub_D184((uint64_t)v16, (uint64_t)&v12, (uint64_t *)&unk_3D30E0);
  if (v13 == 1)
  {
    sub_D1D4((uint64_t)&v12, (uint64_t *)&unk_3D30E0);
    v14 = 0u;
    v15 = 0u;
  }
  else
  {
    sub_D184((uint64_t)&v12, (uint64_t)&v14, &qword_3D1A70);
    sub_1D628((uint64_t)&v12);
    if (*((_QWORD *)&v15 + 1))
    {
      v5 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
      if ((swift_dynamicCast(&v12, &v14, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
      {
        v6 = (void *)v12;
        v7 = v18;
        v8 = v19;
        __swift_project_boxed_opaque_existential_1(&v17, v18);
        sub_1D5D4((uint64_t)v20, (uint64_t)&v12);
        v9 = swift_allocObject(&unk_391768, 72, 7);
        sub_1B738(&v12, v9 + 16);
        *(_QWORD *)(v9 + 56) = v6;
        *(_QWORD *)(v9 + 64) = a1;
        v10 = v6;
        v11 = swift_retain(a1);
        dispatch thunk of EpisodeControllerProtocol.dismissNowPlaying(animated:completion:)(1, sub_2BF5A4, v9, v7, v8, v11);

        swift_release(v9);
      }
      goto LABEL_9;
    }
  }
  sub_D1D4((uint64_t)&v14, &qword_3D1A70);
LABEL_9:
  sub_D1D4((uint64_t)v16, (uint64_t *)&unk_3D30E0);
  __swift_destroy_boxed_opaque_existential_0(v20);
  return __swift_destroy_boxed_opaque_existential_0(&v17);
}

uint64_t sub_2BF004@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + 24;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_2BF050(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2 + 24;
  swift_beginAccess(v3, v5, 1, 0);
  return swift_unknownObjectWeakAssign(v3, v2);
}

uint64_t type metadata accessor for FlowActionRunner()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews16FlowActionRunner);
}

uint64_t method lookup function for FlowActionRunner(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for FlowActionRunner);
}

uint64_t dispatch thunk of FlowActionRunner.target.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t sub_2BF0D4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_2BF118(uint64_t a1, __n128 a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v10 = v2[6];
  v9 = v2[7];
  v11 = (_QWORD *)swift_task_alloc(dword_3E0F5C, a2);
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_C9738;
  return sub_2BC864(a1, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_2BF1A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2BF1C8(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  __n128 v7;

  v5 = *(int **)(v2 + 16);
  v6 = (_QWORD *)swift_task_alloc(dword_3E0F6C, a2);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_12961C;
  return ((uint64_t (*)(uint64_t, int *, __n128))((char *)&dword_3E0F68 + dword_3E0F68))(a1, v5, v7);
}

uint64_t sub_2BF238()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_2BF26C(uint64_t a1, __n128 a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v10 = v2[6];
  v9 = v2[7];
  v11 = (_QWORD *)swift_task_alloc(dword_3E0F7C, a2);
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_C9738;
  return sub_2BCA58(a1, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_2BF2F8()
{
  _QWORD *v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 2);
  swift_release(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_2BF32C()
{
  _QWORD *v0;

  return sub_2BBEDC(v0 + 2, v0[7], v0[8]);
}

uint64_t sub_2BF33C(uint64_t a1)
{
  uint64_t *v1;

  return sub_2BBF9C(a1, v1[2], v1[3], v1[4], (unsigned int *)&enum case for ActionMetricsBehavior.fromAction(_:));
}

double block_copy_helper_74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_74(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2BF37C(uint64_t a1)
{
  uint64_t *v1;

  return sub_2BBF9C(a1, v1[2], v1[3], v1[4], (unsigned int *)&enum case for ActionMetricsBehavior.notProcessed(_:));
}

uint64_t sub_2BF3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D45D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2BF3E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2BF40C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_2BF438(void *a1)
{
  uint64_t v1;

  return sub_2BC0C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2BF440()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2BF464()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_2BF4A0(uint64_t a1)
{
  uint64_t *v1;

  return sub_2BC1AC(a1, v1[2], v1[3], v1[4], v1[5]);
}

double sub_2BF4B0(uint64_t a1)
{
  uint64_t *v1;

  return sub_2BC660(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2BF4BC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

double sub_2BF500()
{
  uint64_t *v0;

  return sub_2BC43C(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_2BF510(uint64_t a1)
{
  sub_2BF558(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  return a1;
}

void sub_2BF558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 != 255)
    sub_8D094(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2BF570()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_2BF5A4()
{
  uint64_t v0;

  return sub_2BC804((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56));
}

uint64_t sub_2BF5D8(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = "\b";
  v2[1] = &unk_306300;
  v2[2] = &unk_306300;
  v2[3] = &unk_306300;
  v2[4] = &unk_306300;
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + 88);
}

id sub_2BF628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  objc_class *v9;
  id v10;
  id v11;
  id v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  double top;
  double leading;
  double bottom;
  double trailing;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD aBlock[5];
  uint64_t v28;
  objc_super v29;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v2);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for PlayButtonWrapper(0);
  v6 = *(_QWORD *)(v0 + v5[6]);
  sub_2C1040(v1, (uint64_t)v4);
  LOBYTE(aBlock[0]) = *(_BYTE *)(v1 + v5[5]);
  swift_retain(v6);
  v8 = (void *)_s23ShelfKitCollectionViews10PlayButtonC8asPartOf4data5themeAC9JetEngine15BaseObjectGraphC_0aB00eF9PresenterC4DataVSgAC5ThemeOtcfC_0(v7, (uint64_t)v4, (unsigned __int8 *)aBlock);
  v9 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_3E10D0);
  v10 = objc_allocWithZone(v9);
  v11 = v8;
  v12 = sub_2C03E8(v11);
  LODWORD(v13) = 1144750080;
  objc_msgSend(v12, "setContentHuggingPriority:forAxis:", 1, v13);
  LODWORD(v14) = 1132068864;
  objc_msgSend(v12, "setContentHuggingPriority:forAxis:", 0, v14);
  LODWORD(v15) = 1132068864;
  objc_msgSend(v12, "setContentCompressionResistancePriority:forAxis:", 0, v15);
  v16 = v1 + v5[7];
  if ((*(_BYTE *)(v16 + 32) & 1) != 0)
  {
    top = NSDirectionalEdgeInsetsZero.top;
    leading = NSDirectionalEdgeInsetsZero.leading;
    bottom = NSDirectionalEdgeInsetsZero.bottom;
    trailing = NSDirectionalEdgeInsetsZero.trailing;
  }
  else
  {
    top = NSDirectionalEdgeInsets.init(_:)(*(double *)v16, *(double *)(v16 + 8), *(double *)(v16 + 16), *(double *)(v16 + 24));
  }
  v29.receiver = v12;
  v29.super_class = v9;
  objc_msgSendSuper2(&v29, "setHitTestDirectionalInsets:", top, leading, bottom, trailing);
  sub_2C00B4();
  v21 = swift_allocObject(&unk_391860, 24, 7);
  *(_QWORD *)(v21 + 16) = v11;
  aBlock[4] = sub_2C10AC;
  v28 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_145FEC;
  aBlock[3] = &block_descriptor_75;
  v22 = _Block_copy(aBlock);
  v23 = v28;
  v24 = v11;
  v25 = v12;
  objc_msgSend(v25, "setAccessibilityCustomActionsBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

  return v25;
}

id sub_2BF840(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "setHitTestDirectionalInsets:", a1, a2, a3, a4);
  return sub_2C0240();
}

uint64_t sub_2BF8A8(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  NSString v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[5];
  uint64_t v23;
  char v24[24];

  v3 = type metadata accessor for PlayButtonPresenter.State(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &a1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState];
  v8 = swift_beginAccess(&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState], v24, 0, 0);
  v9 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v4 + 16))(v6, v7, v3, v8);
  PlayButtonPresenter.State.accessibilityLabel.getter(v9);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v12 = swift_allocObject(&unk_3918B0, 24, 7);
  *(_QWORD *)(v12 + 16) = a1;
  v13 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  v14 = a1;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  aBlock[4] = sub_148BA4;
  v23 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_14A58C;
  aBlock[3] = &block_descriptor_6_10;
  v16 = _Block_copy(aBlock);
  v17 = objc_msgSend(v13, "initWithName:actionHandler:", v15, v16);

  _Block_release(v16);
  swift_release(v23);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_2F11D0;
  *(_QWORD *)(v19 + 32) = v17;
  aBlock[0] = v19;
  specialized Array._endMutation()(v19);
  return aBlock[0];
}

id sub_2BFA58(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double top;
  double leading;
  double bottom;
  double trailing;
  double v25;
  double v26;
  double v27;
  objc_class *v28;
  objc_super v30;
  _BYTE v31[24];
  _BYTE v32[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&a1[qword_3E0F90];
  v11 = (int *)type metadata accessor for PlayButtonWrapper(0);
  v12 = *(_QWORD *)(v2 + v11[6]);
  v13 = (uint64_t *)(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph);
  swift_beginAccess(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph, v32, 1, 0);
  v14 = *v13;
  *v13 = v12;
  swift_release(v14);
  v15 = *(unsigned __int8 *)(v2 + v11[5]);
  v16 = (_BYTE *)(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme);
  swift_beginAccess(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme, v31, 1, 0);
  v17 = *v16;
  *v16 = v15;
  swift_retain(v12);
  if (v15 != v17)
  {
    sub_92334();
    v19 = type metadata accessor for PlayButtonPresenter.State(0, v18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
    sub_92598((uint64_t)v9, 1, 0);
    sub_2C1000((uint64_t)v9);
  }
  sub_2C1040(v2, (uint64_t)v6);
  PlayButton.data.setter((uint64_t)v6);
  v20 = v2 + v11[7];
  if ((*(_BYTE *)(v20 + 32) & 1) != 0)
  {
    top = NSDirectionalEdgeInsetsZero.top;
    leading = NSDirectionalEdgeInsetsZero.leading;
    bottom = NSDirectionalEdgeInsetsZero.bottom;
    trailing = NSDirectionalEdgeInsetsZero.trailing;
  }
  else
  {
    top = NSDirectionalEdgeInsets.init(_:)(*(double *)v20, *(double *)(v20 + 8), *(double *)(v20 + 16), *(double *)(v20 + 24));
    leading = v25;
    bottom = v26;
    trailing = v27;
  }
  v28 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_3E10D0);
  v30.receiver = a1;
  v30.super_class = v28;
  objc_msgSendSuper2(&v30, "setHitTestDirectionalInsets:", top, leading, bottom, trailing);
  return sub_2C00B4();
}

uint64_t sub_2BFC88(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

uint64_t sub_2BFCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2C10CC(&qword_3E10D8, (uint64_t)&unk_3063D8);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_2BFD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2C10CC(&qword_3E10D8, (uint64_t)&unk_3063D8);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_2BFD78(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2C10CC(&qword_3E10D8, (uint64_t)&unk_3063D8);
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

id sub_2BFDAC()
{
  return sub_2BFDE4(&qword_3E0F98, (SEL *)&selRef_topAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
}

id sub_2BFDC8()
{
  return sub_2BFDE4(&qword_3E0FA0, (SEL *)&selRef_bottomAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
}

id sub_2BFDE4(uint64_t *a1, SEL *a2, SEL *a3)
{
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v4 = *a1;
  v5 = *(void **)&v3[*a1];
  if (v5)
  {
    v6 = *(id *)&v3[*a1];
  }
  else
  {
    v7 = sub_2BFF38(v3, a2, a3);
    v8 = *(void **)&v3[v4];
    *(_QWORD *)&v3[v4] = v7;
    v6 = v7;

    v5 = 0;
  }
  v9 = v5;
  return v6;
}

id sub_2BFE40()
{
  return sub_2BFDE4(&qword_3E0FA8, (SEL *)&selRef_leadingAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
}

id sub_2BFE5C(uint64_t *a1, SEL *a2, SEL *a3)
{
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;

  v4 = *a1;
  v5 = *(void **)&v3[*a1];
  if (v5)
  {
    v6 = *(id *)&v3[*a1];
  }
  else
  {
    v9 = objc_msgSend(*(id *)&v3[qword_3E0F90], *a2);
    v10 = objc_msgSend(v3, *a2);
    v11 = objc_msgSend(v9, *a3, v10);

    v12 = *(void **)&v3[v4];
    *(_QWORD *)&v3[v4] = v11;
    v6 = v11;

    v5 = 0;
  }
  v13 = v5;
  return v6;
}

id sub_2BFF1C()
{
  return sub_2BFDE4(&qword_3E0FB0, (SEL *)&selRef_trailingAnchor, (SEL *)&selRef_constraintLessThanOrEqualToAnchor_);
}

id sub_2BFF38(char *a1, SEL *a2, SEL *a3)
{
  id v6;
  id v7;
  id v8;

  v6 = objc_msgSend(*(id *)&a1[qword_3E0F90], *a2);
  v7 = objc_msgSend(a1, *a2);
  v8 = objc_msgSend(v6, *a3, v7);

  return v8;
}

double sub_2BFFC4(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  sub_2C001C();
  v3 = v2;

  return v3;
}

id sub_2C001C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "hitTestDirectionalInsets");
}

void sub_2C0050(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;

  v9 = a1;
  sub_2BF840(a2, a3, a4, a5);

}

id sub_2C00B4()
{
  char *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  double v4;
  id v5;
  double v6;
  id v7;
  double v8;
  id v9;
  double v10;
  objc_super v12;
  objc_super v13;
  objc_super v14;
  objc_super v15;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = *(void **)&v0[qword_3E0F90];
  v16.receiver = v0;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, "hitTestDirectionalInsets");
  objc_msgSend(v2, "setHitTestDirectionalInsets:");
  v3 = sub_2BFE5C(&qword_3E0F98, (SEL *)&selRef_topAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
  v15.receiver = v0;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, "hitTestDirectionalInsets");
  objc_msgSend(v3, "setConstant:", -v4);

  v5 = sub_2BFE5C(&qword_3E0FA8, (SEL *)&selRef_leadingAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
  v14.receiver = v0;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, "hitTestDirectionalInsets");
  objc_msgSend(v5, "setConstant:", -v6);

  v7 = sub_2BFE5C(&qword_3E0FA0, (SEL *)&selRef_bottomAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
  v13.receiver = v0;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, "hitTestDirectionalInsets");
  objc_msgSend(v7, "setConstant:", v8);

  v9 = sub_2BFE5C(&qword_3E0FB0, (SEL *)&selRef_trailingAnchor, (SEL *)&selRef_constraintLessThanOrEqualToAnchor_);
  v12.receiver = v0;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, "hitTestDirectionalInsets");
  objc_msgSend(v9, "setConstant:", v10);

  return objc_msgSend(v0, "invalidateIntrinsicContentSize");
}

id sub_2C0240()
{
  char *v0;
  void *v1;
  id v2;
  objc_class *ObjectType;
  double v4;
  id v5;
  objc_class *v6;
  double v7;
  id v8;
  objc_class *v9;
  double v10;
  id v11;
  objc_class *v12;
  double v13;
  objc_super v15;

  v1 = *(void **)&v0[qword_3E0F90];
  v15.receiver = v0;
  v15.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v15, "hitTestDirectionalInsets");
  objc_msgSend(v1, "setHitTestDirectionalInsets:");
  v2 = sub_2BFDE4(&qword_3E0F98, (SEL *)&selRef_topAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
  ObjectType = (objc_class *)swift_getObjectType();
  v15.receiver = v0;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, "hitTestDirectionalInsets");
  objc_msgSend(v2, "setConstant:", -v4);

  v5 = sub_2BFDE4(&qword_3E0FA8, (SEL *)&selRef_leadingAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
  v6 = (objc_class *)swift_getObjectType();
  v15.receiver = v0;
  v15.super_class = v6;
  objc_msgSendSuper2(&v15, "hitTestDirectionalInsets");
  objc_msgSend(v5, "setConstant:", -v7);

  v8 = sub_2BFDE4(&qword_3E0FA0, (SEL *)&selRef_bottomAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
  v9 = (objc_class *)swift_getObjectType();
  v15.receiver = v0;
  v15.super_class = v9;
  objc_msgSendSuper2(&v15, "hitTestDirectionalInsets");
  objc_msgSend(v8, "setConstant:", v10);

  v11 = sub_2BFDE4(&qword_3E0FB0, (SEL *)&selRef_trailingAnchor, (SEL *)&selRef_constraintLessThanOrEqualToAnchor_);
  v12 = (objc_class *)swift_getObjectType();
  v15.receiver = v0;
  v15.super_class = v12;
  objc_msgSendSuper2(&v15, "hitTestDirectionalInsets");
  objc_msgSend(v11, "setConstant:", v13);

  return objc_msgSend(v0, "invalidateIntrinsicContentSize");
}

id sub_2C03E8(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  Class isa;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[qword_3E0F98] = 0;
  *(_QWORD *)&v1[qword_3E0FA0] = 0;
  *(_QWORD *)&v1[qword_3E0FA8] = 0;
  *(_QWORD *)&v1[qword_3E0FB0] = 0;
  *(_QWORD *)&v1[qword_3E0F90] = a1;
  v12.receiver = v1;
  v12.super_class = ObjectType;
  v4 = a1;
  v5 = objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 100.0, 100.0);
  objc_msgSend(v5, "addSubview:", v4);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_2F0A20;
  *(_QWORD *)(v8 + 32) = sub_2BFE5C(&qword_3E0F98, (SEL *)&selRef_topAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
  *(_QWORD *)(v8 + 40) = sub_2BFE5C(&qword_3E0FA0, (SEL *)&selRef_bottomAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
  *(_QWORD *)(v8 + 48) = sub_2BFE5C(&qword_3E0FA8, (SEL *)&selRef_leadingAnchor, (SEL *)&selRef_constraintEqualToAnchor_);
  v9 = sub_2BFE5C(&qword_3E0FB0, (SEL *)&selRef_trailingAnchor, (SEL *)&selRef_constraintLessThanOrEqualToAnchor_);
  *(_QWORD *)(v8 + 56) = v9;
  specialized Array._endMutation()(v9);
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  return v5;
}

void sub_2C05DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_2C07A0();
}

double sub_2C0600(void *a1)
{
  id v1;
  double v2;

  v1 = a1;
  v2 = sub_2C0640();

  return v2;
}

double sub_2C0640()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  objc_class *ObjectType;
  double v6;
  double v7;
  objc_class *v8;
  objc_class *v9;
  objc_super v11;

  objc_msgSend(*(id *)&v0[qword_3E0F90], "intrinsicContentSize");
  v2 = v1;
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, "hitTestDirectionalInsets");
  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v11.receiver = v0;
  v11.super_class = ObjectType;
  objc_msgSendSuper2(&v11, "hitTestDirectionalInsets");
  v7 = v2 - (v4 + v6);
  v8 = (objc_class *)swift_getObjectType();
  v11.receiver = v0;
  v11.super_class = v8;
  objc_msgSendSuper2(&v11, "hitTestDirectionalInsets");
  v9 = (objc_class *)swift_getObjectType();
  v11.receiver = v0;
  v11.super_class = v9;
  objc_msgSendSuper2(&v11, "hitTestDirectionalInsets");
  return v7;
}

void sub_2C0710()
{
  sub_2C082C();
}

void sub_2C072C(uint64_t a1)
{

}

uint64_t type metadata accessor for LeadingTopBottomWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LeadingTopBottomWrapper);
}

void sub_2C07A0()
{
  char *v0;

  *(_QWORD *)&v0[qword_3E0F98] = 0;
  *(_QWORD *)&v0[qword_3E0FA0] = 0;
  *(_QWORD *)&v0[qword_3E0FA8] = 0;
  *(_QWORD *)&v0[qword_3E0FB0] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/PlayButtonWrapper.swift", 47, 2, 129, 0);
  __break(1u);
}

void sub_2C082C()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.LeadingTopBottomWrapper", 47, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t *sub_2C0858(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for PlayButtonPresenter.Data(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v10 = *(uint64_t *)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = v10;
    v12 = a3[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    v13[32] = v14[32];
  }
  swift_retain(v10);
  return a1;
}

uint64_t sub_2C0964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for PlayButtonPresenter.Data(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

char *sub_2C09CC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;

  v6 = type metadata accessor for PlayButtonPresenter.Data(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v10 = *(_QWORD *)&a2[v9];
  *(_QWORD *)&a1[v9] = v10;
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v12[32] = v13[32];
  swift_retain(v10);
  return a1;
}

char *sub_2C0AB0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;

  v6 = type metadata accessor for PlayButtonPresenter.Data(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  v12 = a3[6];
  v13 = *(_QWORD *)&a2[v12];
  v14 = *(_QWORD *)&a1[v12];
  *(_QWORD *)&a1[v12] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_OWORD *)v17;
  v19 = *((_OWORD *)v17 + 1);
  v16[32] = v17[32];
  *(_OWORD *)v16 = v18;
  *((_OWORD *)v16 + 1) = v19;
  return a1;
}

char *sub_2C0BF0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;

  v6 = type metadata accessor for PlayButtonPresenter.Data(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  v11[32] = v12[32];
  return a1;
}

char *sub_2C0CD0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;

  v6 = type metadata accessor for PlayButtonPresenter.Data(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v13 = *(_QWORD *)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  swift_release(v13);
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v15[32] = v16[32];
  return a1;
}

uint64_t sub_2C0E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2C0E10);
}

uint64_t sub_2C0E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2C0E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2C0E9C);
}

uint64_t sub_2C0E9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for PlayButtonWrapper(uint64_t a1)
{
  uint64_t result;

  result = qword_3E1090;
  if (!qword_3E1090)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlayButtonWrapper);
  return result;
}

void sub_2C0F54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_99164(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_306358;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = &unk_306370;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_2C0FDC()
{
  return sub_2C10CC(&qword_3DE490, (uint64_t)&unk_306388);
}

uint64_t sub_2C1000(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2C1040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2C1088()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2C10AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2BF8A8(*(char **)(v2 + 16), a2);
}

double block_copy_helper_75(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_75(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2C10CC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PlayButtonWrapper(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

char *sub_2C1118(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  char *v14;
  void *v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews13SeparatorView_lineColor;
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "separatorColor");
  v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews13SeparatorView_lineView] = v13;

  v17.receiver = v12;
  v17.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v14, "setUserInteractionEnabled:", 0);
  objc_msgSend(v14, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v14, "setEdgesInsettingLayoutMarginsFromSafeArea:", 0);
  v15 = *(void **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews13SeparatorView_lineView];
  objc_msgSend(v15, "setBackgroundColor:", *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews13SeparatorView_lineColor]);
  objc_msgSend(v14, "addSubview:", v15);

  return v14;
}

id sub_2C1414()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  id v18;
  double v19;
  void *v20;
  double MinX;
  CGFloat v22;
  objc_super v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v24, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, "layoutMargins");
  v11 = UIEdgeInsetsInsetRect(v2, v4, v6, v8, v9, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = objc_msgSend(v0, "traitCollection");
  v19 = static Separator.thickness(compatibleWith:)();

  v20 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13SeparatorView_lineView];
  v25.origin.x = v11;
  v25.origin.y = v13;
  v25.size.width = v15;
  v25.size.height = v17;
  MinX = CGRectGetMinX(v25);
  v26.origin.x = v11;
  v26.origin.y = v13;
  v26.size.width = v15;
  v26.size.height = v17;
  v22 = CGRectGetMaxY(v26) - v19;
  v27.origin.x = v11;
  v27.origin.y = v13;
  v27.size.width = v15;
  v27.size.height = v17;
  return objc_msgSend(v20, "setFrame:", MinX, v22, CGRectGetWidth(v27), v19);
}

uint64_t type metadata accessor for SeparatorView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews13SeparatorView);
}

NSString sub_2C15F8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_3E1118 = (uint64_t)result;
  return result;
}

id sub_2C162C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  id v17;
  id result;
  void *v19;
  id v20;
  id v21;
  id v22;
  NSURL *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  _QWORD aBlock[5];
  uint64_t v35;
  objc_super v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - v7;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - v14;
  v33 = a1;
  sub_E8BC0(a1, (uint64_t)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17WebViewController_url);
  v16 = (objc_class *)type metadata accessor for WebViewController(0);
  v36.receiver = v1;
  v36.super_class = v16;
  v17 = objc_msgSendSuper2(&v36, "initWithNibName:bundle:", 0, 0);
  result = objc_msgSend(v17, "view");
  if (result)
  {
    v19 = result;
    v20 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v19, "setBackgroundColor:", v20);

    sub_E8BC0(v33, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_E8C08((uint64_t)v8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, 1, 1, v9);
      sub_2C1E80(1, (uint64_t)v5);

      sub_E8C08(v33);
      sub_E8C08((uint64_t)v5);
    }
    else
    {
      v32 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v32(v15, v8, v9);
      v21 = objc_msgSend((id)objc_opt_self(IMURLBag), "sharedInstance");
      v22 = objc_msgSend(objc_allocWithZone((Class)AMSURLParser), "initWithBag:", v21);

      URL._bridgeToObjectiveC()(v23);
      v25 = v24;
      v26 = objc_msgSend(v22, "typeForURL:", v24);

      v27 = swift_allocObject(&unk_3919B0, 24, 7);
      swift_unknownObjectWeakInit(v27 + 16, v17);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
      v28 = *(unsigned __int8 *)(v10 + 80);
      v29 = (v28 + 24) & ~v28;
      v30 = swift_allocObject(&unk_3919D8, v29 + v11, v28 | 7);
      *(_QWORD *)(v30 + 16) = v27;
      v32((char *)(v30 + v29), v12, v9);
      aBlock[4] = sub_2C28C0;
      v35 = v30;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2C1E0C;
      aBlock[3] = &block_descriptor_76;
      v31 = _Block_copy(aBlock);
      objc_msgSend(v26, "addFinishBlock:", v31, swift_release(v35).n128_f64[0]);

      _Block_release(v31);
      sub_E8C08(v33);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2C19C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char *v16;
  id v17;
  __n128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  __n128 v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[5];
  uint64_t v46;

  v39 = a3;
  v44 = a2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  *(_QWORD *)&v15 = __chkstk_darwin(v12).n128_u64[0];
  v16 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    v17 = objc_msgSend(a1, "integerValue", v15);
  else
    v17 = &dword_0 + 1;
  sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
  v20 = *(unsigned __int8 *)(v13 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = swift_allocObject(&unk_391A28, v21 + v14, v20 | 7);
  v23 = v39;
  *(_QWORD *)(v22 + 16) = v39;
  *(_QWORD *)(v22 + 24) = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v22 + v21, v16, v12);
  aBlock[4] = sub_2C299C;
  v46 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_9_4;
  v24 = _Block_copy(aBlock);
  v25 = v46;
  swift_retain(v23);
  v26 = swift_release(v25);
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = _swiftEmptyArrayStorage;
  v27 = sub_CF9B0();
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v29 = sub_CF9F8();
  v30 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v43, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v30);
  result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v11, v41);
  v32 = v44;
  if (v44)
  {
    v33 = swift_errorRetain(v44);
    v34 = static os_log_type_t.error.getter(v33);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
    v36 = swift_allocObject(v35, 72, 7);
    *(_OWORD *)(v36 + 16) = xmmword_2F03C0;
    v37 = _convertErrorToNSError(_:)(v32);
    *(_QWORD *)(v36 + 56) = sub_E710(0, &qword_3E1158, NSError_ptr);
    *(_QWORD *)(v36 + 64) = sub_2C29CC();
    *(_QWORD *)(v36 + 32) = v37;
    sub_E710(0, &qword_3D3810, OS_os_log_ptr);
    v38 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v34, &dword_0, v38, "Failed to resolve URL type for display, falling back to legacy. Error: %@", 73, 2, v36);
    swift_bridgeObjectRelease(v36);

    return swift_errorRelease(v32);
  }
  return result;
}

uint64_t sub_2C1D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v10 = (void *)result;
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, a3, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    sub_2C1E80(a2, (uint64_t)v8);

    return sub_E8C08((uint64_t)v8);
  }
  return result;
}

void sub_2C1E0C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_2C1E80(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSURL *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  NSURL *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  NSURL *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  Class isa;
  uint64_t v82;
  uint64_t v83;

  v3 = v2;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v82 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v13);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v82 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v82 - v20;
  if (!a1)
  {
    sub_E8BC0(a2, (uint64_t)v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
      v26 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
      v27 = objc_msgSend(v26, "ams_activeiTunesAccount");

      v28 = objc_msgSend((id)objc_opt_self(IMURLBag), "sharedInstance");
      v29 = (void *)objc_opt_self(AMSProcessInfo);
      v30 = v27;
      v31 = objc_msgSend(v29, "currentProcess");
      v25 = objc_msgSend(objc_allocWithZone((Class)AMSUIWebViewController), "initWithBag:account:clientInfo:", v28, v30, v31);

      URL._bridgeToObjectiveC()(v32);
      v34 = v33;
      v35 = objc_msgSend(v25, "loadURL:", v33);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_17;
    }
    v24 = (uint64_t)v15;
LABEL_10:
    sub_E8C08(v24);
    goto LABEL_11;
  }
  if (a1 == 2)
  {
    sub_E8BC0(a2, (uint64_t)v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v18, v6);
      v36 = objc_msgSend((id)objc_opt_self(IMURLBag), "sharedInstance");
      v37 = objc_allocWithZone((Class)AMSUIDynamicViewController);
      URL._bridgeToObjectiveC()(v38);
      v40 = v39;
      v25 = objc_msgSend(v37, "initWithBag:URL:", v36, v39);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_17;
    }
    v24 = (uint64_t)v18;
    goto LABEL_10;
  }
  if (a1 != 1)
  {
LABEL_11:
    v25 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    goto LABEL_17;
  }
  sub_E8BC0(a2, (uint64_t)&v82 - v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v21, 1, v6) == 1)
  {
    v23 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v22);
    v23 = v41;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
  }
  v25 = objc_msgSend(objc_allocWithZone((Class)SKAccountPageViewController), "initWithAccountURL:", v23);

  objc_msgSend(v25, "prepareWithCompletionBlock:", 0);
LABEL_17:
  objc_msgSend(v3, "addChildViewController:", v25);
  v42 = objc_msgSend(v3, "view");
  if (!v42)
  {
    __break(1u);
    goto LABEL_30;
  }
  v43 = v42;
  v44 = objc_msgSend(v25, "view");
  if (!v44)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v45 = v44;
  objc_msgSend(v43, "addSubview:", v44);

  v46 = objc_msgSend(v25, "view");
  if (!v46)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v47 = v46;
  objc_msgSend(v46, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v49 = swift_allocObject(v48, 64, 7);
  *(_OWORD *)(v49 + 16) = xmmword_2F0A20;
  v50 = objc_msgSend(v25, "view");
  if (!v50)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v51 = v50;
  v52 = objc_msgSend(v50, "topAnchor");

  v53 = objc_msgSend(v3, "view");
  if (!v53)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v54 = v53;
  v55 = objc_msgSend(v53, "topAnchor");

  v56 = objc_msgSend(v52, "constraintEqualToAnchor:", v55);
  *(_QWORD *)(v49 + 32) = v56;
  v57 = objc_msgSend(v25, "view");
  if (!v57)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v58 = v57;
  v59 = objc_msgSend(v57, "bottomAnchor");

  v60 = objc_msgSend(v3, "view");
  if (!v60)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v61 = v60;
  v62 = objc_msgSend(v60, "bottomAnchor");

  v63 = objc_msgSend(v59, "constraintEqualToAnchor:", v62);
  *(_QWORD *)(v49 + 40) = v63;
  v64 = objc_msgSend(v25, "view");
  if (!v64)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v65 = v64;
  v66 = objc_msgSend(v64, "leftAnchor");

  v67 = objc_msgSend(v3, "view");
  if (!v67)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v68 = v67;
  v69 = objc_msgSend(v67, "leftAnchor");

  v70 = objc_msgSend(v66, "constraintEqualToAnchor:", v69);
  *(_QWORD *)(v49 + 48) = v70;
  v71 = objc_msgSend(v25, "view");
  if (!v71)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v72 = v71;
  v73 = objc_msgSend(v71, "rightAnchor");

  v74 = objc_msgSend(v3, "view");
  if (v74)
  {
    v75 = v74;
    v76 = (void *)objc_opt_self(NSLayoutConstraint);
    v77 = objc_msgSend(v75, "rightAnchor");

    v78 = objc_msgSend(v73, "constraintEqualToAnchor:", v77);
    *(_QWORD *)(v49 + 56) = v78;
    v83 = v49;
    specialized Array._endMutation()(v79);
    v80 = v83;
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v76, "activateConstraints:", isa, swift_bridgeObjectRelease(v80).n128_f64[0]);

    return;
  }
LABEL_39:
  __break(1u);
}

id sub_2C2734()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WebViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_2C2778()
{
  return type metadata accessor for WebViewController(0);
}

uint64_t type metadata accessor for WebViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_3E1148;
  if (!qword_3E1148)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WebViewController);
  return result;
}

void sub_2C27BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1F5FC0(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

uint64_t sub_2C2828()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2C284C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_2C28C0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_2C19C0(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

double block_copy_helper_76(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_76(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2C2928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_2C299C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_2C1D18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

unint64_t sub_2C29CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E1160;
  if (!qword_3E1160)
  {
    v1 = sub_E710(255, &qword_3E1158, NSError_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_3E1160);
  }
  return result;
}

uint64_t View.hideIfNotEnoughRoom()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t WitnessTable;
  _QWORD v12[2];
  uint64_t v13;
  char v14;

  v4 = type metadata accessor for ModifiedContent(0, a1, &type metadata for HideIfNotEnoughRoomModifier);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v12 - v6;
  KeyPath = swift_getKeyPath(&unk_3064F0);
  v13 = KeyPath;
  v14 = 0;
  View.modifier<A>(_:)(&v13, a1, &type metadata for HideIfNotEnoughRoomModifier, a2);
  swift_release(KeyPath);
  v9 = sub_2C2E18();
  v12[0] = a2;
  v12[1] = v9;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  View.layoutPriority(_:)(v4, WitnessTable, -1.0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2C2B38@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  double v7;
  char *v8;
  uint64_t v9;

  v5 = *(_QWORD *)v2;
  v6 = *(_BYTE *)(v2 + 8);
  sub_D1C8(v5, v6);
  v7 = sub_156D8(v5, v6);
  sub_19BE8(v5, v6);
  *a2 = v7;
  v8 = (char *)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3E1170) + 44);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1178);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
}

double sub_2C2BD0(uint64_t a1, char a2, uint64_t a3, char a4, double a5, uint64_t a6, char *a7)
{
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  double v20;
  double v22;
  double v23;
  char v24;
  _BYTE v25[16];

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9670);
  __chkstk_darwin(v13);
  v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for LayoutSubview(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = &v25[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_17B748((uint64_t)v15);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_17BF80((uint64_t)v15);
    return 0.0;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v19, v15, v16);
  if ((a4 & 1) == 0 && (a3 & 0x7FFFFFFFFFFFFFFFLL) == 0 || (a2 & 1) == 0 && (a1 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v16);
    return 0.0;
  }
  v25[8] = a2 & 1;
  v25[0] = a4 & 1;
  v22 = LayoutSubview.sizeThatFits(_:)(a1);
  v20 = 0.0;
  if (((a2 & 1) != 0 || v22 <= *(double *)&a1) && ((a4 & 1) != 0 || *(double *)&a3 + a5 >= v23))
  {
    v24 = 0;
    v20 = v22;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v16);
  *a7 = v24;
  return v20;
}

double sub_2C2DA0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char *a6)
{
  double *v6;

  return sub_2C2BD0(a1, a2 & 1, a3, a4 & 1, *v6, a5, a6);
}

uint64_t sub_2C2DBC(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _BYTE *a10)
{
  return sub_2C3194(a1, a2, a3, a4, a9, a10);
}

void sub_2C2DC8(double *a1@<X8>)
{
  *a1 = EnvironmentValues.pixelLength.getter();
}

void sub_2C2DF0(double *a1@<X8>)
{
  *a1 = EnvironmentValues.pixelLength.getter();
}

unint64_t sub_2C2E18()
{
  unint64_t result;

  result = qword_3E1168;
  if (!qword_3E1168)
  {
    result = swift_getWitnessTable(&unk_30655C, &type metadata for HideIfNotEnoughRoomModifier);
    atomic_store(result, (unint64_t *)&qword_3E1168);
  }
  return result;
}

uint64_t sub_2C2E5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for HideIfNotEnoughRoomModifier);
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA678);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_2C2E18();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  sub_10EDC(&qword_3DA670, &qword_3DA678, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for HideIfNotEnoughRoomModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_D1C8(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for HideIfNotEnoughRoomModifier(uint64_t a1)
{
  return sub_19BE8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for HideIfNotEnoughRoomModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_D1C8(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_19BE8(v5, v6);
  return a1;
}

uint64_t assignWithTake for HideIfNotEnoughRoomModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_19BE8(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HideIfNotEnoughRoomModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HideIfNotEnoughRoomModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HideIfNotEnoughRoomModifier()
{
  return &type metadata for HideIfNotEnoughRoomModifier;
}

uint64_t sub_2C308C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_335020, 1);
}

ValueMetadata *type metadata accessor for HideIfNotEnoughRoomLayout()
{
  return &type metadata for HideIfNotEnoughRoomLayout;
}

unint64_t sub_2C30B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E1180;
  if (!qword_3E1180)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E1170);
    sub_10EDC(&qword_3E1188, &qword_3E1190, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_10EDC(&qword_3E1198, &qword_3E1178, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E1180);
  }
  return result;
}

unint64_t sub_2C3150()
{
  unint64_t result;

  result = qword_3E11A0;
  if (!qword_3E11A0)
  {
    result = swift_getWitnessTable(&unk_3065CC, &type metadata for HideIfNotEnoughRoomLayout);
    atomic_store(result, (unint64_t *)&qword_3E11A0);
  }
  return result;
}

uint64_t sub_2C3194(double a1, double a2, double a3, double a4, uint64_t a5, _BYTE *a6)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  _BYTE v28[32];

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9670);
  __chkstk_darwin(v11);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for LayoutSubview(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v28[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_17B748((uint64_t)v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_17BF80((uint64_t)v13);
  v19 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32))(v17, v13, v14);
  if (*a6 == 1)
  {
    v20 = static UnitPoint.topLeading.getter(v19);
    v22 = v21;
    v28[8] = 0;
    v28[0] = 0;
    v23 = a1 + 10000.0;
    v24 = a2;
    v25 = 1.0;
    v26 = 1.0;
  }
  else
  {
    v20 = static UnitPoint.topLeading.getter(v19);
    v22 = v27;
    v28[24] = 0;
    v28[16] = 0;
    v23 = a1;
    v24 = a2;
    v25 = a3;
    v26 = a4;
  }
  LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v25, 0, *(_QWORD *)&v26, 0, v23, v24, v20, v22);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t getEnumTagSinglePayload for HideIfNotEnoughRoomLayout.Cache(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HideIfNotEnoughRoomLayout.Cache(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2C3424 + 4 * byte_3064E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2C3458 + 4 * asc_3064E0[v4]))();
}

uint64_t sub_2C3458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2C3460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2C3468);
  return result;
}

uint64_t sub_2C3474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2C347CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2C3480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2C3488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HideIfNotEnoughRoomLayout.Cache()
{
  return &type metadata for HideIfNotEnoughRoomLayout.Cache;
}

uint64_t sub_2C34A8(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  if (!((unint64_t)a1 >> 62))
    return *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (a1 < 0)
    v3 = a1;
  else
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v3);
  swift_bridgeObjectRelease(a1);
  return v4;
}

void sub_2C3504(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];
  _QWORD v7[5];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_objectGraph) = a1;
  swift_release(v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v7, v4, v4);
  v5 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_libraryActionController;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_libraryActionController, v6, 33, 0);
  sub_265294((uint64_t)v7, v5);
  swift_endAccess(v6);
  sub_262730(a1);
}

void sub_2C35BC(uint64_t a1, char *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  NSString v28;
  char **p_name;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  double v33;
  char **v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  NSString v38;
  void *v39;
  unsigned __int8 *v40;
  int v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t ObjectType;
  id v49;
  void *v50;
  char **v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  int v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  char v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  id v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  char v95;
  char *v96;
  void *v97;
  uint64_t (*v98)(__n128);
  id v99;
  uint64_t v100;
  int v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  id v114;
  id v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  void *v143;
  uint64_t (*v144)(__n128);
  void *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  void *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  double v166;
  char v167;
  unsigned __int8 *v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  double v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  NSString v177;
  uint64_t v178;
  void *v179;
  id v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  void (*v186)(char *, _QWORD, uint64_t);
  char **v187;
  char *v188;
  uint64_t v189;
  char v190;
  void (*v191)(char *, uint64_t);
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char v203;
  __n128 v204;
  uint64_t v205;
  __n128 v206;
  __n128 v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  __n128 v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  __n128 v217;
  uint64_t v218;
  uint64_t v219;
  __n128 v220;
  uint64_t v221;
  __n128 v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  _QWORD *v228;
  __n128 v229;
  uint64_t v230;
  __n128 v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  __n128 v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  double v245;
  void *v246;
  uint64_t v247;
  uint64_t v248;
  __n128 v249;
  char v250;
  double v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t (*v256)(uint64_t, uint64_t);
  _BYTE *v257;
  char v258;
  uint64_t v259;
  _BYTE *v260;
  uint64_t v261;
  void *v262;
  int v263;
  id v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  void *v268;
  uint64_t v269;
  void *v270;
  uint64_t v271;
  uint64_t v272;
  void *v273;
  void *v274;
  uint64_t v275;
  char *v276;
  unsigned __int8 *v277;
  void *v278;
  char *v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char *v289;
  char *v290;
  int v291;
  uint64_t v292;
  void *v293;
  uint64_t v294;
  uint64_t v295;
  void *v296;
  uint64_t v297;
  void *v298;
  void *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char v304;
  char v305;
  void *v306;
  uint64_t v307;
  uint64_t v308;
  void *v309;
  void *v310;
  void *v311;
  void *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unsigned __int8 v317;
  char v318;

  v3 = v2;
  v6 = type metadata accessor for PlayState(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v262 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v262 - v11;
  v13 = type metadata accessor for EpisodePlayedTextStyle(0, v10);
  v286 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v285 = (char *)&v262 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v284 = (char *)&v262 - v16;
  v283 = type metadata accessor for NqmlConfiguration(0);
  v282 = *(_QWORD *)(v283 - 8);
  __chkstk_darwin(v283);
  v279 = (char *)&v262 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v280 = (char *)&v262 - v19;
  __chkstk_darwin(v20);
  v281 = (char *)&v262 - v21;
  v22 = *a2;
  sub_262C1C(a1);
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_axis] = v22;
  v23 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_ordinalLabel];
  LegacyLockup.ordinal.getter(v24);
  v290 = v8;
  v289 = v12;
  v288 = v6;
  v287 = v13;
  if (v25)
  {
    v27 = v25;
    v28 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v27).n128_u64[0];
  }
  else
  {
    v28 = 0;
  }
  p_name = &stru_3B7FF8.name;
  objc_msgSend(v23, "setText:", v28, v26);

  v31 = LegacyLockup.title.getter(v30);
  v34 = &stru_3B7FF8.name;
  if (v32)
  {
    v35 = v32;
    v36 = HIBYTE(v32) & 0xF;
    if ((v32 & 0x2000000000000000) == 0)
      v36 = v31 & 0xFFFFFFFFFFFFLL;
    if (v36)
    {
      v37 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel];
      v38 = String._bridgeToObjectiveC()();
      objc_msgSend(v37, "setText:", v38, swift_bridgeObjectRelease(v35).n128_f64[0]);

      objc_msgSend(v37, "setHidden:", 0);
      goto LABEL_11;
    }
    *(_QWORD *)&v33 = swift_bridgeObjectRelease(v32).n128_u64[0];
  }
  v39 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel];
  objc_msgSend(v39, "setHidden:", 1, v33);
  objc_msgSend(v39, "setText:", 0);
LABEL_11:
  v40 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style];
  v41 = v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style + 2];
  v42 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v43 = static UITraitCollection.interfaceIdiomIsMac.getter(v42);
  v291 = v41;
  v292 = v42;
  if ((v43 & 1) == 0 && v41 == 2)
    goto LABEL_16;
  v44 = LegacyEpisodeLockup.summary.getter();
  if (!v44)
    goto LABEL_16;
  v45 = (void *)v44;
  if ((dispatch thunk of LanguageAwareString.isEmpty.getter() & 1) != 0)
  {

LABEL_16:
    v46 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel];
    v47 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel + 8];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v47 + 8) + 40))(0, 0, ObjectType);
    v49 = objc_msgSend(v46, "setHidden:", 1);
    goto LABEL_17;
  }
  v276 = (char *)v45;
  v277 = v40;
  if (v41 == 1)
  {
    v99 = (id)LegacyEpisodeLockup.transcript.getter();
    v275 = a1;
    if (!v99)
      v99 = v45;
    v264 = v99;
    v272 = LanguageAwareString.string.getter();
    v271 = v100;
    if (v40[1])
      v101 = 65792;
    else
      v101 = 0x10000;
    sub_2C7BA8(v3, v101 | *v40, (uint64_t)&v306);
    v102 = v306;
    v103 = v307;
    v270 = v306;
    v269 = v307;
    v104 = v308;
    v105 = v309;
    v267 = v308;
    v268 = v309;
    v266 = (uint64_t)v310;
    v273 = v311;
    v278 = v312;
    v106 = v314;
    v274 = (void *)v313;
    v107 = v316;
    v265 = v315;
    v108 = v317;
    v109 = v318;
    v110 = objc_msgSend(v3, "traitCollection");
    v293 = v102;
    v294 = v103;
    v295 = v104;
    v296 = v105;
    v111 = v266;
    v297 = v266;
    v298 = v273;
    v299 = v278;
    v300 = (uint64_t)v274;
    v301 = v106;
    v112 = v265;
    v302 = v265;
    v303 = v107;
    v304 = v108;
    v305 = v109;
    v113 = sub_1D5728((uint64_t)&v293, v110);
    v114 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v113, 0.0);

    sub_DCC8(v270, v269, v267, (uint64_t)v268, v111, (char)v273, v278, (uint64_t)v274, v106, v112, v107, v108, v109);
    v115 = v114;
    v116 = v281;
    NqmlConfiguration.init(font:)();
    v118 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel];
    v117 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel + 8];
    v119 = swift_getObjectType();
    sub_E710(0, (unint64_t *)&unk_3E1870, NSAttributedString_ptr);
    v120 = v280;
    (*(void (**)(char *, char *, uint64_t))(v282 + 16))(v280, v116, v283);
    v121 = NSAttributedString.init(nqml:configuration:)(v272, v271, v120);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v117 + 8) + 112))(v121, v119);
    v122 = type metadata accessor for MarkedLabel();
    v123 = swift_dynamicCastClass(v118, v122);
    v274 = (void *)v118;
    if (v123)
    {
      v124 = v123;
      v273 = v115;
      v125 = swift_getObjectType();
      v126 = swift_allocObject(&unk_392060, 40, 7);
      *(_QWORD *)(v126 + 16) = 0;
      *(_BYTE *)(v126 + 24) = 1;
      *(_QWORD *)(v126 + 32) = v125;
      v127 = (uint64_t *)(v124 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markInteractionValidation);
      v128 = *(_QWORD *)(v124 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markInteractionValidation);
      v129 = *(_QWORD *)(v124 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markInteractionValidation + 8);
      *v127 = (uint64_t)sub_2CF4BC;
      v127[1] = v126;
      v271 = v126;
      swift_retain(v126);
      sub_1D618(v128, v129);
      v272 = v124;
      v130 = *(_QWORD *)(v124 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons);
      if ((unint64_t)v130 >> 62)
      {
        if (v130 < 0)
          v261 = *(_QWORD *)(v124 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons);
        else
          v261 = v130 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)(v124 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons));
        v131 = _CocoaArrayWrapper.endIndex.getter(v261);
      }
      else
      {
        v131 = *(_QWORD *)((char *)&dword_10 + (v130 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(*(_QWORD *)(v124 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons));
      }
      v41 = v291;
      v40 = v277;
      v132 = v276;
      if (v131)
      {
        if (v131 < 1)
          goto LABEL_144;
        v133 = 0;
        v278 = (void *)(v130 & 0xC000000000000001);
        do
        {
          if (v278)
            v142 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v133, v130);
          else
            v142 = (char *)*(id *)(v130 + 8 * v133 + 32);
          v143 = v142;
          v144 = (uint64_t (*)(__n128))*v127;
          if (*v127)
          {
            v134 = v130;
            v135 = v127[1];
            v136 = v131;
            v137 = *(_QWORD *)&v142[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_mark
                                  + 16];
            sub_2C690(*v127, v135);
            v138 = swift_bridgeObjectRetain(v137);
            v139 = v144(v138);
            v140 = v137;
            v131 = v136;
            swift_bridgeObjectRelease(v140);
            v141 = v135;
            v130 = v134;
            sub_1D618((uint64_t)v144, v141);
          }
          else
          {
            v139 = 1;
          }
          ++v133;
          objc_msgSend(v143, "setUserInteractionEnabled:", v139 & 1);

        }
        while (v131 != v133);
        swift_release(v271);
        v41 = v291;
        v40 = v277;
        v132 = v276;
      }
      else
      {
        swift_release(v271);
      }
      swift_bridgeObjectRelease(v130);
      v159 = (_QWORD *)(v272 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markTriggered);
      v160 = *(_QWORD *)(v272 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markTriggered);
      v161 = *(_QWORD *)(v272 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markTriggered + 8);
      *v159 = UINavigationBar.overrideBackButtonStyle.setter;
      v159[1] = 0;
      sub_1D618(v160, v161);
      v157 = v264;
      a1 = v275;
      v34 = &stru_3B7FF8.name;
      v158 = v273;
    }
    else
    {
      v157 = v115;
      v158 = v264;
      a1 = v275;
      v34 = (char **)(&stru_3B7FF8 + 8);
      v41 = v291;
      v40 = v277;
      v132 = v276;
    }

    (*(void (**)(char *, uint64_t))(v282 + 8))(v281, v283);
    p_name = (char **)(&stru_3B7FF8 + 8);
    v152 = v274;
  }
  else
  {
    v152 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel];
    v151 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel + 8];
    v153 = swift_getObjectType();
    v154 = dispatch thunk of LanguageAwareString.attributedString.getter();
    v155 = *(_QWORD *)(v151 + 8);
    v132 = v276;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 112))(v154, v153, v155);
    v156 = v153;
    v40 = v277;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 136))(4, v156, v155);
  }
  objc_msgSend(v152, v34[268], 0);

LABEL_17:
  v50 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel];
  if (v50)
  {
    v51 = v34;
    v52 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel + 8];
    v281 = v50;
    v53 = LegacyEpisodeLockup.secondSummary.getter();
    if (!v53)
    {
LABEL_21:
      v55 = v281;
      v56 = swift_getObjectType();
      (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v52 + 8) + 40))(0, 0, v56);
      v34 = v51;
      v57 = v55;
      objc_msgSend(v55, v34[268], 1);
LABEL_72:

      goto LABEL_73;
    }
    v54 = (void *)v53;
    if ((dispatch thunk of LanguageAwareString.isEmpty.getter() & 1) != 0)
    {

      goto LABEL_21;
    }
    v277 = v40;
    if (v41 != 1)
    {
      v145 = v54;
      v146 = v281;
      v147 = v52;
      v148 = swift_getObjectType();
      v149 = dispatch thunk of LanguageAwareString.attributedString.getter();
      v150 = *(_QWORD *)(v147 + 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 112))(v149, v148, v150);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 136))(4, v148, v150);
      v34 = v51;
      v57 = v146;
LABEL_71:
      objc_msgSend(v57, v34[268], 0);

      v40 = v277;
      goto LABEL_72;
    }
    v275 = a1;
    v262 = v54;
    v276 = (char *)LanguageAwareString.string.getter();
    v274 = (void *)v58;
    if (v40[1])
      v59 = 65792;
    else
      v59 = 0x10000;
    sub_2C7BA8(v3, v59 | *v40, (uint64_t)&v306);
    v60 = v306;
    v61 = v307;
    v273 = v306;
    v272 = v307;
    v62 = v308;
    v271 = v308;
    v63 = (uint64_t)v310;
    v278 = v309;
    v270 = v310;
    v64 = v311;
    v65 = v312;
    v269 = (uint64_t)v311;
    v268 = v312;
    v66 = v313;
    v267 = v313;
    v266 = v314;
    v265 = v315;
    v264 = (id)v316;
    v263 = v317;
    v67 = v318;
    v68 = objc_msgSend(v3, "traitCollection");
    v293 = v60;
    v294 = v61;
    v295 = v62;
    v296 = v278;
    v297 = v63;
    v298 = v64;
    v299 = v65;
    v69 = v266;
    v300 = v66;
    v301 = v266;
    v70 = v265;
    v71 = (uint64_t)v264;
    v302 = v265;
    v303 = (uint64_t)v264;
    LOBYTE(v66) = v263;
    v304 = v263;
    v305 = v67;
    v72 = v68;
    v73 = sub_1D5728((uint64_t)&v293, v68);
    v74 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v73, 0.0);

    sub_DCC8(v273, v272, v271, (uint64_t)v278, (uint64_t)v270, v269, v268, v267, v69, v70, v71, v66, v67);
    v75 = v74;
    v76 = v279;
    NqmlConfiguration.init(font:)();
    v77 = v281;
    v78 = swift_getObjectType();
    sub_E710(0, (unint64_t *)&unk_3E1870, NSAttributedString_ptr);
    v79 = v280;
    v80 = v76;
    v57 = v77;
    (*(void (**)(char *, char *, uint64_t))(v282 + 16))(v280, v80, v283);
    v81 = NSAttributedString.init(nqml:configuration:)(v276, v274, v79);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 + 8) + 112))(v81, v78);
    v82 = type metadata accessor for MarkedLabel();
    v83 = swift_dynamicCastClass(v77, v82);
    if (!v83)
    {
LABEL_70:

      (*(void (**)(char *, uint64_t))(v282 + 8))(v279, v283);
      a1 = v275;
      v34 = &stru_3B7FF8.name;
      v41 = v291;
      p_name = &stru_3B7FF8.name;
      v145 = v262;
      goto LABEL_71;
    }
    v84 = v83;
    v278 = v75;
    v85 = (uint64_t *)(v83 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markInteractionValidation);
    v86 = *(_QWORD *)(v83 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markInteractionValidation);
    v87 = *(_QWORD *)(v83 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markInteractionValidation + 8);
    *v85 = (uint64_t)static NSUserDefaults.debugFeaturesEnabledByDefault.getter;
    v85[1] = 0;
    v88 = v77;
    sub_1D618(v86, v87);
    v89 = *(_QWORD *)(v84 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_markButtons);
    v276 = v88;
    if ((unint64_t)v89 >> 62)
    {
      if (v89 < 0)
        v162 = v89;
      else
        v162 = v89 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v89);
      v90 = _CocoaArrayWrapper.endIndex.getter(v162);
      if (v90)
        goto LABEL_29;
    }
    else
    {
      v90 = *(_QWORD *)((char *)&dword_10 + (v89 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v89);
      if (v90)
      {
LABEL_29:
        if (v90 >= 1)
        {
          v91 = 0;
          v280 = (char *)(v89 & 0xC000000000000001);
          do
          {
            if (v280)
              v96 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v91, v89);
            else
              v96 = (char *)*(id *)(v89 + 8 * v91 + 32);
            v97 = v96;
            v98 = (uint64_t (*)(__n128))*v85;
            if (*v85)
            {
              v92 = v85[1];
              v93 = *(_QWORD *)&v96[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_mark
                                  + 16];
              sub_2C690(*v85, v92);
              v94 = swift_bridgeObjectRetain(v93);
              v95 = v98(v94);
              swift_bridgeObjectRelease(v93);
              sub_1D618((uint64_t)v98, v92);
            }
            else
            {
              v95 = 1;
            }
            ++v91;
            objc_msgSend(v97, "setUserInteractionEnabled:", v95 & 1);

          }
          while (v90 != v91);
          goto LABEL_69;
        }
        __break(1u);
LABEL_144:
        __break(1u);
        goto LABEL_145;
      }
    }
LABEL_69:

    swift_bridgeObjectRelease(v89);
    v57 = v281;
    v75 = v278;
    goto LABEL_70;
  }
LABEL_73:
  v163 = static UITraitCollection.interfaceIdiomIsMac.getter(v49);
  if ((v163 & 1) != 0 || v41 != 2)
    sub_1382E0(a1);
  v164 = v40[1];
  v165 = static UITraitCollection.interfaceIdiomIsMac.getter(v163);
  if ((v165 & 1) == 0
    || (v164 & 1) != 0
    || (v166 = COERCE_DOUBLE(LegacyEpisodeLockup.duration.getter(v165)), (v167 & 1) != 0)
    || v166 <= 2.22044605e-16)
  {
    v179 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_durationLabel];
    objc_msgSend(v179, v34[268], 1);
    v180 = objc_msgSend(v179, p_name[286], 0);
  }
  else
  {
    v168 = v40;
    v169 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_durationLabel];
    v170 = static Localization.duration(_:)(objc_msgSend(v169, v34[268], 0), v166);
    if (v171)
    {
      v173 = v171;
      v306 = (void *)v170;
      v307 = v171;
      v174 = sub_D254();
      StringProtocol.localizedUppercase.getter(&type metadata for String, v174);
      v176 = v175;
      swift_bridgeObjectRelease(v173);
      v177 = String._bridgeToObjectiveC()();
      v178 = v176;
      v41 = v291;
      *(_QWORD *)&v172 = swift_bridgeObjectRelease(v178).n128_u64[0];
    }
    else
    {
      v177 = 0;
    }
    objc_msgSend(v169, p_name[286], v177, v172);

    v40 = v168;
  }
  v181 = *v40;
  v182 = static UITraitCollection.interfaceIdiomIsMac.getter(v180);
  if ((v182 & 1) != 0)
  {
    v182 = 0;
    if (v41 == 1 || ((v164 | v181 ^ 1) & 1) == 0)
      goto LABEL_99;
  }
  else if (v41)
  {
    v182 = 0;
    goto LABEL_99;
  }
  if (v181)
    v183 = 28;
  else
    v183 = 31;
  v184 = v284;
  LegacyEpisodeLockup.playedTextStyle.getter(v182);
  v185 = v286;
  v186 = *(void (**)(char *, _QWORD, uint64_t))(v286 + 104);
  LODWORD(v283) = v164;
  v187 = v34;
  v188 = v285;
  v189 = v287;
  v186(v285, enum case for EpisodePlayedTextStyle.playedOnDate(_:), v287);
  v190 = static EpisodePlayedTextStyle.== infix(_:_:)(v184, v188);
  v191 = *(void (**)(char *, uint64_t))(v185 + 8);
  v192 = v188;
  v34 = v187;
  v191(v192, v189);
  v193 = ((uint64_t (*)(char *, uint64_t))v191)(v184, v189);
  if ((v190 & 1) != 0)
    v183 |= 0x20uLL;
  v194 = static UITraitCollection.interfaceIdiomIsMac.getter(v193);
  if (!(v283 & 1 | ((v194 & 1) == 0)))
    v183 &= ~4uLL;
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v194) & 1) != 0)
    v182 = v183 | 0x40;
  else
    v182 = v183;
LABEL_99:
  v195 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackViewStyle];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackViewStyle] = v182;
  if (v195 != v182)
  {
    sub_279B48(v182);
    objc_msgSend(v3, "setNeedsLayout");
  }
  v196 = *(char **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackView];
  v197 = (uint64_t)v289;
  swift_storeEnumTagMultiPayload(v289, v288, 2);
  v198 = (uint64_t)&v196[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState];
  swift_beginAccess(&v196[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState], &v306, 0, 0);
  v199 = (uint64_t)v290;
  sub_19C4C(v198, (uint64_t)v290, type metadata accessor for PlayState);
  swift_beginAccess(v198, &v293, 33, 0);
  sub_2CF468(v197, v198, type metadata accessor for PlayState);
  swift_endAccess(&v293);
  sub_27AA00(v199);
  sub_FA4C(v197, type metadata accessor for PlayState);
  v200 = sub_FA4C(v199, type metadata accessor for PlayState);
  v201 = LegacyEpisodeLockup.duration.getter(v200);
  v202 = &v196[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_itemDuration];
  *(_QWORD *)v202 = v201;
  v202[8] = v203 & 1;
  v205 = type metadata accessor for LibraryEpisodeLockup(0, v204);
  if (swift_dynamicCastClass(a1, v205))
  {
    v207 = swift_retain(a1);
    v208 = LibraryEpisodeLockup.uuid.getter(v207);
    v210 = v209;
    sub_27F110(v208, v209);
    swift_release(a1);
    v211.n128_u64[0] = swift_bridgeObjectRelease(v210).n128_u64[0];
  }
  else
  {
    v212 = LegacyLockup.adamId.getter(v206);
    if ((AdamID.isEmpty.getter(v212) & 1) == 0)
    {
      v213 = LegacyLockup.adamId.getter(v211);
      sub_27F2E4(v213);
    }
  }
  objc_msgSend(v196, "setNeedsLayout", v211.n128_f64[0]);
  sub_22400C(a1);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v214) & 1) != 0 || v291 != 2)
  {
    sub_2C4F10();
    if (v215)
    {
      v216 = v215;
      if (swift_dynamicCastClass(a1, v205))
      {
        swift_retain(a1);
        sub_132194();
        swift_release(v216);
        v218 = a1;
      }
      else
      {
        v219 = LegacyLockup.adamId.getter(v217);
        if ((AdamID.isEmpty.getter(v219) & 1) == 0)
        {
          v221 = LegacyLockup.adamId.getter(v220);
          sub_132374(v221);
        }
        v218 = v216;
      }
      swift_release(v218);
    }
  }
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonDisclosureType] = 0;
  if (swift_dynamicCastClass(a1, v205))
  {
    v222 = swift_retain(a1);
    v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_multiEpisode] = LegacyEpisodeLockup.isMultiEpisode.getter(v222) & 1;
    v223 = LibraryEpisodeLockup.podcastUuid.getter();
    v225 = v224;
    swift_release(a1);
    v226 = (uint64_t *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_usedByPodcastUuid];
    v227 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_usedByPodcastUuid + 8];
    *v226 = v223;
    v226[1] = v225;
  }
  else
  {
    v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_multiEpisode] = 0;
    v228 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_usedByPodcastUuid];
    v227 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_usedByPodcastUuid + 8];
    *v228 = 0;
    v228[1] = 0;
  }
  v229 = swift_bridgeObjectRelease(v227);
  v230 = dispatch thunk of LegacyEpisodeLockup.summaryAction.getter(v229);
  if (v230)
  {
    v232 = v230;
    Action.title.getter(v231);
    v234 = v233;
    swift_bridgeObjectRelease(v233);
    if (v234)
    {
      v235 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryAction];
      *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryAction] = v232;
      swift_retain_n(v232, 2);
      sub_2C5708(v235, v236);
      swift_release(v235);
      v237 = swift_release_n(v232, 2);
      goto LABEL_122;
    }
    v231 = swift_release(v232);
  }
  v238 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryAction];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryAction] = 0;
  sub_2C5708(v238, v231);
  swift_release(v238);
LABEL_122:
  v239 = dispatch thunk of LegacyEpisodeLockup.titleAction.getter(v237);
  v240 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleAction];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleAction] = v239;
  swift_release(v240);
  v242 = dispatch thunk of LegacyLockup.playAction.getter(v241);
  v243 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playAction;
  v244 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playAction];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playAction] = v242;
  swift_retain(v242);
  *(_QWORD *)&v245 = swift_release(v244).n128_u64[0];
  v246 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playButton];
  if (v246)
    objc_msgSend(v246, v34[268], *(_QWORD *)&v3[v243] == 0, v245);
  swift_release(v242);
  v248 = dispatch thunk of LegacyLockup.contextAction.getter(v247);
  sub_2CE25C(v248);
  v249 = swift_release(v248);
  v250 = dispatch thunk of LegacyEpisodeLockup.disabled.getter(v249);
  v251 = 1.0;
  if ((v250 & 1) != 0)
    UIInterfaceGetContentDisabledAlpha(1.0);
  objc_msgSend(v3, "setAlpha:", v251);
  objc_msgSend(v3, "setNeedsLayout");
  sub_2C8120();
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
  {
    v252 = swift_getObjectType();
    if (swift_conformsToProtocol2(v252, &protocol descriptor for SelectableCell))
    {
      if ((*(_BYTE *)(*(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage]
                     + 16) & 1) != 0)
      {
        v253 = 0;
      }
      else
      {
        v254 = swift_conformsToProtocol2(v252, &protocol descriptor for HoverableView);
        if (!v254)
        {
LABEL_147:
          __break(1u);
          return;
        }
        v255 = v254;
        v256 = *(uint64_t (**)(uint64_t, uint64_t))(v254 + 8);
        v257 = v3;
        v258 = v256(v252, v255);

        if ((v258 & 1) != 0)
          v253 = 1;
        else
          v253 = 2;
      }
      sub_B26B8(v253);
      v259 = swift_getObjectType();
      if (swift_conformsToProtocol2(v259, &protocol descriptor for CellWithBackgroundNeighbor))
      {
        v260 = v3;
        sub_B27F0(v253, 0);

        return;
      }
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
}

uint64_t sub_2C4BFC(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v2 < v5)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

double sub_2C4C40()
{
  char *v0;
  void *v1;
  char *v2;
  int v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  char v10;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style];
  v3 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style];
  v4 = v2[2];
  v5 = objc_msgSend(v1, "traitCollection");
  v6 = v5;
  if (v3 != 1)
  {

    return 0.0;
  }
  v7 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v8 = static UITraitCollection.interfaceIdiomIsMac.getter(v7);
  if ((v8 & 1) == 0 && v4 == 1)
  {
    if (!objc_msgSend(v6, "userInterfaceIdiom") || (v8 = (uint64_t)objc_msgSend(v6, "horizontalSizeClass"), v8 == 1))
    {

      return 60.0;
    }
  }
  v10 = static UITraitCollection.interfaceIdiomIsMac.getter(v8);

  result = 102.0;
  if ((v10 & 1) == 0 && v4 == 2)
    return 60.0;
  return result;
}

uint64_t sub_2C4D34(void *a1, int a2)
{
  uint64_t result;
  unsigned __int8 v3;
  uint64_t v5;
  int v6;

  if ((a2 & 1) == 0)
    return 2;
  v3 = BYTE2(a2);
  v5 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  result = static UITraitCollection.interfaceIdiomIsMac.getter(v5);
  v6 = v3;
  if ((result & 1) != 0 || v6 != 1)
    return (v6 == 2) & (static UITraitCollection.interfaceIdiomIsMac.getter(result) ^ 1);
  if (objc_msgSend(a1, "userInterfaceIdiom"))
  {
    result = (uint64_t)objc_msgSend(a1, "horizontalSizeClass");
    if (result == 1)
      return result;
    return (v6 == 2) & (static UITraitCollection.interfaceIdiomIsMac.getter(result) ^ 1);
  }
  return 1;
}

double sub_2C4DE0()
{
  double result;

  result = -1.79769313e308;
  xmmword_3E11B0 = xmmword_3066A0;
  *(_OWORD *)&qword_3E11C0 = xmmword_3066B0;
  return result;
}

double sub_2C4E00()
{
  double result;

  result = -1.79769313e308;
  xmmword_3E11D0 = xmmword_3066B0;
  *(_OWORD *)&qword_3E11E0 = xmmword_3066B0;
  return result;
}

void sub_2C4E18()
{
  qword_3E11F0 = 0x4024000000000000;
}

void sub_2C4E28()
{
  qword_3E11F8 = 0x4010000000000000;
}

void sub_2C4E38()
{
  qword_3E1200 = 0x4024000000000000;
}

void sub_2C4E48()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v0);

  if (v1)
    qword_3E1208 = (uint64_t)v1;
  else
    __break(1u);
}

void sub_2C4EC4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  v4 = sub_27F77C(a1);
  swift_bridgeObjectRelease(a1);
  *a2 = v4;
}

double sub_2C4F10()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  double v15;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___inlineNowPlayingIndicatorLayout];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___inlineNowPlayingIndicatorLayout];
  v4 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___inlineNowPlayingIndicatorLayout
                    + 8];
  if (v3 == 1)
  {
    v5 = type metadata accessor for InlineNowPlayingIndicator(0);
    v6 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    *(_BYTE *)(v6 + 24) = 0;
    *(_QWORD *)(v6 + 64) = 0;
    *(_QWORD *)(v6 + 40) = 0;
    *(_QWORD *)(v6 + 48) = 0;
    *(_QWORD *)(v6 + 32) = 0;
    swift_unknownObjectWeakInit(v6 + 56, 0);
    *(_QWORD *)(v6 + 80) = 0;
    swift_unknownObjectWeakInit(v6 + 72, 0);
    v7 = v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InlineNowPlayingIndicator_episodePlayState;
    v8 = type metadata accessor for EpisodePlayState(0);
    swift_storeEnumTagMultiPayload(v7, v8, 4);
    *(_QWORD *)(v6 + 64) = &off_391EB0;
    swift_unknownObjectWeakAssign(v6 + 56, v1);
    *(_QWORD *)(v6 + 80) = &off_391E98;
    swift_unknownObjectWeakAssign(v6 + 72, v1);
    v9 = objc_allocWithZone((Class)UIView);
    v10 = v1;
    *(_QWORD *)(v6 + 16) = objc_msgSend(v9, "init");

    v11 = *(void **)(v6 + 16);
    v12 = qword_3CF070;
    swift_retain(v6);
    v13 = v11;
    if (v12 != -1)
      swift_once(&qword_3CF070, sub_E49C);
    objc_msgSend(v13, "setTintColor:", qword_3FA8D0);
    swift_release(v6);

    v14 = *(_QWORD *)v2;
    *(_QWORD *)v2 = v6;
    *(_OWORD *)(v2 + 8) = xmmword_2F0650;
    swift_retain(v6);
    sub_2CDB20(v14);
    v15 = 6.0;
  }
  else
  {
    v15 = v4;
  }
  sub_2CDB30(v3);
  return v15;
}

uint64_t sub_2C5104()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;

  v0 = objc_allocWithZone((Class)type metadata accessor for PlaybackStatusView(0));
  sub_27BA38(31);
  v2 = v1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_preferredBarStyle) = 2;
  v3 = 2 * (*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style) & 1);
  v4 = (void *)*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle) = v3;
  sub_279A50(v4);
  return v2;
}

char *sub_2C51AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___summaryButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___summaryButton);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___summaryButton);
  }
  else
  {
    v4 = sub_2C523C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_2C523C()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  _QWORD v6[11];
  __int16 v7;

  type metadata accessor for ButtonWithTouchInsets();
  if (qword_3CF5D0 != -1)
    swift_once(&qword_3CF5D0, sub_140E9C);
  v6[0] = qword_3FC1B0;
  v6[1] = *(_QWORD *)algn_3FC1B8;
  v6[2] = qword_3FC1C0;
  v6[3] = qword_3FC1C8;
  v6[4] = qword_3FC1D0;
  v6[5] = *(_QWORD *)byte_3FC1D8;
  v6[6] = qword_3FC1E0;
  v6[7] = qword_3FC1E8;
  v6[8] = qword_3FC1F0;
  v6[9] = qword_3FC1F8;
  v6[10] = qword_3FC200;
  v7 = word_3FC208;
  sub_DDA0((void *)qword_3FC1B0, *(uint64_t *)algn_3FC1B8, qword_3FC1C0, qword_3FC1C8, qword_3FC1D0, byte_3FC1D8[0], (void *)qword_3FC1E0, qword_3FC1E8, qword_3FC1F0, qword_3FC1F8, qword_3FC200, word_3FC208, SHIBYTE(word_3FC208));
  v0 = sub_2D5CD4((uint64_t)v6);
  objc_msgSend(v0, "setContentEdgeInsets:", COERCE_DOUBLE(1), 0.0, 0.0, 0.0);
  objc_msgSend(v0, "setContentHorizontalAlignment:", 4);
  v1 = objc_msgSend(v0, "titleLabel");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setLineBreakMode:", 4);

  }
  v3 = objc_msgSend(v0, "titleLabel");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "_setTextColorFollowsTintColor:", 1);

  }
  objc_msgSend(v0, "setHidden:", 1);
  return v0;
}

id sub_2C53B0()
{
  __int16 v0;

  if (qword_3CF5C0 != -1)
    swift_once(&qword_3CF5C0, sub_140D44);
  if (HIBYTE(word_3FC148))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3E1210 = xmmword_2F4680;
  byte_3E1220 = 0;
  xmmword_3E1228 = xmmword_3FC0F0;
  xmmword_3E1238 = xmmword_3FC100;
  qword_3E1248 = qword_3FC110;
  unk_3E1250 = qword_3FC118;
  xmmword_3E1258 = xmmword_3FC120;
  qword_3E1268 = qword_3FC130;
  unk_3E1270 = qword_3FC138;
  qword_3E1278 = qword_3FC140;
  word_3E1280 = v0 | word_3FC148 | 0x8000;
  return sub_DDA0((void *)xmmword_3FC0F0, *((uint64_t *)&xmmword_3FC0F0 + 1), xmmword_3FC100, *((uint64_t *)&xmmword_3FC100 + 1), qword_3FC110, qword_3FC118, (void *)xmmword_3FC120, *((uint64_t *)&xmmword_3FC120 + 1), qword_3FC130, qword_3FC138, qword_3FC140, word_3FC148, SHIBYTE(word_3FC148));
}

id sub_2C5474()
{
  __int16 v0;

  if (qword_3CF5C0 != -1)
    swift_once(&qword_3CF5C0, sub_140D44);
  if (byte_3FC149)
    v0 = 256;
  else
    v0 = 0;
  xmmword_3E1288 = 0uLL;
  byte_3E1298 = 0;
  qword_3E12A0 = qword_3FC0F0;
  unk_3E12A8 = qword_3FC0F8;
  qword_3E12B0 = qword_3FC100;
  unk_3E12B8 = qword_3FC108;
  qword_3E12C0 = qword_3FC110;
  unk_3E12C8 = qword_3FC118;
  qword_3E12D0 = qword_3FC120;
  unk_3E12D8 = qword_3FC128;
  qword_3E12E0 = qword_3FC130;
  unk_3E12E8 = qword_3FC138;
  qword_3E12F0 = qword_3FC140;
  word_3E12F8 = v0 | byte_3FC148 | 0x8000;
  return sub_DDA0((void *)qword_3FC0F0, qword_3FC0F8, qword_3FC100, qword_3FC108, qword_3FC110, qword_3FC118, (void *)qword_3FC120, qword_3FC128, qword_3FC130, qword_3FC138, qword_3FC140, byte_3FC148, byte_3FC149);
}

id sub_2C5530()
{
  __int16 v0;

  if (qword_3CF5C0 != -1)
    swift_once(&qword_3CF5C0, sub_140D44);
  if (byte_3FC149)
    v0 = 256;
  else
    v0 = 0;
  xmmword_3E1300 = xmmword_2F4680;
  byte_3E1310 = 0;
  qword_3E1318 = qword_3FC0F0;
  unk_3E1320 = qword_3FC0F8;
  qword_3E1328 = qword_3FC100;
  unk_3E1330 = qword_3FC108;
  qword_3E1338 = qword_3FC110;
  unk_3E1340 = qword_3FC118;
  qword_3E1348 = qword_3FC120;
  unk_3E1350 = qword_3FC128;
  qword_3E1358 = qword_3FC130;
  unk_3E1360 = qword_3FC138;
  qword_3E1368 = qword_3FC140;
  word_3E1370 = v0 | byte_3FC148 | 0x8000;
  return sub_DDA0((void *)qword_3FC0F0, qword_3FC0F8, qword_3FC100, qword_3FC108, qword_3FC110, qword_3FC118, (void *)qword_3FC120, qword_3FC128, qword_3FC130, qword_3FC138, qword_3FC140, byte_3FC148, byte_3FC149);
}

id sub_2C55F4()
{
  __int16 v0;

  if (qword_3CF5C0 != -1)
    swift_once(&qword_3CF5C0, sub_140D44);
  if (byte_3FC149)
    v0 = 256;
  else
    v0 = 0;
  xmmword_3E1378 = xmmword_2F0650;
  byte_3E1388 = 0;
  qword_3E1390 = qword_3FC0F0;
  unk_3E1398 = qword_3FC0F8;
  qword_3E13A0 = qword_3FC100;
  unk_3E13A8 = qword_3FC108;
  qword_3E13B0 = qword_3FC110;
  unk_3E13B8 = qword_3FC118;
  qword_3E13C0 = qword_3FC120;
  unk_3E13C8 = qword_3FC128;
  qword_3E13D0 = qword_3FC130;
  unk_3E13D8 = qword_3FC138;
  qword_3E13E0 = qword_3FC140;
  word_3E13E8 = v0 | byte_3FC148 | 0x8000;
  return sub_DDA0((void *)qword_3FC0F0, qword_3FC0F8, qword_3FC100, qword_3FC108, qword_3FC110, qword_3FC118, (void *)qword_3FC120, qword_3FC128, qword_3FC130, qword_3FC138, qword_3FC140, byte_3FC148, byte_3FC149);
}

__int128 *sub_2C56B8()
{
  if (qword_3CFE50 != -1)
    swift_once(&qword_3CFE50, sub_2C55F4);
  return &xmmword_3E1378;
}

void sub_2C56F8()
{
  qword_3E13F0 = 0x4018000000000000;
}

void sub_2C5708(uint64_t a1, __n128 a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  _BOOL4 v15;
  _BOOL4 v16;
  char *v17;
  char *v18;
  NSString v19;

  v3 = v2;
  if (a1 && (v4 = Action.title.getter(a2), v5))
  {
    v6 = v4;
    v7 = v5;
  }
  else
  {
    swift_bridgeObjectRelease(0);
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryAction];
  if (!v8
    || (v9 = swift_retain(*(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryAction]),
        v10 = Action.title.getter(v9),
        v12 = v11,
        swift_release(v8),
        !v12))
  {
    swift_bridgeObjectRelease(0);
    v10 = 0;
    v12 = 0xE000000000000000;
  }
  if (v6 == v10 && v7 == v12)
  {
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v10, v12, 0);
    swift_bridgeObjectRelease(v7);
    if ((v13 & 1) != 0)
    {
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      v14 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0)
        v14 = v10 & 0xFFFFFFFFFFFFLL;
      v15 = v14 != 0;
      v16 = (v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style + 2] & 0xFD) == 0 && v15;
      v17 = sub_2C51AC();
      objc_msgSend(v17, "setHidden:", !v16);

      v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonConsumesSpace] = v16;
      v18 = sub_2C51AC();
      v19 = String._bridgeToObjectiveC()();
      objc_msgSend(v18, "setTitle:forState:", v19, 0, swift_bridgeObjectRelease(v12).n128_f64[0]);

      objc_msgSend(v3, "setNeedsLayout");
    }
  }
}

void sub_2C58BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v12[24];

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style) & 1) == 0)
  {
    v5 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState;
    swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState, v12, 0, 0);
    v6 = sub_19C4C(v5, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    EpisodePlayState.isEpisodePlaying.getter(v6);
    sub_FA4C((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v7);

    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playButton))
    {
      v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playButton + 16);
      ObjectType = swift_getObjectType();
      (*(void (**)(id, uint64_t, uint64_t))(v9 + 16))(v8, ObjectType, v9);
    }
    else
    {

    }
  }
}

void sub_2C5A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  NSString v25;
  uint64_t v26;
  Swift::String v27;
  char v28[24];
  Swift::String v29;

  v1 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1840);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_captionLabel);
  v8 = &v7[OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_caption];
  v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_caption + 8];
  if (v9)
  {
    if ((v9 & 0x2000000000000000) != 0)
      v10 = HIBYTE(v9) & 0xF;
    else
      v10 = *(_QWORD *)v8 & 0xFFFFFFFFFFFFLL;
    v11 = v10 == 0;
  }
  else
  {
    v11 = 1;
  }
  v12 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState;
  swift_beginAccess(v12, v28, 0, 0);
  v13 = *(int *)(v4 + 48);
  v14 = *(int *)(v4 + 64);
  sub_19C4C(v12, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  v6[v13] = v11;
  v6[v14] = 0;
  if (swift_getEnumCaseMultiPayload(v6, v1) == 3
    && (sub_19C4C((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState), v11))
  {
    if (v3[16])
      v15 = 0xD000000000000022;
    else
      v15 = 0xD00000000000001BLL;
    if (v3[16])
      v16 = (void *)0x800000000031A720;
    else
      v16 = (void *)0x800000000031A700;
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v29._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = v15;
    v18._object = v16;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v29._countAndFlagsBits = 0;
    v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v29);

    swift_bridgeObjectRelease(v16);
    v27 = v20;
    v21 = sub_D254();
    StringProtocol.localizedUppercase.getter(&type metadata for String, v21);
    v23 = v22;
    swift_bridgeObjectRelease(v20._object);
    sub_FA4C((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  }
  else
  {
    v23 = *((_QWORD *)v8 + 1);
    swift_bridgeObjectRetain(v23);
    sub_D1D4((uint64_t)v6, (uint64_t *)&unk_3E1840);
    if (!v23)
    {
      v25 = 0;
      goto LABEL_19;
    }
  }
  v25 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v24 = swift_bridgeObjectRelease(v23).n128_u64[0];
LABEL_19:
  objc_msgSend(v7, "setText:", v25, v24);

}

uint64_t sub_2C5CCC()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 40, 7);
}

char *sub_2C5CF8(int a1)
{
  _BYTE *v1;
  _BYTE *v2;
  char *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  char v22;
  __int16 v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  id v45;
  id v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  id v55;
  id v56;
  _QWORD *v57;
  id v58;
  id v59;
  _QWORD *v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  NSString v67;
  id v68;
  id v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  char *v76;
  void *v77;
  uint64_t v78;
  char *v79;
  id v80;
  void *v81;
  void *v82;
  id v83;
  char **p_name;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  _QWORD *v98;
  uint64_t v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  void *v112;
  void *v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  _QWORD *v120;
  uint64_t v121;
  id v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  id v129;
  id v130;
  id v131;
  id v132;
  uint64_t v133;
  void *v134;
  id v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  id v143;
  id v144;
  id v145;
  id v146;
  void *v147;
  id v148;
  id v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  id v156;
  id v157;
  id v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  id v163;
  void *v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  void (*v175)(_QWORD, uint64_t, uint64_t);
  char *v176;
  id v177;
  uint64_t v178;
  _QWORD *v179;
  _QWORD *v180;
  _BYTE *v181;
  void *v182;
  void *v183;
  void *v184;
  id v185;
  id v186;
  id v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  double v193;
  char *v194;
  char *v195;
  uint64_t v196;
  id v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  id v201;
  uint64_t v202;
  void (*v203)(void (*)(void *), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  void *v209;
  id v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  void (**v214)();
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  id v219;
  id v220;
  id v221;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  char v227;
  void (*v228)(void *, uint64_t, uint64_t);
  objc_class *v229;
  Class v230;
  Class v231;
  uint64_t v232;
  void (*v233)(uint64_t, uint64_t, uint64_t);
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  void *v237;
  uint64_t v238;
  uint64_t v239;
  void *v240;
  uint64_t v241;
  char *v242;
  int v243;
  void (*v244)(void *, uint64_t, uint64_t);
  void (*v245)(uint64_t, uint64_t, uint64_t);
  uint64_t v246;
  char v247;
  objc_class *ObjectType;
  void *v249;
  int v250;
  char *v251;
  _BYTE v252[32];
  _QWORD v253[24];
  objc_super v254;
  __int128 v255;
  __int128 v256;
  uint64_t v257;
  uint64_t v258;
  __int128 v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  __int128 v263;
  __int16 v264;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_libraryActionController];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_axis] = 2;
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback;
  v6 = v1;
  sub_224704();
  *(_QWORD *)&v1[v5] = v7;
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_captionLabel;
  type metadata accessor for EpisodeCaptionLabel();
  if (qword_3CF5B0 != -1)
    swift_once(&qword_3CF5B0, sub_140BEC);
  v255 = xmmword_3FC030;
  v256 = xmmword_3FC040;
  v257 = qword_3FC050;
  v258 = *(_QWORD *)byte_3FC058;
  v259 = xmmword_3FC060;
  v260 = qword_3FC070;
  v261 = qword_3FC078;
  v262 = qword_3FC080;
  LOWORD(v263) = word_3FC088;
  sub_DDA0((void *)xmmword_3FC030, *((uint64_t *)&xmmword_3FC030 + 1), xmmword_3FC040, *((uint64_t *)&xmmword_3FC040 + 1), qword_3FC050, byte_3FC058[0], (void *)xmmword_3FC060, *((uint64_t *)&xmmword_3FC060 + 1), qword_3FC070, qword_3FC078, qword_3FC080, word_3FC088, SHIBYTE(word_3FC088));
  *(_QWORD *)&v6[v8] = sub_A96AC((uint64_t)&v255, 1, 0, 1);
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_ordinalLabel;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF5D8 != -1)
    swift_once(&qword_3CF5D8, sub_140F48);
  v255 = xmmword_3FC210;
  v256 = xmmword_3FC220;
  v257 = qword_3FC230;
  v258 = *(_QWORD *)byte_3FC238;
  v259 = xmmword_3FC240;
  v260 = qword_3FC250;
  v261 = qword_3FC258;
  v262 = qword_3FC260;
  LOWORD(v263) = word_3FC268;
  sub_DDA0((void *)xmmword_3FC210, *((uint64_t *)&xmmword_3FC210 + 1), xmmword_3FC220, *((uint64_t *)&xmmword_3FC220 + 1), qword_3FC230, byte_3FC238[0], (void *)xmmword_3FC240, *((uint64_t *)&xmmword_3FC240 + 1), qword_3FC250, qword_3FC258, qword_3FC260, word_3FC268, SHIBYTE(word_3FC268));
  *(_QWORD *)&v6[v9] = sub_A96AC((uint64_t)&v255, 1, 0, 1);
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_durationLabel;
  if (qword_3CF5E0 != -1)
    swift_once(&qword_3CF5E0, sub_141154);
  v255 = xmmword_3FC270;
  v256 = xmmword_3FC280;
  v257 = qword_3FC290;
  v258 = *(_QWORD *)byte_3FC298;
  v259 = xmmword_3FC2A0;
  v260 = qword_3FC2B0;
  v261 = qword_3FC2B8;
  v262 = qword_3FC2C0;
  LOWORD(v263) = word_3FC2C8;
  sub_DDA0((void *)xmmword_3FC270, *((uint64_t *)&xmmword_3FC270 + 1), xmmword_3FC280, *((uint64_t *)&xmmword_3FC280 + 1), qword_3FC290, byte_3FC298[0], (void *)xmmword_3FC2A0, *((uint64_t *)&xmmword_3FC2A0 + 1), qword_3FC2B0, qword_3FC2B8, qword_3FC2C0, word_3FC2C8, SHIBYTE(word_3FC2C8));
  *(_QWORD *)&v6[v10] = sub_A96AC((uint64_t)&v255, 1, 0, 1);
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_viewStylings] = _swiftEmptyArrayStorage;
  v11 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___inlineNowPlayingIndicatorLayout];
  *v11 = 1;
  v11[1] = 0;
  v11[2] = 0;
  v12 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing];
  if (qword_3CF5C0 != -1)
    swift_once(&qword_3CF5C0, sub_140D44);
  v247 = BYTE2(a1);
  v13 = xmmword_3FC0F0;
  v14 = xmmword_3FC100;
  v15 = qword_3FC110;
  v16 = qword_3FC118;
  v17 = xmmword_3FC120;
  v18 = qword_3FC130;
  v19 = qword_3FC138;
  v20 = qword_3FC140;
  v21 = word_3FC148;
  v22 = HIBYTE(word_3FC148);
  if (HIBYTE(word_3FC148))
    v23 = 256;
  else
    v23 = 0;
  *(_OWORD *)v12 = xmmword_3066C0;
  v12[16] = 0;
  *(_OWORD *)(v12 + 24) = v13;
  *(_OWORD *)(v12 + 40) = v14;
  *((_QWORD *)v12 + 7) = v15;
  *((_QWORD *)v12 + 8) = v16;
  *(_OWORD *)(v12 + 72) = v17;
  *((_QWORD *)v12 + 11) = v18;
  *((_QWORD *)v12 + 12) = v19;
  *((_QWORD *)v12 + 13) = v20;
  *((_WORD *)v12 + 56) = v23 | v21 | 0x8000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackViewStyle] = 31;
  v24 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackView;
  sub_DDA0((void *)v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16, (void *)v17, *((uint64_t *)&v17 + 1), v18, v19, v20, v21, v22);
  *(_QWORD *)&v6[v24] = sub_2C5104();
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonConsumesSpace] = 0;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonDisclosureType] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonHorizontalTouchOutsets] = 0x4020000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___summaryButton] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playAction] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextAction] = 0;
  v25 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contentSizeChangeHandler];
  *v25 = 0;
  v25[1] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleAction] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryAction] = 0;
  v26 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState];
  v27 = type metadata accessor for EpisodePlayState(0);
  swift_storeEnumTagMultiPayload(v26, v27, 5);
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_multiEpisode] = 0;
  v28 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_usedByPodcastUuid];
  *v28 = 0;
  v28[1] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds] = &_swiftEmptyDictionarySingleton;
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage;
  v30 = type metadata accessor for SelectableCellStorage();
  v31 = swift_allocObject(v30, 17, 7);
  *(_BYTE *)(v31 + 16) = 0;
  *(_QWORD *)&v6[v29] = v31;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHovering] = 0;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle] = 0;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isInContextMenu] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_objectGraph] = 0;
  v32 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style];
  v243 = a1 & 1;
  *v32 = a1 & 1;
  v250 = a1 & 0x100;
  v32[1] = (unsigned __int16)(a1 & 0x100) >> 8;
  v32[2] = BYTE2(a1);
  v33 = qword_3CFB40;
  v34 = (char *)*(id *)&v2[v5];
  if (v33 != -1)
    swift_once(&qword_3CFB40, sub_20B358);
  v35 = qword_3FD248;
  v36 = unk_3FD250;
  v37 = xmmword_3FD258;
  v38 = qword_3FD268;
  v39 = unk_3FD270;
  v40 = qword_3FD278;
  v255 = xmmword_3FD228;
  v256 = unk_3FD238;
  v257 = qword_3FD248;
  v258 = unk_3FD250;
  v259 = xmmword_3FD258;
  v260 = qword_3FD268;
  v261 = unk_3FD270;
  v262 = qword_3FD278;
  v237 = (void *)unk_3FD280;
  v240 = (void *)xmmword_3FD228;
  v263 = unk_3FD280;
  v264 = word_3FD290 | (HIBYTE(word_3FD290) << 8);
  objc_allocWithZone((Class)type metadata accessor for ArtworkContainer(0));
  v41 = v240;
  sub_B7A24(v35, v36, v37, *((uint64_t *)&v37 + 1), v38, v39, v40, v237);
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkContainer] = sub_2633EC(2, v34, (uint64_t *)&v255);
  v42 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v43 = v250;
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v42) & 1) != 0 && v250)
  {
    v44 = type metadata accessor for GradientView();
    v45 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v44)), "init");
    *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_labelContainerMask] = v45;
    objc_msgSend(v45, "setAlpha:", 0.0);
    objc_msgSend(v45, "setUserInteractionEnabled:", 0);
  }
  else
  {
    *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_labelContainerMask] = 0;
  }
  if (qword_3CF5B8 != -1)
    swift_once(&qword_3CF5B8, sub_140C98);
  v255 = xmmword_3FC090;
  v256 = xmmword_3FC0A0;
  v257 = qword_3FC0B0;
  v258 = *(_QWORD *)byte_3FC0B8;
  v259 = xmmword_3FC0C0;
  v260 = qword_3FC0D0;
  v261 = qword_3FC0D8;
  v262 = qword_3FC0E0;
  LOWORD(v263) = word_3FC0E8;
  v46 = sub_DDA0((void *)xmmword_3FC090, *((uint64_t *)&xmmword_3FC090 + 1), xmmword_3FC0A0, *((uint64_t *)&xmmword_3FC0A0 + 1), qword_3FC0B0, byte_3FC0B8[0], (void *)xmmword_3FC0C0, *((uint64_t *)&xmmword_3FC0C0 + 1), qword_3FC0D0, qword_3FC0D8, qword_3FC0E0, word_3FC0E8, SHIBYTE(word_3FC0E8));
  if (v247 == 1)
  {
    *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel] = sub_A96AC((uint64_t)&v255, 2, 0, 1);
    v47 = xmmword_3FC0F0;
    v48 = xmmword_3FC100;
    v235 = qword_3FC110;
    v238 = *((_QWORD *)&xmmword_3FC100 + 1);
    v232 = qword_3FC118;
    v49 = xmmword_3FC120;
    v50 = qword_3FC130;
    v51 = qword_3FC138;
    v52 = qword_3FC140;
    v53 = word_3FC148;
    v54 = HIBYTE(word_3FC148);
    v255 = xmmword_3FC0F0;
    v256 = xmmword_3FC100;
    v257 = qword_3FC110;
    v258 = qword_3FC118;
    v259 = xmmword_3FC120;
    v260 = qword_3FC130;
    v261 = qword_3FC138;
    v223 = qword_3FC130;
    v224 = qword_3FC138;
    v262 = qword_3FC140;
    v225 = qword_3FC140;
    LOWORD(v263) = word_3FC148;
    v226 = word_3FC148;
    v227 = HIBYTE(word_3FC148);
    v229 = (objc_class *)type metadata accessor for MarkedLabel();
    v55 = objc_allocWithZone(v229);
    sub_DDA0((void *)v47, *((uint64_t *)&v47 + 1), v48, v238, v235, v232, (void *)v49, *((uint64_t *)&v49 + 1), v50, v51, v52, v53, v54);
    v56 = sub_26DE24(&v255, 3, 4);
    v57 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel];
    *v57 = v56;
    v57[1] = &off_38E788;
    v255 = v47;
    *(_QWORD *)&v256 = v48;
    *((_QWORD *)&v256 + 1) = v238;
    v257 = v235;
    v258 = v232;
    v259 = v49;
    v260 = v223;
    v261 = v224;
    v262 = v225;
    LOBYTE(v263) = v226;
    BYTE1(v263) = v227;
    v58 = objc_allocWithZone(v229);
    v43 = v250;
    sub_DDA0((void *)v47, *((uint64_t *)&v47 + 1), v48, v238, v235, v232, (void *)v49, *((uint64_t *)&v49 + 1), v223, v224, v225, v226, v227);
    v59 = sub_26DE24(&v255, 1, 4);
    v60 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel];
    *v60 = v59;
    v60[1] = &off_38E788;
  }
  else
  {
    v61 = static UITraitCollection.interfaceIdiomIsMac.getter(v46);
    v62 = 2;
    if (v247 != 2)
      v62 = 3;
    if ((v61 & 1) != 0)
      v63 = 3;
    else
      v63 = v62;
    *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel] = sub_A96AC((uint64_t)&v255, v63, 0, 1);
    v255 = xmmword_3FC0F0;
    v256 = xmmword_3FC100;
    v257 = qword_3FC110;
    v258 = qword_3FC118;
    v259 = xmmword_3FC120;
    v260 = qword_3FC130;
    v261 = qword_3FC138;
    v262 = qword_3FC140;
    LOWORD(v263) = word_3FC148;
    sub_DDA0((void *)xmmword_3FC0F0, *((uint64_t *)&xmmword_3FC0F0 + 1), xmmword_3FC100, *((uint64_t *)&xmmword_3FC100 + 1), qword_3FC110, qword_3FC118, (void *)xmmword_3FC120, *((uint64_t *)&xmmword_3FC120 + 1), qword_3FC130, qword_3FC138, qword_3FC140, word_3FC148, SHIBYTE(word_3FC148));
    v59 = sub_A96AC((uint64_t)&v255, 3, 0, 1);
    v64 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel];
    *v64 = v59;
    v64[1] = &off_383450;
    v65 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel];
    *v65 = 0;
    v65[1] = 0;
  }
  v66 = static UITraitCollection.interfaceIdiomIsMac.getter(v59);
  if ((v66 & 1) == 0 || v243)
  {
    v71 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playButton];
    v71[1] = 0;
    v71[2] = 0;
    *v71 = 0;
  }
  else
  {
    v67 = String._bridgeToObjectiveC()();
    v68 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v67);

    v69 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
    objc_msgSend(v69, "setImage:forState:", v68, 0);
    objc_msgSend(v69, "sizeToFit");

    v70 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playButton];
    *v70 = v69;
    v70[1] = &off_380428;
    v70[2] = &off_37E018;
  }
  v72 = static UITraitCollection.interfaceIdiomIsMac.getter(v66);
  if ((v72 & 1) != 0)
  {
    if (qword_3CFE30 != -1)
      swift_once(&qword_3CFE30, sub_2C4E48);
    v73 = qword_3E1208;
    v74 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
    objc_msgSend(v74, "setImage:forState:", v73, 0);
    v72 = (uint64_t)objc_msgSend(v74, "sizeToFit");
  }
  else
  {
    v74 = 0;
  }
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextButton] = v74;
  v75 = 0;
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v72) & 1) != 0 && !v43)
  {
    v75 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    objc_msgSend(v75, "_setContinuousCornerRadius:", 0.0);
    objc_msgSend(v75, "_setCornerRadius:", 6.0);
    objc_msgSend(v75, "setClipsToBounds:", 1);
  }
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView] = v75;

  v254.receiver = v6;
  v254.super_class = ObjectType;
  v76 = (char *)objc_msgSendSuper2(&v254, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v241 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_captionLabel;
  v77 = *(void **)&v76[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_captionLabel];
  v78 = qword_3CF070;
  v242 = v76;
  v79 = v76;
  v80 = v77;
  if (v78 != -1)
    swift_once(&qword_3CF070, sub_E49C);
  v81 = (void *)qword_3FA8D0;
  v82 = (void *)objc_opt_self(UIColor);
  v83 = v81;
  p_name = &stru_3B7FF8.name;
  v85 = objc_msgSend(v82, "whiteColor");
  v86 = swift_getObjectType();
  v87 = swift_conformsToProtocol2(v86, &protocol descriptor for LabelTextView);
  if (v87)
    v88 = v87;
  else
    v88 = 0;
  if (v87)
    v89 = v80;
  else
    v89 = 0;
  v249 = v82;
  v251 = v79;
  if (v89)
  {
    v90 = swift_getObjectType();
    v244 = *(void (**)(void *, uint64_t, uint64_t))(v88 + 16);
    v91 = v83;
    v92 = v80;
    v93 = v91;
    v94 = v85;
    v95 = v90;
    p_name = (char **)(&stru_3B7FF8 + 8);
    v244(v81, v95, v88);

    v82 = v249;
    v79 = v251;
  }
  else
  {
    objc_msgSend(v80, "setTintColor:", v83);
  }
  v253[0] = v80;
  v253[1] = v81;
  v253[2] = v85;
  v239 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel;
  v96 = qword_3CF080;
  v97 = *(id *)&v79[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel];
  if (v96 != -1)
    swift_once(&qword_3CF080, sub_E528);
  v98 = &unk_3FA000;
  v99 = qword_3FA8E0;
  v100 = (id)qword_3FA8E0;
  v101 = objc_msgSend(v82, p_name[307]);
  v102 = swift_getObjectType();
  v103 = swift_conformsToProtocol2(v102, &protocol descriptor for LabelTextView);
  if (v103)
    v104 = v103;
  else
    v104 = 0;
  if (v103)
    v105 = v97;
  else
    v105 = 0;
  if (v105)
  {
    v106 = swift_getObjectType();
    v245 = *(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 16);
    v107 = v100;
    v108 = v97;
    v109 = v107;
    v110 = v101;
    v111 = v106;
    v98 = (_QWORD *)&unk_3FA000;
    v245(v99, v111, v104);

    p_name = (char **)(&stru_3B7FF8 + 8);
    v82 = v249;
    v79 = v251;
  }
  else
  {
    objc_msgSend(v97, "setTintColor:", v100);
  }
  v253[3] = v97;
  v253[4] = v99;
  v253[5] = v101;
  v236 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel;
  v112 = *(void **)&v79[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel];
  v113 = (void *)v98[284];
  v114 = v112;
  v115 = v113;
  v253[6] = sub_2CE170(v112, v113, objc_msgSend(v82, p_name[307]));
  v253[7] = v116;
  v253[8] = v117;
  v246 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel;
  v118 = qword_3CF078;
  v119 = *(id *)&v79[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel];
  if (v118 != -1)
    swift_once(&qword_3CF078, sub_E4C0);
  v120 = &unk_3FA000;
  v121 = qword_3FA8D8;
  v122 = (id)qword_3FA8D8;
  v123 = objc_msgSend(v82, p_name[307]);
  v124 = swift_getObjectType();
  v125 = swift_conformsToProtocol2(v124, &protocol descriptor for LabelTextView);
  if (v125)
    v126 = v125;
  else
    v126 = 0;
  if (v125)
    v127 = v119;
  else
    v127 = 0;
  if (v127)
  {
    v128 = swift_getObjectType();
    v233 = *(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16);
    v129 = v122;
    v130 = v119;
    v131 = v129;
    v132 = v123;
    v133 = v128;
    v120 = (_QWORD *)&unk_3FA000;
    v233(v121, v133, v126);

    p_name = (char **)(&stru_3B7FF8 + 8);
    v82 = v249;
    v79 = v251;
  }
  else
  {
    objc_msgSend(v119, "setTintColor:", v122);
  }
  v253[9] = v119;
  v253[10] = v121;
  v253[11] = v123;
  v234 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_ordinalLabel;
  v134 = (void *)v120[283];
  v135 = *(id *)&v79[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_ordinalLabel];
  v136 = v134;
  v137 = objc_msgSend(v82, p_name[307]);
  v138 = swift_getObjectType();
  v139 = swift_conformsToProtocol2(v138, &protocol descriptor for LabelTextView);
  if (v139)
    v140 = v139;
  else
    v140 = 0;
  if (v139)
    v141 = v135;
  else
    v141 = 0;
  if (v141)
  {
    v142 = swift_getObjectType();
    v230 = *(Class *)(v140 + 16);
    v143 = v136;
    v144 = v135;
    v145 = v143;
    v146 = v137;
    ((void (*)(void *, uint64_t, uint64_t))v230)(v134, v142, v140);

    p_name = (char **)(&stru_3B7FF8 + 8);
    v82 = v249;
    v79 = v251;
  }
  else
  {
    objc_msgSend(v135, "setTintColor:", v136);
  }
  v253[12] = v135;
  v253[13] = v134;
  v253[14] = v137;
  v231 = (Class)OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_durationLabel;
  v147 = (void *)qword_3FA8D0;
  v148 = *(id *)&v79[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_durationLabel];
  v149 = v147;
  v150 = objc_msgSend(v82, p_name[307]);
  v151 = swift_getObjectType();
  v152 = swift_conformsToProtocol2(v151, &protocol descriptor for LabelTextView);
  if (v152)
    v153 = v152;
  else
    v153 = 0;
  if (v152)
    v154 = v148;
  else
    v154 = 0;
  if (v154)
  {
    v155 = swift_getObjectType();
    v228 = *(void (**)(void *, uint64_t, uint64_t))(v153 + 16);
    v156 = v149;
    v157 = v148;
    v158 = v156;
    v159 = v150;
    v228(v147, v155, v153);

  }
  else
  {
    objc_msgSend(v148, "setTintColor:", v149);
  }
  v253[15] = v148;
  v253[16] = v147;
  v253[17] = v150;
  sub_2C4F10();
  if (v160)
  {
    v161 = v160;
    v162 = *(void **)(v160 + 16);
    v163 = v162;
    swift_release(v161);
  }
  else
  {
    v162 = 0;
  }
  v164 = (void *)qword_3FA8D0;
  v165 = (id)qword_3FA8D0;
  v253[18] = sub_2CE170(v162, v164, objc_msgSend(v249, "whiteColor"));
  v253[19] = v166;
  v253[20] = v167;
  v168 = sub_2C51AC();
  v169 = objc_msgSend(v249, "whiteColor");
  v170 = swift_getObjectType();
  v171 = swift_conformsToProtocol2(v170, &protocol descriptor for LabelTextView);
  if (v171)
    v172 = v171;
  else
    v172 = 0;
  if (v171)
    v173 = v168;
  else
    v173 = 0;
  if (v173)
  {
    v174 = swift_getObjectType();
    v175 = *(void (**)(_QWORD, uint64_t, uint64_t))(v172 + 16);
    v176 = v168;
    v177 = v169;
    v175(0, v174, v172);

  }
  else
  {
    objc_msgSend(v168, "setTintColor:", 0);
  }
  v178 = 0;
  v253[21] = v168;
  v253[22] = 0;
  v253[23] = v169;
  v179 = _swiftEmptyArrayStorage;
  do
  {
    v181 = &v252[v178];
    v182 = *(void **)&v252[v178 + 32];
    if (v182)
    {
      v184 = (void *)*((_QWORD *)v181 + 5);
      v183 = (void *)*((_QWORD *)v181 + 6);
      v185 = v184;
      v186 = v183;
      v187 = v182;
      if ((swift_isUniquelyReferenced_nonNull_native(v179) & 1) == 0)
        v179 = sub_20F060(0, v179[2] + 1, 1, v179);
      v189 = v179[2];
      v188 = v179[3];
      if (v189 >= v188 >> 1)
        v179 = sub_20F060((_QWORD *)(v188 > 1), v189 + 1, 1, v179);
      v179[2] = v189 + 1;
      v180 = &v179[3 * v189];
      v180[4] = v187;
      v180[5] = v184;
      v180[6] = v186;
    }
    v178 += 24;
  }
  while (v178 != 192);
  v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1880);
  swift_arrayDestroy(v253, 8, v190);
  v191 = v251;
  v192 = *(_QWORD *)&v251[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_viewStylings];
  *(_QWORD *)&v251[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_viewStylings] = v179;
  *(_QWORD *)&v193 = swift_bridgeObjectRelease(v192).n128_u64[0];
  if (*(_QWORD *)&v251[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    objc_msgSend(v251, "addSubview:", v193);
  objc_msgSend(v251, "addSubview:", *(_QWORD *)&v242[v241], v193);
  objc_msgSend(v251, "addSubview:", *(_QWORD *)&v251[v239]);
  if (*(_QWORD *)&v251[v236])
    objc_msgSend(v251, "addSubview:");
  v194 = v251;
  v195 = sub_2C51AC();
  objc_msgSend(v194, "addSubview:", v195);

  objc_msgSend(v194, "addSubview:", *(_QWORD *)&v251[v246]);
  objc_msgSend(v194, "addSubview:", *(_QWORD *)&v251[v234]);
  v196 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackView;
  objc_msgSend(v194, "addSubview:", *(_QWORD *)&v194[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackView]);
  objc_msgSend(v194, "addSubview:", *(_QWORD *)((char *)v231 + (_QWORD)v251));
  v197 = objc_msgSend(v194, "addSubview:", *(_QWORD *)&v194[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkContainer]);
  if (*(_QWORD *)&v194[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_labelContainerMask])
    v197 = objc_msgSend(v194, "addSubview:");
  v198 = *(void **)&v194[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playButton];
  if (v198)
  {
    v199 = *(_QWORD *)&v194[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playButton + 8];
    v200 = swift_getObjectType();
    v201 = v198;
    objc_msgSend(v201, "setAlpha:", 0.0);
    v202 = swift_allocObject(&unk_392088, 24, 7);
    swift_unknownObjectWeakInit(v202 + 16, v194);
    v203 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t, __n128))(v199 + 16);
    v204 = swift_retain(v202);
    v205 = v200;
    v191 = v251;
    v203(sub_2CF500, v202, v205, v199, v204);
    objc_msgSend(v194, "addSubview:", v201, swift_release(v202).n128_f64[0]);

  }
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v197) & 1) != 0)
  {
    v206 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
    objc_msgSend(v206, "setDelegate:", v194);
    objc_msgSend(v206, "setNumberOfTapsRequired:", 2);
    objc_msgSend(v206, "setCancelsTouchesInView:", 0);
    objc_msgSend(v206, "setDelaysTouchesBegan:", 0);
    objc_msgSend(v206, "setDelaysTouchesEnded:", 0);
    v207 = swift_allocObject(&unk_392088, 24, 7);
    swift_unknownObjectWeakInit(v207 + 16, v194);
    swift_retain(v207);
    v208 = sub_B0D14((uint64_t)sub_2CF4F8, v207);
    swift_release(v208);
    swift_release_n(v207, 2);
    objc_msgSend(v194, "addGestureRecognizer:", v206);

  }
  v209 = *(void **)&v194[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextButton];
  if (v209)
  {
    v210 = v209;
    objc_msgSend(v210, "setAlpha:", 0.0);
    objc_msgSend(v194, "addSubview:", v210);

  }
  v211 = sub_2C51AC();
  objc_msgSend(v211, "addTarget:action:forControlEvents:", v194, "moreButtonTapWithSender:", 64);

  v212 = *(_QWORD *)&v194[v196];
  v213 = swift_allocObject(&unk_392088, 24, 7);
  swift_unknownObjectWeakInit(v213 + 16, v194);
  v214 = (void (**)())(v212 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playStateChangeHandler);
  v215 = *(_QWORD *)(v212 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playStateChangeHandler);
  v216 = *(_QWORD *)(v212 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playStateChangeHandler + 8);
  *v214 = sub_2CF4F0;
  v214[1] = (void (*)())v213;
  sub_1D618(v215, v216);
  objc_msgSend(v194, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v194, "setInsetsLayoutMarginsFromSafeArea:", 0);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(objc_msgSend(v194, "setPreservesSuperviewLayoutMargins:", 0)) & 1) != 0)
  {
    sub_B10A4();
    if ((static UITraitCollection.interfaceIdiomIsMac.getter(v217) & 1) != 0)
    {
      v218 = *(void **)&v191[v246];
      v219 = objc_allocWithZone((Class)UITapGestureRecognizer);
      v220 = v218;
      v221 = objc_msgSend(v219, "initWithTarget:action:", v194, "titleTapped");
      objc_msgSend(v220, "addGestureRecognizer:", v221);

    }
  }

  return v194;
}

void sub_2C740C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_2C7464(a1);

  }
}

void sub_2C7464(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState, v22, 0, 0);
  v9 = sub_19C4C(v8, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  LOBYTE(v8) = EpisodePlayState.isEpisodePlaying.getter(v9);
  sub_FA4C((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  if ((v8 & 1) != 0)
  {
    v10 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_libraryActionController;
    swift_beginAccess(v10, &v17, 0, 0);
    if (!*(_QWORD *)(v10 + 24))
      return;
    sub_1D5D4(v10, (uint64_t)v19);
    v11 = v20;
    v12 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    dispatch thunk of LibraryActionControllerProtocol.pausePlayer()(v11, v12);
  }
  else
  {
    v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playAction);
    if (!v13)
      return;
    v20 = type metadata accessor for Action(0);
    v21 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v19[0] = v13;
    if (a1)
    {
      *((_QWORD *)&v18 + 1) = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
      *(_QWORD *)&v17 = a1;
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    v14 = sub_89A0((unint64_t *)&unk_3E1850, type metadata accessor for EpisodeView, (uint64_t)&unk_3069D8);
    swift_retain_n(v13, 2);
    v15 = a1;
    v16 = DependencyBindableView.perform(_:from:in:)(v19, &v17, v2, ObjectType, v14);
    swift_release(v16);
    swift_release(v13);
    sub_D1D4((uint64_t)&v17, &qword_3D1A70);
  }
  __swift_destroy_boxed_opaque_existential_0(v19);
}

void sub_2C7664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  __int128 v16;
  __int128 v17;
  _QWORD v18[5];
  _BYTE v19[24];
  _BYTE v20[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playAction);
    swift_retain(v6);

    if (v6)
    {
      swift_beginAccess(v3, v19, 0, 0);
      v7 = swift_unknownObjectWeakLoadStrong(v3);
      if (v7)
      {
        v8 = (void *)v7;
        v18[3] = type metadata accessor for Action(0);
        v18[4] = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        v18[0] = v6;
        swift_beginAccess(v3, v15, 0, 0);
        v9 = swift_unknownObjectWeakLoadStrong(v3);
        if (v9)
        {
          v10 = v9;
          *((_QWORD *)&v17 + 1) = type metadata accessor for EpisodeView(0);
          *(_QWORD *)&v16 = v10;
        }
        else
        {
          v16 = 0u;
          v17 = 0u;
        }
        v11 = (void *)swift_unknownObjectWeakLoadStrong(v3);
        v12 = type metadata accessor for EpisodeView(0);
        v13 = sub_89A0((unint64_t *)&unk_3E1850, type metadata accessor for EpisodeView, (uint64_t)&unk_3069D8);
        swift_retain(v6);
        v14 = DependencyBindableView.perform(_:from:in:)(v18, &v16, v11, v12, v13);

        swift_release(v6);
        swift_release(v14);
        sub_D1D4((uint64_t)&v16, &qword_3D1A70);
        __swift_destroy_boxed_opaque_existential_0(v18);
      }
      else
      {
        swift_release(v6);
      }
    }
  }
}

void sub_2C7808(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  char *v4;
  void *v5;
  void (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "setNeedsLayout");

  }
  swift_beginAccess(v1, &v8, 0, 0);
  v4 = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (v4)
  {
    v5 = v4;
    v6 = *(void (**)(void))&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contentSizeChangeHandler];
    if (v6)
    {
      v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contentSizeChangeHandler + 8];
      sub_2C690(*(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contentSizeChangeHandler], v7);

      v6();
      sub_1D618((uint64_t)v6, v7);
    }
    else
    {

    }
  }
}

uint64_t sub_2C78CC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t ObjectType;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD v8[4];
  _QWORD v9[5];

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryAction);
  if (v2)
  {
    v3 = (void *)result;
    ObjectType = swift_getObjectType();
    v9[3] = type metadata accessor for Action(0);
    v9[4] = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v9[0] = v2;
    v8[3] = sub_E710(0, (unint64_t *)&qword_3E1860, UIButton_ptr);
    v8[0] = v3;
    v5 = sub_89A0((unint64_t *)&unk_3E1850, type metadata accessor for EpisodeView, (uint64_t)&unk_3069D8);
    swift_retain_n(v2, 2);
    v6 = v3;
    v7 = DependencyBindableView.perform(_:from:in:)(v9, v8, v1, ObjectType, v5);
    swift_release(v7);
    swift_release(v2);
    sub_D1D4((uint64_t)v8, &qword_3D1A70);
    return __swift_destroy_boxed_opaque_existential_0(v9);
  }
  return result;
}

void sub_2C7A50()
{
  char *v0;
  void *v1;
  uint64_t ObjectType;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  char *v7;
  char v8;
  uint64_t v9;
  id v10;
  objc_super v11;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, "tintColorDidChange");
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
  {
    ObjectType = swift_getObjectType();
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for SelectableCell))
    {
      if ((*(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage]
                     + 16) & 1) != 0)
      {
        v3 = 0;
      }
      else
      {
        v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HoverableView);
        if (!v4)
        {
LABEL_14:
          __break(1u);
          return;
        }
        v5 = v4;
        v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
        v7 = v0;
        v8 = v6(ObjectType, v5);

        if ((v8 & 1) != 0)
          v3 = 1;
        else
          v3 = 2;
      }
      sub_B26B8(v3);
      v9 = swift_getObjectType();
      if (swift_conformsToProtocol2(v9, &protocol descriptor for CellWithBackgroundNeighbor))
      {
        v10 = v1;
        sub_B27F0(v3, 0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
}

id sub_2C7BA8@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  id v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  v5 = objc_msgSend(a1, "traitCollection");
  v6 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v6) & 1) != 0 || (a2 & 0xFF0000) != 0x10000)
  {

  }
  else
  {
    if (!objc_msgSend(v5, "userInterfaceIdiom"))
    {

LABEL_11:
      if (qword_3CF5C8 != -1)
        swift_once(&qword_3CF5C8, sub_140DF0);
      v8 = &qword_3FC150;
      goto LABEL_14;
    }
    v7 = (char *)objc_msgSend(v5, "horizontalSizeClass");

    if (v7 == (_BYTE *)&dword_0 + 1)
      goto LABEL_11;
  }
  if (qword_3CF5C0 != -1)
    swift_once(&qword_3CF5C0, sub_140D44);
  v8 = &qword_3FC0F0;
LABEL_14:
  v9 = *((_BYTE *)v8 + 89);
  v10 = *((_BYTE *)v8 + 88);
  v12 = v8[9];
  v11 = v8[10];
  v13 = v8[7];
  v14 = v8[8];
  v15 = v8[5];
  v16 = (void *)v8[6];
  v17 = v8[3];
  v18 = v8[4];
  v19 = v8[1];
  v20 = v8[2];
  v21 = (void *)*v8;
  *(_QWORD *)a3 = *v8;
  *(_QWORD *)(a3 + 8) = v19;
  *(_QWORD *)(a3 + 16) = v20;
  *(_QWORD *)(a3 + 24) = v17;
  *(_QWORD *)(a3 + 32) = v18;
  *(_QWORD *)(a3 + 40) = v15;
  *(_QWORD *)(a3 + 48) = v16;
  *(_QWORD *)(a3 + 56) = v13;
  *(_QWORD *)(a3 + 64) = v14;
  *(_QWORD *)(a3 + 72) = v12;
  *(_QWORD *)(a3 + 80) = v11;
  *(_BYTE *)(a3 + 88) = v10;
  *(_BYTE *)(a3 + 89) = v9;
  return sub_DDA0(v21, v19, v20, v17, v18, v15, v16, v13, v14, v12, v11, v10, v9);
}

void sub_2C7D18()
{
  off_3E13F8[0] = (int *)&_swiftEmptyDictionarySingleton;
}

void sub_2C7D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD v7[4];
  _QWORD v8[5];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleAction);
  if (v1)
  {
    ObjectType = swift_getObjectType();
    v8[3] = type metadata accessor for Action(0);
    v8[4] = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v8[0] = v1;
    v3 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel);
    v7[3] = type metadata accessor for DynamicTypeLabel();
    v7[0] = v3;
    v4 = sub_89A0((unint64_t *)&unk_3E1850, type metadata accessor for EpisodeView, (uint64_t)&unk_3069D8);
    swift_retain_n(v1, 2);
    v5 = v3;
    v6 = DependencyBindableView.perform(_:from:in:)(v8, v7, v0, ObjectType, v4);
    swift_release(v6);
    swift_release(v1);
    sub_D1D4((uint64_t)v7, &qword_3D1A70);
    __swift_destroy_boxed_opaque_existential_0(v8);
  }
}

uint64_t sub_2C7E64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  int v5;
  unint64_t v6;
  char v7;
  int v8;
  int v9;
  unint64_t v10;
  char v11;
  _BOOL4 v13;
  _BYTE v15[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds, v15, 0, 0);
  v2 = *v1;
  if (!*(_QWORD *)(*v1 + 16))
    return 15;
  v3 = sub_36DF0(0);
  if ((v4 & 1) != 0)
  {
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 56) + v3);
    if (!*(_QWORD *)(v2 + 16))
      return 15;
  }
  else
  {
    v5 = 2;
    if (!*(_QWORD *)(v2 + 16))
      return 15;
  }
  v6 = sub_36DF0(1u);
  if ((v7 & 1) != 0)
  {
    v8 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 56) + v6);
    if (*(_QWORD *)(v2 + 16))
      goto LABEL_8;
    goto LABEL_13;
  }
  v8 = 2;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_13:
    v9 = 2;
    if (v8 != 2)
      goto LABEL_14;
    return 15;
  }
LABEL_8:
  v9 = 2;
  v10 = sub_36DF0(2u);
  if ((v11 & 1) != 0)
    v9 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 56) + v10);
  if (v8 == 2)
    return 15;
LABEL_14:
  if ((v8 & 1) != 0)
    return 15;
  v13 = (v9 & 1) == 0 && v9 != 2;
  if (v5 == 2 || (v5 & 1) != 0)
  {
    if (v13)
      return 3;
    return 15;
  }
  if (v13)
    return 0;
  else
    return 12;
}

void sub_2C7F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  void *v4;
  void *v5;
  int v6;
  uint64_t v7;
  void *v8;
  unsigned __int8 v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHovering;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHovering))
    v3 = 1.0;
  else
    v3 = 0.0;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playButton);
  if (v4)
    objc_msgSend(v4, "setAlpha:", v3);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextButton);
  if (v5)
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextButton), "setAlpha:", v3);
  v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style + 1);
  v7 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v7) & 1) != 0)
  {
    if (v6)
    {
      v8 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_labelContainerMask);
      if (v8)
        objc_msgSend(v8, "setAlpha:", v3);
    }
  }
  if (v5)
    v9 = objc_msgSend(v5, "isHidden");
  else
    v9 = 1;
  v10 = 0.0;
  if (v9 & 1 | ((*(_BYTE *)(v0 + v2) & 1) == 0))
    v10 = 1.0;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_durationLabel), "setAlpha:", v10);
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel);
  v12 = type metadata accessor for MarkedLabel();
  v13 = swift_dynamicCastClass(v11, v12);
  if (v13)
  {
    *(_BYTE *)(v13 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_active) = *(_BYTE *)(v1 + v2);
    sub_26D9E0();
  }
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel);
  if (v14)
  {
    v15 = swift_dynamicCastClass(v14, v12);
    if (v15)
    {
      *(_BYTE *)(v15 + OBJC_IVAR____TtC23ShelfKitCollectionViews11MarkedLabel_active) = *(_BYTE *)(v1 + v2);
      sub_26D9E0();
    }
  }
}

void sub_2C8120()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t inited;
  NSString *v8;
  NSString *v9;
  id v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  NSString v18;
  Class isa;
  id v20;
  uint64_t v21;

  v1 = v0;
  v2 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v2) & 1) != 0)
  {
    if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle] == 1
      && *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleAction])
    {
      v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel], "textColor");
      v4 = 1;
    }
    else
    {
      v3 = objc_msgSend(v0, "backgroundColor");
      v4 = 0;
    }
    v5 = v3;
    if (!v5)
      v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
    inited = swift_initStackObject(v6, &v21);
    *(_OWORD *)(inited + 16) = xmmword_2EFA20;
    *(_QWORD *)(inited + 32) = NSUnderlineStyleAttributeName;
    *(_QWORD *)(inited + 40) = 1;
    *(_QWORD *)(inited + 64) = &type metadata for Int;
    *(_QWORD *)(inited + 72) = NSUnderlineColorAttributeName;
    *(_QWORD *)(inited + 104) = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
    *(_QWORD *)(inited + 80) = v5;
    v8 = NSUnderlineStyleAttributeName;
    v9 = NSUnderlineColorAttributeName;
    v10 = v5;
    v11 = sub_D4784(inited);
    v12 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel];
    v13 = objc_msgSend(v12, "text");
    if (v13)
    {
      v14 = v13;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

    }
    else
    {
      v16 = 0xE000000000000000;
    }
    v17 = objc_allocWithZone((Class)NSAttributedString);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    type metadata accessor for Key(0);
    sub_89A0((unint64_t *)&qword_3D0150, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v20 = objc_msgSend(v17, "initWithString:attributes:", v18, isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

    objc_msgSend(v12, "setAttributedText:", v20);
    objc_msgSend(v12, "setUserInteractionEnabled:", v4);

  }
}

double sub_2C83A4()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void sub_2C83B0(double a1, double a2, double a3, double a4)
{
  uint64_t v4;

  *(double *)(v4 + 32) = a1;
  *(double *)(v4 + 40) = a2;
  *(double *)(v4 + 48) = a3;
  *(double *)(v4 + 56) = a4;
  *(_BYTE *)(v4 + 24) = 1;
}

uint64_t sub_2C83C4()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 64, 7);
}

_QWORD *sub_2C83E8(char *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;

  v2 = v1;
  v4 = objc_msgSend(a1, "layoutMarginsGuide");
  objc_msgSend(v4, "layoutFrame");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v2[2] = v6;
  v2[3] = v8;
  v2[4] = v10;
  v2[5] = v12;
  v13 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkContainer];
  v14 = type metadata accessor for EpisodeView.LayoutItem();
  v15 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v15 + 24) = 0;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_OWORD *)(v15 + 48) = 0u;
  *(_QWORD *)(v15 + 16) = v13;
  v2[6] = v15;
  v16 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_captionLabel];
  v17 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v17 + 24) = 0;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_OWORD *)(v17 + 48) = 0u;
  *(_QWORD *)(v17 + 16) = v16;
  v2[7] = v17;
  v18 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel];
  v19 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v19 + 24) = 0;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)(v19 + 48) = 0u;
  *(_QWORD *)(v19 + 16) = v18;
  v2[8] = v19;
  v20 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_ordinalLabel];
  v21 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v21 + 24) = 0;
  *(_OWORD *)(v21 + 32) = 0u;
  *(_OWORD *)(v21 + 48) = 0u;
  *(_QWORD *)(v21 + 16) = v20;
  v2[9] = v21;
  v22 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel];
  v23 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v23 + 24) = 0;
  *(_OWORD *)(v23 + 32) = 0u;
  *(_OWORD *)(v23 + 48) = 0u;
  *(_QWORD *)(v23 + 16) = v22;
  v2[10] = v23;
  v24 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel];
  v25 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v25 + 24) = 0;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(_QWORD *)(v25 + 16) = v24;
  v2[11] = v25;
  v26 = v24;
  v27 = v13;
  v28 = v16;
  v29 = v18;
  v30 = v20;
  v31 = v22;
  sub_2C4F10();
  if (v32)
  {
    v33 = v32;
    v34 = *(void **)(v32 + 16);
    v35 = v34;
    swift_release(v33);
  }
  else
  {
    v34 = 0;
  }
  v36 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v36 + 24) = 0;
  *(_OWORD *)(v36 + 32) = 0u;
  *(_OWORD *)(v36 + 48) = 0u;
  *(_QWORD *)(v36 + 16) = v34;
  v2[13] = v36;
  v37 = sub_2C51AC();
  v38 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v38 + 24) = 0;
  *(_OWORD *)(v38 + 32) = 0u;
  *(_OWORD *)(v38 + 48) = 0u;
  *(_QWORD *)(v38 + 16) = v37;
  v2[12] = v38;
  v39 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackView];
  v40 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v40 + 24) = 0;
  *(_OWORD *)(v40 + 32) = 0u;
  *(_OWORD *)(v40 + 48) = 0u;
  *(_QWORD *)(v40 + 16) = v39;
  v2[14] = v40;
  v41 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playButton];
  v42 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v42 + 24) = 0;
  *(_OWORD *)(v42 + 32) = 0u;
  *(_OWORD *)(v42 + 48) = 0u;
  *(_QWORD *)(v42 + 16) = v41;
  v2[15] = v42;
  v43 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextButton];
  v44 = v41;
  v45 = v39;
  v46 = v43;

  v47 = swift_allocObject(v14, 64, 7);
  *(_BYTE *)(v47 + 24) = 0;
  *(_OWORD *)(v47 + 32) = 0u;
  *(_OWORD *)(v47 + 48) = 0u;
  *(_QWORD *)(v47 + 16) = v43;
  v2[16] = v47;
  return v2;
}

uint64_t sub_2C86D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v2 = swift_allocObject(v1, 120, 7);
  *(_OWORD *)(v2 + 16) = xmmword_304BE0;
  v3 = v0[6];
  v4 = v0[7];
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  v5 = v0[10];
  v6 = v0[11];
  v7 = v0[8];
  v13 = v0[9];
  *(_QWORD *)(v2 + 48) = v7;
  *(_QWORD *)(v2 + 56) = v5;
  v9 = v0[12];
  v8 = v0[13];
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 72) = v8;
  v11 = v0[14];
  v10 = v0[15];
  *(_QWORD *)(v2 + 80) = v9;
  *(_QWORD *)(v2 + 88) = v11;
  *(_QWORD *)(v2 + 96) = v10;
  *(_QWORD *)(v2 + 104) = v13;
  v14 = v0[16];
  v15 = v2;
  *(_QWORD *)(v2 + 112) = v14;
  specialized Array._endMutation()(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v7);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v10);
  swift_retain(v13);
  swift_retain(v14);
  return v15;
}

_QWORD *sub_2C87D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[64];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  inited = swift_initStackObject(v1, v21);
  *(_OWORD *)(inited + 16) = xmmword_2F0A20;
  v3 = v0[7];
  *(_QWORD *)(inited + 32) = v3;
  v4 = v0[8];
  *(_QWORD *)(inited + 40) = v4;
  v5 = v0[10];
  *(_QWORD *)(inited + 48) = v5;
  v6 = v0[11];
  *(_QWORD *)(inited + 56) = v6;
  v7 = *(_BYTE *)(v3 + 24);
  swift_retain(v3);
  if ((v7 & 1) != 0)
  {
    swift_retain(v3);
    swift_retain(v4);
    swift_retain(v5);
    v8 = swift_retain(v6);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v9 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
    v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v3);
    specialized ContiguousArray._endMutation()(v10);
  }
  else
  {
    swift_retain(v4);
    swift_retain(v5);
    swift_retain(v6);
  }
  if (*(_BYTE *)(v4 + 24) == 1)
  {
    v11 = swift_retain(v4);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v12 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
    v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v4);
    specialized ContiguousArray._endMutation()(v13);
  }
  if (*(_BYTE *)(v5 + 24) == 1)
  {
    v14 = swift_retain(v5);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
    v15 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
    v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v5);
    specialized ContiguousArray._endMutation()(v16);
  }
  if (*(_BYTE *)(v6 + 24) == 1)
  {
    v17 = swift_retain(v6);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v18 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
    v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v6);
    specialized ContiguousArray._endMutation()(v19);
  }
  swift_release(inited);
  return _swiftEmptyArrayStorage;
}

void sub_2C89C0()
{
  uint64_t v0;
  uint64_t v1;
  double MinY;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t j;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t k;
  CGRect *v18;
  double MaxY;
  uint64_t v20;

  v1 = (uint64_t)sub_2C87D4();
  MinY = CGRectGetMinY(*(CGRect *)(v0 + 16));
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v15 = v1;
    else
      v15 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v15);
    if (!v3)
      goto LABEL_18;
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v1);
    if (!v3)
      goto LABEL_18;
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      v7 = v5;
      if (*(_BYTE *)(v5 + 24) == 1)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
        v8 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
        v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
        specialized ContiguousArray._endMutation()(v9);
      }
      else
      {
        swift_unknownObjectRelease(v5);
      }
    }
  }
  else
  {
    for (j = 0; j != v3; ++j)
    {
      v11 = *(_QWORD *)(v1 + 8 * j + 32);
      if (*(_BYTE *)(v11 + 24) == 1)
      {
        v12 = swift_retain(*(_QWORD *)(v1 + 8 * j + 32));
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v13 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
        v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
        specialized ContiguousArray._endMutation()(v14);
      }
    }
  }
LABEL_18:
  swift_bridgeObjectRelease(v1);
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0
    && ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    v16 = _swiftEmptyArrayStorage[2];
    swift_retain(_swiftEmptyArrayStorage);
    if (v16)
      goto LABEL_21;
LABEL_30:
    swift_release_n(_swiftEmptyArrayStorage, 2);
    swift_bridgeObjectRelease(v1);
    return;
  }
  swift_retain(_swiftEmptyArrayStorage);
  v16 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v16)
    goto LABEL_30;
LABEL_21:
  if (v16 >= 1)
  {
    for (k = 0; k != v16; ++k)
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        v18 = (CGRect *)specialized _ArrayBuffer._getElementSlowPath(_:)(k, _swiftEmptyArrayStorage);
      }
      else
      {
        v18 = (CGRect *)_swiftEmptyArrayStorage[k + 4];
        swift_retain(v18);
      }
      MaxY = CGRectGetMaxY(v18[1]);
      swift_release(v18);
      if (MinY <= MaxY)
        MinY = MaxY;
    }
    goto LABEL_30;
  }
LABEL_32:
  __break(1u);
}

void sub_2C8C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  double v23;
  double v24;
  double Height;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id (*v36)();
  _QWORD aBlock[5];
  uint64_t v38;

  v0 = sub_2C86D0();
  v1 = v0;
  aBlock[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v0 >> 62)
  {
    if (v0 >= 0)
      v0 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = _CocoaArrayWrapper.endIndex.getter(v0);
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFF8));
    if (v2)
    {
LABEL_3:
      if (v2 < 1)
      {
LABEL_67:
        __break(1u);
        return;
      }
      for (i = 0; i != v2; ++i)
      {
        if ((v1 & 0xC000000000000001) != 0)
        {
          v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
        }
        else
        {
          v6 = *(_QWORD *)(v1 + 8 * i + 32);
          v7 = swift_retain(v6);
        }
        if (*(_BYTE *)(v6 + 24) == 1)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
          v4 = *(_QWORD *)(aBlock[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v4);
          v5 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v6);
          specialized ContiguousArray._endMutation()(v5);
        }
        else
        {
          swift_release(v6);
        }
      }
      swift_bridgeObjectRelease(v1);
      v8 = aBlock[0];
      if ((aBlock[0] & 0x8000000000000000) != 0)
        goto LABEL_63;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease(v1);
  v8 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_63;
LABEL_18:
  if ((v8 & 0x4000000000000000) != 0)
    goto LABEL_63;
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
    goto LABEL_64;
  do
  {
    v35 = 0;
    v36 = 0;
    v10 = 0;
    while (1)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
        v12 = __OFADD__(v10++, 1);
        if (v12)
          goto LABEL_61;
      }
      else
      {
        if (v10 >= *(_QWORD *)(v8 + 16))
          goto LABEL_62;
        v11 = *(_QWORD *)(v8 + 32 + 8 * v10);
        swift_retain(v11);
        v12 = __OFADD__(v10++, 1);
        if (v12)
          goto LABEL_61;
      }
      v13 = (uint64_t)sub_2C87D4();
      v14 = v13;
      if ((unint64_t)v13 >> 62)
      {
        if (v13 < 0)
          v30 = v13;
        else
          v30 = v13 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v13);
        v15 = _CocoaArrayWrapper.endIndex.getter(v30);
        if (!v15)
          goto LABEL_32;
      }
      else
      {
        v15 = *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(v13);
        if (!v15)
          goto LABEL_32;
      }
      if ((v14 & 0xC000000000000001) != 0)
        break;
      if (*(_QWORD *)(v14 + 32) != v11)
        goto LABEL_31;
LABEL_45:
      swift_bridgeObjectRelease_n(v14, 2);
      v21 = *(void **)(v11 + 16);
      if (v21
        && (*(_BYTE *)(v11 + 24) & 1) != 0
        && (v22 = v21,
            objc_msgSend(v22, "frame"),
            v24 = v23,
            Height = CGRectGetHeight(*(CGRect *)(v11 + 32)),
            v22,
            v24 != Height))
      {
        v26 = objc_opt_self(UIView);
        swift_retain(v11);
        sub_1D618((uint64_t)v36, v35);
        v27 = swift_allocObject(&unk_392010, 32, 7);
        *(_QWORD *)(v27 + 16) = sub_2CDB40;
        *(_QWORD *)(v27 + 24) = v11;
        aBlock[4] = sub_101EC;
        v38 = v27;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_920D4;
        aBlock[3] = &block_descriptor_77;
        v28 = _Block_copy(aBlock);
        v29 = v38;
        swift_retain(v27);
        objc_msgSend((id)v26, "performWithoutAnimation:", v28, swift_release(v29).n128_f64[0]);
        swift_release(v11);
        _Block_release(v28);
        LOBYTE(v26) = swift_isEscapingClosureAtFileLocation(v27, "", 142, 993, 52, 1);
        swift_release(v27);
        if ((v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_67;
        }
        v35 = v11;
        v36 = sub_2CDB40;
        if (v10 == v9)
          goto LABEL_58;
      }
      else
      {
LABEL_33:
        v16 = *(void **)(v11 + 16);
        if (v16)
          objc_msgSend(v16, "setFrame:", *(double *)(v11 + 32), *(double *)(v11 + 40), *(double *)(v11 + 48), *(double *)(v11 + 56));
        swift_release(v11);
        if (v10 == v9)
        {
LABEL_58:
          swift_release(v8);
          v33 = v35;
          v32 = (uint64_t)v36;
          goto LABEL_65;
        }
      }
    }
    v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
    swift_unknownObjectRelease(v31);
    if (v31 == v11)
      goto LABEL_45;
LABEL_31:
    if (v15 == 1)
    {
LABEL_32:
      swift_bridgeObjectRelease_n(v14, 2);
      goto LABEL_33;
    }
    v17 = 1;
    while (2)
    {
      if ((v14 & 0xC000000000000001) == 0)
      {
        if (__OFADD__(v17, 1))
          goto LABEL_60;
        v20 = *(_QWORD *)(v14 + 32 + 8 * v17++);
        if (v20 == v11)
          goto LABEL_45;
        goto LABEL_38;
      }
      v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v14);
      v12 = __OFADD__(v17++, 1);
      if (!v12)
      {
        v19 = v18;
        swift_unknownObjectRelease(v18);
        if (v19 == v11)
          goto LABEL_45;
LABEL_38:
        if (v17 == v15)
          goto LABEL_32;
        continue;
      }
      break;
    }
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_release(v8);
  }
  while (v9);
LABEL_64:
  swift_release(v8);
  v32 = 0;
  v33 = 0;
LABEL_65:
  sub_1D618(v32, v33);
}

void sub_2C9084()
{
  uint64_t v0;
  double MaxY;
  double MinY;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t i;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t j;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t k;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t m;
  CGRect *v32;
  double v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[104];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  inited = swift_initStackObject(v3, v42);
  *(_OWORD *)(inited + 16) = xmmword_2F1D30;
  v5 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(inited + 32) = v5;
  v6 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(inited + 40) = v6;
  v7 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(inited + 48) = v7;
  v8 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(inited + 56) = v8;
  v9 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(inited + 64) = v9;
  v10 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(inited + 72) = v10;
  v39 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(inited + 80) = v39;
  v40 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(inited + 88) = v40;
  v41 = inited;
  specialized Array._endMutation()(inited);
  v11 = v41;
  if ((v41 & 0xC000000000000001) != 0 || *(_QWORD *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFF8)) >= 8uLL)
  {
    swift_retain(v5);
    swift_retain(v6);
    swift_retain(v7);
    swift_retain(v8);
    swift_retain(v9);
    swift_retain(v10);
    swift_retain(v39);
    swift_retain(v40);
    for (i = 0; i != 8; ++i)
    {
      if ((v41 & 0xC000000000000001) != 0)
      {
        v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v41);
      }
      else
      {
        v13 = *(_QWORD *)(v41 + 8 * i + 32);
        v14 = swift_retain(v13);
      }
      if (*(_BYTE *)(v13 + 24) == 1)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v15 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
        v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized ContiguousArray._endMutation()(v16);
      }
      else
      {
        swift_release(v13);
      }
    }
    swift_bridgeObjectRelease(v41);
    v11 = (unint64_t)_swiftEmptyArrayStorage;
    MaxY = CGRectGetMaxY(*(CGRect *)(*(_QWORD *)(v0 + 48) + 32));
    MinY = CGRectGetMinY(*(CGRect *)(v0 + 16));
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0
      && ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
      v17 = _swiftEmptyArrayStorage[2];
      swift_retain(_swiftEmptyArrayStorage);
      if (!v17)
        goto LABEL_27;
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  swift_retain(v11);
  v17 = _CocoaArrayWrapper.endIndex.getter(v29);
  if (!v17)
    goto LABEL_27;
LABEL_14:
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_52;
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    for (j = 0; j != v17; ++j)
    {
      v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v11);
      v21 = v19;
      if (*(_BYTE *)(v19 + 24) == 1)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v22 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
        v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v21);
        specialized ContiguousArray._endMutation()(v23);
      }
      else
      {
        swift_unknownObjectRelease(v19);
      }
    }
  }
  else
  {
    for (k = 0; k != v17; ++k)
    {
      v25 = *(_QWORD *)(v11 + 8 * k + 32);
      if (*(_BYTE *)(v25 + 24) == 1)
      {
        v26 = swift_retain(*(_QWORD *)(v11 + 8 * k + 32));
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v26);
        v27 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v27);
        v28 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
        specialized ContiguousArray._endMutation()(v28);
      }
    }
  }
LABEL_27:
  swift_release(v11);
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
    || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
    swift_retain(_swiftEmptyArrayStorage);
    v30 = _CocoaArrayWrapper.endIndex.getter(v34);
    if (v30)
    {
LABEL_30:
      if (v30 >= 1)
      {
        for (m = 0; m != v30; ++m)
        {
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
          {
            v32 = (CGRect *)specialized _ArrayBuffer._getElementSlowPath(_:)(m, _swiftEmptyArrayStorage);
          }
          else
          {
            v32 = (CGRect *)_swiftEmptyArrayStorage[m + 4];
            swift_retain(v32);
          }
          v33 = CGRectGetMaxY(v32[1]);
          swift_release(v32);
          if (MinY <= v33)
            MinY = v33;
        }
        goto LABEL_39;
      }
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
  }
  else
  {
    v30 = _swiftEmptyArrayStorage[2];
    swift_retain(_swiftEmptyArrayStorage);
    if (v30)
      goto LABEL_30;
  }
LABEL_39:
  swift_release_n(_swiftEmptyArrayStorage, 2);
  if ((MaxY - MinY) * 0.5 <= 0.0 || v17 == 0)
  {
LABEL_50:
    swift_release(v11);
    return;
  }
  if (v17 >= 1)
  {
    swift_retain(v11);
    v36 = 0;
    do
    {
      if ((v11 & 0xC000000000000001) != 0)
        v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v11);
      else
        swift_retain(*(_QWORD *)(v11 + 8 * v36 + 32));
      ++v36;
      v38 = *(double *)(v37 + 56) + 0.0;
      *(double *)(v37 + 32) = *(double *)(v37 + 32) + 0.0;
      *(float64x2_t *)(v37 + 40) = vaddq_f64((float64x2_t)COERCE_UNSIGNED_INT64((MaxY - MinY) * 0.5), *(float64x2_t *)(v37 + 40));
      *(double *)(v37 + 56) = v38;
      *(_BYTE *)(v37 + 24) = 1;
      swift_release(v37);
    }
    while (v17 != v36);
    swift_release(v11);
    goto LABEL_50;
  }
LABEL_53:
  __break(1u);
}

_QWORD *sub_2C9504()
{
  _QWORD *v0;

  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  swift_release(v0[12]);
  swift_release(v0[13]);
  swift_release(v0[14]);
  swift_release(v0[15]);
  swift_release(v0[16]);
  return v0;
}

uint64_t sub_2C9570()
{
  _QWORD *v0;

  v0 = sub_2C9504();
  return swift_deallocClassInstance(v0, 136, 7);
}

void sub_2C9598()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t i;
  char *v12;
  int v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  unsigned int v28;
  int v29;
  id v30;
  void *v31;
  int v32;
  void *v33;
  __int128 *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  double v43;
  void *v44;
  char v45;
  id v46;
  double Width;
  id v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  Swift::Int v55;
  uint64_t v56;
  double v57;
  double v58;
  uint64_t v59;
  int v60;
  double v61;
  uint64_t v62;
  double v63;
  double v64;
  uint64_t v65;
  CGFloat v66;
  unsigned __int8 v67;
  double v68;
  double v69;
  CGFloat v70;
  double v71;
  CGFloat MinX;
  double MinY;
  double Height;
  CGFloat v75;
  double v76;
  double v77;
  CGFloat v78;
  double MaxX;
  double v80;
  double v81;
  double v82;
  double v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  id v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  double v98;
  uint64_t v99;
  double v100;
  double v101;
  double v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  double v108;
  uint64_t v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t j;
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t k;
  CGRect *v126;
  double MaxY;
  uint64_t v128;
  uint64_t v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  CGFloat v136;
  CGFloat v137;
  CGFloat v138;
  uint64_t v139;
  double v140;
  uint64_t v141;
  char v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  void *v147;
  double v148;
  double v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  double (*v153)(uint64_t, uint64_t, double);
  double v154;
  CGFloat v155;
  double v156;
  double v157;
  uint64_t v158;
  double v159;
  double v160;
  double v161;
  double v162;
  double v163;
  double v164;
  CGFloat v165;
  CGFloat v166;
  CGFloat v167;
  uint64_t v168;
  int v169;
  char v170;
  char v171;
  uint64_t v172;
  char v173;
  double v174;
  uint64_t v175;
  CGFloat v176;
  CGFloat v177;
  CGFloat v178;
  CGFloat v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  double v184;
  double v185;
  void *v186;
  id v187;
  unint64_t v188;
  void *v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  id v194;
  int v195;
  double v196;
  double v197;
  double v198;
  CGFloat v199;
  uint64_t v200;
  double v201;
  double v202;
  double v203;
  double v204;
  double v205;
  double v206;
  double v207;
  double v208;
  CGFloat v209;
  CGFloat v210;
  CGFloat v211;
  void *v212;
  double v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t (*v217)(uint64_t, uint64_t);
  unint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  double v222;
  uint64_t v223;
  uint64_t v224;
  BOOL v225;
  uint64_t v226;
  void *v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t m;
  uint64_t v233;
  uint64_t v234;
  __n128 v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  double v246;
  uint64_t v247;
  _QWORD *v248;
  uint64_t v249;
  id v250;
  uint64_t v251;
  double v252;
  double v253;
  id v254;
  id v255;
  void *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  double v261;
  double v262;
  double v263;
  double v264;
  __n128 v265;
  uint64_t v266;
  uint64_t v267;
  double v268;
  uint64_t v269;
  id v270;
  uint64_t v271;
  double v272;
  double v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t jj;
  uint64_t v278;
  __n128 v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  double v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t nn;
  uint64_t v288;
  __n128 v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t kk;
  uint64_t v294;
  __n128 v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t mm;
  CGRect *v302;
  double v303;
  double v304;
  uint64_t v305;
  double v306;
  double v307;
  double v308;
  double v309;
  double v310;
  double v311;
  CGFloat v312;
  CGFloat v313;
  CGFloat v314;
  uint64_t i1;
  uint64_t v316;
  __n128 v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t i2;
  CGRect *v325;
  double v326;
  double v327;
  uint64_t v328;
  double v329;
  double v330;
  uint64_t v331;
  double v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  double v336;
  uint64_t v337;
  uint64_t i3;
  uint64_t v339;
  __n128 v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t i4;
  uint64_t v345;
  __n128 v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t n;
  uint64_t v350;
  __n128 v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t ii;
  CGRect *v359;
  double *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t i5;
  CGRect *v365;
  double v366;
  void *v367;
  double v368;
  double v369;
  double v370;
  CGFloat *v371;
  double v372;
  double v373;
  double v374;
  double v375;
  double v376;
  double v377;
  double v378;
  double v379;
  double v380;
  uint64_t v381;
  double v382;
  CGFloat v383;
  double v384;
  double v385;
  double v386;
  double v387;
  double v388;
  double v389;
  CGFloat v390;
  CGFloat v391;
  CGFloat v392;
  CGFloat v393;
  CGFloat v394;
  id v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  double v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  char *v407;
  char *v408;
  double v409;
  double v410;
  double v411;
  double v412;
  CGFloat v413;
  _QWORD *v414;
  uint64_t v415;
  double v416;
  id v417;
  uint64_t v418;
  double v419;
  double v420;
  unint64_t v421;
  double v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t i6;
  uint64_t v427;
  __n128 v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t i7;
  uint64_t v433;
  __n128 v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t i8;
  CGRect *v442;
  double v443;
  char v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  double v449;
  char *v450;
  char v451;
  void *v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  void *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  unsigned __int16 v463;
  id v464;
  uint64_t v465;
  double v466;
  double v467;
  double v468;
  char *v469;
  unsigned int v470;
  double v471;
  id v472;
  uint64_t v473;
  char v474;
  double v475;
  double v476;
  double v477;
  char v478;
  uint64_t v479;
  uint64_t v480;
  double v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  char *v489;
  double v490;
  CGFloat left;
  CGFloat right;
  double top;
  double v494;
  double v495;
  char *v496;
  uint64_t v497;
  double v498;
  double v499;
  double v500;
  double v501;
  uint64_t v502;
  uint64_t v503;
  double v504;
  uint64_t v505;
  id v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  CGFloat v510;
  double v511;
  _BYTE *v512;
  uint64_t v513;
  int v514;
  CGFloat v515;
  uint64_t v516;
  _QWORD *v517;
  double v518;
  double v519;
  double v520;
  char *v521;
  double v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  uint64_t v526;
  _BYTE v527[24];
  __int128 v528;
  __int128 v529;
  uint64_t v530;
  uint64_t v531;
  __int128 v532;
  __int128 v533;
  uint64_t v534;
  __int16 v535;
  uint64_t v536;
  objc_super v537;
  _QWORD v538[5];
  _BYTE v539[56];
  CGRect v540;
  CGRect v541;
  CGRect v542;
  CGRect v543;
  CGRect v544;
  CGRect v545;
  CGRect v546;
  CGRect v547;
  CGRect v548;
  CGRect v549;
  CGRect v550;
  CGRect v551;
  CGRect v552;
  CGRect v553;
  CGRect v554;
  CGRect v555;
  CGRect v556;
  CGRect v557;
  CGRect v558;
  CGRect v559;
  CGRect v560;
  CGRect v561;
  CGRect v562;
  CGRect v563;
  CGRect v564;
  CGRect v565;
  CGRect v566;
  CGRect v567;
  CGRect v568;
  CGRect v569;
  CGRect v570;
  CGRect v571;
  CGRect v572;
  CGRect v573;
  CGRect v574;
  CGRect v575;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v516 = type metadata accessor for FloatingPointRoundingRule(0);
  v508 = *(_QWORD *)(v516 - 8);
  __chkstk_darwin(v516);
  v507 = (uint64_t)&v498 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v520 = COERCE_DOUBLE(type metadata accessor for PlayState(0));
  __chkstk_darwin(*(_QWORD *)&v520);
  v513 = (uint64_t)&v498 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v498 - v6;
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  i = (uint64_t)&v498 - v10;
  v537.receiver = v1;
  v537.super_class = ObjectType;
  objc_msgSendSuper2(&v537, "layoutSubviews", v9);
  v12 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style];
  v13 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style + 2];
  v14 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v15 = static UITraitCollection.interfaceIdiomIsMac.getter(v14);
  v16 = 3;
  if (v13 != 2)
    v16 = 4;
  if ((v15 & 1) != 0)
    v16 = 4;
  v502 = v16;
  v17 = type metadata accessor for EpisodeView.Layout();
  swift_allocObject(v17, 136, 7);
  v18 = v1;
  v517 = sub_2C83E8(v18);
  v19 = objc_msgSend(v18, "layoutMarginsGuide");
  objc_msgSend(v19, "layoutFrame");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v28 = *v12;
  v29 = v12[1];
  v30 = objc_msgSend(v18, "traitCollection");
  v31 = v30;
  if (v29)
    v32 = 256;
  else
    v32 = 0;
  v514 = sub_2C4D34(v30, v32 | (v13 << 16) | v28);

  v521 = (char *)objc_msgSend(v18, "effectiveUserInterfaceLayoutDirection");
  v33 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView];
  if (v33)
  {
    if (v28)
    {
      if (qword_3CFE10 != -1)
        swift_once(&qword_3CFE10, sub_2C4E00);
      v34 = &xmmword_3E11D0;
    }
    else
    {
      if (qword_3CFE08 != -1)
        swift_once(&qword_3CFE08, sub_2C4DE0);
      v34 = &xmmword_3E11B0;
    }
    v36 = *((double *)v34 + 2);
    v35 = *((double *)v34 + 3);
    v38 = *(double *)v34;
    v37 = *((double *)v34 + 1);
    objc_msgSend(v18, "bounds");
    objc_msgSend(v33, "setFrame:", sub_291438(v38, v37, v36, v35, v39, v40, v41, v42, v21, v23, v25, v27));
  }
  v43 = sub_2CBFA0();
  v44 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_labelContainerMask];
  if (v44)
  {
    v45 = v521 == (_BYTE *)&dword_0 + 1;
    v46 = v44;
    objc_msgSend(v46, "setFrame:", v21, v23, v25, v27);
    objc_msgSend(v46, "frame");
    Width = CGRectGetWidth(v540);
    sub_2ACADC(v45, (uint64_t)v527, v43, Width);
    v522 = *(double *)v527;
    v523 = *(_OWORD *)&v527[8];
    v524 = v528;
    v525 = v529;
    v526 = v530;
    sub_ECA74(&v522);

  }
  v506 = *(id *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_ordinalLabel];
  v48 = objc_msgSend(v506, "text");
  if (v48)
  {
    v49 = v48;
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v52 = v51;

    if (v13 == 2)
      goto LABEL_21;
  }
  else
  {
    v50 = 0;
    v52 = 0xE000000000000000;
    if (v13 == 2)
    {
LABEL_21:
      v53 = HIBYTE(v52) & 0xF;
      if ((v52 & 0x2000000000000000) == 0)
        v53 = v50 & 0xFFFFFFFFFFFFLL;
      v54 = v514;
      if (v53)
      {
        v55 = String.count.getter(v50, v52);
        swift_bridgeObjectRelease(v52);
        v57 = sub_2CF028(v55, v18);
        if (qword_3CFE18 != -1)
          v56 = swift_once(&qword_3CFE18, sub_2C4E18);
        v58 = *(double *)&qword_3E11F0;
        LODWORD(v505) = 1;
      }
      else
      {
        swift_bridgeObjectRelease(v52);
        LODWORD(v505) = 0;
        v57 = 0.0;
        v58 = 0.0;
      }
      v59 = (uint64_t)v517;
      v60 = v54;
      if (!v54)
        goto LABEL_33;
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRelease(v52);
  LODWORD(v505) = 0;
  v57 = 0.0;
  v58 = 0.0;
  v59 = (uint64_t)v517;
  v60 = v514;
  if (!(_BYTE)v514)
  {
LABEL_33:
    *(double *)&v62 = 114.0;
    goto LABEL_34;
  }
LABEL_29:
  v61 = 0.0;
  if (v60 != 1)
    goto LABEL_35;
  *(double *)&v62 = 72.0;
LABEL_34:
  v61 = *(double *)&v62;
LABEL_35:
  v510 = v21;
  v63 = v58 + v57 + v61;
  v515 = v25;
  v64 = v25 - v63;
  v65 = static UITraitCollection.interfaceIdiomIsMac.getter(v56);
  v500 = v58;
  v501 = v57;
  v498 = v64;
  v518 = v43;
  v519 = v63;
  v66 = v27;
  if ((v65 & v29 & 1) != 0)
  {
    v67 = 0;
  }
  else
  {
    v67 = static UITraitCollection.interfaceIdiomIsMac.getter(v65);
    v68 = 0.0;
    if ((v67 & 1) != 0)
      v68 = v43;
    v64 = v64 - v68;
  }
  v69 = v520;
  v70 = v510;
  v541.origin.x = v510;
  v541.origin.y = v23;
  v71 = v515;
  v541.size.width = v515;
  v541.size.height = v66;
  MinX = CGRectGetMinX(v541);
  v542.origin.x = v70;
  v542.origin.y = v23;
  v542.size.width = v71;
  v542.size.height = v66;
  MinY = CGRectGetMinY(v542);
  v543.origin.x = v70;
  v543.origin.y = v23;
  v543.size.width = v71;
  v543.size.height = v66;
  Height = CGRectGetHeight(v543);
  v504 = v66;
  v499 = v23;
  v75 = v70;
  v76 = v23;
  v77 = v71;
  v78 = v66;
  if (v521 == (_BYTE *)&dword_0 + 1)
  {
    MaxX = CGRectGetMaxX(*(CGRect *)&v75);
    v544.origin.x = MinX;
    v544.origin.y = MinY;
    v544.size.width = v64;
    v544.size.height = Height;
    v80 = MaxX - CGRectGetWidth(v544) - v519;
  }
  else
  {
    v80 = v519 + CGRectGetMinX(*(CGRect *)&v75);
  }
  v520 = v80;
  v545.origin.x = MinX;
  v545.origin.y = MinY;
  v545.size.width = v64;
  v545.size.height = Height;
  v81 = CGRectGetMinY(v545);
  v546.origin.x = MinX;
  v546.origin.y = MinY;
  v546.size.width = v64;
  v546.size.height = Height;
  v82 = CGRectGetWidth(v546);
  v547.origin.x = MinX;
  v547.origin.y = MinY;
  v547.size.width = v64;
  v547.size.height = Height;
  v519 = CGRectGetHeight(v547);
  v83 = v64 + -10.0;
  v84 = *(_BYTE **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackView];
  if ((v67 & (v518 > 0.0)) == 0)
    v83 = v64;
  v518 = v83;
  v509 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style;
  v85 = *(_QWORD *)&v84[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style];
  v512 = v84;
  if (v85)
  {
    v86 = (uint64_t)&v84[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState];
    swift_beginAccess(&v84[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState], &v536, 0, 0);
    sub_19C4C(v86, i, type metadata accessor for PlayState);
    swift_storeEnumTagMultiPayload(v7, *(_QWORD *)&v69, 3);
    _s23ShelfKitCollectionViews9PlayStateO2eeoiySbAC_ACtFZ_0(i, (uint64_t)v7);
    v88 = v87;
    sub_FA4C((uint64_t)v7, type metadata accessor for PlayState);
    sub_FA4C(i, type metadata accessor for PlayState);
    v89 = v82;
    if ((v88 & 1) == 0)
    {
LABEL_51:
      v85 = 1;
      goto LABEL_55;
    }
    v90 = v86;
    v91 = v513;
    sub_19C4C(v90, v513, type metadata accessor for PlayState);
    if (swift_getEnumCaseMultiPayload(v91, *(_QWORD *)&v69) == 3)
    {
      if ((v512[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_itemDuration + 8] & 1) == 0
        && *(double *)&v512[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_itemDuration] > 2.22044605e-16
        && (v512[v509] & 4) != 0)
      {
        goto LABEL_51;
      }
    }
    else
    {
      sub_FA4C(v91, type metadata accessor for PlayState);
    }
    v85 = 0;
  }
  else
  {
    v89 = v82;
  }
LABEL_55:
  v513 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonConsumesSpace;
  if (v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonConsumesSpace])
    v85 = 1;
  v503 = v85;
  v92 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_captionLabel];
  v93 = objc_msgSend(v92, "text", *(_QWORD *)&v498);
  v511 = v81;
  if (v93)
  {
    v94 = v93;
    v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
    v97 = v96;

    *(_QWORD *)&v98 = swift_bridgeObjectRelease(v97).n128_u64[0];
    v99 = HIBYTE(v97) & 0xF;
    if ((v97 & 0x2000000000000000) == 0)
      v99 = v95 & 0xFFFFFFFFFFFFLL;
    if (v99 && (objc_msgSend(v92, "isHidden", v98) & 1) == 0)
    {
      objc_msgSend(v92, "sizeThatFits:", v498, 1.79769313e308);
      v101 = v100;
      v103 = v102;
      v105 = v507;
      v104 = v508;
      v106 = v516;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v508 + 104))(v507, enum case for FloatingPointRoundingRule.up(_:), v516);
      v107 = sub_1E654C(v105, v18, v101, v103);
      v71 = v108;
      (*(void (**)(uint64_t, uint64_t, double))(v104 + 8))(v105, v106, v107);
      v109 = (uint64_t)sub_2C87D4();
      v110 = CGRectGetMinY(*(CGRect *)(v59 + 16));
      *(_QWORD *)v527 = _swiftEmptyArrayStorage;
      if ((unint64_t)v109 >> 62)
      {
        if (v109 < 0)
          v122 = v109;
        else
          v122 = v109 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v109);
        v111 = _CocoaArrayWrapper.endIndex.getter(v122);
        if (!v111)
          goto LABEL_79;
      }
      else
      {
        v111 = *(_QWORD *)((char *)&dword_10 + (v109 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(v109);
        if (!v111)
          goto LABEL_79;
      }
      if (v111 < 1)
      {
        __break(1u);
        goto LABEL_340;
      }
      if ((v109 & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v111; ++i)
        {
          v112 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v109);
          v114 = v112;
          if (*(_BYTE *)(v112 + 24) == 1)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v113);
            v115 = *(_QWORD *)(*(_QWORD *)v527 + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v115);
            v116 = v115;
            v59 = (uint64_t)v517;
            v117 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v116, v114);
            specialized ContiguousArray._endMutation()(v117);
          }
          else
          {
            swift_unknownObjectRelease(v112);
          }
        }
      }
      else
      {
        for (j = 0; j != v111; ++j)
        {
          i = *(_QWORD *)(v109 + 8 * j + 32);
          if (*(_BYTE *)(i + 24) == 1)
          {
            v119 = swift_retain(*(_QWORD *)(v109 + 8 * j + 32));
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v119);
            v120 = *(_QWORD *)(*(_QWORD *)v527 + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v120);
            v121 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v120, i);
            specialized ContiguousArray._endMutation()(v121);
          }
        }
      }
LABEL_79:
      swift_bridgeObjectRelease(v109);
      v123 = *(_QWORD *)v527;
      if ((*(_QWORD *)v527 & 0x8000000000000000) != 0 || (*(_QWORD *)v527 & 0x4000000000000000) != 0)
      {
        swift_retain(*(_QWORD *)v527);
        v124 = _CocoaArrayWrapper.endIndex.getter(v128);
        if (v124)
        {
LABEL_82:
          if (v124 >= 1)
          {
            for (k = 0; k != v124; ++k)
            {
              if ((v123 & 0xC000000000000001) != 0)
              {
                v126 = (CGRect *)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v123);
              }
              else
              {
                v126 = *(CGRect **)(v123 + 8 * k + 32);
                swift_retain(v126);
              }
              MaxY = CGRectGetMaxY(v126[1]);
              swift_release(v126);
              if (v110 <= MaxY)
                v110 = MaxY;
            }
            goto LABEL_91;
          }
LABEL_340:
          __break(1u);
          goto LABEL_341;
        }
      }
      else
      {
        v124 = *(_QWORD *)(*(_QWORD *)v527 + 16);
        swift_retain(*(_QWORD *)v527);
        if (v124)
          goto LABEL_82;
      }
LABEL_91:
      swift_release_n(v123, 2);
      swift_bridgeObjectRelease(v109);
      v129 = *(_QWORD *)(v59 + 56);
      swift_retain(v129);
      v131 = v519;
      v130 = v520;
      v132 = v81;
      v133 = v89;
      if (v521 == (_BYTE *)&dword_0 + 1)
      {
        v134 = CGRectGetMaxX(*(CGRect *)&v130);
        Height = 0.0;
        v548.origin.x = 0.0;
        v548.origin.y = v110;
        MinY = v498;
        v548.size.width = v498;
        v548.size.height = v71;
        v135 = v134 - CGRectGetWidth(v548);
      }
      else
      {
        Height = 0.0;
        v135 = CGRectGetMinX(*(CGRect *)&v130) + 0.0;
        MinY = v498;
      }
      v549.origin.x = 0.0;
      v549.origin.y = v110;
      v549.size.width = MinY;
      v549.size.height = v71;
      v136 = CGRectGetMinY(v549);
      v550.origin.x = 0.0;
      v550.origin.y = v110;
      v550.size.width = MinY;
      v550.size.height = v71;
      v137 = CGRectGetWidth(v550);
      v551.origin.x = 0.0;
      v551.origin.y = v110;
      v551.size.width = MinY;
      v551.size.height = v71;
      v138 = CGRectGetHeight(v551);
      *(double *)(v129 + 32) = v135;
      *(CGFloat *)(v129 + 40) = v136;
      *(CGFloat *)(v129 + 48) = v137;
      *(CGFloat *)(v129 + 56) = v138;
      *(_BYTE *)(v129 + 24) = 1;
      swift_release(v129);
      v81 = v511;
      v89 = v82;
    }
  }
  v140 = sub_2C4F10();
  if (v139)
  {
    v141 = v139;
    sub_2C4F10();
    v143 = v142;
    swift_release(v144);
    v145 = v141;
    if ((v143 & 1) != 0)
    {
      v145 = *(_QWORD *)(v59 + 56);
      v146 = objc_msgSend(v92, "font", swift_retain(v145).n128_f64[0]);
      if (!v146)
      {
LABEL_351:
        __break(1u);
        goto LABEL_352;
      }
      v147 = v146;
      objc_msgSend(v146, "lineHeight");
      v149 = v148;

      v150 = *(_QWORD *)(v141 + 32);
      if (v150)
      {
        v151 = *(_QWORD *)(v141 + 40);
        v152 = swift_getObjectType();
        v153 = *(double (**)(uint64_t, uint64_t, double))(v151 + 16);
        swift_unknownObjectRetain(v150);
        MinY = v153(v152, v151, floor(v149));
        v71 = v154;
        swift_unknownObjectRelease(v150);
      }
      else
      {
        MinY = 0.0;
        v71 = 0.0;
      }
      v155 = CGRectGetMaxY(*(CGRect *)(v145 + 32)) - v71;
      objc_msgSend(v92, "_baselineOffsetFromBottom");
      v157 = v155 - v156;
      v158 = *(_QWORD *)(v59 + 104);
      swift_retain(v158);
      v160 = v519;
      v159 = v520;
      v161 = v81;
      v162 = v89;
      if (v521 == (_BYTE *)&dword_0 + 1)
      {
        v163 = CGRectGetMaxX(*(CGRect *)&v159);
        Height = 0.0;
        v552.origin.x = 0.0;
        v552.origin.y = v157;
        v552.size.width = MinY;
        v552.size.height = v71;
        v164 = v163 - CGRectGetWidth(v552) + -2.0;
      }
      else
      {
        v164 = CGRectGetMinX(*(CGRect *)&v159) + 2.0;
        Height = 0.0;
      }
      v553.origin.x = 0.0;
      v553.origin.y = v157;
      v553.size.width = MinY;
      v553.size.height = v71;
      v165 = CGRectGetMinY(v553);
      v554.origin.x = 0.0;
      v554.origin.y = v157;
      v554.size.width = MinY;
      v554.size.height = v71;
      v166 = CGRectGetWidth(v554);
      v555.origin.x = 0.0;
      v555.origin.y = v157;
      v555.size.width = MinY;
      v555.size.height = v71;
      v167 = CGRectGetHeight(v555);
      *(double *)(v158 + 32) = v164;
      *(CGFloat *)(v158 + 40) = v165;
      *(CGFloat *)(v158 + 48) = v166;
      *(CGFloat *)(v158 + 56) = v167;
      *(_BYTE *)(v158 + 24) = 1;
      swift_release(v158);
      sub_2C4F10();
      if (v168)
      {
        v169 = *(unsigned __int8 *)(v168 + 24);
        swift_release(v168);
        v81 = v511;
        if (v169)
        {
          sub_2C4F10();
          v171 = v170;
          swift_release(v172);
          v89 = v82;
          if ((v171 & 2) != 0)
          {
            v173 = v521 == (_BYTE *)&dword_0 + 1;
            v174 = sub_2C4F10();
            swift_release(v175);
            v176 = *(double *)(v145 + 32);
            v177 = *(double *)(v145 + 40);
            v178 = *(double *)(v145 + 48);
            v179 = *(double *)(v145 + 56);
            v180 = *(_QWORD *)(v59 + 104);
            swift_retain(v180);
            Height = sub_2CC734(v181, v173, v520, v81, v82, v519, v174, v176, v177, v178, v179);
            v183 = v182;
            MinY = v184;
            v71 = v185;
            swift_release(v180);
            swift_release(v141);
            *(double *)(v145 + 32) = Height;
            *(_QWORD *)(v145 + 40) = v183;
            *(double *)(v145 + 48) = MinY;
            *(double *)(v145 + 56) = v71;
            *(_BYTE *)(v145 + 24) = 1;
          }
          else
          {
            swift_release(v141);
          }
        }
        else
        {
          swift_release(v141);
          v89 = v82;
        }
      }
      else
      {
        swift_release(v141);
        v81 = v511;
        v89 = v82;
      }
    }
    *(_QWORD *)&v140 = swift_release(v145).n128_u64[0];
  }
  v186 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel];
  v187 = objc_msgSend(v186, "text", v140);
  if (v187)
  {
    v189 = v187;
    v190 = static String._unconditionallyBridgeFromObjectiveC(_:)(v187);
    v192 = v191;

    v193 = HIBYTE(v192) & 0xF;
    if ((v192 & 0x2000000000000000) == 0)
      v193 = v190 & 0xFFFFFFFFFFFFLL;
    if (!v193 || (objc_msgSend(v186, "isHidden") & 1) != 0)
    {
      v188 = swift_bridgeObjectRelease(v192).n128_u64[0];
      goto LABEL_118;
    }
    v254 = objc_msgSend(v186, "numberOfLines");
    v255 = objc_msgSend(v186, "font");
    if (v255)
    {
      v256 = v255;
      v257 = v503;
      if ((uint64_t)v254 >= v502 - v503)
        v258 = v502 - v503;
      else
        v258 = (uint64_t)v254;
      sub_2CE364(v190, v192, v258, v255, v518, 1.79769313e308);
      v260 = v259;
      v262 = v261;
      v264 = v263;

      v265 = swift_bridgeObjectRelease(v192);
      v267 = v507;
      v266 = v508;
      v245 = v516;
      (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v508 + 104))(v507, enum case for FloatingPointRoundingRule.up(_:), v516, v265);
      MinY = sub_2C348(v267, v262, v264);
      v71 = v268;
      (*(void (**)(uint64_t, uint64_t))(v266 + 8))(v267, v245);
      v225 = __OFADD__(v257, v260);
      i = v257 + v260;
      v503 = i;
      if (v225)
      {
        __break(1u);
        goto LABEL_334;
      }
      v245 = (uint64_t)sub_2C87D4();
      if ((unint64_t)v245 >> 62)
        goto LABEL_335;
      v269 = *(_QWORD *)((char *)&dword_10 + (v245 & 0xFFFFFFFFFFFFF8));
      goto LABEL_165;
    }
LABEL_352:
    __break(1u);
    return;
  }
LABEL_118:
  v194 = v506;
  v195 = v505;
  if (!(_DWORD)v505)
    goto LABEL_123;
LABEL_119:
  v196 = v519;
  objc_msgSend(v194, "sizeThatFits:", v89, v519);
  MinY = v197;
  v71 = v198;
  v199 = CGRectGetMinY(*(CGRect *)(*(_QWORD *)(v59 + 64) + 32));
  v200 = *(_QWORD *)(v59 + 72);
  v201 = v89;
  v202 = -v501 - v500;
  swift_retain(v200);
  v203 = v520;
  v204 = v81;
  v205 = v201;
  v206 = v196;
  if (v521 == (_BYTE *)&dword_0 + 1)
  {
    v207 = CGRectGetMaxX(*(CGRect *)&v203);
    Height = 0.0;
    v556.origin.x = 0.0;
    v556.origin.y = v199;
    v556.size.width = MinY;
    v556.size.height = v71;
    v208 = v207 - CGRectGetWidth(v556) - v202;
  }
  else
  {
    v208 = v202 + CGRectGetMinX(*(CGRect *)&v203);
    Height = 0.0;
  }
  v557.origin.x = 0.0;
  v557.origin.y = v199;
  v557.size.width = MinY;
  v557.size.height = v71;
  v209 = CGRectGetMinY(v557);
  v558.origin.x = 0.0;
  v558.origin.y = v199;
  v558.size.width = MinY;
  v558.size.height = v71;
  v210 = CGRectGetWidth(v558);
  v559.origin.x = 0.0;
  v559.origin.y = v199;
  v559.size.width = MinY;
  v559.size.height = v71;
  v211 = CGRectGetHeight(v559);
  *(double *)(v200 + 32) = v208;
  *(CGFloat *)(v200 + 40) = v209;
  *(CGFloat *)(v200 + 48) = v210;
  *(CGFloat *)(v200 + 56) = v211;
  *(_BYTE *)(v200 + 24) = 1;
  v188 = swift_release(v200).n128_u64[0];
  v81 = v511;
  v89 = v82;
  while (1)
  {
LABEL_123:
    objc_msgSend(v194, "setHidden:", v195 ^ 1u, *(double *)&v188);
    v212 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel];
    v213 = v515;
    if (v212)
    {
      v214 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel + 8];
      v215 = swift_getObjectType();
      v216 = *(_QWORD *)(v214 + 8);
      v217 = *(uint64_t (**)(uint64_t, uint64_t))(v216 + 32);
      v218 = v212;
      v219 = v217(v215, v216);
      if (!v220)
        goto LABEL_136;
      i = v219;
      v221 = v220;
      *(_QWORD *)&v222 = swift_bridgeObjectRelease(v220).n128_u64[0];
      v223 = HIBYTE(v221) & 0xF;
      if ((v221 & 0x2000000000000000) == 0)
        v223 = i & 0xFFFFFFFFFFFFLL;
      if (!v223 || (objc_msgSend((id)v218, "isHidden", v222) & 1) != 0)
        goto LABEL_136;
      if (__OFSUB__(v502, v503))
      {
LABEL_341:
        __break(1u);
LABEL_342:
        swift_once(&qword_3CFE40, sub_2C5474);
        goto LABEL_167;
      }
      if (v502 - v503 >= 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v216 + 64))(1, v215, v216);
        objc_msgSend((id)v218, "sizeThatFits:", v518, 1.79769313e308);
        v225 = __OFADD__(v503++, 1);
        if (v225)
          goto LABEL_345;
        v226 = v224;
        v227 = *(void **)(v59 + 88);
        swift_retain(v227);
        v560.size.height = v519;
        v560.origin.x = v520;
        v560.origin.y = v81;
        v560.size.width = v89;
        MinY = CGRectGetMinX(v560);
        v228 = (unint64_t)sub_2C87D4();
        v71 = CGRectGetMinY(*(CGRect *)(v59 + 16));
        *(_QWORD *)v527 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v228);
        v230 = sub_2C34A8(v229);
        v506 = v227;
        if (v230)
        {
          v231 = v230;
          if (v230 < 1)
            goto LABEL_349;
          if ((v228 & 0xC000000000000001) != 0)
          {
            for (m = 0; m != v231; ++m)
            {
              v234 = specialized _ArrayBuffer._getElementSlowPath(_:)(m, v228);
              v236 = v234;
              if (*(_BYTE *)(v234 + 24) == 1)
              {
                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v235);
                v237 = *(_QWORD *)(*(_QWORD *)v527 + 16);
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v237);
                v238 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v237, v236);
                specialized ContiguousArray._endMutation()(v238);
              }
              else
              {
                swift_unknownObjectRelease(v234);
              }
            }
          }
          else
          {
            for (n = 0; n != v231; ++n)
            {
              v350 = *(_QWORD *)(v228 + 8 * n + 32);
              if (*(_BYTE *)(v350 + 24) == 1)
              {
                v351 = swift_retain(*(_QWORD *)(v228 + 8 * n + 32));
                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v351);
                v352 = *(_QWORD *)(*(_QWORD *)v527 + 16);
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v352);
                v353 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v352, v350);
                specialized ContiguousArray._endMutation()(v353);
              }
            }
          }
        }
        swift_bridgeObjectRelease(v228);
        v354 = *(_QWORD *)v527;
        swift_bridgeObjectRetain(*(_QWORD *)v527);
        v356 = sub_2C34A8(v355);
        if (v356)
        {
          v357 = v356;
          if (v356 < 1)
            goto LABEL_350;
          for (ii = 0; ii != v357; ++ii)
          {
            if ((v354 & 0xC000000000000001) != 0)
            {
              v359 = (CGRect *)specialized _ArrayBuffer._getElementSlowPath(_:)(ii, v354);
            }
            else
            {
              v359 = *(CGRect **)(v354 + 8 * ii + 32);
              swift_retain(v359);
            }
            Height = CGRectGetMaxY(v359[1]);
            swift_release(v359);
            if (v71 <= Height)
              v71 = Height;
          }
        }
        swift_release_n(v354, 2);

        swift_bridgeObjectRelease(v228);
        v360 = (double *)v506;
        *((double *)v506 + 4) = MinY;
        v360[5] = v71;
        v360[6] = v518;
        *((_QWORD *)v360 + 7) = v226;
        *((_BYTE *)v360 + 24) = 1;
        swift_release(v360);
        v59 = (uint64_t)v517;
      }
      else
      {
LABEL_136:

      }
      v233 = *(_QWORD *)(v59 + 88);
      if ((*(_BYTE *)(v233 + 24) & 1) == 0)
      {
        objc_msgSend((id)v218, "setFrame:", 0.0, 0.0, 0.0, 0.0);
LABEL_145:
        v239 = 0;
        goto LABEL_146;
      }
    }
    else
    {
      v233 = *(_QWORD *)(v59 + 88);
      if (*(_BYTE *)(v233 + 24) != 1)
        goto LABEL_145;
    }
    *(_BYTE *)(v233 + 24) = 0;
    v239 = 1;
LABEL_146:
    v218 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel];
    v240 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel + 8];
    v241 = swift_getObjectType();
    i = *(_QWORD *)(v240 + 8);
    v242 = (*(uint64_t (**)(uint64_t, uint64_t))(i + 32))(v241, i);
    if (!v243)
      goto LABEL_220;
    v244 = v242;
    v245 = v243;
    *(_QWORD *)&v246 = swift_bridgeObjectRelease(v243).n128_u64[0];
    v247 = HIBYTE(v245) & 0xF;
    if ((v245 & 0x2000000000000000) == 0)
      v247 = v244 & 0xFFFFFFFFFFFFLL;
    if (!v247 || (objc_msgSend((id)v218, "isHidden", v246) & 1) != 0)
      goto LABEL_220;
    if (!__OFSUB__(v502, v503))
      break;
LABEL_334:
    __break(1u);
LABEL_335:
    if (v245 < 0)
      v497 = v245;
    else
      v497 = v245 & 0xFFFFFFFFFFFFFF8;
    v269 = _CocoaArrayWrapper.endIndex.getter(v497);
LABEL_165:
    swift_bridgeObjectRelease(v245);
    if (v269 < 1)
    {
      v273 = 0.0;
      goto LABEL_171;
    }
    if (qword_3CFE40 != -1)
      goto LABEL_342;
LABEL_167:
    *(_OWORD *)v527 = xmmword_3E1288;
    v527[16] = byte_3E1298;
    v528 = xmmword_3E12A0;
    v529 = xmmword_3E12B0;
    v530 = qword_3E12C0;
    v531 = *(_QWORD *)byte_3E12C8;
    v532 = xmmword_3E12D0;
    v533 = xmmword_3E12E0;
    v534 = qword_3E12F0;
    v535 = word_3E12F8;
    sub_1472C((id)xmmword_3E12A0, *((uint64_t *)&xmmword_3E12A0 + 1), xmmword_3E12B0, *((uint64_t *)&xmmword_3E12B0 + 1), qword_3E12C0, byte_3E12C8[0], (void *)xmmword_3E12D0, *((uint64_t *)&xmmword_3E12D0 + 1), xmmword_3E12E0, *((uint64_t *)&xmmword_3E12E0 + 1), qword_3E12F0, word_3E12F8);
    v270 = objc_msgSend(v18, "traitCollection");
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v271 = __swift_project_value_buffer(v516, (uint64_t)qword_3FCFB0);
    sub_1DD06C((uint64_t)v270, v271, 0);
    v273 = v272;

    sub_14788((id)v528, *((uint64_t *)&v528 + 1), v529, *((uint64_t *)&v529 + 1), v530, v531, (void *)v532, *((uint64_t *)&v532 + 1), v533, *((uint64_t *)&v533 + 1), v534, v535);
LABEL_171:
    v218 = (unint64_t)sub_2C87D4();
    v213 = CGRectGetMinY(*(CGRect *)(v59 + 16));
    *(_QWORD *)v527 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v218);
    v275 = sub_2C34A8(v274);
    if (v275)
    {
      v276 = v275;
      if (v275 < 1)
      {
        __break(1u);
LABEL_344:
        __break(1u);
LABEL_345:
        __break(1u);
LABEL_346:
        swift_once(&qword_3CFE48, sub_2C5530);
LABEL_155:
        *(_OWORD *)v527 = xmmword_3E1300;
        v527[16] = byte_3E1310;
        v528 = xmmword_3E1318;
        v529 = xmmword_3E1328;
        v530 = qword_3E1338;
        v531 = *(_QWORD *)byte_3E1340;
        v532 = xmmword_3E1348;
        v533 = xmmword_3E1358;
        v534 = qword_3E1368;
        v535 = word_3E1370;
        sub_1472C((id)xmmword_3E1318, *((uint64_t *)&xmmword_3E1318 + 1), xmmword_3E1328, *((uint64_t *)&xmmword_3E1328 + 1), qword_3E1338, byte_3E1340[0], (void *)xmmword_3E1348, *((uint64_t *)&xmmword_3E1348 + 1), xmmword_3E1358, *((uint64_t *)&xmmword_3E1358 + 1), qword_3E1368, word_3E1370);
        v250 = objc_msgSend(v18, "traitCollection");
        if (qword_3CFAB0 != -1)
          swift_once(&qword_3CFAB0, sub_1DD388);
        v251 = __swift_project_value_buffer(v516, (uint64_t)qword_3FCFB0);
        sub_1DD06C((uint64_t)v250, v251, 0);
        v253 = v252;

        sub_14788((id)v528, *((uint64_t *)&v528 + 1), v529, *((uint64_t *)&v529 + 1), v530, v531, (void *)v532, *((uint64_t *)&v532 + 1), v533, *((uint64_t *)&v533 + 1), v534, v535);
        goto LABEL_180;
      }
      if ((v218 & 0xC000000000000001) != 0)
      {
        for (jj = 0; jj != v276; ++jj)
        {
          v278 = specialized _ArrayBuffer._getElementSlowPath(_:)(jj, v218);
          i = v278;
          if (*(_BYTE *)(v278 + 24) == 1)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v279);
            v280 = *(_QWORD *)(*(_QWORD *)v527 + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v280);
            v281 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v280, i);
            specialized ContiguousArray._endMutation()(v281);
          }
          else
          {
            swift_unknownObjectRelease(v278);
          }
        }
      }
      else
      {
        for (kk = 0; kk != v276; ++kk)
        {
          v294 = *(_QWORD *)(v218 + 8 * kk + 32);
          if (*(_BYTE *)(v294 + 24) == 1)
          {
            v295 = swift_retain(*(_QWORD *)(v218 + 8 * kk + 32));
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v295);
            i = *(_QWORD *)(*(_QWORD *)v527 + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(i);
            v296 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(i, v294);
            specialized ContiguousArray._endMutation()(v296);
          }
        }
      }
    }
    swift_bridgeObjectRelease(v218);
    v297 = *(_QWORD *)v527;
    swift_bridgeObjectRetain(*(_QWORD *)v527);
    v299 = sub_2C34A8(v298);
    if (v299)
    {
      v300 = v299;
      if (v299 < 1)
        goto LABEL_344;
      for (mm = 0; mm != v300; ++mm)
      {
        if ((v297 & 0xC000000000000001) != 0)
        {
          v302 = (CGRect *)specialized _ArrayBuffer._getElementSlowPath(_:)(mm, v297);
        }
        else
        {
          v302 = *(CGRect **)(v297 + 8 * mm + 32);
          swift_retain(v302);
        }
        v303 = CGRectGetMaxY(v302[1]);
        swift_release(v302);
        if (v213 <= v303)
          v213 = v303;
      }
    }
    swift_release_n(v297, 2);
    swift_bridgeObjectRelease(v218);
    v304 = v273 + v213;
    v305 = *(_QWORD *)(v59 + 64);
    swift_retain(v305);
    v307 = v519;
    v306 = v520;
    v308 = v81;
    v309 = v89;
    if (v521 == (_BYTE *)&dword_0 + 1)
    {
      v310 = CGRectGetMaxX(*(CGRect *)&v306);
      Height = 0.0;
      v561.origin.x = 0.0;
      v561.origin.y = v304;
      v561.size.width = MinY;
      v561.size.height = v71;
      v311 = v310 - CGRectGetWidth(v561);
    }
    else
    {
      Height = 0.0;
      v311 = CGRectGetMinX(*(CGRect *)&v306) + 0.0;
    }
    v194 = v506;
    v195 = v505;
    v562.origin.x = 0.0;
    v562.origin.y = v304;
    v562.size.width = MinY;
    v562.size.height = v71;
    v312 = CGRectGetMinY(v562);
    v563.origin.x = 0.0;
    v563.origin.y = v304;
    v563.size.width = MinY;
    v563.size.height = v71;
    v313 = CGRectGetWidth(v563);
    v564.origin.x = 0.0;
    v564.origin.y = v304;
    v564.size.width = MinY;
    v564.size.height = v71;
    v314 = CGRectGetHeight(v564);
    *(double *)(v305 + 32) = v311;
    *(CGFloat *)(v305 + 40) = v312;
    *(CGFloat *)(v305 + 48) = v313;
    *(CGFloat *)(v305 + 56) = v314;
    *(_BYTE *)(v305 + 24) = 1;
    v188 = swift_release(v305).n128_u64[0];
    v81 = v511;
    v89 = v82;
    if (v195)
      goto LABEL_119;
  }
  if (v502 - v503 >= 1)
  {
    v503 = v502 - v503;
    v248 = sub_2C87D4();
    v249 = sub_2C34A8((uint64_t)v248);
    swift_bridgeObjectRelease(v248);
    LODWORD(v506) = v239;
    v505 = v241;
    if (v249 >= 1)
    {
      if (qword_3CFE48 == -1)
        goto LABEL_155;
      goto LABEL_346;
    }
    v253 = 0.0;
LABEL_180:
    v282 = (unint64_t)sub_2C87D4();
    v283 = CGRectGetMinY(*(CGRect *)(v59 + 16));
    *(_QWORD *)v527 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v282);
    v285 = sub_2C34A8(v284);
    if (v285)
    {
      v286 = v285;
      if (v285 >= 1)
      {
        if ((v282 & 0xC000000000000001) != 0)
        {
          for (nn = 0; nn != v286; ++nn)
          {
            v288 = specialized _ArrayBuffer._getElementSlowPath(_:)(nn, v282);
            v290 = v288;
            if (*(_BYTE *)(v288 + 24) == 1)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v289);
              v291 = *(_QWORD *)(*(_QWORD *)v527 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v291);
              v292 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v291, v290);
              specialized ContiguousArray._endMutation()(v292);
            }
            else
            {
              swift_unknownObjectRelease(v288);
            }
          }
        }
        else
        {
          for (i1 = 0; i1 != v286; ++i1)
          {
            v316 = *(_QWORD *)(v282 + 8 * i1 + 32);
            if (*(_BYTE *)(v316 + 24) == 1)
            {
              v317 = swift_retain(*(_QWORD *)(v282 + 8 * i1 + 32));
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v317);
              v318 = *(_QWORD *)(*(_QWORD *)v527 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v318);
              v319 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v318, v316);
              specialized ContiguousArray._endMutation()(v319);
            }
          }
        }
        goto LABEL_210;
      }
      __break(1u);
LABEL_348:
      __break(1u);
LABEL_349:
      __break(1u);
LABEL_350:
      __break(1u);
      goto LABEL_351;
    }
LABEL_210:
    swift_bridgeObjectRelease(v282);
    v320 = *(_QWORD *)v527;
    swift_bridgeObjectRetain(*(_QWORD *)v527);
    v322 = sub_2C34A8(v321);
    if (v322)
    {
      v323 = v322;
      if (v322 < 1)
        goto LABEL_348;
      for (i2 = 0; i2 != v323; ++i2)
      {
        if ((v320 & 0xC000000000000001) != 0)
        {
          v325 = (CGRect *)specialized _ArrayBuffer._getElementSlowPath(_:)(i2, v320);
        }
        else
        {
          v325 = *(CGRect **)(v320 + 8 * i2 + 32);
          swift_retain(v325);
        }
        v326 = CGRectGetMaxY(v325[1]);
        swift_release(v325);
        if (v283 <= v326)
          v283 = v326;
      }
    }
    swift_release_n(v320, 2);
    swift_bridgeObjectRelease(v282);
    v327 = v253 + v283;
    v328 = sub_D556C(v503, 3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(i + 64))(v328, v505, i);
    v329 = v518;
    objc_msgSend((id)v218, "sizeThatFits:", v518, 1.79769313e308);
    Height = v330;
    v59 = (uint64_t)v517;
    v331 = v517[10];
    swift_retain(v331);
    v565.size.height = v519;
    v565.origin.x = v520;
    v565.origin.y = v81;
    v565.size.width = v89;
    *(CGFloat *)(v331 + 32) = j__CGRectGetMinX(v565);
    *(double *)(v331 + 40) = v327;
    *(double *)(v331 + 48) = v329;
    *(double *)(v331 + 56) = Height;
    *(_BYTE *)(v331 + 24) = 1;
    swift_release(v331);
    v239 = (int)v506;
  }
LABEL_220:
  if ((*(_BYTE *)(*(_QWORD *)(v59 + 80) + 24) & 1) == 0)
    objc_msgSend((id)v218, "setFrame:", 0.0, 0.0, 0.0, 0.0);
  if (v239)
  {
    v332 = sub_2CC8D4(v59, v18);
    v333 = *(_QWORD *)(v59 + 88);
    swift_retain(v333);
    v334 = v59;
    v335 = (uint64_t)sub_2C87D4();
    v336 = CGRectGetMinY(*(CGRect *)(v59 + 16));
    *(_QWORD *)v527 = _swiftEmptyArrayStorage;
    if ((unint64_t)v335 >> 62)
    {
      if (v335 < 0)
        v334 = v335;
      else
        v334 = v335 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v335);
      v337 = _CocoaArrayWrapper.endIndex.getter(v334);
      if (!v337)
        goto LABEL_254;
LABEL_225:
      if (v337 >= 1)
      {
        if ((v335 & 0xC000000000000001) != 0)
        {
          for (i3 = 0; i3 != v337; ++i3)
          {
            v339 = specialized _ArrayBuffer._getElementSlowPath(_:)(i3, v335);
            v341 = v339;
            if (*(_BYTE *)(v339 + 24) == 1)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v340);
              v342 = *(_QWORD *)(*(_QWORD *)v527 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v342);
              v343 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v342, v341);
              specialized ContiguousArray._endMutation()(v343);
            }
            else
            {
              swift_unknownObjectRelease(v339);
            }
          }
        }
        else
        {
          for (i4 = 0; i4 != v337; ++i4)
          {
            v345 = *(_QWORD *)(v335 + 8 * i4 + 32);
            if (*(_BYTE *)(v345 + 24) == 1)
            {
              v346 = swift_retain(*(_QWORD *)(v335 + 8 * i4 + 32));
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v346);
              v347 = *(_QWORD *)(*(_QWORD *)v527 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v347);
              v348 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v347, v345);
              specialized ContiguousArray._endMutation()(v348);
            }
          }
        }
        goto LABEL_254;
      }
      __break(1u);
      goto LABEL_328;
    }
    v337 = *(_QWORD *)((char *)&dword_10 + (v335 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v335);
    if (v337)
      goto LABEL_225;
LABEL_254:
    swift_bridgeObjectRelease(v335);
    v334 = *(_QWORD *)v527;
    swift_bridgeObjectRetain(*(_QWORD *)v527);
    v362 = sub_2C34A8(v361);
    if (v362)
    {
      v363 = v362;
      if (v362 >= 1)
      {
        for (i5 = 0; i5 != v363; ++i5)
        {
          if ((v334 & 0xC000000000000001) != 0)
          {
            v365 = (CGRect *)specialized _ArrayBuffer._getElementSlowPath(_:)(i5, v334);
          }
          else
          {
            v365 = *(CGRect **)(v334 + 8 * i5 + 32);
            swift_retain(v365);
          }
          v366 = CGRectGetMaxY(v365[1]);
          swift_release(v365);
          if (v336 <= v366)
            v336 = v366;
        }
        goto LABEL_263;
      }
LABEL_328:
      __break(1u);
LABEL_329:
      swift_once(&qword_3CFE58, sub_2C56F8);
LABEL_267:
      v374 = v71 + v89;
      v375 = v213 + *(double *)&qword_3E13F0;
      v377 = v519;
      v376 = v520;
      v378 = v81;
      v379 = v82;
      if (v521 == (_BYTE *)&dword_0 + 1)
      {
        v380 = CGRectGetMaxX(*(CGRect *)&v376);
        v567.origin.x = v336;
        v567.origin.y = v374;
        v567.size.width = Height;
        v567.size.height = v332;
        v213 = v375 + v380 - CGRectGetWidth(v567);
      }
      else
      {
        v213 = CGRectGetMinX(*(CGRect *)&v376) - v375;
      }
      v572.origin.x = v336;
      v572.origin.y = v374;
      v572.size.width = Height;
      v572.size.height = v332;
      v392 = CGRectGetMinY(v572);
      v573.origin.x = v336;
      v573.origin.y = v374;
      v573.size.width = Height;
      v573.size.height = v332;
      v393 = CGRectGetWidth(v573);
      v574.origin.x = v336;
      v574.origin.y = v374;
      v574.size.width = Height;
      v574.size.height = v332;
      v394 = CGRectGetHeight(v574);
      v395 = objc_msgSend(v18, "traitCollection");
      v397 = v507;
      v396 = v508;
      v398 = v516;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v508 + 104))(v507, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v516);
      v399 = sub_2912D0(v397, v395, v213, v392, v393, v394);
      v401 = v400;
      v403 = v402;
      v405 = v404;

      (*(void (**)(uint64_t, uint64_t))(v396 + 8))(v397, v398);
      v406 = *(_QWORD *)(v59 + 120);
      *(double *)(v406 + 32) = v399;
      *(_QWORD *)(v406 + 40) = v401;
      *(_QWORD *)(v406 + 48) = v403;
      *(_QWORD *)(v406 + 56) = v405;
      *(_BYTE *)(v406 + 24) = 1;
      v81 = v511;
      v89 = v82;
      goto LABEL_278;
    }
LABEL_263:
    swift_release_n(v334, 2);
    swift_bridgeObjectRelease(v335);
    *(double *)(v333 + 40) = v332 + v336;
    *(_BYTE *)(v333 + 24) = 1;
    swift_release(v333);
  }
  if (v514 == 2)
  {
    v367 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playButton];
    if (v367)
    {
      v334 = v367;
      objc_msgSend((id)v334, "frame");
      v336 = v368;
      Height = v369;
      v332 = v370;
      v371 = *(CGFloat **)(v59 + 64);
      v566.origin.x = v371[4];
      v566.origin.y = v371[5];
      v566.size.width = v371[6];
      v372 = v371[7];
      v566.size.height = v372;
      v71 = CGRectGetMinY(v566);
      v89 = (v372 - v332) * 0.5;
      objc_msgSend((id)v334, "frame");
      v213 = v373;
      if (qword_3CFE58 != -1)
        goto LABEL_329;
      goto LABEL_267;
    }
  }
  else
  {
    v381 = *(_QWORD *)(v59 + 48);
    if ((_BYTE)v514)
      v382 = 60.0;
    else
      v382 = 102.0;
    swift_retain(*(_QWORD *)(v59 + 48));
    v383 = v510;
    v384 = v499;
    v385 = v499;
    v386 = v213;
    v387 = v504;
    if (v521 == (_BYTE *)&dword_0 + 1)
    {
      v388 = CGRectGetMaxX(*(CGRect *)&v383);
      v568.origin.x = 0.0;
      v568.origin.y = 0.0;
      v568.size.width = v382;
      v568.size.height = v382;
      v213 = v388 - CGRectGetWidth(v568);
    }
    else
    {
      v213 = CGRectGetMinX(*(CGRect *)&v383) + 0.0;
    }
    v569.origin.x = 0.0;
    v569.origin.y = 0.0;
    v569.size.width = v382;
    v569.size.height = v382;
    v389 = CGRectGetMinY(v569);
    v570.origin.x = 0.0;
    v570.origin.y = 0.0;
    v570.size.width = v382;
    v570.size.height = v382;
    v390 = CGRectGetWidth(v570);
    v571.origin.x = 0.0;
    v571.origin.y = 0.0;
    v571.size.width = v382;
    v571.size.height = v382;
    v391 = CGRectGetHeight(v571);
    *(double *)(v381 + 32) = v213;
    *(double *)(v381 + 40) = v384 + v389;
    *(CGFloat *)(v381 + 48) = v390;
    *(CGFloat *)(v381 + 56) = v391;
    *(_BYTE *)(v381 + 24) = 1;
    swift_release(v381);
  }
LABEL_278:
  if (v18[v513] == 1)
  {
    v407 = sub_2C51AC();
    objc_msgSend(v407, "sizeToFit");

    v408 = sub_2C51AC();
    v409 = v518;
    objc_msgSend(v408, "sizeThatFits:", v518, v504);
    v411 = v410;
    v413 = v412;

    if (v409 < v411)
      v411 = v409;
    v414 = sub_2C87D4();
    v415 = sub_2C34A8((uint64_t)v414);
    swift_bridgeObjectRelease(v414);
    v416 = v519;
    if (v415 < 1)
    {
      v420 = 0.0;
    }
    else
    {
      if (qword_3CFE50 != -1)
        swift_once(&qword_3CFE50, sub_2C55F4);
      *(_OWORD *)v527 = xmmword_3E1378;
      v527[16] = byte_3E1388;
      v528 = xmmword_3E1390;
      v529 = xmmword_3E13A0;
      v530 = qword_3E13B0;
      v531 = *(_QWORD *)byte_3E13B8;
      v532 = xmmword_3E13C0;
      v533 = xmmword_3E13D0;
      v534 = qword_3E13E0;
      v535 = word_3E13E8;
      sub_1472C((id)xmmword_3E1390, *((uint64_t *)&xmmword_3E1390 + 1), xmmword_3E13A0, *((uint64_t *)&xmmword_3E13A0 + 1), qword_3E13B0, byte_3E13B8[0], (void *)xmmword_3E13C0, *((uint64_t *)&xmmword_3E13C0 + 1), xmmword_3E13D0, *((uint64_t *)&xmmword_3E13D0 + 1), qword_3E13E0, word_3E13E8);
      v417 = objc_msgSend(v18, "traitCollection");
      if (qword_3CFAB0 != -1)
        swift_once(&qword_3CFAB0, sub_1DD388);
      v418 = __swift_project_value_buffer(v516, (uint64_t)qword_3FCFB0);
      sub_1DD06C((uint64_t)v417, v418, 0);
      v420 = v419;

      sub_14788((id)v528, *((uint64_t *)&v528 + 1), v529, *((uint64_t *)&v529 + 1), v530, v531, (void *)v532, *((uint64_t *)&v532 + 1), v533, *((uint64_t *)&v533 + 1), v534, v535);
    }
    v421 = (unint64_t)sub_2C87D4();
    v422 = CGRectGetMinY(*(CGRect *)(v59 + 16));
    *(_QWORD *)v527 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v421);
    v424 = sub_2C34A8(v423);
    if (v424)
    {
      v425 = v424;
      if (v424 >= 1)
      {
        if ((v421 & 0xC000000000000001) != 0)
        {
          for (i6 = 0; i6 != v425; ++i6)
          {
            v427 = specialized _ArrayBuffer._getElementSlowPath(_:)(i6, v421);
            v429 = v427;
            if (*(_BYTE *)(v427 + 24) == 1)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v428);
              v430 = *(_QWORD *)(*(_QWORD *)v527 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v430);
              v431 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v430, v429);
              specialized ContiguousArray._endMutation()(v431);
            }
            else
            {
              swift_unknownObjectRelease(v427);
            }
          }
        }
        else
        {
          for (i7 = 0; i7 != v425; ++i7)
          {
            v433 = *(_QWORD *)(v421 + 8 * i7 + 32);
            if (*(_BYTE *)(v433 + 24) == 1)
            {
              v434 = swift_retain(*(_QWORD *)(v421 + 8 * i7 + 32));
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v434);
              v435 = *(_QWORD *)(*(_QWORD *)v527 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v435);
              v436 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v435, v433);
              specialized ContiguousArray._endMutation()(v436);
            }
          }
        }
        goto LABEL_301;
      }
      __break(1u);
LABEL_331:
      __break(1u);
LABEL_332:
      swift_once(&qword_3CFE50, sub_2C55F4);
LABEL_316:
      *(_OWORD *)v527 = xmmword_3E1378;
      v527[16] = byte_3E1388;
      v528 = xmmword_3E1390;
      v529 = xmmword_3E13A0;
      v530 = qword_3E13B0;
      v531 = *(_QWORD *)byte_3E13B8;
      v532 = xmmword_3E13C0;
      v533 = xmmword_3E13D0;
      v534 = qword_3E13E0;
      v535 = word_3E13E8;
      sub_1472C((id)xmmword_3E1390, *((uint64_t *)&xmmword_3E1390 + 1), xmmword_3E13A0, *((uint64_t *)&xmmword_3E13A0 + 1), qword_3E13B0, byte_3E13B8[0], (void *)xmmword_3E13C0, *((uint64_t *)&xmmword_3E13C0 + 1), xmmword_3E13D0, *((uint64_t *)&xmmword_3E13D0 + 1), qword_3E13E0, word_3E13E8);
      v472 = objc_msgSend(v18, "traitCollection");
      v473 = v507;
      sub_56B7C(v507);
      v474 = static NSUserDefaults.debugFeaturesEnabledByDefault.getter();
      sub_1DD06C((uint64_t)v472, v473, v474 & 1);
      v476 = v475;

      (*(void (**)(uint64_t, uint64_t))(v508 + 8))(v473, v516);
      sub_14788((id)v528, *((uint64_t *)&v528 + 1), v529, *((uint64_t *)&v529 + 1), v530, v531, (void *)v532, *((uint64_t *)&v532 + 1), v533, *((uint64_t *)&v533 + 1), v534, v535);
      v477 = v420 + v476;
      goto LABEL_318;
    }
LABEL_301:
    swift_bridgeObjectRelease(v421);
    v437 = *(_QWORD *)v527;
    swift_bridgeObjectRetain(*(_QWORD *)v527);
    v439 = sub_2C34A8(v438);
    if (v439)
    {
      v440 = v439;
      if (v439 < 1)
        goto LABEL_331;
      for (i8 = 0; i8 != v440; ++i8)
      {
        if ((v437 & 0xC000000000000001) != 0)
        {
          v442 = (CGRect *)specialized _ArrayBuffer._getElementSlowPath(_:)(i8, v437);
        }
        else
        {
          v442 = *(CGRect **)(v437 + 8 * i8 + 32);
          swift_retain(v442);
        }
        v443 = CGRectGetMaxY(v442[1]);
        swift_release(v442);
        if (v422 <= v443)
          v422 = v443;
      }
    }
    v444 = v521 == (_BYTE *)&dword_0 + 1;
    swift_release_n(v437, 2);
    swift_bridgeObjectRelease(v421);
    v445 = *(_QWORD *)(v59 + 96);
    swift_retain(v445);
    *(double *)(v445 + 32) = sub_2CC668(v444, v520, v81, v89, v416, 0.0, 0.0, v420 + v422, v411, v413);
    *(_QWORD *)(v445 + 40) = v446;
    *(_QWORD *)(v445 + 48) = v447;
    *(_QWORD *)(v445 + 56) = v448;
    *(_BYTE *)(v445 + 24) = 1;
    swift_release(v445);
    v449 = -*(double *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonHorizontalTouchOutsets];
    v450 = sub_2C51AC();
    v522 = -v420;
    v523 = *(unint64_t *)&v449;
    *(double *)&v524 = v449;
    BYTE8(v524) = 0;
    sub_2D1D84((uint64_t)&v522);

    v518 = v518 - j__CGRectGetWidth(*(CGRect *)(*(_QWORD *)(v59 + 96) + 32));
  }
  else
  {
    v416 = v519;
  }
  if (*(_QWORD *)&v512[v509])
  {
    v451 = v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 16];
    v452 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 24];
    v453 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 32];
    v454 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 40];
    v455 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 48];
    v456 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 56];
    v457 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 64];
    v458 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 72];
    v459 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 80];
    v460 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 88];
    v461 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 96];
    v462 = *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 104];
    v463 = *(_WORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing + 112];
    *(_OWORD *)v527 = *(_OWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing];
    v527[16] = v451;
    *(_QWORD *)&v528 = v452;
    *((_QWORD *)&v528 + 1) = v453;
    *(_QWORD *)&v529 = v454;
    *((_QWORD *)&v529 + 1) = v455;
    v530 = v456;
    v531 = v457;
    *(_QWORD *)&v532 = v458;
    *((_QWORD *)&v532 + 1) = v459;
    *(_QWORD *)&v533 = v460;
    *((_QWORD *)&v533 + 1) = v461;
    v534 = v462;
    v535 = v463;
    sub_1472C(v452, v453, v454, v455, v456, v457, v458, v459, v460, v461, v462, v463);
    v464 = objc_msgSend(v18, "traitCollection");
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v465 = __swift_project_value_buffer(v516, (uint64_t)qword_3FCFB0);
    sub_1DD06C((uint64_t)v464, v465, 0);
    v411 = v466;

    sub_14788((id)v528, *((uint64_t *)&v528 + 1), v529, *((uint64_t *)&v529 + 1), v530, v531, (void *)v532, *((uint64_t *)&v532 + 1), v533, *((uint64_t *)&v533 + 1), v534, v535);
    v413 = v518 - v411;
    objc_msgSend(v512, "sizeThatFits:", v518 - v411, 1.79769313e308);
    v213 = ceil(v467);
    v468 = CGRectGetMaxY(*(CGRect *)(*(_QWORD *)(v59 + 96) + 32));
    v469 = sub_2C51AC();
    v470 = objc_msgSend(v469, "isHidden");

    if (v470)
    {
      sub_2C89C0();
      v420 = v471;
      if (qword_3CFE50 != -1)
        goto LABEL_332;
      goto LABEL_316;
    }
    v477 = v468 - v213;
LABEL_318:
    v478 = v521 == (_BYTE *)&dword_0 + 1;
    v479 = *(_QWORD *)(v59 + 96);
    swift_retain(v479);
    v481 = sub_2CC734(v480, v478, v520, v81, v89, v416, v411, 0.0, v477, v413, v213);
    v483 = v482;
    v485 = v484;
    v487 = v486;
    swift_release(v479);
    v488 = *(_QWORD *)(v59 + 112);
    *(double *)(v488 + 32) = v481;
    *(_QWORD *)(v488 + 40) = v483;
    *(_QWORD *)(v488 + 48) = v485;
    *(_QWORD *)(v488 + 56) = v487;
    *(_BYTE *)(v488 + 24) = 1;
  }
  if (*(_BYTE *)(*(_QWORD *)(v59 + 48) + 24) == 1)
    sub_2C9084();
  sub_2C8C04();
  if (v18[v513] == 1)
  {
    v489 = sub_2C51AC();
    sub_2D1D64((uint64_t)v538);
    v490 = *(double *)v538;
    left = *(double *)&v538[1];
    right = *(double *)&v538[3];

    sub_123804((uint64_t)v538, (uint64_t)v539);
    if (v539[32])
    {
      right = UIEdgeInsetsZero.right;
      left = UIEdgeInsetsZero.left;
      top = UIEdgeInsetsZero.top;
    }
    else
    {
      top = v490;
    }
    objc_msgSend(v18, "bounds", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left);
    v494 = j__CGRectGetMaxY(v575);
    v495 = -(v494 - j__CGRectGetMaxY(*(CGRect *)(*(_QWORD *)(v59 + 96) + 32)));
    v496 = sub_2C51AC();
    *(double *)v527 = top;
    *(CGFloat *)&v527[8] = left;
    *(double *)&v527[16] = v495;
    *(CGFloat *)&v528 = right;
    BYTE8(v528) = 0;
    sub_2D1D84((uint64_t)v527);

  }
  swift_release(v59);
}

double sub_2CBFA0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  double v16;
  double v17;
  double v18;
  char v19;
  uint64_t v20;
  char v21;
  double v22;
  double v23;
  void *v24;
  double v25;
  double v26;
  CGFloat v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  char *v32;
  CGFloat v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double MaxX;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  id v42;
  double v43;
  double v44;
  id v45;
  double v46;
  double MinX;
  double v48;
  double v49;
  double v50;
  double v51;
  CGFloat v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  void *v58;
  id v59;
  double v60;
  CGFloat v61;
  double v62;
  CGFloat v63;
  double v64;
  double v65;
  double v66;
  char *v67;
  CGFloat v68;
  CGFloat v69;
  double v70;
  double v71;
  double v72;
  double v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  id v77;
  double v78;
  double v79;
  id v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v94;
  double v95;
  double v96;
  CGFloat v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v94 - v8;
  v10 = objc_msgSend(v0, "layoutMarginsGuide", v7);
  objc_msgSend(v10, "layoutFrame");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v19 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style + 1];
  v20 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v21 = static UITraitCollection.interfaceIdiomIsMac.getter(v20);
  v22 = 0.0;
  v23 = 0.0;
  if ((v21 & 1) != 0 && (v19 & 1) == 0)
  {
    v97 = v14;
    v24 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_durationLabel];
    v25 = 0.0;
    if ((objc_msgSend(v24, "isHidden") & 1) == 0)
    {
      objc_msgSend(v24, "sizeThatFits:", v16, v18);
      v25 = v26;
      v27 = v12;
      v29 = v28;
      v98.origin.x = v27;
      v30 = v97;
      v98.origin.y = v97;
      v98.size.width = v16;
      v98.size.height = v18;
      v31 = CGRectGetMinY(v98) + (v18 - v29) * 0.5;
      v32 = (char *)objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection");
      v94 = v27;
      v95 = v16;
      v33 = v27;
      v34 = v30;
      v35 = v16;
      v36 = v18;
      if (v32 == (_BYTE *)&dword_0 + 1)
      {
        v37 = CGRectGetMinX(*(CGRect *)&v33) + 0.0;
      }
      else
      {
        MaxX = CGRectGetMaxX(*(CGRect *)&v33);
        v99.origin.x = 0.0;
        v99.origin.y = v31;
        v99.size.width = v25;
        v99.size.height = v29;
        v37 = MaxX - CGRectGetWidth(v99);
      }
      v100.origin.x = 0.0;
      v100.origin.y = v31;
      v100.size.width = v25;
      v100.size.height = v29;
      MinY = CGRectGetMinY(v100);
      v101.origin.x = 0.0;
      v101.origin.y = v31;
      v101.size.width = v25;
      v101.size.height = v29;
      Width = CGRectGetWidth(v101);
      v102.origin.x = 0.0;
      v102.origin.y = v31;
      v102.size.width = v25;
      v102.size.height = v29;
      Height = CGRectGetHeight(v102);
      v42 = objc_msgSend(v1, "traitCollection");
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v9, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v2);
      objc_msgSend(v42, "displayScale");
      v44 = v43;
      if (v43 < COERCE_DOUBLE(1))
      {
        v45 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        objc_msgSend(v45, "scale");
        v44 = v46;

      }
      v103.origin.x = v37;
      v103.origin.y = MinY;
      v103.size.width = Width;
      v103.size.height = Height;
      MinX = CGRectGetMinX(v103);
      v96 = CGFloat.rounded(_:toScale:)((uint64_t)v9, v44, MinX);
      v104.origin.x = v37;
      v104.origin.y = MinY;
      v104.size.width = Width;
      v104.size.height = Height;
      v48 = CGRectGetMinY(v104);
      v49 = CGFloat.rounded(_:toScale:)((uint64_t)v9, v44, v48);
      v105.origin.x = v37;
      v105.origin.y = MinY;
      v105.size.width = Width;
      v105.size.height = Height;
      v50 = CGRectGetWidth(v105);
      v51 = CGFloat.rounded(_:toScale:)((uint64_t)v9, v44, v50);
      v52 = v37;
      v53 = v51;
      v106.origin.x = v52;
      v106.origin.y = MinY;
      v106.size.width = Width;
      v106.size.height = Height;
      v54 = CGRectGetHeight(v106);
      v55 = CGFloat.rounded(_:toScale:)((uint64_t)v9, v44, v54);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      objc_msgSend(v24, "setFrame:", v96, v49, v53, v55);
      v12 = v94;
      v16 = v95;
    }
    v56 = sub_2CEA44(v1);
    if (v25 > v56)
      v57 = v25;
    else
      v57 = v56;
    if (qword_3CFE20 != -1)
      swift_once(&qword_3CFE20, sub_2C4E28);
    v22 = *(double *)&qword_3E11F8;
    v23 = v57 + *(double *)&qword_3E11F8;
    v14 = v97;
  }
  v58 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextButton];
  if (v58)
  {
    v96 = v23;
    v97 = v22;
    v59 = v58;
    objc_msgSend(v59, "frame");
    v61 = v60;
    v63 = v62;
    v65 = v64;
    v107.origin.x = v12;
    v107.origin.y = v14;
    v107.size.width = v16;
    v107.size.height = v18;
    v66 = CGRectGetMinY(v107) + (v18 - v65) * 0.5;
    v67 = (char *)objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection");
    v68 = v12;
    v69 = v14;
    v70 = v16;
    v71 = v18;
    if (v67 == (_BYTE *)&dword_0 + 1)
    {
      v72 = CGRectGetMinX(*(CGRect *)&v68) + 0.0;
    }
    else
    {
      v73 = CGRectGetMaxX(*(CGRect *)&v68);
      v108.origin.x = v61;
      v108.origin.y = v66;
      v108.size.width = v63;
      v108.size.height = v65;
      v72 = v73 - CGRectGetWidth(v108);
    }
    v109.origin.x = v61;
    v109.origin.y = v66;
    v109.size.width = v63;
    v109.size.height = v65;
    v74 = CGRectGetMinY(v109);
    v110.origin.x = v61;
    v110.origin.y = v66;
    v110.size.width = v63;
    v110.size.height = v65;
    v75 = CGRectGetWidth(v110);
    v111.origin.x = v61;
    v111.origin.y = v66;
    v111.size.width = v63;
    v111.size.height = v65;
    v76 = CGRectGetHeight(v111);
    v77 = objc_msgSend(v1, "traitCollection");
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v2);
    objc_msgSend(v77, "displayScale");
    v79 = v78;
    if (v78 < COERCE_DOUBLE(1))
    {
      v80 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v80, "scale");
      v79 = v81;

    }
    v112.origin.x = v72;
    v112.origin.y = v74;
    v112.size.width = v75;
    v112.size.height = v76;
    v82 = CGRectGetMinX(v112);
    v83 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v79, v82);
    v113.origin.x = v72;
    v113.origin.y = v74;
    v113.size.width = v75;
    v113.size.height = v76;
    v84 = CGRectGetMinY(v113);
    v85 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v79, v84);
    v114.origin.x = v72;
    v114.origin.y = v74;
    v114.size.width = v75;
    v114.size.height = v76;
    v86 = CGRectGetWidth(v114);
    v87 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v79, v86);
    v115.origin.x = v72;
    v115.origin.y = v74;
    v115.size.width = v75;
    v115.size.height = v76;
    v88 = CGRectGetHeight(v115);
    v89 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v79, v88);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v59, "setFrame:", v83, v85, v87, v89);

    objc_msgSend(v59, "bounds");
    v91 = v90;
    if (qword_3CFE28 != -1)
      swift_once(&qword_3CFE28, sub_2C4E38);
    v92 = *(double *)&qword_3E1200;

    v23 = v96;
    v22 = v97;
    if (v96 < v91 + v92)
    {
      v22 = v92;
      v23 = v91 + v92;
    }
  }
  return v23 - v22;
}

double sub_2CC668(char a1, double a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  double MaxX;
  double v22;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  if ((a1 & 1) != 0)
  {
    MaxX = CGRectGetMaxX(*(CGRect *)&a2);
    v24.origin.x = a7;
    v24.origin.y = a8;
    v24.size.width = a9;
    v24.size.height = a10;
    v22 = MaxX - CGRectGetWidth(v24) - a6;
  }
  else
  {
    v22 = CGRectGetMinX(*(CGRect *)&a2) + a6;
  }
  v25.origin.x = a7;
  v25.origin.y = a8;
  v25.size.width = a9;
  v25.size.height = a10;
  CGRectGetMinY(v25);
  v26.origin.x = a7;
  v26.origin.y = a8;
  v26.size.width = a9;
  v26.size.height = a10;
  CGRectGetWidth(v26);
  v27.origin.x = a7;
  v27.origin.y = a8;
  v27.size.width = a9;
  v27.size.height = a10;
  CGRectGetHeight(v27);
  return v22;
}

double sub_2CC734(uint64_t a1, char a2, double a3, double a4, double a5, double a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  CGFloat v30;
  double MinX;
  double MaxX;
  uint64_t rect;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;

  if (a1 && *(_BYTE *)(a1 + 24) == 1)
  {
    v23 = *(_QWORD *)(a1 + 32);
    v24 = *(_QWORD *)(a1 + 40);
    v25 = *(_QWORD *)(a1 + 48);
    rect = *(_QWORD *)(a1 + 56);
    swift_retain(a1);
    v26 = v23;
    v27 = v24;
    v28 = v25;
    v29 = rect;
    if ((a2 & 1) != 0)
    {
      v30 = CGRectGetMinX(*(CGRect *)&v26) - a7;
      v35.origin.x = a8;
      v35.origin.y = a9;
      v35.size.width = a10;
      v35.size.height = a11;
      MinX = v30 - CGRectGetWidth(v35);
    }
    else
    {
      MinX = CGRectGetMaxX(*(CGRect *)&v26) + a7;
    }
    v40.origin.x = a8;
    v40.origin.y = a9;
    v40.size.width = a10;
    v40.size.height = a11;
    CGRectGetMinY(v40);
    v41.origin.x = a8;
    v41.origin.y = a9;
    v41.size.width = a10;
    v41.size.height = a11;
    CGRectGetWidth(v41);
    v42.origin.x = a8;
    v42.origin.y = a9;
    v42.size.width = a10;
    v42.size.height = a11;
    CGRectGetHeight(v42);
    swift_release(a1);
  }
  else
  {
    if ((a2 & 1) != 0)
    {
      MaxX = CGRectGetMaxX(*(CGRect *)&a3);
      v36.origin.x = a8;
      v36.origin.y = a9;
      v36.size.width = a10;
      v36.size.height = a11;
      MinX = MaxX - CGRectGetWidth(v36);
    }
    else
    {
      MinX = CGRectGetMinX(*(CGRect *)&a3);
    }
    v37.origin.x = a8;
    v37.origin.y = a9;
    v37.size.width = a10;
    v37.size.height = a11;
    CGRectGetMinY(v37);
    v38.origin.x = a8;
    v38.origin.y = a9;
    v38.size.width = a10;
    v38.size.height = a11;
    CGRectGetWidth(v38);
    v39.origin.x = a8;
    v39.origin.y = a9;
    v39.size.width = a10;
    v39.size.height = a11;
    CGRectGetHeight(v39);
  }
  return MinX;
}

double sub_2CC8D4(uint64_t a1, void *a2)
{
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  void *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unsigned __int16 v20;

  v2 = 0.0;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 80) + 24) & 1) == 0)
  {
    v4 = (uint64_t)sub_2C87D4();
    v5 = v4;
    if ((unint64_t)v4 >> 62)
    {
      if (v4 >= 0)
        v4 &= 0xFFFFFFFFFFFFFF8uLL;
      v6 = _CocoaArrayWrapper.endIndex.getter(v4);
    }
    else
    {
      v6 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease(v5);
    if (v6 >= 1)
    {
      if (qword_3CFE48 != -1)
        swift_once(&qword_3CFE48, sub_2C5530);
      v12 = (void *)qword_3E1318;
      v13 = qword_3E1320;
      v14 = xmmword_3E1328;
      v15 = qword_3E1338;
      v16 = byte_3E1340[0];
      v17 = xmmword_3E1348;
      v18 = xmmword_3E1358;
      v19 = qword_3E1368;
      v20 = word_3E1370;
      sub_1472C((id)qword_3E1318, qword_3E1320, xmmword_3E1328, *((uint64_t *)&xmmword_3E1328 + 1), qword_3E1338, byte_3E1340[0], (void *)xmmword_3E1348, *((uint64_t *)&xmmword_3E1348 + 1), xmmword_3E1358, *((uint64_t *)&xmmword_3E1358 + 1), qword_3E1368, word_3E1370);
      v7 = objc_msgSend(a2, "traitCollection");
      if (qword_3CFAB0 != -1)
        swift_once(&qword_3CFAB0, sub_1DD388);
      v8 = type metadata accessor for FloatingPointRoundingRule(0);
      v9 = __swift_project_value_buffer(v8, (uint64_t)qword_3FCFB0);
      sub_1DD06C((uint64_t)v7, v9, 0);
      v2 = v10;

      sub_14788(v12, v13, v14, *((uint64_t *)&v14 + 1), v15, v16, (void *)v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, v20);
    }
  }
  return v2;
}

uint64_t sub_2CCFC8()
{
  return type metadata accessor for EpisodeView(0);
}

uint64_t type metadata accessor for EpisodeView(uint64_t a1)
{
  uint64_t result;

  result = qword_3E1530;
  if (!qword_3E1530)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EpisodeView);
  return result;
}

uint64_t sub_2CD00C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[38];

  v4[0] = "(";
  v4[1] = &unk_306730;
  v4[2] = &unk_306748;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = &unk_306760;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = &unk_306778;
  v4[9] = &unk_306790;
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[13] = &unk_3067A8;
  v4[14] = &unk_3067C0;
  v4[15] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[17] = &unk_3067D8;
  v4[18] = &unk_3067D8;
  v4[19] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[20] = &unk_306760;
  v4[21] = &unk_3067F0;
  v4[22] = &unk_306760;
  v4[23] = &unk_306760;
  v4[24] = &unk_306760;
  v4[25] = &unk_306790;
  v4[26] = &unk_306760;
  v4[27] = &unk_306760;
  result = type metadata accessor for EpisodePlayState(319);
  if (v3 <= 0x3F)
  {
    v4[28] = *(_QWORD *)(result - 8) + 64;
    v4[29] = &unk_3067D8;
    v4[30] = &unk_306790;
    v4[31] = &unk_306760;
    v4[32] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[33] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[34] = &unk_3067D8;
    v4[35] = &unk_3067D8;
    v4[36] = &unk_3067D8;
    v4[37] = &unk_306760;
    return swift_updateClassMetadata2(a1, 256, 38, v4, a1 + 80);
  }
  return result;
}

uint64_t type metadata accessor for EpisodeView.LabelConfig()
{
  return objc_opt_self(_TtCC23ShelfKitCollectionViews11EpisodeViewP33_F4023EE6F2EBC9C917DA4711B045734A11LabelConfig);
}

uint64_t type metadata accessor for EpisodeView.LayoutItem()
{
  return objc_opt_self(_TtCC23ShelfKitCollectionViews11EpisodeViewP33_F4023EE6F2EBC9C917DA4711B045734A10LayoutItem);
}

uint64_t type metadata accessor for EpisodeView.Layout()
{
  return objc_opt_self(_TtCC23ShelfKitCollectionViews11EpisodeViewP33_F4023EE6F2EBC9C917DA4711B045734A6Layout);
}

uint64_t storeEnumTagSinglePayload for SummaryActionDisclosureType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2CD1F8 + 4 * byte_3066D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2CD22C + 4 * byte_3066D0[v4]))();
}

uint64_t sub_2CD22C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2CD234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2CD23CLL);
  return result;
}

uint64_t sub_2CD248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2CD250);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2CD254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2CD25C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummaryActionDisclosureType()
{
  return &type metadata for SummaryActionDisclosureType;
}

uint64_t initializeBufferWithCopyOfBuffer for EpisodeViewInlineNowPlayingIndicatorLayout(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  swift_retain(v3);
  return a1;
}

uint64_t destroy for EpisodeViewInlineNowPlayingIndicatorLayout(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t *assignWithCopy for EpisodeViewInlineNowPlayingIndicatorLayout(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithTake for EpisodeViewInlineNowPlayingIndicatorLayout(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeViewInlineNowPlayingIndicatorLayout(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeViewInlineNowPlayingIndicatorLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeViewInlineNowPlayingIndicatorLayout()
{
  return &type metadata for EpisodeViewInlineNowPlayingIndicatorLayout;
}

_QWORD *initializeBufferWithCopyOfBuffer for EpisodeView.ViewStyling(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for EpisodeView.ViewStyling(id *a1)
{

}

uint64_t assignWithCopy for EpisodeView.ViewStyling(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for EpisodeView.ViewStyling(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for EpisodeView.ViewStyling()
{
  return &type metadata for EpisodeView.ViewStyling;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeView.Style(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeView.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeView.Style()
{
  return &type metadata for EpisodeView.Style;
}

unint64_t sub_2CD678()
{
  unint64_t result;

  result = qword_3E1828;
  if (!qword_3E1828)
  {
    result = swift_getWitnessTable(&unk_306960, &type metadata for SummaryActionDisclosureType);
    atomic_store(result, (unint64_t *)&qword_3E1828);
  }
  return result;
}

uint64_t sub_2CD6BC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style);
}

id sub_2CD6CC()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback);
}

id sub_2CD6E0()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkContainer);
}

uint64_t sub_2CD6F0(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isInContextMenu) = result;
  return result;
}

uint64_t sub_2CD704@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  int v3;
  uint64_t v4;
  unsigned int *v6;

  v3 = *(unsigned __int8 *)(*v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_axis);
  v4 = type metadata accessor for ContextMenuPreviewMargins(0);
  if ((v3 & 1) != 0 || v3 == 2)
    v6 = (unsigned int *)&enum case for ContextMenuPreviewMargins.provide(_:);
  else
    v6 = (unsigned int *)&enum case for ContextMenuPreviewMargins.none(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, *v6, v4);
}

double sub_2CD76C()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_objectGraph)).n128_u64[0];
  return result;
}

uint64_t sub_2CD780()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHovering);
}

void sub_2CD790(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHovering) = a1;
  sub_2C7F78();
}

void sub_2CD7A0(char a1, void *a2)
{
  uint64_t v2;
  void *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  int v15;
  int v16;
  char v17;
  CGPoint v18;
  CGRect v19;

  if ((a1 & 1) != 0)
  {
    v4 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel);
    objc_msgSend(v4, "bounds");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    objc_msgSend(a2, "locationInView:", v4);
    v18.x = v13;
    v18.y = v14;
    v19.origin.x = v6;
    v19.origin.y = v8;
    v19.size.width = v10;
    v19.size.height = v12;
    v15 = CGRectContainsPoint(v19, v18);
    v16 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle) = v15;
    if (v15 == v16)
      return;
LABEL_5:
    sub_2C8120();
    return;
  }
  v17 = *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle) = 0;
  if ((v17 & 1) != 0)
    goto LABEL_5;
}

id *sub_2CD878(id *result, char a2, char a3)
{
  char *v3;
  id *v6;
  double v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2 != a3 && a3 != 0)
  {
    v6 = result;
    v7 = sub_2C4F10();
    v9 = (double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___inlineNowPlayingIndicatorLayout];
    v10 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___inlineNowPlayingIndicatorLayout];
    *(_QWORD *)v9 = v11;
    v9[1] = v7;
    *((_QWORD *)v9 + 2) = v8 | 1;
    sub_2CDB20(v10);
    if (!a2)
    {
      v12 = sub_2C4F10();
      v14 = *(_QWORD *)v9;
      *(_QWORD *)v9 = v15;
      v9[1] = v12;
      *((_QWORD *)v9 + 2) = v13 & 0xFFFFFFFFFFFFFFFDLL;
      sub_2CDB20(v14);
      objc_msgSend(v6[2], "setAlpha:", 0.0);
    }
    objc_msgSend(v3, "addSubview:", v6[2]);
    objc_msgSend(v3, "setNeedsLayout");
    return (id *)objc_msgSend(v3, "layoutIfNeeded");
  }
  return result;
}

id *sub_2CD964(id *result, char a2, char a3)
{
  char *v3;
  id *v5;
  double v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double v12;

  if (a2 != a3)
  {
    v5 = result;
    v6 = sub_2C4F10();
    v7 = (double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___inlineNowPlayingIndicatorLayout];
    v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___inlineNowPlayingIndicatorLayout];
    *(_QWORD *)v7 = v9;
    v7[1] = v6;
    v11 = v10 & 0xFFFFFFFFFFFFFFFDLL | (2 * (a3 != 0));
    if (a3)
      v12 = 1.0;
    else
      v12 = 0.0;
    *((_QWORD *)v7 + 2) = v11;
    sub_2CDB20(v8);
    objc_msgSend(v5[2], "setAlpha:", v12);
    objc_msgSend(v3, "setNeedsLayout");
    return (id *)objc_msgSend(v3, "layoutIfNeeded");
  }
  return result;
}

id *sub_2CDA34(id *result, char a2, char a3, char a4)
{
  if (!a3 && a2 && (a4 & 1) == 0)
    return (id *)objc_msgSend(result[2], "removeFromSuperview");
  return result;
}

uint64_t sub_2CDA5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_19C4C(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  v6 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState, v9, 33, 0);
  sub_2CF468((uint64_t)v5, v6, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  swift_endAccess(v9);
  sub_2C58BC();
  sub_2C5A24();
  return sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
}

uint64_t sub_2CDB20(uint64_t result)
{
  if (result != 1)
    return swift_release(result);
  return result;
}

double sub_2CDB30(uint64_t a1)
{
  double result;

  if (a1 != 1)
    *(_QWORD *)&result = swift_retain(a1).n128_u64[0];
  return result;
}

id sub_2CDB40()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 16);
  if (result)
    return objc_msgSend(result, "setFrame:", *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56));
  return result;
}

uint64_t sub_2CDB60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double block_copy_helper_77(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_77(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_2CDB8C(void *a1)
{
  id v1;
  id v2;
  int *v3;
  id v4;
  uint64_t v5;
  char v6;
  double v7;
  char v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  NSString *v32;
  id v33;
  NSString *v34;
  void *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  int *v49;
  unint64_t v50;
  unint64_t v51;
  double *v52;
  double v53;
  double v54;
  id v55;
  char isUniquelyReferenced_nonNull_native;
  int *v57;
  id v59;
  id v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  char v73[64];
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  int *v85;

  v1 = objc_msgSend(a1, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  if (qword_3CFE60 != -1)
LABEL_37:
    swift_once(&qword_3CFE60, sub_2C7D18);
  swift_beginAccess(off_3E13F8, &v74, 32, 0);
  v3 = off_3E13F8[0];
  if (*(_QWORD *)((char *)off_3E13F8[0] + (unint64_t)&dword_10))
  {
    v4 = v2;
    v5 = sub_36C54(v4);
    if ((v6 & 1) != 0)
    {
      v7 = *(double *)(*(_QWORD *)&stru_20.segname[(_QWORD)v3 + 16] + 8 * v5);
      swift_endAccess(&v74);

      goto LABEL_33;
    }

  }
  v59 = v2;
  swift_endAccess(&v74);
  v85 = (int *)_swiftEmptyArrayStorage;
  sub_F3470(0, 2, 0);
  v60 = (id)objc_opt_self(UIFont);
  if (qword_3CF5E0 != -1)
    swift_once(&qword_3CF5E0, sub_141154);
  v8 = 0;
  v9 = 0;
  do
  {
    v10 = *((double *)&off_37A2F8 + v9 + 4);
    v62 = v8;
    v11 = *((_QWORD *)&xmmword_3FC270 + 1);
    v12 = xmmword_3FC280;
    v14 = qword_3FC290;
    v13 = *(_QWORD *)byte_3FC298;
    v15 = xmmword_3FC2A0;
    v63 = qword_3FC2B0;
    v64 = qword_3FC2B8;
    v65 = qword_3FC2C0;
    v66 = word_3FC2C8;
    v16 = HIBYTE(word_3FC2C8);
    v17 = xmmword_3FC270;
    v70 = *((_QWORD *)&xmmword_3FC2A0 + 1);
    v71 = (void *)xmmword_3FC270;
    v68 = byte_3FC298[0];
    v69 = *((_QWORD *)&xmmword_3FC270 + 1);
    v67 = xmmword_3FC280;
    sub_DDA0((void *)xmmword_3FC270, *((uint64_t *)&xmmword_3FC270 + 1), xmmword_3FC280, *((uint64_t *)&xmmword_3FC280 + 1), qword_3FC290, byte_3FC298[0], (void *)xmmword_3FC2A0, *((uint64_t *)&xmmword_3FC2A0 + 1), qword_3FC2B0, qword_3FC2B8, qword_3FC2C0, word_3FC2C8, SHIBYTE(word_3FC2C8));
    v18 = objc_msgSend(a1, "traitCollection");
    v74 = v17;
    v75 = v11;
    v76 = v12;
    v77 = v14;
    v78 = v13;
    v79 = v15;
    v80 = v63;
    v81 = v64;
    v82 = v65;
    v83 = v66;
    v84 = v16;
    v19 = sub_1D5728((uint64_t)&v74, v18);
    v72 = objc_msgSend(v60, "fontWithDescriptor:size:", v19, 0.0);

    sub_DCC8(v71, v69, v67, *((uint64_t *)&v12 + 1), v14, v68, (void *)v15, v70, v63, v64, v65, v66, v16);
    v21 = static Localization.duration(_:)(v20, v10);
    if (v22)
    {
      v23 = v22;
      v74 = v21;
      v75 = v22;
      v24 = sub_D254();
      v25 = StringProtocol.localizedUppercase.getter(&type metadata for String, v24);
      v27 = v26;
      swift_bridgeObjectRelease(v23);
    }
    else
    {
      v25 = 0;
      v27 = 0xE000000000000000;
    }
    v28 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
    objc_msgSend(v28, "setMaximumNumberOfLines:", 1);
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
    inited = swift_initStackObject(v29, v73);
    *(_OWORD *)(inited + 16) = xmmword_2EFA20;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 40) = v72;
    *(_QWORD *)(inited + 48) = NSParagraphStyleAttributeName;
    v31 = qword_3CF0D8;
    v32 = NSFontAttributeName;
    v33 = v72;
    v34 = NSParagraphStyleAttributeName;
    if (v31 != -1)
      swift_once(&qword_3CF0D8, sub_28A30);
    v35 = (void *)qword_3FA958;
    *(_QWORD *)(inited + 56) = qword_3FA958;
    v36 = v35;
    v37 = sub_D47A0(inited);
    v2 = v28;
    sub_21A7CC(v25, v27, 1uLL, v37, v28, 1.79769313e308, 1.79769313e308);
    v39 = v38;
    v41 = v40;
    swift_bridgeObjectRelease(v37);

    objc_msgSend(v33, "lineHeight");
    v43 = v41 - v42;
    if (v41 - v42 <= 0.0)
    {
      swift_bridgeObjectRelease(v27);

    }
    else
    {
      objc_msgSend(v33, "lineHeight");
      v45 = v44;
      objc_msgSend(v33, "leading");
      v47 = v46;
      swift_bridgeObjectRelease(v27);

      v48 = round(v43 / (v45 + v47));
      if ((~*(_QWORD *)&v48 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v48 <= -9.22337204e18)
        goto LABEL_35;
      if (v48 >= 9.22337204e18)
        goto LABEL_36;
    }
    v49 = v85;
    if ((swift_isUniquelyReferenced_nonNull_native(v85) & 1) == 0)
    {
      sub_F3470(0, *((_QWORD *)v49 + 2) + 1, 1);
      v49 = v85;
    }
    v51 = *((_QWORD *)v49 + 2);
    v50 = *((_QWORD *)v49 + 3);
    if (v51 >= v50 >> 1)
    {
      sub_F3470(v50 > 1, v51 + 1, 1);
      v49 = v85;
    }
    *((_QWORD *)v49 + 2) = v51 + 1;
    *(_QWORD *)&v49[2 * v51 + 8] = v39;
    v8 = 1;
    v9 = 1;
  }
  while ((v62 & 1) == 0);
  v7 = *((double *)v49 + 4);
  if (v51)
  {
    v52 = (double *)(v49 + 10);
    v2 = v59;
    do
    {
      v53 = *v52++;
      v54 = v53;
      if (v7 < v53)
        v7 = v54;
      --v51;
    }
    while (v51);
  }
  else
  {
    v2 = v59;
  }
  swift_release(v49);
  swift_beginAccess(off_3E13F8, &v74, 33, 0);
  v55 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_3E13F8[0]);
  v85 = off_3E13F8[0];
  off_3E13F8[0] = (int *)0x8000000000000000;
  sub_15FC1C(v55, isUniquelyReferenced_nonNull_native, v7);
  v57 = off_3E13F8[0];
  off_3E13F8[0] = v85;

  swift_bridgeObjectRelease(v57);
  swift_endAccess(&v74);
LABEL_33:

  return v7;
}

void *sub_2CE170(void *a1, void *a2, void *a3)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void (*v11)(void *, uint64_t, uint64_t);
  id v12;
  id v13;
  id v14;

  if (a1)
  {
    ObjectType = swift_getObjectType();
    v7 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for LabelTextView);
    if (v7)
      v8 = v7;
    else
      v8 = 0;
    if (v7)
      v9 = a1;
    else
      v9 = 0;
    if (v9)
    {
      v10 = swift_getObjectType();
      v11 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 16);
      v12 = a2;
      v13 = a1;
      v14 = a3;
      v11(a2, v10, v8);

    }
    else
    {
      objc_msgSend(a1, "setTintColor:", a2);
    }
  }
  else
  {

  }
  return a1;
}

id sub_2CE25C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  _QWORD v9[5];

  v2 = v1;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextAction;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextAction);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextAction) = a1;
  swift_retain(a1);
  *(_QWORD *)&v5 = swift_release(v4).n128_u64[0];
  v6 = *(_QWORD *)(v2 + v3);
  if (v6)
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_objectGraph);
    if (v7)
    {
      if (*(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextButton))
      {
        v9[3] = type metadata accessor for Action(0);
        v9[4] = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        v9[0] = v6;
        swift_retain_n(v6, 2);
        swift_retain(v7);
        UIControl.setAction(_:for:asPartOf:)(v9, 0x2000, v7);
        swift_release(v7);
        swift_release(v6);
        __swift_destroy_boxed_opaque_existential_0(v9);
      }
    }
  }
  result = *(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextButton);
  if (result)
    return objc_msgSend(result, "setHidden:", *(_QWORD *)(v2 + v3) == 0, v5);
  return result;
}

void sub_2CE364(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5, double a6)
{
  id v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  NSString *v16;
  id v17;
  NSString *v18;
  void *v19;
  id v20;
  unint64_t v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;

  v12 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
  objc_msgSend(v12, "setMaximumNumberOfLines:", a3);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
  inited = swift_initStackObject(v13, &v32);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = a4;
  *(_QWORD *)(inited + 48) = NSParagraphStyleAttributeName;
  v15 = qword_3CF0D8;
  v16 = NSFontAttributeName;
  v17 = a4;
  v18 = NSParagraphStyleAttributeName;
  if (v15 != -1)
    swift_once(&qword_3CF0D8, sub_28A30);
  v19 = (void *)qword_3FA958;
  *(_QWORD *)(inited + 56) = qword_3FA958;
  v20 = v19;
  v21 = sub_D47A0(inited);
  v22 = v12;
  sub_21A7CC(a1, a2, 1uLL, v21, v12, a5, a6);
  v24 = v23;
  swift_bridgeObjectRelease(v21);

  objc_msgSend(v17, "lineHeight");
  v26 = v24 - v25;
  if (v24 - v25 <= 0.0)
    goto LABEL_10;
  objc_msgSend(v17, "lineHeight");
  v28 = v27;
  objc_msgSend(v17, "leading");
  v30 = v29;

  v31 = round(v26 / (v28 + v30));
  if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v31 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    return;
  }
  if (__OFADD__((uint64_t)v31, 1))
  {
    __break(1u);
LABEL_10:

  }
}

void sub_2CE57C()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  char v20;
  __int16 v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_libraryActionController];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_axis] = 2;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback;
  sub_224704();
  *(_QWORD *)&v1[v3] = v4;
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_captionLabel;
  type metadata accessor for EpisodeCaptionLabel();
  if (qword_3CF5B0 != -1)
    swift_once(&qword_3CF5B0, sub_140BEC);
  v30 = xmmword_3FC030;
  v31 = xmmword_3FC040;
  v32 = qword_3FC050;
  v33 = *(_QWORD *)byte_3FC058;
  v34 = xmmword_3FC060;
  v35 = qword_3FC070;
  v36 = qword_3FC078;
  v37 = qword_3FC080;
  v38 = word_3FC088;
  sub_DDA0((void *)xmmword_3FC030, *((uint64_t *)&xmmword_3FC030 + 1), xmmword_3FC040, *((uint64_t *)&xmmword_3FC040 + 1), qword_3FC050, byte_3FC058[0], (void *)xmmword_3FC060, *((uint64_t *)&xmmword_3FC060 + 1), qword_3FC070, qword_3FC078, qword_3FC080, word_3FC088, SHIBYTE(word_3FC088));
  *(_QWORD *)&v1[v5] = sub_A96AC((uint64_t)&v30, 1, 0, 1);
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_ordinalLabel;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF5D8 != -1)
    swift_once(&qword_3CF5D8, sub_140F48);
  v30 = xmmword_3FC210;
  v31 = xmmword_3FC220;
  v32 = qword_3FC230;
  v33 = *(_QWORD *)byte_3FC238;
  v34 = xmmword_3FC240;
  v35 = qword_3FC250;
  v36 = qword_3FC258;
  v37 = qword_3FC260;
  v38 = word_3FC268;
  sub_DDA0((void *)xmmword_3FC210, *((uint64_t *)&xmmword_3FC210 + 1), xmmword_3FC220, *((uint64_t *)&xmmword_3FC220 + 1), qword_3FC230, byte_3FC238[0], (void *)xmmword_3FC240, *((uint64_t *)&xmmword_3FC240 + 1), qword_3FC250, qword_3FC258, qword_3FC260, word_3FC268, SHIBYTE(word_3FC268));
  *(_QWORD *)&v1[v6] = sub_A96AC((uint64_t)&v30, 1, 0, 1);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_durationLabel;
  if (qword_3CF5E0 != -1)
    swift_once(&qword_3CF5E0, sub_141154);
  v30 = xmmword_3FC270;
  v31 = xmmword_3FC280;
  v32 = qword_3FC290;
  v33 = *(_QWORD *)byte_3FC298;
  v34 = xmmword_3FC2A0;
  v35 = qword_3FC2B0;
  v36 = qword_3FC2B8;
  v37 = qword_3FC2C0;
  v38 = word_3FC2C8;
  sub_DDA0((void *)xmmword_3FC270, *((uint64_t *)&xmmword_3FC270 + 1), xmmword_3FC280, *((uint64_t *)&xmmword_3FC280 + 1), qword_3FC290, byte_3FC298[0], (void *)xmmword_3FC2A0, *((uint64_t *)&xmmword_3FC2A0 + 1), qword_3FC2B0, qword_3FC2B8, qword_3FC2C0, word_3FC2C8, SHIBYTE(word_3FC2C8));
  *(_QWORD *)&v1[v7] = sub_A96AC((uint64_t)&v30, 1, 0, 1);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_viewStylings] = _swiftEmptyArrayStorage;
  v8 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___inlineNowPlayingIndicatorLayout];
  *v8 = 1;
  v8[1] = 0;
  v8[2] = 0;
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_detailToPlaybackViewSpacing;
  if (qword_3CF5C0 != -1)
    swift_once(&qword_3CF5C0, sub_140D44);
  v10 = &v1[v9];
  v11 = xmmword_3FC0F0;
  v12 = xmmword_3FC100;
  v13 = qword_3FC110;
  v14 = qword_3FC118;
  v15 = xmmword_3FC120;
  v16 = qword_3FC130;
  v17 = qword_3FC138;
  v18 = qword_3FC140;
  v19 = word_3FC148;
  v20 = HIBYTE(word_3FC148);
  if (HIBYTE(word_3FC148))
    v21 = 256;
  else
    v21 = 0;
  *(_OWORD *)v10 = xmmword_3066C0;
  v10[16] = 0;
  *(_OWORD *)(v10 + 24) = v11;
  *(_OWORD *)(v10 + 40) = v12;
  *((_QWORD *)v10 + 7) = v13;
  *((_QWORD *)v10 + 8) = v14;
  *(_OWORD *)(v10 + 72) = v15;
  *((_QWORD *)v10 + 11) = v16;
  *((_QWORD *)v10 + 12) = v17;
  *((_QWORD *)v10 + 13) = v18;
  *((_WORD *)v10 + 56) = v21 | v19 | 0x8000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackViewStyle] = 31;
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playbackView;
  sub_DDA0((void *)v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, v14, (void *)v15, *((uint64_t *)&v15 + 1), v16, v17, v18, v19, v20);
  *(_QWORD *)&v1[v22] = sub_2C5104();
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonConsumesSpace] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonDisclosureType] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryButtonHorizontalTouchOutsets] = 0x4020000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView____lazy_storage___summaryButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playAction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contextAction] = 0;
  v23 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_contentSizeChangeHandler];
  *v23 = 0;
  v23[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleAction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryAction] = 0;
  v24 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_playState];
  v25 = type metadata accessor for EpisodePlayState(0);
  swift_storeEnumTagMultiPayload(v24, v25, 5);
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_multiEpisode] = 0;
  v26 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_usedByPodcastUuid];
  *v26 = 0;
  v26[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds] = &_swiftEmptyDictionarySingleton;
  v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage;
  v28 = type metadata accessor for SelectableCellStorage();
  v29 = swift_allocObject(v28, 17, 7);
  *(_BYTE *)(v29 + 16) = 0;
  *(_QWORD *)&v1[v27] = v29;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHovering] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isInContextMenu] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_objectGraph] = 0;

  *(_QWORD *)&v30 = 0;
  *((_QWORD *)&v30 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(*((_QWORD *)&v30 + 1));
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001CLL, 0x8000000000311E40, "ShelfKitCollectionViews/EpisodeView.swift", 41, 2, 484, 0);
  __break(1u);
}

double sub_2CEA44(void *a1)
{
  id v1;
  id v2;
  int *v3;
  id v4;
  uint64_t v5;
  char v6;
  double v7;
  char v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  NSString *v32;
  id v33;
  NSString *v34;
  void *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  int *v49;
  unint64_t v50;
  unint64_t v51;
  double *v52;
  double v53;
  double v54;
  id v55;
  char isUniquelyReferenced_nonNull_native;
  int *v57;
  id v59;
  id v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  char v73[64];
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  int *v85;

  v1 = objc_msgSend(a1, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  if (qword_3CFE60 != -1)
LABEL_37:
    swift_once(&qword_3CFE60, sub_2C7D18);
  swift_beginAccess(off_3E13F8, &v74, 32, 0);
  v3 = off_3E13F8[0];
  if (*(_QWORD *)((char *)off_3E13F8[0] + (unint64_t)&dword_10))
  {
    v4 = v2;
    v5 = sub_36C54(v4);
    if ((v6 & 1) != 0)
    {
      v7 = *(double *)(*(_QWORD *)&stru_20.segname[(_QWORD)v3 + 16] + 8 * v5);
      swift_endAccess(&v74);

      goto LABEL_33;
    }

  }
  v59 = v2;
  swift_endAccess(&v74);
  v85 = (int *)_swiftEmptyArrayStorage;
  sub_F3470(0, 2, 0);
  v60 = (id)objc_opt_self(UIFont);
  if (qword_3CF5E0 != -1)
    swift_once(&qword_3CF5E0, sub_141154);
  v8 = 0;
  v9 = 0;
  do
  {
    v10 = *((double *)&off_37A328 + v9 + 4);
    v62 = v8;
    v11 = *((_QWORD *)&xmmword_3FC270 + 1);
    v12 = xmmword_3FC280;
    v14 = qword_3FC290;
    v13 = *(_QWORD *)byte_3FC298;
    v15 = xmmword_3FC2A0;
    v63 = qword_3FC2B0;
    v64 = qword_3FC2B8;
    v65 = qword_3FC2C0;
    v66 = word_3FC2C8;
    v16 = HIBYTE(word_3FC2C8);
    v17 = xmmword_3FC270;
    v70 = *((_QWORD *)&xmmword_3FC2A0 + 1);
    v71 = (void *)xmmword_3FC270;
    v68 = byte_3FC298[0];
    v69 = *((_QWORD *)&xmmword_3FC270 + 1);
    v67 = xmmword_3FC280;
    sub_DDA0((void *)xmmword_3FC270, *((uint64_t *)&xmmword_3FC270 + 1), xmmword_3FC280, *((uint64_t *)&xmmword_3FC280 + 1), qword_3FC290, byte_3FC298[0], (void *)xmmword_3FC2A0, *((uint64_t *)&xmmword_3FC2A0 + 1), qword_3FC2B0, qword_3FC2B8, qword_3FC2C0, word_3FC2C8, SHIBYTE(word_3FC2C8));
    v18 = objc_msgSend(a1, "traitCollection");
    v74 = v17;
    v75 = v11;
    v76 = v12;
    v77 = v14;
    v78 = v13;
    v79 = v15;
    v80 = v63;
    v81 = v64;
    v82 = v65;
    v83 = v66;
    v84 = v16;
    v19 = sub_1D5728((uint64_t)&v74, v18);
    v72 = objc_msgSend(v60, "fontWithDescriptor:size:", v19, 0.0);

    sub_DCC8(v71, v69, v67, *((uint64_t *)&v12 + 1), v14, v68, (void *)v15, v70, v63, v64, v65, v66, v16);
    v21 = static Localization.duration(_:)(v20, v10);
    if (v22)
    {
      v23 = v22;
      v74 = v21;
      v75 = v22;
      v24 = sub_D254();
      v25 = StringProtocol.localizedUppercase.getter(&type metadata for String, v24);
      v27 = v26;
      swift_bridgeObjectRelease(v23);
    }
    else
    {
      v25 = 0;
      v27 = 0xE000000000000000;
    }
    v28 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
    objc_msgSend(v28, "setMaximumNumberOfLines:", 1);
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
    inited = swift_initStackObject(v29, v73);
    *(_OWORD *)(inited + 16) = xmmword_2EFA20;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 40) = v72;
    *(_QWORD *)(inited + 48) = NSParagraphStyleAttributeName;
    v31 = qword_3CF0D8;
    v32 = NSFontAttributeName;
    v33 = v72;
    v34 = NSParagraphStyleAttributeName;
    if (v31 != -1)
      swift_once(&qword_3CF0D8, sub_28A30);
    v35 = (void *)qword_3FA958;
    *(_QWORD *)(inited + 56) = qword_3FA958;
    v36 = v35;
    v37 = sub_D47A0(inited);
    v2 = v28;
    sub_21A7CC(v25, v27, 1uLL, v37, v28, 1.79769313e308, 1.79769313e308);
    v39 = v38;
    v41 = v40;
    swift_bridgeObjectRelease(v37);

    objc_msgSend(v33, "lineHeight");
    v43 = v41 - v42;
    if (v41 - v42 <= 0.0)
    {
      swift_bridgeObjectRelease(v27);

    }
    else
    {
      objc_msgSend(v33, "lineHeight");
      v45 = v44;
      objc_msgSend(v33, "leading");
      v47 = v46;
      swift_bridgeObjectRelease(v27);

      v48 = round(v43 / (v45 + v47));
      if ((~*(_QWORD *)&v48 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v48 <= -9.22337204e18)
        goto LABEL_35;
      if (v48 >= 9.22337204e18)
        goto LABEL_36;
    }
    v49 = v85;
    if ((swift_isUniquelyReferenced_nonNull_native(v85) & 1) == 0)
    {
      sub_F3470(0, *((_QWORD *)v49 + 2) + 1, 1);
      v49 = v85;
    }
    v51 = *((_QWORD *)v49 + 2);
    v50 = *((_QWORD *)v49 + 3);
    if (v51 >= v50 >> 1)
    {
      sub_F3470(v50 > 1, v51 + 1, 1);
      v49 = v85;
    }
    *((_QWORD *)v49 + 2) = v51 + 1;
    *(_QWORD *)&v49[2 * v51 + 8] = v39;
    v8 = 1;
    v9 = 1;
  }
  while ((v62 & 1) == 0);
  v7 = *((double *)v49 + 4);
  if (v51)
  {
    v52 = (double *)(v49 + 10);
    v2 = v59;
    do
    {
      v53 = *v52++;
      v54 = v53;
      if (v7 < v53)
        v7 = v54;
      --v51;
    }
    while (v51);
  }
  else
  {
    v2 = v59;
  }
  swift_release(v49);
  swift_beginAccess(off_3E13F8, &v74, 33, 0);
  v55 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_3E13F8[0]);
  v85 = off_3E13F8[0];
  off_3E13F8[0] = (int *)0x8000000000000000;
  sub_15FC1C(v55, isUniquelyReferenced_nonNull_native, v7);
  v57 = off_3E13F8[0];
  off_3E13F8[0] = v85;

  swift_bridgeObjectRelease(v57);
  swift_endAccess(&v74);
LABEL_33:

  return v7;
}

double sub_2CF028(Swift::Int a1, void *a2)
{
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  id v9;
  id v10;
  Swift::String v11;
  void *object;
  NSString v13;
  uint64_t v14;
  uint64_t inited;
  NSString *v16;
  id v17;
  unint64_t v18;
  Class isa;
  double v20;
  double v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  void *v31;
  id v32;
  _BYTE v34[72];
  _OWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;

  if (qword_3CF5D8 != -1)
    swift_once(&qword_3CF5D8, sub_140F48);
  v3 = xmmword_3FC210;
  v4 = xmmword_3FC220;
  v5 = qword_3FC230;
  v6 = *(_QWORD *)byte_3FC238;
  v7 = xmmword_3FC240;
  v23 = qword_3FC250;
  v24 = qword_3FC258;
  v25 = qword_3FC260;
  v26 = word_3FC268;
  v8 = HIBYTE(word_3FC268);
  v30 = qword_3FC230;
  v31 = (void *)xmmword_3FC210;
  v28 = (void *)xmmword_3FC240;
  v29 = byte_3FC238[0];
  v27 = *((_QWORD *)&xmmword_3FC240 + 1);
  sub_DDA0((void *)xmmword_3FC210, *((uint64_t *)&xmmword_3FC210 + 1), xmmword_3FC220, *((uint64_t *)&xmmword_3FC220 + 1), qword_3FC230, byte_3FC238[0], (void *)xmmword_3FC240, *((uint64_t *)&xmmword_3FC240 + 1), qword_3FC250, qword_3FC258, qword_3FC260, word_3FC268, SHIBYTE(word_3FC268));
  v9 = objc_msgSend(a2, "traitCollection");
  v35[0] = v3;
  v35[1] = v4;
  v36 = v5;
  v37 = v6;
  v38 = v7;
  v39 = v23;
  v40 = v24;
  v41 = v25;
  v42 = v26;
  v43 = v8;
  v10 = sub_1D5728((uint64_t)v35, v9);
  v32 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v10, 0.0);

  sub_DCC8(v31, *((uint64_t *)&v3 + 1), v4, *((uint64_t *)&v4 + 1), v30, v29, v28, v27, v23, v24, v25, v26, v8);
  v11._countAndFlagsBits = 48;
  v11._object = (void *)0xE100000000000000;
  object = String.init(repeating:count:)(v11, a1)._object;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
  inited = swift_initStackObject(v14, v34);
  *(_OWORD *)(inited + 16) = xmmword_2F03C0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v32;
  v16 = NSFontAttributeName;
  v17 = v32;
  v18 = sub_D4784(inited);
  type metadata accessor for Key(0);
  sub_89A0((unint64_t *)&qword_3D0150, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v13, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);
  v21 = v20;

  return v21;
}

void sub_2CF2DC()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  char v3;
  uint64_t v4;
  uint64_t ObjectType;
  int v6;
  int v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  unsigned __int8 v25;
  char v26;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = UITraitCollection.interfaceIdiomIsMac.getter(v2);

  if ((v3 & 1) == 0)
  {
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_summaryLabel + 8];
    ObjectType = swift_getObjectType();
    v6 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style + 1] ? 256 : 0;
    v7 = v6 | (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style + 2] << 16) | v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style];
    sub_2C7BA8(v1, v7, (uint64_t)&v19);
    v8 = v26 ? 256 : 0;
    v12 = v19;
    v13 = v20;
    v14 = v21;
    v15 = v22;
    v16 = v23;
    v17 = v24;
    v18 = v8 | v25;
    (*(void (**)(__int128 *, uint64_t, uint64_t))(v4 + 24))(&v12, ObjectType, v4);
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel])
    {
      v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_secondSummaryLabel + 8];
      v10 = swift_getObjectType();
      sub_2C7BA8(v1, v7, (uint64_t)&v19);
      if (v26)
        v11 = 256;
      else
        v11 = 0;
      v12 = v19;
      v13 = v20;
      v14 = v21;
      v15 = v22;
      v16 = v23;
      v17 = v24;
      v18 = v11 | v25;
      (*(void (**)(__int128 *, uint64_t, uint64_t))(v9 + 24))(&v12, v10, v9);
    }
  }
}

uint64_t sub_2CF468(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_2CF4AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

BOOL sub_2CF4BC(uint64_t a1)
{
  uint64_t v1;

  return sub_26D7F4(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_2CF4CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_2CF4F0()
{
  uint64_t v0;

  sub_2C7808(v0);
}

void sub_2CF4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2C7664(a1, a2, v2);
}

void sub_2CF500(void *a1)
{
  uint64_t v1;

  sub_2C740C(a1, v1);
}

ValueMetadata *type metadata accessor for EpisodeViewInlineNowPlayingIndicatorLayout.LayoutOptions()
{
  return &type metadata for EpisodeViewInlineNowPlayingIndicatorLayout.LayoutOptions;
}

uint64_t storeEnumTagSinglePayload for EpisodeView.Style.Variant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2CF564 + 4 * byte_3066E7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2CF598 + 4 * byte_3066E2[v4]))();
}

uint64_t sub_2CF598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2CF5A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2CF5A8);
  return result;
}

uint64_t sub_2CF5B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2CF5BCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2CF5C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2CF5C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeView.Style.Variant()
{
  return &type metadata for EpisodeView.Style.Variant;
}

unint64_t sub_2CF5E8()
{
  unint64_t result;

  result = qword_3E1888;
  if (!qword_3E1888)
  {
    result = swift_getWitnessTable(&unk_306AD8, &type metadata for EpisodeView.Style.Variant);
    atomic_store(result, (unint64_t *)&qword_3E1888);
  }
  return result;
}

unint64_t sub_2CF630()
{
  unint64_t result;

  result = qword_3E1890;
  if (!qword_3E1890)
  {
    result = swift_getWitnessTable(&unk_306B30, &type metadata for EpisodeViewInlineNowPlayingIndicatorLayout.LayoutOptions);
    atomic_store(result, (unint64_t *)&qword_3E1890);
  }
  return result;
}

unint64_t sub_2CF678()
{
  unint64_t result;

  result = qword_3E1898;
  if (!qword_3E1898)
  {
    result = swift_getWitnessTable(&unk_306B00, &type metadata for EpisodeViewInlineNowPlayingIndicatorLayout.LayoutOptions);
    atomic_store(result, (unint64_t *)&qword_3E1898);
  }
  return result;
}

unint64_t sub_2CF6C0()
{
  unint64_t result;

  result = qword_3E18A0;
  if (!qword_3E18A0)
  {
    result = swift_getWitnessTable(&unk_306B58, &type metadata for EpisodeViewInlineNowPlayingIndicatorLayout.LayoutOptions);
    atomic_store(result, (unint64_t *)&qword_3E18A0);
  }
  return result;
}

unint64_t sub_2CF708()
{
  unint64_t result;

  result = qword_3E18A8;
  if (!qword_3E18A8)
  {
    result = swift_getWitnessTable(&unk_306B90, &type metadata for EpisodeViewInlineNowPlayingIndicatorLayout.LayoutOptions);
    atomic_store(result, (unint64_t *)&qword_3E18A8);
  }
  return result;
}

uint64_t sub_2CF754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for PlayControlsIconsSet(0);
  __swift_allocate_value_buffer(v0, qword_3E18B0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3E18B0);
  if (qword_3CFDD0 != -1)
    swift_once(&qword_3CFDD0, sub_2B2F84);
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_3FD888);
  return sub_19C4C(v2, v1, type metadata accessor for PlayControlsIconsSet);
}

void sub_2CF7E0()
{
  qword_3E18C8 = 0x4010000000000000;
}

void sub_2CF7F0()
{
  qword_3E18D0 = 0x4024000000000000;
}

int64x2_t sub_2CF800()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4056800000000000uLL);
  xmmword_3E18D8 = (__int128)result;
  return result;
}

void sub_2CF81C()
{
  qword_3E18E8 = 0x4018000000000000;
}

int64x2_t sub_2CF82C()
{
  int64x2_t result;

  if (qword_3CFE88 != -1)
    swift_once(&qword_3CFE88, sub_2CF81C);
  *(double *)&qword_3E18F0 = -*(double *)&qword_3E18E8;
  result = vdupq_n_s64(0xC044000000000000);
  *(int64x2_t *)algn_3E18F8 = result;
  qword_3E1908 = 0xC044000000000000;
  return result;
}

id sub_2CF88C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  id v10;
  id v11;
  id v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsPresenter] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playStateSubscription] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_shouldRenderEpisodeArtwork] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_objectGraph] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_displayScale] = 0x3FF0000000000000;
  v14.receiver = v4;
  v14.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  v11 = objc_msgSend(v10, "contentView");
  objc_msgSend(v11, "layoutMargins");
  objc_msgSend(v11, "setLayoutMargins:", 20.0);

  v12 = objc_msgSend(v10, "contentView");
  objc_msgSend(v12, "layoutMargins");
  objc_msgSend(v12, "setLayoutMargins:");

  return v10;
}

void sub_2CFA30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  _BYTE *v11;
  unsigned __int8 v12;
  _BYTE *v13;
  void *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  __int128 v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  unsigned __int8 v54[24];

  v2 = v1;
  v4 = type metadata accessor for PlayControlsIconsSet(0);
  __chkstk_darwin(v4);
  v6 = &v54[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView)
    || !*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView)
    || !*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView))
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CachingArtworkView(0)), "init");
    v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView;
    v10 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView) = v8;

    v11 = *(_BYTE **)(v1 + v9);
    if (v11)
    {
      v12 = v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
      v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
      v54[0] = v12;
      v13 = v11;
      sub_EB33C(v54);

      v14 = *(void **)(v2 + v9);
      if (v14)
      {
        v15 = qword_3CFA90;
        v16 = v14;
        if (v15 != -1)
          swift_once(&qword_3CFA90, sub_1D6620);
        v17 = (void *)qword_3FCF18;
        v18 = qword_3FCF30;
        v19 = &v16[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v20 = *(void **)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v21 = unk_3FCF20;
        *(_QWORD *)v19 = qword_3FCF18;
        *(_OWORD *)(v19 + 8) = v21;
        *((_QWORD *)v19 + 3) = v18;
        v22 = v17;

        sub_E9020();
        v54[0] = 0;
        if (qword_3CFE68 != -1)
          swift_once(&qword_3CFE68, sub_2CF754);
        v23 = __swift_project_value_buffer(v4, (uint64_t)qword_3E18B0);
        sub_19C4C(v23, (uint64_t)v6, type metadata accessor for PlayControlsIconsSet);
        v24 = type metadata accessor for PlayControlsPresenter(0);
        swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
        swift_retain(a1);
        v25 = sub_2B4D24(v54, (uint64_t)v6, a1);
        swift_release(a1);
        v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsPresenter;
        v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsPresenter);
        *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsPresenter) = v25;
        swift_release(v27);
        v28 = *(_QWORD *)(v2 + v26);
        if (v28)
        {
          v29 = qword_3CFE90;
          swift_retain(v28);
          if (v29 != -1)
            swift_once(&qword_3CFE90, sub_2CF82C);
          v30 = *(double *)&qword_3E18F0;
          v31 = *(double *)algn_3E18F8;
          v32 = *(double *)&qword_3E1900;
          v33 = *(double *)&qword_3E1908;
          v34 = objc_allocWithZone((Class)type metadata accessor for PlayControlsStackView());
          v35 = sub_10B650(v28, v30, v31, v32, v33);
          v36 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView;
          v37 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView);
          *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView) = v35;

          v54[0] = 0;
          v38 = objc_allocWithZone((Class)type metadata accessor for EpisodeInfoView());
          v39 = sub_1B80D8((char *)v54, (uint64_t)&_swiftEmptySetSingleton);
          v40 = *(void **)(v2 + v7);
          *(_QWORD *)(v2 + v7) = v39;

          v41 = *(_QWORD *)(v2 + v7);
          if (v41)
          {
            v42 = (uint64_t *)(v41 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher);
            swift_beginAccess(v41 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher, v54, 0, 0);
            v43 = *v42;
            v53 = v43;
            v44 = swift_allocObject(&unk_392328, 24, 7);
            swift_unknownObjectWeakInit(v44 + 16, v2);
            swift_retain(v43);
            v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5470);
            v46 = sub_D2C94();
            v47 = Publisher<>.sink(receiveValue:)(sub_2D1C54, v44, v45, v46);
            swift_release(v44);
            swift_release(v53);
            v48 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playStateSubscription);
            *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playStateSubscription) = v47;
            *(_QWORD *)&v49 = swift_release(v48).n128_u64[0];
            v50 = *(void **)(v2 + v9);
            if (v50)
            {
              objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0, v49);
              v51 = *(void **)(v2 + v7);
              if (v51)
              {
                objc_msgSend(v51, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                v52 = *(void **)(v2 + v36);
                if (v52)
                {
                  objc_msgSend(v52, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                  return;
                }
LABEL_25:
                __break(1u);
                return;
              }
LABEL_24:
              __break(1u);
              goto LABEL_25;
            }
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_21;
  }
}

void sub_2CFE38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  uint64_t v8;

  v3 = objc_opt_self(UIView);
  v4 = swift_allocObject(&unk_392350, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_D2CE0;
  *(_QWORD *)(v4 + 24) = a2;
  v7[4] = sub_101EC;
  v8 = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_920D4;
  v7[3] = &block_descriptor_78;
  v5 = _Block_copy(v7);
  v6 = v8;
  swift_retain(a2);
  swift_retain(v4);
  objc_msgSend((id)v3, "performWithoutAnimation:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v4, "", 186, 92, 44, 1);
  swift_release(a2);
  swift_release(v4);
  if ((v3 & 1) != 0)
    __break(1u);
}

void sub_2CFF58()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  id v77;
  uint64_t v78;
  char *v79;
  Class isa;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView;
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_33;
  }
  objc_msgSend(v2, "removeFromSuperview");
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView;
  v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView);
  if (!v4)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  objc_msgSend(v4, "removeFromSuperview");
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView;
  v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView);
  if (!v6)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v6, "removeFromSuperview");
  v7 = objc_msgSend(v0, "contentView");
  if (!*(_QWORD *)((char *)v0 + v1))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = v7;
  objc_msgSend(v7, "addSubview:");

  v9 = objc_msgSend(v0, "contentView");
  if (!*(_QWORD *)((char *)v0 + v3))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v10 = v9;
  objc_msgSend(v9, "addSubview:");

  v11 = objc_msgSend(v0, "contentView");
  if (!*(_QWORD *)((char *)v0 + v5))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v12 = v11;
  v79 = (char *)v5;
  objc_msgSend(v11, "addSubview:");

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v14 = swift_allocObject(v13, 128, 7);
  *(_OWORD *)(v14 + 16) = xmmword_2F4A70;
  v15 = *(void **)((char *)v0 + v3);
  if (!v15)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v16 = objc_msgSend(v15, "topAnchor");
  v17 = objc_msgSend(v0, "contentView");
  v18 = objc_msgSend(v17, "layoutMarginsGuide");

  v19 = objc_msgSend(v18, "topAnchor");
  v20 = objc_msgSend(v16, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v14 + 32) = v20;
  v21 = *(void **)((char *)v0 + v3);
  if (!v21)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v22 = objc_msgSend(v21, "leadingAnchor");
  v23 = objc_msgSend(v0, "contentView");
  v24 = objc_msgSend(v23, "layoutMarginsGuide");

  v25 = objc_msgSend(v24, "leadingAnchor");
  v26 = objc_msgSend(v22, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v14 + 40) = v26;
  v27 = *(void **)((char *)v0 + v1);
  if (!v27)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v28 = objc_msgSend(v27, "leadingAnchor");
  v29 = *(void **)((char *)v0 + v3);
  if (!v29)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v30 = objc_msgSend(v29, "trailingAnchor");
  if (qword_3CFE78 != -1)
    swift_once(&qword_3CFE78, sub_2CF7F0);
  v31 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v30, *(double *)&qword_3E18D0);

  *(_QWORD *)(v14 + 48) = v31;
  v32 = *(void **)((char *)v0 + v1);
  if (!v32)
    goto LABEL_42;
  v33 = objc_msgSend(v32, "topAnchor");
  v34 = *(void **)((char *)v0 + v3);
  if (!v34)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v35 = objc_msgSend(v34, "topAnchor");
  if (qword_3CFE70 != -1)
    swift_once(&qword_3CFE70, sub_2CF7E0);
  v36 = objc_msgSend(v33, "constraintEqualToAnchor:constant:", v35, *(double *)&qword_3E18C8);

  *(_QWORD *)(v14 + 56) = v36;
  v37 = objc_msgSend(v0, "contentView");
  v38 = objc_msgSend(v37, "layoutMarginsGuide");

  v39 = objc_msgSend(v38, "trailingAnchor");
  v40 = *(void **)((char *)v0 + v1);
  if (!v40)
    goto LABEL_44;
  v41 = objc_msgSend(v40, "trailingAnchor");
  v42 = objc_msgSend(v39, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v14 + 64) = v42;
  v43 = *(void **)((char *)v0 + v1);
  if (!v43)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v44 = objc_msgSend(v43, "heightAnchor");
  if (qword_3CFE80 != -1)
    swift_once(&qword_3CFE80, sub_2CF800);
  v45 = objc_retainAutoreleasedReturnValue(objc_msgSend(v44, "constraintEqualToConstant:", *((double *)&xmmword_3E18D8
                                                                                           + 1)));

  *(_QWORD *)(v14 + 72) = v45;
  v46 = *(void **)((char *)v0 + v1);
  if (!v46)
    goto LABEL_46;
  v47 = objc_msgSend(v46, "widthAnchor");
  v48 = objc_msgSend(v47, "constraintEqualToConstant:", *(double *)&xmmword_3E18D8);

  *(_QWORD *)(v14 + 80) = v48;
  v49 = *(void **)&v79[(_QWORD)v0];
  if (!v49)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v50 = objc_msgSend(v49, "topAnchor");
  v51 = *(void **)((char *)v0 + v1);
  if (!v51)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v52 = objc_msgSend(v51, "bottomAnchor");
  if (qword_3CFE88 != -1)
    swift_once(&qword_3CFE88, sub_2CF81C);
  v53 = objc_msgSend(v50, "constraintGreaterThanOrEqualToAnchor:constant:", v52, *(double *)&qword_3E18E8);

  *(_QWORD *)(v14 + 88) = v53;
  v54 = *(void **)&v79[(_QWORD)v0];
  if (!v54)
    goto LABEL_49;
  v55 = objc_msgSend(v54, "topAnchor");
  v56 = *(void **)((char *)v0 + v3);
  if (!v56)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v57 = objc_msgSend(v56, "bottomAnchor");
  v58 = objc_msgSend(v55, "constraintGreaterThanOrEqualToAnchor:constant:", v57, *(double *)&qword_3E18E8);

  *(_QWORD *)(v14 + 96) = v58;
  v59 = *(void **)&v79[(_QWORD)v0];
  if (!v59)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v60 = objc_msgSend(v59, "leadingAnchor");
  v61 = objc_msgSend(v0, "contentView");
  v62 = objc_msgSend(v61, "layoutMarginsGuide");

  v63 = objc_msgSend(v62, "leadingAnchor");
  v64 = objc_msgSend(v60, "constraintEqualToAnchor:constant:", v63, 0.0);

  *(_QWORD *)(v14 + 104) = v64;
  v65 = objc_msgSend(v0, "contentView");
  v66 = objc_msgSend(v65, "layoutMarginsGuide");

  v67 = objc_msgSend(v66, "trailingAnchor");
  v68 = *(void **)&v79[(_QWORD)v0];
  if (!v68)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v69 = objc_msgSend(v68, "trailingAnchor");
  v70 = objc_msgSend(v67, "constraintEqualToAnchor:", v69);

  *(_QWORD *)(v14 + 112) = v70;
  v71 = objc_msgSend(v0, "contentView");
  v72 = objc_msgSend(v71, "layoutMarginsGuide");

  v73 = objc_msgSend(v72, "bottomAnchor");
  v74 = *(void **)&v79[(_QWORD)v0];
  if (v74)
  {
    v75 = (void *)objc_opt_self(NSLayoutConstraint);
    v76 = objc_msgSend(v74, "bottomAnchor");
    v77 = objc_msgSend(v73, "constraintEqualToAnchor:", v76);

    *(_QWORD *)(v14 + 120) = v77;
    specialized Array._endMutation()(v78);
    sub_12D34();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v75, "activateConstraints:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

    return;
  }
LABEL_53:
  __break(1u);
}

void sub_2D07E4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  char *v55;
  Class isa;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v1, "removeFromSuperview");
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView;
  v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView);
  if (!v3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(v3, "removeFromSuperview");
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView;
  v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView);
  if (!v5)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v5, "removeFromSuperview");
  v6 = objc_msgSend(v0, "contentView");
  if (!*(_QWORD *)((char *)v0 + v2))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v7 = v6;
  objc_msgSend(v6, "addSubview:");

  v8 = objc_msgSend(v0, "contentView");
  if (!*(_QWORD *)((char *)v0 + v4))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v9 = v8;
  objc_msgSend(v8, "addSubview:");

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v11 = swift_allocObject(v10, 88, 7);
  *(_OWORD *)(v11 + 16) = xmmword_2FE850;
  v12 = *(void **)((char *)v0 + v2);
  if (!v12)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v55 = (char *)v4;
  v13 = objc_msgSend(v12, "topAnchor");
  v14 = objc_msgSend(v0, "contentView");
  v15 = objc_msgSend(v14, "layoutMarginsGuide");

  v16 = objc_msgSend(v15, "topAnchor");
  v17 = objc_msgSend(v13, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v11 + 32) = v17;
  v18 = *(void **)((char *)v0 + v2);
  if (!v18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v19 = objc_msgSend(v18, "leadingAnchor");
  v20 = objc_msgSend(v0, "contentView");
  v21 = objc_msgSend(v20, "layoutMarginsGuide");

  v22 = objc_msgSend(v21, "leadingAnchor");
  v23 = objc_msgSend(v19, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v11 + 40) = v23;
  v24 = objc_msgSend(v0, "contentView");
  v25 = objc_msgSend(v24, "layoutMarginsGuide");

  v26 = objc_msgSend(v25, "trailingAnchor");
  v27 = *(void **)((char *)v0 + v2);
  if (!v27)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v28 = objc_msgSend(v27, "trailingAnchor");
  v29 = objc_msgSend(v26, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v11 + 48) = v29;
  v30 = *(void **)&v55[(_QWORD)v0];
  if (!v30)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v31 = objc_msgSend(v30, "topAnchor");
  v32 = *(void **)((char *)v0 + v2);
  if (!v32)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v33 = objc_msgSend(v32, "bottomAnchor");
  if (qword_3CFE88 != -1)
    swift_once(&qword_3CFE88, sub_2CF81C);
  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, *(double *)&qword_3E18E8);

  *(_QWORD *)(v11 + 56) = v34;
  v35 = *(void **)&v55[(_QWORD)v0];
  if (!v35)
    goto LABEL_27;
  v36 = objc_msgSend(v35, "leadingAnchor");
  v37 = objc_msgSend(v0, "contentView");
  v38 = objc_msgSend(v37, "layoutMarginsGuide");

  v39 = objc_msgSend(v38, "leadingAnchor");
  v40 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v39, 0.0);

  *(_QWORD *)(v11 + 64) = v40;
  v41 = objc_msgSend(v0, "contentView");
  v42 = objc_msgSend(v41, "layoutMarginsGuide");

  v43 = objc_msgSend(v42, "trailingAnchor");
  v44 = *(void **)&v55[(_QWORD)v0];
  if (!v44)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v45 = objc_msgSend(v44, "trailingAnchor");
  v46 = objc_msgSend(v43, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v11 + 72) = v46;
  v47 = objc_msgSend(v0, "contentView");
  v48 = objc_msgSend(v47, "layoutMarginsGuide");

  v49 = objc_msgSend(v48, "bottomAnchor");
  v50 = *(void **)&v55[(_QWORD)v0];
  if (v50)
  {
    v51 = (void *)objc_opt_self(NSLayoutConstraint);
    v52 = objc_msgSend(v50, "bottomAnchor");
    v53 = objc_msgSend(v49, "constraintEqualToAnchor:", v52);

    *(_QWORD *)(v11 + 80) = v53;
    specialized Array._endMutation()(v54);
    sub_12D34();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v51, "activateConstraints:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

    return;
  }
LABEL_29:
  __break(1u);
}

void sub_2D0DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  char v17[24];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_objectGraph) = a1;
  swift_release(v4);
  swift_retain(a1);
  sub_2CFA30(v5);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView);
  if (!v6)
  {
    __break(1u);
    goto LABEL_6;
  }
  v7 = v6;
  sub_1D6A8(a1);

  v8 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView);
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = (uint64_t *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph];
  swift_beginAccess(&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph], v17, 1, 0);
  v10 = *v9;
  *v9 = a1;
  v11 = v8;
  swift_release(v10);
  v12 = type metadata accessor for ExplicitContentPresenter(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v16, v12, v12);
  v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter];
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter] = v16;

  swift_release(v13);
  v14 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView);
  if (v14)
  {
    v15 = v14;
    PlayControlsStackView.bind(to:)(a1);

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_2D0F00(uint64_t a1)
{
  char *v1;
  id v3;
  double Width;
  id v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id result;
  void *v17;
  uint64_t v18;
  id v19;
  objc_super v20;
  CGRect v21;
  CGRect v22;

  v20.receiver = v1;
  v20.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v20, "preferredLayoutAttributesFittingAttributes:", a1);
  objc_msgSend(v3, "bounds");
  Width = CGRectGetWidth(v21);
  v5 = objc_msgSend(v1, "contentView");
  objc_msgSend(v5, "directionalLayoutMargins");
  v7 = v6;

  v8 = Width - v7;
  v9 = objc_msgSend(v1, "contentView");
  objc_msgSend(v9, "directionalLayoutMargins");
  v11 = v10;

  objc_msgSend(v3, "bounds");
  CGRectGetHeight(v22);
  v12 = objc_msgSend(v1, "contentView");
  objc_msgSend(v12, "directionalLayoutMargins");

  v13 = objc_msgSend(v1, "contentView");
  objc_msgSend(v13, "directionalLayoutMargins");

  sub_2D1188(v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_shouldRenderEpisodeArtwork], v8 - v11);
  v14 = objc_msgSend(v1, "contentView");
  objc_msgSend(v14, "directionalLayoutMargins");

  v15 = objc_msgSend(v1, "contentView");
  objc_msgSend(v15, "directionalLayoutMargins");

  objc_msgSend(v3, "size");
  result = objc_msgSend(v3, "setSize:");
  v17 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView];
  if (v17)
  {
    v18 = qword_3CF348;
    v19 = v17;
    if (v18 != -1)
      swift_once(&qword_3CF348, sub_10BB04);

    if (qword_3CFE88 != -1)
      swift_once(&qword_3CFE88, sub_2CF81C);
    objc_msgSend(v3, "size");
    objc_msgSend(v3, "setSize:");
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2D1188(char a1, double a2)
{
  uint64_t v2;
  double v4;
  void *v5;
  double v6;
  id v7;
  void *v8;
  id v9;

  if ((a1 & 1) == 0)
  {
    v8 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView);
    if (v8)
    {
      v9 = v8;
      EpisodeInfoView.prepareForLayout(fitting:)(a2);

      return;
    }
    goto LABEL_13;
  }
  if (qword_3CFE80 != -1)
    swift_once(&qword_3CFE80, sub_2CF800);
  v4 = *(double *)&xmmword_3E18D8;
  if (qword_3CFE78 != -1)
    swift_once(&qword_3CFE78, sub_2CF7F0);
  v5 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView);
  if (!v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  v6 = a2 - v4 - *(double *)&qword_3E18D0;
  v7 = v5;
  EpisodeInfoView.prepareForLayout(fitting:)(v6);

  if (qword_3CFE70 != -1)
    swift_once(&qword_3CFE70, sub_2CF7E0);
}

void sub_2D1308()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15[24];
  objc_super v16;

  v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, "prepareForReuse");
  v2 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView];
  if (!v2)
    goto LABEL_17;
  v3 = (uint64_t *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables];
  swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables], v15, 1, 0);
  v4 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
    if (v4 < 0)
      v9 = *v3;
    else
      v9 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*v3, 2);
    v10 = v2;
    v5 = _CocoaArrayWrapper.endIndex.getter(v9);
    if (!v5)
      goto LABEL_14;
  }
  else
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(*v3, 2);
    v6 = v2;
    if (!v5)
      goto LABEL_14;
  }
  if (v5 < 1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    }
    else
    {
      v8 = *(_QWORD *)(v4 + 8 * i + 32);
      swift_retain(v8);
    }
    AnyCancellable.cancel()();
    swift_release(v8);
  }
LABEL_14:
  swift_bridgeObjectRelease_n(v4, 2);
  v11 = *v3;
  *v3 = (uint64_t)&_swiftEmptyArrayStorage;

  swift_bridgeObjectRelease(v11);
  v12 = *(char **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView];
  if (v12)
  {
    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscription];
    *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscription] = 0;
    v14 = v12;
    swift_release(v13);
    objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView], "setImage:", 0);
    objc_msgSend(v14, "invalidateIntrinsicContentSize");

    return;
  }
LABEL_18:
  __break(1u);
}

uint64_t type metadata accessor for SingleShowEpisodeCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21SingleShowEpisodeCell);
}

void sub_2D1650(uint64_t *a1)
{
  sub_2D1658(*a1);
}

void sub_2D1658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  __n128 v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  __int128 v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v4);
  v50 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ArtworkRequest(0);
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  __chkstk_darwin(v6);
  v47 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v46 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - v18;
  LegacyEpisodeLockup.dedupedEpisodeArtwork.getter(v20);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v21(v19, 1, v8) == 1)
  {
    v23 = 0;
  }
  else
  {
    v24 = type metadata accessor for Podcasts(0, v22);
    *((_QWORD *)&v52 + 1) = v24;
    v53 = sub_239FC(&qword_3D2F80, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
    v25 = __swift_allocate_boxed_opaque_existential_0(&v51);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v25, enum case for Podcasts.episodeArtwork(_:), v24);
    v23 = isFeatureEnabled(_:)(&v51);
    __swift_destroy_boxed_opaque_existential_0(&v51);
  }
  v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_shouldRenderEpisodeArtwork;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_shouldRenderEpisodeArtwork) = v23 & 1;
  v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsPresenter);
  if (!v27)
  {
    __break(1u);
    goto LABEL_21;
  }
  swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsPresenter));
  sub_2B2D0C(a1);
  swift_release(v27);
  v28 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView);
  if (!v28)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v29 = v28;
  sub_1BA170(a1, 0);
  sub_1BA4B4();
  sub_1BA5E4();
  sub_1BA9D4(a1);
  v31 = type metadata accessor for LibraryEpisodeLockup(0, v30);
  if (swift_dynamicCastClass(a1, v31))
  {
    swift_retain(a1);
    sub_1BADF4();
    swift_release(a1);
  }
  else
  {
    v33 = LegacyLockup.adamId.getter(v32);
    if ((AdamID.isEmpty.getter(v33) & 1) == 0)
    {
      v35 = LegacyLockup.adamId.getter(v34);
      sub_1BAFF4(v35);
    }
  }
  EpisodeInfoView.beginUpdates()();

  if ((*(_BYTE *)(v2 + v26) & 1) == 0)
    goto LABEL_18;
  sub_DA064((uint64_t)v19, (uint64_t)v16);
  if (v21(v16, 1, v8) == 1)
  {
    sub_44C28((uint64_t)v16);
LABEL_19:
    sub_44C28((uint64_t)v19);
    return;
  }
  sub_2376C((uint64_t)v16, (uint64_t)v13);
  v36 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView);
  if (v36)
  {
    v37 = qword_3CFE80;
    v38 = v36;
    if (v37 != -1)
      swift_once(&qword_3CFE80, sub_2CF800);
    v39 = xmmword_3E18D8;
    v40 = *(double *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_displayScale);
    v41 = v46;
    sub_19C4C((uint64_t)v13, v46, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    v42 = type metadata accessor for CropCode(0);
    v43 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v50, 1, 1, v42);
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
    v44 = v47;
    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v41, 1, 0, v43, 0, _swiftEmptyArrayStorage, &v51, *(double *)&v39, *((double *)&v39 + 1), v40);
    sub_1DAA4(v44);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v44, v49);

    sub_239C0((uint64_t)v13);
    if (*(_BYTE *)(v2 + v26) == 1)
    {
      sub_2CFF58();
      goto LABEL_19;
    }
LABEL_18:
    sub_2D07E4();
    goto LABEL_19;
  }
LABEL_22:
  __break(1u);
}

double sub_2D1AC8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_objectGraph)).n128_u64[0];
  return result;
}

uint64_t sub_2D1ADC(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3E1990, v3, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowEpisodeCell, (uint64_t)&unk_306E40);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_2D1B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3E1990, a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowEpisodeCell, (uint64_t)&unk_306E40);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_2D1B80(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E1978, a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowEpisodeCell, (uint64_t)&unk_306D18);
}

uint64_t sub_2D1BAC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5CF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowEpisodeCell, (uint64_t)&unk_306DA0);
}

uint64_t sub_2D1BD8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E1980, a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowEpisodeCell, (uint64_t)&unk_306D78);
}

uint64_t sub_2D1C04(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3E1988, a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowEpisodeCell, (uint64_t)&unk_306DD0);
}

uint64_t sub_2D1C30()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_2D1C54(uint64_t a1)
{
  uint64_t v1;

  sub_2CFE38(a1, v1);
}

uint64_t sub_2D1C5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double block_copy_helper_78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_78(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_2D1C84()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_episodeInfoView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsPresenter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playControlsView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_artworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_playStateSubscription] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_shouldRenderEpisodeArtwork] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_objectGraph] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SingleShowEpisodeCell_displayScale] = 0x3FF0000000000000;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/SingleShowEpisodeCell.swift", 51, 2, 66, 0);
  __break(1u);
}

__n128 sub_2D1D64@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_touchInsets + 32);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_touchInsets);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_touchInsets + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

void sub_2D1D84(uint64_t a1)
{
  uint64_t v1;

  sub_123804(a1, v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_touchInsets);
  type metadata accessor for DebugInsetsView();
  sub_2D1DCC(v1, a1);
}

void sub_2D1DCC(uint64_t isEscapingClosureAtFileLocation, uint64_t a2)
{
  uint64_t v2;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void **v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;

  if ((byte_3E1999 & 1) == 0)
  {
    byte_3E1999 = 1;
    v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v6 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
    v23 = sub_2D25C4;
    v24 = 0;
    v19 = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_2D26B0;
    v22 = &block_descriptor_79;
    v7 = _Block_copy(&v19);
    v8 = objc_msgSend(v5, "addObserverForName:object:queue:usingBlock:", NSUserDefaultsDidChangeNotification, 0, v6, v7);
    _Block_release(v7);
    swift_unknownObjectRelease(v8);

  }
  if (qword_3CFE98 != -1)
    swift_once(&qword_3CFE98, sub_2D2500);
  if ((byte_3E1998 & 1) != 0)
  {
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_3924F8, 65, 7);
    *(_QWORD *)(v10 + 16) = v2;
    *(_QWORD *)(v10 + 24) = isEscapingClosureAtFileLocation;
    sub_123804(a2, v10 + 32);
    v11 = swift_allocObject(&unk_392520, 32, 7);
    *(_QWORD *)(v11 + 16) = sub_2D2E28;
    *(_QWORD *)(v11 + 24) = v10;
    v23 = sub_101EC;
    v24 = v11;
    v19 = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_920D4;
    v22 = &block_descriptor_6_11;
    v12 = _Block_copy(&v19);
    v13 = v24;
    v14 = (id)isEscapingClosureAtFileLocation;
    swift_retain(v11);
    objc_msgSend(v9, "performWithoutAnimation:", v12, swift_release(v13).n128_f64[0]);
    _Block_release(v12);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v11, "", 133, 72, 40, 1);
    swift_release(v10);
    swift_release(v11);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_debugInsetsView;
  v16 = *(void **)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_debugInsetsView);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v17, "removeFromSuperview");
    v18 = *(void **)(isEscapingClosureAtFileLocation + v15);
    *(_QWORD *)(isEscapingClosureAtFileLocation + v15) = 0;

  }
}

id sub_2D2194(uint64_t a1, CGFloat a2, CGFloat a3)
{
  char *v3;
  double *v6;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  objc_super v15;
  CGPoint v16;
  CGRect v17;

  v6 = (double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_touchInsets];
  if ((v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_touchInsets + 32] & 1) != 0)
  {
    v15.receiver = v3;
    v15.super_class = (Class)type metadata accessor for ButtonWithTouchInsets();
    return objc_msgSendSuper2(&v15, "pointInside:withEvent:", a1, a2, a3);
  }
  else
  {
    v10 = *v6;
    v9 = v6[1];
    objc_msgSend(v3, "bounds");
    v17.origin.x = UIEdgeInsetsInsetRect(v11, v12, v13, v14, v10, v9);
    v16.x = a2;
    v16.y = a3;
    return (id)CGRectContainsPoint(v17, v16);
  }
}

uint64_t type metadata accessor for ButtonWithTouchInsets()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21ButtonWithTouchInsets);
}

void sub_2D234C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ButtonWithTouchInsets();
  objc_msgSendSuper2(&v4, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_debugInsetsView];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "bringSubviewToFront:", v2);
    v3 = objc_msgSend(v2, "layer");
    objc_msgSend(v3, "removeAllAnimations");

  }
}

void sub_2D2494()
{
  uint64_t v0;

}

id ButtonWithTouchInsets.__deallocating_deinit(uint64_t a1)
{
  return sub_1E63D4(a1, type metadata accessor for ButtonWithTouchInsets);
}

uint64_t sub_2D24B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t (*v4)(_OWORD *);
  __int128 v5;
  _OWORD v7[2];
  char v8;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(uint64_t (**)(_OWORD *))(a3 + 16);
  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  v8 = v3;
  return v4(v7);
}

uint64_t method lookup function for ButtonWithTouchInsets(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ButtonWithTouchInsets);
}

void sub_2D2500()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  if (qword_3CFEF0 != -1)
    swift_once(&qword_3CFEF0, sub_2D71DC);
  v1 = type metadata accessor for NSUserDefaults.Keys(0);
  __swift_project_value_buffer(v1, (uint64_t)qword_3E1DC0);
  NSUserDefaults.Keys.rawValue.getter();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  LOBYTE(v3) = objc_msgSend(v0, "BOOLForKey:", v4, swift_bridgeObjectRelease(v3).n128_f64[0]);

  byte_3E1998 = v3;
}

void sub_2D25C4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;

  if (qword_3CFE98 != -1)
    swift_once(&qword_3CFE98, sub_2D2500);
  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  if (qword_3CFEF0 != -1)
    swift_once(&qword_3CFEF0, sub_2D71DC);
  v1 = type metadata accessor for NSUserDefaults.Keys(0);
  __swift_project_value_buffer(v1, (uint64_t)qword_3E1DC0);
  NSUserDefaults.Keys.rawValue.getter();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  LOBYTE(v3) = objc_msgSend(v0, "BOOLForKey:", v4, swift_bridgeObjectRelease(v3).n128_f64[0]);

  byte_3E1998 = v3;
}

uint64_t sub_2D26B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, __n128);
  __n128 v10;
  uint64_t v12;

  v4 = type metadata accessor for Notification(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, __n128))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v10 = swift_retain(v8);
  v9(v7, v10);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_2D2754(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[4];
  char v17;

  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_debugInsetsView;
  v6 = *(void **)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_debugInsetsView];
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v7, "removeFromSuperview");
    v8 = *(void **)&a2[v5];
    *(_QWORD *)&a2[v5] = 0;

  }
  sub_123804(a3, (uint64_t)v16);
  if ((v17 & 1) == 0)
  {
    v9 = *(double *)v16;
    v10 = *(double *)&v16[1];
    v11 = *(double *)&v16[2];
    v12 = *(double *)&v16[3];
    v13 = objc_allocWithZone((Class)type metadata accessor for DebugInsetsView());
    sub_2D2888(a2, 0.0, 0.0, 0.0, 0.0, v9, v10, v11, v12);
    v14 = *(void **)&a2[v5];
    *(_QWORD *)&a2[v5] = v15;

  }
}

void sub_2D2888(void *a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  void *v9;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  _QWORD v26[5];
  uint64_t v27;
  objc_super v28;

  v28.receiver = v9;
  v28.super_class = (Class)type metadata accessor for DebugInsetsView();
  v19 = objc_msgSendSuper2(&v28, "initWithFrame:", a2, a3, a4, a5);
  v20 = (void *)objc_opt_self(UIView);
  v21 = swift_allocObject(&unk_392570, 64, 7);
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = v19;
  *(double *)(v21 + 32) = a6;
  *(double *)(v21 + 40) = a7;
  *(double *)(v21 + 48) = a8;
  *(double *)(v21 + 56) = a9;
  v22 = swift_allocObject(&unk_392598, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_2D2E70;
  *(_QWORD *)(v22 + 24) = v21;
  v26[4] = sub_EC6A0;
  v27 = v22;
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 1107296256;
  v26[2] = sub_920D4;
  v26[3] = &block_descriptor_16_3;
  v23 = _Block_copy(v26);
  v24 = v27;
  v19;
  v25 = a1;
  swift_retain(v22);
  objc_msgSend(v20, "performWithoutAnimation:", v23, swift_release(v24).n128_f64[0]);

  _Block_release(v23);
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation(v22, "", 133, 91, 40, 1);
  swift_release(v21);
  swift_release(v22);
  if ((v25 & 1) != 0)
    __break(1u);
}

void sub_2D2A54(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;

  objc_msgSend(a1, "addSubview:", a2);
  objc_msgSend(a2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = objc_msgSend(a2, "leftAnchor");
  v13 = objc_msgSend(a1, "leftAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, a4);

  objc_msgSend(v14, "setActive:", 1);
  v15 = objc_msgSend(a2, "rightAnchor");
  v16 = objc_msgSend(a1, "rightAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -a6);

  objc_msgSend(v17, "setActive:", 1);
  v18 = objc_msgSend(a2, "topAnchor");
  v19 = objc_msgSend(a1, "topAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, a3);

  objc_msgSend(v20, "setActive:", 1);
  v21 = objc_msgSend(a2, "bottomAnchor");
  v22 = objc_msgSend(a1, "bottomAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, -a5);

  objc_msgSend(v23, "setActive:", 1);
  objc_msgSend(a2, "setNeedsLayout");
  objc_msgSend(a2, "setUserInteractionEnabled:", 0);
  v24 = objc_msgSend(a2, "layer");
  v25 = objc_msgSend((id)objc_opt_self(UIColor), "redColor");
  v26 = objc_msgSend(v25, "CGColor");

  objc_msgSend(v24, "setBorderColor:", v26);
  v27 = objc_msgSend(a2, "layer");
  objc_msgSend(v27, "setBorderWidth:", 1.0);

  v28 = objc_msgSend(a2, "layer");
  objc_msgSend(v28, "removeAllAnimations");

}

id sub_2D2DBC()
{
  return sub_1E63D4(0, type metadata accessor for DebugInsetsView);
}

uint64_t type metadata accessor for DebugInsetsView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_BB98A75D80CE45260B3B309CF564DDB015DebugInsetsView);
}

double block_copy_helper_79(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_79(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2D2E04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 65, 7);
}

void sub_2D2E28()
{
  uint64_t v0;

  sub_2D2754(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), v0 + 32);
}

uint64_t sub_2D2E34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2D2E44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

void sub_2D2E70()
{
  uint64_t v0;

  sub_2D2A54(*(void **)(v0 + 16), *(void **)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56));
}

uint64_t sub_2D2E80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_2D2EA0()
{
  if (qword_3CF570 != -1)
    swift_once(&qword_3CF570, sub_140714);
  qword_3E1A00 = qword_3FBD30;
  *(_QWORD *)algn_3E1A08 = *(_QWORD *)algn_3FBD38;
  qword_3E1A10 = qword_3FBD40;
  unk_3E1A18 = qword_3FBD48;
  qword_3E1A20 = qword_3FBD50;
  qword_3E1A28 = *(_QWORD *)byte_3FBD58;
  qword_3E1A30 = qword_3FBD60;
  unk_3E1A38 = qword_3FBD68;
  qword_3E1A40 = qword_3FBD70;
  unk_3E1A48 = qword_3FBD78;
  qword_3E1A50 = qword_3FBD80;
  word_3E1A58 = word_3FBD88;
  return sub_DDA0((void *)qword_3FBD30, *(uint64_t *)algn_3FBD38, qword_3FBD40, qword_3FBD48, qword_3FBD50, byte_3FBD58[0], (void *)qword_3FBD60, qword_3FBD68, qword_3FBD70, qword_3FBD78, qword_3FBD80, word_3FBD88, SHIBYTE(word_3FBD88));
}

id sub_2D2F44()
{
  __int16 v0;

  if (qword_3CFEA0 != -1)
    swift_once(&qword_3CFEA0, sub_2D2EA0);
  if (HIBYTE(word_3E1A58))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3E1A60 = xmmword_302760;
  byte_3E1A70 = 0;
  qword_3E1A78 = qword_3E1A00;
  qword_3E1A80 = *(_QWORD *)algn_3E1A08;
  qword_3E1A88 = qword_3E1A10;
  qword_3E1A90 = qword_3E1A18;
  qword_3E1A98 = qword_3E1A20;
  qword_3E1AA0 = qword_3E1A28;
  qword_3E1AA8 = qword_3E1A30;
  qword_3E1AB0 = qword_3E1A38;
  qword_3E1AB8 = qword_3E1A40;
  qword_3E1AC0 = qword_3E1A48;
  qword_3E1AC8 = qword_3E1A50;
  word_3E1AD0 = v0 | word_3E1A58 | 0x8000;
  return sub_DDA0((void *)qword_3E1A00, *(uint64_t *)algn_3E1A08, qword_3E1A10, qword_3E1A18, qword_3E1A20, qword_3E1A28, (void *)qword_3E1A30, qword_3E1A38, qword_3E1A40, qword_3E1A48, qword_3E1A50, word_3E1A58, SHIBYTE(word_3E1A58));
}

id sub_2D3008()
{
  __int16 v0;

  if (qword_3CFEA0 != -1)
    swift_once(&qword_3CFEA0, sub_2D2EA0);
  if (HIBYTE(word_3E1A58))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3E1AD8 = xmmword_306F10;
  byte_3E1AE8 = 0;
  qword_3E1AF0 = qword_3E1A00;
  qword_3E1AF8 = *(_QWORD *)algn_3E1A08;
  qword_3E1B00 = qword_3E1A10;
  qword_3E1B08 = qword_3E1A18;
  qword_3E1B10 = qword_3E1A20;
  qword_3E1B18 = qword_3E1A28;
  qword_3E1B20 = qword_3E1A30;
  qword_3E1B28 = qword_3E1A38;
  qword_3E1B30 = qword_3E1A40;
  qword_3E1B38 = qword_3E1A48;
  qword_3E1B40 = qword_3E1A50;
  word_3E1B48 = v0 | word_3E1A58 | 0x8000;
  return sub_DDA0((void *)qword_3E1A00, *(uint64_t *)algn_3E1A08, qword_3E1A10, qword_3E1A18, qword_3E1A20, qword_3E1A28, (void *)qword_3E1A30, qword_3E1A38, qword_3E1A40, qword_3E1A48, qword_3E1A50, word_3E1A58, SHIBYTE(word_3E1A58));
}

void sub_2D30CC()
{
  qword_3E1B50 = 0x4034000000000000;
}

id sub_2D30DC(double a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v5;
  NSString v6;
  double v7;
  void *v8;
  NSString v9;

  v5 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textLabel];
  if (a3)
  {
    swift_bridgeObjectRetain(a3);
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&a1 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v5, "setText:", v6, a1);

  v8 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textInputField];
  if (a3)
  {
    v9 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v7 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v8, "setAccessibilityLabel:", v9, v7);

  return objc_msgSend(v3, "setNeedsLayout");
}

char *sub_2D31B0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  objc_class *v17;
  id v18;
  id v19;
  id v20;
  double left;
  double bottom;
  double right;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  _BYTE *v47;
  CGFloat *v48;
  _BYTE *v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  _BYTE *v55;
  CGFloat *v56;
  _BYTE *v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  id v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  objc_super v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int16 v90;

  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_minTextLabelWidth];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textChangedCallback];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_returnPressedCallback];
  *v11 = 0;
  v11[1] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_showBottomDivider] = 1;
  v12 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_bottomDividerInsets];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[32] = 1;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_showTopDivider] = 1;
  v13 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_topDividerInsets];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v13[32] = 1;
  type metadata accessor for DynamicTypeLabel();
  v14 = qword_3CFEA0;
  v15 = v4;
  if (v14 != -1)
    swift_once(&qword_3CFEA0, sub_2D2EA0);
  v79 = qword_3E1A00;
  v80 = *(_QWORD *)algn_3E1A08;
  v81 = qword_3E1A10;
  v82 = qword_3E1A18;
  v83 = qword_3E1A20;
  v84 = qword_3E1A28;
  v85 = qword_3E1A30;
  v86 = qword_3E1A38;
  v87 = qword_3E1A40;
  v88 = qword_3E1A48;
  v89 = qword_3E1A50;
  v90 = word_3E1A58;
  sub_DDA0((void *)qword_3E1A00, *(uint64_t *)algn_3E1A08, qword_3E1A10, qword_3E1A18, qword_3E1A20, qword_3E1A28, (void *)qword_3E1A30, qword_3E1A38, qword_3E1A40, qword_3E1A48, qword_3E1A50, word_3E1A58, SHIBYTE(word_3E1A58));
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textLabel] = sub_A96AC((uint64_t)&v79, 1, 0, 1);
  v16 = objc_msgSend(objc_allocWithZone((Class)UITextField), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textInputField] = v16;
  v17 = (objc_class *)type metadata accessor for DividerView();
  v18 = objc_msgSend(objc_allocWithZone(v17), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_topDivider] = v18;
  v19 = objc_msgSend(objc_allocWithZone(v17), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_bottomDivider] = v19;

  v78.receiver = v15;
  v78.super_class = (Class)type metadata accessor for TextInputCollectionViewCell();
  v20 = objc_msgSendSuper2(&v78, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v24 = (char *)v20;
  objc_msgSend(v24, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v25 = objc_msgSend(v24, "contentView");
  v26 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemGroupedBackgroundColor");
  objc_msgSend(v25, "setBackgroundColor:", v26);

  v27 = objc_msgSend(v24, "contentView");
  objc_msgSend(v27, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textLabel]);

  v28 = objc_msgSend(v24, "contentView");
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textInputField;
  v72 = OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textInputField;
  objc_msgSend(v28, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textInputField]);

  v30 = *(void **)&v24[v29];
  v31 = (void *)qword_3E1A00;
  v32 = qword_3E1A10;
  v76 = qword_3E1A18;
  v77 = *(_QWORD *)algn_3E1A08;
  v74 = qword_3E1A28;
  v75 = qword_3E1A20;
  v33 = qword_3E1A38;
  v73 = (void *)qword_3E1A30;
  v35 = qword_3E1A40;
  v34 = qword_3E1A48;
  v65 = qword_3E1A10;
  v66 = qword_3E1A40;
  v36 = qword_3E1A50;
  v67 = qword_3E1A48;
  v68 = qword_3E1A50;
  v37 = word_3E1A58;
  v38 = HIBYTE(word_3E1A58);
  v69 = word_3E1A58;
  v70 = HIBYTE(word_3E1A58);
  v63 = (id)objc_opt_self(UIContentSizeCategoryPreference);
  v71 = v30;
  v62 = v34;
  v39 = v24;
  v64 = v31;
  sub_DDA0(v31, v77, v32, v76, v75, v74, v73, v33, v35, v62, v36, v37, v38);
  v40 = objc_msgSend(v63, "system");
  v41 = objc_msgSend(v40, "preferredContentSizeCategory");

  v42 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v41);
  v79 = (uint64_t)v31;
  v80 = v77;
  v81 = v65;
  v82 = v76;
  v83 = v75;
  v84 = v74;
  v85 = (uint64_t)v73;
  v86 = v33;
  v87 = v66;
  v88 = v67;
  v89 = v68;
  LOBYTE(v90) = v69;
  HIBYTE(v90) = v70;
  v43 = sub_1D5728((uint64_t)&v79, v42);
  v44 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v43, 0.0);

  sub_DCC8(v64, v77, v65, v76, v75, v74, v73, v33, v66, v67, v68, v69, v70);
  objc_msgSend(v71, "setFont:", v44);

  v45 = *(void **)&v39[v72];
  objc_msgSend(v45, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v45, "addTarget:action:forControlEvents:", v39, "textFieldValueChanged", 0x20000);
  objc_msgSend(v45, "addTarget:action:forControlEvents:", v39, "textFieldEditingDidEndOnExit", 0x80000);
  v46 = OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_topDivider;
  v47 = *(_BYTE **)&v39[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_topDivider];
  v47[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_style] = 3;
  v48 = (CGFloat *)&v47[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorInset];
  *v48 = UIEdgeInsetsZero.top;
  v48[1] = left;
  v48[2] = bottom;
  v48[3] = right;
  v49 = v47;
  objc_msgSend(v49, "setNeedsLayout");
  objc_msgSend(v49, "setNeedsLayout");

  v50 = *(void **)&v39[v46];
  objc_msgSend(v50, "setHidden:", 1);
  v51 = qword_3CF090;
  v52 = v50;
  if (v51 != -1)
    swift_once(&qword_3CF090, sub_1EB44);
  objc_msgSend(v52, "setBackgroundColor:", qword_3FA918);

  v53 = objc_msgSend(v39, "contentView");
  objc_msgSend(v53, "addSubview:", *(_QWORD *)&v39[v46]);

  v54 = OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_bottomDivider;
  v55 = *(_BYTE **)&v39[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_bottomDivider];
  v55[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_style] = 3;
  v56 = (CGFloat *)&v55[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorInset];
  *v56 = UIEdgeInsetsZero.top;
  v56[1] = left;
  v56[2] = bottom;
  v56[3] = right;
  v57 = v55;
  objc_msgSend(v57, "setNeedsLayout");
  objc_msgSend(v57, "setNeedsLayout");

  v58 = *(void **)&v39[v54];
  objc_msgSend(v58, "setHidden:", 1);
  objc_msgSend(v58, "setBackgroundColor:", qword_3FA918);
  v59 = objc_msgSend(v39, "contentView");
  v60 = v58;
  objc_msgSend(v59, "addSubview:", v60);

  return v39;
}

id sub_2D3900()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double MinX;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double MinY;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int16 v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  double v76;
  double v77;
  double v78;
  double v79;
  void (*v80)(uint64_t, uint64_t);
  char *v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double Width;
  double v93;
  double v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t);
  void *v97;
  id v98;
  double v99;
  double v100;
  id v101;
  double v102;
  double v103;
  double v104;
  id v105;
  CGFloat v106;
  double v107;
  id v108;
  double v109;
  double v110;
  double v111;
  double v112;
  id result;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  unint64_t v137;
  double v138;
  double *v139;
  double v140;
  double v141;
  Swift::Int v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  double v148;
  double v149;
  double v150;
  double v151;
  double v152;
  double v153;
  double MaxY;
  unint64_t v155;
  double v156;
  double v157;
  double v158;
  double v159;
  double v160;
  double v161;
  double v162;
  double v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  uint64_t v169;
  double v170;
  double *v171;
  double v172;
  double v173;
  Swift::Int v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  void (*v188)(uint64_t, uint64_t, uint64_t);
  uint64_t v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  void *v203;
  uint64_t v204;
  void *v205;
  char *v206;
  void (*v207)(uint64_t, uint64_t);
  id v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  char v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  void (*v233)(_QWORD, _QWORD);
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  __int16 v237;
  objc_super v238;
  CGRect v239;
  CGRect v240;
  CGRect v241;
  CGRect v242;
  CGRect v243;
  CGRect v244;
  CGRect v245;
  CGRect v246;
  CGRect v247;
  CGRect v248;
  CGRect v249;
  CGRect v250;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v186 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v175 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for TextInputCollectionViewCell();
  v238.receiver = v1;
  v238.super_class = v5;
  objc_msgSendSuper2(&v238, "layoutSubviews");
  if (qword_3CFEA8 != -1)
    swift_once(&qword_3CFEA8, sub_2D2F44);
  v206 = v4;
  v205 = (void *)*((_QWORD *)&xmmword_3E1A60 + 1);
  v222 = xmmword_3E1A60;
  v221 = byte_3E1A70;
  v220 = qword_3E1A78;
  v219 = qword_3E1A80;
  v218 = qword_3E1A88;
  v217 = qword_3E1A90;
  v216 = qword_3E1A98;
  v215 = qword_3E1AA0;
  v214 = qword_3E1AA8;
  v213 = qword_3E1AB0;
  v211 = *((_QWORD *)&xmmword_3E1AB8 + 1);
  v212 = xmmword_3E1AB8;
  v210 = qword_3E1AC8;
  v209 = (unsigned __int16)word_3E1AD0;
  if (qword_3CFEB0 != -1)
    swift_once(&qword_3CFEB0, sub_2D3008);
  v203 = (void *)*((_QWORD *)&xmmword_3E1AD8 + 1);
  v204 = xmmword_3E1AD8;
  v202 = byte_3E1AE8;
  v201 = qword_3E1AF0;
  v200 = qword_3E1AF8;
  v199 = qword_3E1B00;
  v198 = qword_3E1B08;
  v197 = qword_3E1B10;
  v196 = qword_3E1B18;
  v195 = qword_3E1B20;
  v194 = qword_3E1B28;
  v192 = *((_QWORD *)&xmmword_3E1B30 + 1);
  v193 = xmmword_3E1B30;
  v191 = qword_3E1B40;
  v190 = (unsigned __int16)word_3E1B48;
  v6 = (double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_minTextLabelWidth];
  if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_minTextLabelWidth + 8] & 1) != 0)
  {
    objc_msgSend(v1, "bounds");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;
    objc_msgSend(v1, "layoutMargins");
    UIEdgeInsetsInsetRect(v8, v10, v12, v14, v15, v16);
    v19 = v18;
  }
  else
  {
    v19 = *v6;
    objc_msgSend(v1, "bounds");
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;
    objc_msgSend(v1, "layoutMargins");
    UIEdgeInsetsInsetRect(v21, v23, v25, v27, v28, v29);
  }
  v208 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textLabel];
  objc_msgSend(v208, "sizeThatFits:", v19, v17);
  v32 = v31;
  v33 = *v6;
  if (*((_BYTE *)v6 + 8))
    v33 = 0.0;
  if (v30 > v33)
    v34 = v30;
  else
    v34 = v33;
  objc_msgSend(v1, "bounds");
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  objc_msgSend(v1, "layoutMargins");
  v239.origin.x = UIEdgeInsetsInsetRect(v36, v38, v40, v42, v43, v44);
  MinX = CGRectGetMinX(v239);
  objc_msgSend(v1, "bounds");
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  objc_msgSend(v1, "layoutMargins");
  v240.origin.x = UIEdgeInsetsInsetRect(v47, v49, v51, v53, v54, v55);
  MinY = CGRectGetMinY(v240);
  v180 = (id)*((_QWORD *)&xmmword_3E1A60 + 1);
  v181 = xmmword_3E1A60;
  LODWORD(v179) = byte_3E1A70;
  v57 = (void *)qword_3E1A78;
  v58 = qword_3E1A80;
  v187 = v1;
  v59 = qword_3E1A88;
  v182 = (unsigned __int16)word_3E1AD0;
  v183 = qword_3E1AC8;
  v184 = *((_QWORD *)&xmmword_3E1AB8 + 1);
  v185 = xmmword_3E1AB8;
  v60 = qword_3E1A90;
  v61 = qword_3E1A98;
  v62 = qword_3E1AA0;
  v63 = (void *)qword_3E1AA8;
  v207 = (void (*)(uint64_t, uint64_t))qword_3E1AB0;
  sub_1472C((id)qword_3E1A78, qword_3E1A80, qword_3E1A88, qword_3E1A90, qword_3E1A98, qword_3E1AA0, (void *)qword_3E1AA8, qword_3E1AB0, xmmword_3E1AB8, *((uint64_t *)&xmmword_3E1AB8 + 1), qword_3E1AC8, word_3E1AD0);
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v64 = __swift_project_value_buffer(v2, (uint64_t)qword_3FCFB0);
  v65 = v186;
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v186 + 16);
  v67 = (uint64_t)v206;
  v189 = v64;
  v188 = v66;
  ((void (*)(char *))v66)(v206);
  v223 = v181;
  v224 = v180;
  v225 = v179;
  v226 = (uint64_t)v57;
  v227 = v58;
  v228 = v59;
  v178 = v60;
  v229 = v60;
  v230 = v61;
  v177 = v61;
  v176 = v62;
  v231 = v62;
  v232 = (uint64_t)v63;
  v175 = v63;
  v68 = v185;
  v233 = v207;
  v234 = v185;
  v69 = v184;
  v70 = v183;
  v235 = v184;
  v236 = v183;
  v71 = v182;
  v237 = v182;
  v181 = v58;
  v180 = v57;
  v72 = v208;
  v73 = objc_msgSend(v208, "traitCollection");
  v179 = v59;
  v74 = v73;
  sub_1DD06C((uint64_t)v73, v67, 0);
  v75 = v2;
  v77 = v76;

  objc_msgSend(v72, "firstBaselineFromTop");
  v79 = v77 - v78;
  v80 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v80(v67, v2);
  sub_14788(v180, v181, v179, v178, v177, v176, v175, (uint64_t)v207, v68, v69, v70, v71);
  objc_msgSend(v72, "setFrame:", MinX, MinY + v79, v34, v32);
  v81 = v187;
  objc_msgSend(v187, "bounds");
  v83 = v82;
  v85 = v84;
  v87 = v86;
  v89 = v88;
  objc_msgSend(v81, "layoutMargins");
  v241.origin.x = UIEdgeInsetsInsetRect(v83, v85, v87, v89, v90, v91);
  Width = CGRectGetWidth(v241);
  objc_msgSend(v72, "frame");
  v93 = Width - CGRectGetMaxX(v242);
  if (qword_3CFEB8 != -1)
    swift_once(&qword_3CFEB8, sub_2D30CC);
  v94 = v93 + *(double *)&qword_3E1B50;
  v95 = v189;
  v96 = v188;
  v188(v67, v189, v75);
  v223 = v222;
  v97 = v205;
  v224 = v205;
  v225 = v221;
  v226 = v220;
  v227 = v219;
  v228 = v218;
  v229 = v217;
  v230 = v216;
  v231 = v215;
  v232 = v214;
  v233 = (void (*)(_QWORD, _QWORD))v213;
  v234 = v212;
  v235 = v211;
  v236 = v210;
  v237 = v209;
  v98 = objc_msgSend(v81, "traitCollection");
  sub_1DD06C((uint64_t)v98, v67, 0);
  v100 = v99;

  v80(v67, v75);
  v96(v67, v95, v75);
  v223 = v204;
  v224 = v203;
  v225 = v202;
  v226 = v201;
  v227 = v200;
  v228 = v199;
  v229 = v198;
  v230 = v197;
  v231 = v196;
  v232 = v195;
  v233 = (void (*)(_QWORD, _QWORD))v194;
  v234 = v193;
  v235 = v192;
  v236 = v191;
  v237 = v190;
  v101 = objc_msgSend(v81, "traitCollection");
  sub_1DD06C((uint64_t)v101, v67, 0);
  v103 = v102;

  v80(v67, v75);
  v104 = v100 + v103;
  v207 = v80;
  v105 = v208;
  objc_msgSend(v208, "frame");
  v106 = CGRectGetMaxX(v243) + *(double *)&qword_3E1B50;
  objc_msgSend(v105, "frame");
  v107 = CGRectGetMinY(v244);
  v96(v67, v95, v75);
  v223 = v222;
  v224 = v97;
  v225 = v221;
  v226 = v220;
  v227 = v219;
  v228 = v218;
  v229 = v217;
  v230 = v216;
  v231 = v215;
  v232 = v214;
  v233 = (void (*)(_QWORD, _QWORD))v213;
  v234 = v212;
  v235 = v211;
  v236 = v210;
  v237 = v209;
  v108 = objc_msgSend(v105, "traitCollection");
  sub_1DD06C((uint64_t)v108, v67, 0);
  v110 = v109;

  objc_msgSend(v105, "firstBaselineFromTop");
  v112 = v110 - v111;
  v207(v67, v75);
  result = objc_msgSend(*(id *)&v81[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textInputField], "setFrame:", v106, v107 - v112, v94, v104);
  if (v81[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_showTopDivider] == 1)
  {
    objc_msgSend(v81, "bounds");
    v115 = v114;
    v117 = v116;
    v119 = v118;
    v121 = v120;
    objc_msgSend(v81, "layoutMargins");
    v245.origin.x = UIEdgeInsetsInsetRect(v115, v117, v119, v121, v122, v123);
    v124 = CGRectGetMinX(v245);
    objc_msgSend(v81, "bounds");
    v125 = CGRectGetMinY(v246);
    objc_msgSend(v81, "bounds");
    v127 = v126;
    v129 = v128;
    v131 = v130;
    v133 = v132;
    objc_msgSend(v81, "layoutMargins");
    v247.origin.x = UIEdgeInsetsInsetRect(v127, v129, v131, v133, v134, v135);
    v136 = CGRectGetWidth(v247);
    v137 = sub_1FEB8();
    if ((static UITraitCollection.interfaceIdiomIsMac.getter(v137) & 1) != 0)
      v138 = 1.0;
    else
      v138 = 0.5;
    v139 = (double *)&v81[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_topDividerInsets];
    if ((v81[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_topDividerInsets + 32] & 1) == 0)
    {
      v140 = v139[3];
      v124 = v139[1];
      objc_msgSend(v81, "bounds");
      v136 = v141;
      v142 = sub_F387C((uint64_t)&off_37A358);
      if (sub_310B0(0, v142))
        v136 = v136 - v124 - v140;
      sub_310B0(1uLL, v142);
      swift_bridgeObjectRelease(v142);
    }
    result = objc_msgSend(*(id *)&v81[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_topDivider], "setFrame:", v124, v125, v136, v138);
  }
  if (v81[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_showBottomDivider] == 1)
  {
    objc_msgSend(v81, "bounds");
    v144 = v143;
    v146 = v145;
    v148 = v147;
    v150 = v149;
    objc_msgSend(v81, "layoutMargins");
    v248.origin.x = UIEdgeInsetsInsetRect(v144, v146, v148, v150, v151, v152);
    v153 = CGRectGetMinX(v248);
    objc_msgSend(v81, "bounds");
    MaxY = CGRectGetMaxY(v249);
    v155 = sub_1FEB8();
    if ((static UITraitCollection.interfaceIdiomIsMac.getter(v155) & 1) != 0)
      v156 = 1.0;
    else
      v156 = 0.5;
    v157 = MaxY - v156;
    objc_msgSend(v81, "bounds");
    v159 = v158;
    v161 = v160;
    v163 = v162;
    v165 = v164;
    objc_msgSend(v81, "layoutMargins");
    v250.origin.x = UIEdgeInsetsInsetRect(v159, v161, v163, v165, v166, v167);
    v168 = CGRectGetWidth(v250);
    if ((static UITraitCollection.interfaceIdiomIsMac.getter(v169) & 1) != 0)
      v170 = 1.0;
    else
      v170 = 0.5;
    v171 = (double *)&v81[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_bottomDividerInsets];
    if ((v81[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_bottomDividerInsets + 32] & 1) == 0)
    {
      v172 = v171[3];
      v153 = v171[1];
      objc_msgSend(v81, "bounds");
      v168 = v173;
      v174 = sub_F387C((uint64_t)&off_37A388);
      if (sub_310B0(0, v174))
        v168 = v168 - v153 - v172;
      sub_310B0(1uLL, v174);
      swift_bridgeObjectRelease(v174);
    }
    return objc_msgSend(*(id *)&v81[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_bottomDivider], "setFrame:", v153, v157, v168, v170);
  }
  return result;
}

double sub_2D47C8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v1 = *(void (**)(uint64_t, uint64_t))(v0
                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textChangedCallback);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textChangedCallback + 8);
    v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textInputField), "text", swift_retain(v2).n128_f64[0]);
    if (v3)
    {
      v4 = v3;
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v7 = v6;

    }
    else
    {
      v5 = 0;
      v7 = 0;
    }
    v1(v5, v7);
    sub_1D618((uint64_t)v1, v2);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

id sub_2D494C()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for TextInputCollectionViewCell();
  objc_msgSendSuper2(&v11, "prepareForReuse");
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textInputField];
  objc_msgSend(v1, "setSecureTextEntry:", 0);
  objc_msgSend(v1, "setKeyboardType:", 0);
  objc_msgSend(v1, "setReturnKeyType:", 0);
  objc_msgSend(v1, "setEnablesReturnKeyAutomatically:", 0);
  objc_msgSend(v1, "setAutocapitalizationType:", 2);
  objc_msgSend(v1, "setAutocorrectionType:", 0);
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textChangedCallback];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textChangedCallback];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textChangedCallback + 8];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  sub_1D618(v3, v4);
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_returnPressedCallback];
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_returnPressedCallback];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_returnPressedCallback + 8];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  sub_1D618(v6, v7);
  objc_msgSend(v1, "setText:", 0);
  v8 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textLabel];
  objc_msgSend(v8, "setText:", 0);
  objc_msgSend(v1, "setAccessibilityLabel:", 0);
  objc_msgSend(v0, "setNeedsLayout");
  objc_msgSend(v1, "setDelegate:", 0);
  v9 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_minTextLabelWidth];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  objc_msgSend(v0, "setNeedsLayout");
  return objc_msgSend(v8, "setFrame:", 0.0, 0.0, 0.0, 0.0);
}

id sub_2D4B20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextInputCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TextInputCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews27TextInputCollectionViewCell);
}

double sub_2D4BF0(char a1, char a2, void *a3, double a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int16 v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20;
  void *v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  unsigned __int16 v38;

  if (qword_3CFEA8 != -1)
    swift_once(&qword_3CFEA8, sub_2D2F44);
  v28 = (void *)qword_3E1A78;
  v29 = qword_3E1A80;
  v30 = qword_3E1A88;
  v31 = qword_3E1A90;
  v32 = qword_3E1A98;
  v33 = qword_3E1AA0;
  v34 = (void *)qword_3E1AA8;
  v35 = qword_3E1AB0;
  v36 = xmmword_3E1AB8;
  v37 = qword_3E1AC8;
  v38 = word_3E1AD0;
  sub_1472C((id)qword_3E1A78, qword_3E1A80, qword_3E1A88, qword_3E1A90, qword_3E1A98, qword_3E1AA0, (void *)qword_3E1AA8, qword_3E1AB0, xmmword_3E1AB8, *((uint64_t *)&xmmword_3E1AB8 + 1), qword_3E1AC8, word_3E1AD0);
  v6 = objc_msgSend(a3, "traitCollection");
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v7 = type metadata accessor for FloatingPointRoundingRule(0);
  v25 = __swift_project_value_buffer(v7, (uint64_t)qword_3FCFB0);
  sub_1DD06C((uint64_t)v6, v25, 0);

  sub_14788(v28, v29, v30, v31, v32, v33, v34, v35, v36, *((uint64_t *)&v36 + 1), v37, v38);
  if (qword_3CFEB0 != -1)
    swift_once(&qword_3CFEB0, sub_2D3008);
  v8 = qword_3E1AF8;
  v9 = qword_3E1B00;
  v10 = qword_3E1B08;
  v11 = qword_3E1B10;
  v12 = xmmword_3E1B30;
  v13 = qword_3E1B40;
  v14 = word_3E1B48;
  v22 = qword_3E1B18;
  v23 = (void *)qword_3E1AF0;
  v20 = qword_3E1B28;
  v21 = (void *)qword_3E1B20;
  sub_1472C((id)qword_3E1AF0, qword_3E1AF8, qword_3E1B00, qword_3E1B08, qword_3E1B10, qword_3E1B18, (void *)qword_3E1B20, qword_3E1B28, xmmword_3E1B30, *((uint64_t *)&xmmword_3E1B30 + 1), qword_3E1B40, word_3E1B48);
  v24 = a3;
  v15 = objc_msgSend(a3, "traitCollection");
  sub_1DD06C((uint64_t)v15, v25, 0);

  sub_14788(v23, v8, v9, v10, v11, v22, v21, v20, v12, *((uint64_t *)&v12 + 1), v13, v14);
  if ((a1 & 1) != 0)
  {
    v16 = v24;
    v17 = objc_msgSend(v24, "traitCollection");
    static Separator.thickness(compatibleWith:)();

    if ((a2 & 1) == 0)
      return a4;
    goto LABEL_11;
  }
  v16 = v24;
  if ((a2 & 1) != 0)
  {
LABEL_11:
    v18 = objc_msgSend(v16, "traitCollection");
    static Separator.thickness(compatibleWith:)();

  }
  return a4;
}

void sub_2D4F0C()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  _QWORD *v3;
  char *v4;
  char *v5;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_minTextLabelWidth];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_textChangedCallback];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_returnPressedCallback];
  *v3 = 0;
  v3[1] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_showBottomDivider] = 1;
  v4 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_bottomDividerInsets];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[32] = 1;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_showTopDivider] = 1;
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews27TextInputCollectionViewCell_topDividerInsets];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v5[32] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/TextInputCollectionViewCell.swift", 57, 2, 199, 0);
  __break(1u);
}

uint64_t destroy for MultipleSubscriptionConfirmationButtonView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for MultipleSubscriptionConfirmationButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain(v4);
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for MultipleSubscriptionConfirmationButtonView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for MultipleSubscriptionConfirmationButtonView(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for MultipleSubscriptionConfirmationButtonView()
{
  return &type metadata for MultipleSubscriptionConfirmationButtonView;
}

uint64_t sub_2D5104(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_3355C0, 1);
}

void sub_2D5114()
{
  qword_3FD918 = 0x4010000000000000;
}

uint64_t sub_2D5124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  id v24;
  char v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  id v37;
  char v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v49;
  uint64_t v50;

  v50 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1BD8);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1BE0);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1BE8);
  __chkstk_darwin(v15);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CFEC0 != -1)
    v16 = swift_once(&qword_3CFEC0, sub_2D5114);
  v19 = qword_3FD918;
  *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v16);
  *((_QWORD *)v11 + 1) = v19;
  v11[16] = 0;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1BF0);
  v21 = sub_2D53D0(a1, a2, a3, a4, &v11[*(int *)(v20 + 44)]);
  v22 = static Edge.Set.top.getter(v21);
  v23 = (void *)objc_opt_self(UITraitCollection);
  v24 = objc_msgSend(v23, "currentTraitCollection");
  v25 = UITraitCollection.interfaceIdiomIsMac.getter(v24);

  v26 = 27.0;
  if ((v25 & 1) != 0)
    v26 = 14.0;
  v27 = EdgeInsets.init(_all:)(v26);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_D184((uint64_t)v11, (uint64_t)v14, &qword_3E1BD8);
  v34 = &v14[*(int *)(v12 + 36)];
  *v34 = v22;
  *((double *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  v35 = sub_D1D4((uint64_t)v11, &qword_3E1BD8);
  v36 = static Edge.Set.bottom.getter(v35);
  v37 = objc_msgSend(v23, "currentTraitCollection");
  v38 = UITraitCollection.interfaceIdiomIsMac.getter(v37);

  v39 = 0.0;
  if ((v38 & 1) != 0)
    v39 = 19.0;
  v40 = EdgeInsets.init(_all:)(v39);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  sub_D184((uint64_t)v14, (uint64_t)v18, &qword_3E1BE0);
  v47 = &v18[*(int *)(v15 + 36)];
  *v47 = v36;
  *((double *)v47 + 1) = v40;
  *((_QWORD *)v47 + 2) = v42;
  *((_QWORD *)v47 + 3) = v44;
  *((_QWORD *)v47 + 4) = v46;
  v47[40] = 0;
  sub_D1D4((uint64_t)v14, &qword_3E1BE0);
  return sub_2D585C((uint64_t)v18, v50);
}

uint64_t sub_2D53D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;

  v51 = a5;
  v52 = a4;
  v47 = a1;
  v48 = a3;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F18);
  v8 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1BF8);
  v49 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v50 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v46 = (char *)&v45 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  v45 = (char *)&v45 - v19;
  v21 = (_QWORD *)swift_allocObject(&unk_392668, 48, 7);
  v21[2] = a1;
  v22 = a2;
  v21[3] = a2;
  v21[4] = a3;
  v23 = v52;
  v21[5] = v52;
  v24 = v22;
  swift_retain(v22);
  swift_retain(v23);
  Button.init(action:label:)(sub_43920, v21, sub_2D5738, 0, &type metadata for Text, &protocol witness table for Text);
  v55 = 0;
  v25 = sub_10EDC(&qword_3D0F30, &qword_3D0F18, (uint64_t)&protocol conformance descriptor for Button<A>);
  v26 = sub_2D58A8();
  v27 = v53;
  View.buttonStyle<A>(_:)(&v55, v53, &type metadata for UpsellSheetButtonStyle, v25, v26);
  v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  v28(v10, v27);
  v29 = v49;
  v30 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  v30(v20, v17, v11);
  v31 = (_QWORD *)swift_allocObject(&unk_392690, 48, 7);
  v31[2] = v47;
  v32 = v24;
  v33 = v48;
  v31[3] = v24;
  v31[4] = v33;
  v34 = v52;
  v31[5] = v52;
  swift_retain(v32);
  swift_retain(v34);
  Button.init(action:label:)(sub_2D591C, v31, sub_2D5770, 0, &type metadata for Text, &protocol witness table for Text);
  v54 = 1;
  v35 = v46;
  v36 = v53;
  View.buttonStyle<A>(_:)(&v54, v53, &type metadata for UpsellSheetButtonStyle, v25, v26);
  v28(v10, v36);
  v30(v17, v35, v11);
  v37 = v29;
  v38 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v39 = v45;
  v38(v35, v45, v11);
  v40 = v50;
  v38(v50, v17, v11);
  v41 = v51;
  v38(v51, v35, v11);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1C08);
  v38(&v41[*(int *)(v42 + 48)], v40, v11);
  v43 = *(void (**)(char *, uint64_t))(v37 + 8);
  v43(v17, v11);
  v43(v39, v11);
  v43(v40, v11);
  return ((uint64_t (*)(char *, uint64_t))v43)(v35, v11);
}

void sub_2D5738(uint64_t a1@<X8>)
{
  sub_2D57A0(0xD000000000000026, (void *)0x800000000031AB30, 0xD000000000000013, (void *)0x800000000031AB60, a1);
}

void sub_2D5770(uint64_t a1@<X8>)
{
  sub_2D57A0(0xD000000000000027, (void *)0x800000000030F630, 0x776F4E20746F4ELL, (void *)0xE700000000000000, a1);
}

void sub_2D57A0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;

  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14._object = a4;
  v11._countAndFlagsBits = a1;
  v11._object = a2;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = a3;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v14);

  *(Swift::String *)a5 = v13;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = &_swiftEmptyArrayStorage;
}

uint64_t sub_2D5850@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2D5124(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_2D585C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2D58A8()
{
  unint64_t result;

  result = qword_3E1C00;
  if (!qword_3E1C00)
  {
    result = swift_getWitnessTable(&unk_306018, &type metadata for UpsellSheetButtonStyle);
    atomic_store(result, (unint64_t *)&qword_3E1C00);
  }
  return result;
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_2D591C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

unint64_t sub_2D5940()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E1C10;
  if (!qword_3E1C10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E1BE8);
    sub_2D59AC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E1C10);
  }
  return result;
}

unint64_t sub_2D59AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3E1C18;
  if (!qword_3E1C18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3E1BE0);
    sub_10EDC(&qword_3E1C20, &qword_3E1BD8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3E1C18);
  }
  return result;
}

void sub_2D5A30(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  __int16 v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unsigned __int16 v15;
  __int128 v16;
  __int128 v17;
  unsigned int v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[11];
  __int16 v44;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_WORD *)(a1 + 88);
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
  v6 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 8];
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 16];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 24];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 32];
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 40];
  v11 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 48];
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 56];
  v13 = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 64];
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 80];
  v15 = *(_WORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 88];
  v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *((_OWORD *)v4 + 1) = v16;
  v17 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v4 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v4 + 3) = v17;
  *((_OWORD *)v4 + 4) = *(_OWORD *)(a1 + 64);
  *((_QWORD *)v4 + 10) = v2;
  *((_WORD *)v4 + 44) = v3;
  sub_DC94(v6, v5, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, v15);
  v18 = *((unsigned __int16 *)v4 + 44);
  if (v18 >> 8 <= 0xFE)
  {
    v20 = *(void **)v4;
    v19 = *((_QWORD *)v4 + 1);
    v22 = *((_QWORD *)v4 + 2);
    v21 = *((_QWORD *)v4 + 3);
    v24 = *((_QWORD *)v4 + 4);
    v23 = *((_QWORD *)v4 + 5);
    v26 = (void *)*((_QWORD *)v4 + 6);
    v25 = *((_QWORD *)v4 + 7);
    v27 = *((_QWORD *)v4 + 8);
    v28 = *((_QWORD *)v4 + 9);
    v29 = *((_QWORD *)v4 + 10);
    v38 = v27;
    v39 = v19;
    v40 = v21;
    v41 = v23;
    v42 = v25;
    sub_DDA0(v20, v19, v22, v21, v24, v23, v26, v25, v27, v28, v29, v18, (unsigned __int16)(v18 & 0x1FF) >> 8);
    v30 = objc_msgSend(v1, "titleLabel");
    if (v30)
    {
      v36 = v30;
      v31 = objc_msgSend((id)objc_opt_self(UIContentSizeCategoryPreference), "system");
      v32 = v29;
      v33 = objc_msgSend(v31, "preferredContentSizeCategory");

      v34 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v33);
      v43[0] = v20;
      v43[1] = v39;
      v43[2] = v22;
      v43[3] = v40;
      v43[4] = v24;
      v43[5] = v41;
      v43[6] = v26;
      v43[7] = v42;
      v43[8] = v38;
      v43[9] = v28;
      v43[10] = v32;
      v44 = v18 & 0x1FF;
      v35 = sub_1D5728((uint64_t)v43, v34);
      v37 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v35, 0.0);

      objc_msgSend(v36, "setFont:", v37);
      sub_DC94(v20, v39, v22, v40, v24, v41, v26, v42, v38, v28, v32, v18);

    }
    else
    {
      sub_DC94(v20, v39, v22, v40, v24, v41, v26, v42, v38, v28, v29, v18);
    }
  }
}

char *sub_2D5CD4(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  int v12;
  char *v13;
  char *v14;
  __int16 v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  unsigned __int16 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  char *v37;
  char v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _QWORD v43[11];
  char v44;
  char v45;

  v2 = v1;
  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v42 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v40 = *(_QWORD *)(a1 + 40);
  v41 = v7;
  v39 = *(void **)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 64);
  v35 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v11 = *(unsigned __int8 *)(a1 + 88);
  v12 = *(unsigned __int8 *)(a1 + 89);
  v13 = (char *)objc_msgSend(objc_allocWithZone(v2), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
  v36 = *(void **)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
  if (v12)
    v15 = 256;
  else
    v15 = 0;
  v32 = *((_QWORD *)v14 + 2);
  v33 = *(id *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 8];
  v30 = *((_QWORD *)v14 + 4);
  v31 = *((_QWORD *)v14 + 3);
  v28 = (void *)*((_QWORD *)v14 + 6);
  v29 = *((_QWORD *)v14 + 5);
  v27 = *((_QWORD *)v14 + 7);
  v26 = *((_OWORD *)v14 + 4);
  v25 = *((_QWORD *)v14 + 10);
  v24 = *((_WORD *)v14 + 44);
  *(_QWORD *)v14 = v3;
  *((_QWORD *)v14 + 1) = v4;
  *((_QWORD *)v14 + 2) = v5;
  *((_QWORD *)v14 + 3) = v6;
  *((_QWORD *)v14 + 4) = v7;
  *((_QWORD *)v14 + 5) = v40;
  *((_QWORD *)v14 + 6) = v39;
  *((_QWORD *)v14 + 7) = v35;
  *((_QWORD *)v14 + 8) = v8;
  *((_QWORD *)v14 + 9) = v10;
  *((_QWORD *)v14 + 10) = v9;
  *((_WORD *)v14 + 44) = v15 | v11;
  v16 = v13;
  v38 = v12;
  sub_DDA0(v42, v4, v5, v6, v41, v40, v39, v35, v8, v10, v9, v11, v12);
  sub_DC94(v36, (uint64_t)v33, v32, v31, v30, v29, v28, v27, v26, *((uint64_t *)&v26 + 1), v25, v24);
  v17 = objc_msgSend(v16, "titleLabel");
  v37 = v16;

  if (v17)
  {
    v34 = v17;
    v18 = objc_msgSend((id)objc_opt_self(UIContentSizeCategoryPreference), "system");
    v19 = objc_msgSend(v18, "preferredContentSizeCategory");

    v20 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v19);
    v43[0] = v42;
    v43[1] = v4;
    v43[2] = v5;
    v43[3] = v6;
    v43[4] = v41;
    v43[5] = v40;
    v43[6] = v39;
    v43[7] = v35;
    v43[8] = v8;
    v43[9] = v10;
    v43[10] = v9;
    v44 = v11;
    v45 = v38;
    v21 = sub_1D5728((uint64_t)v43, v20);
    v22 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v21, 0.0);

    sub_DCC8(v42, v4, v5, v6, v41, v40, v39, v35, v8, v10, v9, v11, v38);
    objc_msgSend(v34, "setFont:", v22);

  }
  else
  {
    sub_DCC8(v42, v4, v5, v6, v41, v40, v39, v35, v8, v10, v9, v11, v38);
  }
  return v37;
}

void sub_2D602C(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  char *v5;
  char *v6;
  unsigned int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[11];
  __int16 v31;
  objc_super v32;

  v2 = v1;
  v32.receiver = v1;
  v32.super_class = (Class)type metadata accessor for DynamicTypeButton();
  objc_msgSendSuper2(&v32, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = (char *)objc_msgSend(v4, "userInterfaceIdiom");

  if (v5 != (_BYTE *)&dword_4 + 1)
  {
    v6 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
    v7 = *(unsigned __int16 *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 88];
    if (v7 >> 8 <= 0xFE)
    {
      v8 = *(void **)v6;
      v9 = *((_QWORD *)v6 + 2);
      v10 = *((_QWORD *)v6 + 4);
      v12 = (void *)*((_QWORD *)v6 + 6);
      v11 = *((_QWORD *)v6 + 7);
      v13 = *((_QWORD *)v6 + 9);
      v14 = *((_QWORD *)v6 + 10);
      v26 = *((_QWORD *)v6 + 8);
      v27 = *((_QWORD *)v6 + 1);
      v28 = *((_QWORD *)v6 + 3);
      v29 = *((_QWORD *)v6 + 5);
      sub_DDA0(*(void **)v6, v27, v9, v28, v10, v29, v12, v11, v26, v13, v14, v7, (unsigned __int16)(v7 & 0x1FF) >> 8);
      v15 = objc_msgSend(v2, "titleLabel");
      if (v15)
      {
        v25 = v15;
        v16 = v12;
        v24 = v12;
        v17 = objc_msgSend((id)objc_opt_self(UIContentSizeCategoryPreference), "system");
        v18 = v11;
        v23 = v11;
        v19 = objc_msgSend(v17, "preferredContentSizeCategory");

        v20 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v19);
        v30[0] = v8;
        v30[1] = v27;
        v30[2] = v9;
        v30[3] = v28;
        v30[4] = v10;
        v30[5] = v29;
        v30[6] = v16;
        v30[7] = v18;
        v30[8] = v26;
        v30[9] = v13;
        v30[10] = v14;
        v31 = v7 & 0x1FF;
        v21 = sub_1D5728((uint64_t)v30, v20);
        v22 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v21, 0.0);

        objc_msgSend(v25, "setFont:", v22);
        sub_DC94(v8, v27, v9, v28, v10, v29, v24, v23, v26, v13, v14, v7);

      }
      else
      {
        sub_DC94(v8, v27, v9, v28, v10, v29, v12, v11, v26, v13, v14, v7);
      }
    }
  }
}

uint64_t type metadata accessor for DynamicTypeButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17DynamicTypeButton);
}

id DynamicTypeButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_super v11;

  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *((_QWORD *)v9 + 10) = 0;
  *((_WORD *)v9 + 44) = -256;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for DynamicTypeButton();
  return objc_msgSendSuper2(&v11, "initWithFrame:", a1, a2, a3, a4);
}

id DynamicTypeButton.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  *((_QWORD *)v3 + 10) = 0;
  *((_WORD *)v3 + 44) = -256;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DynamicTypeButton();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id DynamicTypeButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicTypeButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t method lookup function for DynamicTypeButton(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DynamicTypeButton);
}

double sub_2D65C8(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  _BYTE v12[24];

  *(_QWORD *)&result = swift_beginAccess(v1 + 16, v12, 0, 0).n128_u64[0];
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
    v6 = (uint64_t *)(v4 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      ObjectType = swift_getObjectType();
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 8);
      v11 = swift_unknownObjectRetain(v7);
      v10(a1, ObjectType, v8, v11);
      swift_unknownObjectRelease(v7);
      v6 += 2;
      --v5;
    }
    while (v5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  }
  return result;
}

double sub_2D6678(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  _BYTE v12[24];

  *(_QWORD *)&result = swift_beginAccess(v1 + 16, v12, 0, 0).n128_u64[0];
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
    v6 = (uint64_t *)(v4 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      ObjectType = swift_getObjectType();
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 16);
      v11 = swift_unknownObjectRetain(v7);
      v10(a1, ObjectType, v8, v11);
      swift_unknownObjectRelease(v7);
      v6 += 2;
      --v5;
    }
    while (v5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  }
  return result;
}

double sub_2D6728(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  _BYTE v12[24];

  *(_QWORD *)&result = swift_beginAccess(v1 + 16, v12, 0, 0).n128_u64[0];
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
    v6 = (uint64_t *)(v4 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      ObjectType = swift_getObjectType();
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 24);
      v11 = swift_unknownObjectRetain(v7);
      v10(a1, ObjectType, v8, v11);
      swift_unknownObjectRelease(v7);
      v6 += 2;
      --v5;
    }
    while (v5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  }
  return result;
}

double sub_2D67D8(uint64_t a1, char a2)
{
  uint64_t v2;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v14;
  _BYTE v15[24];

  *(_QWORD *)&result = swift_beginAccess(v2 + 16, v15, 0, 0).n128_u64[0];
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    v8 = (uint64_t *)(v6 + 40);
    v9 = a2 & 1;
    do
    {
      v10 = *(v8 - 1);
      v11 = *v8;
      ObjectType = swift_getObjectType();
      v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v11 + 32);
      v14 = swift_unknownObjectRetain(v10);
      v13(a1, v9, ObjectType, v11, v14);
      swift_unknownObjectRelease(v10);
      v8 += 2;
      --v7;
    }
    while (v7);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  return result;
}

double sub_2D689C(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  _BYTE v12[24];

  *(_QWORD *)&result = swift_beginAccess(v1 + 16, v12, 0, 0).n128_u64[0];
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
    v6 = (uint64_t *)(v4 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      ObjectType = swift_getObjectType();
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 40);
      v11 = swift_unknownObjectRetain(v7);
      v10(a1, ObjectType, v8, v11);
      swift_unknownObjectRelease(v7);
      v6 += 2;
      --v5;
    }
    while (v5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  }
  return result;
}

void sub_2D694C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, double, double);
  _BYTE v16[24];

  swift_beginAccess(v4 + 16, v16, 0, 0);
  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 16));
    v11 = (uint64_t *)(v9 + 40);
    do
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      ObjectType = swift_getObjectType();
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v13 + 48);
      swift_unknownObjectRetain(v12);
      v15(a1, a2, ObjectType, v13, a3, a4);
      swift_unknownObjectRelease(v12);
      v11 += 2;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease(v9);
  }
}

void sub_2D6A24(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, double, double);
  _BYTE v16[24];

  swift_beginAccess(v4 + 16, v16, 0, 0);
  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 16));
    v11 = (uint64_t *)(v9 + 40);
    do
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      ObjectType = swift_getObjectType();
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v13 + 56);
      swift_unknownObjectRetain(v12);
      v15(a1, a2, ObjectType, v13, a3, a4);
      swift_unknownObjectRelease(v12);
      v11 += 2;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease(v9);
  }
}

uint64_t type metadata accessor for CompoundScrollCoordinator()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews25CompoundScrollCoordinator);
}

uint64_t NSUserDefaults.mostRecentTabIdentifier.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v17;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D37F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2D6CB4(a1, (uint64_t)v6);
  v7 = type metadata accessor for StoreTab.Identifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_D1D4((uint64_t)v6, &qword_3D37F8);
  }
  else
  {
    StoreTab.Identifier.rawValue.getter();
    v10 = v9;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    if (qword_3CFEF8 != -1)
      swift_once(&qword_3CFEF8, sub_2D721C);
    v12 = type metadata accessor for NSUserDefaults.Keys(0);
    __swift_project_value_buffer(v12, (uint64_t)qword_3E1DD8);
    NSUserDefaults.Keys.rawValue.getter();
    v14 = v13;
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setObject:forKey:", v11, v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  }
  return sub_D1D4(a1, &qword_3D37F8);
}

uint64_t sub_2D6CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double NSUserDefaults.sidebarColumnWidth.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  __n128 v7;
  unint64_t v8;
  void *v9;
  double result;
  void *v11;
  _OWORD v12[2];
  double v13;
  char v14;
  uint64_t v15;

  v1 = v0;
  if (qword_3CFF00 != -1)
    swift_once(&qword_3CFF00, sub_2D725C);
  v2 = type metadata accessor for NSUserDefaults.Keys(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_3E1DF0);
  NSUserDefaults.Keys.rawValue.getter();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v1, "objectForKey:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v12, v6, v7);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_56AF8((uint64_t)v12, (uint64_t)&v13);
  if (!v15)
  {
    sub_D1D4((uint64_t)&v13, &qword_3D1A70);
    return 220.0;
  }
  v8 = sub_203C48();
  if ((swift_dynamicCast(&v11, &v13, (char *)&type metadata for Any + 8, v8, 6) & 1) == 0)
    return 220.0;
  v9 = v11;
  v13 = 0.0;
  v14 = 1;
  static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)(v11, &v13);

  result = v13;
  if (v14)
    return 220.0;
  return result;
}

void NSUserDefaults.sidebarColumnWidth.setter()
{
  void *v0;
  void *v1;
  NSNumber v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v1 = v0;
  v2.super.super.isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  if (qword_3CFF00 != -1)
    swift_once(&qword_3CFF00, sub_2D725C);
  v3 = type metadata accessor for NSUserDefaults.Keys(0);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_3E1DF0);
  NSUserDefaults.Keys.rawValue.getter(v4);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setObject:forKey:", v2.super.super.isa, v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

}

id NSUserDefaults.debugNotificationsEnabled.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  _OWORD v14[2];

  v1 = v0;
  if (qword_3CFEC8 != -1)
    swift_once(&qword_3CFEC8, sub_2D7038);
  v2 = type metadata accessor for NSUserDefaults.Keys(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_3E1D48);
  ((void (*)(void))NSUserDefaults.Keys.rawValue.getter)();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v0, "objectForKey:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v14, v6, v7);
    swift_unknownObjectRelease(v6);
    v8 = sub_D1D4((uint64_t)v14, &qword_3D1A70);
    NSUserDefaults.Keys.rawValue.getter(v8);
    v10 = v9;
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v1, "BOOLForKey:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  else
  {
    memset(v14, 0, sizeof(v14));
    sub_D1D4((uint64_t)v14, &qword_3D1A70);
    return 0;
  }
  return v12;
}

uint64_t sub_2D7038(uint64_t a1)
{
  return sub_2D7280(a1, qword_3E1D48, 0xD000000000000019, 0x800000000031AC90);
}

uint64_t static NSUserDefaults.Keys.debugNotificationsEnabled.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2D70B8(&qword_3CFEC8, (uint64_t)qword_3E1D48, (uint64_t)sub_2D7038, a1);
}

uint64_t sub_2D7078(uint64_t a1)
{
  return sub_2D7280(a1, qword_3E1D60, 0xD00000000000001BLL, 0x800000000031AC70);
}

uint64_t static NSUserDefaults.Keys.debugNetworkErrorOnDownload.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2D70B8(&qword_3CFED0, (uint64_t)qword_3E1D60, (uint64_t)sub_2D7078, a1);
}

uint64_t sub_2D70B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for NSUserDefaults.Keys(0);
  v7 = __swift_project_value_buffer(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v7, v6);
}

uint64_t sub_2D7120(uint64_t a1)
{
  return sub_2D7280(a1, qword_3E1D78, 0xD000000000000013, 0x800000000031AC50);
}

uint64_t static NSUserDefaults.Keys.debugGestureEnabled.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2D70B8(&qword_3CFED8, (uint64_t)qword_3E1D78, (uint64_t)sub_2D7120, a1);
}

uint64_t sub_2D7160(uint64_t a1)
{
  return sub_2D7280(a1, qword_3E1D90, 0xD000000000000013, 0x800000000031AC30);
}

uint64_t static NSUserDefaults.Keys.demoScrollTabsToTop.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2D70B8(&qword_3CFEE0, (uint64_t)qword_3E1D90, (uint64_t)sub_2D7160, a1);
}

uint64_t sub_2D71A0(uint64_t a1)
{
  return sub_2D7280(a1, qword_3E1DA8, 0x65646F4D6F6D6564, 0xE800000000000000);
}

uint64_t static NSUserDefaults.Keys.demoMode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2D70B8(&qword_3CFEE8, (uint64_t)qword_3E1DA8, (uint64_t)sub_2D71A0, a1);
}

uint64_t sub_2D71DC(uint64_t a1)
{
  return sub_2D7280(a1, qword_3E1DC0, 0xD000000000000015, 0x800000000031AC10);
}

uint64_t static NSUserDefaults.Keys.showButtonTouchInsets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2D70B8(&qword_3CFEF0, (uint64_t)qword_3E1DC0, (uint64_t)sub_2D71DC, a1);
}

uint64_t sub_2D721C(uint64_t a1)
{
  return sub_2D7280(a1, qword_3E1DD8, 0xD000000000000017, 0x800000000031ACD0);
}

uint64_t static NSUserDefaults.Keys.mostRecentTabIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2D70B8(&qword_3CFEF8, (uint64_t)qword_3E1DD8, (uint64_t)sub_2D721C, a1);
}

uint64_t sub_2D725C(uint64_t a1)
{
  return sub_2D7280(a1, qword_3E1DF0, 0xD000000000000012, 0x800000000031ACB0);
}

uint64_t sub_2D7280(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for NSUserDefaults.Keys(0);
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  return NSUserDefaults.Keys.init(_:)(a3, a4);
}

uint64_t static NSUserDefaults.Keys.sidebarColumnWidth.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2D70B8(&qword_3CFF00, (uint64_t)qword_3E1DF0, (uint64_t)sub_2D725C, a1);
}

id NSUserDefaults.episodeDownloadErrorEnabled.getter()
{
  return sub_2D73A0(&qword_3CFED0, (uint64_t)qword_3E1D60, (uint64_t)sub_2D7078);
}

void NSUserDefaults.debugNotificationsEnabled.setter(char a1)
{
  sub_2D75A4(a1, &qword_3CFEC8, (uint64_t)qword_3E1D48, (uint64_t)sub_2D7038);
}

void (*NSUserDefaults.debugNotificationsEnabled.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = NSUserDefaults.debugNotificationsEnabled.getter() & 1;
  return sub_2D7368;
}

void sub_2D7368(uint64_t a1, uint64_t a2)
{
  sub_2D7690(a1, a2, &qword_3CFEC8, (uint64_t)qword_3E1D48, (uint64_t)sub_2D7038);
}

id NSUserDefaults.debugGestureEnabled.getter()
{
  return sub_2D73A0(&qword_3CFED8, (uint64_t)qword_3E1D78, (uint64_t)sub_2D7120);
}

id sub_2D73A0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  __n128 v12;
  unint64_t v13;
  id v14;
  id v15;
  id v17;
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v5 = v3;
  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for NSUserDefaults.Keys(0);
  v7 = __swift_project_value_buffer(v6, a2);
  NSUserDefaults.Keys.rawValue.getter(v7);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v5, "objectForKey:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)(v18, v11, v12);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_56AF8((uint64_t)v18, (uint64_t)v19);
  if (!v20)
  {
    sub_D1D4((uint64_t)v19, &qword_3D1A70);
    return 0;
  }
  v13 = sub_203C48();
  if ((swift_dynamicCast(&v17, v19, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0)
    return 0;
  v14 = v17;
  v15 = objc_msgSend(v17, "BOOLValue");

  return v15;
}

id NSUserDefaults.demoScrollTabsToTop.getter()
{
  return sub_2D73A0(&qword_3CFEE0, (uint64_t)qword_3E1D90, (uint64_t)sub_2D7160);
}

void sub_2D74F0(unsigned __int8 *a1, void **a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;

  v8 = *a1;
  v9 = *a2;
  if (*a5 != -1)
    swift_once(a5, a7);
  v10 = type metadata accessor for NSUserDefaults.Keys(0);
  v11 = __swift_project_value_buffer(v10, a6);
  NSUserDefaults.Keys.rawValue.getter(v11);
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setBool:forKey:", v8, v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

}

void NSUserDefaults.demoScrollTabsToTop.setter(char a1)
{
  sub_2D75A4(a1, &qword_3CFEE0, (uint64_t)qword_3E1D90, (uint64_t)sub_2D7160);
}

void sub_2D75A4(char a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;

  v6 = v4;
  if (*a2 != -1)
    swift_once(a2, a4);
  v8 = type metadata accessor for NSUserDefaults.Keys(0);
  v9 = __swift_project_value_buffer(v8, a3);
  NSUserDefaults.Keys.rawValue.getter(v9);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setBool:forKey:", a1 & 1, v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

}

void (*NSUserDefaults.demoScrollTabsToTop.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = NSUserDefaults.demoScrollTabsToTop.getter() & 1;
  return sub_2D7674;
}

void sub_2D7674(uint64_t a1, uint64_t a2)
{
  sub_2D7690(a1, a2, &qword_3CFEE0, (uint64_t)qword_3E1D90, (uint64_t)sub_2D7160);
}

void sub_2D7690(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;

  v7 = *(unsigned __int8 *)(a1 + 8);
  if (*a3 != -1)
    swift_once(a3, a5);
  v8 = *(void **)a1;
  v9 = type metadata accessor for NSUserDefaults.Keys(0);
  v10 = __swift_project_value_buffer(v9, a4);
  NSUserDefaults.Keys.rawValue.getter(v10);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setBool:forKey:", v7, v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

}

id NSUserDefaults.demoMode.getter()
{
  return sub_2D73A0(&qword_3CFEE8, (uint64_t)qword_3E1DA8, (uint64_t)sub_2D71A0);
}

void NSUserDefaults.demoMode.setter(char a1)
{
  sub_2D75A4(a1, &qword_3CFEE8, (uint64_t)qword_3E1DA8, (uint64_t)sub_2D71A0);
}

void (*NSUserDefaults.demoMode.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = NSUserDefaults.demoMode.getter() & 1;
  return sub_2D779C;
}

void sub_2D779C(uint64_t a1, uint64_t a2)
{
  sub_2D7690(a1, a2, &qword_3CFEE8, (uint64_t)qword_3E1DA8, (uint64_t)sub_2D71A0);
}

uint64_t NSUserDefaults.mostRecentTabIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  __n128 v10;
  uint64_t v12;
  _QWORD v13[2];
  _OWORD v14[2];
  _BYTE v15[24];
  uint64_t v16;

  v2 = v1;
  if (qword_3CFEF8 != -1)
    swift_once(&qword_3CFEF8, sub_2D721C);
  v4 = type metadata accessor for NSUserDefaults.Keys(0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_3E1DD8);
  NSUserDefaults.Keys.rawValue.getter(v5);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v2, "objectForKey:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)(v14, v9, v10);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_56AF8((uint64_t)v14, (uint64_t)v15);
  if (v16)
  {
    if ((swift_dynamicCast(v13, v15, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return StoreTab.Identifier.init(rawValue:)(v13[0], v13[1]);
  }
  else
  {
    sub_D1D4((uint64_t)v15, &qword_3D1A70);
  }
  v12 = type metadata accessor for StoreTab.Identifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
}

uint64_t sub_2D7908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D37F8);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2D6CB4(a1, (uint64_t)v4);
  return NSUserDefaults.mostRecentTabIdentifier.setter((uint64_t)v4);
}

void (*NSUserDefaults.mostRecentTabIdentifier.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D37F8) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  NSUserDefaults.mostRecentTabIdentifier.getter((uint64_t)v4);
  return sub_2D79F0;
}

void sub_2D79F0(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_2D6CB4((uint64_t)v3, (uint64_t)v2);
    NSUserDefaults.mostRecentTabIdentifier.setter((uint64_t)v2);
    sub_D1D4((uint64_t)v3, &qword_3D37F8);
  }
  else
  {
    NSUserDefaults.mostRecentTabIdentifier.setter((uint64_t)v3);
  }
  free(v3);
  free(v2);
}

void sub_2D7A54(uint64_t a1, void **a2)
{
  void *v2;
  NSNumber v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;

  v2 = *a2;
  v3.super.super.isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  if (qword_3CFF00 != -1)
    swift_once(&qword_3CFF00, sub_2D725C);
  v4 = type metadata accessor for NSUserDefaults.Keys(0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_3E1DF0);
  NSUserDefaults.Keys.rawValue.getter(v5);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setObject:forKey:", v3.super.super.isa, v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

}

void (*NSUserDefaults.sidebarColumnWidth.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  *(double *)a1 = NSUserDefaults.sidebarColumnWidth.getter();
  return sub_2D7B38;
}

void sub_2D7B38(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  Class isa;

  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  if (qword_3CFF00 != -1)
    swift_once(&qword_3CFF00, sub_2D725C);
  v2 = *(void **)(a1 + 8);
  v3 = type metadata accessor for NSUserDefaults.Keys(0);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_3E1DF0);
  NSUserDefaults.Keys.rawValue.getter(v4);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setObject:forKey:", isa, v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

}

id sub_2D7BF0@<X0>(_BYTE *a1@<X8>)
{
  id result;

  result = NSUserDefaults.debugNotificationsEnabled.getter();
  *a1 = result & 1;
  return result;
}

void sub_2D7C1C(unsigned __int8 *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2D74F0(a1, a2, a3, a4, &qword_3CFEC8, (uint64_t)qword_3E1D48, (uint64_t)sub_2D7038);
}

id sub_2D7C48@<X0>(_BYTE *a1@<X8>)
{
  id result;

  result = NSUserDefaults.demoScrollTabsToTop.getter();
  *a1 = result & 1;
  return result;
}

void sub_2D7C74(unsigned __int8 *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2D74F0(a1, a2, a3, a4, &qword_3CFEE0, (uint64_t)qword_3E1D90, (uint64_t)sub_2D7160);
}

id sub_2D7CA0@<X0>(_BYTE *a1@<X8>)
{
  id result;

  result = NSUserDefaults.demoMode.getter();
  *a1 = result & 1;
  return result;
}

void sub_2D7CCC(unsigned __int8 *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2D74F0(a1, a2, a3, a4, &qword_3CFEE8, (uint64_t)qword_3E1DA8, (uint64_t)sub_2D71A0);
}

uint64_t sub_2D7CF8@<X0>(uint64_t a1@<X8>)
{
  return NSUserDefaults.mostRecentTabIdentifier.getter(a1);
}

void sub_2D7D1C(double *a1@<X8>)
{
  *a1 = NSUserDefaults.sidebarColumnWidth.getter();
}

double ExpandableTextView.bind(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_objectGraph);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_release(v4);
  *(_QWORD *)&result = swift_retain(a1).n128_u64[0];
  return result;
}

void sub_2D7DA0(unint64_t a1, char a2, char a3, char a4, uint64_t a5)
{
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _BYTE *v11;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  double Width;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  unint64_t v33;
  id v34;
  double v35;
  void *v36;
  NSString *v37;
  id v38;
  char isUniquelyReferenced_nonNull_native;
  id v40;
  void *v41;
  NSString *v42;
  id v43;
  char v44;
  uint64_t v45;
  id v46;
  void *v47;
  __n128 v48;
  void *v49;
  id v50;
  id v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  double v59;
  double v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t inited;
  uint64_t v65;
  NSString *v66;
  double v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  NSString *v83;
  void *v84;
  id v85;
  unint64_t v86;
  id v87;
  double Height;
  double v89;
  id v90;
  __n128 v91;
  void *v92;
  double v93;
  char v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  _BYTE *v101;
  _QWORD *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  void *v113;
  uint64_t v114;
  _OWORD v115[2];
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  char v127;
  char v128[72];
  CGRect v129;
  CGRect v130;

  v11 = v5;
  if ((~a1 & 0xF000000000000007) == 0)
  {
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView], "setText:", 0);
    objc_msgSend(v5, "setNeedsLayout");
    return;
  }
  v17 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
  v18 = Paragraph.Text.languageAwareObject()(a1);
  v19 = *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_collapsedNumberOfLines];
  v20 = v19 - 1;
  if (__OFSUB__(v19, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  v21 = (void *)v18;
  v109 = a4;
  v111 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_collapsedNumberOfLines;
  v22 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView];
  objc_msgSend(v22, "frame");
  Width = CGRectGetWidth(v129);
  v114 = a5;
  v24 = v17;
  v25 = objc_msgSend(v22, "textContainer");
  v26 = objc_msgSend(v25, "lineBreakMode");

  v27 = dispatch thunk of LanguageAwareString.writingDirectionOfLine(_:maximumLinesShown:withWidth:lineBreakMode:cacheLayoutInfo:)(v20, 0x7FFFFFFFFFFFFFFFLL, v26, 1, Width);
  v11[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_shouldMoreBeRTL] = v27 == 1;
  if ((a3 & 1) != 0)
    v28 = 7;
  else
    v28 = 0;
  objc_msgSend(v22, "setDataDetectorTypes:", v28);
  objc_msgSend(v22, "setSelectable:", a3 & 1);
  v108 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_isCollapsed;
  v11[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_isCollapsed] = a2 & 1;
  sub_2D9218();
  v29 = (uint64_t)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_shareSheetContentSource];
  swift_beginAccess(&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_shareSheetContentSource], &v116, 33, 0);
  sub_2DB2AC(v114, v29);
  swift_endAccess(&v116);
  v30 = a1 >> 62;
  v113 = (void *)a1;
  if (a1 >> 62)
    v31 = (unint64_t)v24;
  else
    v31 = a1;
  v32 = v24;
  v33 = sub_D4784((uint64_t)_swiftEmptyArrayStorage);
  v34 = objc_msgSend(v22, "font");
  if (v34)
  {
    v36 = v34;
    v118 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    *(_QWORD *)&v116 = v36;
    sub_1D65C(&v116, v115);
    v37 = NSFontAttributeName;
    v38 = v36;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
    sub_15EB78(v115, v37, isUniquelyReferenced_nonNull_native);

    *(_QWORD *)&v35 = swift_bridgeObjectRelease(0x8000000000000000).n128_u64[0];
  }
  v40 = objc_msgSend(v22, "textColor", v35);
  if (v40)
  {
    v41 = v40;
    v118 = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
    *(_QWORD *)&v116 = v41;
    sub_1D65C(&v116, v115);
    v42 = NSForegroundColorAttributeName;
    v43 = v41;
    v44 = swift_isUniquelyReferenced_nonNull_native(v33);
    sub_15EB78(v115, v42, v44);

    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v45 = (uint64_t)v113;
  v46 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString(0));
  v47 = (void *)LanguageAwareString.init(_:attributes:)(v31, v33);
  v49 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter(v48);

  objc_msgSend(v22, "setAttributedText:", v49);
  if (v109 != 4)
    objc_msgSend(v22, "setTextAlignment:", 4);
  v50 = objc_msgSend(v22, "layoutManager");
  v51 = objc_msgSend(v22, "textContainer");
  objc_msgSend(v50, "ensureLayoutForTextContainer:", v51);

  objc_msgSend(v11, "layoutIfNeeded");
  objc_msgSend(v11, "layoutMargins");
  v8 = v52;
  v54 = v53;
  v7 = v55;
  v57 = v56;
  v58 = *(_QWORD *)&v11[v111];
  objc_msgSend(v11, "bounds");
  v9 = v59;
  v6 = v60;
  if (!v30)
  {
    v101 = v11;
    v61 = v113;
    v104 = LanguageAwareString.string.getter();
    v105 = v62;
    v10 = v54 + v57;
    v103 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
    v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
    inited = swift_initStackObject(v63, v128);
    *(_OWORD *)(inited + 16) = xmmword_2EFA20;
    v102 = (_QWORD *)inited;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v65 = qword_3CFF08;
    v66 = NSFontAttributeName;
    if (v65 == -1)
    {
LABEL_18:
      v67 = v9 - v10;
      v68 = xmmword_3E1E10;
      v69 = xmmword_3E1E28;
      v110 = qword_3E1E20;
      v112 = (void *)xmmword_3E1E10;
      v106 = qword_3E1E38;
      v107 = *((_QWORD *)&xmmword_3E1E28 + 1);
      v70 = unk_3E1E48;
      v95 = (void *)qword_3E1E40;
      v71 = qword_3E1E50;
      v72 = unk_3E1E58;
      v96 = qword_3E1E50;
      v97 = unk_3E1E58;
      v73 = qword_3E1E60;
      v98 = qword_3E1E60;
      v74 = word_3E1E68;
      v75 = HIBYTE(word_3E1E68);
      v99 = word_3E1E68;
      v100 = HIBYTE(word_3E1E68);
      v76 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
      sub_DDA0((void *)v68, *((uint64_t *)&v68 + 1), v110, v69, v107, v106, v95, v70, v71, v72, v73, v74, v75);
      v77 = objc_msgSend(v76, "system");
      v78 = objc_msgSend(v77, "preferredContentSizeCategory");

      v79 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v78);
      v116 = v68;
      v117 = v110;
      v118 = v69;
      v119 = v107;
      v120 = v106;
      v121 = v95;
      v122 = v70;
      v123 = v96;
      v124 = v97;
      v125 = v98;
      v126 = v99;
      v127 = v100;
      v80 = sub_1D5728((uint64_t)&v116, v79);
      v81 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v80, 0.0);

      sub_DCC8(v112, *((uint64_t *)&v68 + 1), v110, v69, v107, v106, v95, v70, v96, v97, v98, v99, v100);
      v102[5] = v81;
      v102[6] = NSParagraphStyleAttributeName;
      v82 = qword_3CF0D8;
      v83 = NSParagraphStyleAttributeName;
      if (v82 != -1)
        swift_once(&qword_3CF0D8, sub_28A30);
      v84 = (void *)qword_3FA958;
      v102[7] = qword_3FA958;
      v85 = v84;
      v86 = sub_D47A0((uint64_t)v102);
      v87 = v103;
      v130.origin.x = sub_21A7CC(v104, v105, 1uLL, v86, v103, v67, 1.79769313e308);
      Height = CGRectGetHeight(v130);
      swift_bridgeObjectRelease(v86);

      v45 = (uint64_t)v113;
      sub_2DB2F4((uint64_t)v113);
      swift_bridgeObjectRelease(v105);
      v89 = v7 + v8 + Height + 0.0;
      v11 = v101;
      goto LABEL_22;
    }
LABEL_27:
    swift_once(&qword_3CFF08, sub_2D85D0);
    goto LABEL_18;
  }
  v90 = v32;
  v92 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter(v91);
  sub_2DB2F4((uint64_t)v113);
  sub_2DA130(v92, 0, v58, v8, v54, v7, v57, v9);
  v89 = v93;

LABEL_22:
  v11[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_hasMoreButton] = v6 < v89;
  if (v6 < v89)
    v94 = v11[v108] ^ 1;
  else
    v94 = 1;
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreButton], "setHidden:", v94 & 1);
  sub_2DB2F4(v45);
}

id sub_2D85D0()
{
  if (qword_3CF610 != -1)
    swift_once(&qword_3CF610, sub_141C34);
  xmmword_3E1E10 = xmmword_3FC4B0;
  qword_3E1E20 = qword_3FC4C0;
  xmmword_3E1E28 = xmmword_3FC4C8;
  qword_3E1E38 = qword_3FC4D8;
  qword_3E1E40 = qword_3FC4E0;
  unk_3E1E48 = qword_3FC4E8;
  qword_3E1E50 = qword_3FC4F0;
  unk_3E1E58 = qword_3FC4F8;
  qword_3E1E60 = qword_3FC500;
  word_3E1E68 = word_3FC508;
  return sub_DDA0((void *)xmmword_3FC4B0, *((uint64_t *)&xmmword_3FC4B0 + 1), qword_3FC4C0, xmmword_3FC4C8, *((uint64_t *)&xmmword_3FC4C8 + 1), qword_3FC4D8, (void *)qword_3FC4E0, qword_3FC4E8, qword_3FC4F0, qword_3FC4F8, qword_3FC500, word_3FC508, SHIBYTE(word_3FC508));
}

id ExpandableTextView.firstBaselineFromTop.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView), "firstBaselineFromTop");
}

id ExpandableTextView.lastBaselineFromBottom.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView), "lastBaselineFromBottom");
}

id ExpandableTextView.forLastBaselineLayout.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView);
}

char *ExpandableTextView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  double left;
  double bottom;
  double right;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  objc_super v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView;
  v12 = type metadata accessor for DynamicTypeTextView();
  v13 = qword_3CFF08;
  v14 = v5;
  if (v13 != -1)
    swift_once(&qword_3CFF08, sub_2D85D0);
  v40 = xmmword_3E1E10;
  v41 = qword_3E1E20;
  v42 = xmmword_3E1E28;
  v43 = qword_3E1E38;
  v44 = qword_3E1E40;
  v45 = qword_3E1E48;
  v46 = qword_3E1E50;
  v47 = qword_3E1E58;
  v48 = qword_3E1E60;
  v49 = word_3E1E68;
  sub_DDA0((void *)xmmword_3E1E10, *((uint64_t *)&xmmword_3E1E10 + 1), qword_3E1E20, xmmword_3E1E28, *((uint64_t *)&xmmword_3E1E28 + 1), qword_3E1E38, (void *)qword_3E1E40, qword_3E1E48, qword_3E1E50, qword_3E1E58, qword_3E1E60, word_3E1E68, SHIBYTE(word_3E1E68));
  *(_QWORD *)&v5[v11] = sub_D32C((uint64_t)&v40);
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreButton;
  if (qword_3CEFF0 != -1)
    swift_once(&qword_3CEFF0, sub_DFAC);
  *(_QWORD *)&v14[v15] = sub_23458C((void *)qword_3D0898);
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_shouldMoreBeRTL] = 0;
  v16 = &v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_shareSheetContentSource];
  v17 = type metadata accessor for ShareSheetContentSource(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_hasMoreButton] = 1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_collapsedNumberOfLines] = 3;
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_isCollapsed] = 1;
  v18 = &v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreTapHandler];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakInit(&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_observedScrollView], 0);
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_objectGraph] = 0;

  v39.receiver = v14;
  v39.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v23 = (char *)v19;
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v24 = qword_3D0898;
  objc_msgSend(v23, "setBackgroundColor:", qword_3D0898);
  v25 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView;
  v26 = *(void **)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView];
  objc_msgSend(v26, "setSelectable:", 0);
  objc_msgSend(v26, "setEditable:", 0);
  objc_msgSend(v26, "setScrollEnabled:", 0);
  objc_msgSend(v26, "setUserInteractionEnabled:", 1);
  objc_msgSend(v26, "setBackgroundColor:", v24);
  v27 = objc_msgSend(v26, "textContainer");
  objc_msgSend(v27, "setMaximumNumberOfLines:", *(_QWORD *)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_collapsedNumberOfLines]);

  v28 = objc_msgSend(*(id *)&v23[v25], "textContainer");
  objc_msgSend(v28, "setLineBreakMode:", 0);

  v29 = *(void **)&v23[v25];
  objc_msgSend(v29, "setTextContainerInset:", UIEdgeInsetsZero.top, left, bottom, right);
  v30 = objc_msgSend(v29, "textContainer");
  objc_msgSend(v30, "setLineFragmentPadding:", 0.0);

  v31 = *(void **)&v23[v25];
  objc_msgSend(v31, "setDelegate:", v23);
  objc_msgSend(v23, "addSubview:", v31);
  *(_QWORD *)&v42 = v12;
  *((_QWORD *)&v42 + 1) = &off_392778;
  *(_QWORD *)&v40 = v31;
  v32 = *(void **)__swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, v12);
  v33 = v31;
  objc_msgSend(v32, "setUsesTiledViews:", 1);
  v34 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreButton;
  v35 = *(id *)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreButton];
  v36 = objc_msgSend(v23, "tintColor");
  objc_msgSend(v35, "setTitleColor:forState:", v36, 0);

  v37 = *(void **)&v23[v34];
  objc_msgSend(v37, "addTarget:action:forControlEvents:", v23, "moreFrom:", 64);
  objc_msgSend(v23, "addSubview:", v37);

  __swift_destroy_boxed_opaque_existential_0(&v40);
  return v23;
}

Swift::Void __swiftcall ExpandableTextView.didMoveToWindow()()
{
  sub_2D8CC4((SEL *)&selRef_didMoveToWindow);
}

void sub_2D8BC0()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  void *Strong;
  id v8;

  if (objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView], "usesTiledViews")&& (v1 = objc_msgSend(v0, "superview")) != 0)
  {
    v2 = v1;
    while (1)
    {
      v3 = objc_opt_self(UIScrollView);
      v4 = swift_dynamicCastObjCClass(v2, v3);
      if (v4)
        break;
      v5 = objc_msgSend(v2, "superview");

      v2 = v5;
      if (!v5)
        goto LABEL_6;
    }
    v8 = (id)v4;
  }
  else
  {
LABEL_6:
    v8 = 0;
  }
  v6 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_observedScrollView];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_observedScrollView]);
  swift_unknownObjectWeakAssign(v6, v8);
  sub_2D9B1C(Strong);

}

Swift::Void __swiftcall ExpandableTextView.didMoveToSuperview()()
{
  sub_2D8CC4((SEL *)&selRef_didMoveToSuperview);
}

void sub_2D8CC4(SEL *a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, *a1);
  sub_2D8BC0();
}

void sub_2D8D10(void *a1, uint64_t a2, const char **a3)
{
  const char *v4;
  id v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType();
  v4 = *a3;
  v5 = v6.receiver;
  objc_msgSendSuper2(&v6, v4);
  sub_2D8BC0();

}

Swift::Void __swiftcall ExpandableTextView.layoutSubviews()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGFloat x;
  CGFloat y;
  double width;
  double height;
  double v15;
  CGFloat v16;
  void *v17;
  double v18;
  double v19;
  double MinX;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double MaxY;
  id v27;
  void *v28;
  double v29;
  double v30;
  id v31;
  void *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41;
  uint64_t v42;
  double v46;
  objc_super v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;

  v47.receiver = v0;
  v47.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v47, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, "layoutMargins");
  v48.origin.x = UIEdgeInsetsInsetRect(v2, v4, v6, v8, v9, v10);
  x = v48.origin.x;
  y = v48.origin.y;
  width = v48.size.width;
  height = v48.size.height;
  v15 = CGRectGetWidth(v48);
  v49.origin.x = x;
  v49.origin.y = y;
  v49.size.width = width;
  v49.size.height = height;
  v16 = CGRectGetHeight(v49);
  v17 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView];
  objc_msgSend(v17, "sizeThatFits:", v15, v16);
  v19 = v18;
  v50.origin.x = x;
  v50.origin.y = y;
  v50.size.width = width;
  v50.size.height = height;
  MinX = CGRectGetMinX(v50);
  v51.origin.x = x;
  v51.origin.y = y;
  v51.size.width = width;
  v51.size.height = height;
  objc_msgSend(v17, "setFrame:", MinX, CGRectGetMinY(v51), v15, v19);
  v21 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreButton];
  objc_msgSend(v21, "sizeToFit");
  objc_msgSend(v21, "sizeThatFits:", width, height);
  v23 = v22;
  v25 = v24;
  objc_msgSend(v17, "frame");
  MaxY = CGRectGetMaxY(v52);
  v27 = objc_msgSend(v17, "font");
  if (!v27)
  {
    __break(1u);
    goto LABEL_10;
  }
  v28 = v27;
  objc_msgSend(v27, "descender");
  v30 = v29;

  v31 = objc_msgSend(v17, "font");
  if (!v31)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v32 = v31;
  objc_msgSend(v31, "leading");
  v34 = v33;

  objc_msgSend(v21, "firstBaselineFromTop");
  v36 = v35;
  v37 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_shouldMoreBeRTL];
  v38 = type metadata accessor for FadeInDynamicTypeButton();
  v39 = swift_dynamicCastClass(v21, v38);
  if (v39)
  {
    v40 = *(_BYTE *)(v39 + OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeInPosition);
    *(_BYTE *)(v39 + OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeInPosition) = v37;
    v41 = v21;
    sub_4A048(v40);

  }
  objc_msgSend(v17, "frame");
  if (v37)
    v46 = CGRectGetMinX(*(CGRect *)&v42);
  else
    v46 = CGRectGetMaxX(*(CGRect *)&v42) - v23;
  objc_msgSend(v21, "setFrame:", v46, MaxY - fabs(v30) - v34 - v36, v23, v25);
}

double ExpandableTextView.sizeThatFits(_:)(double a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView), "sizeThatFits:");
  return a1;
}

id ExpandableTextView.intrinsicContentSize.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView), "intrinsicContentSize");
}

Swift::Void __swiftcall ExpandableTextView.tintColorDidChange()()
{
  char *v0;
  void *v1;
  id v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "tintColorDidChange");
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreButton];
  v2 = objc_msgSend(v0, "tintColor");
  objc_msgSend(v1, "setTitleColor:forState:", v2, 0);

}

id sub_2D9218()
{
  uint64_t v0;
  int v1;
  id v2;
  void *v3;
  void *v4;
  _BOOL8 v5;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_isCollapsed);
  v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView), "textContainer");
  v3 = v2;
  if (v1 == 1)
  {
    objc_msgSend(v2, "setMaximumNumberOfLines:", *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_collapsedNumberOfLines));

    v4 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreButton);
    v5 = (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_hasMoreButton) & 1) == 0;
  }
  else
  {
    objc_msgSend(v2, "setMaximumNumberOfLines:", 0);

    v4 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreButton);
    v5 = 1;
  }
  return objc_msgSend(v4, "setHidden:", v5);
}

UIAction_optional __swiftcall ExpandableTextView.textView(_:primaryActionFor:defaultAction:)(UITextView _, UITextItem primaryActionFor, UIAction defaultAction)
{
  objc_class *v3;
  Swift::Bool v4;
  UIAction_optional result;

  v3 = (objc_class *)sub_2DA804((uint64_t)primaryActionFor.super.isa, defaultAction.super.super.isa);
  result.value.super.super.isa = v3;
  result.is_nil = v4;
  return result;
}

void sub_2D938C()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  unint64_t v4;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v1);
  v3 = v2;
  v4 = sub_D4A3C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_89A0(&qword_3D0410, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2EF6A0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "openURL:options:completionHandler:", v3, isa, 0, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

UITextItemMenuConfiguration_optional __swiftcall ExpandableTextView.textView(_:menuConfigurationFor:defaultMenu:)(UITextView _, UITextItem menuConfigurationFor, UIMenu defaultMenu)
{
  objc_class *v3;
  Swift::Bool v4;
  UITextItemMenuConfiguration_optional result;

  v3 = (objc_class *)sub_2DAA20((uint64_t)menuConfigurationFor.super.isa, (unsigned __int8 *)defaultMenu.super.super.isa);
  result.value.super.isa = v3;
  result.is_nil = v4;
  return result;
}

uint64_t sub_2D94F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t Strong;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  __int128 v15;
  __int128 v16;
  _QWORD v17[5];
  _BYTE v18[24];

  v4 = *a3;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = (void *)result;
    v17[3] = v4;
    v17[4] = sub_89A0((unint64_t *)&unk_3E1F20, (uint64_t (*)(uint64_t))&type metadata accessor for SeekToTimestampAndPlayAction, (uint64_t)&protocol conformance descriptor for Action);
    v17[0] = a3;
    swift_beginAccess(v5, v14, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v5);
    if (Strong)
    {
      v9 = Strong;
      *((_QWORD *)&v16 + 1) = type metadata accessor for ExpandableTextView(0);
      *(_QWORD *)&v15 = v9;
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    v10 = (void *)swift_unknownObjectWeakLoadStrong(v5);
    v11 = type metadata accessor for ExpandableTextView(0);
    v12 = sub_89A0((unint64_t *)&unk_3E1F10, type metadata accessor for ExpandableTextView, (uint64_t)&protocol conformance descriptor for ExpandableTextView);
    swift_retain(a3);
    v13 = DependencyBindableView.perform(_:from:in:)(v17, &v15, v10, v11, v12);

    swift_release(v13);
    sub_D1D4((uint64_t)&v15, &qword_3D1A70);
    return __swift_destroy_boxed_opaque_existential_0(v17);
  }
  return result;
}

uint64_t sub_2D963C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t Strong;
  void *v35;
  uint64_t v36;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49[24];
  __int128 v50;
  __int128 v51;
  _QWORD v52[5];
  char v53[24];

  v7 = type metadata accessor for ShareSheetContentSource(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ShareSheetAction(0, v8);
  v46 = *(_QWORD *)(v11 - 8);
  v47 = v11;
  __chkstk_darwin(v11);
  v48 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1F00);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v46 - v17;
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v46 - v21;
  v23 = a4 + 16;
  URLComponents.init(url:resolvingAgainstBaseURL:)(a2, 0, v20);
  sub_2DB3A8(a3, (uint64_t)v10);
  sub_D184((uint64_t)v22, (uint64_t)v18, &qword_3E1F00);
  v24 = type metadata accessor for URLComponents(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v18, 1, v24) == 1)
  {
    sub_D1D4((uint64_t)v18, &qword_3E1F00);
    v27 = 0;
    v28 = 1;
  }
  else
  {
    v27 = URLComponents.referenceTime.getter();
    v28 = v29 & 1;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v24);
  }
  sub_D184((uint64_t)v22, (uint64_t)v15, &qword_3E1F00);
  if (v26(v15, 1, v24) == 1)
  {
    sub_D1D4((uint64_t)v15, &qword_3E1F00);
    v30 = 0;
    v31 = 1;
  }
  else
  {
    v30 = URLComponents.playerTime.getter();
    v31 = v32 & 1;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v24);
  }
  v33 = v48;
  ShareSheetAction.init(shareSheetContentSource:referenceTime:playerTime:)(v10, v27, v28, v30, v31);
  swift_beginAccess(v23, v53, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v23);
  if (Strong)
  {
    v35 = (void *)Strong;
    v36 = v47;
    v52[3] = v47;
    v52[4] = sub_89A0(&qword_3E1F08, (uint64_t (*)(uint64_t))&type metadata accessor for ShareSheetAction, (uint64_t)&protocol conformance descriptor for ShareSheetAction);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    v38 = v46;
    (*(void (**)(_QWORD *, char *, uint64_t))(v46 + 16))(boxed_opaque_existential_0, v33, v36);
    swift_beginAccess(v23, v49, 0, 0);
    v39 = swift_unknownObjectWeakLoadStrong(v23);
    if (v39)
    {
      v40 = v39;
      *((_QWORD *)&v51 + 1) = type metadata accessor for ExpandableTextView(0);
      *(_QWORD *)&v50 = v40;
    }
    else
    {
      v50 = 0u;
      v51 = 0u;
    }
    v42 = (void *)swift_unknownObjectWeakLoadStrong(v23);
    v43 = type metadata accessor for ExpandableTextView(0);
    v44 = sub_89A0((unint64_t *)&unk_3E1F10, type metadata accessor for ExpandableTextView, (uint64_t)&protocol conformance descriptor for ExpandableTextView);
    v45 = DependencyBindableView.perform(_:from:in:)(v52, &v50, v42, v43, v44);
    swift_release(v45);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v33, v36);
    sub_D1D4((uint64_t)v22, &qword_3E1F00);
    sub_D1D4((uint64_t)&v50, &qword_3D1A70);
    return __swift_destroy_boxed_opaque_existential_0(v52);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v47);
    return sub_D1D4((uint64_t)v22, &qword_3E1F00);
  }
}

Swift::Void __swiftcall ExpandableTextView._observeScrollViewDidScroll(_:)(UIScrollView_optional a1)
{
  uint64_t v1;
  void *v2;
  void *Strong;
  id v4;
  void *v5;
  id v6;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_observedScrollView);
  v4 = v2;
  v6 = v4;
  if (!Strong)
    goto LABEL_5;
  if (!objc_msgSend(v4, "usesTiledViews"))
  {

LABEL_5:
    objc_msgSend(v6, "_unconstrainTiledRendering");
    v5 = v6;
    goto LABEL_6;
  }
  objc_msgSend(Strong, "bounds");
  objc_msgSend(Strong, "convertRect:toCoordinateSpace:", v6);
  objc_msgSend(v6, "_constrainTiledRenderingToRect:");

  v5 = Strong;
LABEL_6:

}

void sub_2D9B1C(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *Strong;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_observedScrollView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_observedScrollView);
  v6 = Strong;
  if (a1)
  {
    if (!Strong
      || (sub_E710(0, (unint64_t *)&unk_3E1F30, UIScrollView_ptr),
          a1 = a1,
          v7 = static NSObject.== infix(_:_:)(a1, v6),
          a1,
          a1,
          v6,
          (v7 & 1) == 0))
    {
      objc_msgSend(a1, "_removeScrollViewScrollObserver:", v2);
      goto LABEL_7;
    }
  }
  else if (Strong)
  {

LABEL_7:
    v8 = (void *)swift_unknownObjectWeakLoadStrong(v4);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "_addScrollViewScrollObserver:", v2);

    }
    v10 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView);
    v11 = (void *)swift_unknownObjectWeakLoadStrong(v4);
    v12 = v10;
    v14 = v12;
    if (v11)
    {
      if (objc_msgSend(v12, "usesTiledViews"))
      {
        objc_msgSend(v11, "bounds");
        objc_msgSend(v11, "convertRect:toCoordinateSpace:", v14);
        objc_msgSend(v14, "_constrainTiledRenderingToRect:");

        v13 = v11;
LABEL_15:

        return;
      }

    }
    objc_msgSend(v14, "_unconstrainTiledRendering");
    v13 = v14;
    goto LABEL_15;
  }
}

double ExpandableTextView.objectGraph.getter()
{
  uint64_t v0;
  _QWORD *v1;
  double result;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_objectGraph);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_objectGraph, v3, 0, 0);
  *(_QWORD *)&result = swift_retain(*v1).n128_u64[0];
  return result;
}

double sub_2D9DBC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9)
{
  id v14;
  id v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  NSString *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  NSString *v35;
  void *v36;
  id v37;
  unint64_t v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  _QWORD *v46;
  void *v47;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  _BYTE v67[72];
  CGRect v68;

  v14 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
  v15 = v14;
  if ((a3 & 1) != 0)
    objc_msgSend(v14, "setMaximumNumberOfLines:", a4);
  v47 = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
  inited = swift_initStackObject(v16, v67);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  v46 = (_QWORD *)inited;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v18 = qword_3CFF08;
  v19 = NSFontAttributeName;
  if (v18 != -1)
    swift_once(&qword_3CFF08, sub_2D85D0);
  v20 = xmmword_3E1E10;
  v21 = xmmword_3E1E28;
  v53 = qword_3E1E20;
  v54 = (void *)xmmword_3E1E10;
  v51 = qword_3E1E38;
  v52 = *((_QWORD *)&xmmword_3E1E28 + 1);
  v22 = unk_3E1E48;
  v50 = (void *)qword_3E1E40;
  v23 = qword_3E1E50;
  v24 = unk_3E1E58;
  v41 = qword_3E1E50;
  v42 = unk_3E1E58;
  v25 = qword_3E1E60;
  v43 = qword_3E1E60;
  v26 = word_3E1E68;
  v27 = HIBYTE(word_3E1E68);
  v44 = word_3E1E68;
  v45 = HIBYTE(word_3E1E68);
  v28 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  sub_DDA0((void *)v20, *((uint64_t *)&v20 + 1), v53, v21, v52, v51, v50, v22, v23, v24, v25, v26, v27);
  v29 = objc_msgSend(v28, "system");
  v30 = objc_msgSend(v29, "preferredContentSizeCategory");

  v31 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v30);
  v55 = v20;
  v56 = v53;
  v57 = v21;
  v58 = v52;
  v59 = v51;
  v60 = v50;
  v61 = v22;
  v62 = v41;
  v63 = v42;
  v64 = v43;
  v65 = v44;
  v66 = v45;
  v32 = sub_1D5728((uint64_t)&v55, v31);
  v33 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v32, 0.0);

  sub_DCC8(v54, *((uint64_t *)&v20 + 1), v53, v21, v52, v51, v50, v22, v41, v42, v43, v44, v45);
  v46[5] = v33;
  v46[6] = NSParagraphStyleAttributeName;
  v34 = qword_3CF0D8;
  v35 = NSParagraphStyleAttributeName;
  if (v34 != -1)
    swift_once(&qword_3CF0D8, sub_28A30);
  v36 = (void *)qword_3FA958;
  v46[7] = qword_3FA958;
  v37 = v36;
  v38 = sub_D47A0((uint64_t)v46);
  v39 = v47;
  v68.origin.x = sub_21A7CC(a1, a2, 1uLL, v38, v47, a9 - (a6 + a8), 1.79769313e308);
  CGRectGetHeight(v68);
  swift_bridgeObjectRelease(v38);

  return a9;
}

double sub_2DA130(void *a1, char a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  id v14;
  void *v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  id v63[2];
  CGRect v64;

  v14 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
  v15 = v14;
  if ((a2 & 1) != 0)
    objc_msgSend(v14, "setMaximumNumberOfLines:", a3);
  if (a1
    && (v16 = objc_msgSend(a1, "mutableCopy"),
        _bridgeAnyObjectToAny(_:)(&v52, v16, v17),
        swift_unknownObjectRelease(v16),
        v18 = sub_E710(0, (unint64_t *)&qword_3D46A8, NSMutableAttributedString_ptr),
        (swift_dynamicCast(v63, &v52, (char *)&type metadata for Any + 8, v18, 6) & 1) != 0))
  {
    v47 = v15;
    v19 = qword_3CFF08;
    v46 = v63[0];
    v48 = v63[0];
    if (v19 != -1)
      swift_once(&qword_3CFF08, sub_2D85D0);
    v20 = xmmword_3E1E10;
    v21 = xmmword_3E1E28;
    v51 = qword_3E1E20;
    v22 = unk_3E1E48;
    v49 = (void *)qword_3E1E40;
    v50 = qword_3E1E38;
    v24 = qword_3E1E50;
    v23 = unk_3E1E58;
    v40 = xmmword_3E1E28;
    v41 = qword_3E1E50;
    v25 = qword_3E1E60;
    v42 = unk_3E1E58;
    v43 = qword_3E1E60;
    v26 = word_3E1E68;
    v27 = HIBYTE(word_3E1E68);
    v44 = word_3E1E68;
    v45 = HIBYTE(word_3E1E68);
    v28 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
    sub_DDA0((void *)v20, *((uint64_t *)&v20 + 1), v51, v21, *((uint64_t *)&v21 + 1), v50, v49, v22, v24, v23, v25, v26, v27);
    v29 = objc_msgSend(v28, "system");
    v30 = objc_msgSend(v29, "preferredContentSizeCategory");

    v31 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v30);
    v52 = v20;
    v53 = v51;
    v54 = v21;
    v55 = v50;
    v56 = v49;
    v57 = v22;
    v58 = v41;
    v59 = v42;
    v60 = v43;
    v61 = v44;
    v62 = v45;
    v32 = sub_1D5728((uint64_t)&v52, v31);
    v33 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v32, 0.0);

    sub_DCC8((void *)v20, *((uint64_t *)&v20 + 1), v51, v40, *((uint64_t *)&v21 + 1), v50, v49, v22, v41, v42, v43, v44, v45);
    v34 = objc_msgSend(v48, "fullRange");
    objc_msgSend(v48, "addAttribute:value:range:", NSFontAttributeName, v33, v34, v35);

    v36 = v46;
    v15 = v47;
  }
  else
  {
    v36 = 0;
  }
  v37 = v36;
  v38 = v15;
  v64.origin.x = sub_21B3E4(v36, 1uLL, v15, 0, a8 - (a5 + a7), 1.79769313e308);
  CGRectGetHeight(v64);

  return a8;
}

void _s23ShelfKitCollectionViews18ExpandableTextViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_textView;
  type metadata accessor for DynamicTypeTextView();
  if (qword_3CFF08 != -1)
    swift_once(&qword_3CFF08, sub_2D85D0);
  v7 = xmmword_3E1E10;
  v8 = qword_3E1E20;
  v9 = xmmword_3E1E28;
  v10 = qword_3E1E38;
  v11 = qword_3E1E40;
  v12 = qword_3E1E48;
  v13 = qword_3E1E50;
  v14 = qword_3E1E58;
  v15 = qword_3E1E60;
  v16 = word_3E1E68;
  sub_DDA0((void *)xmmword_3E1E10, *((uint64_t *)&xmmword_3E1E10 + 1), qword_3E1E20, xmmword_3E1E28, *((uint64_t *)&xmmword_3E1E28 + 1), qword_3E1E38, (void *)qword_3E1E40, qword_3E1E48, qword_3E1E50, qword_3E1E58, qword_3E1E60, word_3E1E68, SHIBYTE(word_3E1E68));
  *(_QWORD *)&v0[v2] = sub_D32C((uint64_t)&v7);
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreButton;
  if (qword_3CEFF0 != -1)
    swift_once(&qword_3CEFF0, sub_DFAC);
  *(_QWORD *)&v1[v3] = sub_23458C((void *)qword_3D0898);
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_shouldMoreBeRTL] = 0;
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_shareSheetContentSource];
  v5 = type metadata accessor for ShareSheetContentSource(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_hasMoreButton] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_collapsedNumberOfLines] = 3;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_isCollapsed] = 1;
  v6 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_moreTapHandler];
  *v6 = 0;
  v6[1] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_observedScrollView], 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_objectGraph] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ExpandableTextView.swift", 48, 2, 97, 0);
  __break(1u);
}

uint64_t sub_2DA6B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::String_optional v9;
  __n128 v10;
  char v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = URL.host(percentEncoded:)(0);
  if (v9.value._object)
  {
    if (v9.value._countAndFlagsBits == 0xD000000000000012 && v9.value._object == (void *)0x800000000031ADD0)
    {
      v10 = swift_bridgeObjectRelease(v9.value._object);
LABEL_6:
      type metadata accessor for SeekToTimestampAndPlayAction(0, v10);
      v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
      static ActionMetrics.notInstrumented.getter(v12);
      return SeekToTimestampAndPlayAction.__allocating_init(episodeShareURL:actionMetrics:)(v8, v4);
    }
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v9.value._countAndFlagsBits, v9.value._object, 0xD000000000000012, 0x800000000031ADD0, 0);
    v10 = swift_bridgeObjectRelease(v9.value._object);
    if ((v11 & 1) != 0)
      goto LABEL_6;
  }
  return 0;
}

void *sub_2DA804(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  double (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  __n128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v24;

  v3 = type metadata accessor for UITextItem.Content(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v24 - v13;
  UITextItem.content.getter(v12);
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) == enum case for UITextItem.Content.link(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
    v15 = *(double (**)(char *, char *, uint64_t))(v8 + 32);
    v15(v14, v6, v7);
    v16 = sub_2DA6B0((uint64_t)v14);
    v17 = swift_release(v16);
    if (v16)
    {
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v14, v7, v17);
      return 0;
    }
    else
    {
      sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v14, v7);
      v19 = *(unsigned __int8 *)(v8 + 80);
      v20 = (v19 + 16) & ~v19;
      v21 = swift_allocObject(&unk_392838, v20 + v9, v19 | 7);
      v22.n128_f64[0] = v15((char *)(v21 + v20), v10, v7);
      a2 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v22, 0, 0, 0, sub_2DB5FC, v21);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v18 = a2;
  }
  return a2;
}

uint64_t sub_2DAA20(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  UIMenuElementSize v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  NSString v54;
  uint64_t v55;
  unsigned __int8 *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  Swift::String v71;
  Class isa;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  __n128 v77;
  Swift::OpaquePointer v79;
  id v80;
  void (*v81)(uint64_t, char *, uint64_t);
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned __int8 *v93;
  char *v94;
  UIMenuElementSize v95[3];
  UIMenuElementSize v96;
  UIImage_optional v97;

  v93 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1EE8);
  __chkstk_darwin(v2);
  v94 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1EE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ShareSheetContentSource(0);
  v8 = *(_QWORD *)(v7 - 8);
  v90 = v7;
  v91 = v8;
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v88 = (uint64_t)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v89 = (uint64_t)&v80 - v11;
  v12 = type metadata accessor for UITextItem.Content(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(unsigned __int8 **)(v16 - 8);
  v18 = *((_QWORD *)v17 + 8);
  __chkstk_darwin(v16);
  v87 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v80 - v21;
  UITextItem.content.getter(v20);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v15, v12) != enum case for UITextItem.Content.link(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
LABEL_7:
    sub_E710(0, (unint64_t *)&unk_3E1EF0, UITextItemMenuConfiguration_ptr);
    v45 = enum case for UITextItemMenuConfiguration.Preview.default(_:);
    v46 = type metadata accessor for UITextItemMenuConfiguration.Preview(0);
    v47 = *(_QWORD *)(v46 - 8);
    v48 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v94, v45, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
    return UITextItemMenuConfiguration.init(preview:menu:)(v48, v93);
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
  v23 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v17 + 4);
  v23(v22, v15, v16);
  v24 = sub_2DA6B0((uint64_t)v22);
  v25 = v22;
  if (!v24)
  {
    (*((void (**)(char *, uint64_t))v17 + 1))(v22, v16);
    goto LABEL_7;
  }
  v26 = v24;
  v81 = (void (*)(uint64_t, char *, uint64_t))v23;
  v86 = v25;
  v93 = v17;
  v84 = v16;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v28 = swift_allocObject(v27, 40, 7);
  *(_OWORD *)(v28 + 16) = xmmword_2F11D0;
  v29 = sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
  v30._countAndFlagsBits = 2036427856;
  v30._object = (void *)0xE400000000000000;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v32 = PFLocalizedString(_:comment:)(v30, v31);
  object = v32._object;
  countAndFlagsBits = v32._countAndFlagsBits;
  v33 = String._bridgeToObjectiveC()();
  v80 = (id)objc_opt_self(UIImage);
  v34 = objc_msgSend(v80, "systemImageNamed:", v33);

  v35 = swift_allocObject(&unk_3927C0, 24, 7);
  v36 = v92;
  swift_unknownObjectWeakInit(v35 + 16, v92);
  v37 = swift_allocObject(&unk_3927E8, 32, 7);
  *(_QWORD *)(v37 + 16) = v35;
  *(_QWORD *)(v37 + 24) = v26;
  v85 = v26;
  v38 = swift_retain(v26);
  v39 = countAndFlagsBits;
  countAndFlagsBits = v29;
  v40 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v39, object, 0, 0, v34, 0, 0, 0, v38, 0, 0, 0, sub_2DB35C, v37);
  *(_QWORD *)(v28 + 32) = v40;
  v95[0] = v28;
  specialized Array._endMutation()(v40);
  v41 = v95[0];
  v96 = v95[0];
  v42 = v36 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_shareSheetContentSource;
  swift_beginAccess(v36 + OBJC_IVAR____TtC23ShelfKitCollectionViews18ExpandableTextView_shareSheetContentSource, v95, 0, 0);
  sub_D184(v42, (uint64_t)v6, &qword_3E1EE0);
  v43 = v91;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v6, 1, v90) == 1)
  {
    sub_D1D4((uint64_t)v6, &qword_3E1EE0);
    v44 = v84;
  }
  else
  {
    v50 = v89;
    sub_2DB364((uint64_t)v6, v89);
    v51._countAndFlagsBits = 0xA680E26572616853;
    v51._object = (void *)0xA800000000000000;
    v52._countAndFlagsBits = 0x5255206572616853;
    v52._object = (void *)0xAC000000A680E24CLL;
    v53 = PFLocalizedString(_:comment:)(v51, v52);
    v90 = v53._countAndFlagsBits;
    object = v53._object;
    v54 = String._bridgeToObjectiveC()();
    v80 = objc_msgSend(v80, "systemImageNamed:", v54);

    v55 = swift_allocObject(&unk_3927C0, 24, 7);
    swift_unknownObjectWeakInit(v55 + 16, v36);
    v56 = v93;
    v57 = v87;
    v44 = v84;
    (*((void (**)(char *, char *, uint64_t))v93 + 2))(v87, v86, v84);
    v58 = v43;
    v59 = v88;
    sub_2DB3A8(v50, v88);
    v60 = v56[80];
    v61 = (v60 + 16) & ~v60;
    v62 = *(unsigned __int8 *)(v58 + 80);
    v63 = (v18 + v62 + v61) & ~v62;
    v64 = (v9 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    v65 = swift_allocObject(&unk_392810, v64 + 8, v60 | v62 | 7);
    v81(v65 + v61, v57, v44);
    sub_2DB364(v59, v65 + v63);
    *(_QWORD *)(v65 + v64) = v55;
    v67 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v90, object, 0, 0, v80, 0, 0, 0, v66, 0, 0, 0, sub_2DB4E4, v65);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
    v69 = *(_QWORD *)((char *)&dword_10 + (v96 & 0xFFFFFFFFFFFFFF8));
    v68 = *(_QWORD *)((char *)&dword_18 + (v96 & 0xFFFFFFFFFFFFFF8));
    if (v69 >= v68 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
    v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v67);
    specialized Array._endMutation()(v70);
    sub_2DB560(v50);
    v41 = v96;
  }
  sub_E710(0, (unint64_t *)&unk_3E1EF0, UITextItemMenuConfiguration_ptr);
  sub_E710(0, &qword_3D4CF8, UIMenu_ptr);
  v71._countAndFlagsBits = 0;
  v71._object = (void *)0xE000000000000000;
  v97.value.super.isa = 0;
  v97.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v71, (Swift::String_optional)0, v97, 0, 0xFFFFFFFFFFFFFFFFLL, v41, v79).super.super.isa;
  v73 = enum case for UITextItemMenuConfiguration.Preview.default(_:);
  v74 = type metadata accessor for UITextItemMenuConfiguration.Preview(0);
  v75 = *(_QWORD *)(v74 - 8);
  v76 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 104))(v94, v73, v74);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v76, 0, 1, v74);
  v49 = UITextItemMenuConfiguration.init(preview:menu:)(v76, isa);
  v77 = swift_release(v85);
  (*((void (**)(char *, uint64_t, __n128))v93 + 1))(v86, v44, v77);
  return v49;
}

uint64_t sub_2DB15C()
{
  return type metadata accessor for ExpandableTextView(0);
}

uint64_t type metadata accessor for ExpandableTextView(uint64_t a1)
{
  uint64_t result;

  result = qword_3E1EB8;
  if (!qword_3E1EB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ExpandableTextView);
  return result;
}

void sub_2DB1A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = &unk_307178;
  sub_2DB258(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_307178;
    v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[6] = &unk_307178;
    v4[7] = &unk_307190;
    v4[8] = &unk_3071A8;
    v4[9] = &unk_3071C0;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

void sub_2DB258(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3E1EC8)
  {
    v2 = type metadata accessor for ShareSheetContentSource(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3E1EC8);
  }
}

uint64_t sub_2DB2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_2DB2F4(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0)

}

uint64_t sub_2DB30C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2DB330()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2DB35C(uint64_t a1)
{
  uint64_t v1;

  return sub_2D94F0(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_2DB364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShareSheetContentSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2DB3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShareSheetContentSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2DB3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for ShareSheetContentSource(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v6) == 1)
  {

  }
  else
  {
    v11 = type metadata accessor for EpisodeOffer(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v9, v11);
  }
  v12 = (v10 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;
  swift_release(*(_QWORD *)(v0 + v12));
  return swift_deallocObject(v0, v13, v3 | v8 | 7);
}

uint64_t sub_2DB4E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for ShareSheetContentSource(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_2D963C(a1, v1 + v4, v1 + v7, *(_QWORD *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2DB560(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShareSheetContentSource(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2DB59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_2DB5FC()
{
  type metadata accessor for URL(0);
  sub_2D938C();
}

void sub_2DB640()
{
  qword_3E1F40 = 0x4014000000000000;
}

void sub_2DB650()
{
  qword_3E1F48 = 0x4014000000000000;
}

__n128 sub_2DB660()
{
  __n128 result;

  __asm { FMOV            V0.2D, #10.0 }
  xmmword_3E1F50 = (__int128)result;
  return result;
}

double sub_2DB674()
{
  double result;

  result = 10.0;
  xmmword_3E1F60 = xmmword_307200;
  *(_OWORD *)&qword_3E1F70 = xmmword_3047F0;
  return result;
}

void sub_2DB694()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E1F80 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2DB750()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E1F88 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2DB80C()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E1F90 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2DB8CC()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
    qword_3E1F98 = (uint64_t)v4;
  else
    __break(1u);
}

void sub_2DB988()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v0 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v3, v2);

  if (v4)
  {
    objc_msgSend(v4, "size");
    v6 = v5;

    qword_3E1FA0 = v6;
  }
  else
  {
    __break(1u);
  }
}

__n128 sub_2DBA68()
{
  __n128 result;

  __asm { FMOV            V0.2D, #-5.0 }
  xmmword_3E1FA8 = (__int128)result;
  *(__n128 *)&qword_3E1FB8 = result;
  return result;
}

double sub_2DBA7C()
{
  double result;

  result = 60.0;
  xmmword_3E1FC8 = xmmword_307210;
  return result;
}

double sub_2DBA94()
{
  double result;

  result = 190.0;
  xmmword_3E1FD8 = xmmword_307220;
  return result;
}

void sub_2DBAAC(char a1)
{
  _BYTE *v1;
  int v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v2 = a1 & 1;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_tapGestureRecognizer], "setEnabled:", (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded] & 1) == 0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_panGestureRecognizer], "setEnabled:", v1[v3]);
  if (v1[v3] == v2)
  {
    if (v1[v3])
      sub_2DD790();
  }
  else
  {
    objc_msgSend(v1, "setNeedsLayout");
    v4 = (void *)objc_opt_self(UIView);
    v5 = swift_allocObject(&unk_392878, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v1);
    v13 = sub_2DE234;
    v14 = v5;
    v9 = _NSConcreteStackBlock;
    v10 = 1107296256;
    v11 = sub_24360;
    v12 = &block_descriptor_10_1;
    v6 = _Block_copy(&v9);
    swift_release(v14);
    v7 = swift_allocObject(&unk_392878, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16, v1);
    v13 = sub_2DE254;
    v14 = v7;
    v9 = _NSConcreteStackBlock;
    v10 = 1107296256;
    v11 = sub_1E3D64;
    v12 = &block_descriptor_15_1;
    v8 = _Block_copy(&v9);
    swift_release(v14);
    objc_msgSend(v4, "animateWithDuration:delay:options:animations:completion:", 4, v6, v8, 0.2, 0.0);
    _Block_release(v8);
    _Block_release(v6);
  }
}

void sub_2DBC88(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "layoutIfNeeded");

  }
}

void sub_2DBCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *Strong;
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded];

    if (v4 == 1)
    {
      swift_beginAccess(v2, &v7, 0, 0);
      v5 = swift_unknownObjectWeakLoadStrong(v2);
      if (v5)
      {
        v6 = (void *)v5;
        sub_2DD790();

      }
    }
  }
}

void sub_2DBD68()
{
  _BYTE *v0;
  _OWORD *v1;
  char *v2;
  uint64_t v3;
  id v4;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  float v13;
  float v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  NSString v30;
  id v31;
  void *v32;
  NSString v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  NSString v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Class isa;
  __n128 v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[24];
  char v69[24];
  char *v70;
  objc_super v71;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeObserver];
  *v1 = 0u;
  v1[1] = 0u;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_delegate];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeLevel] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isMuted] = 0;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_panGestureRecognizer;
  v4 = objc_allocWithZone((Class)UIPanGestureRecognizer);
  v5 = v0;
  *(_QWORD *)&v0[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_tapGestureRecognizer;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isDragging] = 0;
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeTimer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_backdrop] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoControlBackdrop()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBar] = v7;
  v8 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBarFill] = v8;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeKnob] = v9;
  v10 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_currentVolumeGlyph] = v10;

  v71.receiver = v5;
  v71.super_class = (Class)type metadata accessor for VolumeControl();
  v11 = (char *)objc_msgSendSuper2(&v71, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v11, "setClipsToBounds:", 1);
  v67 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_backdrop;
  objc_msgSend(v11, "addSubview:", *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_backdrop]);
  v12 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
  objc_msgSend(v12, "outputVolume");
  v14 = v13;

  *(double *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeLevel] = v14;
  sub_2DD1C0();
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_currentVolumeGlyph;
  v16 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_currentVolumeGlyph];
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v16;
  v65 = v17;
  v19 = objc_msgSend(v17, "whiteColor");
  v20 = objc_msgSend(v19, "colorWithAlphaComponent:", 0.75);

  v21 = kCAFilterPlusL;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v23 = v22;
  v24 = objc_opt_self(UILabel);
  v25 = swift_dynamicCastObjCClass(v18, v24);
  v66 = v15;
  v64 = v21;
  if (v25)
  {
    v26 = (void *)v25;
    v27 = v18;
    objc_msgSend(v26, "_setTextColorFollowsTintColor:", 1);
    objc_msgSend(v26, "setTintColor:", v20);
    v28 = objc_msgSend(v26, "layer");
    v29 = objc_allocWithZone((Class)CAFilter);
    swift_bridgeObjectRetain(v23);
    v30 = String._bridgeToObjectiveC()();
    v31 = objc_msgSend(v29, "initWithType:", v30, swift_bridgeObjectRelease(v23).n128_f64[0]);

    objc_msgSend(v28, "setCompositingFilter:", v31);
    swift_bridgeObjectRelease(v23);

LABEL_6:
    v36 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBar;
    v37 = *(id *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBar];
    v38 = objc_msgSend(v65, "whiteColor");
    v39 = objc_msgSend(v38, "colorWithAlphaComponent:", 0.1);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v41 = v40;
    sub_9F1DC((uint64_t)v37, (uint64_t)v39, 1.0);

    swift_bridgeObjectRelease(v41);
    v42 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBarFill;
    v43 = *(id *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBarFill];
    v44 = objc_msgSend(v65, "whiteColor");
    v45 = objc_msgSend(v44, "colorWithAlphaComponent:", 0.35);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v47 = v46;
    sub_9F1DC((uint64_t)v43, (uint64_t)v45, 1.0);

    swift_bridgeObjectRelease(v47);
    v48 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeKnob;
    v49 = *(id *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeKnob];
    v50 = objc_msgSend(v65, "_externalSystemWhiteColor");
    objc_msgSend(v49, "setBackgroundColor:", v50);

    v51 = *(void **)(*(_QWORD *)&v11[v67] + OBJC_IVAR____TtC23ShelfKitCollectionViews20VideoControlBackdrop_contentView);
    objc_msgSend(v51, "addSubview:", *(_QWORD *)&v11[v66]);
    objc_msgSend(v51, "addSubview:", *(_QWORD *)&v11[v36]);
    objc_msgSend(v51, "addSubview:", *(_QWORD *)&v11[v42]);
    objc_msgSend(v51, "addSubview:", *(_QWORD *)&v11[v48]);
    v52 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_panGestureRecognizer];
    objc_msgSend(v52, "addTarget:action:", v11, "didSlideWithGestureRecognizer:");
    objc_msgSend(v52, "setDelegate:", v11);
    objc_msgSend(v11, "addGestureRecognizer:", v52);
    v53 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_tapGestureRecognizer];
    objc_msgSend(v53, "addTarget:action:", v11, "didTap");
    objc_msgSend(v53, "setDelegate:", v11);
    objc_msgSend(v11, "addGestureRecognizer:", v53);
    v54 = sub_2DE0A4();
    objc_msgSend(v54, "setUserInteractionEnabled:", 0);

    v55 = sub_2DE0A4();
    objc_msgSend(v11, "addSubview:", v55);

    v56 = String._bridgeToObjectiveC()();
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51F0);
    v58 = swift_allocObject(v57, 48, 7);
    *(_OWORD *)(v58 + 16) = xmmword_2F03C0;
    *(_QWORD *)(v58 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    *(_QWORD *)(v58 + 40) = v59;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v61 = swift_bridgeObjectRelease(v58);
    IMRegisterAVSystemControllerNotifications(isa, v61);

    v70 = (char *)&type metadata for () + 8;
    v62 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v62, "addObserver:selector:name:object:", v11, "volumeChangedWithNotification:", v56, 0);

    v63 = (uint64_t)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeObserver];
    swift_beginAccess(&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeObserver], v68, 33, 0);
    sub_2DE380((uint64_t)v69, v63);
    swift_endAccess(v68);
    return;
  }
  v32 = (void *)objc_opt_self(_UIVisualEffectTintLayerConfig);
  v33 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v32, "layerWithTintColor:filterType:", v20, v33);

  v34 = objc_msgSend((id)objc_opt_self(_UIVisualEffectConfig), "configWithContentConfig:", v28);
  if (v34)
  {
    v35 = v34;
    v31 = objc_msgSend(v34, "contentConfig");

    if (v31)
    {
      objc_msgSend(v31, "configureLayerView:", v18);

      swift_bridgeObjectRelease(v23);
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_2DC5E4()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  objc_super v7;
  __int128 v8;
  uint64_t v9;
  _BYTE v10[24];
  __int128 v11;
  uint64_t v12;

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeObserver];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeObserver], v10, 0, 0);
  sub_D184(v1, (uint64_t)&v8, &qword_3D1A70);
  if (v9)
  {
    sub_1D65C(&v8, &v11);
    v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v3 = v12;
    v4 = __swift_project_boxed_opaque_existential_1(&v11, v12);
    v5 = _bridgeAnythingToObjectiveC<A>(_:)(v4, v3);
    objc_msgSend(v2, "removeObserver:", v5);

    swift_unknownObjectRelease(v5);
    __swift_destroy_boxed_opaque_existential_0(&v11);
  }
  else
  {
    sub_D1D4((uint64_t)&v8, &qword_3D1A70);
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for VolumeControl();
  return objc_msgSendSuper2(&v7, "dealloc");
}

id sub_2DC7F8()
{
  _BYTE *v0;
  uint64_t v1;
  __int128 *v2;
  double v3;
  double v4;
  CGFloat MaxX;
  void *v6;
  BOOL v7;
  double v8;
  CGFloat v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  uint64_t v29;
  double v30;
  double v31;
  CGFloat v32;
  CGFloat x;
  id v34;
  double v35;
  CGFloat v36;
  double v37;
  double v38;
  double Height;
  double v40;
  double v41;
  double v42;
  double v43;
  void *v44;
  double v45;
  __int128 v46;
  double v47;
  void *v48;
  double v49;
  double v50;
  double v51;
  double v52;
  void *v53;
  double v54;
  double v55;
  CGFloat v57;
  double MinX;
  double v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  CGRect recta;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;

  *(_QWORD *)&recta.origin.y = v0;
  *(_QWORD *)&recta.size.width = type metadata accessor for VolumeControl();
  -[CGFloat layoutSubviews]((objc_super *)&recta.origin.y, "layoutSubviews");
  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded;
  if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded] == 1)
  {
    if (qword_3CFF68 != -1)
      swift_once(&qword_3CFF68, sub_2DBA94);
    v2 = &xmmword_3E1FD8;
  }
  else
  {
    if (qword_3CFF60 != -1)
      swift_once(&qword_3CFF60, sub_2DBA7C);
    v2 = &xmmword_3E1FC8;
  }
  v4 = *(double *)v2;
  v3 = *((double *)v2 + 1);
  objc_msgSend(v0, "bounds");
  MaxX = CGRectGetMaxX(v66);
  v6 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_backdrop];
  objc_msgSend(v6, "setFrame:", MaxX - v4, 0.0, v4, v3);
  objc_msgSend(v0, "bounds");
  v7 = CGRectGetHeight(v67) <= 40.0;
  v8 = 8.0;
  if (!v7)
    v8 = 16.0;
  objc_msgSend(v6, "_setContinuousCornerRadius:", v8);
  objc_msgSend(v6, "bounds");
  v64 = v10;
  recta.origin.x = v9;
  v63 = v11;
  v13 = v12;
  objc_msgSend(v6, "bounds");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  if (qword_3CFF28 != -1)
    swift_once(&qword_3CFF28, sub_2DB674);
  v22 = UIEdgeInsetsInsetRect(v15, v17, v19, v21, *(double *)&xmmword_3E1F60, *((double *)&xmmword_3E1F60 + 1));
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_currentVolumeGlyph;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_currentVolumeGlyph], "sizeThatFits:", v63, v13);
  v59 = v31;
  v61 = v30;
  if (v0[v1] == 1)
  {
    v68.origin.x = v22;
    v68.origin.y = v24;
    v68.size.width = v26;
    v68.size.height = v28;
    MinX = CGRectGetMinX(v68);
    v32 = v64;
    x = recta.origin.x;
  }
  else
  {
    v32 = v64;
    x = recta.origin.x;
    v69.origin.x = recta.origin.x;
    v69.origin.y = v64;
    v69.size.width = v63;
    v69.size.height = v13;
    MinX = (CGRectGetWidth(v69) - v61) * 0.5;
  }
  v57 = v24;
  v34 = *(id *)&v0[v29];
  v70.origin.x = x;
  v70.origin.y = v32;
  v70.size.width = v63;
  v70.size.height = v13;
  objc_msgSend(v34, "setFrame:", MinX, (CGRectGetHeight(v70) - v59) * 0.5, v61);

  v62 = v22;
  v71.origin.x = v22;
  v71.origin.y = v24;
  v71.size.width = v26;
  v71.size.height = v28;
  v35 = CGRectGetMinX(v71);
  if (qword_3CFF50 != -1)
    swift_once(&qword_3CFF50, sub_2DB988);
  v60 = v28;
  v36 = v26;
  v37 = *(double *)&qword_3E1FA0;
  if (qword_3CFF18 != -1)
    swift_once(&qword_3CFF18, sub_2DB650);
  v38 = *(double *)&qword_3E1F48;
  v72.origin.x = recta.origin.x;
  v72.origin.y = v32;
  v72.size.width = v63;
  v72.size.height = v13;
  Height = CGRectGetHeight(v72);
  if (qword_3CFF10 != -1)
    swift_once(&qword_3CFF10, sub_2DB640);
  v40 = v35 + v37 + v38;
  v41 = *(double *)&qword_3E1F40;
  v42 = (Height - *(double *)&qword_3E1F40) * 0.5;
  v43 = 0.0;
  if (v0[v1] == 1)
  {
    v73.size.height = v60;
    v73.origin.x = v62;
    v73.origin.y = v57;
    v73.size.width = v36;
    v43 = CGRectGetWidth(v73) - v40;
  }
  v44 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBar];
  UIRoundToViewScale(v44, v41 * 0.5);
  objc_msgSend(v44, "_setCornerRadius:");
  objc_msgSend(v44, "setFrame:", v40, v42, v43, v41);
  v74.origin.y = v64;
  v74.origin.x = recta.origin.x;
  v74.size.width = v63;
  v74.size.height = v13;
  v45 = CGRectGetHeight(v74);
  if (qword_3CFF20 != -1)
    swift_once(&qword_3CFF20, sub_2DB660);
  v46 = xmmword_3E1F50;
  v47 = (v45 - *((double *)&xmmword_3E1F50 + 1)) * 0.5;
  v48 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeKnob];
  v49 = *(double *)&xmmword_3E1F50 * 0.5;
  objc_msgSend(v48, "_setCornerRadius:", *(double *)&xmmword_3E1F50 * 0.5);
  v50 = v40;
  if (v0[v1] == 1)
    v50 = v40 + v43 * *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeLevel];
  objc_msgSend(v48, "setFrame:", v50 - v49, v47, v46);
  v51 = 0.0;
  if (v0[v1] == 1)
  {
    objc_msgSend(v48, "center");
    v51 = v52 - v40;
  }
  v53 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBarFill];
  v54 = *(double *)&qword_3E1F40;
  UIRoundToViewScale(v53, *(double *)&qword_3E1F40 * 0.5);
  objc_msgSend(v53, "_setCornerRadius:");
  objc_msgSend(v53, "setFrame:", v40, v42, v51, v54);
  if (v0[v1])
    v55 = 1.0;
  else
    v55 = 0.0;
  objc_msgSend(v44, "setAlpha:", v55);
  objc_msgSend(v53, "setAlpha:", v55);
  return objc_msgSend(v48, "setAlpha:", v55);
}

void sub_2DCE08(char a1, double a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  id v19;
  id v20;
  double v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[3];
  void *v31;
  void (*v32)();
  uint64_t v33;

  *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeLevel] = a2;
  sub_2DD1C0();
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_currentVolumeGlyph;
  v6 = *(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_currentVolumeGlyph];
  objc_msgSend(v6, "frame");
  v8 = v7;
  v10 = v9;
  v11 = *(id *)&v2[v5];
  objc_msgSend(v2, "bounds");
  objc_msgSend(v11, "sizeThatFits:", v12, v13);
  v15 = v14;
  v17 = v16;

  objc_msgSend(v6, "setFrame:", v8, v10, v15, v17);
  v18 = swift_allocObject(&unk_392878, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v2);
  if ((a1 & 1) != 0)
  {
    swift_retain(v18);
    v19 = sub_2DE0A4();
    v20 = objc_msgSend(v19, "volumeSlider");

    if (!v20)
    {
      __break(1u);
      return;
    }
    *(float *)&v21 = a2;
    objc_msgSend(v20, "setValue:", v21);

    sub_2DD0B4(v18);
    swift_release(v18);
  }
  else if ((v2[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isDragging] & 1) == 0)
  {
    v22 = (void *)objc_opt_self(UIView);
    v32 = sub_2DE26C;
    v33 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    v31 = &block_descriptor_37;
    v23 = _Block_copy(aBlock);
    v24 = v33;
    swift_retain(v18);
    swift_release(v24);
    objc_msgSend(v22, "animateWithDuration:delay:options:animations:completion:", 4, v23, 0, 0.1, 0.0);
    _Block_release(v23);
  }
  sub_D184((uint64_t)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_delegate], (uint64_t)aBlock, &qword_3E2090);
  if (v31)
  {
    sub_1D5D4((uint64_t)aBlock, (uint64_t)v27);
    sub_D1D4((uint64_t)aBlock, &qword_3E2090);
    v25 = v28;
    v26 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    swift_release(v18);
    __swift_destroy_boxed_opaque_existential_0(v27);
  }
  else
  {
    swift_release(v18);
    sub_D1D4((uint64_t)aBlock, &qword_3E2090);
  }
}

void sub_2DD0B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  CGFloat v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  double v9;
  CGFloat v10;
  _BYTE v11[24];
  CGRect v12;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBar), "frame");
    v4 = CGRectGetWidth(v12) * *(double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeLevel];
    v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBarFill;
    v6 = *(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBarFill];
    objc_msgSend(v6, "frame");
    objc_msgSend(v6, "setFrame:");

    v7 = *(void **)&v3[v5];
    v8 = *(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeKnob];
    objc_msgSend(v7, "frame");
    v10 = v4 + v9;
    objc_msgSend(v8, "center");
    objc_msgSend(v8, "setCenter:", v10);

  }
}

id sub_2DD1C0()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t *v3;

  v1 = *(double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeLevel) * 16.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v1 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v2 = (uint64_t)v1;
  if (!(uint64_t)v1)
    goto LABEL_8;
  if ((unint64_t)(v2 - 6) >= 0xFFFFFFFFFFFFFFFBLL)
  {
    if (qword_3CFF38 != -1)
      swift_once(&qword_3CFF38, sub_2DB750);
    v3 = &qword_3E1F88;
  }
  else if ((unint64_t)(v2 - 11) >= 0xFFFFFFFFFFFFFFFBLL)
  {
    if (qword_3CFF40 != -1)
      swift_once(&qword_3CFF40, sub_2DB80C);
    v3 = &qword_3E1F90;
  }
  else
  {
    if ((unint64_t)(v2 - 17) < 0xFFFFFFFFFFFFFFFALL)
    {
LABEL_8:
      if (qword_3CFF30 == -1)
      {
LABEL_9:
        v3 = &qword_3E1F80;
        return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_currentVolumeGlyph), "setImage:", *v3);
      }
LABEL_23:
      swift_once(&qword_3CFF30, sub_2DB694);
      goto LABEL_9;
    }
    if (qword_3CFF48 != -1)
      swift_once(&qword_3CFF48, sub_2DB8CC);
    v3 = &qword_3E1F98;
  }
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_currentVolumeGlyph), "setImage:", *v3);
}

void sub_2DD334(void *a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  double MinX;
  double MaxX;
  double v11;
  double v12;
  double v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v3 = (char *)objc_msgSend(a1, "state");
  if (v3 == (_BYTE *)&dword_0 + 3)
  {
    sub_2DD790();
    *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isDragging) = 0;
  }
  else if (v3 == (_BYTE *)&dword_0 + 2)
  {
    if ((uint64_t)objc_msgSend(a1, "numberOfTouches") >= 1)
    {
      *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isDragging) = 1;
      objc_msgSend(a1, "locationOfTouch:inView:", 0, v1);
      v7 = v6;
      v8 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBar);
      objc_msgSend(v8, "frame");
      MinX = CGRectGetMinX(v14);
      if (MinX > v7)
        v7 = MinX;
      objc_msgSend(v8, "frame");
      MaxX = CGRectGetMaxX(v15);
      if (MaxX < v7)
        v7 = MaxX;
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeBarFill), "frame");
      v12 = v7 - v11;
      objc_msgSend(v8, "frame");
      v13 = v12 / CGRectGetWidth(v16);
      sub_2DCE08(1, v13);
    }
  }
  else if (v3 == (_BYTE *)&dword_0 + 1)
  {
    v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeTimer;
    v5 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeTimer);
    if (v5)
    {
      objc_msgSend(v5, "invalidate");
      v5 = *(void **)(v1 + v4);
    }
    *(_QWORD *)(v1 + v4) = 0;

  }
}

BOOL sub_2DD4EC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  _BOOL8 v29;
  double v31;
  double v32;
  double v33;
  double v34;
  CGPoint v35;

  v2 = v1;
  v4 = objc_opt_self(UIPanGestureRecognizer);
  v5 = swift_dynamicCastObjCClass(a1, v4);
  if (v5)
  {
    v6 = (void *)v5;
    sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_panGestureRecognizer);
    v8 = a1;
    if ((static NSObject.== infix(_:_:)(v6, v7) & 1) != 0)
    {
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded) == 1)
      {
        v9 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeKnob);
        objc_msgSend(v6, "translationInView:", *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeKnob));
        v11 = v10;
        v13 = v12;
        objc_msgSend(v9, "bounds");
        if (qword_3CFF58 != -1)
        {
          v33 = v16;
          v34 = v14;
          v31 = v17;
          v32 = v15;
          swift_once(&qword_3CFF58, sub_2DBA68);
          v17 = v31;
          v15 = v32;
          v16 = v33;
          v14 = v34;
        }
        v18 = UIEdgeInsetsInsetRect(v14, v15, v16, v17, *(double *)&xmmword_3E1FA8, *((double *)&xmmword_3E1FA8 + 1));
        goto LABEL_14;
      }
      goto LABEL_11;
    }

  }
  v22 = objc_opt_self(UITapGestureRecognizer);
  v23 = swift_dynamicCastObjCClass(a1, v22);
  if (v23)
  {
    v24 = (void *)v23;
    sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
    v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_tapGestureRecognizer);
    v26 = a1;
    if ((static NSObject.== infix(_:_:)(v24, v25) & 1) != 0)
    {
      objc_msgSend(v24, "locationInView:", v1);
      if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded) & 1) == 0)
      {
        v11 = v27;
        v13 = v28;
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_backdrop), "frame");
LABEL_14:
        v35.x = v11;
        v35.y = v13;
        v29 = CGRectContainsPoint(*(CGRect *)&v18, v35);
        goto LABEL_15;
      }
    }
LABEL_11:
    v29 = 0;
LABEL_15:

    return v29;
  }
  return 0;
}

void sub_2DD790()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  double v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v15[5];
  uint64_t v16;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeTimer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeTimer);
  if (v2)
  {
    objc_msgSend(v2, "invalidate");
    v3 = *(void **)(v0 + v1);
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)(v0 + v1) = 0;

  v4 = swift_allocObject(&unk_392878, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, v0);
  v15[4] = sub_2DE25C;
  v16 = v4;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_2BBC64;
  v15[3] = &block_descriptor_19_2;
  v5 = _Block_copy(v15);
  v6 = (void *)objc_opt_self(NSTimer);
  swift_retain(v4);
  v7 = objc_msgSend(v6, "timerWithTimeInterval:repeats:block:", 0, v5, 2.0);
  _Block_release(v5);
  v8 = v16;
  swift_release(v4);
  *(_QWORD *)&v9 = swift_release(v8).n128_u64[0];
  v10 = *(void **)(v0 + v1);
  if (!v7 && v10)
  {
    objc_msgSend(v10, "invalidate", v9);
    v10 = *(void **)(v0 + v1);
  }
  *(_QWORD *)(v0 + v1) = v7;

  v11 = *(void **)(v0 + v1);
  if (v11)
  {
    v12 = (void *)objc_opt_self(NSRunLoop);
    v13 = v11;
    v14 = objc_msgSend(v12, "mainRunLoop");
    objc_msgSend(v14, "addTimer:forMode:", v13, NSRunLoopCommonModes);

  }
}

uint64_t sub_2DD938(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  void *Strong;
  void *v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[5];
  uint64_t v24;
  _BYTE v25[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_392878, 24, 7);
  swift_beginAccess(v11, v25, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
  swift_unknownObjectWeakInit(v14 + 16, Strong);

  aBlock[4] = sub_2DE264;
  v24 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_23_1;
  v16 = _Block_copy(aBlock);
  v17 = swift_release(v24);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_CF9B0();
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v20 = sub_CF9F8();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v3, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_2DDB40(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  int v5;
  id v6;
  int v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void **aBlock;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  _BYTE v19[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded;
    v5 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded) = 0;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_tapGestureRecognizer), "setEnabled:", 1);
    v6 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_panGestureRecognizer], "setEnabled:", v3[v4]);
    v7 = v3[v4];
    if (v5 == v7)
    {
      if ((v7 & 1) != 0)
        sub_2DD790(v6);
    }
    else
    {
      objc_msgSend(v3, "setNeedsLayout");
      v8 = (void *)objc_opt_self(UIView);
      v9 = swift_allocObject(&unk_392878, 24, 7);
      swift_unknownObjectWeakInit(v9 + 16, v3);
      v17 = sub_2DE234;
      v18 = v9;
      aBlock = _NSConcreteStackBlock;
      v14 = 1107296256;
      v15 = sub_24360;
      v16 = &block_descriptor_28;
      v10 = _Block_copy(&aBlock);
      swift_release(v18);
      v11 = swift_allocObject(&unk_392878, 24, 7);
      swift_unknownObjectWeakInit(v11 + 16, v3);
      v17 = sub_2DE254;
      v18 = v11;
      aBlock = _NSConcreteStackBlock;
      v14 = 1107296256;
      v15 = sub_1E3D64;
      v16 = &block_descriptor_33_4;
      v12 = _Block_copy(&aBlock);
      swift_release(v18);
      objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 4, v10, v12, 0.2, 0.0);
      _Block_release(v12);
      _Block_release(v10);
    }

  }
}

void sub_2DDD28(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  double v8;
  uint64_t v9;
  int v10;
  int v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void **v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  _QWORD v23[2];
  __int128 v24;
  __int128 v25;

  v2 = v1;
  v3 = objc_msgSend(a1, "userInfo");
  if (!v3)
  {
    v24 = 0u;
    v25 = 0u;
LABEL_11:
    sub_D1D4((uint64_t)&v24, &qword_3D1A70);
    return;
  }
  v4 = v3;
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v23[0] = 0xD000000000000033;
  v23[1] = 0x800000000031AF00;
  AnyHashable.init<A>(_:)(&v17, v23, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_36FB4((uint64_t)&v17), (v7 & 1) != 0))
  {
    sub_1D66C(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease(v5);
  sub_3D5CC((uint64_t)&v17);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_11;
  if ((swift_dynamicCast(&v17, &v24, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) != 0)
  {
    v8 = *(double *)&v17;
    v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded;
    v10 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded];
    v2[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded] = 1;
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_tapGestureRecognizer], "setEnabled:", 0);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_panGestureRecognizer], "setEnabled:", v2[v9]);
    v11 = v2[v9];
    if (v10 == v11)
    {
      if ((v11 & 1) != 0)
        sub_2DD790();
    }
    else
    {
      objc_msgSend(v2, "setNeedsLayout");
      v12 = (void *)objc_opt_self(UIView);
      v13 = swift_allocObject(&unk_392878, 24, 7);
      swift_unknownObjectWeakInit(v13 + 16, v2);
      v21 = sub_2DE234;
      v22 = v13;
      v17 = _NSConcreteStackBlock;
      v18 = 1107296256;
      v19 = sub_24360;
      v20 = &block_descriptor_80;
      v14 = _Block_copy(&v17);
      swift_release(v22);
      v15 = swift_allocObject(&unk_392878, 24, 7);
      swift_unknownObjectWeakInit(v15 + 16, v2);
      v21 = sub_2DE254;
      v22 = v15;
      v17 = _NSConcreteStackBlock;
      v18 = 1107296256;
      v19 = sub_1E3D64;
      v20 = &block_descriptor_5;
      v16 = _Block_copy(&v17);
      swift_release(v22);
      objc_msgSend(v12, "animateWithDuration:delay:options:animations:completion:", 4, v14, v16, 0.2, 0.0);
      _Block_release(v16);
      _Block_release(v14);
    }
    sub_2DCE08(0, v8);
  }
}

uint64_t type metadata accessor for VolumeControl()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews13VolumeControl);
}

id sub_2DE0A4()
{
  void *v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  swift_beginAccess(&unk_3E1FE8, v8, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_3E1FE8);
  v2 = swift_endAccess(v8);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v8, v1, v2);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_56AF8((uint64_t)v8, (uint64_t)v9);
  if (!v10)
  {
    sub_D1D4((uint64_t)v9, &qword_3D1A70);
    goto LABEL_8;
  }
  v3 = sub_E710(0, &qword_3E2098, MPVolumeView_ptr);
  if ((swift_dynamicCast(&v7, v9, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
  {
LABEL_8:
    v5 = objc_msgSend(objc_allocWithZone((Class)MPVolumeView), "initWithFrame:", -1000.0, -1000.0, 0.0, 0.0);
    swift_beginAccess(&unk_3E1FE8, v9, 32, 0);
    v4 = v5;
    objc_setAssociatedObject(v0, &unk_3E1FE8, v4, &stru_2E8.segname[9]);
    swift_endAccess(v9);

    return v4;
  }
  return (id)v7;
}

uint64_t sub_2DE210()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_2DE234()
{
  uint64_t v0;

  sub_2DBC88(v0);
}

double block_copy_helper_80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_80(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_2DE254(uint64_t a1)
{
  uint64_t v1;

  sub_2DBCE0(a1, v1);
}

uint64_t sub_2DE25C(uint64_t a1)
{
  uint64_t v1;

  return sub_2DD938(a1, v1);
}

void sub_2DE264()
{
  uint64_t v0;

  sub_2DDB40(v0);
}

void sub_2DE26C()
{
  uint64_t v0;

  sub_2DD0B4(v0);
}

void sub_2DE274()
{
  _BYTE *v0;
  _OWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeObserver];
  *v1 = 0u;
  v1[1] = 0u;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_delegate];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeLevel] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isMuted] = 0;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_panGestureRecognizer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "init");
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_tapGestureRecognizer;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isDragging] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_isExpanded] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13VolumeControl_volumeTimer] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/VolumeControl.swift", 43, 2, 168, 0);
  __break(1u);
}

uint64_t sub_2DE380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_8888D145BEE0223FF0BBF48E8108849819ResourceBundleClass);
}

uint64_t _s23ShelfKitCollectionViews12DependenciesO03allE09JetEngine15BaseObjectGraphCyFZ_0()
{
  return static Dependencies.allDependencies()();
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGColor");
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGPath");
}

id objc_msgSend__beginTransientContentViewTransaction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginTransientContentViewTransaction");
}

id objc_msgSend__centerImageForDownloading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_centerImageForDownloading");
}

id objc_msgSend__centerImageForPausedDownload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_centerImageForPausedDownload");
}

id objc_msgSend__controlTitleFontForControlStatusType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_controlTitleFontForControlStatusType:");
}

id objc_msgSend__currentContentSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentContentSuperview");
}

id objc_msgSend__endTransientContentViewTransaction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endTransientContentViewTransaction");
}

id objc_msgSend__expectedSizeForControlStatusType_controlTitle_hasControlImage_displayScale_preferredHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_expectedSizeForControlStatusType:controlTitle:hasControlImage:displayScale:preferredHeight:");
}

id objc_msgSend__isInAWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isInAWindow");
}

id objc_msgSend__newControlTitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newControlTitleLabel");
}

id objc_msgSend__scrollToTopIfPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollToTopIfPossible:");
}

id objc_msgSend__setTitleOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTitleOpacity:");
}

id objc_msgSend__updateBackgroundViewCornerRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBackgroundViewCornerRadius");
}

id objc_msgSend__updateControlImageViewAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateControlImageViewAnimation");
}

id objc_msgSend__updateControlStatusProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateControlStatusProperties");
}

id objc_msgSend__updateControlTitleLabelVisualProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateControlTitleLabelVisualProperties");
}

id objc_msgSend__updateShapePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateShapePath");
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addArcWithCenter_radius_startAngle_endAngle_clockwise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArcWithCenter:radius:startAngle:endAngle:clockwise:");
}

id objc_msgSend_addButtonImageWithPointSize_traitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addButtonImageWithPointSize:traitCollection:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_adjustsFontSizeToFitWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustsFontSizeToFitWidth");
}

id objc_msgSend_alignmentRectInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alignmentRectInsets");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ascender");
}

id objc_msgSend_bezierPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPath");
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldSystemFontOfSize:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_cloudDownloadImageForTintColor_pointSize_traitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudDownloadImageForTintColor:pointSize:traitCollection:");
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:");
}

id objc_msgSend_configurationWithPointSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:weight:");
}

id objc_msgSend_contentHorizontalAlignment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentHorizontalAlignment");
}

id objc_msgSend_controlStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlStatus");
}

id objc_msgSend_controlStatusRevision(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlStatusRevision");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultFont");
}

id objc_msgSend_defaultLibraryAddKeepLocalControlHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultLibraryAddKeepLocalControlHeight");
}

id objc_msgSend_descender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descender");
}

id objc_msgSend_displayScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayScale");
}

id objc_msgSend_downloadProgressView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadProgressView");
}

id objc_msgSend_downloadingCenterIconType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadingCenterIconType");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duration");
}

id objc_msgSend_flattenedImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flattenedImageWithColor:");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatValue");
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "font");
}

id objc_msgSend_fontDescriptorWithTextStyle_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorWithTextStyle:weight:");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:");
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_imageWithSymbolConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithSymbolConfiguration:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_insertSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:atIndex:");
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnabled");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isHighlighted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHighlighted");
}

id objc_msgSend_keyPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyPath");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lineHeight");
}

id objc_msgSend_lineWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lineWidth");
}

id objc_msgSend_maximumSizeWithPreferredHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumSizeWithPreferredHeight:");
}

id objc_msgSend_moveToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveToPoint:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_offerButtonSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "offerButtonSize");
}

id objc_msgSend_pauseButtonImageWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseButtonImageWithTraitCollection:");
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithoutAnimation:");
}

id objc_msgSend_pointInside_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointInside:withEvent:");
}

id objc_msgSend_presentationLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationLayer");
}

id objc_msgSend_progressView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressView");
}

id objc_msgSend_removeAnimationForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAnimationForKey:");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_resumeButtonImageWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeButtonImageWithTraitCollection:");
}

id objc_msgSend_secondarySystemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondarySystemBackgroundColor");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBaselineAdjustment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaselineAdjustment:");
}

id objc_msgSend_setBeginTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBeginTime:");
}

id objc_msgSend_setBeginTimeMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBeginTimeMode:");
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderColor:");
}

id objc_msgSend_setBorderWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderWidth:");
}

id objc_msgSend_setCenterImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenterImage:");
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClipsToBounds:");
}

id objc_msgSend_setControlStatus_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlStatus:animated:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setDownloadProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownloadProgress:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setFillColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillColor:");
}

id objc_msgSend_setFillMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillMode:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromValue:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setLineCap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineCap:");
}

id objc_msgSend_setLineWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineWidth:");
}

id objc_msgSend_setMinimumScaleFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumScaleFactor:");
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsLayout");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setOuterRingColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOuterRingColor:");
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPath:");
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgress:");
}

id objc_msgSend_setProgressView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressView:");
}

id objc_msgSend_setRemovedOnCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemovedOnCompletion:");
}

id objc_msgSend_setRepeatCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRepeatCount:");
}

id objc_msgSend_setShadowColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowColor:");
}

id objc_msgSend_setStandardAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStandardAppearance:");
}

id objc_msgSend_setStrokeColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeColor:");
}

id objc_msgSend_setStrokeEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeEnd:");
}

id objc_msgSend_setStrokeStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeStart:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToValue:");
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedApplication");
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:");
}

id objc_msgSend_standardAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardAppearance");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_stopButtonImageWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopButtonImageWithTraitCollection:");
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subviews");
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGrayColor");
}

id objc_msgSend_systemImageNamed_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:compatibleWithTraitCollection:");
}

id objc_msgSend_systemLightGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemLightGrayColor");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "text");
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tintColor");
}

id objc_msgSend_titleForControlStatusType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleForControlStatusType:");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_transientContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transientContentView");
}

id objc_msgSend_updateOuterRingColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateOuterRingColor");
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceStyle");
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKeyPath:");
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whiteColor");
}

