void sub_126934(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E88);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RecommendationsMetadata(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  sub_1D5D4(a2, (uint64_t)v28);
  v15 = *(unsigned __int8 *)(v12 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 47) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_383DC0, v18 + 8, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v19 + v16, v14, v11);
  sub_1B738(v28, v19 + v17);
  *(_QWORD *)(v19 + v18) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B90);
  v20 = swift_retain(a3);
  v21 = Promise.__allocating_init()(v20);
  v22 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v10, 1, 1, v22);
  v23 = (_QWORD *)swift_allocObject(&unk_383DE8, 56, 7);
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = &unk_3D7B88;
  v23[5] = v19;
  v23[6] = v21;
  swift_retain(v21);
  v24 = sub_127948((uint64_t)v10, (uint64_t)&unk_3D7BA0, (uint64_t)v23);
  v25 = swift_release(v24);
  v26 = Promise.optionalPublisher.getter(v25);
  swift_release(v21);
  *a4 = v26;
}

uint64_t sub_126B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for RecommendationsMetadata(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v7);
  v8 = type metadata accessor for ManageCategoriesPageIntent(0);
  v4[9] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[10] = v9;
  v4[11] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v10);
  return swift_task_switch(sub_126BA4, 0, 0);
}

uint64_t sub_126BA4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = v0[8];
  v2 = (_QWORD *)v0[4];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[7] + 16))(v1, v0[3], v0[6]);
  ManageCategoriesPageIntent.init(metadata:)(v1);
  v3 = v2[3];
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1], v5);
  v0[12] = v6;
  v7 = sub_89A0(&qword_3D7BB8, (uint64_t (*)(uint64_t))&type metadata accessor for ManageCategoriesPageIntent, (uint64_t)&protocol conformance descriptor for ManageCategoriesPageIntent);
  *v6 = v0;
  v6[1] = sub_126C6C;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[2], v0[11], v0[5], v0[9], v7, v3, v4);
}

uint64_t sub_126C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_126D20;
  else
    v3 = sub_126CD0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_126CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v1, *(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_126D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v1, *(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_126D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_129310(a1, a2);
}

uint64_t sub_126D78(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  __n128 v22;
  _BYTE v23[16];
  uint64_t v24;
  _BYTE v25[24];

  v5 = type metadata accessor for CategorySection(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a3 += 16;
  swift_beginAccess(a3, v25, 0, 0);
  result = swift_weakLoadStrong(a3);
  if (result)
  {
    v10 = result;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B18);
    FRPOutput.content.getter(&v24, v11);
    v12 = v24;
    sub_126F74(v24, (uint64_t)v8);
    swift_bridgeObjectRelease(v12);
    v13 = *a2;
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B20);
    v15 = *(unsigned __int8 *)(v6 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = swift_allocObject(v14, v16 + *(_QWORD *)(v6 + 72), v15 | 7);
    *(_OWORD *)(v17 + 16) = xmmword_2F03C0;
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 16))(v17 + v16, v8, v5);
    v24 = v17;
    v18 = swift_bridgeObjectRetain(v13);
    sub_1F73E8(v18);
    v19 = v24;
    KeyPath = swift_getKeyPath(&unk_2F8650);
    __chkstk_darwin(KeyPath);
    *(_QWORD *)&v23[-16] = v10;
    *(_QWORD *)&v23[-8] = v19;
    v24 = v10;
    v21 = sub_89A0(&qword_3D1978, type metadata accessor for ManageCategoriesController, (uint64_t)&unk_2F8630);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v24, KeyPath, sub_1291CC, &v23[-32], (char *)&type metadata for () + 8, v21);
    swift_release(v10);
    swift_release(KeyPath);
    v22 = swift_bridgeObjectRelease(v19);
    return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v8, v5, v22);
  }
  return result;
}

void sub_126F74(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  _QWORD v88[2];

  v77 = a2;
  v4 = 0;
  v74 = type metadata accessor for AttributedString.FormattingOptions(0);
  __chkstk_darwin(v74);
  v75 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B28);
  __chkstk_darwin(v6);
  v73 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v72 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1918);
  __chkstk_darwin(v10);
  v76 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v12);
  v78 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B30);
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Category(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v86 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v81 = (char *)&v70 - v21;
  v22 = type metadata accessor for CategoryModel(0);
  __chkstk_darwin(v22);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(a1 + 16);
  if (v26)
  {
    v70 = a1;
    v71 = v2;
    v27 = a1 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    v84 = *(_QWORD *)(v23 + 72);
    v85 = v23;
    v83 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16);
    swift_bridgeObjectRetain(a1);
    v87 = _swiftEmptyArrayStorage;
    v82 = v22;
    while (1)
    {
      v28 = v83(v25, v27, v22);
      v29 = CategoryModel.color.getter(v28);
      if (v30)
      {
        v31 = HexColor.init(_:)(v29);
        if (!v4)
        {
          v33 = v31;
          v79 = CategoryModel.adamID.getter();
          v34 = CategoryModel.name.getter();
          v80 = 0;
          v35 = v34;
          v37 = v36;
          v38 = type metadata accessor for ArtworkModel(0);
          v39 = v78;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v78, 1, 1, v38);
          v40 = v35;
          v4 = v80;
          v41 = v37;
          v22 = v82;
          Category.init(id:title:color:artwork:)(v79, v40, v41, v33, v39);
          v32 = 0;
          goto LABEL_10;
        }
        swift_errorRelease(v4);
        v4 = 0;
      }
      v32 = 1;
LABEL_10:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v32, 1, v17);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v25, v22);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
      {
        sub_D1D4((uint64_t)v16, &qword_3D7B30);
      }
      else
      {
        v42 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
        v43 = v81;
        v42(v81, v16, v17);
        v42(v86, v43, v17);
        if ((swift_isUniquelyReferenced_nonNull_native(v87) & 1) != 0)
          v44 = (unint64_t)v87;
        else
          v44 = sub_20FA68(0, v87[2] + 1, 1, (unint64_t)v87);
        v46 = *(_QWORD *)(v44 + 16);
        v45 = *(_QWORD *)(v44 + 24);
        if (v46 >= v45 >> 1)
          v44 = sub_20FA68(v45 > 1, v46 + 1, 1, v44);
        *(_QWORD *)(v44 + 16) = v46 + 1;
        v47 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
        v87 = (_QWORD *)v44;
        v42((char *)(v44 + v47 + *(_QWORD *)(v18 + 72) * v46), v86, v17);
        v22 = v82;
      }
      v27 += v84;
      if (!--v26)
      {
        swift_bridgeObjectRelease(v70);
        v2 = v71;
        v48 = v87;
        if (v87[2])
          goto LABEL_18;
LABEL_21:
        swift_bridgeObjectRelease(v48);
        v59 = *(_QWORD *)(v2 + 16);
        v60 = *(_QWORD *)(v2 + 24);
        swift_bridgeObjectRetain(v60);
        v61 = v72;
        String.LocalizationValue.init(stringLiteral:)(0xD00000000000002FLL, 0x800000000030F030);
        v62 = type metadata accessor for Locale(0);
        v63 = v73;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v73, 1, 1, v62);
        v88[0] = _swiftEmptyArrayStorage;
        v64 = sub_89A0(&qword_3D7B38, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions, (uint64_t)&protocol conformance descriptor for AttributedString.FormattingOptions);
        v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B40);
        v66 = sub_10EDC(&qword_3D7B48, &qword_3D7B40, (uint64_t)&protocol conformance descriptor for [A]);
        v67 = v75;
        dispatch thunk of SetAlgebra.init<A>(_:)(v88, v65, v66, v74, v64);
        v68 = v76;
        AttributedString.init(localized:options:table:bundle:locale:comment:)(v61, v67, 0, 0, 0, v63, 0, 0, 256);
        v69 = type metadata accessor for AttributedString(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 0, 1, v69);
        v55 = v59;
        v56 = v60;
        v57 = v68;
        v58 = _swiftEmptyArrayStorage;
LABEL_22:
        CategorySection.init(title:titleStyle:description:categories:)(v55, v56, 0, v57, v58);
        return;
      }
    }
  }
  v48 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
    goto LABEL_21;
LABEL_18:
  v88[0] = v48;
  v49 = v48;
  swift_bridgeObjectRetain(v48);
  sub_127748(v88);
  if (!v4)
  {
    swift_bridgeObjectRelease(v49);
    v50 = (_QWORD *)v88[0];
    v51 = *(_QWORD *)(v2 + 16);
    v52 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRetain(v52);
    v53 = v76;
    sub_1262F4(v76);
    v54 = type metadata accessor for AttributedString(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v53, 0, 1, v54);
    v55 = v51;
    v56 = v52;
    v57 = v53;
    v58 = v50;
    goto LABEL_22;
  }
  swift_release(v88[0]);
  __break(1u);
}

_QWORD *sub_1275C0()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 5);
  swift_release(v0[10]);
  swift_release(v0[11]);
  swift_release(v0[12]);
  swift_bridgeObjectRelease(v0[13]);
  v1 = (char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ManageCategoriesController___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_12763C()
{
  uint64_t v0;

  sub_1275C0();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_127660()
{
  return type metadata accessor for ManageCategoriesController(0);
}

uint64_t type metadata accessor for ManageCategoriesController(uint64_t a1)
{
  uint64_t result;

  result = qword_3D79C0;
  if (!qword_3D79C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ManageCategoriesController);
  return result;
}

uint64_t sub_1276A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_2F8600;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_2F8618;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_127748(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for Category(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_21D17C(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_127B44(v5);
  *a1 = v3;
}

uint64_t sub_1277C8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);

  v6[2] = a6;
  v8 = type metadata accessor for ManageCategoriesPage(0);
  v10 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v9);
  v6[3] = v10;
  v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc(a4[1], v11);
  v6[4] = v12;
  *v12 = v6;
  v12[1] = sub_127858;
  return v14(v10);
}

uint64_t sub_127858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_127900;
  else
    v3 = sub_1278BC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1278BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  Promise.resolve(_:)(v1);
  sub_1295E0(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_127900()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  Promise.reject(_:)(v1);
  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_127948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_D1D4(a1, &qword_3D4E88);
    v8 = "/System/Library/PrivateFrameworks/ShareSheet.framework/ShareSheet";
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      v12 = swift_unknownObjectRetain(v9);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10, v12);
      v15 = v14;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = (char *)(v16 | 0x1C00);
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_383E10, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v8, v18, (char *)&type metadata for () + 8, &unk_3D7BB0, v17);
}

uint64_t sub_127A94(uint64_t a1, int *a2, __n128 a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v5 = (_QWORD *)swift_task_alloc(a2[1], a3);
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_127AF8;
  return v7(a1);
}

uint64_t sub_127AF8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_127B44(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __n128 v44;
  void (*v45)(char *, uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  __n128 v58;
  uint64_t v59;
  Swift::Int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  __n128 v89;
  void (*v90)(char *, uint64_t, __n128);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  void (*v94)(char *, uint64_t, uint64_t);
  unint64_t v95;
  unint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  BOOL v121;
  uint64_t v122;
  char v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  BOOL v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  unint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  Swift::Int v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  Swift::Int v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;

  v2 = v1;
  v4 = type metadata accessor for Category(0);
  v176 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v163 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v170 = (char *)&v155 - v8;
  v9 = __chkstk_darwin(v7);
  v172 = (char *)&v155 - v10;
  v11 = __chkstk_darwin(v9);
  v171 = (char *)&v155 - v12;
  v13 = __chkstk_darwin(v11);
  v159 = (char *)&v155 - v14;
  v15 = __chkstk_darwin(v13);
  v166 = (char *)&v155 - v16;
  v17 = __chkstk_darwin(v15);
  v161 = (char *)&v155 - v18;
  __chkstk_darwin(v17);
  v160 = (char *)&v155 - v19;
  v175 = a1;
  v20 = a1[1];
  v21 = _minimumMergeRunLength(_:)(v20);
  if (v21 >= v20)
  {
    if (v20 < 0)
      goto LABEL_150;
    if (v20)
      sub_1286DC(0, v20, 1, v175);
    return;
  }
  if (v20 >= 0)
    v22 = v20;
  else
    v22 = v20 + 1;
  if (v20 < -1)
    goto LABEL_158;
  v156 = v21;
  if (v20 < 2)
  {
    v27 = (char *)_swiftEmptyArrayStorage;
    v26 = (char *)_swiftEmptyArrayStorage
        + ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
    v155 = _swiftEmptyArrayStorage;
    if (v20 != 1)
    {
      v29 = _swiftEmptyArrayStorage[2];
LABEL_116:
      if (v29 >= 2)
      {
        v147 = *v175;
        do
        {
          v148 = v29 - 2;
          if (v29 < 2)
            goto LABEL_145;
          if (!v147)
            goto LABEL_157;
          v149 = *(_QWORD *)&v27[16 * v148 + 32];
          v150 = *(_QWORD *)&v27[16 * v29 + 24];
          v151 = v26;
          sub_1289A4(v147 + *(_QWORD *)(v176 + 72) * v149, v147 + *(_QWORD *)(v176 + 72) * *(_QWORD *)&v27[16 * v29 + 16], v147 + *(_QWORD *)(v176 + 72) * v150, (unint64_t)v26);
          if (v2)
            break;
          if (v150 < v149)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
            v27 = sub_21E728((uint64_t)v27);
          if (v148 >= *((_QWORD *)v27 + 2))
            goto LABEL_147;
          v152 = &v27[16 * v148 + 32];
          *(_QWORD *)v152 = v149;
          *((_QWORD *)v152 + 1) = v150;
          v153 = *((_QWORD *)v27 + 2);
          if (v29 > v153)
            goto LABEL_148;
          memmove(&v27[16 * v29 + 16], &v27[16 * v29 + 32], 16 * (v153 - v29));
          *((_QWORD *)v27 + 2) = v153 - 1;
          v29 = v153 - 1;
          v26 = v151;
        }
        while (v153 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease(v27);
      v154 = v155;
      v155[2] = 0;
      swift_bridgeObjectRelease(v154);
      return;
    }
  }
  else
  {
    v23 = v22 >> 1;
    v24 = static Array._allocateBufferUninitialized(minimumCapacity:)(v22 >> 1, v4);
    *(_QWORD *)(v24 + 16) = v23;
    v25 = *(unsigned __int8 *)(v176 + 80);
    v155 = (_QWORD *)v24;
    v26 = (char *)(v24 + ((v25 + 32) & ~v25));
  }
  v28 = 0;
  v27 = (char *)_swiftEmptyArrayStorage;
  v165 = v26;
  v169 = v4;
  while (1)
  {
    v30 = v28;
    v31 = v28 + 1;
    if (v28 + 1 >= v20)
    {
      v42 = v28 + 1;
      goto LABEL_67;
    }
    v173 = v20;
    v32 = *v175;
    v33 = *(_QWORD *)(v176 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 16);
    v34(v160, *v175 + v33 * v31, v4);
    v164 = v30;
    v162 = v32;
    v174 = v33;
    v35 = ((uint64_t (*)(char *, uint64_t, uint64_t))v34)(v161, v32 + v33 * v30, v4);
    v36 = Category.title.getter(v35);
    v38 = v37;
    v40 = Category.title.getter(v36);
    v41 = v39;
    if (v36 == v40 && v38 == v39)
    {
      LODWORD(v168) = 0;
      v41 = v38;
    }
    else
    {
      LODWORD(v168) = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v40, v39, 1);
    }
    v43 = v159;
    swift_bridgeObjectRelease(v38);
    v44 = swift_bridgeObjectRelease(v41);
    v45 = *(void (**)(char *, uint64_t, __n128))(v176 + 8);
    v46 = v169;
    v45(v161, v169, v44);
    ((void (*)(char *, uint64_t))v45)(v160, v46);
    v42 = v164 + 2;
    if (v164 + 2 < v173)
    {
      v157 = v27;
      v158 = v2;
      v167 = v174 * v31;
      v47 = v162;
      v48 = v174 * v42;
      while (1)
      {
        v49 = v169;
        v34(v166, v47 + v48, v169);
        v50 = ((uint64_t (*)(char *, uint64_t, uint64_t))v34)(v43, v47 + v167, v49);
        v51 = Category.title.getter(v50);
        v53 = v52;
        v55 = Category.title.getter(v51);
        v56 = v54;
        if (v51 == v55 && v53 == v54)
        {
          v57 = 0;
          v56 = v53;
        }
        else
        {
          v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v53, v55, v54, 1);
        }
        swift_bridgeObjectRelease(v53);
        v58 = swift_bridgeObjectRelease(v56);
        v59 = v169;
        v45(v43, v169, v58);
        ((void (*)(char *, uint64_t))v45)(v166, v59);
        if (((v168 ^ v57) & 1) != 0)
          break;
        ++v42;
        v47 += v174;
        if (v173 == v42)
        {
          v60 = v173;
          v42 = v173;
          v27 = v157;
          v2 = v158;
          goto LABEL_32;
        }
      }
      v27 = v157;
      v2 = v158;
    }
    v60 = v173;
LABEL_32:
    v30 = v164;
    v61 = v162;
    if ((v168 & 1) == 0)
      break;
    if (v42 < v164)
      goto LABEL_151;
    if (v164 >= v42)
      break;
    v157 = v27;
    v158 = v2;
    v62 = 0;
    v63 = v174 * (v42 - 1);
    v64 = v42 * v174;
    v65 = v164;
    v66 = v164 * v174;
    do
    {
      if (v65 != v42 + v62 - 1)
      {
        if (!v61)
          goto LABEL_156;
        v70 = v42;
        v71 = v61 + v66;
        v72 = v61 + v63;
        v168 = *(_QWORD *)(v176 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v168)(v163, v61 + v66, v169);
        if (v66 < v63 || v71 >= v61 + v64)
        {
          v67 = v61 + v66;
          v68 = v61 + v63;
          v69 = v169;
          swift_arrayInitWithTakeFrontToBack(v67, v68, 1, v169);
        }
        else
        {
          v69 = v169;
          if (v66 != v63)
            swift_arrayInitWithTakeBackToFront(v71, v72);
        }
        ((void (*)(uint64_t, char *, uint64_t))v168)(v72, v163, v69);
        v42 = v70;
        v61 = v162;
      }
      ++v65;
      --v62;
      v63 -= v174;
      v64 -= v174;
      v66 += v174;
    }
    while (v65 < v42 + v62);
    v27 = v157;
    v2 = v158;
    v73 = v169;
    v30 = v164;
    v60 = v173;
    if (v42 < v173)
      goto LABEL_48;
LABEL_67:
    if (v42 < v30)
      goto LABEL_144;
    if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
      v27 = sub_21E2F8(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v96 = *((_QWORD *)v27 + 2);
    v95 = *((_QWORD *)v27 + 3);
    v29 = v96 + 1;
    v26 = v165;
    v174 = v42;
    if (v96 >= v95 >> 1)
    {
      v146 = sub_21E2F8((char *)(v95 > 1), v96 + 1, 1, v27);
      v26 = v165;
      v27 = v146;
    }
    *((_QWORD *)v27 + 2) = v29;
    v97 = v27 + 32;
    v98 = &v27[16 * v96 + 32];
    v99 = v174;
    *(_QWORD *)v98 = v30;
    *((_QWORD *)v98 + 1) = v99;
    if (v96)
    {
      while (1)
      {
        v100 = v29 - 1;
        if (v29 >= 4)
        {
          v105 = &v97[16 * v29];
          v106 = *((_QWORD *)v105 - 8);
          v107 = *((_QWORD *)v105 - 7);
          v111 = __OFSUB__(v107, v106);
          v108 = v107 - v106;
          if (v111)
            goto LABEL_133;
          v110 = *((_QWORD *)v105 - 6);
          v109 = *((_QWORD *)v105 - 5);
          v111 = __OFSUB__(v109, v110);
          v103 = v109 - v110;
          v104 = v111;
          if (v111)
            goto LABEL_134;
          v112 = v29 - 2;
          v113 = &v97[16 * v29 - 32];
          v115 = *(_QWORD *)v113;
          v114 = *((_QWORD *)v113 + 1);
          v111 = __OFSUB__(v114, v115);
          v116 = v114 - v115;
          if (v111)
            goto LABEL_136;
          v111 = __OFADD__(v103, v116);
          v117 = v103 + v116;
          if (v111)
            goto LABEL_139;
          if (v117 >= v108)
          {
            v135 = &v97[16 * v100];
            v137 = *(_QWORD *)v135;
            v136 = *((_QWORD *)v135 + 1);
            v111 = __OFSUB__(v136, v137);
            v138 = v136 - v137;
            if (v111)
              goto LABEL_143;
            v128 = v103 < v138;
            goto LABEL_104;
          }
        }
        else
        {
          if (v29 != 3)
          {
            v129 = *((_QWORD *)v27 + 4);
            v130 = *((_QWORD *)v27 + 5);
            v111 = __OFSUB__(v130, v129);
            v122 = v130 - v129;
            v123 = v111;
            goto LABEL_98;
          }
          v102 = *((_QWORD *)v27 + 4);
          v101 = *((_QWORD *)v27 + 5);
          v111 = __OFSUB__(v101, v102);
          v103 = v101 - v102;
          v104 = v111;
        }
        if ((v104 & 1) != 0)
          goto LABEL_135;
        v112 = v29 - 2;
        v118 = &v97[16 * v29 - 32];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v121 = __OFSUB__(v119, v120);
        v122 = v119 - v120;
        v123 = v121;
        if (v121)
          goto LABEL_138;
        v124 = &v97[16 * v100];
        v126 = *(_QWORD *)v124;
        v125 = *((_QWORD *)v124 + 1);
        v111 = __OFSUB__(v125, v126);
        v127 = v125 - v126;
        if (v111)
          goto LABEL_141;
        if (__OFADD__(v122, v127))
          goto LABEL_142;
        if (v122 + v127 >= v103)
        {
          v128 = v103 < v127;
LABEL_104:
          if (v128)
            v100 = v112;
          goto LABEL_106;
        }
LABEL_98:
        if ((v123 & 1) != 0)
          goto LABEL_137;
        v131 = &v97[16 * v100];
        v133 = *(_QWORD *)v131;
        v132 = *((_QWORD *)v131 + 1);
        v111 = __OFSUB__(v132, v133);
        v134 = v132 - v133;
        if (v111)
          goto LABEL_140;
        if (v134 < v122)
          goto LABEL_14;
LABEL_106:
        v139 = v100 - 1;
        if (v100 - 1 >= v29)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!*v175)
          goto LABEL_155;
        v140 = v27;
        v141 = &v97[16 * v139];
        v142 = *(_QWORD *)v141;
        v143 = &v97[16 * v100];
        v144 = *((_QWORD *)v143 + 1);
        sub_1289A4(*v175 + *(_QWORD *)(v176 + 72) * *(_QWORD *)v141, *v175 + *(_QWORD *)(v176 + 72) * *(_QWORD *)v143, *v175 + *(_QWORD *)(v176 + 72) * v144, (unint64_t)v26);
        if (v2)
        {
          v27 = v140;
          goto LABEL_127;
        }
        if (v144 < v142)
          goto LABEL_130;
        if (v100 > *((_QWORD *)v140 + 2))
          goto LABEL_131;
        *(_QWORD *)v141 = v142;
        *(_QWORD *)&v97[16 * v139 + 8] = v144;
        v145 = *((_QWORD *)v140 + 2);
        if (v100 >= v145)
          goto LABEL_132;
        v27 = v140;
        v29 = v145 - 1;
        memmove(&v97[16 * v100], v143 + 16, 16 * (v145 - 1 - v100));
        *((_QWORD *)v140 + 2) = v145 - 1;
        v26 = v165;
        if (v145 <= 2)
          goto LABEL_14;
      }
    }
    v29 = 1;
LABEL_14:
    v20 = v175[1];
    v28 = v174;
    v4 = v169;
    if (v174 >= v20)
      goto LABEL_116;
  }
  v73 = v169;
  if (v42 >= v60)
    goto LABEL_67;
LABEL_48:
  if (__OFSUB__(v42, v30))
    goto LABEL_149;
  if (v42 - v30 >= v156)
    goto LABEL_67;
  if (__OFADD__(v30, v156))
    goto LABEL_152;
  if (v30 + v156 >= v60)
    v74 = v60;
  else
    v74 = v30 + v156;
  if (v74 >= v30)
  {
    if (v42 != v74)
    {
      v164 = v30;
      v157 = v27;
      v158 = v2;
      v75 = *(_QWORD *)(v176 + 72);
      v167 = *(_QWORD *)(v176 + 16);
      v168 = v75;
      v173 = v42 * v75;
      v174 = v75 * (v42 - 1);
      v162 = v74;
      do
      {
        v77 = 0;
        v78 = v164;
        while (1)
        {
          v79 = *v175;
          v80 = (uint64_t (*)(char *, uint64_t, uint64_t))v167;
          ((void (*)(char *, Swift::Int, uint64_t))v167)(v171, v173 + v77 + *v175, v73);
          v81 = v80(v172, v174 + v77 + v79, v73);
          v82 = Category.title.getter(v81);
          v84 = v83;
          v86 = Category.title.getter(v82);
          v87 = v85;
          if (v82 == v86 && v84 == v85)
            break;
          v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v82, v84, v86, v85, 1);
          swift_bridgeObjectRelease(v84);
          v89 = swift_bridgeObjectRelease(v87);
          v90 = *(void (**)(char *, uint64_t, __n128))(v176 + 8);
          v73 = v169;
          v90(v172, v169, v89);
          ((void (*)(char *, uint64_t))v90)(v171, v73);
          if ((v88 & 1) == 0)
            goto LABEL_58;
          v91 = *v175;
          if (!*v175)
            goto LABEL_154;
          v92 = v91 + v173 + v77;
          v93 = (char *)(v91 + v174 + v77);
          v94 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 32);
          v94(v170, v92, v73);
          swift_arrayInitWithTakeFrontToBack(v92, v93, 1, v73);
          v94(v93, (uint64_t)v170, v73);
          v77 -= v168;
          if (v42 == ++v78)
            goto LABEL_58;
        }
        swift_bridgeObjectRelease_n(v84, 2);
        v76 = *(void (**)(char *, uint64_t))(v176 + 8);
        v73 = v169;
        v76(v172, v169);
        v76(v171, v73);
LABEL_58:
        ++v42;
        v174 += v168;
        v173 += v168;
      }
      while (v42 != v162);
      v42 = v162;
      v27 = v157;
      v2 = v158;
      v30 = v164;
    }
    goto LABEL_67;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_1286DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __n128 v28;
  void (*v29)(char *, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  _QWORD *v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v42 = a4;
  v36 = a1;
  v6 = type metadata accessor for Category(0);
  v43 = *(_QWORD **)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v41 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v45 = (char *)&v34 - v10;
  result = __chkstk_darwin(v9);
  v44 = (char *)&v34 - v12;
  v40 = a3;
  v35 = a2;
  if (a3 != a2)
  {
    v13 = v43[9];
    v37 = (uint64_t (*)(char *, uint64_t, uint64_t))v43[2];
    v38 = v13;
    v14 = v13 * (v40 - 1);
    v46 = v13 * v40;
LABEL_6:
    v16 = 0;
    v17 = v36;
    v39 = v14;
    while (1)
    {
      v18 = *v42;
      v19 = v37;
      v37(v44, v46 + v16 + *v42, v6);
      v20 = v19(v45, v14 + v16 + v18, v6);
      v21 = Category.title.getter(v20);
      v23 = v22;
      v25 = Category.title.getter(v21);
      v26 = v24;
      if (v21 == v25 && v23 == v24)
      {
        swift_bridgeObjectRelease_n(v23, 2);
        v15 = (void (*)(char *, uint64_t))v43[1];
        v15(v45, v6);
        result = ((uint64_t (*)(char *, uint64_t))v15)(v44, v6);
        v14 = v39;
LABEL_5:
        v14 += v38;
        v46 += v38;
        if (++v40 == v35)
          return result;
        goto LABEL_6;
      }
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v24, 1);
      swift_bridgeObjectRelease(v23);
      v28 = swift_bridgeObjectRelease(v26);
      v29 = (void (*)(char *, uint64_t, __n128))v43[1];
      v29(v45, v6, v28);
      result = ((uint64_t (*)(char *, uint64_t))v29)(v44, v6);
      v14 = v39;
      if ((v27 & 1) == 0)
        goto LABEL_5;
      v30 = *v42;
      if (!*v42)
        break;
      v31 = v30 + v46 + v16;
      v32 = v30 + v39 + v16;
      v33 = (void (*)(char *, uint64_t, uint64_t))v43[4];
      v33(v41, v31, v6);
      swift_arrayInitWithTakeFrontToBack(v31, v32, 1, v6);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(v32, v41, v6);
      v16 -= v38;
      if (v40 == ++v17)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1289A4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char v35;
  __n128 v36;
  void (*v37)(char *, uint64_t, __n128);
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(char *, unint64_t, uint64_t);
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __n128 v55;
  void (*v56)(char *, uint64_t, __n128);
  BOOL v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t result;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;

  v8 = type metadata accessor for Category(0);
  v9 = __chkstk_darwin(v8);
  v67 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v66 = (char *)&v63 - v12;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v63 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v63 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  v68 = v18;
  v69 = v19;
  if (!v19)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v69 == -1)
    goto LABEL_69;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v69 == -1)
    goto LABEL_70;
  v21 = (uint64_t)(a2 - a1) / v69;
  v72 = a1;
  v71 = a4;
  v22 = v20 / v69;
  if (v21 >= v20 / v69)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v69;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v22, v8);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v41 = a4 + v24;
      v70 = a4 + v24;
      v72 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v43 = -v69;
        v69 = *(_QWORD *)(v68 + 16);
        v64 = a4;
        v65 = a1;
        do
        {
          v44 = a3;
          v45 = (uint64_t (*)(char *, unint64_t, uint64_t))v69;
          ((void (*)(char *, unint64_t, uint64_t))v69)(v66, v41 + v43, v8);
          v46 = a2 + v43;
          v47 = v45(v67, a2 + v43, v8);
          v48 = Category.title.getter(v47);
          v50 = v49;
          v52 = Category.title.getter(v48);
          v53 = v51;
          if (v48 == v52 && v50 == v51)
          {
            v54 = 0;
            v53 = v50;
          }
          else
          {
            v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v50, v52, v51, 1);
          }
          swift_bridgeObjectRelease(v50);
          v55 = swift_bridgeObjectRelease(v53);
          a3 += v43;
          v56 = *(void (**)(char *, uint64_t, __n128))(v68 + 8);
          v56(v67, v8, v55);
          ((void (*)(char *, uint64_t))v56)(v66, v8);
          if ((v54 & 1) != 0)
          {
            if (v44 < a2 || a3 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v44 + v43, a2 + v43, 1, v8);
              v58 = v64;
              v59 = v65;
            }
            else
            {
              v57 = v44 == a2;
              v58 = v64;
              v59 = v65;
              if (!v57)
                swift_arrayInitWithTakeBackToFront(a3, a2 + v43);
            }
            v72 += v43;
          }
          else
          {
            v60 = v70;
            v61 = v70 + v43;
            v70 += v43;
            if (v44 < v60 || a3 >= v60)
            {
              swift_arrayInitWithTakeFrontToBack(v44 + v43, v61, 1, v8);
              v46 = a2;
              v58 = v64;
              v59 = v65;
            }
            else
            {
              v59 = v65;
              if (v44 != v60)
                swift_arrayInitWithTakeBackToFront(v44 + v43, v61);
              v46 = a2;
              v58 = v64;
            }
          }
          v41 = v70;
          if (v70 <= v58)
            break;
          a2 = v46;
        }
        while (v46 > v59);
      }
LABEL_67:
      sub_21E550(&v72, &v71, (uint64_t *)&v70);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v69;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v21, v8);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v67 = (char *)(a4 + v23);
    v70 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v68 + 16);
      while (1)
      {
        v26(v17, a2, v8);
        v27 = ((uint64_t (*)(char *, unint64_t, uint64_t))v26)(v15, a4, v8);
        v28 = Category.title.getter(v27);
        v30 = v29;
        v32 = Category.title.getter(v28);
        v33 = v31;
        if (v28 == v32 && v30 == v31)
          break;
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v32, v31, 1);
        swift_bridgeObjectRelease(v30);
        v36 = swift_bridgeObjectRelease(v33);
        v37 = *(void (**)(char *, uint64_t, __n128))(v68 + 8);
        v37(v15, v8, v36);
        ((void (*)(char *, uint64_t))v37)(v17, v8);
        if ((v35 & 1) == 0)
          goto LABEL_31;
        v38 = v72;
        v39 = a2 + v69;
        if (v72 < a2 || v72 >= v39)
        {
          swift_arrayInitWithTakeFrontToBack(v72, a2, 1, v8);
        }
        else if (v72 == a2)
        {
          v38 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v72, a2);
        }
LABEL_37:
        v72 = v38 + v69;
        a4 = v71;
        if (v71 < (unint64_t)v67)
        {
          a2 = v39;
          if (v39 < a3)
            continue;
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n(v30, 2);
      v34 = *(void (**)(char *, uint64_t))(v68 + 8);
      v34(v15, v8);
      v34(v17, v8);
LABEL_31:
      v38 = v72;
      v40 = v71 + v69;
      if (v72 < v71 || v72 >= v40)
      {
        swift_arrayInitWithTakeFrontToBack(v72, v71, 1, v8);
      }
      else if (v72 != v71)
      {
        swift_arrayInitWithTakeBackToFront(v72, v71);
      }
      v71 = v40;
      v39 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

Swift::String *sub_128F80(uint64_t a1)
{
  Swift::String *v1;
  Swift::String *v2;
  id v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;
  __int128 v16[2];
  Swift::String v17;

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v17._object = (void *)0xE900000000000073;
  v5._object = (void *)0x800000000030F000;
  v5._countAndFlagsBits = 0xD000000000000029;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0x657469726F766146;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v17);

  v2[1] = v7;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_F35DC((uint64_t)_swiftEmptyArrayStorage);
    v8 = v15;
  }
  else
  {
    v8 = &_swiftEmptySetSingleton;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7A80);
  v10 = swift_allocObject(v9, 28, 7);
  *(_DWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 16) = v8;
  v2[6]._countAndFlagsBits = v10;
  v2[6]._object = _swiftEmptyArrayStorage;
  ObservationRegistrar.init()();
  v2[2]._countAndFlagsBits = a1;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7A88);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v16, v11, v11);
  sub_1B738(v16, (uint64_t)&v2[2]._object);
  v12 = type metadata accessor for CategoryObserverProvider(0);
  BaseObjectGraph.inject<A>(_:)(v16, v12, v12);
  v2[5]._countAndFlagsBits = *(_QWORD *)&v16[0];
  v13 = type metadata accessor for RecommendationsMetadataProvider(0);
  BaseObjectGraph.inject<A>(_:)(v16, v13, v13);
  v2[5]._object = *(void **)&v16[0];
  return v2;
}

uint64_t sub_12911C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_129148(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_126934(a1, v2 + 16, *(_QWORD *)(v2 + 56), a2);
}

uint64_t sub_129154()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_129178(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_126D78(a1, a2, v2);
}

uint64_t sub_129180(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B10);
  return v3(a1, a1 + *(int *)(v4 + 48));
}

void sub_1291CC()
{
  sub_1291E0();
}

void sub_1291E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 104) = v1;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRelease(v3);
}

void sub_129218()
{
  AttributeScopes.FoundationAttributes.link.getter();
  __break(1u);
}

unint64_t sub_129234()
{
  unint64_t result;

  result = qword_3D7B50;
  if (!qword_3D7B50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.FoundationAttributes.LinkAttribute, &type metadata for AttributeScopes.FoundationAttributes.LinkAttribute);
    atomic_store(result, (unint64_t *)&qword_3D7B50);
  }
  return result;
}

void sub_129278(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_129234();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_12929C()
{
  return 8;
}

uint64_t sub_1292A8(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1292B0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1292C0()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B70);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_129304(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_129310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_129358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for RecommendationsMetadata(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1293E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for RecommendationsMetadata(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = *(_QWORD *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_3D7B84, v10);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_C9738;
  return sub_126B18(a1, v7, v8, v9);
}

uint64_t sub_129484()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1294B8(uint64_t a1, __n128 a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v5 = v2[2];
  v6 = v2[3];
  v7 = (int *)v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v10 = (_QWORD *)swift_task_alloc(dword_3D7B9C, a2);
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_C9738;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3D7B98
                                                                                     + dword_3D7B98))(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_12954C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_129570(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  __n128 v7;

  v5 = *(int **)(v2 + 16);
  v6 = (_QWORD *)swift_task_alloc(dword_3D7BAC, a2);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_12961C;
  return ((uint64_t (*)(uint64_t, int *, __n128))((char *)&dword_3D7BA8 + dword_3D7BA8))(a1, v5, v7);
}

uint64_t sub_1295E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ManageCategoriesPage(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void UIScrollView.perform(testCase:runner:)(uint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v5;
  int v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  NSString v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  NSString v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  double (*v28)();
  uint64_t v29;

  v5 = (void *)objc_opt_self(RPTTestRunner);
  if (!objc_msgSend(v5, "isRecapAvailable"))
  {
    v15 = a2[3];
    v16 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v15);
    (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v16 + 16))(a1, 0xD000000000000013, 0x800000000030F140, v15, v16);
    return;
  }
  v6 = *(unsigned __int8 *)(a1 + 56) >> 6;
  if (v6)
  {
    if (v6 != 1)
      return;
    v7 = objc_msgSend(v2, "window");
    if (!v7)
    {
      v22 = a2[3];
      v23 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v22);
      (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v23 + 16))(a1, 0xD000000000000028, 0x800000000030F160, v22, v23);
      return;
    }
    v8 = v7;
    v9 = *(_QWORD *)(a1 + 8);
    v10 = objc_allocWithZone((Class)RPTResizeTestParameters);
    swift_bridgeObjectRetain(v9);
    v11 = v8;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    v28 = sub_129908;
    v29 = 0;
    v24 = _NSConcreteStackBlock;
    v25 = 1107296256;
    v26 = sub_24360;
    v27 = &block_descriptor_23;
    v13 = _Block_copy(&v24);
    v14 = objc_msgSend(v10, "initWithTestName:window:completionHandler:", v12, v11, v13, swift_release(v29).n128_f64[0]);

    _Block_release(v13);
    objc_msgSend(v5, "runTestWithParameters:", v14);

  }
  else
  {
    v17 = *(_QWORD *)(a1 + 8);
    v18 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
    swift_bridgeObjectRetain(v17);
    v19 = v2;
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v28 = sub_1298F4;
    v29 = 0;
    v24 = _NSConcreteStackBlock;
    v25 = 1107296256;
    v26 = sub_24360;
    v27 = &block_descriptor_3_1;
    v21 = _Block_copy(&v24);
    v14 = objc_msgSend(v18, "initWithTestName:scrollView:completionHandler:", v20, v19, v21, swift_release(v29).n128_f64[0]);

    _Block_release(v21);
    RPTAmplitudeFromPagesOfView(v19, 2, 2);
    objc_msgSend(v14, "setAmplitude:");
    objc_msgSend(v5, "runTestWithParameters:", v14);
  }

}

double sub_1298F4()
{
  return sub_12991C(0x46206C6C6F726353);
}

double sub_129908()
{
  return sub_12991C(0x4620657A69736552);
}

double sub_12991C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v3 + 56) = &type metadata for String;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = 0xEF64656873696E69;
  print(_:separator:terminator:)();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_23(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1299B0(uint64_t a1, _QWORD *a2)
{
  UIScrollView.perform(testCase:runner:)(a1, a2);
}

id sub_1299D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  char *v21;
  __int128 v22;
  __int128 v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  id v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  id v38;
  char *v39;
  _QWORD *v40;
  void (*v41)(_QWORD *);
  _QWORD *v42;
  objc_class *v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;
  _QWORD v53[2];
  _OWORD v54[4];
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[40];

  v51 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressStyle] = 1;
  *(_DWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progress] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_playing] = 0;
  v11 = objc_allocWithZone((Class)UIColor);
  v12 = v4;
  v13 = objc_msgSend(v11, "initWithWhite:alpha:", 0.0, 0.1);
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v15 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.2);
  v56 = xmmword_2EFD00;
  *(_QWORD *)&v57 = v13;
  *((_QWORD *)&v57 + 1) = v14;
  *(_QWORD *)v58 = v15;
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)&v58[8] = _Q0;
  *(_OWORD *)&v58[24] = _Q0;
  v21 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressBarSettings];
  v22 = *(_OWORD *)&v58[16];
  *((_OWORD *)v21 + 2) = *(_OWORD *)v58;
  *((_OWORD *)v21 + 3) = v22;
  *((_QWORD *)v21 + 8) = *(_QWORD *)&v58[32];
  v23 = v57;
  *(_OWORD *)v21 = v56;
  *((_OWORD *)v21 + 1) = v23;
  v24 = v13;
  v25 = v14;
  v26 = v15;
  v27 = sub_1389C0(0);

  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressView] = v27;
  v28 = type metadata accessor for LegacyCachingArtworkView(0);
  *v10 = 0x401C000000000000;
  v29 = enum case for ImageBlur.light(_:);
  v30 = type metadata accessor for ImageBlur(0);
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v31 + 104))(v10, v29, v30);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v10, 0, 1, v30);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRetain(a3);
  v33 = sub_1BFD2C(a1, a2, a3, 0, (uint64_t)v10, v28, ObjectType, v51);
  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a3);
  v34 = OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_blurredImageBackgroundView;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_blurredImageBackgroundView] = v33;
  v54[0] = *(_OWORD *)v21;
  v35 = *((_OWORD *)v21 + 1);
  v36 = *((_OWORD *)v21 + 2);
  v37 = *((_OWORD *)v21 + 3);
  v55 = *((_QWORD *)v21 + 8);
  v54[2] = v36;
  v54[3] = v37;
  v54[1] = v35;
  v38 = v33;
  sub_12A620((uint64_t)v54);
  v39 = sub_1389C0(1);
  sub_12A65C((uint64_t)v54);
  objc_msgSend(v38, "setMaskView:", v39);

  v40 = *(_QWORD **)&v12[v34];
  v53[1] = 0;
  v53[0] = 0;
  v41 = *(void (**)(_QWORD *))&stru_388.segname[(swift_isaMask & *v40) + 8];
  v42 = v40;
  v41(v53);

  v43 = (objc_class *)type metadata accessor for LegacyArtworkProgressBarOverlay();
  v52.receiver = v12;
  v52.super_class = v43;
  v44 = objc_msgSendSuper2(&v52, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v45 = (void *)objc_opt_self(NSNotificationCenter);
  v46 = v44;
  v47 = objc_msgSend(v45, "defaultCenter");
  v48 = v46;
  objc_msgSend(v47, "addObserver:selector:name:object:", v48, "updateProgressViewOpacity", UIAccessibilityReduceTransparencyStatusDidChangeNotification, 0);

  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a3);
  return v48;
}

char *sub_129E4C(float a1)
{
  uint64_t v1;
  char *result;
  float *v3;

  *(float *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progress) = a1;
  result = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressView);
  if (a1 <= 0.0)
    a1 = 0.0;
  if (a1 > 1.0)
    a1 = 1.0;
  v3 = (float *)&result[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView__progress];
  if ((result[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView__progress + 4] & 1) != 0
    || vabds_f32(*v3, a1) >= COERCE_FLOAT(1))
  {
    *v3 = a1;
    *((_BYTE *)v3 + 4) = 0;
    return (char *)objc_msgSend(result, "setNeedsLayout");
  }
  return result;
}

void sub_129EC0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  double *v4;
  double v5;
  double v6;
  id v7;
  char v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  CGFloat v13;
  double *v14;
  double v15;
  double v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  char *v22;
  id v23;
  id v24;
  void *v25;
  char *v26;
  id v27;
  int v28;
  char v29[24];
  char v30[24];
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressView;
  v3 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressView];
  v4 = (double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight];
  *(_QWORD *)&v5 = swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight], v30, 0, 0).n128_u64[0];
  v6 = *v4;
  objc_msgSend(v3, "frame", v5);
  v34.origin.x = 0.0;
  v34.origin.y = 0.0;
  v34.size.width = 0.0;
  v34.size.height = 0.0;
  if (CGRectEqualToRect(v31, v34)
    || (v7 = objc_msgSend(v1, "traitCollection"),
        v8 = UITraitCollection.interfaceIdiomIsMac.getter(),
        v7,
        (v8 & 1) != 0))
  {
    v9 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v9, "begin");
    v28 = 1;
    objc_msgSend(v9, "setDisableActions:", 1);
  }
  else
  {
    v28 = 0;
  }
  v10 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressBarSettings
                     + 48];
  v11 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressBarSettings
                     + 56];
  v12 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressBarSettings
                     + 64];
  objc_msgSend(v1, "bounds");
  v13 = CGRectGetMaxY(v32) - v11;
  v14 = (double *)(*(_QWORD *)&v1[v2] + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight);
  swift_beginAccess(v14, v29, 0, 0);
  v15 = v13 - *v14;
  objc_msgSend(v1, "bounds");
  v16 = CGRectGetMaxY(v33) - (v10 + v12);
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_blurredImageBackgroundView;
  v18 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_blurredImageBackgroundView], "maskView");
  objc_msgSend(v18, "setFrame:", v10, v15, v16, v6);

  v19 = *(id *)&v1[v17];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v19, "setFrame:");

  v20 = objc_msgSend(*(id *)&v1[v17], "superview");
  if (!v20)
    goto LABEL_7;
  v21 = v20;
  sub_FA88();
  v22 = v1;
  v23 = v21;
  LOBYTE(v21) = static NSObject.== infix(_:_:)(v23, v22);

  if ((v21 & 1) == 0)
LABEL_7:
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v17]);
  objc_msgSend(*(id *)&v1[v2], "setFrame:", v10, v15, v16, v6);
  v24 = objc_msgSend(*(id *)&v1[v2], "superview");
  if (!v24)
    goto LABEL_10;
  v25 = v24;
  sub_FA88();
  v26 = v1;
  v27 = v25;
  LOBYTE(v25) = static NSObject.== infix(_:_:)(v27, v26);

  if ((v25 & 1) == 0)
LABEL_10:
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v2]);
  objc_msgSend(v1, "bringSubviewToFront:", *(_QWORD *)&v1[v2]);
  sub_12A218();
  if (v28)
    objc_msgSend((id)objc_opt_self(CATransaction), "commit");
}

void sub_12A218()
{
  uint64_t v0;
  _BOOL4 IsReduceTransparencyEnabled;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  id *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id *v17;
  id v18;
  id v19;
  char *v20;
  void *v21;
  id v22;
  void *v23;
  _BYTE v24[24];

  IsReduceTransparencyEnabled = UIAccessibilityIsReduceTransparencyEnabled();
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressView;
  v3 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressView);
  v4 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressBarSettings;
  v5 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressBarSettings
                + 16);
  if (IsReduceTransparencyEnabled)
  {
    v6 = v3;
    v7 = objc_msgSend(v5, "colorWithAlphaComponent:", 1.0);
    v8 = (id *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor];
    swift_beginAccess(&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor], v24, 1, 0);
    v9 = *v8;
    *v8 = v7;
    v10 = v7;

    v11 = *(void **)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer];
    v12 = objc_msgSend(*v8, "CGColor");
    objc_msgSend(v11, "setFillColor:", v12);

    v13 = *(void **)(v4 + 32);
    v14 = *(id *)(v0 + v2);
    v15 = objc_msgSend(v13, "colorWithAlphaComponent:", 1.0);
    v16 = v15;
  }
  else
  {
    v17 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor];
    swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor], v24, 1, 0);
    v18 = *v17;
    *v17 = v5;
    v19 = v5;
    v20 = v3;

    v21 = *(void **)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer];
    v22 = objc_msgSend(*v17, "CGColor");
    objc_msgSend(v21, "setFillColor:", v22);

    v23 = *(void **)(v4 + 32);
    v14 = *(id *)(v0 + v2);
    v16 = v23;
    v15 = v23;
  }
  sub_183C30(v15);

}

void sub_12A460()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressBarSettings
                + 16);
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressBarSettings
                + 24);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressBarSettings
                     + 32));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_blurredImageBackgroundView));

}

id sub_12A4BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LegacyArtworkProgressBarOverlay();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LegacyArtworkProgressBarOverlay()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay);
}

uint64_t sub_12A56C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_progressStyle);
}

void sub_12A580(__int128 *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void (*v3)(__int128 *);
  _QWORD *v4;
  __int128 v5;

  v2 = *(_QWORD **)(*v1
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_blurredImageBackgroundView);
  v5 = *a1;
  v3 = *(void (**)(__int128 *))&stru_388.segname[(swift_isaMask & *v2) + 8];
  v4 = v2;
  v3(&v5);

}

char *sub_12A5EC(float a1)
{
  return sub_129E4C(a1);
}

uint64_t sub_12A60C(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31LegacyArtworkProgressBarOverlay_playing) = result;
  return result;
}

uint64_t sub_12A620(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a1 + 24);
  v3 = *(void **)(a1 + 32);
  v4 = *(id *)(a1 + 16);
  v5 = v2;
  v6 = v3;
  return a1;
}

uint64_t sub_12A65C(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 24);

  return a1;
}

void sub_12A698(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[5];
  unint64_t v34;

  v1 = a1;
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_E710(0, &qword_3D7CC0, UIScene_ptr);
    v5 = sub_1315F0();
    v6 = Set.Iterator.init(_cocoa:)(v33, v3, v4, v5);
    v1 = v33[0];
    v30 = v33[1];
    v7 = v33[2];
    v8 = v33[3];
    v9 = v33[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v30 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  while (v1 < 0)
  {
    v17 = __CocoaSet.Iterator.next()(v6);
    if (!v17)
      goto LABEL_40;
    v18 = v17;
    v31 = v17;
    v19 = sub_E710(0, &qword_3D7CC0, UIScene_ptr);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = v32;
    swift_unknownObjectRelease(v18);
    v16 = v8;
    v14 = v9;
    if (!v20)
      goto LABEL_40;
LABEL_36:
    v24 = objc_opt_self(UIWindowScene);
    v25 = swift_dynamicCastObjCClass(v20, v24);
    if (v25)
    {
      v26 = v25;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
      v28 = *(_QWORD *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8));
      v27 = *(_QWORD *)((char *)&dword_18 + (v34 & 0xFFFFFFFFFFFFFF8));
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
      v6 = (_QWORD *)specialized Array._endMutation()(v29);
    }
    else
    {

    }
    v8 = v16;
    v9 = v14;
  }
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
LABEL_35:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v20)
      goto LABEL_40;
    goto LABEL_36;
  }
  v21 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v21 >= v13)
      goto LABEL_40;
    v22 = *(_QWORD *)(v30 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_40;
      v22 = *(_QWORD *)(v30 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_40;
        v22 = *(_QWORD *)(v30 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_40;
          v22 = *(_QWORD *)(v30 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_40;
            v22 = *(_QWORD *)(v30 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v30 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_34;
                }
              }
LABEL_40:
              sub_F9918(v1);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

id sub_12A9B0()
{
  uint64_t v0;
  id v1;
  double v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  NSString v7;

  v0 = type metadata accessor for DynamicTypeLabel();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  objc_msgSend(v1, "setNumberOfLines:", 1);
  objc_msgSend(v1, "setLineBreakMode:", 4);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, "setContentCompressionResistancePriority:forAxis:", 1, v2);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v1;
  v5 = objc_msgSend(v3, "labelColor");
  objc_msgSend(v4, "setTextColor:", v5);

  v6 = v4;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setAccessibilityIdentifier:", v7, 0);

  return v6;
}

id sub_12AAE4()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  NSString v6;

  v0 = type metadata accessor for DynamicTypeLabel();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  objc_msgSend(v1, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v1, "setNumberOfLines:", 3);
  objc_msgSend(v1, "setTextAlignment:", 1);
  v2 = (void *)objc_opt_self(UIColor);
  v3 = v1;
  v4 = objc_msgSend(v2, "secondaryLabelColor");
  objc_msgSend(v3, "setTextColor:", v4);

  static UILayoutPriority.highestBreakable.getter();
  objc_msgSend(v3, "setContentCompressionResistancePriority:forAxis:", 1);
  v5 = v3;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setAccessibilityIdentifier:", v6, 0);

  return v5;
}

id sub_12AC28()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  double v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  NSString v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  __int16 v41;
  char v42;
  unsigned __int8 v43;
  void *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  void *v55;
  void *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;

  if (qword_3CF4E0 != -1)
    swift_once(&qword_3CF4E0, sub_13FEA0);
  v0 = qword_3FB6B0;
  v1 = qword_3FB6C0;
  v2 = word_3FB6C8;
  v58 = HIBYTE(word_3FB6C8);
  v57 = unk_3FB6B8;
  v65 = (void *)qword_3FB670;
  v63 = qword_3FB680;
  v64 = *(_QWORD *)algn_3FB678;
  v61 = qword_3FB690;
  v62 = qword_3FB688;
  v59 = *((_QWORD *)&xmmword_3FB6A0 + 1);
  v60 = qword_3FB698;
  v56 = (void *)xmmword_3FB6A0;
  sub_DDA0((void *)qword_3FB670, *(uint64_t *)algn_3FB678, qword_3FB680, qword_3FB688, qword_3FB690, qword_3FB698, (void *)xmmword_3FB6A0, *((uint64_t *)&xmmword_3FB6A0 + 1), qword_3FB6B0, unk_3FB6B8, qword_3FB6C0, word_3FB6C8, SHIBYTE(word_3FB6C8));
  if (qword_3CF4D0 != -1)
    swift_once(&qword_3CF4D0, sub_13FDE0);
  v3 = (void *)qword_3FB5B0;
  v4 = *(_QWORD *)algn_3FB5B8;
  v5 = qword_3FB5C0;
  v7 = qword_3FB5D0;
  v6 = qword_3FB5D8;
  v8 = *((_QWORD *)&xmmword_3FB5E0 + 1);
  v54 = byte_3FB609;
  v52 = qword_3FB5C8;
  v53 = qword_3FB5F0;
  v47 = qword_3FB600;
  v48 = qword_3FB5F8;
  v46 = byte_3FB608;
  v49 = qword_3FB5D8;
  v50 = qword_3FB5D0;
  v51 = *((_QWORD *)&xmmword_3FB5E0 + 1);
  v55 = (void *)xmmword_3FB5E0;
  if (!v58)
  {
    v41 = v2;
    v38 = v1;
    v35 = v0;
    v20 = qword_3FB5F0;
    v44 = (void *)qword_3FB5B0;
    v45 = v0;
    v21 = qword_3FB5F8;
    v43 = v2;
    v22 = v1;
    v23 = qword_3FB600;
    v24 = qword_3FB5C0;
    v25 = *(_QWORD *)algn_3FB5B8;
    v26 = byte_3FB608;
    sub_DDA0(v65, v64, v63, v62, v61, v60, v56, v59, v35, v57, v38, v41, SHIBYTE(v41));
    v42 = v26;
    v4 = v25;
    v5 = v24;
    v36 = v21;
    v39 = v23;
    v1 = v22;
    v2 = v43;
    v3 = v44;
    v0 = v45;
    sub_DDA0(v44, v4, v5, v52, v7, v6, v55, v8, v20, v36, v39, v42, v54);
    if (!v54)
      goto LABEL_7;
LABEL_9:
    sub_DD48(v3, v4, v5, v52, v50, v49);
    v9 = v65;
    v11 = v63;
    v10 = v64;
    v16 = v61;
    v13 = v62;
    v15 = v60;
    sub_DCC8(v65, v64, v63, v62, v61, v60, v56, v59, v0, v57, v1, v2, v58);
    v18 = v47;
    v17 = v48;
    v19 = v46;
    goto LABEL_10;
  }
  sub_DDA0((void *)qword_3FB5B0, *(uint64_t *)algn_3FB5B8, qword_3FB5C0, qword_3FB5C8, qword_3FB5D0, qword_3FB5D8, (void *)xmmword_3FB5E0, *((uint64_t *)&xmmword_3FB5E0 + 1), qword_3FB5F0, qword_3FB5F8, qword_3FB600, byte_3FB608, byte_3FB609);
  sub_DE20(v65, v64, v63, v62, v61, v60);
  sub_DE20(v56, v59, v0, v57, v1, v2);
  sub_DD48(v56, v59, v0, v57, v1, v2);
  if (v54)
    goto LABEL_9;
LABEL_7:
  v40 = v2;
  v37 = v1;
  v9 = v65;
  v11 = v63;
  v10 = v64;
  v12 = v4;
  v13 = v62;
  v14 = v5;
  v15 = v60;
  v16 = v61;
  sub_DCC8(v65, v64, v63, v62, v61, v60, v56, v59, v0, v57, v37, v40, v58);
  v55 = v3;
  v51 = v12;
  v53 = v14;
  v17 = v52;
  v18 = v50;
  v19 = v49;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v66 = v9;
  v67 = v10;
  v68 = v11;
  v69 = v13;
  v70 = v16;
  v71 = v15;
  v72 = v55;
  v73 = v51;
  v74 = v53;
  v75 = v17;
  v76 = v18;
  v77 = v19;
  v78 = 1;
  v27 = sub_A96AC((uint64_t)&v66, 1, 4, 0);
  LODWORD(v28) = 1148846080;
  objc_msgSend(v27, "setContentCompressionResistancePriority:forAxis:", 1, v28);
  v29 = (void *)objc_opt_self(UIColor);
  v30 = v27;
  v31 = objc_msgSend(v29, "secondaryLabelColor");
  objc_msgSend(v30, "setTextColor:", v31);

  objc_msgSend(v30, "setTextAlignment:", 1);
  v66 = 0;
  v67 = 0xE000000000000000;
  v32 = v30;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v67);
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setAccessibilityIdentifier:", v33);

  return v32;
}

id sub_12B094()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSString v16;
  double v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v0 = type metadata accessor for RoundHeaderButton();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  v2 = objc_msgSend(v1, "titleLabel");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNumberOfLines:", 1);

  }
  v4 = qword_3CEFE8;
  v5 = v1;
  if (v4 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  objc_msgSend(v5, "setBackgroundColor:", qword_3D0890);

  v6 = objc_msgSend(v5, "titleLabel");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "setLineBreakMode:", 5);

  }
  v8 = objc_msgSend(v5, "layer");
  v20 = 0x4010000000000000;
  v21 = 0x402C000000000000;
  static Platform.preferred<A>(iOS:mac:)(&v18, &v21, &v20, &type metadata for CGFloat);
  objc_msgSend(v8, "setCornerRadius:", v18);

  v9 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v5, "setTitleColor:forState:", v9, 0);

  v10 = objc_msgSend(v5, "titleLabel");
  if (v10)
  {
    v11 = v10;
    sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v12 = (void *)static UIFont.headline.getter();
    v13 = (void *)static UIFont.bodyEmph.getter();
    v14 = (void *)static UIFont.preferredFont(iOS:mac:)(v12, v13);

    objc_msgSend(v11, "setFont:", v14);
  }
  v18 = 0.0;
  v19 = 0xE000000000000000;
  v15 = v5;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v19);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setAccessibilityIdentifier:", v16);

  return v15;
}

char *sub_12B308()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char *v27;
  id v28;
  char *v29;
  NSString v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int16 v38;
  char v39;
  unsigned __int8 v40;
  void *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  void *v52;
  void *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;

  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v0 = qword_3FB4D0;
  v1 = *((_QWORD *)&xmmword_3FB4D8 + 1);
  v2 = word_3FB4E8;
  v55 = HIBYTE(word_3FB4E8);
  v53 = (void *)xmmword_3FB4C0;
  v54 = xmmword_3FB4D8;
  v61 = qword_3FB498;
  v62 = (void *)qword_3FB490;
  v59 = qword_3FB4A8;
  v60 = qword_3FB4A0;
  v57 = qword_3FB4B8;
  v58 = qword_3FB4B0;
  v56 = *((_QWORD *)&xmmword_3FB4C0 + 1);
  sub_DDA0((void *)qword_3FB490, qword_3FB498, qword_3FB4A0, qword_3FB4A8, qword_3FB4B0, qword_3FB4B8, (void *)xmmword_3FB4C0, *((uint64_t *)&xmmword_3FB4C0 + 1), qword_3FB4D0, xmmword_3FB4D8, *((uint64_t *)&xmmword_3FB4D8 + 1), word_3FB4E8, SHIBYTE(word_3FB4E8));
  if (qword_3CF488 != -1)
    swift_once(&qword_3CF488, sub_13FA80);
  v3 = (void *)qword_3FB250;
  v4 = *(_QWORD *)algn_3FB258;
  v5 = qword_3FB260;
  v7 = qword_3FB270;
  v6 = qword_3FB278;
  v8 = *((_QWORD *)&xmmword_3FB280 + 1);
  v51 = byte_3FB2A9;
  v49 = qword_3FB268;
  v50 = qword_3FB290;
  v44 = qword_3FB2A0;
  v45 = unk_3FB298;
  v43 = byte_3FB2A8;
  v46 = qword_3FB278;
  v47 = qword_3FB270;
  v48 = *((_QWORD *)&xmmword_3FB280 + 1);
  v52 = (void *)xmmword_3FB280;
  if (v55)
  {
    sub_DDA0((void *)qword_3FB250, *(uint64_t *)algn_3FB258, qword_3FB260, qword_3FB268, qword_3FB270, qword_3FB278, (void *)xmmword_3FB280, *((uint64_t *)&xmmword_3FB280 + 1), qword_3FB290, unk_3FB298, qword_3FB2A0, byte_3FB2A8, byte_3FB2A9);
    sub_DE20(v62, v61, v60, v59, v58, v57);
    sub_DE20(v53, v56, v0, v54, v1, v2);
    sub_DD48(v53, v56, v0, v54, v1, v2);
    if (!v51)
    {
LABEL_7:
      v37 = v2;
      v34 = v1;
      v10 = v61;
      v9 = *(double *)&v62;
      v11 = v60;
      v12 = v4;
      v13 = v59;
      v14 = v5;
      v15 = v57;
      v16 = v58;
      sub_DCC8(v62, v61, v60, v59, v58, v57, v53, v56, v0, v54, v34, v37, v55);
      v52 = v3;
      v48 = v12;
      v50 = v14;
      v17 = v49;
      v18 = v47;
      v19 = v46;
      goto LABEL_10;
    }
  }
  else
  {
    v38 = v2;
    v35 = v1;
    v32 = v0;
    v20 = qword_3FB290;
    v41 = (void *)qword_3FB250;
    v42 = v0;
    v21 = unk_3FB298;
    v40 = v2;
    v22 = v1;
    v23 = qword_3FB2A0;
    v24 = qword_3FB260;
    v25 = *(_QWORD *)algn_3FB258;
    v26 = byte_3FB2A8;
    sub_DDA0(v62, v61, v60, v59, v58, v57, v53, v56, v32, v54, v35, v38, SHIBYTE(v38));
    v39 = v26;
    v4 = v25;
    v5 = v24;
    v33 = v21;
    v36 = v23;
    v1 = v22;
    v2 = v40;
    v3 = v41;
    v0 = v42;
    sub_DDA0(v41, v4, v5, v49, v7, v6, v52, v8, v20, v33, v36, v39, v51);
    if (!v51)
      goto LABEL_7;
  }
  sub_DD48(v3, v4, v5, v49, v47, v46);
  v10 = v61;
  v9 = *(double *)&v62;
  v13 = v59;
  v11 = v60;
  v15 = v57;
  v16 = v58;
  sub_DCC8(v62, v61, v60, v59, v58, v57, v53, v56, v0, v54, v1, v2, v55);
  v18 = v44;
  v17 = v45;
  v19 = v43;
LABEL_10:
  type metadata accessor for DynamicTypeButton();
  v65 = v9;
  v66 = v10;
  v67 = v11;
  v68 = v13;
  v69 = v16;
  v70 = v15;
  v71 = v52;
  v72 = v48;
  v73 = v50;
  v74 = v17;
  v75 = v18;
  v76 = v19;
  v77 = 1;
  v27 = sub_2D5CD4((uint64_t)&v65);
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  objc_msgSend(v27, "setTitleColor:forState:", qword_3D0890, 0);
  v28 = objc_msgSend(v27, "layer");
  v63 = 0x4010000000000000;
  v64 = 0x402C000000000000;
  static Platform.preferred<A>(iOS:mac:)(&v65, &v64, &v63, &type metadata for CGFloat);
  objc_msgSend(v28, "setCornerRadius:", v65);

  v65 = 0.0;
  v66 = 0xE000000000000000;
  v29 = v27;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v66);
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setAccessibilityIdentifier:", v30);

  return v29;
}

id sub_12B780()
{
  id v0;
  id v1;
  NSString v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = v0;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setAccessibilityIdentifier:", v2, 0);

  return v1;
}

id sub_12B840()
{
  id v0;
  id v1;
  NSString v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, "setAxis:", 1);
  objc_msgSend(v0, "setAlignment:", 3);
  v1 = v0;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setAccessibilityIdentifier:", v2, 0);

  return v1;
}

id sub_12B914()
{
  id v0;
  id v1;
  NSString v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, "setAxis:", 1);
  v1 = v0;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setAccessibilityIdentifier:", v2, 0);

  return v1;
}

uint64_t sub_12B9D4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_2EFC90;
  v2 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  v3 = objc_msgSend(v2, "leadingAnchor");

  v4 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v5 = objc_msgSend(v4, "leadingAnchor");

  v6 = objc_msgSend(v3, "constraintEqualToAnchor:", v5);
  *(_QWORD *)(v1 + 32) = v6;
  v7 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  v8 = objc_msgSend(v7, "trailingAnchor");

  v9 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v10 = objc_msgSend(v9, "trailingAnchor");

  v11 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);
  *(_QWORD *)(v1 + 40) = v11;
  specialized Array._endMutation()(v12);
  return v1;
}

uint64_t sub_12BB6C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + *a1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v5 = a2(v2);
    v6 = *(_QWORD *)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v5;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRelease(v6);
    v4 = 0;
  }
  swift_bridgeObjectRetain(v4);
  return v5;
}

uint64_t sub_12BBCC(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_2F0A20;
  v4 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  v5 = objc_msgSend(v4, "leadingAnchor");

  v6 = objc_msgSend(a1, "leadingAnchor");
  v7 = objc_msgSend(v5, "constraintGreaterThanOrEqualToAnchor:", v6);

  *(_QWORD *)(v3 + 32) = v7;
  v8 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  v9 = objc_msgSend(v8, "trailingAnchor");

  v10 = objc_msgSend(a1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintLessThanOrEqualToAnchor:", v10);

  *(_QWORD *)(v3 + 40) = v11;
  v12 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  v13 = objc_msgSend(v12, "widthAnchor");

  v14 = objc_msgSend(v13, "constraintGreaterThanOrEqualToConstant:", *(double *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style + 16]);
  *(_QWORD *)(v3 + 48) = v14;
  v15 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  v16 = objc_msgSend(v15, "centerXAnchor");

  v17 = objc_msgSend(a1, "centerXAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v3 + 56) = v18;
  specialized Array._endMutation()(v19);
  return v3;
}

id sub_12BE00(uint64_t a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  __int16 v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  objc_super v19;
  uint64_t v20;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_viewConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___captionLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___compactSubscribeButtonConstraints] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___regularSubscribeButtonConstraints] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_objectGraph] = a1;
  v6 = type metadata accessor for MetricsController(0);
  v7 = v2;
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v20, v6, v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_metricsController] = v20;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_upsellInformation] = a2;
  v8 = objc_allocWithZone((Class)type metadata accessor for UpsellSubscriptionPlansView());
  v9 = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_upsellSubscriptionPlansView] = UpsellSubscriptionPlansView.init(upsellInformation:)(v9);
  v10 = v9;
  v11 = sub_131200(v10);
  v12 = &v7[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style];
  *v12 = v11 & 1;
  v12[1] = HIBYTE(v11) & 1;
  *((_QWORD *)v12 + 1) = v13;
  *((_QWORD *)v12 + 2) = v14;
  *((_QWORD *)v12 + 3) = v15;

  v19.receiver = v7;
  v19.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setAccessibilityIdentifier:", v17);

  sub_12C00C();
  swift_release(a1);

  return v16;
}

void sub_12C00C()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  Swift::OpaquePointer v11;
  id v12;
  id v13;
  id v14;
  char v15;
  id v16;
  id v17;
  double v18;
  id v19;
  Swift::OpaquePointer v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  double Width;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  Class isa;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Class v36;
  uint64_t v37;
  uint64_t v38;
  Swift::OpaquePointer v39;
  CGRect v40;

  v1 = v0;
  v2 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v3 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView, (uint64_t (*)(void))sub_12B840);
  v4 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView, (uint64_t (*)(void))sub_12B914);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v5 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v6 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView, (uint64_t (*)(void))sub_12B840);
  objc_msgSend(v5, "addSubview:", v6);

  v7 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  objc_msgSend(v1, "addSubview:", v7);

  v8 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView, (uint64_t (*)(void))sub_12B914);
  objc_msgSend(v1, "addSubview:", v8);

  v9 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView, (uint64_t (*)(void))sub_12B840);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v11._rawValue = (void *)swift_allocObject(v10, 48, 7);
  *((_OWORD *)v11._rawValue + 1) = xmmword_2EFC90;
  *((_QWORD *)v11._rawValue + 4) = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_12A9B0);
  v12 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_12AAE4);
  *((_QWORD *)v11._rawValue + 5) = v12;
  v39._rawValue = v11._rawValue;
  specialized Array._endMutation()(v12);
  UIStackView.addArrangedSubviews(_:)(v11);

  v13 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRelease(v11._rawValue).n128_f64[0]);
  LOBYTE(v9) = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v9 & 1) != 0)
  {
    v14 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView, (uint64_t (*)(void))sub_12B840);
    objc_msgSend(v14, "setBaselineRelativeArrangement:", 1);

    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_upsellInformation])
    {
LABEL_11:
      __break(1u);
      return;
    }
    v15 = UpsellInformation.hasTwoSubscriptionPlans.getter();
    v16 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView, (uint64_t (*)(void))sub_12B840);
    v17 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_12A9B0);
    v18 = 22.0;
    if ((v15 & 1) != 0)
      v18 = 20.0;
    objc_msgSend(v16, "setCustomSpacing:afterView:", v17, v18);

  }
  v19 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView, (uint64_t (*)(void))sub_12B914);
  v20._rawValue = (void *)swift_allocObject(v10, 56, 7);
  *((_OWORD *)v20._rawValue + 1) = xmmword_2EFC80;
  *((_QWORD *)v20._rawValue + 4) = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___captionLabel, (uint64_t (*)(void))sub_12AC28);
  v21 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_upsellSubscriptionPlansView];
  if (!v21)
  {
    __break(1u);
    goto LABEL_11;
  }
  *((_QWORD *)v20._rawValue + 5) = v21;
  v22 = v21;
  v23 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  *((_QWORD *)v20._rawValue + 6) = v23;
  v39._rawValue = v20._rawValue;
  specialized Array._endMutation()(v23);
  UIStackView.addArrangedSubviews(_:)(v20);

  swift_bridgeObjectRelease(v20._rawValue);
  v24 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView, (uint64_t (*)(void))sub_12B914);
  v37 = 0x4026000000000000;
  v38 = 0x4030000000000000;
  static Platform.preferred<A>(iOS:mac:)(&v39, &v38, &v37, &type metadata for CGFloat);
  objc_msgSend(v24, "setCustomSpacing:afterView:", v22, *(double *)&v39._rawValue);

  if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style] == 1)
  {
    v25 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView, (uint64_t (*)(void))sub_12B914);
    v26 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton, (uint64_t (*)(void))sub_12B308);
    objc_msgSend(v25, "addArrangedSubview:", v26);

  }
  objc_msgSend(v1, "bounds");
  Width = CGRectGetWidth(v40);
  v28 = (void *)SizeClass.init(width:)(Width);
  v29 = (void *)objc_opt_self(NSLayoutConstraint);
  v30 = OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_viewConstraints;
  v31 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_viewConstraints];
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v31);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

  v33 = sub_12D974(v28);
  v34 = *(_QWORD *)&v1[v30];
  *(_QWORD *)&v1[v30] = v33;
  swift_bridgeObjectRelease(v34);
  v35 = *(_QWORD *)&v1[v30];
  swift_bridgeObjectRetain(v35);
  v36 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "activateConstraints:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

  sub_12C56C();
}

void sub_12C56C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  id v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  id v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  unsigned int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  __n128 v58;
  _QWORD *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  int v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, char *, uint64_t);
  uint64_t v86;
  __n128 v87;
  id v88;
  id v89;
  Swift::String v90;
  Swift::String v91;
  void *object;
  NSString v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  Swift::String v98;
  Swift::String v99;
  id v100;
  NSString v101;
  id v102;
  uint64_t v103;
  id v104;
  int v105;
  char **p_name;
  id v107;
  uint64_t v108;
  uint64_t v109;
  NSString v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  NSString v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  __n128 v136;
  uint64_t v137;
  void *v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  void *v143;
  __n128 v144;
  uint64_t v145;
  __n128 v146;
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  __n128 v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  __n128 v163;
  uint64_t v164;
  id v165;
  __n128 v166;
  void *v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  void *v176;
  __n128 v177;
  __n128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  __n128 v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  __n128 v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  id v205;
  uint64_t v206;
  uint64_t v207;
  NSString v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  uint64_t v228;
  Swift::String v229;
  Swift::String v230;

  v1 = v0;
  v2 = type metadata accessor for ScalarDictionary(0);
  __chkstk_darwin(v2);
  v212 = (char *)&v210 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = type metadata accessor for PageMetrics(0);
  v213 = *(_QWORD *)(v214 - 8);
  __chkstk_darwin(v214);
  v5 = (char *)&v210 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v210 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D20F8);
  __chkstk_darwin(v9);
  v215 = (char *)&v210 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetricsData(0);
  v218 = *(_QWORD *)(v11 - 8);
  v219 = v11;
  __chkstk_darwin(v11);
  v217 = (char *)&v210 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v13);
  v216 = (char *)&v210 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v15);
  v17 = (char *)&v210 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_12A9B0);
  v221 = (uint64_t)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style;
  v19 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style + 8);
  objc_msgSend(v18, "setFont:", v19);

  v20 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_12A9B0);
  v21 = *(char **)((char *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_upsellInformation);
  if (!v21)
    goto LABEL_87;
  v22 = v20;
  UpsellInformation.title.getter();
  v24 = v23;
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setText:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v26 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_12AAE4);
  objc_msgSend(v26, "setFont:", v19);

  v220 = v1;
  v27 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_12AAE4);
  UpsellInformation.subtitle.getter();
  if (v28)
  {
    v30 = v28;
    v31 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v29 = swift_bridgeObjectRelease(v30).n128_u64[0];
  }
  else
  {
    v31 = 0;
  }
  objc_msgSend(v27, "setText:", v31, v29);

  if ((UpsellInformation.isForConfirmationSheet.getter(v32) & 1) != 0)
  {
    v33 = type metadata accessor for ImpressionMetrics(0);
    v34.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 1, 1, v33);
    v35 = static Link.Presentation.textFollowsTintColor.getter(v34);
    v36 = Link.Presentation.init(rawValue:)(0);
    v37 = Link.Presentation.init(rawValue:)(v36);
    v38 = Link.Presentation.init(rawValue:)(v37 & v35);
    if (v38 != v35)
    {
      v38 = Link.Presentation.init(rawValue:)(v36 | v35);
      v36 = v38;
    }
    v39 = v216;
    static ActionMetrics.notInstrumented.getter(v38);
    v40 = type metadata accessor for UpsellDismissingAction(0);
    v41 = *(unsigned int *)(v40 + 48);
    v42 = *(unsigned __int16 *)(v40 + 52);
    v211 = v40;
    swift_allocObject(v40, v41, v42);
    v43 = UpsellDismissingAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)(0, 0, 0, 0, v36, v39, v17);
    v44 = enum case for MetricsPageType.prompt(_:);
    v45 = type metadata accessor for MetricsPageType(0);
    v46 = *(_QWORD *)(v45 - 8);
    v47 = (uint64_t)v215;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 104))(v215, v44, v45);
    v48.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
    v49 = UpsellInformation.pageMetrics.getter(v48);
    v50 = PageMetrics.pageFields.getter(v49);
    v51 = *(void (**)(char *, uint64_t))(v213 + 8);
    v52 = v8;
    v53 = v214;
    v51(v52, v214);
    if (v50)
    {
      v54 = v212;
      if (*(_QWORD *)(v50 + 16) && (v55 = sub_36BA4(0x6174654465676170, 0xEB00000000736C69), (v56 & 1) != 0))
      {
        sub_1D66C(*(_QWORD *)(v50 + 56) + 32 * v55, (uint64_t)&v226);
      }
      else
      {
        v226 = 0u;
        v227 = 0u;
      }
      v64 = swift_bridgeObjectRelease(v50);
    }
    else
    {
      v64 = 0uLL;
      v226 = 0u;
      v227 = 0u;
      v54 = v212;
    }
    v65 = UpsellInformation.pageMetrics.getter(v64);
    v66 = PageMetrics.pageFields.getter(v65);
    v51(v5, v53);
    if (v66)
    {
      if (*(_QWORD *)(v66 + 16) && (v67 = sub_36BA4(0x6C725565676170, 0xE700000000000000), (v68 & 1) != 0))
      {
        sub_1D66C(*(_QWORD *)(v66 + 56) + 32 * v67, (uint64_t)&v224);
      }
      else
      {
        v224 = 0u;
        v225 = 0u;
      }
      swift_bridgeObjectRelease(v66);
      if (*((_QWORD *)&v225 + 1))
      {
        v69 = v43;
        v70 = swift_dynamicCast(&v222, &v224, (char *)&type metadata for Any + 8, &type metadata for String, 6);
        if (v70)
          v71 = v222;
        else
          v71 = 0;
        if (v70)
          v72 = v223;
        else
          v72 = 0;
        goto LABEL_32;
      }
    }
    else
    {
      v224 = 0u;
      v225 = 0u;
    }
    v69 = v43;
    sub_D1D4((uint64_t)&v224, &qword_3D1A70);
    v71 = 0;
    v72 = 0;
LABEL_32:
    v73 = type metadata accessor for ClickMetricsEvent(0);
    v74 = UpsellInformation.productId.getter(v73);
    v76 = v75;
    v77 = static ClickMetricsEvent.upsellDismissClickEvent(pageType:pageDetails:pageId:pageUrl:channelAdamId:targetId:)(v47, &v226, 0xD000000000000011, 0x800000000030F610, v71, v72, v74, v75, 0x776F4E746F6ELL, 0xE600000000000000);
    swift_bridgeObjectRelease(v76);
    swift_bridgeObjectRelease(v72);
    sub_D1D4((uint64_t)&v226, &qword_3D1A70);
    v78 = sub_D1D4(v47, &qword_3D20F8);
    v79 = v217;
    dispatch thunk of MetricsEvent.metricsData.getter(v78);
    swift_release(v77);
    v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D30F0);
    v81 = v218;
    v82 = *(unsigned __int8 *)(v218 + 80);
    v83 = (v82 + 32) & ~v82;
    v84 = swift_allocObject(v80, v83 + *(_QWORD *)(v218 + 72), v82 | 7);
    *(_OWORD *)(v84 + 16) = xmmword_2F03C0;
    v85 = *(void (**)(uint64_t, char *, uint64_t))(v81 + 16);
    v215 = v21;
    v86 = v219;
    v85(v84 + v83, v79, v219);
    v87 = swift_retain(v69);
    ScalarDictionary.init()(v87);
    ActionMetrics.init(data:custom:)(v84, v54);
    dispatch thunk of Action.actionMetrics.setter(v39);
    swift_release(v69);
    v59 = v220;
    v88 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton, (uint64_t (*)(void))sub_12B308);
    v89 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v90._countAndFlagsBits = 0xD000000000000027;
    v229._object = (void *)0xE000000000000000;
    v90._object = (void *)0x800000000030F630;
    v91._countAndFlagsBits = 0;
    v91._object = (void *)0xE000000000000000;
    v229._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v90, (Swift::String_optional)0, (NSBundle)v89, v91, v229)._object;

    v93 = String._bridgeToObjectiveC()();
    objc_msgSend(v88, "setTitle:forState:", v93, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

    v94 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton, (uint64_t (*)(void))sub_12B308);
    *((_QWORD *)&v227 + 1) = v211;
    v228 = sub_131690(&qword_3D7CE8, (uint64_t (*)(uint64_t))&type metadata accessor for UpsellDismissingAction);
    *(_QWORD *)&v226 = v69;
    v95 = *(_QWORD *)((char *)v59 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_objectGraph);
    swift_retain(v69);
    UIControl.setAction(_:for:asPartOf:)(&v226, 0x2000, v95);
    swift_release(v69);

    v96 = v86;
    v21 = v215;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v79, v96);
    goto LABEL_35;
  }
  v57 = UpsellInformation.seeAllAction.getter();
  v59 = v220;
  if (!v57)
    goto LABEL_36;
  v60 = v57;
  v62 = Action.title.getter(v58);
  if (v61)
  {
    v63 = v61;
  }
  else
  {
    v97 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v98._countAndFlagsBits = 0xD000000000000012;
    v230._object = (void *)0xE000000000000000;
    v98._object = (void *)0x800000000030F5F0;
    v99._countAndFlagsBits = 0;
    v99._object = (void *)0xE000000000000000;
    v230._countAndFlagsBits = 0;
    v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v98, (Swift::String_optional)(unint64_t)v62, (NSBundle)v97, v99, v230)._object;

  }
  v100 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton, (uint64_t (*)(void))sub_12B308);
  v101 = String._bridgeToObjectiveC()();
  objc_msgSend(v100, "setTitle:forState:", v101, 0, swift_bridgeObjectRelease(v63).n128_f64[0]);

  v102 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton, (uint64_t (*)(void))sub_12B308);
  *((_QWORD *)&v227 + 1) = type metadata accessor for Action(0);
  v228 = sub_131690((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action);
  *(_QWORD *)&v226 = v60;
  v103 = *(_QWORD *)((char *)v59 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_objectGraph);
  swift_retain(v60);
  UIControl.setAction(_:for:asPartOf:)(&v226, 0x2000, v103);

  swift_release(v60);
LABEL_35:
  __swift_destroy_boxed_opaque_existential_0(&v226);
LABEL_36:
  v104 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___captionLabel, (uint64_t (*)(void))sub_12AC28);
  v105 = *(unsigned __int8 *)(v221 + 1);
  p_name = &stru_3B7FF8.name;
  objc_msgSend(v104, "setHidden:", *(unsigned __int8 *)(v221 + 1));

  v107 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___captionLabel, (uint64_t (*)(void))sub_12AC28);
  UpsellInformation.caption.getter();
  v109 = v108;
  v110 = String._bridgeToObjectiveC()();
  objc_msgSend(v107, "setText:", v110, swift_bridgeObjectRelease(v109).n128_f64[0]);

  if ((UpsellInformation.isForConfirmationSheet.getter(v111) & 1) != 0)
  {
    v112 = UpsellInformation.seeAllAction.getter();
    if (v112)
    {
      v113 = v112;
      v114 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
      *((_QWORD *)&v227 + 1) = type metadata accessor for Action(0);
      v228 = sub_131690((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action);
      *(_QWORD *)&v226 = v113;
      v115 = *(_QWORD *)((char *)v59 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_objectGraph);
      swift_retain(v113);
      UIControl.setAction(_:for:asPartOf:)(&v226, 0x2000, v115);

      swift_release(v113);
      __swift_destroy_boxed_opaque_existential_0(&v226);
    }
    v116 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
    UpsellInformation.ctaTitle.getter();
    v118 = v117;
    v119 = String._bridgeToObjectiveC()();
    objc_msgSend(v116, "setTitle:forState:", v119, 0, swift_bridgeObjectRelease(v118).n128_f64[0]);

    goto LABEL_69;
  }
  *(_QWORD *)&v226 = v21;
  v120 = type metadata accessor for UpsellInformation(0);
  v121 = EntitlementsActionProviding.entitlementsAction.getter(v120, &protocol witness table for UpsellInformation);
  if (v121)
  {
    v122 = v121;
    v123 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
    *((_QWORD *)&v227 + 1) = type metadata accessor for Action(0);
    v228 = sub_131690((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action);
    *(_QWORD *)&v226 = v122;
    v124 = *(_QWORD *)((char *)v59 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_objectGraph);
    swift_retain(v122);
    v125 = v123;
    UIControl.setAction(_:for:asPartOf:)(&v226, 0x2000, v124);

    sub_1D5D4((uint64_t)&v226, (uint64_t)&v224);
    v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
    v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C0);
    if (swift_dynamicCast(&v222, &v224, v126, v127, 6))
    {
      v128 = v105;
      v129 = v223;
      v130 = *v222;
      v220 = v222;
      v131 = swift_allocObject(&unk_383FF0, 24, 7);
      swift_unknownObjectWeakInit(v131 + 16, v125);
      v132 = swift_retain(v131);
      p_name = (char **)(&stru_3B7FF8 + 8);
      v133 = v129;
      v105 = v128;
      dispatch thunk of CompletableAction.addCompletionHandler(_:)(sub_131728, v131, v130, v133, v132);
      swift_release_n(v131, 2);
      sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
      v134 = swift_allocObject(&unk_383FF0, 24, 7);
      swift_unknownObjectWeakInit(v134 + 16, v125);
      v135 = v125;
      v137 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v136, 0, 0, 0, sub_131730, v134);
LABEL_43:
      v138 = (void *)v137;
      objc_msgSend(v135, "addAction:forControlEvents:", v137, 0x2000);
      swift_release(v220);

LABEL_68:
      __swift_destroy_boxed_opaque_existential_0(&v226);
      v195 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
      UpsellInformation.ctaTitle.getter();
      v197 = v196;
      v119 = String._bridgeToObjectiveC()();
      objc_msgSend(v195, "setTitle:forState:", v119, 0, swift_bridgeObjectRelease(v197).n128_f64[0]);
      swift_release(v122);

LABEL_69:
      goto LABEL_70;
    }
    goto LABEL_67;
  }
  v139 = ((uint64_t (*)(void))UpsellInformation.subscriptionPlans.getter)();
  v140 = v139;
  LODWORD(v221) = v105;
  if (v139 >> 62)
    goto LABEL_76;
  v141 = *(_QWORD *)((char *)&dword_10 + (v139 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v139);
  if (!v141)
  {
LABEL_59:
    v171 = swift_bridgeObjectRelease_n(v140, 2);
    v172 = UpsellInformation.subscriptionPlans.getter(v171);
    v173 = v172;
    if ((unint64_t)v172 >> 62)
    {
      if (v172 >= 0)
        v172 &= 0xFFFFFFFFFFFFFF8uLL;
      v174 = _CocoaArrayWrapper.endIndex.getter(v172);
    }
    else
    {
      v174 = *(_QWORD *)((char *)&dword_10 + (v172 & 0xFFFFFFFFFFFFF8));
    }
    v105 = v221;
    p_name = (char **)(&stru_3B7FF8 + 8);
    if (!v174)
    {
      swift_bridgeObjectRelease(v173);
      goto LABEL_70;
    }
    if ((v173 & 0xC000000000000001) != 0)
    {
      v175 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v173);
LABEL_65:
      v176 = v175;
      v177 = swift_bridgeObjectRelease(v173);
      v122 = UpsellSubscriptionPlan.offerAction.getter(v177);

      v178 = swift_retain(v122);
      v179 = Action.uniqueId.getter(v178);
      v181 = v180;
      swift_release(v122);
      sub_131354(v122, v179, v181);
      swift_bridgeObjectRelease(v181);
      v182 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
      *((_QWORD *)&v227 + 1) = type metadata accessor for ChannelOfferAction(0);
      v228 = sub_131690(&qword_3D7CE0, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelOfferAction);
      *(_QWORD *)&v226 = v122;
      v183 = *(_QWORD *)((char *)v59 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_objectGraph);
      swift_retain(v122);
      v125 = v182;
      UIControl.setAction(_:for:asPartOf:)(&v226, 0x2000, v183);

      sub_1D5D4((uint64_t)&v226, (uint64_t)&v224);
      v184 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
      v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C0);
      if (swift_dynamicCast(&v222, &v224, v184, v185, 6))
      {
        v186 = v223;
        v187 = v105;
        v188 = *v222;
        v220 = v222;
        v189 = swift_allocObject(&unk_383FF0, 24, 7);
        swift_unknownObjectWeakInit(v189 + 16, v125);
        v190 = swift_retain(v189);
        v191 = v188;
        v105 = v187;
        dispatch thunk of CompletableAction.addCompletionHandler(_:)(sub_131728, v189, v191, v186, v190);
        v192 = v189;
        p_name = (char **)(&stru_3B7FF8 + 8);
        swift_release_n(v192, 2);
        sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
        v193 = swift_allocObject(&unk_383FF0, 24, 7);
        swift_unknownObjectWeakInit(v193 + 16, v125);
        v135 = v125;
        v137 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v194, 0, 0, 0, sub_131730, v193);
        goto LABEL_43;
      }
LABEL_67:

      goto LABEL_68;
    }
    if (*(_QWORD *)((char *)&dword_10 + (v173 & 0xFFFFFFFFFFFFF8)))
    {
      v175 = *(id *)(v173 + 32);
      goto LABEL_65;
    }
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  while (1)
  {
    v142 = (v140 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v140)
         : *(id *)(v140 + 32);
    v143 = v142;
    if ((UpsellSubscriptionPlan.isRecommended.getter() & 1) != 0)
      break;

    if (v141 != 1)
    {
      v168 = 5;
      while (1)
      {
        v169 = (v140 & 0xC000000000000001) != 0
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v168 - 4, v140)
             : *(id *)(v140 + 8 * v168);
        v143 = v169;
        v170 = v168 - 3;
        if (__OFADD__(v168 - 4, 1))
          break;
        if ((UpsellSubscriptionPlan.isRecommended.getter() & 1) != 0)
          goto LABEL_49;

        ++v168;
        if (v170 == v141)
          goto LABEL_59;
      }
      __break(1u);
LABEL_76:
      v209 = v140 < 0 ? v140 : v140 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v140);
      v141 = _CocoaArrayWrapper.endIndex.getter(v209);
      if (v141)
        continue;
    }
    goto LABEL_59;
  }
LABEL_49:
  swift_bridgeObjectRelease_n(v140, 2);
  v145 = UpsellSubscriptionPlan.offerAction.getter(v144);
  v147 = UpsellSubscriptionPlan.offerAction.getter(v146);
  v149 = Action.uniqueId.getter(v148);
  v151 = v150;
  swift_release(v147);
  sub_131354(v145, v149, v151);
  swift_release(v145);
  swift_bridgeObjectRelease(v151);
  v152 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  v154 = UpsellSubscriptionPlan.offerAction.getter(v153);
  *((_QWORD *)&v227 + 1) = type metadata accessor for ChannelOfferAction(0);
  v228 = sub_131690(&qword_3D7CE0, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelOfferAction);
  *(_QWORD *)&v226 = v154;
  v155 = *(_QWORD *)((char *)v59 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_objectGraph);
  v156 = v152;
  UIControl.setAction(_:for:asPartOf:)(&v226, 0x2000, v155);

  sub_1D5D4((uint64_t)&v226, (uint64_t)&v224);
  v157 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C0);
  if (swift_dynamicCast(&v222, &v224, v157, v158, 6))
  {
    v160 = v222;
    v159 = v223;
    v161 = *v222;
    v162 = swift_allocObject(&unk_383FF0, 24, 7);
    swift_unknownObjectWeakInit(v162 + 16, v156);
    v163 = swift_retain(v162);
    dispatch thunk of CompletableAction.addCompletionHandler(_:)(sub_131728, v162, v161, v159, v163);
    swift_release_n(v162, 2);
    sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v164 = swift_allocObject(&unk_383FF0, 24, 7);
    swift_unknownObjectWeakInit(v164 + 16, v156);
    v165 = v156;
    v167 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v166, 0, 0, 0, sub_131730, v164);
    objc_msgSend(v165, "addAction:forControlEvents:", v167, 0x2000);
    swift_release(v160);

  }
  else
  {

  }
  v105 = v221;
  p_name = (char **)(&stru_3B7FF8 + 8);
  __swift_destroy_boxed_opaque_existential_0(&v226);
  v205 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  UpsellSubscriptionPlan.ctaTitle.getter();
  v207 = v206;
  v208 = String._bridgeToObjectiveC()();
  objc_msgSend(v205, "setTitle:forState:", v208, 0, swift_bridgeObjectRelease(v207).n128_f64[0]);

LABEL_70:
  v198 = *(_QWORD *)((char *)v59
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_upsellSubscriptionPlansView);
  if (v198)
  {
    objc_msgSend(*(id *)((char *)v59+ OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_upsellSubscriptionPlansView), p_name[268], v105 ^ 1u);
    v199 = swift_allocObject(&unk_383FA0, 24, 7);
    swift_unknownObjectWeakInit(v199 + 16, v59);
    v200 = *(_QWORD *)((char *)v59 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_objectGraph);
    v201 = swift_allocObject(&unk_383FC8, 32, 7);
    *(_QWORD *)(v201 + 16) = v199;
    *(_QWORD *)(v201 + 24) = v200;
    v202 = (uint64_t *)(v198 + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellSubscriptionPlansView_didSelect);
    swift_beginAccess(v202, &v226, 1, 0);
    v203 = *v202;
    v204 = v202[1];
    *v202 = (uint64_t)sub_131720;
    v202[1] = v201;
    swift_retain(v200);
    sub_1D618(v203, v204);
    return;
  }
LABEL_88:
  __break(1u);
}

uint64_t sub_12D974(void *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  id v3;
  SEL *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  SEL *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  id v38;
  char *v39;
  int v40;
  double v41;
  char v42;
  double v43;
  BOOL v44;
  double v45;
  double v46;
  id v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t inited;
  id v52;
  id v53;
  id v54;
  __C::UILayoutPriority v55;
  Class isa;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  uint64_t v120;
  id v121;
  char v122;
  id v123;
  id v124;
  id v125;
  id v126;
  char **v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  id v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  id v157;
  char v158[136];
  unint64_t v159;
  double v160;
  double v161;
  uint64_t v162;

  v2 = v1;
  v3 = a1;
  v162 = (uint64_t)_swiftEmptyArrayStorage;
  v4 = (SEL *)&selRef_accessibilityContextButton;
  if ((SizeClass.isWideHorizontal.getter(a1) & 1) != 0)
  {
    v5 = sub_12BB6C(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___regularSubscribeButtonConstraints, (uint64_t (*)(uint64_t))sub_12BBCC);
    sub_1F6D9C(v5);
    v6 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
    v7 = objc_msgSend(v6, "leadingAnchor");

    v8 = objc_msgSend(v2, "leadingAnchor");
    v4 = (SEL *)objc_msgSend(v7, "constraintGreaterThanOrEqualToAnchor:", v8);

    v9 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
    v10 = objc_msgSend(v9, "trailingAnchor");

    v11 = objc_msgSend(v2, "trailingAnchor");
    v12 = objc_msgSend(v10, "constraintLessThanOrEqualToAnchor:", v11);

    if ((unint64_t)v162 >> 62)
    {
      if (v162 < 0)
        v151 = v162;
      else
        v151 = v162 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v162);
      v152 = _CocoaArrayWrapper.endIndex.getter(v151);
      swift_bridgeObjectRelease(v162);
      v14 = v152 + 2;
      if (!__OFADD__(v152, 2))
        goto LABEL_8;
    }
    else
    {
      v13 = *(_QWORD *)((char *)&dword_10 + (v162 & 0xFFFFFFFFFFFFF8));
      v14 = v13 + 2;
      if (!__OFADD__(v13, 2))
        goto LABEL_8;
    }
    __break(1u);
  }
  v15 = sub_12BB6C(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___compactSubscribeButtonConstraints, (uint64_t (*)(uint64_t))sub_12B9D4);
  sub_1F6D9C(v15);
  v16 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v17 = objc_msgSend(v16, v4[103]);

  v18 = objc_msgSend(v2, v4[103]);
  v4 = (SEL *)objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  v19 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v20 = objc_msgSend(v19, "trailingAnchor");

  v21 = objc_msgSend(v2, "trailingAnchor");
  v12 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  if (!((unint64_t)v162 >> 62))
  {
    v22 = v162 & 0xFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)((char *)&dword_10 + (v162 & 0xFFFFFFFFFFFFF8));
    v14 = v23 + 2;
    if (!__OFADD__(v23, 2))
      goto LABEL_8;
LABEL_58:
    __break(1u);
LABEL_59:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, (char *)v4 + 1, 1);
LABEL_37:
    v120 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v3);
    specialized Array._endMutation()(v120);

    v121 = objc_msgSend(v2, "traitCollection");
    v122 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v122 & 1) != 0)
      return v162;
    v123 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton, (uint64_t (*)(void))sub_12B308);
    v124 = objc_msgSend(v123, "leadingAnchor");

    v125 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
    v126 = objc_msgSend(v125, "leadingAnchor");

    v127 = &selRef_accessibilityContextButton;
    v157 = objc_msgSend(v124, "constraintEqualToAnchor:", v126);

    v128 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton, (uint64_t (*)(void))sub_12B308);
    v129 = objc_msgSend(v128, "trailingAnchor");

    v130 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
    v131 = objc_msgSend(v130, "trailingAnchor");

    v132 = objc_msgSend(v129, "constraintEqualToAnchor:", v131);
    v133 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton, (uint64_t (*)(void))sub_12B308);
    v134 = objc_msgSend(v133, "heightAnchor");

    v135 = objc_msgSend(v134, "constraintGreaterThanOrEqualToConstant:", 48.0);
    v136 = v162;
    if ((unint64_t)v162 >> 62)
    {
      if (v162 < 0)
        v155 = v162;
      else
        v155 = v162 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v162);
      v138 = _CocoaArrayWrapper.endIndex.getter(v155);
      swift_bridgeObjectRelease(v136);
      v139 = v138 + 3;
      if (!__OFADD__(v138, 3))
      {
LABEL_40:
        v140 = sub_215E80(v139, 1);
        specialized Array._endMutation()(v140);
        v127 = (char **)v157;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v127);
        v138 = *(_QWORD *)((char *)&dword_10 + (v162 & 0xFFFFFFFFFFFFFF8));
        v137 = *(_QWORD *)((char *)&dword_18 + (v162 & 0xFFFFFFFFFFFFFF8));
        if (v138 < v137 >> 1)
        {
LABEL_41:
          v141 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v138, v127);
          specialized Array._endMutation()(v141);
          v142 = v132;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v142);
          v144 = *(_QWORD *)((char *)&dword_10 + (v162 & 0xFFFFFFFFFFFFFF8));
          v143 = *(_QWORD *)((char *)&dword_18 + (v162 & 0xFFFFFFFFFFFFFF8));
          if (v144 >= v143 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v143 > 1, v144 + 1, 1);
          v145 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v144, v142);
          specialized Array._endMutation()(v145);
          v146 = v135;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v146);
          v148 = *(_QWORD *)((char *)&dword_10 + (v162 & 0xFFFFFFFFFFFFFF8));
          v147 = *(_QWORD *)((char *)&dword_18 + (v162 & 0xFFFFFFFFFFFFFF8));
          if (v148 >= v147 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v147 > 1, v148 + 1, 1);
          v149 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v148, v146);
          specialized Array._endMutation()(v149);

          return v162;
        }
LABEL_66:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v137 > 1, v138 + 1, 1);
        goto LABEL_41;
      }
    }
    else
    {
      v137 = v162 & 0xFFFFFFFFFFFFF8;
      v138 = *(_QWORD *)((char *)&dword_10 + (v162 & 0xFFFFFFFFFFFFF8));
      v139 = v138 + 3;
      if (!__OFADD__(v138, 3))
        goto LABEL_40;
    }
    __break(1u);
    goto LABEL_66;
  }
  if (v162 < 0)
    v153 = v162;
  else
    v153 = v162 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v162);
  v154 = _CocoaArrayWrapper.endIndex.getter(v153);
  swift_bridgeObjectRelease(v162);
  v14 = v154 + 2;
  if (__OFADD__(v154, 2))
    goto LABEL_58;
LABEL_8:
  v24 = sub_215E80(v14, 1);
  specialized Array._endMutation()(v24);
  v25 = v4;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
  v27 = *(_QWORD *)((char *)&dword_10 + (v162 & 0xFFFFFFFFFFFFFF8));
  v26 = *(_QWORD *)((char *)&dword_18 + (v162 & 0xFFFFFFFFFFFFFF8));
  if (v27 >= v26 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
  v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
  specialized Array._endMutation()(v28);
  v29 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
  v31 = *(_QWORD *)((char *)&dword_10 + (v162 & 0xFFFFFFFFFFFFFF8));
  v30 = *(_QWORD *)((char *)&dword_18 + (v162 & 0xFFFFFFFFFFFFFF8));
  if (v31 >= v30 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
  v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
  specialized Array._endMutation()(v32);

  v33 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v34 = sub_12EA50();

  if (v34)
  {
    objc_msgSend(v34, "safeAreaInsets");
    v36 = v35;

  }
  else
  {
    objc_msgSend(v2, "safeAreaInsets");
    v36 = v37;
  }
  v38 = objc_msgSend(v2, "traitCollection");
  v39 = (char *)objc_msgSend(v38, "userInterfaceIdiom");

  v40 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style];
  if (v39 == (_BYTE *)&dword_0 + 1)
  {
    v156 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style];
    if (v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style])
      v41 = 8.0;
    else
      v41 = 29.0;
    v42 = SizeClass.isWideHorizontal.getter(v3);
    v43 = 0.0;
    if (v36 <= 0.0)
      v43 = v41;
    if ((v42 & 1) != 0)
      v43 = v41;
  }
  else
  {
    if (v36 <= 0.0)
    {
      v156 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style];
      v44 = v40 == 0;
      v43 = 14.0;
      v45 = 8.0;
    }
    else
    {
      if ((v40 & 1) != 0)
      {
        v156 = 1;
        v43 = 0.0;
        goto LABEL_31;
      }
      v156 = 0;
      v44 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style + 1] == 0;
      v43 = 29.0;
      v45 = 0.0;
    }
    if (!v44)
      v43 = v45;
  }
LABEL_31:
  v160 = -v43;
  v159 = 0xC033000000000000;
  static Platform.preferred<A>(iOS:mac:)(&v161, &v160, &v159, &type metadata for CGFloat);
  v46 = v161;
  v47 = objc_msgSend(v2, "traitCollection");
  v48 = UITraitCollection.interfaceIdiomIsMac.getter();

  v49 = 0.0;
  if ((v48 & 1) != 0)
  {
    if (v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style + 1])
      v49 = -5.0;
    else
      v49 = 0.0;
  }
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  inited = swift_initStackObject(v50, v158);
  *(_OWORD *)(inited + 16) = xmmword_2F8760;
  v52 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v53 = objc_msgSend(v52, "widthAnchor");

  v54 = objc_msgSend(v53, "constraintLessThanOrEqualToConstant:", 400.0);
  v55.rawValue = static UILayoutPriority.highestBreakable.getter();
  isa = NSLayoutConstraint.withPriority(priority:)(v55).super.isa;

  *(_QWORD *)(inited + 32) = isa;
  v57 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v58 = objc_msgSend(v57, "topAnchor");

  v59 = objc_msgSend(v2, "topAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

  *(_QWORD *)(inited + 40) = v60;
  v61 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v62 = objc_msgSend(v61, "bottomAnchor");

  v63 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView, (uint64_t (*)(void))sub_12B914);
  v64 = objc_msgSend(v63, "topAnchor");

  v65 = objc_msgSend(v62, "constraintEqualToAnchor:constant:", v64, -v49);
  *(_QWORD *)(inited + 48) = v65;
  v66 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView, (uint64_t (*)(void))sub_12B840);
  v67 = objc_msgSend(v66, "leadingAnchor");

  v68 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v69 = objc_msgSend(v68, "leadingAnchor");

  v70 = objc_msgSend(v67, "constraintEqualToAnchor:", v69);
  *(_QWORD *)(inited + 56) = v70;
  v71 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView, (uint64_t (*)(void))sub_12B840);
  v72 = objc_msgSend(v71, "trailingAnchor");

  v73 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v74 = objc_msgSend(v73, "trailingAnchor");

  v75 = objc_msgSend(v72, "constraintEqualToAnchor:", v74);
  *(_QWORD *)(inited + 64) = v75;
  v76 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView, (uint64_t (*)(void))sub_12B840);
  v77 = objc_msgSend(v76, "topAnchor");

  v78 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v79 = objc_msgSend(v78, "topAnchor");

  v80 = objc_msgSend(v77, "constraintGreaterThanOrEqualToAnchor:constant:", v79, 8.0);
  *(_QWORD *)(inited + 72) = v80;
  v81 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView, (uint64_t (*)(void))sub_12B840);
  v82 = objc_msgSend(v81, "bottomAnchor");

  v83 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v84 = objc_msgSend(v83, "bottomAnchor");

  v85 = objc_msgSend(v82, "constraintLessThanOrEqualToAnchor:constant:", v84, -8.0);
  *(_QWORD *)(inited + 80) = v85;
  v86 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView, (uint64_t (*)(void))sub_12B840);
  v87 = objc_msgSend(v86, "centerYAnchor");

  v88 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v89 = objc_msgSend(v88, "centerYAnchor");

  v90 = objc_msgSend(v87, "constraintEqualToAnchor:", v89);
  *(_QWORD *)(inited + 88) = v90;
  v91 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView, (uint64_t (*)(void))sub_12B914);
  v92 = objc_msgSend(v91, "leadingAnchor");

  v93 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v94 = objc_msgSend(v93, "leadingAnchor");

  v95 = objc_msgSend(v92, "constraintEqualToAnchor:", v94);
  *(_QWORD *)(inited + 96) = v95;
  v96 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView, (uint64_t (*)(void))sub_12B914);
  v97 = objc_msgSend(v96, "trailingAnchor");

  v98 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView, (uint64_t (*)(void))sub_12B780);
  v99 = objc_msgSend(v98, "trailingAnchor");

  v100 = objc_msgSend(v97, "constraintEqualToAnchor:", v99);
  *(_QWORD *)(inited + 104) = v100;
  v101 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView, (uint64_t (*)(void))sub_12B914);
  v102 = objc_msgSend(v101, "bottomAnchor");

  v103 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v104 = objc_msgSend(v103, "bottomAnchor");

  v105 = objc_msgSend(v102, "constraintEqualToAnchor:constant:", v104, v46);
  *(_QWORD *)(inited + 112) = v105;
  v106 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___captionLabel, (uint64_t (*)(void))sub_12AC28);
  v107 = objc_msgSend(v106, "lastBaselineAnchor");

  v108 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  v109 = objc_msgSend(v108, "topAnchor");

  v159 = 0xC020000000000000;
  v160 = -14.0;
  static Platform.preferred<A>(iOS:mac:)(&v161, &v160, &v159, &type metadata for CGFloat);
  v110 = objc_msgSend(v107, "constraintEqualToAnchor:constant:", v109, v161);

  *(_QWORD *)(inited + 120) = v110;
  v111 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
  v112 = objc_msgSend(v111, "heightAnchor");

  v113 = objc_msgSend(v112, "constraintGreaterThanOrEqualToConstant:", *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_style + 24]);
  *(_QWORD *)(inited + 128) = v113;
  v161 = *(double *)&inited;
  specialized Array._endMutation()(v114);
  sub_1F6D9C(*(uint64_t *)&v161);
  if (v156)
  {
    v115 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);
    v116 = objc_msgSend(v115, "bottomAnchor");

    v117 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton, (uint64_t (*)(void))sub_12B308);
    v118 = objc_msgSend(v117, "topAnchor");

    v159 = 0xC026000000000000;
    v160 = -4.0;
    static Platform.preferred<A>(iOS:mac:)(&v161, &v160, &v159, &type metadata for CGFloat);
    v119 = objc_msgSend(v116, "constraintEqualToAnchor:constant:", v118, v161);

    v3 = v119;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
    v4 = *(SEL **)((char *)&dword_10 + (v162 & 0xFFFFFFFFFFFFFF8));
    v22 = *(_QWORD *)((char *)&dword_18 + (v162 & 0xFFFFFFFFFFFFFF8));
    if ((unint64_t)v4 < v22 >> 1)
      goto LABEL_37;
    goto LABEL_59;
  }
  return v162;
}

void *sub_12EA50()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  id v10;
  id v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  id v38[2];
  _QWORD *v39;

  v1 = objc_msgSend(v0, "connectedScenes");
  v2 = sub_E710(0, &qword_3D7CC0, UIScene_ptr);
  v3 = sub_1315F0();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (unint64_t *)&_swiftEmptySetSingleton;
    v39 = &_swiftEmptySetSingleton;
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    v7 = __CocoaSet.makeIterator()(v6);
    v8 = __CocoaSet.Iterator.next()(v7);
    if (v8)
    {
      do
      {
        v37 = v8;
        swift_dynamicCast(v38, &v37, (char *)&type metadata for Swift.AnyObject + 8, v2, 7);
        v10 = objc_msgSend(v38[0], "activationState");
        v11 = v38[0];
        if (v10)
        {

        }
        else
        {
          v12 = v39;
          v13 = v39[2];
          if (v39[3] <= v13)
          {
            sub_12F91C(v13 + 1);
            v12 = v39;
          }
          v9 = NSObject._rawHashValue(seed:)(v12[5]);
          v14 = v12 + 7;
          v15 = -1 << *((_BYTE *)v12 + 32);
          v16 = v9 & ~v15;
          v17 = v16 >> 6;
          if (((-1 << v16) & ~v12[(v16 >> 6) + 7]) != 0)
          {
            v18 = __clz(__rbit64((-1 << v16) & ~v12[(v16 >> 6) + 7])) | v16 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v19 = 0;
            v20 = (unint64_t)(63 - v15) >> 6;
            do
            {
              if (++v17 == v20 && (v19 & 1) != 0)
              {
                __break(1u);
                goto LABEL_42;
              }
              v21 = v17 == v20;
              if (v17 == v20)
                v17 = 0;
              v19 |= v21;
              v22 = v14[v17];
            }
            while (v22 == -1);
            v18 = __clz(__rbit64(~v22)) + (v17 << 6);
          }
          *(_QWORD *)((char *)v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(_QWORD *)(v12[6] + 8 * v18) = v11;
          ++v12[2];
        }
        v8 = __CocoaSet.Iterator.next()(v9);
      }
      while (v8);
      v5 = v39;
    }
    swift_release(v7);
  }
  else
  {
    v5 = sub_130724(v4);
  }
  sub_12A698((uint64_t)v5);
  v2 = v23;
  swift_release(v5);
  if ((unint64_t)v2 >> 62)
    goto LABEL_43;
  if (!*(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8)))
  {
LABEL_47:
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  while ((v2 & 0xC000000000000001) != 0)
  {
    v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_31:
    v25 = v24;
    v26 = objc_msgSend(v24, "windows", swift_bridgeObjectRelease(v2).n128_f64[0]);

    v27 = sub_E710(0, &qword_3D7CD0, UIWindow_ptr);
    v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

    if ((unint64_t)v2 >> 62)
      goto LABEL_52;
    v28 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v2);
    if (!v28)
      goto LABEL_40;
LABEL_33:
    v29 = 4;
    while (1)
    {
      v30 = (v2 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29 - 4, v2)
          : *(id *)(v2 + 8 * v29);
      v31 = v30;
      v32 = v29 - 3;
      if (__OFADD__(v29 - 4, 1))
        break;
      if (objc_msgSend(v30, "isKeyWindow"))
      {
        swift_bridgeObjectRelease_n(v2, 2);
        return v31;
      }

      ++v29;
      if (v32 == v28)
        goto LABEL_40;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    if (v2 < 0)
      v33 = v2;
    else
      v33 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v2);
    if (!v34)
      goto LABEL_47;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8)))
  {
    v24 = *(id *)(v2 + 32);
    goto LABEL_31;
  }
  __break(1u);
LABEL_52:
  if (v2 < 0)
    v36 = v2;
  else
    v36 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v28 = _CocoaArrayWrapper.endIndex.getter(v36);
  if (v28)
    goto LABEL_33;
LABEL_40:
  swift_bridgeObjectRelease_n(v2, 2);
  return 0;
}

double sub_12EE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  id v25;
  __n128 v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  double result;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  _BYTE v42[40];
  _QWORD v43[5];
  _BYTE v44[24];
  _BYTE v45[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = UpsellSubscriptionPlan.offerAction.getter();
    v8 = UpsellSubscriptionPlan.offerAction.getter();
    v9 = Action.uniqueId.getter();
    v11 = v10;
    swift_release(v8);
    sub_131354(v7, v9, v11);

    swift_release(v7);
    swift_bridgeObjectRelease(v11);
  }
  swift_beginAccess(v4, v44, 0, 0);
  v12 = swift_unknownObjectWeakLoadStrong(v4);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);

    v15 = UpsellSubscriptionPlan.offerAction.getter();
    v43[3] = type metadata accessor for ChannelOfferAction(0);
    v43[4] = sub_131690(&qword_3D7CE0, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelOfferAction);
    v43[0] = v15;
    v16 = v14;
    UIControl.setAction(_:for:asPartOf:)(v43, 0x2000, a3);

    sub_1D5D4((uint64_t)v43, (uint64_t)v42);
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C0);
    if (swift_dynamicCast(v41, v42, v17, v18, 6))
    {
      v19 = v41[0];
      v20 = v41[1];
      v21 = *(_QWORD *)v41[0];
      v22 = swift_allocObject(&unk_383FF0, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16, v16);
      v23 = swift_retain(v22);
      dispatch thunk of CompletableAction.addCompletionHandler(_:)(sub_131728, v22, v21, v20, v23);
      swift_release_n(v22, 2);
      sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
      v24 = swift_allocObject(&unk_383FF0, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16, v16);
      v25 = v16;
      v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v26, 0, 0, 0, sub_131730, v24);
      objc_msgSend(v25, "addAction:forControlEvents:", v27, 0x2000);
      swift_release(v19);

    }
    else
    {

    }
    __swift_destroy_boxed_opaque_existential_0(v43);
  }
  swift_beginAccess(v4, v43, 0, 0);
  v28 = swift_unknownObjectWeakLoadStrong(v4);
  if (v28)
  {
    v29 = (void *)v28;
    v30 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton, (uint64_t (*)(void))sub_12B094);

    UpsellSubscriptionPlan.ctaTitle.getter();
    v32 = v31;
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v30, "setTitle:forState:", v33, 0, swift_bridgeObjectRelease(v32).n128_f64[0]);

  }
  swift_beginAccess(v4, v42, 0, 0);
  v34 = swift_unknownObjectWeakLoadStrong(v4);
  if (v34)
  {
    v36 = (void *)v34;
    v37 = UpsellSubscriptionPlan.offerAction.getter();
    v38 = Action.uniqueId.getter();
    v40 = v39;
    swift_release(v37);
    sub_12F1B8(v38, v40);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v40).n128_u64[0];
  }
  return result;
}

void sub_12F1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[24];
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v55 = a2;
  v57 = a1;
  v3 = type metadata accessor for MetricsData(0);
  v56 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D20F8);
  __chkstk_darwin(v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PageMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - v14;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v53 - v18;
  v58 = v2;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_upsellInformation))
  {
    v20 = UpsellInformation.pageMetrics.getter(v17);
    v21 = PageMetrics.pageFields.getter(v20);
    v22 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v23 = v22(v19, v9);
    v54 = v3;
    if (v21)
    {
      if (*(_QWORD *)(v21 + 16) && (v24 = sub_36BA4(0x644965676170, 0xE600000000000000), (v25 & 1) != 0))
      {
        sub_1D66C(*(_QWORD *)(v21 + 56) + 32 * v24, (uint64_t)&v67);
      }
      else
      {
        v67 = 0u;
        v68 = 0u;
      }
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      v67 = 0u;
      v68 = 0u;
    }
    v26 = UpsellInformation.productId.getter(v23);
    v28 = v27;
    v30 = UpsellInformation.pageMetrics.getter(v29);
    v31 = PageMetrics.pageFields.getter(v30);
    v22(v15, v9);
    if (v31)
    {
      if (*(_QWORD *)(v31 + 16) && (v32 = sub_36BA4(0x6C725565676170, 0xE700000000000000), (v33 & 1) != 0))
      {
        sub_1D66C(*(_QWORD *)(v31 + 56) + 32 * v32, (uint64_t)&v65);
      }
      else
      {
        v65 = 0u;
        v66 = 0u;
      }
      v34 = swift_bridgeObjectRelease(v31);
    }
    else
    {
      v34 = 0uLL;
      v65 = 0u;
      v66 = 0u;
    }
    v35 = UpsellInformation.pageMetrics.getter(v34);
    v36 = PageMetrics.pageFields.getter(v35);
    v22(v12, v9);
    if (v36)
    {
      v37 = v56;
      v38 = v55;
      if (*(_QWORD *)(v36 + 16) && (v39 = sub_36BA4(0x6174654465676170, 0xEB00000000736C69), (v40 & 1) != 0))
      {
        sub_1D66C(*(_QWORD *)(v36 + 56) + 32 * v39, (uint64_t)&v63);
      }
      else
      {
        v63 = 0u;
        v64 = 0u;
      }
      swift_bridgeObjectRelease(v36);
    }
    else
    {
      v63 = 0u;
      v64 = 0u;
      v37 = v56;
      v38 = v55;
    }
    v41 = enum case for MetricsPageType.upsell(_:);
    v42 = type metadata accessor for MetricsPageType(0);
    v43 = *(_QWORD *)(v42 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v8, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v8, 0, 1, v42);
    sub_D184((uint64_t)&v67, (uint64_t)v61, &qword_3D1A70);
    if (v62)
    {
      v44 = swift_dynamicCast(&v59, v61, (char *)&type metadata for Any + 8, &type metadata for String, 6);
      if (v44)
        v45 = v59;
      else
        v45 = 0;
      if (v44)
        v46 = v60;
      else
        v46 = 0;
    }
    else
    {
      sub_D1D4((uint64_t)v61, &qword_3D1A70);
      v45 = 0;
      v46 = 0;
    }
    sub_D184((uint64_t)&v65, (uint64_t)v61, &qword_3D1A70);
    if (v62)
    {
      v47 = swift_dynamicCast(&v59, v61, (char *)&type metadata for Any + 8, &type metadata for String, 6);
      if (v47)
        v48 = v59;
      else
        v48 = 0;
      if (v47)
        v49 = v60;
      else
        v49 = 0;
    }
    else
    {
      sub_D1D4((uint64_t)v61, &qword_3D1A70);
      v48 = 0;
      v49 = 0;
    }
    type metadata accessor for ClickMetricsEvent(0);
    v50 = static ClickMetricsEvent.upsellPlanClickEvent(pageType:actionType:pageDetails:pageId:targetId:pageUrl:channelAdamId:)(v8, 0x7463656C6573, 0xE600000000000000, &v63, v45, v46, v57, v38, v48, v49, v26, v28);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v28);
    v51 = sub_D1D4((uint64_t)v8, &qword_3D20F8);
    dispatch thunk of MetricsEvent.metricsData.getter(v51);
    MetricsController.process(_:)(v5);
    v52 = swift_release(v50);
    (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v5, v54, v52);
    sub_D1D4((uint64_t)&v63, &qword_3D1A70);
    sub_D1D4((uint64_t)&v65, &qword_3D1A70);
    sub_D1D4((uint64_t)&v67, &qword_3D1A70);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for UpsellInfoContainerView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23UpsellInfoContainerView);
}

void destroy for UpsellInfoContainerView.Style(uint64_t a1)
{

}

uint64_t initializeWithCopy for UpsellInfoContainerView.Style(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for UpsellInfoContainerView.Style(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for UpsellInfoContainerView.Style(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for UpsellInfoContainerView.Style()
{
  return &type metadata for UpsellInfoContainerView.Style;
}

void sub_12F91C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D7CD8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_36;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_36;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_36;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_36:
                swift_release(v3);
                v2 = v30;
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v13 >= v11)
                    goto LABEL_36;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v6 + 40));
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_12FBB8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D1DA0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(v20);
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_12FE60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E48);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_13013C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[9];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1D50);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_39;
  v35 = v2;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v37 = (_QWORD *)(v7 + 56);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v36 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  swift_retain(v7);
  v15 = 0;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_26;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v19 >= v36)
      goto LABEL_35;
    v20 = v37[v19];
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v36)
        goto LABEL_35;
      v20 = v37[v15];
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v36)
          goto LABEL_35;
        v20 = v37[v15];
        if (!v20)
          break;
      }
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_26:
    v22 = *(_QWORD *)(v38 + 72);
    sub_131648(*(_QWORD *)(v7 + 48) + v22 * v18, (uint64_t)v6);
    Hasher.init(_seed:)(v40, *(_QWORD *)(v9 + 40));
    v23 = &v6[*(int *)(v39 + 28)];
    v24 = *(_QWORD *)v23;
    v25 = *((_QWORD *)v23 + 1);
    swift_bridgeObjectRetain(v25);
    String.hash(into:)(v40, v24, v25);
    swift_bridgeObjectRelease(v25);
    v26 = Hasher._finalize()();
    v27 = -1 << *(_BYTE *)(v9 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v14 + 8 * (v28 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v14 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v14 + 8 * v29);
      }
      while (v33 == -1);
      v16 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v14 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    sub_131648((uint64_t)v6, *(_QWORD *)(v9 + 48) + v16 * v22);
    ++*(_QWORD *)(v9 + 16);
  }
  v21 = v19 + 3;
  if (v21 < v36)
  {
    v20 = v37[v21];
    if (!v20)
    {
      while (1)
      {
        v15 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_41;
        if (v15 >= v36)
          goto LABEL_35;
        v20 = v37[v15];
        ++v21;
        if (v20)
          goto LABEL_25;
      }
    }
    v15 = v21;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v7);
  v2 = v35;
  v34 = 1 << *(_BYTE *)(v7 + 32);
  if (v34 > 63)
    bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v37 = -1 << v34;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_39:
  swift_release(v7);
  *v2 = v9;
}

void sub_1304A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1D40);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 0;
    v8 = (uint64_t *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    v29 = -1 << v9;
    v30 = v2;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v31 = 1 << *(_BYTE *)(v3 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                if (v31 >= 64)
                  bzero((void *)(v3 + 56), 8 * v12);
                else
                  *v8 = v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

unint64_t *sub_130724(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  unint64_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_130880((unint64_t *)((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    swift_release(v2);
    if (v1)
      swift_willThrow(v9);
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v7, -1);
    bzero(v10, v7);
    v8 = sub_130880((unint64_t *)v10, v6, v2);
    swift_release(v2);
    swift_slowDealloc(v10, -1, -1);
  }
  return v8;
}

unint64_t *sub_130880(unint64_t *result, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v4 = result;
  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    result = (unint64_t *)objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v13), "activationState");
    if (!result)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain(a3);
        return (unint64_t *)sub_130A18(v4, a2, v5, a3);
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

Swift::Int sub_130A18(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D7CD8);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v29[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v29[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = v9[5];
    v19 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = NSObject._rawHashValue(seed:)(v18);
    v20 = -1 << *((_BYTE *)v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v29[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v29[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_130C74(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _QWORD v32[9];

  v4 = a4;
  if (!a3)
  {
    v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E48);
  result = static _SetStorage.allocate(capacity:)(v5);
  v8 = (_QWORD *)result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    Hasher.init(_seed:)(v32, v8[5]);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(v32, v18, v19);
    result = Hasher._finalize()();
    v20 = -1 << *((_BYTE *)v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(v8[6] + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_130F08(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  Swift::Int result;
  unint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[9];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release(a4);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1D50);
  result = static _SetStorage.allocate(capacity:)(a3);
  v11 = result;
  v35 = a1;
  v36 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *a1;
  v14 = 0;
  v15 = result + 56;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v17 = v16 | (v14 << 6);
    }
    else
    {
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v18 >= v36)
      {
LABEL_37:
        swift_release(a4);
        return v11;
      }
      v19 = v35[v18];
      ++v14;
      if (!v19)
      {
        v14 = v18 + 1;
        if (v18 + 1 >= v36)
          goto LABEL_37;
        v19 = v35[v14];
        if (!v19)
        {
          v14 = v18 + 2;
          if (v18 + 2 >= v36)
            goto LABEL_37;
          v19 = v35[v14];
          if (!v19)
          {
            v20 = v18 + 3;
            if (v20 >= v36)
              goto LABEL_37;
            v19 = v35[v20];
            if (!v19)
            {
              while (1)
              {
                v14 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v14 >= v36)
                  goto LABEL_37;
                v19 = v35[v14];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v14 = v20;
          }
        }
      }
LABEL_24:
      v13 = (v19 - 1) & v19;
      v17 = __clz(__rbit64(v19)) + (v14 << 6);
    }
    v21 = *(_QWORD *)(v37 + 72);
    sub_D184(*(_QWORD *)(a4 + 48) + v21 * v17, (uint64_t)v10, &qword_3D9460);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v11 + 40));
    v22 = &v10[*(int *)(v38 + 28)];
    v23 = *(_QWORD *)v22;
    v24 = *((_QWORD *)v22 + 1);
    swift_bridgeObjectRetain(v24);
    String.hash(into:)(v39, v23, v24);
    swift_bridgeObjectRelease(v24);
    result = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v11 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v15 + 8 * v27);
      }
      while (v32 == -1);
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(_QWORD *)(v15 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    result = sub_131648((uint64_t)v10, *(_QWORD *)(v11 + 48) + v28 * v21);
    ++*(_QWORD *)(v11 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_131200(void *a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char v5;
  __n128 v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __n128 v13;
  int v14;

  v2 = UpsellInformation.seeAllAction.getter();
  v4 = v2;
  if (v2)
    v3 = swift_release(v2);
  v5 = UpsellInformation.hasTwoSubscriptionPlans.getter(v3);
  v7 = UpsellInformation.hasTwoSubscriptionPlans.getter(v6);
  v8 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  if ((v7 & 1) != 0)
  {
    v9 = (void *)static UIFont.title3Emph.getter(v8);
    v10 = static UIFont.title2Emph.getter(v9);
  }
  else
  {
    v9 = (void *)static UIFont.title2Emph.getter(v8);
    v10 = static UIFont.title2EmphShort.getter();
  }
  v11 = (void *)v10;
  static UIFont.preferredFont(iOS:mac:)(v9, v10);

  v12 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v12) & 1) != 0)
    UpsellInformation.hasTwoSubscriptionPlans.getter(v13);

  if ((v5 & 1) != 0)
    v14 = 256;
  else
    v14 = 0;
  return v14 | (v4 != 0);
}

void sub_131354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _QWORD);
  void (*v14)(_BYTE *, _QWORD);
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  void (*v19)(_BYTE *, _QWORD);
  uint64_t v20;
  _BYTE v21[32];
  _BYTE v22[32];
  _BYTE v23[32];
  _QWORD v24[4];

  v5 = type metadata accessor for ActionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = dispatch thunk of Action.actionMetrics.getter(v7);
  v11 = ActionMetrics.data.getter(v10);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRelease(v11);
  if (v12)
  {
    v24[3] = &type metadata for String;
    v24[0] = a2;
    v24[1] = a3;
    swift_bridgeObjectRetain(a3);
    v13 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Action.actionMetrics.modify(v23);
    v14 = (void (*)(_BYTE *, _QWORD))ActionMetrics.data.modify(v22);
    v16 = v15;
    v17 = *v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v15);
    *v16 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (*(_QWORD *)(v17 + 16))
      {
LABEL_4:
        type metadata accessor for MetricsData(0);
        v19 = (void (*)(_BYTE *, _QWORD))MetricsData.fields.modify(v21);
        sub_B1158((uint64_t)v24, 0x6449746567726174, 0xE800000000000000);
        v19(v21, 0);
        v14(v22, 0);
        v13(v23, 0);
        return;
      }
    }
    else
    {
      v20 = sub_E1CE0(v17);
      *v16 = v20;
      if (*(_QWORD *)(v20 + 16))
        goto LABEL_4;
    }
    __break(1u);
  }
}

void sub_1314E8()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_viewConstraints] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___captionLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___subscribeButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___seeAllButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackViewContainerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___topStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___bottomStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___compactSubscribeButtonConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView____lazy_storage___regularSubscribeButtonConstraints] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UpsellInfoContainerView.swift", 53, 2, 167, 0);
  __break(1u);
}

unint64_t sub_1315F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7CC8;
  if (!qword_3D7CC8)
  {
    v1 = sub_E710(255, &qword_3D7CC0, UIScene_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_3D7CC8);
  }
  return result;
}

uint64_t sub_131648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_131690(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1316D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1316F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_131720(uint64_t a1)
{
  uint64_t v1;

  return sub_12EE2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_131728(uint64_t a1)
{
  uint64_t v1;

  sub_4967C(a1, v1);
}

void sub_131730(uint64_t a1)
{
  uint64_t v1;

  sub_496EC(a1, v1);
}

uint64_t sub_13173C(char a1)
{
  uint64_t v1;

  if ((a1 & 1) != 0)
  {
    if ((a1 & 2) != 0)
    {
      v1 = 3;
      if ((a1 & 4) == 0)
        goto LABEL_5;
    }
    else
    {
      v1 = 1;
      if ((a1 & 4) == 0)
        goto LABEL_5;
    }
LABEL_4:
    v1 |= 4uLL;
    goto LABEL_5;
  }
  if ((a1 & 2) == 0)
  {
    v1 = 0;
    if ((a1 & 4) == 0)
      goto LABEL_5;
    goto LABEL_4;
  }
  v1 = 2;
  if ((a1 & 4) != 0)
    goto LABEL_4;
LABEL_5:
  if ((a1 & 8) != 0)
    return v1 | 8;
  return v1;
}

uint64_t sub_131788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_131790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  _BYTE v19[24];

  v1 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v1);
  v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v6 = &v19[-v5 - 8];
  __chkstk_darwin(v7);
  v9 = &v19[-v8 - 8];
  v10 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InlineNowPlayingIndicator_episodePlayState;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InlineNowPlayingIndicator_episodePlayState, v19, 0, 0);
  sub_F8BC(v10, (uint64_t)v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v1);
  if (!EnumCaseMultiPayload)
  {
    v12 = *(unsigned __int8 *)(v0 + 24);
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 3)
  {
    v12 = *(unsigned __int8 *)(v0 + 24);
    *(_BYTE *)(v0 + 24) = 0;
    if (!(_DWORD)v12)
      goto LABEL_12;
    v13 = 0;
    goto LABEL_11;
  }
  sub_F8BC((uint64_t)v9, (uint64_t)v6);
  if ((v6[16] & 1) != 0)
  {
    v12 = *(unsigned __int8 *)(v0 + 24);
    *(_BYTE *)(v0 + 24) = 1;
    if ((_DWORD)v12 == 1)
      goto LABEL_12;
    v13 = 1;
    goto LABEL_11;
  }
  v12 = *(unsigned __int8 *)(v0 + 24);
  if ((v6[17] & 1) != 0)
  {
LABEL_7:
    *(_BYTE *)(v0 + 24) = 3;
    if ((_DWORD)v12 == 3)
      goto LABEL_12;
    v13 = 3;
    goto LABEL_11;
  }
  *(_BYTE *)(v0 + 24) = 2;
  if ((_DWORD)v12 != 2)
  {
    v13 = 2;
LABEL_11:
    sub_131950(v12, v13);
  }
LABEL_12:
  sub_AEEF0((uint64_t)v9);
  result = swift_unknownObjectWeakLoadStrong(v0 + 72);
  if (result)
  {
    v15 = result;
    v16 = *(_QWORD *)(v0 + 80);
    ObjectType = swift_getObjectType();
    sub_F8BC(v10, (uint64_t)v3);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v3, ObjectType, v16);
    swift_unknownObjectRelease(v15);
    return sub_AEEF0((uint64_t)v3);
  }
  return result;
}

void sub_131950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v33;
  double v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  char v55[24];
  void **aBlock;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t (*v60)();
  uint64_t v61;

  v3 = v2;
  v5 = a1;
  v6 = *(_QWORD *)(v2 + 32);
  v54 = a1;
  if (v6)
    goto LABEL_5;
  swift_beginAccess(&off_3D3FF8, v55, 0, 0);
  if (!off_3D3FF8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v7 = a2;
  sub_1D5D4((uint64_t)(off_3D3FF8 + 16), (uint64_t)&aBlock);
  v8 = v59;
  v9 = v60;
  __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v59);
  v10 = (*((uint64_t (**)(void *, uint64_t (*)()))v9 + 6))(v8, v9);
  v11 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = v10;
  *(_QWORD *)(v2 + 40) = v12;
  swift_unknownObjectRelease(v11);
  v13 = *(_QWORD *)(v2 + 32);
  if (!v13)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v14 = *(_QWORD *)(v3 + 40);
  ObjectType = swift_getObjectType();
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v16 + 32);
  v18 = swift_unknownObjectRetain(v13);
  v19 = (void *)v17(ObjectType, v16, v18);
  objc_msgSend(*(id *)(v3 + 16), "bounds", swift_unknownObjectRelease(v13).n128_f64[0]);
  objc_msgSend(v19, "setFrame:");
  objc_msgSend(v19, "setAutoresizingMask:", 18);
  objc_msgSend(*(id *)(v3 + 16), "addSubview:", v19);

  __swift_destroy_boxed_opaque_existential_0(&aBlock);
  v6 = *(_QWORD *)(v3 + 32);
  v5 = v54;
  a2 = v7;
  if (v6)
  {
LABEL_5:
    v20 = *(_QWORD *)(v3 + 40);
    v49 = swift_getObjectType();
    v21 = *(_QWORD *)(v20 + 8);
    Strong = swift_unknownObjectWeakLoadStrong(v3 + 56);
    v23 = *(_QWORD *)(v3 + 64);
    v24 = swift_allocObject(&unk_3840A8, 24, 7);
    swift_weakInit(v24 + 16, v3);
    v25 = swift_allocObject(&unk_3840D0, 65, 7);
    *(_QWORD *)(v25 + 16) = v6;
    *(_QWORD *)(v25 + 24) = v21;
    v48 = v21;
    *(_BYTE *)(v25 + 32) = a2;
    *(_QWORD *)(v25 + 40) = Strong;
    *(_QWORD *)(v25 + 48) = v23;
    *(_QWORD *)(v25 + 56) = v24;
    *(_BYTE *)(v25 + 64) = v5;
    v26 = swift_allocObject(&unk_3840A8, 24, 7);
    swift_weakInit(v26 + 16, v3);
    v27 = swift_allocObject(&unk_3840F8, 49, 7);
    *(_QWORD *)(v27 + 16) = v26;
    *(_BYTE *)(v27 + 24) = a2;
    *(_QWORD *)(v27 + 32) = Strong;
    *(_QWORD *)(v27 + 40) = v23;
    v51 = v27;
    *(_BYTE *)(v27 + 48) = v5;
    v50 = a2;
    v52 = Strong;
    v53 = v6;
    if (Strong)
    {
      v28 = swift_getObjectType();
      v29 = v6;
      v30 = Strong;
      v31 = v28;
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v23 + 8);
      swift_unknownObjectRetain_n(v29, 2);
      swift_unknownObjectRetain_n(v30, 2);
      swift_retain(v24);
      v33 = swift_retain(v26);
      v32(v3, v5, a2, v31, v23, v33);
    }
    else
    {
      swift_unknownObjectRetain_n(v6, 2);
      swift_retain(v24);
      *(_QWORD *)&v34 = swift_retain(v26).n128_u64[0];
    }
    v35 = objc_msgSend(*(id *)(v3 + 16), "window", v34, v24 + 16);

    if (v35)
    {
      v36 = (void *)objc_opt_self(UIView);
      if (objc_msgSend(v36, "areAnimationsEnabled"))
      {
        swift_release(v26);
        swift_release(v24);
        v60 = sub_132994;
        v61 = v25;
        aBlock = _NSConcreteStackBlock;
        v57 = 1107296256;
        v58 = sub_24360;
        v59 = &block_descriptor_16;
        v37 = _Block_copy(&aBlock);
        v38 = v61;
        swift_retain(v25);
        swift_release(v38);
        v39 = swift_allocObject(&unk_384148, 32, 7);
        *(_QWORD *)(v39 + 16) = sub_1329D8;
        *(_QWORD *)(v39 + 24) = v51;
        v60 = sub_43920;
        v61 = v39;
        aBlock = _NSConcreteStackBlock;
        v57 = 1107296256;
        v58 = sub_1E3D64;
        v59 = &block_descriptor_22;
        v40 = _Block_copy(&aBlock);
        v41 = v61;
        swift_retain(v51);
        swift_release(v41);
        objc_msgSend(v36, "animateWithDuration:animations:completion:", v37, v40, 0.3);
        swift_release(v51);
        swift_release(v25);
        swift_unknownObjectRelease(v53);
        swift_unknownObjectRelease(v52);
        _Block_release(v40);
        _Block_release(v37);
        return;
      }
    }
    v42 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v42, "begin");
    objc_msgSend(v42, "setDisableActions:", 1);
    (*(void (**)(_QWORD, uint64_t))(v48 + 16))(a2, v49);
    if (!v52)
    {
      swift_release(v24);
      v46 = v54;
      goto LABEL_15;
    }
    swift_beginAccess(v47, &aBlock, 0, 0);
    v43 = swift_weakLoadStrong(v47);
    if (v43)
    {
      v44 = v43;
      v45 = swift_getObjectType();
      (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v23 + 16))(v44, v54, v50, v45, v23);
      v46 = v54;
      swift_release(v24);
      swift_release(v44);
LABEL_15:
      sub_131F78(v26, v50, v52, v23, v46);
      objc_msgSend(v42, "commit", swift_release(v26).n128_f64[0]);
      swift_release(v51);
      swift_release(v25);
      swift_unknownObjectRelease(v53);
      swift_unknownObjectRelease(v52);
      return;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_131EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  ObjectType = swift_getObjectType();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(a3, ObjectType, a2);
  if (a4)
  {
    swift_beginAccess(a6 + 16, v17, 0, 0);
    result = swift_weakLoadStrong(a6 + 16);
    if (result)
    {
      v15 = result;
      v16 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 16))(v15, a7, a3, v16, a5);
      return swift_release(v15);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_131F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t result;
  int v11;
  _BOOL8 v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  _BYTE v16[24];

  v9 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  result = swift_weakLoadStrong(v9);
  if (result)
  {
    v11 = *(unsigned __int8 *)(result + 24);
    result = swift_release(result);
    v12 = v11 != a2;
    if (!a3)
      return result;
  }
  else
  {
    v12 = 1;
    if (!a3)
      return result;
  }
  swift_beginAccess(v9, &v15, 0, 0);
  result = swift_weakLoadStrong(v9);
  if (result)
  {
    v13 = result;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, _BOOL8, uint64_t, uint64_t))(a4 + 24))(v13, a5, a2, v12, ObjectType, a4);
    return swift_release(v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_132054()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  sub_10DBC8(v0 + 56);
  sub_10DBC8(v0 + 72);
  sub_AEEF0(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InlineNowPlayingIndicator_episodePlayState);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1320AC()
{
  return type metadata accessor for InlineNowPlayingIndicator(0);
}

uint64_t type metadata accessor for InlineNowPlayingIndicator(uint64_t a1)
{
  uint64_t result;

  result = qword_3D7D20;
  if (!qword_3D7D20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InlineNowPlayingIndicator);
  return result;
}

uint64_t sub_1320F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_2F8860;
  v4[2] = &unk_2F8878;
  v4[3] = &unk_2F8890;
  v4[4] = &unk_2F88A8;
  v4[5] = &unk_2F88A8;
  result = type metadata accessor for EpisodePlayState(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_132194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  _BYTE v27[24];
  char v28[24];

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(&off_3D3FF8, v28, 0, 0);
  if (!off_3D3FF8)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = *(_QWORD *)&stru_68.sectname[(_QWORD)off_3D3FF8];
  v6 = *(_QWORD *)&stru_68.segname[(_QWORD)off_3D3FF8 - 8];
  ObjectType = swift_getObjectType();
  v8 = swift_unknownObjectRetain(v5);
  v9 = dispatch thunk of LibraryDataProviderProtocol.episodePlayStateController.getter(ObjectType, v6, v8);
  v10 = swift_unknownObjectRelease(v5);
  v11 = LibraryEpisodeLockup.uuid.getter(v10);
  v13 = v12;
  v14 = type metadata accessor for PlaybackStatusPresenter(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  swift_retain(v9);
  v15 = sub_276AA0(v11, v13, v9);
  v16 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = v15;
  swift_release(v16);
  v17 = *(_QWORD *)(v1 + 48);
  if (!v17)
  {
LABEL_8:
    __break(1u);
    return;
  }
  *(_QWORD *)(v17 + 40) = &off_384008;
  v18 = swift_unknownObjectWeakAssign(v17 + 32, v1);
  Strong = swift_unknownObjectWeakLoadStrong(v18);
  if (Strong)
  {
    v20 = Strong;
    v21 = *(_QWORD *)(v17 + 40);
    v22 = swift_getObjectType();
    v23 = v17 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
    swift_beginAccess(v17 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v27, 0, 0);
    sub_F8BC(v23, (uint64_t)v4);
    v24 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v21 + 8);
    swift_retain(v17);
    v25 = swift_retain(v1);
    v24(v4, v22, v21, v25);
    swift_unknownObjectRelease(v20);
    sub_AEEF0((uint64_t)v4);
    swift_release(v9);
    swift_release(v17);
    v26 = v1;
  }
  else
  {
    v26 = v9;
  }
  swift_release(v26);
}

void sub_132374(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  _BYTE v25[24];
  char v26[24];

  v2 = v1;
  v4 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(&off_3D3FF8, v26, 0, 0);
  if (!off_3D3FF8)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = *(_QWORD *)&stru_68.sectname[(_QWORD)off_3D3FF8];
  v8 = *(_QWORD *)&stru_68.segname[(_QWORD)off_3D3FF8 - 8];
  ObjectType = swift_getObjectType();
  v10 = swift_unknownObjectRetain(v7);
  v11 = dispatch thunk of LibraryDataProviderProtocol.episodePlayStateController.getter(ObjectType, v8, v10);
  swift_unknownObjectRelease(v7);
  v12 = type metadata accessor for PlaybackStatusPresenter(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  swift_retain(v11);
  v13 = sub_276978(a1, v11);
  v14 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 48) = v13;
  swift_release(v14);
  v15 = *(_QWORD *)(v2 + 48);
  if (!v15)
  {
LABEL_8:
    __break(1u);
    return;
  }
  *(_QWORD *)(v15 + 40) = &off_384008;
  v16 = swift_unknownObjectWeakAssign(v15 + 32, v2);
  Strong = swift_unknownObjectWeakLoadStrong(v16);
  if (Strong)
  {
    v18 = Strong;
    v19 = *(_QWORD *)(v15 + 40);
    v20 = swift_getObjectType();
    v21 = v15 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
    swift_beginAccess(v15 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v25, 0, 0);
    sub_F8BC(v21, (uint64_t)v6);
    v22 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v19 + 8);
    swift_retain(v15);
    v23 = swift_retain(v2);
    v22(v6, v20, v19, v23);
    swift_unknownObjectRelease(v18);
    sub_AEEF0((uint64_t)v6);
    swift_release(v11);
    swift_release(v15);
    v24 = v2;
  }
  else
  {
    v24 = v11;
  }
  swift_release(v24);
}

void sub_13253C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v15;

  v3 = type metadata accessor for EpisodePlayState(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (void *)objc_opt_self(UIView);
  sub_F8BC(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 24) & ~v7;
  v9 = swift_allocObject(&unk_384030, v8 + v5, v7 | 7);
  *(_QWORD *)(v9 + 16) = v1;
  sub_AF608((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  v10 = swift_allocObject(&unk_384058, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_1328E4;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_101EC;
  v15 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_920D4;
  aBlock[3] = &block_descriptor_24;
  v11 = _Block_copy(aBlock);
  v12 = v15;
  swift_retain(v1);
  swift_retain(v10);
  objc_msgSend(v6, "performWithoutAnimation:", v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v10, "", 137, 163, 40, 1);
  swift_release(v9);
  swift_release(v10);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_1326D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v4 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v4);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_F8BC(a2, (uint64_t)v6);
  v7 = a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InlineNowPlayingIndicator_episodePlayState;
  swift_beginAccess(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InlineNowPlayingIndicator_episodePlayState, v10, 33, 0);
  sub_F900((uint64_t)v6, v7);
  swift_endAccess(v10);
  sub_131790();
  return sub_AEEF0((uint64_t)v6);
}

uint64_t sub_132784(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_F8BC(a1, (uint64_t)v5);
  v6 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InlineNowPlayingIndicator_episodePlayState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25InlineNowPlayingIndicator_episodePlayState, v9, 33, 0);
  sub_F900((uint64_t)v5, v6);
  swift_endAccess(v9);
  sub_131790();
  return sub_AEEF0((uint64_t)v5);
}

uint64_t sub_132830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for EpisodePlayState(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 2)
  {
    v6 = type metadata accessor for Date(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v4, v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1328E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EpisodePlayState(0) - 8) + 80);
  return sub_1326D0(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_132914()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_13293C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_132960()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_unknownObjectRelease(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 65, 7);
}

uint64_t sub_132994()
{
  uint64_t v0;

  return sub_131EAC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(unsigned __int8 *)(v0 + 64));
}

uint64_t sub_1329AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1329D8()
{
  uint64_t v0;

  return sub_131F78(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_1329EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t *sub_132A20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  int v16;
  id v17;
  id *v18;
  int v19;
  id v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(uint64_t *, _QWORD, uint64_t, int *, __n128);
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = (int *)type metadata accessor for ArtworkModel(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain(v11);
      if (v12 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v13 = a2[2];
        v14 = a2[3];
        sub_108110(v13, v14, v12);
        a1[2] = v13;
        a1[3] = v14;
        *((_BYTE *)a1 + 32) = v12;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v15 = (id *)(a2 + 7);
      v16 = *((unsigned __int8 *)a2 + 64);
      if (v16 == 255)
      {
        a1[7] = (uint64_t)*v15;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v17 = *v15;
        sub_27F80(*v15, *((_BYTE *)a2 + 64));
        a1[7] = (uint64_t)v17;
        *((_BYTE *)a1 + 64) = v16;
      }
      v18 = (id *)(a2 + 9);
      v19 = *((unsigned __int8 *)a2 + 80);
      if (v19 == 255)
      {
        a1[9] = (uint64_t)*v18;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v20 = *v18;
        sub_27F80(*v18, *((_BYTE *)a2 + 80));
        a1[9] = (uint64_t)v20;
        *((_BYTE *)a1 + 80) = v19;
      }
      v21 = (id *)(a2 + 11);
      v22 = *((unsigned __int8 *)a2 + 96);
      if (v22 == 255)
      {
        a1[11] = (uint64_t)*v21;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v23 = *v21;
        sub_27F80(*v21, *((_BYTE *)a2 + 96));
        a1[11] = (uint64_t)v23;
        *((_BYTE *)a1 + 96) = v22;
      }
      v24 = (id *)(a2 + 13);
      v25 = *((unsigned __int8 *)a2 + 112);
      if (v25 == 255)
      {
        a1[13] = (uint64_t)*v24;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v26 = *v24;
        sub_27F80(*v24, *((_BYTE *)a2 + 112));
        a1[13] = (uint64_t)v26;
        *((_BYTE *)a1 + 112) = v25;
      }
      v27 = (id *)(a2 + 15);
      v28 = *((unsigned __int8 *)a2 + 128);
      if (v28 == 255)
      {
        a1[15] = (uint64_t)*v27;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v29 = *v27;
        sub_27F80(*v27, *((_BYTE *)a2 + 128));
        a1[15] = (uint64_t)v29;
        *((_BYTE *)a1 + 128) = v28;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v30 = v7[11];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      v34 = v7[12];
      v35 = (uint64_t *)((char *)a1 + v34);
      v36 = (uint64_t *)((char *)a2 + v34);
      v37 = v36[1];
      *v35 = *v36;
      v35[1] = v37;
      *((_BYTE *)a1 + v7[13]) = *((_BYTE *)a2 + v7[13]);
      *((_BYTE *)a1 + v7[14]) = *((_BYTE *)a2 + v7[14]);
      *((_BYTE *)a1 + v7[15]) = *((_BYTE *)a2 + v7[15]);
      v38 = v7[16];
      v39 = (uint64_t *)((char *)a1 + v38);
      v40 = (uint64_t *)((char *)a2 + v38);
      v41 = v40[1];
      *v39 = *v40;
      v39[1] = v41;
      v42 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *, __n128))(v8 + 56);
      swift_bridgeObjectRetain(v37);
      v43 = swift_bridgeObjectRetain(v41);
      v42(a1, 0, 1, v7, v43);
    }
    v44 = *(int *)(a3 + 20);
    v45 = *(int *)(a3 + 24);
    v46 = (uint64_t *)((char *)a1 + v44);
    v47 = (uint64_t *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = (uint64_t *)((char *)a1 + v45);
    v50 = (uint64_t *)((char *)a2 + v45);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v51);
  }
  return a1;
}

double sub_132D44(uint64_t a1, uint64_t a2)
{
  int *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  v4 = (int *)type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    v5 = *(unsigned __int8 *)(a1 + 32);
    if (v5 != 255)
      sub_108270(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v5);
    v6 = *(unsigned __int8 *)(a1 + 64);
    if (v6 != 255)
      sub_27FA8(*(id *)(a1 + 56), v6);
    v7 = *(unsigned __int8 *)(a1 + 80);
    if (v7 != 255)
      sub_27FA8(*(id *)(a1 + 72), v7);
    v8 = *(unsigned __int8 *)(a1 + 96);
    if (v8 != 255)
      sub_27FA8(*(id *)(a1 + 88), v8);
    v9 = *(unsigned __int8 *)(a1 + 112);
    if (v9 != 255)
      sub_27FA8(*(id *)(a1 + 104), v9);
    v10 = *(unsigned __int8 *)(a1 + 128);
    if (v10 != 255)
      sub_27FA8(*(id *)(a1 + 120), v10);
    v11 = a1 + v4[11];
    v12 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[16] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_132E74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  int v14;
  id v15;
  id *v16;
  int v17;
  id v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  id *v25;
  int v26;
  id v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  void (*v40)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;

  v6 = (int *)type metadata accessor for ArtworkModel(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain(v9);
    if (v10 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v11 = a2[2];
      v12 = a2[3];
      sub_108110(v11, v12, v10);
      a1[2] = v11;
      a1[3] = v12;
      *((_BYTE *)a1 + 32) = v10;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    v13 = (id *)(a2 + 7);
    v14 = *((unsigned __int8 *)a2 + 64);
    if (v14 == 255)
    {
      a1[7] = *v13;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v15 = *v13;
      sub_27F80(*v13, *((_BYTE *)a2 + 64));
      a1[7] = v15;
      *((_BYTE *)a1 + 64) = v14;
    }
    v16 = (id *)(a2 + 9);
    v17 = *((unsigned __int8 *)a2 + 80);
    if (v17 == 255)
    {
      a1[9] = *v16;
      *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v18 = *v16;
      sub_27F80(*v16, *((_BYTE *)a2 + 80));
      a1[9] = v18;
      *((_BYTE *)a1 + 80) = v17;
    }
    v19 = (id *)(a2 + 11);
    v20 = *((unsigned __int8 *)a2 + 96);
    if (v20 == 255)
    {
      a1[11] = *v19;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v21 = *v19;
      sub_27F80(*v19, *((_BYTE *)a2 + 96));
      a1[11] = v21;
      *((_BYTE *)a1 + 96) = v20;
    }
    v22 = (id *)(a2 + 13);
    v23 = *((unsigned __int8 *)a2 + 112);
    if (v23 == 255)
    {
      a1[13] = *v22;
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v24 = *v22;
      sub_27F80(*v22, *((_BYTE *)a2 + 112));
      a1[13] = v24;
      *((_BYTE *)a1 + 112) = v23;
    }
    v25 = (id *)(a2 + 15);
    v26 = *((unsigned __int8 *)a2 + 128);
    if (v26 == 255)
    {
      a1[15] = *v25;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v27 = *v25;
      sub_27F80(*v25, *((_BYTE *)a2 + 128));
      a1[15] = v27;
      *((_BYTE *)a1 + 128) = v26;
    }
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v28 = v6[11];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = v6[12];
    v33 = (_QWORD *)((char *)a1 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
    *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v36 = v6[16];
    v37 = (_QWORD *)((char *)a1 + v36);
    v38 = (_QWORD *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v7 + 56);
    swift_bridgeObjectRetain(v35);
    v41 = swift_bridgeObjectRetain(v39);
    v40(a1, 0, 1, v6, v41);
  }
  v42 = *(int *)(a3 + 20);
  v43 = *(int *)(a3 + 24);
  v44 = (_QWORD *)((char *)a1 + v42);
  v45 = (_QWORD *)((char *)a2 + v42);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = (_QWORD *)((char *)a1 + v43);
  v48 = (_QWORD *)((char *)a2 + v43);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v49);
  return a1;
}

uint64_t sub_13316C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  id *v27;
  int v28;
  id v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD, uint64_t, int *, __n128);
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  __int128 v64;
  id *v65;
  id *v66;
  int v67;
  id v68;
  void *v69;
  char v70;
  id v71;
  char v72;
  id v73;
  id *v74;
  id *v75;
  int v76;
  id v77;
  void *v78;
  char v79;
  id v80;
  char v81;
  id v82;
  id *v83;
  id *v84;
  int v85;
  id v86;
  void *v87;
  char v88;
  id v89;
  char v90;
  id v91;
  id *v92;
  id *v93;
  int v94;
  id v95;
  void *v96;
  char v97;
  id v98;
  char v99;
  id v100;
  id *v101;
  id *v102;
  int v103;
  id v104;
  void *v105;
  char v106;
  id v107;
  char v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;

  v6 = (int *)type metadata accessor for ArtworkModel(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v11 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v11;
      v12 = *(unsigned __int8 *)(a2 + 32);
      swift_bridgeObjectRetain(v11);
      if (v12 == 255)
      {
        v26 = *(_OWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = v26;
      }
      else
      {
        v13 = *(_QWORD *)(a2 + 16);
        v14 = *(_QWORD *)(a2 + 24);
        sub_108110(v13, v14, v12);
        *(_QWORD *)(a1 + 16) = v13;
        *(_QWORD *)(a1 + 24) = v14;
        *(_BYTE *)(a1 + 32) = v12;
      }
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v27 = (id *)(a2 + 56);
      v28 = *(unsigned __int8 *)(a2 + 64);
      if (v28 == 255)
      {
        v30 = *v27;
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        *(_QWORD *)(a1 + 56) = v30;
      }
      else
      {
        v29 = *v27;
        sub_27F80(*v27, *(_BYTE *)(a2 + 64));
        *(_QWORD *)(a1 + 56) = v29;
        *(_BYTE *)(a1 + 64) = v28;
      }
      v31 = (id *)(a2 + 72);
      v32 = *(unsigned __int8 *)(a2 + 80);
      if (v32 == 255)
      {
        v34 = *v31;
        *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
        *(_QWORD *)(a1 + 72) = v34;
      }
      else
      {
        v33 = *v31;
        sub_27F80(*v31, *(_BYTE *)(a2 + 80));
        *(_QWORD *)(a1 + 72) = v33;
        *(_BYTE *)(a1 + 80) = v32;
      }
      v35 = (id *)(a2 + 88);
      v36 = *(unsigned __int8 *)(a2 + 96);
      if (v36 == 255)
      {
        v38 = *v35;
        *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
        *(_QWORD *)(a1 + 88) = v38;
      }
      else
      {
        v37 = *v35;
        sub_27F80(*v35, *(_BYTE *)(a2 + 96));
        *(_QWORD *)(a1 + 88) = v37;
        *(_BYTE *)(a1 + 96) = v36;
      }
      v39 = (id *)(a2 + 104);
      v40 = *(unsigned __int8 *)(a2 + 112);
      if (v40 == 255)
      {
        v42 = *v39;
        *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
        *(_QWORD *)(a1 + 104) = v42;
      }
      else
      {
        v41 = *v39;
        sub_27F80(*v39, *(_BYTE *)(a2 + 112));
        *(_QWORD *)(a1 + 104) = v41;
        *(_BYTE *)(a1 + 112) = v40;
      }
      v43 = (id *)(a2 + 120);
      v44 = *(unsigned __int8 *)(a2 + 128);
      if (v44 == 255)
      {
        v46 = *v43;
        *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
        *(_QWORD *)(a1 + 120) = v46;
      }
      else
      {
        v45 = *v43;
        sub_27F80(*v43, *(_BYTE *)(a2 + 128));
        *(_QWORD *)(a1 + 120) = v45;
        *(_BYTE *)(a1 + 128) = v44;
      }
      *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
      v47 = v6[11];
      v48 = a1 + v47;
      v49 = a2 + v47;
      v50 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      v51 = v6[12];
      v52 = (_QWORD *)(a1 + v51);
      v53 = (_QWORD *)(a2 + v51);
      *v52 = *v53;
      v54 = v53[1];
      v52[1] = v54;
      *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
      *(_BYTE *)(a1 + v6[14]) = *(_BYTE *)(a2 + v6[14]);
      *(_BYTE *)(a1 + v6[15]) = *(_BYTE *)(a2 + v6[15]);
      v55 = v6[16];
      v56 = (_QWORD *)(a1 + v55);
      v57 = (_QWORD *)(a2 + v55);
      *v56 = *v57;
      v58 = v57[1];
      v56[1] = v58;
      v59 = *(void (**)(uint64_t, _QWORD, uint64_t, int *, __n128))(v7 + 56);
      swift_bridgeObjectRetain(v54);
      v60 = swift_bridgeObjectRetain(v58);
      v59(a1, 0, 1, v6, v60);
      goto LABEL_68;
    }
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_68;
  }
  if (v10)
  {
    sub_239C0(a1);
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v16 = *(_QWORD *)(a2 + 8);
  v17 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = (__int128 *)(a1 + 16);
  v19 = (__int128 *)(a2 + 16);
  v20 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v20 == 255)
    {
      v64 = *v19;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *v18 = v64;
    }
    else
    {
      v61 = *(_QWORD *)(a2 + 16);
      v62 = *(_QWORD *)(a2 + 24);
      sub_108110(v61, v62, *(_BYTE *)(a2 + 32));
      *(_QWORD *)(a1 + 16) = v61;
      *(_QWORD *)(a1 + 24) = v62;
      *(_BYTE *)(a1 + 32) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_108DD8(a1 + 16);
    v63 = *(_BYTE *)(a2 + 32);
    *v18 = *v19;
    *(_BYTE *)(a1 + 32) = v63;
  }
  else
  {
    v21 = *(_QWORD *)(a2 + 16);
    v22 = *(_QWORD *)(a2 + 24);
    sub_108110(v21, v22, *(_BYTE *)(a2 + 32));
    v23 = *(_QWORD *)(a1 + 16);
    v24 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v21;
    *(_QWORD *)(a1 + 24) = v22;
    v25 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v20;
    sub_108270(v23, v24, v25);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v65 = (id *)(a1 + 56);
  v66 = (id *)(a2 + 56);
  v67 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v67 == 255)
    {
      v73 = *v66;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *v65 = v73;
    }
    else
    {
      v71 = *v66;
      sub_27F80(*v66, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v71;
      *(_BYTE *)(a1 + 64) = v67;
    }
  }
  else if (v67 == 255)
  {
    sub_108E0C(a1 + 56);
    v72 = *(_BYTE *)(a2 + 64);
    *v65 = *v66;
    *(_BYTE *)(a1 + 64) = v72;
  }
  else
  {
    v68 = *v66;
    sub_27F80(*v66, *(_BYTE *)(a2 + 64));
    v69 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v68;
    v70 = *(_BYTE *)(a1 + 64);
    *(_BYTE *)(a1 + 64) = v67;
    sub_27FA8(v69, v70);
  }
  v74 = (id *)(a1 + 72);
  v75 = (id *)(a2 + 72);
  v76 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v76 == 255)
    {
      v82 = *v75;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *v74 = v82;
    }
    else
    {
      v80 = *v75;
      sub_27F80(*v75, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v80;
      *(_BYTE *)(a1 + 80) = v76;
    }
  }
  else if (v76 == 255)
  {
    sub_108E0C(a1 + 72);
    v81 = *(_BYTE *)(a2 + 80);
    *v74 = *v75;
    *(_BYTE *)(a1 + 80) = v81;
  }
  else
  {
    v77 = *v75;
    sub_27F80(*v75, *(_BYTE *)(a2 + 80));
    v78 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = v77;
    v79 = *(_BYTE *)(a1 + 80);
    *(_BYTE *)(a1 + 80) = v76;
    sub_27FA8(v78, v79);
  }
  v83 = (id *)(a1 + 88);
  v84 = (id *)(a2 + 88);
  v85 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v85 == 255)
    {
      v91 = *v84;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *v83 = v91;
    }
    else
    {
      v89 = *v84;
      sub_27F80(*v84, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v89;
      *(_BYTE *)(a1 + 96) = v85;
    }
  }
  else if (v85 == 255)
  {
    sub_108E0C(a1 + 88);
    v90 = *(_BYTE *)(a2 + 96);
    *v83 = *v84;
    *(_BYTE *)(a1 + 96) = v90;
  }
  else
  {
    v86 = *v84;
    sub_27F80(*v84, *(_BYTE *)(a2 + 96));
    v87 = *(void **)(a1 + 88);
    *(_QWORD *)(a1 + 88) = v86;
    v88 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v85;
    sub_27FA8(v87, v88);
  }
  v92 = (id *)(a1 + 104);
  v93 = (id *)(a2 + 104);
  v94 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v94 == 255)
    {
      v100 = *v93;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *v92 = v100;
    }
    else
    {
      v98 = *v93;
      sub_27F80(*v93, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v98;
      *(_BYTE *)(a1 + 112) = v94;
    }
  }
  else if (v94 == 255)
  {
    sub_108E0C(a1 + 104);
    v99 = *(_BYTE *)(a2 + 112);
    *v92 = *v93;
    *(_BYTE *)(a1 + 112) = v99;
  }
  else
  {
    v95 = *v93;
    sub_27F80(*v93, *(_BYTE *)(a2 + 112));
    v96 = *(void **)(a1 + 104);
    *(_QWORD *)(a1 + 104) = v95;
    v97 = *(_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 112) = v94;
    sub_27FA8(v96, v97);
  }
  v101 = (id *)(a1 + 120);
  v102 = (id *)(a2 + 120);
  v103 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v103 == 255)
    {
      v109 = *v102;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *v101 = v109;
    }
    else
    {
      v107 = *v102;
      sub_27F80(*v102, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v107;
      *(_BYTE *)(a1 + 128) = v103;
    }
  }
  else if (v103 == 255)
  {
    sub_108E0C(a1 + 120);
    v108 = *(_BYTE *)(a2 + 128);
    *v101 = *v102;
    *(_BYTE *)(a1 + 128) = v108;
  }
  else
  {
    v104 = *v102;
    sub_27F80(*v102, *(_BYTE *)(a2 + 128));
    v105 = *(void **)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v104;
    v106 = *(_BYTE *)(a1 + 128);
    *(_BYTE *)(a1 + 128) = v103;
    sub_27FA8(v105, v106);
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v110 = v6[11];
  v111 = a1 + v110;
  v112 = a2 + v110;
  v113 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 24))(v111, v112, v113);
  v114 = v6[12];
  v115 = (_QWORD *)(a1 + v114);
  v116 = (_QWORD *)(a2 + v114);
  *v115 = *v116;
  v117 = v116[1];
  v118 = v115[1];
  v115[1] = v117;
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRelease(v118);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  *(_BYTE *)(a1 + v6[14]) = *(_BYTE *)(a2 + v6[14]);
  *(_BYTE *)(a1 + v6[15]) = *(_BYTE *)(a2 + v6[15]);
  v119 = v6[16];
  v120 = (_QWORD *)(a1 + v119);
  v121 = (_QWORD *)(a2 + v119);
  *v120 = *v121;
  v122 = v121[1];
  v123 = v120[1];
  v120[1] = v122;
  swift_bridgeObjectRetain(v122);
  swift_bridgeObjectRelease(v123);
LABEL_68:
  v124 = *(int *)(a3 + 20);
  v125 = (_QWORD *)(a1 + v124);
  v126 = (_QWORD *)(a2 + v124);
  *v125 = *v126;
  v127 = v126[1];
  v128 = v125[1];
  v125[1] = v127;
  swift_bridgeObjectRetain(v127);
  swift_bridgeObjectRelease(v128);
  v129 = *(int *)(a3 + 24);
  v130 = (_QWORD *)(a1 + v129);
  v131 = (_QWORD *)(a2 + v129);
  *v130 = *v131;
  v132 = v131[1];
  v133 = v130[1];
  v130[1] = v132;
  swift_bridgeObjectRetain(v132);
  swift_bridgeObjectRelease(v133);
  return a1;
}

_OWORD *sub_13394C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = (int *)type metadata accessor for ArtworkModel(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
    *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v10 = v6[11];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
    *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
    *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    *(_OWORD *)((char *)a1 + v6[16]) = *(_OWORD *)((char *)a2 + v6[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  return a1;
}

uint64_t sub_133ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int v38;
  int v39;
  void *v40;
  _QWORD *v41;
  int v42;
  int v43;
  void *v44;
  _QWORD *v45;
  int v46;
  int v47;
  void *v48;
  _QWORD *v49;
  int v50;
  int v51;
  void *v52;
  _QWORD *v53;
  int v54;
  int v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v6 = (int *)type metadata accessor for ArtworkModel(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_239C0(a1);
      goto LABEL_6;
    }
    v30 = *(_QWORD *)(a2 + 8);
    v31 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v30;
    swift_bridgeObjectRelease(v31);
    v32 = (_OWORD *)(a2 + 16);
    v33 = *(unsigned __int8 *)(a1 + 32);
    if (v33 != 255)
    {
      v34 = *(unsigned __int8 *)(a2 + 32);
      if (v34 != 255)
      {
        v35 = *(_QWORD *)(a1 + 16);
        v36 = *(_QWORD *)(a1 + 24);
        *(_OWORD *)(a1 + 16) = *v32;
        *(_BYTE *)(a1 + 32) = v34;
        sub_108270(v35, v36, v33);
        goto LABEL_13;
      }
      sub_108DD8(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *v32;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_13:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v37 = (_QWORD *)(a2 + 56);
    v38 = *(unsigned __int8 *)(a1 + 64);
    if (v38 != 255)
    {
      v39 = *(unsigned __int8 *)(a2 + 64);
      if (v39 != 255)
      {
        v40 = *(void **)(a1 + 56);
        *(_QWORD *)(a1 + 56) = *v37;
        *(_BYTE *)(a1 + 64) = v39;
        sub_27FA8(v40, v38);
        goto LABEL_18;
      }
      sub_108E0C(a1 + 56);
    }
    *(_QWORD *)(a1 + 56) = *v37;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
LABEL_18:
    v41 = (_QWORD *)(a2 + 72);
    v42 = *(unsigned __int8 *)(a1 + 80);
    if (v42 != 255)
    {
      v43 = *(unsigned __int8 *)(a2 + 80);
      if (v43 != 255)
      {
        v44 = *(void **)(a1 + 72);
        *(_QWORD *)(a1 + 72) = *v41;
        *(_BYTE *)(a1 + 80) = v43;
        sub_27FA8(v44, v42);
        goto LABEL_23;
      }
      sub_108E0C(a1 + 72);
    }
    *(_QWORD *)(a1 + 72) = *v41;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
LABEL_23:
    v45 = (_QWORD *)(a2 + 88);
    v46 = *(unsigned __int8 *)(a1 + 96);
    if (v46 != 255)
    {
      v47 = *(unsigned __int8 *)(a2 + 96);
      if (v47 != 255)
      {
        v48 = *(void **)(a1 + 88);
        *(_QWORD *)(a1 + 88) = *v45;
        *(_BYTE *)(a1 + 96) = v47;
        sub_27FA8(v48, v46);
        goto LABEL_28;
      }
      sub_108E0C(a1 + 88);
    }
    *(_QWORD *)(a1 + 88) = *v45;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
LABEL_28:
    v49 = (_QWORD *)(a2 + 104);
    v50 = *(unsigned __int8 *)(a1 + 112);
    if (v50 != 255)
    {
      v51 = *(unsigned __int8 *)(a2 + 112);
      if (v51 != 255)
      {
        v52 = *(void **)(a1 + 104);
        *(_QWORD *)(a1 + 104) = *v49;
        *(_BYTE *)(a1 + 112) = v51;
        sub_27FA8(v52, v50);
        goto LABEL_33;
      }
      sub_108E0C(a1 + 104);
    }
    *(_QWORD *)(a1 + 104) = *v49;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
LABEL_33:
    v53 = (_QWORD *)(a2 + 120);
    v54 = *(unsigned __int8 *)(a1 + 128);
    if (v54 != 255)
    {
      v55 = *(unsigned __int8 *)(a2 + 128);
      if (v55 != 255)
      {
        v56 = *(void **)(a1 + 120);
        *(_QWORD *)(a1 + 120) = *v53;
        *(_BYTE *)(a1 + 128) = v55;
        sub_27FA8(v56, v54);
LABEL_38:
        *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
        v57 = v6[11];
        v58 = a1 + v57;
        v59 = a2 + v57;
        v60 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 40))(v58, v59, v60);
        v61 = v6[12];
        v62 = (_QWORD *)(a1 + v61);
        v63 = (uint64_t *)(a2 + v61);
        v65 = *v63;
        v64 = v63[1];
        v66 = v62[1];
        *v62 = v65;
        v62[1] = v64;
        swift_bridgeObjectRelease(v66);
        *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
        *(_BYTE *)(a1 + v6[14]) = *(_BYTE *)(a2 + v6[14]);
        *(_BYTE *)(a1 + v6[15]) = *(_BYTE *)(a2 + v6[15]);
        v67 = v6[16];
        v68 = (_QWORD *)(a1 + v67);
        v69 = (uint64_t *)(a2 + v67);
        v71 = *v69;
        v70 = v69[1];
        v72 = v68[1];
        *v68 = v71;
        v68[1] = v70;
        swift_bridgeObjectRelease(v72);
        goto LABEL_7;
      }
      sub_108E0C(a1 + 120);
    }
    *(_QWORD *)(a1 + 120) = *v53;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    goto LABEL_38;
  }
  if (v10)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v12 = v6[11];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  *(_BYTE *)(a1 + v6[14]) = *(_BYTE *)(a2 + v6[14]);
  *(_BYTE *)(a1 + v6[15]) = *(_BYTE *)(a2 + v6[15]);
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v17 = *(int *)(a3 + 20);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  v23 = *(int *)(a3 + 24);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  return a1;
}

uint64_t sub_133F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_133F0C);
}

uint64_t sub_133F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_133F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_133F9C);
}

uint64_t sub_133F9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ChannelSearchResultView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D7EF8;
  if (!qword_3D7EF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChannelSearchResultView);
  return result;
}

void sub_134058(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_27C58(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_2F8908;
    v4[2] = &unk_2F8908;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_1340CC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32DF40, 1);
}

uint64_t sub_1340DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v39[4];
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  char v55;
  unsigned __int8 v56;
  char v57;
  unsigned __int8 v58;
  char v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;

  v51 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v3);
  v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v39[-v7];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7F40);
  __chkstk_darwin(v9);
  v54 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v39[-v12];
  sub_D184(a1, (uint64_t)v8, &qword_3D0A58);
  sub_D184((uint64_t)v8, (uint64_t)v5, &qword_3D0A58);
  if (qword_3CFCB0 != -1)
    swift_once(&qword_3CFCB0, sub_28E658);
  v14 = xmmword_3DF9D0;
  sub_D1D4((uint64_t)v8, &qword_3D0A58);
  v15 = sub_FE044((uint64_t)v5, (uint64_t)v13);
  *(_OWORD *)&v13[*(int *)(v9 + 36)] = v14;
  v49 = static HorizontalAlignment.leading.getter(v15);
  sub_13441C(a1, (uint64_t)&v69);
  v16 = v70;
  v41 = v70;
  v17 = v71;
  v47 = v72;
  v48 = v69;
  v18 = (uint64_t)v13;
  v50 = v13;
  v19 = v73;
  v20 = v74;
  v21 = v75;
  v22 = v76;
  v45 = v79;
  v46 = v77;
  v52 = v81;
  v53 = v80;
  v40 = v82;
  v59 = 1;
  v58 = v71;
  v42 = v71;
  v43 = v75;
  v57 = v75;
  v56 = v78;
  v55 = v82;
  v23 = v78;
  v44 = v78;
  v24 = v54;
  sub_D184(v18, (uint64_t)v54, &qword_3D7F40);
  v25 = (uint64_t)v24;
  v26 = v51;
  sub_D184(v25, v51, &qword_3D7F40);
  v27 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D7F48) + 48);
  v28 = v48;
  v29 = v49;
  v60 = (unint64_t)v49;
  LOBYTE(v61) = 1;
  *((_QWORD *)&v61 + 1) = v48;
  *(_QWORD *)&v62 = v16;
  BYTE8(v62) = v17;
  v30 = v47;
  *(_QWORD *)&v63 = v47;
  *((_QWORD *)&v63 + 1) = v19;
  *(_QWORD *)&v64 = v20;
  BYTE8(v64) = v21;
  v31 = v45;
  v32 = v46;
  *(_QWORD *)&v65 = v22;
  *((_QWORD *)&v65 + 1) = v46;
  LOBYTE(v66) = v23;
  *((_QWORD *)&v66 + 1) = v45;
  *(_QWORD *)&v67 = v53;
  *((_QWORD *)&v67 + 1) = v52;
  v33 = v40;
  v68 = v40;
  *(_BYTE *)(v27 + 128) = v40;
  v34 = v61;
  *(_OWORD *)v27 = v60;
  *(_OWORD *)(v27 + 16) = v34;
  v35 = v63;
  *(_OWORD *)(v27 + 32) = v62;
  *(_OWORD *)(v27 + 48) = v35;
  v36 = v67;
  *(_OWORD *)(v27 + 96) = v66;
  *(_OWORD *)(v27 + 112) = v36;
  v37 = v65;
  *(_OWORD *)(v27 + 64) = v64;
  *(_OWORD *)(v27 + 80) = v37;
  sub_1347AC((uint64_t)&v60);
  sub_D1D4((uint64_t)v50, &qword_3D7F40);
  v69 = v29;
  v70 = 0;
  v71 = 1;
  v72 = v28;
  v73 = v41;
  LOBYTE(v74) = v42;
  v75 = v30;
  v76 = v19;
  v77 = v20;
  v78 = v43;
  v79 = v22;
  v80 = v32;
  LOBYTE(v81) = v44;
  v82 = v31;
  v83 = v53;
  v84 = v52;
  v85 = v33;
  sub_134834((uint64_t)&v69);
  return sub_D1D4((uint64_t)v54, &qword_3D7F40);
}

double sub_13441C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  __n128 v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double result;
  double (*v64)(char *, uint64_t, __n128);
  unint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v68 = a1;
  v4 = type metadata accessor for PUITextStyle(0);
  v72 = *(_QWORD *)(v4 - 8);
  v73 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for ChannelSearchResultView(0);
  v7 = (uint64_t *)(a1 + *(int *)(v67 + 20));
  v8 = v7[1];
  v74 = *v7;
  v75 = v8;
  v9 = sub_D254();
  v65 = v9;
  swift_bridgeObjectRetain(v8);
  v10 = Text.init<A>(_:)(&v74, &type metadata for String, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  static PUITextStyle.subhead.getter(v10);
  v17 = Text.puiFont(_:)(v6, v10, v12, v16, v14);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  sub_D170(v10, v12, v16);
  v24 = swift_bridgeObjectRelease(v14);
  v64 = *(double (**)(char *, uint64_t, __n128))(v72 + 8);
  v25.n128_f64[0] = v64(v6, v73, v24);
  v26 = static Color.primary.getter(v25);
  v27 = Text.foregroundColor(_:)(v26, v17, v19, v23, v21);
  v70 = v28;
  v71 = v27;
  LOBYTE(v16) = v29;
  v72 = v30;
  swift_release(v26);
  v69 = v16 & 1;
  sub_D170(v17, v19, v23);
  swift_bridgeObjectRelease(v21);
  KeyPath = swift_getKeyPath(&unk_2F8970);
  v31 = (uint64_t *)(v68 + *(int *)(v67 + 24));
  v32 = v31[1];
  v74 = *v31;
  v75 = v32;
  swift_bridgeObjectRetain(v32);
  v33 = Text.init<A>(_:)(&v74, &type metadata for String, v65);
  v35 = v34;
  v37 = v36;
  v39 = v38 & 1;
  static PUITextStyle.subhead.getter(v33);
  v40 = Text.puiFont(_:)(v6, v33, v35, v39, v37);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  sub_D170(v33, v35, v39);
  v47 = swift_bridgeObjectRelease(v37);
  v48.n128_f64[0] = v64(v6, v73, v47);
  v49 = static Color.secondary.getter(v48);
  v50 = Text.foregroundColor(_:)(v49, v40, v42, v46, v44);
  v52 = v51;
  LOBYTE(v39) = v53;
  v55 = v54;
  swift_release(v49);
  sub_D170(v40, v42, v46);
  swift_bridgeObjectRelease(v44);
  v56 = swift_getKeyPath(&unk_2F8970);
  v57 = v69;
  LOBYTE(v74) = v69;
  v59 = v70;
  v58 = v71;
  *(_QWORD *)a2 = v71;
  *(_QWORD *)(a2 + 8) = v59;
  *(_BYTE *)(a2 + 16) = v57;
  v60 = v72;
  v61 = KeyPath;
  *(_QWORD *)(a2 + 24) = v72;
  *(_QWORD *)(a2 + 32) = v61;
  *(_QWORD *)(a2 + 40) = 2;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v50;
  *(_QWORD *)(a2 + 64) = v52;
  *(_BYTE *)(a2 + 72) = v39 & 1;
  *(_QWORD *)(a2 + 80) = v55;
  *(_QWORD *)(a2 + 88) = v56;
  *(_QWORD *)(a2 + 96) = 1;
  *(_BYTE *)(a2 + 104) = 0;
  v62 = v58;
  sub_D130(v58, v59, v57);
  swift_bridgeObjectRetain(v60);
  swift_retain(v61);
  sub_D130(v50, v52, v39 & 1);
  swift_bridgeObjectRetain(v55);
  swift_retain(v56);
  sub_D170(v50, v52, v39 & 1);
  swift_release(v56);
  swift_bridgeObjectRelease(v55);
  sub_D170(v62, v59, v74);
  swift_release(v61);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v60).n128_u64[0];
  return result;
}

uint64_t sub_134764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0x4024000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7F38);
  return sub_1340DC(v2, a2 + *(int *)(v4 + 44));
}

uint64_t sub_1347AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_BYTE *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  sub_D130(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  sub_D130(v4, v5, v6);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t sub_134834(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_BYTE *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  sub_D170(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  sub_D170(v4, v5, v6);
  swift_release(v8);
  swift_bridgeObjectRelease(v7);
  return a1;
}

unint64_t sub_1348C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7F50;
  if (!qword_3D7F50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D7F58);
    result = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3D7F50);
  }
  return result;
}

void sub_134914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BYTE *v18;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_objectGraph);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_objectGraph) = a1;
  swift_retain(a1);
  swift_release(v4);
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_embeddedView;
  v6 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_embeddedView);
  v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_objectGraph];
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_objectGraph] = a1;
  v8 = v6;
  swift_release(v7);
  swift_retain(a1);
  v9 = sub_1A8950();
  sub_262730(a1);

  v18 = *(id *)(v2 + v5);
  v10 = ModernShelf.ItemPresentation.itemKind.getter(v18);
  v11 = ModernShelf.ItemKind.rawValue.getter(v10);
  v13 = v12;
  v15 = ModernShelf.ItemKind.rawValue.getter(60);
  v16 = v14;
  if (v11 == v15 && v13 == v14)
  {
    v17 = 1;
    v16 = v13;
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v15, v14, 0);
  }
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v16);
  v18[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isPresentedInSearch] = v17 & 1;

}

char *sub_134A4C(double a1, double a2, double a3, double a4)
{
  char *v4;
  void *v5;
  char *v10;
  uint64_t ObjectType;
  __int16 v12;
  id v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  objc_super v20;

  v5 = v4;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionButton] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_itemIsDeletable] = 0;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionUITriggered];
  *(_QWORD *)v10 = UINavigationBar.overrideBackButtonStyle.setter;
  *((_QWORD *)v10 + 1) = 0;
  ObjectType = swift_getObjectType();
  v12 = (*(uint64_t (**)(void))(ObjectType + 160))();
  v13 = objc_allocWithZone((Class)type metadata accessor for LargeLockupView());
  v14 = v5;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_embeddedView] = sub_1A9198(v12 & 0x101);

  v20.receiver = v14;
  v20.super_class = (Class)type metadata accessor for LargeLockupCollectionViewCell();
  v15 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v16 = objc_msgSend(v15, "contentView");
  objc_msgSend(v16, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v17 = objc_msgSend(v15, "contentView");
  v18 = *(id *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_embeddedView];
  objc_msgSend(v17, "addSubview:", v18);

  return v15;
}

id sub_134D5C(uint64_t a1, double a2, double a3)
{
  char *v3;
  id v7;
  void *v8;
  double v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  objc_super v26;
  CGPoint v27;
  CGRect v28;

  v26.receiver = v3;
  v26.super_class = (Class)type metadata accessor for LargeLockupCollectionViewCell();
  v7 = objc_msgSendSuper2(&v26, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
    return v7;
  if ((objc_msgSend(v3, "clipsToBounds") & 1) != 0)
    return 0;
  if ((objc_msgSend(v3, "isHidden") & 1) != 0)
    return 0;
  objc_msgSend(v3, "alpha");
  if (v9 <= 0.0)
    return 0;
  v8 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionButton];
  if (v8)
  {
    v10 = v8;
    objc_msgSend(v3, "convertPoint:toCoordinateSpace:", v10, a2, a3);
    v12 = v11;
    v14 = v13;
    objc_msgSend(v10, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;
    objc_msgSend(v10, "hitRectInsets");
    v28.origin.x = UIEdgeInsetsInsetRect(v16, v18, v20, v22, v23, v24);
    v27.x = v12;
    v27.y = v14;
    if (!CGRectContainsPoint(v28, v27))
    {

      return 0;
    }
  }
  return v8;
}

void sub_134F34()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  double v7;
  double v8;
  id v9;
  void (*v10)();
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  _QWORD aBlock[5];
  uint64_t v20;
  char v21[24];

  v1 = v0;
  v2 = type metadata accessor for UICellConfigurationState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_itemIsDeletable];
  *(_QWORD *)&v7 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_itemIsDeletable], v21, 0, 0).n128_u64[0];
  v8 = 0.0;
  if (*v6 == 1
    && (v9 = objc_msgSend(v1, "_bridgedConfigurationState", v7),
        static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v9),
        v9,
        LOBYTE(v9) = UICellConfigurationState.isEditing.getter(),
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2),
        (v9 & 1) != 0)
    && (v8 = 1.0,
        !*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionButton]))
  {
    v13 = objc_opt_self(UIView);
    v11 = swift_allocObject(&unk_384248, 24, 7);
    *(_QWORD *)(v11 + 16) = v1;
    v14 = swift_allocObject(&unk_384270, 32, 7);
    v10 = sub_135E40;
    *(_QWORD *)(v14 + 16) = sub_135E40;
    *(_QWORD *)(v14 + 24) = v11;
    aBlock[4] = sub_101EC;
    v20 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_920D4;
    aBlock[3] = &block_descriptor_25;
    v15 = _Block_copy(aBlock);
    v16 = v20;
    v17 = v1;
    swift_retain(v14);
    objc_msgSend((id)v13, "performWithoutAnimation:", v15, swift_release(v16).n128_f64[0]);
    _Block_release(v15);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v14, "", 141, 127, 44, 1);
    swift_release(v14);
    if ((v13 & 1) != 0)
    {
      __break(1u);
      return;
    }
  }
  else
  {
    v10 = 0;
    v11 = 0;
  }
  v12 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionButton];
  if (v12)
    objc_msgSend(v12, "setAlpha:", v8);
  sub_1D618((uint64_t)v10, v11);
}

void sub_135164(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  id v19;
  id v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  void (*v26)(char *, uint64_t);
  id v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;

  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - v7;
  v9 = objc_msgSend((id)objc_opt_self(MTMPButton), "easyTouchButtonWithType:", 0);
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "removeImage");
  objc_msgSend(v9, "setImage:forState:", v10, 0);

  v11 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 3);
  objc_msgSend(v9, "setPreferredSymbolConfiguration:forImageInState:", v11, 0);

  objc_msgSend(v9, "sizeToFit");
  objc_msgSend(v9, "bounds");
  v13 = v12;
  v15 = v14;
  v16 = v12 * 0.5;
  v17 = enum case for FloatingPointRoundingRule.toNearestOrEven(_:);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v18(v8, enum case for FloatingPointRoundingRule.toNearestOrEven(_:), v2);
  v19 = v9;
  v20 = objc_msgSend(a1, "traitCollection");
  objc_msgSend(v20, "displayScale");
  v22 = v21;
  if (v21 < COERCE_DOUBLE(1))
  {
    v23 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v23, "scale");
    v22 = v24;

  }
  v25 = CGFloat.rounded(_:toScale:)((uint64_t)v8, v22, v16);

  v26 = *(void (**)(char *, uint64_t))(v3 + 8);
  v26(v8, v2);
  v18(v5, v17, v2);
  v27 = objc_msgSend(a1, "traitCollection");
  objc_msgSend(v27, "displayScale");
  v29 = v28;
  if (v28 < COERCE_DOUBLE(1))
  {
    v30 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v30, "scale");
    v29 = v31;

  }
  v32 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v29, v15 * 0.5);

  v26(v5, v2);
  objc_msgSend(v19, "setFrame:", -v25, -v32, v13, v15);

  sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
  v33 = swift_allocObject(&unk_3842C0, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16, a1);
  v34 = swift_allocObject(&unk_3842E8, 24, 7);
  swift_unknownObjectWeakInit(v34 + 16, v19);
  v35 = swift_allocObject(&unk_384310, 32, 7);
  *(_QWORD *)(v35 + 16) = v34;
  *(_QWORD *)(v35 + 24) = v33;
  v37 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v36, 0, 0, 0, sub_135EC0, v35);
  objc_msgSend(v19, "addAction:forControlEvents:", v37, 0x2000);
  v38 = objc_msgSend(a1, "contentView");
  objc_msgSend(v38, "addSubview:", v19);

  objc_msgSend(v19, "setAlpha:", 0.0);
  objc_msgSend(v19, "layoutIfNeeded");
  v39 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionButton];
  *(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionButton] = v19;

}

void sub_1355BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *);
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = a3 + 16;
    swift_beginAccess(v7, v14, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v7);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionUITriggered;
      swift_beginAccess(v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionUITriggered, v13, 0, 0);
      v12 = *(void (**)(void *))v10;
      v11 = *(_QWORD *)(v10 + 8);
      swift_retain(v11);

      v12(v6);
      swift_release(v11);
    }
    else
    {

    }
  }
}

void sub_135704(char a1)
{
  void *v1;
  id v3;
  void *v4;
  UIColor v5;
  Class isa;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for LargeLockupCollectionViewCell();
  objc_msgSendSuper2(&v7, "setEditing:", a1 & 1);
  v3 = objc_msgSend(v1, "selectedBackgroundView");
  if (v3)
  {
    v4 = v3;
    if ((objc_msgSend(v1, "isEditing") & 1) != 0)
    {
      sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
      v5.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 0.0).super.isa;
    }
    else
    {
      if (qword_3CF058 != -1)
        swift_once(&qword_3CF058, sub_E380);
      v5.super.isa = (Class)(id)qword_3FA8B8;
    }
    isa = v5.super.isa;
    objc_msgSend(v4, "setBackgroundColor:", v5.super.isa);

  }
}

id sub_1358E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LargeLockupCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LargeLockupCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell);
}

id sub_135994()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_embeddedView)
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView));
}

double sub_1359B0()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0
                               + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_embeddedView)
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_preferredArtworkSize);
}

void sub_1359D4(uint64_t *a1)
{
  char *v1;
  uint64_t v2;
  double Width;
  id v4;
  CGRect v5;

  v2 = *a1;
  v4 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_embeddedView];
  objc_msgSend(v1, "frame");
  Width = CGRectGetWidth(v5);
  sub_1A7EF4(v2, Width);

}

uint64_t sub_135A30()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_itemIsDeletable);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_itemIsDeletable, v3, 0, 0);
  return *v1;
}

void sub_135A74(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_itemIsDeletable);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_itemIsDeletable, v4, 1, 0);
  *v3 = a1;
  sub_134F34();
}

void (*sub_135AC8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_itemIsDeletable, a1, 33, 0);
  return sub_135B10;
}

void sub_135B10(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_134F34();
}

uint64_t sub_135B40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionUITriggered);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionUITriggered, v4, 0, 0);
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

uint64_t sub_135B94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionUITriggered);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_release(v6);
}

uint64_t (*sub_135BF0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionUITriggered, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_135C34()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_objectGraph));
}

uint64_t sub_135C4C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2F8B68, a2);
  return TypedShelfUIKitCell.apply(model:)(a1, a2, WitnessTable);
}

uint64_t sub_135C8C(uint64_t a1, void *a2)
{
  uint64_t v2;
  __int16 v4;

  type metadata accessor for LargeLockupView();
  v4 = (*(uint64_t (**)(void))(v2 + 160))();
  return sub_1A81C8(v4 & 0x101, a2);
}

void *sub_135CE0()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_embeddedView)
                + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView);
  v2 = v1;
  return v1;
}

uint64_t sub_135D1C(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2F8B68, a1);
  return static TypedShelfUIKitCell.modelType.getter(a1, WitnessTable);
}

__n128 sub_135D50@<Q0>(uint64_t a1@<X8>)
{
  __n128 result;
  __int128 v2;

  result = *(__n128 *)&UIEdgeInsetsZero.top;
  v2 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)a1 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *(_OWORD *)(a1 + 16) = v2;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

uint64_t sub_135D6C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D7FB0, a2, (uint64_t (*)(uint64_t))type metadata accessor for LargeLockupCollectionViewCell, (uint64_t)&unk_2F89E0);
}

uint64_t sub_135D98(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C80, a2, (uint64_t (*)(uint64_t))type metadata accessor for LargeLockupCollectionViewCell, (uint64_t)&unk_2F8A68);
}

uint64_t sub_135DC4(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D7FB8, a2, (uint64_t (*)(uint64_t))type metadata accessor for LargeLockupCollectionViewCell, (uint64_t)&unk_2F8A40);
}

uint64_t sub_135DF0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D7FC0, a2, (uint64_t (*)(uint64_t))type metadata accessor for LargeLockupCollectionViewCell, (uint64_t)&unk_2F8A98);
}

uint64_t sub_135E1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_135E40()
{
  uint64_t v0;

  sub_135164(*(char **)(v0 + 16));
}

uint64_t sub_135E48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_25(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_135E70()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_135E94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_135EC0(uint64_t a1)
{
  uint64_t v1;

  sub_1355BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_135EC8()
{
  _BYTE *v0;
  _QWORD *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionButton] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_itemIsDeletable] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29LargeLockupCollectionViewCell_deletionUITriggered];
  *v1 = UINavigationBar.overrideBackButtonStyle.setter;
  v1[1] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/LargeLockupCollectionViewCell.swift", 59, 2, 72, 0);
  __break(1u);
}

id sub_135F84()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.6, 0.6, 0.6, 0.1);
  qword_3D7FC8 = (uint64_t)result;
  return result;
}

void sub_135FD0()
{
  qword_3D7FD0 = 0x3FF0000000000000;
}

void sub_135FE0()
{
  qword_3D7FD8 = 0x3FF0000000000000;
}

double sub_135FF0()
{
  double result;

  result = 0.0;
  __asm { FMOV            V1.2D, #12.0 }
  xmmword_3D7FE0 = _Q1;
  *(_OWORD *)&qword_3D7FF0 = xmmword_2F8BC0;
  return result;
}

id sub_13600C()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  void *v3;
  uint64_t v4;
  char v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  double v14;
  void (*v15)(_QWORD, double);
  _QWORD *v16;
  id v17;
  id v18;
  double v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;

  v1 = v0;
  v2 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_textStack];
  objc_msgSend(v2, "setLayoutMargins:", UIEdgeInsets.init(topBottom:sides:)(0.0, 12.0));

  v3 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_titleLabel];
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_style;
  v5 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_style];
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v6 = v3;
  v7 = v6;
  if ((v5 & 1) != 0)
    v8 = static UIFont.callout.getter();
  else
    v8 = static UIFont.subhead.getter(v6);
  v9 = (void *)v8;
  objc_msgSend(v7, "setFont:", v8);

  LOBYTE(v9) = v1[v4];
  v10 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_subtitleLabel];
  if ((v9 & 1) != 0)
    v11 = static UIFont.calloutEmph.getter();
  else
    v11 = static UIFont.subheadEmph.getter();
  v12 = (void *)v11;
  objc_msgSend(v10, "setFont:", v11);

  v13 = *(_QWORD **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_background];
  if (v1[v4])
    v14 = 12.0;
  else
    v14 = 10.0;
  v15 = *(void (**)(_QWORD, double))((char *)&stru_68.reserved2 + (swift_isaMask & *v13));
  v16 = v13;
  v15(0, v14);

  v17 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_chinBackground];
  v18 = objc_msgSend(v1, "contentView");
  objc_msgSend(v18, "bounds");
  v20 = v19;

  if (v1[v4])
    v21 = 68.0;
  else
    v21 = 86.0;
  v22 = objc_msgSend(v1, "contentView");
  objc_msgSend(v22, "bounds");
  v24 = v23;

  if (v1[v4])
    v25 = 68.0;
  else
    v25 = 86.0;
  objc_msgSend(v17, "setFrame:", 0.0, v20 - v21, v24, v25);

  v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_shadowView;
  if (v1[v4])
    v27 = 12.0;
  else
    v27 = 10.0;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_shadowView], "_setContinuousCornerRadius:", v27);
  objc_msgSend(v1, "sendSubviewToBack:", *(_QWORD *)&v1[v26]);
  return objc_msgSend(v1, "setNeedsLayout");
}

char *sub_136288(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  __int128 v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  double left;
  double bottom;
  double right;
  char *v43;
  uint64_t v44;
  id v45;
  id v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  Class isa;
  objc_class *ObjectType;
  Swift::OpaquePointer v84;
  objc_super v85;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_objectGraph] = 0;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_background;
  v11 = type metadata accessor for RoundedCornerView();
  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11));
  v13 = v5;
  v14 = (char *)objc_msgSend(v12, "init");
  if (qword_3CF3F8 != -1)
    swift_once(&qword_3CF3F8, sub_135F84);
  v15 = (void *)qword_3D7FC8;
  v16 = *(void **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3D7FC8;
  v17 = v15;

  sub_A2A14();
  if (qword_3CF400 != -1)
    swift_once(&qword_3CF400, sub_135FD0);
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = qword_3D7FD0;
  sub_A2A14();
  *(_QWORD *)&v5[v10] = v14;
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_shadowView;
  v19 = type metadata accessor for ShadowView();
  v20 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v19)), "init");
  if (qword_3CFA88 != -1)
    swift_once(&qword_3CFA88, sub_1D65CC);
  v21 = (void *)qword_3FCEF8;
  v22 = qword_3FCF10;
  v23 = &v20[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
  v24 = *(void **)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
  v25 = unk_3FCF00;
  *(_QWORD *)v23 = qword_3FCEF8;
  *(_OWORD *)(v23 + 8) = v25;
  *((_QWORD *)v23 + 3) = v22;
  v26 = v21;

  sub_CC328();
  *(_QWORD *)&v13[v18] = v20;
  v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_artworkView;
  v28 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v13[v27] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v28)), "init");
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_chinBackground;
  *(_QWORD *)&v13[v29] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v30 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_textStack;
  v31 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v31, "setAxis:", 1);
  objc_msgSend(v31, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v31, "setSpacing:", 1.17549435e-38);
  objc_msgSend(v31, "setLayoutMarginsRelativeArrangement:", 1);
  *(_QWORD *)&v13[v30] = v31;
  v32 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_titleLabel;
  v33 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v33, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v33, "setTextAlignment:", 1);
  v34 = (void *)objc_opt_self(UIColor);
  v35 = objc_msgSend(v34, "whiteColor");
  objc_msgSend(v33, "setTextColor:", v35);

  *(_QWORD *)&v13[v32] = v33;
  v36 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_subtitleLabel;
  v37 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v37, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v37, "setTextAlignment:", 1);
  v38 = objc_msgSend(v34, "whiteColor");
  objc_msgSend(v37, "setTextColor:", v38);

  *(_QWORD *)&v13[v36] = v37;
  v13[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_style] = 0;

  v85.receiver = v13;
  v85.super_class = ObjectType;
  v39 = objc_msgSendSuper2(&v85, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v43 = (char *)v39;
  objc_msgSend(v43, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v43, "setPreservesSuperviewLayoutMargins:", 0);
  v44 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_background;
  v45 = *(id *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_background];
  v46 = objc_msgSend(v43, "contentView");
  objc_msgSend(v46, "bounds");
  v48 = v47;
  v50 = v49;
  v52 = v51;
  v54 = v53;

  objc_msgSend(v45, "setFrame:", v48, v50, v52, v54);
  objc_msgSend(*(id *)&v43[v44], "setAutoresizingMask:", 18);
  v55 = objc_msgSend(v43, "contentView");
  objc_msgSend(v55, "addSubview:", *(_QWORD *)&v43[v44]);

  objc_msgSend(*(id *)&v43[v44], "addSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_artworkView]);
  v56 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_chinBackground;
  objc_msgSend(*(id *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_chinBackground], "setAutoresizingMask:", 10);
  objc_msgSend(*(id *)&v43[v44], "addSubview:", *(_QWORD *)&v43[v56]);
  v57 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_textStack;
  objc_msgSend(*(id *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_textStack], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v58 = *(void **)&v43[v57];
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v60 = swift_allocObject(v59, 48, 7);
  *(_OWORD *)(v60 + 16) = xmmword_2EFC90;
  v61 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_titleLabel];
  *(_QWORD *)(v60 + 32) = v61;
  v62 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_subtitleLabel];
  *(_QWORD *)(v60 + 40) = v62;
  v84._rawValue = (void *)v60;
  specialized Array._endMutation()(v60);
  v63 = v58;
  v64 = v61;
  v65 = v62;
  UIStackView.addArrangedSubviews(_:)(v84);

  v66 = objc_msgSend(v43, "contentView", swift_bridgeObjectRelease(v84._rawValue).n128_f64[0]);
  objc_msgSend(v66, "addSubview:", *(_QWORD *)&v43[v57]);

  v67 = (void *)objc_opt_self(NSLayoutConstraint);
  v68 = swift_allocObject(v59, 56, 7);
  *(_OWORD *)(v68 + 16) = xmmword_2EFC80;
  v69 = objc_msgSend(v43, "contentView");
  v70 = objc_msgSend(v69, "leadingAnchor");

  v71 = objc_msgSend(*(id *)&v43[v57], "leadingAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v68 + 32) = v72;
  v73 = objc_msgSend(v43, "contentView");
  v74 = objc_msgSend(v73, "trailingAnchor");

  v75 = objc_msgSend(*(id *)&v43[v57], "trailingAnchor");
  v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

  *(_QWORD *)(v68 + 40) = v76;
  v77 = objc_msgSend(*(id *)&v43[v57], "centerYAnchor");
  v78 = objc_msgSend(*(id *)&v43[v56], "centerYAnchor");
  v79 = objc_msgSend(v77, "constraintEqualToAnchor:", v78);

  *(_QWORD *)(v68 + 48) = v79;
  specialized Array._endMutation()(v80);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v67, "activateConstraints:", isa, swift_bridgeObjectRelease(v68).n128_f64[0]);

  objc_msgSend(v43, "addSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_shadowView]);
  sub_13600C();

  return v43;
}

void sub_136AAC()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, "layoutSubviews");
  v1 = objc_msgSend(v0, "contentView");
  objc_msgSend(v1, "bounds");
  v3 = v2;

  v4 = qword_3CF408;
  v5 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_artworkView];
  if (v4 != -1)
    swift_once(&qword_3CF408, sub_135FE0);
  objc_msgSend(v5, "setFrame:", 0.0, 0.0, v3, v3 / *(double *)&qword_3D7FD8);

  v6 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_shadowView];
  v7 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_background];
  v8 = v6;
  objc_msgSend(v7, "bounds");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  if (qword_3CF410 != -1)
    swift_once(&qword_3CF410, sub_135FF0);
  objc_msgSend(v8, "setFrame:", UIEdgeInsetsInsetRect(v10, v12, v14, v16, *(double *)&xmmword_3D7FE0, *((double *)&xmmword_3D7FE0 + 1)));

}

uint64_t type metadata accessor for PowerSwooshCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews15PowerSwooshCell);
}

uint64_t storeEnumTagSinglePayload for PowerSwooshCell.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_136D68 + 4 * byte_2F8BD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_136D9C + 4 * byte_2F8BD0[v4]))();
}

uint64_t sub_136D9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_136DA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x136DACLL);
  return result;
}

uint64_t sub_136DB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x136DC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_136DC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_136DCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PowerSwooshCell.Style()
{
  return &type metadata for PowerSwooshCell.Style;
}

unint64_t sub_136DEC()
{
  unint64_t result;

  result = qword_3D8070;
  if (!qword_3D8070)
  {
    result = swift_getWitnessTable(&unk_2F8C50, &type metadata for PowerSwooshCell.Style);
    atomic_store(result, (unint64_t *)&qword_3D8070);
  }
  return result;
}

void sub_136E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  NSString v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSString v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  int v26;
  __n128 v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_titleLabel;
  v8 = *(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_titleLabel);
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setText:", v9);

  v10 = *(void **)(v2 + v7);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v31 = v11;
  v32 = v12;
  v13 = v10;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3DBE40);
  v15 = sub_2C298();
  if ((Optional<A>.isEmpty.getter(v14, v15) & 1) != 0)
    v16 = 3;
  else
    v16 = 2;
  objc_msgSend(v13, "setNumberOfLines:", v16);

  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_subtitleLabel;
  v18 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_subtitleLabel);
  v19 = v18;
  if (v12)
    v20 = String._bridgeToObjectiveC()();
  else
    v20 = 0;
  objc_msgSend(v18, "setText:", v20);

  v21 = *(void **)(v2 + v17);
  v31 = v11;
  v32 = v12;
  v22 = v21;
  objc_msgSend(v22, "setHidden:", Optional<A>.isEmpty.getter(v14, v15) & 1);

  v23 = type metadata accessor for Link(0);
  sub_DA064(a1 + *(int *)(v23 + 28), (uint64_t)v6);
  v24 = type metadata accessor for ArtworkModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v6, 1, v24) == 1)
  {
    sub_44C28((uint64_t)v6);
  }
  else
  {
    v25 = (void *)*((_QWORD *)v6 + 7);
    v26 = v6[64];
    sub_27F6C(v25, v6[64]);
    sub_239C0((uint64_t)v6);
    if (v26 != 255)
    {
      v28 = (id)Color.color.getter(v25, v27);
      sub_27F94(v25, v26);
      goto LABEL_14;
    }
  }
  if (qword_3CF028 != -1)
    swift_once(&qword_3CF028, sub_E308);
  v28 = (id)qword_3FA888;
LABEL_14:
  v29 = *(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_chinBackground);
  v30 = (void *)UIColor.backgroundColorSuitableForWhiteText.getter();
  objc_msgSend(v29, "setBackgroundColor:", v30);

}

uint64_t sub_1370DC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_objectGraph));
}

uint64_t sub_1370EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_137120(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D8090, v3, (uint64_t (*)(uint64_t))type metadata accessor for PowerSwooshCell, (uint64_t)&unk_2F8DC0);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_137178()
{
  if (qword_3CF408 != -1)
    swift_once(&qword_3CF408, sub_135FE0);
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(*(double *)&qword_3D7FD8, 86.0);
}

uint64_t sub_1371D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D8090, a2, (uint64_t (*)(uint64_t))type metadata accessor for PowerSwooshCell, (uint64_t)&unk_2F8DC0);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

id sub_137208()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_artworkView);
}

double sub_137218()
{
  void *v0;
  double v1;

  objc_msgSend(v0, "bounds");
  return v1;
}

uint64_t sub_137240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for CropCode(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ArtworkCrop.cropCode.getter(v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v1 + 88))(v4, v0) == enum case for CropCode.boundingBox(_:))
    return 2;
  v6 = ArtworkCrop.preferredContentMode.getter();
  v5 = ContentMode.viewContentMode.getter(v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

uint64_t sub_1372F4(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D8078, a2, (uint64_t (*)(uint64_t))type metadata accessor for PowerSwooshCell, (uint64_t)&unk_2F8C98);
}

uint64_t sub_137320(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C98, a2, (uint64_t (*)(uint64_t))type metadata accessor for PowerSwooshCell, (uint64_t)&unk_2F8D20);
}

uint64_t sub_13734C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D8080, a2, (uint64_t (*)(uint64_t))type metadata accessor for PowerSwooshCell, (uint64_t)&unk_2F8CF8);
}

uint64_t sub_137378(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D8088, a2, (uint64_t (*)(uint64_t))type metadata accessor for PowerSwooshCell, (uint64_t)&unk_2F8D50);
}

void sub_1373A4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  __int128 v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_objectGraph] = 0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_background;
  v3 = type metadata accessor for RoundedCornerView();
  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  if (qword_3CF3F8 != -1)
    swift_once(&qword_3CF3F8, sub_135F84);
  v5 = (void *)qword_3D7FC8;
  v6 = *(void **)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3D7FC8;
  v7 = v5;

  sub_A2A14();
  if (qword_3CF400 != -1)
    swift_once(&qword_3CF400, sub_135FD0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = qword_3D7FD0;
  sub_A2A14();
  *(_QWORD *)&v1[v2] = v4;
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_shadowView;
  v9 = type metadata accessor for ShadowView();
  v10 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
  if (qword_3CFA88 != -1)
    swift_once(&qword_3CFA88, sub_1D65CC);
  v11 = (void *)qword_3FCEF8;
  v12 = qword_3FCF10;
  v13 = &v10[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
  v14 = *(void **)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
  v15 = unk_3FCF00;
  *(_QWORD *)v13 = qword_3FCEF8;
  *(_OWORD *)(v13 + 8) = v15;
  *((_QWORD *)v13 + 3) = v12;
  v16 = v11;

  sub_CC328();
  *(_QWORD *)&v1[v8] = v10;
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_artworkView;
  v18 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18)), "init");
  v19 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_chinBackground;
  *(_QWORD *)&v1[v19] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_textStack;
  v21 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v21, "setAxis:", 1);
  objc_msgSend(v21, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v21, "setSpacing:", 1.17549435e-38);
  objc_msgSend(v21, "setLayoutMarginsRelativeArrangement:", 1);
  *(_QWORD *)&v1[v20] = v21;
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_titleLabel;
  v23 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v23, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v23, "setTextAlignment:", 1);
  v24 = (void *)objc_opt_self(UIColor);
  v25 = objc_msgSend(v24, "whiteColor");
  objc_msgSend(v23, "setTextColor:", v25);

  *(_QWORD *)&v1[v22] = v23;
  v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_subtitleLabel;
  v27 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v27, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v27, "setTextAlignment:", 1);
  v28 = objc_msgSend(v24, "whiteColor");
  objc_msgSend(v27, "setTextColor:", v28);

  *(_QWORD *)&v1[v26] = v27;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_style] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/PowerSwooshCell.swift", 45, 2, 210, 0);
  __break(1u);
}

uint64_t type metadata accessor for EpisodeHeaderSubtitle()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle);
}

uint64_t sub_137824()
{
  _QWORD *v0;

  sub_10DBC8((uint64_t)(v0 + 2));
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 8);
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for EpisodeHeaderSubtitlePresenter()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews30EpisodeHeaderSubtitlePresenter);
}

uint64_t storeEnumTagSinglePayload for EpisodeHeaderSubtitleTextStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1378DC + 4 * byte_2F8E05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_137910 + 4 * byte_2F8E00[v4]))();
}

uint64_t sub_137910(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_137918(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x137920);
  return result;
}

uint64_t sub_13792C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x137934);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_137938(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_137940(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeHeaderSubtitleTextStyle()
{
  return &type metadata for EpisodeHeaderSubtitleTextStyle;
}

unint64_t sub_137960()
{
  unint64_t result;

  result = qword_3D8198;
  if (!qword_3D8198)
  {
    result = swift_getWitnessTable(&unk_2F8F20, &type metadata for EpisodeHeaderSubtitleTextStyle);
    atomic_store(result, (unint64_t *)&qword_3D8198);
  }
  return result;
}

void sub_1379A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, __n128);
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[3];

  v2 = v1;
  v4 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v46[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = EpisodeHeader.uuid.getter(v7);
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    v12 = *(_QWORD *)(v2 + 48);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
    v14 = type metadata accessor for BaseObjectGraph(0);
    v15 = swift_retain(v12);
    inject<A, B>(_:from:)(v46, v13, v12, v13, v14, v15);
    v16 = v46[0];
    v17 = type metadata accessor for PlaybackStatusPresenter(0);
    swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
    v18 = sub_276AA0(v10, v11, v16);
    swift_release(v12);
    v19 = *(_QWORD *)(v2 + 40);
    *(_QWORD *)(v2 + 40) = v18;
    swift_release(v19);
    v20 = *(_QWORD *)(v2 + 40);
    if (v20)
    {
      *(_QWORD *)(v20 + 40) = &off_384720;
      v21 = swift_unknownObjectWeakAssign(v20 + 32, v2);
      Strong = swift_unknownObjectWeakLoadStrong(v21);
      if (Strong)
      {
        v23 = Strong;
        v24 = *(_QWORD *)(v20 + 40);
        ObjectType = swift_getObjectType();
        v26 = v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
        swift_beginAccess(v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v46, 0, 0);
        sub_F8BC(v26, (uint64_t)v6);
        v27 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v24 + 8);
        swift_retain(v20);
        v28 = v2;
LABEL_5:
        v29 = swift_retain(v28);
        v27(v6, ObjectType, v24, v29);
        swift_unknownObjectRelease(v23);
        sub_AEEF0((uint64_t)v6);
        swift_release(v20);
        swift_release(v2);
      }
    }
  }
  else
  {
    v30 = EpisodeHeader.adamId.getter(v8);
    if ((v31 & 1) != 0 || (v32 = v30, (AdamID.isEmpty.getter(v30) & 1) != 0))
    {
      v33 = *(_QWORD *)(v2 + 40);
      *(_QWORD *)(v2 + 40) = 0;
      swift_release(v33);
      sub_137CA4(a1, 0, 1);
      return;
    }
    v34 = *(_QWORD *)(v2 + 48);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
    v36 = type metadata accessor for BaseObjectGraph(0);
    v37 = swift_retain(v34);
    inject<A, B>(_:from:)(v46, v35, v34, v35, v36, v37);
    v38 = v46[0];
    v39 = type metadata accessor for PlaybackStatusPresenter(0);
    swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
    v40 = sub_276978(v32, v38);
    swift_release(v34);
    v41 = *(_QWORD *)(v2 + 40);
    *(_QWORD *)(v2 + 40) = v40;
    swift_release(v41);
    v20 = *(_QWORD *)(v2 + 40);
    if (v20)
    {
      *(_QWORD *)(v20 + 40) = &off_384720;
      v42 = swift_unknownObjectWeakAssign(v20 + 32, v2);
      v43 = swift_unknownObjectWeakLoadStrong(v42);
      if (v43)
      {
        v23 = v43;
        v24 = *(_QWORD *)(v20 + 40);
        ObjectType = swift_getObjectType();
        v44 = v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
        swift_beginAccess(v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v46, 0, 0);
        sub_F8BC(v44, (uint64_t)v6);
        v27 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v24 + 8);
        swift_retain(v2);
        v28 = v20;
        goto LABEL_5;
      }
    }
  }
}

uint64_t sub_137CA4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *Strong;
  void *v18;
  char *v19;
  _BOOL8 v20;
  _BYTE *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  NSString v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  _BYTE v48[4];
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _QWORD v56[2];
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;

  v50 = a2;
  v51 = a1;
  v49 = a3 & 1;
  v4 = type metadata accessor for EyebrowBuilder.Style(0);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  __chkstk_darwin(v4);
  v6 = &v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D81A0);
  __chkstk_darwin(v7);
  v9 = &v48[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for EyebrowBuilder.ListContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v48[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for EyebrowBuilder.EpisodeHeaderSubtitleConfiguration(0);
  v55 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v54 = &v48[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = v3 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (Strong)
  {
    v18 = Strong;
    v19 = (char *)objc_msgSend(Strong, "effectiveUserInterfaceLayoutDirection");
    swift_unknownObjectRelease(v18);
    v20 = v19 == (_BYTE *)&dword_0 + 1;
  }
  else
  {
    v20 = 0;
  }
  v21 = v54;
  EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.init(remainingTime:viewIsRTL:)(v50, v49, v20);
  v60 = type metadata accessor for EpisodeHeader(0);
  v61 = sub_1381FC();
  v22 = v51;
  v58 = v51;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v55 + 16))(v13, v21, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for EyebrowBuilder.ListContext.episodeHeaderSubtitle(_:), v10);
  v23 = swift_retain(v22);
  v24 = ExplicitContentPresenter.symbol.getter(v23);
  v26 = v25;
  v28 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration(0, v27);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 1, 1, v28);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v52 + 104))(v6, enum case for EyebrowBuilder.Style.default(_:), v53);
  v29 = type metadata accessor for EyebrowBuilder(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v30 = EyebrowBuilder.init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)(&v58, v13, v6, 1, v24, v26, v9, 1, 0);
  v31 = swift_unknownObjectWeakLoadStrong(v16);
  if (v31)
  {
    v32 = (void *)v31;
    v33 = EyebrowBuilder.caption.getter();
    v35 = v33;
    v36 = v34;
    if ((*((_BYTE *)v32 + OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_style) & 1) != 0)
    {
      if (v34)
      {
        v58 = v33;
        v59 = v34;
        v37 = sub_D254();
        StringProtocol.localizedUppercase.getter(&type metadata for String, v37);
        v39 = v38;
        goto LABEL_11;
      }
    }
    else if (v34)
    {
      swift_bridgeObjectRetain(v34);
      String.capitalizedFirstLetter.getter(v35, v36);
      v39 = v41;
      swift_bridgeObjectRelease(v36);
LABEL_11:
      v42 = String._bridgeToObjectiveC()();
      objc_msgSend(v32, "setText:", v42, swift_bridgeObjectRelease(v39).n128_f64[0]);

      if (v36)
      {
        v58 = v35;
        v59 = v36;
        v57[0] = 47042;
        v57[1] = 0xA200000000000000;
        v56[0] = 44;
        v56[1] = 0xE100000000000000;
        v43 = sub_D254();
        StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v57, v56, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v43, v43, v43);
        v45 = v44;
        swift_bridgeObjectRelease(v36);
        v46 = String._bridgeToObjectiveC()();
        objc_msgSend(v32, "setAccessibilityLabel:", v46, swift_bridgeObjectRelease(v45).n128_f64[0]);
        swift_release(v30);
        swift_unknownObjectRelease(v32);

        return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v55 + 8))(v54, v14, v40);
      }
LABEL_14:
      swift_release(v30);
      v40 = swift_unknownObjectRelease(v32);
      return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v55 + 8))(v54, v14, v40);
    }
    objc_msgSend(v32, "setText:", 0);
    goto LABEL_14;
  }
  v40 = swift_release(v30);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v55 + 8))(v54, v14, v40);
}

void sub_1380C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = (char *)&v8 - v5;
  if (*(_QWORD *)(v1 + 32))
  {
    sub_F8BC(a1, (uint64_t)&v8 - v5);
    v7 = (char *)&loc_13814C + 4 * byte_2F8E0A[swift_getEnumCaseMultiPayload(v6, v3)];
    __asm { BR              X10 }
  }
}

uint64_t sub_1381BC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1381FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D81A8;
  if (!qword_3D81A8)
  {
    v1 = type metadata accessor for EpisodeHeader(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for EpisodeHeader, v1);
    atomic_store(result, (unint64_t *)&qword_3D81A8);
  }
  return result;
}

_QWORD *sub_138244(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7[2];

  v2 = v1;
  v2[3] = 0;
  swift_unknownObjectWeakInit(v2 + 2, 0);
  v2[4] = 0;
  v2[5] = 0;
  v2[6] = a1;
  v4 = type metadata accessor for ExplicitContentPresenter(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v7, v4, v4);
  v2[7] = *(_QWORD *)&v7[0];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B70);
  BaseObjectGraph.inject<A>(_:)(v7, v5, v5);
  sub_1B738(v7, (uint64_t)(v2 + 8));
  return v2;
}

void sub_1382E0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSString v30;
  _QWORD v32[5];

  v2 = v1;
  v4 = type metadata accessor for EyebrowBuilder.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D81A0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EyebrowBuilder(0);
  v32[3] = type metadata accessor for LegacyEpisodeLockup(0);
  v32[4] = sub_138748();
  v32[0] = a1;
  v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_storeDataProvider + 24];
  v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_storeDataProvider + 32];
  __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_storeDataProvider], v11);
  swift_retain(a1);
  v13 = dispatch thunk of StoreDataProvider.explicitSymbol.getter(v11, v12);
  v15 = v14;
  v17 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration(0, v16);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  v18.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for EyebrowBuilder.Style.default(_:), v4);
  v19 = EyebrowBuilder.__allocating_init(episode:style:explicitSymbol:abbreviatedPubDateConfig:hostingViewHasLimitedSpace:)(v32, v7, v13, v15, v10, 0, v18);
  v20 = EyebrowBuilder.caption.getter();
  v22 = v21;
  swift_release(v19);
  if (v22)
  {
    v32[0] = v20;
    v32[1] = v22;
    v23 = sub_D254();
    v20 = StringProtocol.localizedUppercase.getter(&type metadata for String, v23);
    v25 = v24;
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    v25 = 0;
  }
  v26 = (uint64_t *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_caption];
  v27 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_caption + 8];
  *v26 = v20;
  v26[1] = v25;
  v28 = swift_bridgeObjectRelease(v27).n128_u64[0];
  v29 = v26[1];
  if (v29)
  {
    swift_bridgeObjectRetain(v26[1]);
    v30 = String._bridgeToObjectiveC()();
    v28 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  else
  {
    v30 = 0;
  }
  objc_msgSend(v2, "setText:", v30, *(double *)&v28);

}

void sub_1385C8(void *a1)
{
  char *v1;
  char *v3;
  objc_class *v4;
  objc_super v5;
  char v6[24];

  swift_beginAccess(&off_3D3FF8, v6, 0, 0);
  if (off_3D3FF8)
  {
    sub_1D5D4((uint64_t)(off_3D3FF8 + 6), (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_storeDataProvider]);
    v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_caption];
    v4 = (objc_class *)type metadata accessor for EpisodeCaptionLabel();
    *(_QWORD *)v3 = 0;
    *((_QWORD *)v3 + 1) = 0;
    v5.receiver = v1;
    v5.super_class = v4;
    objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  }
  else
  {
    __break(1u);
  }
}

double sub_13868C()
{
  uint64_t v0;
  double result;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_storeDataProvider));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC23ShelfKitCollectionViews19EpisodeCaptionLabel_caption
                                                           + 8)).n128_u64[0];
  return result;
}

id sub_1386BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeCaptionLabel();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EpisodeCaptionLabel()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews19EpisodeCaptionLabel);
}

unint64_t sub_138748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D81E8;
  if (!qword_3D81E8)
  {
    v1 = type metadata accessor for LegacyEpisodeLockup(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for LegacyEpisodeLockup, v1);
    atomic_store(result, (unint64_t *)&qword_3D81E8);
  }
  return result;
}

void destroy for ProgressBarSettings(id *a1)
{

}

uint64_t initializeWithCopy for ProgressBarSettings(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

_QWORD *assignWithCopy for ProgressBarSettings(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  v7 = (void *)a2[3];
  v8 = (void *)a1[3];
  a1[3] = v7;
  v9 = v7;

  v10 = (void *)a2[4];
  v11 = (void *)a1[4];
  a1[4] = v10;
  v12 = v10;

  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  return a1;
}

uint64_t assignWithTake for ProgressBarSettings(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;

  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProgressBarSettings(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProgressBarSettings(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressBarSettings()
{
  return &type metadata for ProgressBarSettings;
}

char *sub_1389C0(char a1)
{
  uint64_t *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  double v6;
  uint64_t v7;
  char *v8;
  double v9;
  void *v10;
  id v11;
  id *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  _BYTE v38[24];
  _BYTE v39[24];
  char v40[24];
  char v41[24];

  v3 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EpisodePlayProgressView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = *v1;
  v5 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight];
  *(_QWORD *)&v6 = swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight], v41, 1, 0).n128_u64[0];
  *(_QWORD *)v5 = v4;
  objc_msgSend(v3, "setNeedsLayout", v6);
  v7 = v1[1];
  v8 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius];
  *(_QWORD *)&v9 = swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius], v40, 1, 0).n128_u64[0];
  *(_QWORD *)v8 = v7;
  objc_msgSend(v3, "setNeedsLayout", v9);
  if ((a1 & 1) != 0)
  {
    v10 = (void *)objc_opt_self(UIColor);
    v11 = objc_msgSend(v10, "whiteColor");
    v12 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor];
    swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor], v39, 1, 0);
    v13 = *v12;
    *v12 = v11;
    v14 = v11;

    v15 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer];
    v16 = objc_msgSend(*v12, "CGColor");
    objc_msgSend(v15, "setFillColor:", v16);

    v17 = objc_msgSend(v10, "clearColor");
    v18 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor];
    swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor], v38, 1, 0);
    v19 = *v18;
    *v18 = v17;
    v20 = v17;

    v21 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_foregroundShapeLayer];
    v22 = objc_msgSend(*v18, "CGColor");
    objc_msgSend(v21, "setFillColor:", v22);

    v23 = objc_msgSend(v10, "clearColor");
  }
  else
  {
    v24 = (void *)v1[2];
    v25 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor];
    swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor], v39, 1, 0);
    v26 = *v25;
    *v25 = v24;
    v27 = v24;

    v28 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer];
    v29 = objc_msgSend(*v25, "CGColor");
    objc_msgSend(v28, "setFillColor:", v29);

    v30 = (void *)v1[3];
    v31 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor];
    swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor], v38, 1, 0);
    v32 = *v31;
    *v31 = v30;
    v33 = v30;

    v34 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_foregroundShapeLayer];
    v35 = objc_msgSend(*v31, "CGColor");
    objc_msgSend(v34, "setFillColor:", v35);

    v23 = (id)v1[4];
  }
  v36 = v23;
  sub_183C30(v23);

  return v3;
}

id sub_138D10()
{
  __int16 v0;

  if (qword_3CF5F0 != -1)
    swift_once(&qword_3CF5F0, sub_141404);
  if (HIBYTE(word_3FC388))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3FAE30 = xmmword_2F1FF0;
  byte_3FAE40 = 1;
  xmmword_3FAE48 = xmmword_3FC330;
  xmmword_3FAE58 = xmmword_3FC340;
  xmmword_3FAE68 = xmmword_3FC350;
  xmmword_3FAE78 = xmmword_3FC360;
  xmmword_3FAE88 = xmmword_3FC370;
  qword_3FAE98 = qword_3FC380;
  word_3FAEA0 = v0 | word_3FC388 | 0x8000;
  return sub_DDA0((void *)xmmword_3FC330, *((uint64_t *)&xmmword_3FC330 + 1), xmmword_3FC340, *((uint64_t *)&xmmword_3FC340 + 1), xmmword_3FC350, SBYTE8(xmmword_3FC350), (void *)xmmword_3FC360, *((uint64_t *)&xmmword_3FC360 + 1), xmmword_3FC370, *((uint64_t *)&xmmword_3FC370 + 1), qword_3FC380, word_3FC388, SHIBYTE(word_3FC388));
}

id sub_138DD8()
{
  __int16 v0;

  if (qword_3CF5F8 != -1)
    swift_once(&qword_3CF5F8, sub_141610);
  if (HIBYTE(word_3FC3E8))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3FAEB0 = xmmword_2F2000;
  byte_3FAEC0 = 1;
  xmmword_3FAEC8 = xmmword_3FC390;
  xmmword_3FAED8 = xmmword_3FC3A0;
  xmmword_3FAEE8 = xmmword_3FC3B0;
  xmmword_3FAEF8 = xmmword_3FC3C0;
  xmmword_3FAF08 = xmmword_3FC3D0;
  qword_3FAF18 = qword_3FC3E0;
  word_3FAF20 = v0 | word_3FC3E8 | 0x8000;
  return sub_DDA0((void *)xmmword_3FC390, *((uint64_t *)&xmmword_3FC390 + 1), xmmword_3FC3A0, *((uint64_t *)&xmmword_3FC3A0 + 1), xmmword_3FC3B0, SBYTE8(xmmword_3FC3B0), (void *)xmmword_3FC3C0, *((uint64_t *)&xmmword_3FC3C0 + 1), xmmword_3FC3D0, *((uint64_t *)&xmmword_3FC3D0 + 1), qword_3FC3E0, word_3FC3E8, SHIBYTE(word_3FC3E8));
}

id sub_138EA0()
{
  __int16 v0;

  if (qword_3CF600 != -1)
    swift_once(&qword_3CF600, sub_14181C);
  if (HIBYTE(word_3FC448))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3FAF30 = xmmword_2F2000;
  byte_3FAF40 = 1;
  xmmword_3FAF48 = xmmword_3FC3F0;
  xmmword_3FAF58 = xmmword_3FC400;
  xmmword_3FAF68 = xmmword_3FC410;
  xmmword_3FAF78 = xmmword_3FC420;
  xmmword_3FAF88 = xmmword_3FC430;
  qword_3FAF98 = qword_3FC440;
  word_3FAFA0 = v0 | word_3FC448 | 0x8000;
  return sub_DDA0((void *)xmmword_3FC3F0, *((uint64_t *)&xmmword_3FC3F0 + 1), xmmword_3FC400, *((uint64_t *)&xmmword_3FC400 + 1), xmmword_3FC410, SBYTE8(xmmword_3FC410), (void *)xmmword_3FC420, *((uint64_t *)&xmmword_3FC420 + 1), xmmword_3FC430, *((uint64_t *)&xmmword_3FC430 + 1), qword_3FC440, word_3FC448, SHIBYTE(word_3FC448));
}

UIFontTextStyle sub_138F68()
{
  xmmword_3FAFB0 = xmmword_2F2010;
  byte_3FAFC0 = 1;
  qword_3FAFC8 = (uint64_t)UIFontTextStyleBody;
  xmmword_3FAFD0 = 0u;
  unk_3FAFE0 = 0u;
  xmmword_3FAFF0 = 0u;
  unk_3FB000 = 0u;
  xmmword_3FB010 = 0u;
  word_3FB020 = 0;
  return UIFontTextStyleBody;
}

double sub_138FAC()
{
  double result;

  result = 2.0;
  xmmword_3FB030 = xmmword_2F8FF0;
  qword_3FB040 = 0;
  unk_3FB048 = 0;
  byte_3FB050 = 0;
  return result;
}

char *sub_138FCC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  CGFloat *v10;
  double left;
  double bottom;
  double right;
  id v14;
  char *v15;
  id v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  char *v22;
  id v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  objc_super v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int16 v48;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_objectGraph] = 0;
  v10 = (CGFloat *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_separatorInset];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *v10 = UIEdgeInsetsZero.top;
  v10[1] = left;
  v10[2] = bottom;
  v10[3] = right;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_isHovering] = 0;
  v14 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0));
  v15 = v4;
  v16 = objc_msgSend(v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_E8C48(1, 5.0);
  v17 = qword_3CF308;
  v18 = (char *)v16;
  if (v17 != -1)
    swift_once(&qword_3CF308, sub_E9BE0);
  v19 = (void *)qword_3FAD18;
  v20 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3FAD18;
  v21 = v19;

  sub_A2A14();
  *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0x3FE0000000000000;
  v22 = v18;
  sub_A2A14();

  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkView] = v22;
  v47 = 0;
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  v41 = 0u;
  v42 = 0u;
  v48 = 513;
  objc_allocWithZone((Class)type metadata accessor for ArtworkContainer(0));
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkContainer] = sub_2633EC(5, v22, (uint64_t *)&v41);
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF5F0 != -1)
    swift_once(&qword_3CF5F0, sub_141404);
  v41 = xmmword_3FC330;
  v42 = xmmword_3FC340;
  v43 = xmmword_3FC350;
  v44 = xmmword_3FC360;
  v45 = xmmword_3FC370;
  *(_QWORD *)&v46 = qword_3FC380;
  WORD4(v46) = word_3FC388;
  sub_DDA0((void *)xmmword_3FC330, *((uint64_t *)&xmmword_3FC330 + 1), xmmword_3FC340, *((uint64_t *)&xmmword_3FC340 + 1), xmmword_3FC350, SBYTE8(xmmword_3FC350), (void *)xmmword_3FC360, *((uint64_t *)&xmmword_3FC360 + 1), xmmword_3FC370, *((uint64_t *)&xmmword_3FC370 + 1), qword_3FC380, word_3FC388, SHIBYTE(word_3FC388));
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_captionLabel] = sub_A96AC((uint64_t)&v41, 1, 0, 1);
  if (qword_3CF5F8 != -1)
    swift_once(&qword_3CF5F8, sub_141610);
  v41 = xmmword_3FC390;
  v42 = xmmword_3FC3A0;
  v43 = xmmword_3FC3B0;
  v44 = xmmword_3FC3C0;
  v45 = xmmword_3FC3D0;
  *(_QWORD *)&v46 = qword_3FC3E0;
  WORD4(v46) = word_3FC3E8;
  sub_DDA0((void *)xmmword_3FC390, *((uint64_t *)&xmmword_3FC390 + 1), xmmword_3FC3A0, *((uint64_t *)&xmmword_3FC3A0 + 1), xmmword_3FC3B0, SBYTE8(xmmword_3FC3B0), (void *)xmmword_3FC3C0, *((uint64_t *)&xmmword_3FC3C0 + 1), xmmword_3FC3D0, *((uint64_t *)&xmmword_3FC3D0 + 1), qword_3FC3E0, word_3FC3E8, SHIBYTE(word_3FC3E8));
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_titleLabel] = sub_A96AC((uint64_t)&v41, 1, 0, 1);
  if (qword_3CF600 != -1)
    swift_once(&qword_3CF600, sub_14181C);
  v41 = xmmword_3FC3F0;
  v42 = xmmword_3FC400;
  v43 = xmmword_3FC410;
  v44 = xmmword_3FC420;
  v45 = xmmword_3FC430;
  *(_QWORD *)&v46 = qword_3FC440;
  WORD4(v46) = word_3FC448;
  sub_DDA0((void *)xmmword_3FC3F0, *((uint64_t *)&xmmword_3FC3F0 + 1), xmmword_3FC400, *((uint64_t *)&xmmword_3FC400 + 1), xmmword_3FC410, SBYTE8(xmmword_3FC410), (void *)xmmword_3FC420, *((uint64_t *)&xmmword_3FC420 + 1), xmmword_3FC430, *((uint64_t *)&xmmword_3FC430 + 1), qword_3FC440, word_3FC448, SHIBYTE(word_3FC448));
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_subtitleLabel] = sub_A96AC((uint64_t)&v41, 1, 0, 1);
  v23 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_separatorView] = v23;

  v40.receiver = v15;
  v40.super_class = ObjectType;
  v24 = (char *)objc_msgSendSuper2(&v40, "initWithFrame:", a1, a2, a3, a4);
  v25 = objc_msgSend(v24, "contentView");
  objc_msgSend(v25, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v26 = *(void **)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_captionLabel];
  objc_msgSend(v26, "_setTextColorFollowsTintColor:", 1);
  v27 = objc_msgSend(v24, "contentView");
  objc_msgSend(v27, "addSubview:", v26);

  v28 = objc_msgSend(v24, "contentView");
  objc_msgSend(v28, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_titleLabel]);

  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_subtitleLabel;
  v30 = *(void **)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_subtitleLabel];
  v31 = (void *)objc_opt_self(UIColor);
  v32 = v30;
  v33 = objc_msgSend(v31, "secondaryLabelColor");
  objc_msgSend(v32, "setTextColor:", v33);

  v34 = objc_msgSend(v24, "contentView");
  objc_msgSend(v34, "addSubview:", *(_QWORD *)&v24[v29]);

  v35 = objc_msgSend(v24, "contentView");
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkContainer]);

  v36 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_separatorView;
  v37 = qword_3CF090;
  v38 = *(id *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_separatorView];
  if (v37 != -1)
    swift_once(&qword_3CF090, sub_1EB44);
  objc_msgSend(v38, "setBackgroundColor:", qword_3FA918);

  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[v36]);
  sub_B10F4();
  objc_msgSend(v24, "setIsAccessibilityElement:", 1);
  objc_msgSend(v24, "setAccessibilityTraits:", UIAccessibilityTraitButton);

  return v24;
}

id sub_139644()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkView];
  v2 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
  v3 = objc_msgSend(v2, "layer");
  objc_msgSend(v3, "removeAllAnimations");

  objc_msgSend(v2, "setImage:", 0);
  objc_msgSend(v1, "invalidateIntrinsicContentSize");
  sub_1AB554(0);
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_separatorView], "setAlpha:", 1.0);
}

double sub_139748()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  int v21;
  double Width;
  unint64_t v23;
  CGRect v25;
  CGRect v26;

  v1 = objc_msgSend(v0, "contentView");
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(v1, "layoutMargins");
  v11 = v10;
  v13 = v12;

  v14 = UIEdgeInsetsInsetRect(v3, v5, v7, v9, v11, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  if (qword_3CF438 != -1)
    swift_once(&qword_3CF438, sub_138FAC);
  v21 = byte_3FB050;
  v25.origin.x = v14;
  v25.origin.y = v16;
  v25.size.width = v18;
  v25.size.height = v20;
  Width = CGRectGetWidth(v25);
  v26.origin.x = v14;
  v26.origin.y = v16;
  v26.size.width = v18;
  v26.size.height = v20;
  CGRectGetWidth(v26);
  if (v21 == 1)
  {
    v23 = sub_1FEB8();
    static UITraitCollection.interfaceIdiomIsMac.getter(v23);
  }
  return Width;
}

uint64_t sub_1398C8()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  double v4;
  uint64_t v5;
  void *v6;
  void *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  double MinY;
  CGFloat Width;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  CGFloat v37;
  double v38;
  double v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  char v59;
  _QWORD *v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int16 v69;
  char *v70;
  double v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  unsigned __int16 v79;
  void *v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  double v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int16 v94;
  id v95;
  void *v96;
  void *v97;
  double v98;
  double v99;
  double v100;
  uint64_t v101;
  int v102;
  CGFloat v103;
  uint64_t v104;
  double v105;
  double v106;
  double v107;
  char v108;
  double v109;
  double v110;
  uint64_t v111;
  CGFloat Height;
  double v113;
  char *v114;
  CGFloat v115;
  double v116;
  double v117;
  double MinX;
  id v120;
  uint64_t v121;
  unsigned __int16 v122;
  uint64_t v123;
  unint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  CGFloat v139;
  double v140;
  double v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  double v145;
  void *v146;
  double v147;
  char *v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  _BYTE v163[28];
  char v164;
  char v165;
  _OWORD v166[2];
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  _OWORD v171[2];
  _OWORD v172[6];
  _OWORD v173[2];
  _OWORD v174[6];
  _OWORD v175[8];
  _OWORD v176[2];
  objc_super v177;
  CGRect v178;
  CGRect v179;
  CGRect v180;
  CGRect v181;
  CGRect v182;
  CGRect v183;
  CGRect v184;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v143 = *(_QWORD *)(v3 - 8);
  v144 = v3;
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v142 = (char *)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177.receiver = v1;
  v177.super_class = ObjectType;
  objc_msgSendSuper2(&v177, "layoutSubviews", v4);
  objc_msgSend(v1, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_separatorInset + 8];
  v15 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_separatorInset + 24];
  v124 = sub_1FEB8();
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v124) & 1) != 0)
    v16 = 1.0;
  else
    v16 = 0.5;
  v17 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_separatorView];
  *(_QWORD *)&v178.origin.x = v7;
  v178.origin.y = v9;
  v178.size.width = v11;
  v178.size.height = v13;
  MinY = CGRectGetMinY(v178);
  v145 = v11;
  v146 = v7;
  *(_QWORD *)&v179.origin.x = v7;
  v139 = v9;
  v140 = v13;
  v179.origin.y = v9;
  v179.size.width = v11;
  v179.size.height = v13;
  Width = CGRectGetWidth(v179);
  v141 = v16;
  objc_msgSend(v17, "setFrame:", v14, MinY, Width - v14 - v15, v16);
  v20 = objc_msgSend(v1, "contentView");
  objc_msgSend(v20, "bounds");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  objc_msgSend(v20, "layoutMargins");
  v30 = v29;
  v32 = v31;

  v33 = UIEdgeInsetsInsetRect(v22, v24, v26, v28, v30, v32);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v148 = v1;
  v128 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_captionLabel];
  if (qword_3CF418 != -1)
    swift_once(&qword_3CF418, sub_138D10);
  v133 = (id)*((_QWORD *)&xmmword_3FAE30 + 1);
  v134 = xmmword_3FAE30;
  LODWORD(v132) = byte_3FAE40;
  v40 = xmmword_3FAE48;
  v41 = *((_QWORD *)&xmmword_3FAE58 + 1);
  v42 = xmmword_3FAE58;
  v43 = xmmword_3FAE68;
  v126 = *((_QWORD *)&xmmword_3FAE68 + 1);
  v127 = v43;
  v44 = *((_QWORD *)&xmmword_3FAE78 + 1);
  v125 = (void *)xmmword_3FAE78;
  v45 = xmmword_3FAE88;
  v46 = qword_3FAE98;
  v47 = (unsigned __int16)word_3FAEA0;
  sub_1472C((id)xmmword_3FAE48, *((uint64_t *)&xmmword_3FAE48 + 1), xmmword_3FAE58, *((uint64_t *)&xmmword_3FAE58 + 1), v43, SBYTE8(v43), (void *)xmmword_3FAE78, *((uint64_t *)&xmmword_3FAE78 + 1), xmmword_3FAE88, *((uint64_t *)&xmmword_3FAE88 + 1), qword_3FAE98, word_3FAEA0);
  LODWORD(v129) = v47;
  v122 = v47;
  v130 = v46;
  v121 = v46;
  v131 = *((_QWORD *)&v45 + 1);
  v135 = v45;
  v147 = *(double *)&v40;
  v137 = v42;
  v138 = *((_QWORD *)&v40 + 1);
  v136 = v41;
  v48 = v41;
  v49 = v126;
  v50 = v127;
  v51 = v125;
  sub_1472C((id)v40, *((uint64_t *)&v40 + 1), v42, v48, v127, v126, v125, v44, v45, *((uint64_t *)&v45 + 1), v121, v122);
  v52 = v128;
  v53 = sub_20F290(0, 1, 1, _swiftEmptyArrayStorage);
  v55 = v53[2];
  v54 = v53[3];
  if (v55 >= v54 >> 1)
    v53 = sub_20F290((_QWORD *)(v54 > 1), v55 + 1, 1, v53);
  v57 = v145;
  v56 = *(double *)&v146;
  v58 = v140;
  v59 = v132;
  v165 = v132;
  v53[2] = v55 + 1;
  v60 = &v53[16 * v55];
  v61 = v134;
  v60[4] = v52;
  v60[5] = v61;
  v60[6] = v133;
  *((_BYTE *)v60 + 56) = v59;
  v62 = v147;
  v64 = v137;
  v63 = v138;
  *((double *)v60 + 8) = v147;
  v60[9] = v63;
  v66 = v135;
  v65 = v136;
  v60[10] = v64;
  v60[11] = v65;
  v60[12] = v50;
  v60[13] = v49;
  v60[14] = v51;
  v60[15] = v44;
  v68 = v130;
  v67 = v131;
  v60[16] = v66;
  v60[17] = v67;
  v60[18] = v68;
  v69 = v129;
  *((_WORD *)v60 + 76) = v129;
  *((_WORD *)v60 + 77) = 1;
  sub_14788(*(id *)&v62, v63, v64, v65, v50, v49, v51, v44, v66, v67, v68, v69);
  v70 = v148;
  v71 = sub_4AE3C(v148, (uint64_t)v53, 0, v56, v139, v57, v58);
  swift_bridgeObjectRelease(v53);
  v72 = qword_3CF420;
  v73 = *(id *)&v70[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_titleLabel];
  if (v72 != -1)
  {
    v120 = v73;
    swift_once(&qword_3CF420, sub_138DD8);
    v73 = v120;
  }
  v145 = *((double *)&xmmword_3FAEC8 + 1);
  v146 = *(void **)&xmmword_3FAEC8;
  v74 = *((_QWORD *)&xmmword_3FAED8 + 1);
  v140 = *(double *)&xmmword_3FAED8;
  v75 = xmmword_3FAEE8;
  v76 = xmmword_3FAEF8;
  v77 = xmmword_3FAF08;
  v78 = qword_3FAF18;
  v79 = word_3FAF20;
  *(_QWORD *)&v166[0] = v73;
  *(_OWORD *)((char *)v166 + 8) = xmmword_3FAEB0;
  BYTE8(v166[1]) = byte_3FAEC0;
  v167 = xmmword_3FAEC8;
  v168 = xmmword_3FAED8;
  v169 = xmmword_3FAEE8;
  v170 = xmmword_3FAEF8;
  v171[0] = xmmword_3FAF08;
  *(_QWORD *)&v171[1] = qword_3FAF18;
  DWORD2(v171[1]) = (unsigned __int16)word_3FAF20;
  v147 = COERCE_DOUBLE(*(id *)&v148[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_subtitleLabel]);
  sub_1472C(v146, *(uint64_t *)&v145, *(uint64_t *)&v140, v74, v75, SBYTE8(v75), (void *)v76, *((uint64_t *)&v76 + 1), v77, *((uint64_t *)&v77 + 1), v78, v79);
  if (qword_3CF428 != -1)
    swift_once(&qword_3CF428, sub_138EA0);
  *(double *)v172 = v147;
  *(_OWORD *)((char *)v172 + 8) = xmmword_3FAF30;
  BYTE8(v172[1]) = byte_3FAF40;
  v172[2] = xmmword_3FAF48;
  v172[3] = xmmword_3FAF58;
  v172[4] = xmmword_3FAF68;
  v172[5] = xmmword_3FAF78;
  v173[0] = xmmword_3FAF88;
  *(_QWORD *)&v173[1] = qword_3FAF98;
  DWORD2(v173[1]) = (unsigned __int16)word_3FAFA0;
  v174[4] = v169;
  v174[5] = v170;
  v175[0] = v171[0];
  *(_OWORD *)((char *)v175 + 12) = *(_OWORD *)((char *)v171 + 12);
  v174[0] = v166[0];
  v174[1] = v166[1];
  v174[2] = v167;
  v174[3] = v168;
  v175[3] = v172[1];
  v175[4] = xmmword_3FAF48;
  v175[2] = v172[0];
  *(_OWORD *)((char *)v176 + 12) = *(_OWORD *)((char *)v173 + 12);
  v175[7] = xmmword_3FAF78;
  v176[0] = xmmword_3FAF88;
  v175[5] = xmmword_3FAF58;
  v175[6] = xmmword_3FAF68;
  v161 = xmmword_3FAF68;
  v162 = xmmword_3FAF78;
  *(_OWORD *)v163 = xmmword_3FAF88;
  *(_OWORD *)&v163[12] = *(_OWORD *)((char *)v176 + 12);
  v157 = v172[0];
  v158 = v172[1];
  v159 = xmmword_3FAF48;
  v160 = xmmword_3FAF58;
  v153 = v169;
  v154 = v170;
  v155 = v175[0];
  v156 = v175[1];
  v149 = v166[0];
  v150 = v166[1];
  v151 = v167;
  v152 = v168;
  v164 = 0;
  sub_1472C((id)xmmword_3FAF48, *((uint64_t *)&xmmword_3FAF48 + 1), xmmword_3FAF58, *((uint64_t *)&xmmword_3FAF58 + 1), xmmword_3FAF68, SBYTE8(xmmword_3FAF68), (void *)xmmword_3FAF78, *((uint64_t *)&xmmword_3FAF78 + 1), xmmword_3FAF88, *((uint64_t *)&xmmword_3FAF88 + 1), qword_3FAF98, word_3FAFA0);
  sub_14684((uint64_t)v166);
  sub_14684((uint64_t)v172);
  v147 = sub_FB1E8(v148, v56, v71, v57, v58 - v71);
  if (qword_3CF430 != -1)
    swift_once(&qword_3CF430, sub_138F68);
  v135 = *((_QWORD *)&xmmword_3FAFB0 + 1);
  v136 = xmmword_3FAFB0;
  LODWORD(v134) = byte_3FAFC0;
  LODWORD(v137) = (unsigned __int16)word_3FB020;
  v138 = *((_QWORD *)&xmmword_3FB010 + 1);
  *(_QWORD *)&v139 = xmmword_3FB010;
  v140 = *(double *)&qword_3FB008;
  v80 = (void *)qword_3FAFC8;
  v81 = xmmword_3FAFD0;
  v82 = qword_3FAFE0;
  v83 = qword_3FAFE8;
  v84 = (void *)xmmword_3FAFF0;
  v145 = dbl_3FB000;
  v146 = *((void **)&xmmword_3FAFF0 + 1);
  sub_1472C((id)qword_3FAFC8, xmmword_3FAFD0, *((uint64_t *)&xmmword_3FAFD0 + 1), qword_3FAFE0, qword_3FAFE8, xmmword_3FAFF0, *((void **)&xmmword_3FAFF0 + 1), *(uint64_t *)&dbl_3FB000, qword_3FB008, xmmword_3FB010, *((uint64_t *)&xmmword_3FB010 + 1), word_3FB020);
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v85 = v141 + v35;
  v86 = v39 - v141;
  v87 = v144;
  v88 = __swift_project_value_buffer(v144, (uint64_t)qword_3FCFB0);
  v89 = (uint64_t)v142;
  v90 = v143;
  (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v142, v88, v87);
  *(_QWORD *)&v149 = v136;
  *((_QWORD *)&v149 + 1) = v135;
  LOBYTE(v150) = v134;
  v132 = v81;
  v133 = v80;
  *((_QWORD *)&v150 + 1) = v80;
  v151 = v81;
  v130 = v82;
  v131 = *((_QWORD *)&v81 + 1);
  *(_QWORD *)&v152 = v82;
  v128 = v84;
  v129 = v83;
  *((_QWORD *)&v152 + 1) = v83;
  *(_QWORD *)&v153 = v84;
  *((_QWORD *)&v153 + 1) = v146;
  *(double *)&v154 = v145;
  v92 = *(_QWORD *)&v139;
  v91 = *(_QWORD *)&v140;
  *((double *)&v154 + 1) = v140;
  *(CGFloat *)&v155 = v139;
  v93 = v138;
  *((_QWORD *)&v155 + 1) = v138;
  v94 = v137;
  LOWORD(v156) = v137;
  v95 = objc_msgSend(v148, "traitCollection");
  sub_1DD06C((uint64_t)v95, v89, 0);
  v97 = v96;

  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v87);
  sub_14788(v133, v132, v131, v130, v129, (char)v128, v146, *(uint64_t *)&v145, v91, v92, v93, v94);
  if (qword_3CF438 != -1)
    swift_once(&qword_3CF438, sub_138FAC);
  v99 = *((double *)&xmmword_3FB030 + 1);
  v98 = *(double *)&xmmword_3FB030;
  v101 = qword_3FB040;
  v100 = unk_3FB048;
  v102 = byte_3FB050;
  v103 = v33;
  v180.origin.x = v33;
  v180.origin.y = v85;
  v180.size.width = v37;
  v180.size.height = v86;
  v105 = CGRectGetWidth(v180);
  v106 = v98;
  v107 = v99;
  if (v102 == 1)
  {
    v108 = static UITraitCollection.interfaceIdiomIsMac.getter(v104);
    if ((v108 & 1) != 0)
      v106 = v98;
    else
      v106 = *(double *)&v101;
    if ((v108 & 1) != 0)
      v107 = v99;
    else
      v107 = v100;
  }
  v109 = v107 / v106;
  if (v106 == 0.0)
    v109 = 0.0;
  v110 = v105 * v109;
  v181.origin.x = v103;
  v181.origin.y = v85;
  v181.size.width = v37;
  v181.size.height = v86;
  Height = CGRectGetHeight(v181);
  v146 = v97;
  v113 = Height - v147 - *(double *)&v97;
  v114 = v148;
  if (v113 >= v110)
  {
    v183.origin.x = v103;
    v183.origin.y = v85;
    v183.size.width = v37;
    v183.size.height = v86;
    MinX = CGRectGetMinX(v183);
    v184.origin.x = v103;
    v184.origin.y = v85;
    v184.size.width = v37;
    v184.size.height = v86;
    v117 = CGRectGetWidth(v184);
    v113 = v110;
  }
  else
  {
    v115 = v37;
    if (v102 && (static UITraitCollection.interfaceIdiomIsMac.getter(v111) & 1) == 0)
    {
      v98 = *(double *)&v101;
      v99 = v100;
    }
    v116 = 0.0;
    if (v99 != 0.0)
      v116 = v98 / v99;
    v117 = v113 * v116;
    v182.origin.x = v103;
    v182.origin.y = v85;
    v182.size.width = v115;
    v182.size.height = v86;
    MinX = CGRectGetMidX(v182) + v117 * -0.5;
  }
  objc_msgSend(*(id *)&v114[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkContainer], "setFrame:", MinX, v147 + *(double *)&v146, v117, v113);
  sub_147CC((uint64_t)v166);
  sub_147CC((uint64_t)v172);
  return sub_59D78((uint64_t)v174);
}

uint64_t type metadata accessor for EditorialCardCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell);
}

id sub_13A3F8()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkView);
}

uint64_t sub_13A40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for CropCode(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ArtworkCrop.cropCode.getter(v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v1 + 88))(v4, v0) == enum case for CropCode.boundingBox(_:))
    return 5;
  v6 = ArtworkCrop.preferredContentMode.getter();
  v5 = ContentMode.viewContentMode.getter(v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

id sub_13A4C0()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkContainer));
}

id sub_13A4D0(char a1)
{
  _QWORD *v1;
  double v2;

  v2 = 1.0;
  if ((a1 & 1) != 0)
    v2 = 0.0;
  return objc_msgSend(*(id *)(*v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_separatorView), "setAlpha:", v2);
}

uint64_t sub_13A500()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_isHovering);
}

uint64_t sub_13A510(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_isHovering) = result;
  return result;
}

id sub_13A520()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  NSString v6;
  void *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  NSString v11;
  void *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  NSString v16;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_captionLabel];
  EditorialCard.displayCaption.getter();
  if (v3)
  {
    v5 = v3;
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v2, "setText:", v6, v4);

  v7 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_titleLabel];
  EditorialCard.title.getter();
  if (v8)
  {
    v10 = v8;
    v11 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v9 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v7, "setText:", v11, v9);

  v12 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_subtitleLabel];
  EditorialCard.subtitle.getter();
  if (v13)
  {
    v15 = v13;
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v12, "setText:", v16, v14);

  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_13A62C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double v4;
  double v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int16 v11;
  double v12;
  double v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  unsigned __int16 v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  unsigned __int16 v28;
  double v29;
  double v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  BOOL v41;
  double v42;
  unint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  char v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  unsigned __int16 v62;

  v44 = sub_1FEB8();
  v54 = static UITraitCollection.interfaceIdiomIsMac.getter(v44);
  if (qword_3CF418 != -1)
    swift_once(&qword_3CF418, sub_138D10);
  v56 = xmmword_3FAE48;
  v57 = xmmword_3FAE58;
  v58 = xmmword_3FAE68;
  v59 = xmmword_3FAE78;
  v60 = xmmword_3FAE88;
  v61 = qword_3FAE98;
  v62 = word_3FAEA0;
  sub_1472C((id)xmmword_3FAE48, *((uint64_t *)&xmmword_3FAE48 + 1), xmmword_3FAE58, *((uint64_t *)&xmmword_3FAE58 + 1), xmmword_3FAE68, SBYTE8(xmmword_3FAE68), (void *)xmmword_3FAE78, *((uint64_t *)&xmmword_3FAE78 + 1), xmmword_3FAE88, *((uint64_t *)&xmmword_3FAE88 + 1), qword_3FAE98, word_3FAEA0);
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v55 = __swift_project_value_buffer(v3, (uint64_t)qword_3FCFB0);
  sub_1DD06C(a2, v55, 0);
  v5 = v4;
  sub_14788((id)v56, *((uint64_t *)&v56 + 1), v57, *((uint64_t *)&v57 + 1), v58, SBYTE8(v58), (void *)v59, *((uint64_t *)&v59 + 1), v60, *((uint64_t *)&v60 + 1), v61, v62);
  if (qword_3CF420 != -1)
    swift_once(&qword_3CF420, sub_138DD8);
  v6 = xmmword_3FAEC8;
  v7 = xmmword_3FAED8;
  v8 = *((_QWORD *)&xmmword_3FAEF8 + 1);
  v9 = xmmword_3FAF08;
  v10 = qword_3FAF18;
  v11 = word_3FAF20;
  v48 = BYTE8(xmmword_3FAEE8);
  v51 = xmmword_3FAEE8;
  v45 = (void *)xmmword_3FAEF8;
  sub_1472C((id)xmmword_3FAEC8, *((uint64_t *)&xmmword_3FAEC8 + 1), xmmword_3FAED8, *((uint64_t *)&xmmword_3FAED8 + 1), xmmword_3FAEE8, SBYTE8(xmmword_3FAEE8), (void *)xmmword_3FAEF8, *((uint64_t *)&xmmword_3FAEF8 + 1), xmmword_3FAF08, *((uint64_t *)&xmmword_3FAF08 + 1), qword_3FAF18, word_3FAF20);
  sub_1DD06C(a2, v55, 0);
  v13 = v12;
  sub_14788((id)v6, *((uint64_t *)&v6 + 1), v7, *((uint64_t *)&v7 + 1), v51, v48, v45, v8, v9, *((uint64_t *)&v9 + 1), v10, v11);
  if (qword_3CF428 != -1)
    swift_once(&qword_3CF428, sub_138EA0);
  v14 = *((_QWORD *)&xmmword_3FAF58 + 1);
  v15 = xmmword_3FAF68;
  v16 = xmmword_3FAF78;
  v17 = xmmword_3FAF88;
  v18 = qword_3FAF98;
  v19 = word_3FAFA0;
  v49 = *((_QWORD *)&xmmword_3FAF48 + 1);
  v52 = (void *)xmmword_3FAF48;
  v46 = xmmword_3FAF58;
  sub_1472C((id)xmmword_3FAF48, *((uint64_t *)&xmmword_3FAF48 + 1), xmmword_3FAF58, *((uint64_t *)&xmmword_3FAF58 + 1), xmmword_3FAF68, SBYTE8(xmmword_3FAF68), (void *)xmmword_3FAF78, *((uint64_t *)&xmmword_3FAF78 + 1), xmmword_3FAF88, *((uint64_t *)&xmmword_3FAF88 + 1), qword_3FAF98, word_3FAFA0);
  sub_1DD06C(a2, v55, 0);
  v21 = v20;
  sub_14788(v52, v49, v46, v14, v15, SBYTE8(v15), (void *)v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, v19);
  if (qword_3CF430 != -1)
    swift_once(&qword_3CF430, sub_138F68);
  v22 = *((_QWORD *)&xmmword_3FAFD8 + 1);
  v23 = xmmword_3FAFE8;
  v25 = *(__int128 *)((char *)&xmmword_3FAFE8 + 8);
  v24 = *((_QWORD *)&xmmword_3FAFF8 + 1);
  v26 = xmmword_3FB008;
  v27 = *(__int128 *)((char *)&xmmword_3FB008 + 8);
  v28 = word_3FB020;
  v50 = *((_QWORD *)&xmmword_3FAFC8 + 1);
  v53 = (void *)xmmword_3FAFC8;
  v47 = xmmword_3FAFD8;
  sub_1472C((id)xmmword_3FAFC8, *((uint64_t *)&xmmword_3FAFC8 + 1), xmmword_3FAFD8, *((uint64_t *)&xmmword_3FAFD8 + 1), xmmword_3FAFE8, SBYTE8(xmmword_3FAFE8), (void *)xmmword_3FAFF8, *((uint64_t *)&xmmword_3FAFF8 + 1), xmmword_3FB008, *((uint64_t *)&xmmword_3FB008 + 1), unk_3FB018, word_3FB020);
  sub_1DD06C(a2, v55, 0);
  v30 = v29;
  sub_14788(v53, v50, v47, v22, v23, v25, *((void **)&v25 + 1), v24, v26, v27, *((uint64_t *)&v27 + 1), v28);
  if (qword_3CF438 != -1)
    v31 = swift_once(&qword_3CF438, sub_138FAC);
  if (byte_3FB050 == 1)
  {
    v33 = qword_3FB040;
    v32 = unk_3FB048;
    v34 = xmmword_3FB030;
    v35 = static UITraitCollection.interfaceIdiomIsMac.getter(v31);
    if ((v35 & 1) != 0)
      v36 = *(double *)&v34;
    else
      v36 = *(double *)&v33;
    if ((v35 & 1) != 0)
      v37 = *((double *)&v34 + 1);
    else
      v37 = v32;
  }
  else
  {
    v37 = *((double *)&xmmword_3FB030 + 1);
    v36 = *(double *)&xmmword_3FB030;
  }
  v38 = 0.5;
  if ((v54 & 1) != 0)
    v38 = 1.0;
  v39 = v38 + v5 + v13 + v21 + v30;
  v40 = v37 / v36;
  v41 = v36 == 0.0;
  v42 = 0.0;
  if (!v41)
    v42 = v40;
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(v42, v39);
}

id sub_13AB14()
{
  return sub_13A520();
}

uint64_t sub_13AB1C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_objectGraph));
}

void sub_13AB2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_objectGraph) = a1;
  swift_release(v3);
  swift_retain(a1);
  sub_262730(v4);
}

uint64_t sub_13AB74(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D8280, v3, (uint64_t (*)(uint64_t))type metadata accessor for EditorialCardCollectionViewCell, (uint64_t)&unk_2F91B0);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_13ABCC(uint64_t a1, uint64_t a2)
{
  return sub_13A62C(a1, a2);
}

uint64_t sub_13ABE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D8280, a2, (uint64_t (*)(uint64_t))type metadata accessor for EditorialCardCollectionViewCell, (uint64_t)&unk_2F91B0);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_13AC14(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D8260, a2, (uint64_t (*)(uint64_t))type metadata accessor for EditorialCardCollectionViewCell, (uint64_t)&unk_2F9050);
}

uint64_t sub_13AC40(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5CF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for EditorialCardCollectionViewCell, (uint64_t)&unk_2F90D8);
}

uint64_t sub_13AC6C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D8268, a2, (uint64_t (*)(uint64_t))type metadata accessor for EditorialCardCollectionViewCell, (uint64_t)&unk_2F90B0);
}

uint64_t sub_13AC98(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D8270, a2, (uint64_t (*)(uint64_t))type metadata accessor for EditorialCardCollectionViewCell, (uint64_t)&unk_2F9108);
}

uint64_t sub_13ACC4()
{
  return sub_239FC(&qword_3D8278, 255, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialCard, (uint64_t)&protocol conformance descriptor for EditorialCard);
}

void sub_13ACF4()
{
  _BYTE *v0;
  _OWORD *v1;
  __int128 v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_objectGraph] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_separatorInset];
  v2 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *v1 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v1[1] = v2;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_isHovering] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/EditorialCardCollectionViewCell.swift", 61, 2, 76, 0);
  __break(1u);
}

char *sub_13ADA4(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __C::UILayoutPriority v27;
  Class isa;
  id v29;
  id v30;
  id v31;
  id v32;
  __C::UILayoutPriority v33;
  Class v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  Class v41;
  double v42;
  char *v43;
  uint64_t v44;
  id v46;
  uint64_t v47;
  objc_super v48;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews11LoadingCell_spinner;
  v14 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v15 = v4;
  *(_QWORD *)&v4[v13] = objc_msgSend(v14, "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews11LoadingCell_objectGraph] = 0;

  v48.receiver = v15;
  v48.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v48, "initWithFrame:", a1, a2, a3, a4);
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews11LoadingCell_spinner;
  v18 = *(void **)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews11LoadingCell_spinner];
  v19 = v16;
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = objc_msgSend(v19, "contentView");
  objc_msgSend(v20, "addSubview:", v18);

  v46 = (id)objc_opt_self(NSLayoutConstraint);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v22 = swift_allocObject(v21, 56, 7);
  *(_OWORD *)(v22 + 16) = xmmword_2EFC80;
  v23 = objc_msgSend(*(id *)&v16[v17], "topAnchor");
  v24 = objc_msgSend(v19, "contentView");
  v25 = objc_msgSend(v24, "topAnchor");

  v26 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v25, 40.0);
  v27.rawValue = static UILayoutPriority.highestBreakable.getter();
  isa = NSLayoutConstraint.withPriority(priority:)(v27).super.isa;

  *(_QWORD *)(v22 + 32) = isa;
  v29 = objc_msgSend(*(id *)&v16[v17], "bottomAnchor");
  v30 = objc_msgSend(v19, "contentView");
  v31 = objc_msgSend(v30, "bottomAnchor");

  v32 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v31, -40.0);
  v33.rawValue = static UILayoutPriority.highestBreakable.getter();
  v34 = NSLayoutConstraint.withPriority(priority:)(v33).super.isa;

  *(_QWORD *)(v22 + 40) = v34;
  v35 = objc_msgSend(*(id *)&v16[v17], "centerXAnchor");
  v36 = objc_msgSend(v19, "contentView");
  v37 = objc_msgSend(v36, "centerXAnchor");

  v38 = objc_msgSend(v35, "constraintEqualToAnchor:", v37);
  *(_QWORD *)(v22 + 48) = v38;
  v47 = v22;
  specialized Array._endMutation()(v39);
  v40 = v47;
  sub_12D34();
  v41 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v42 = swift_bridgeObjectRelease(v40).n128_u64[0];
  objc_msgSend(v46, "activateConstraints:", v41, v42);

  objc_msgSend(*(id *)&v16[v17], "startAnimating");
  v43 = v19;
  static UIBackgroundConfiguration.clear()(v43);
  v44 = type metadata accessor for UIBackgroundConfiguration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v12, 0, 1, v44);
  UICollectionViewCell.backgroundConfiguration.setter(v12);

  return v43;
}

uint64_t sub_13B240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShelfCellListSeparatorMode(0);
  __swift_allocate_value_buffer(v8, qword_3FB058);
  __swift_project_value_buffer(v8, (uint64_t)qword_3FB058);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ShelfCellListSeparatorMode.Placement.never(_:), v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Layout.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v7, v3);
}

uint64_t type metadata accessor for LoadingCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews11LoadingCell);
}

uint64_t sub_13B3B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3CF440 != -1)
    swift_once(&qword_3CF440, sub_13B240);
  v2 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_3FB058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_13B420()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11LoadingCell_objectGraph));
}

uint64_t sub_13B430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11LoadingCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11LoadingCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_13B464(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D82E8, v3, (uint64_t (*)(uint64_t))type metadata accessor for LoadingCell, (uint64_t)&unk_2F9414);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

void sub_13B4BC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000018, 0x800000000030C020, "ShelfKitCollectionViews/LoadingCell.swift", 41, 2, 64, 0);
  __break(1u);
}

uint64_t sub_13B514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D82E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for LoadingCell, (uint64_t)&unk_2F9414);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_13B548(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D82C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for LoadingCell, (uint64_t)&unk_2F9294);
}

uint64_t sub_13B574(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C48, a2, (uint64_t (*)(uint64_t))type metadata accessor for LoadingCell, (uint64_t)&unk_2F931C);
}

uint64_t sub_13B5A0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D82C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for LoadingCell, (uint64_t)&unk_2F92F4);
}

uint64_t sub_13B5CC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D82D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for LoadingCell, (uint64_t)&unk_2F934C);
}

uint64_t sub_13B5F8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D82D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for LoadingCell, (uint64_t)&unk_2F9374);
}

uint64_t sub_13B624()
{
  return sub_239FC(&qword_3D82E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for EmptyModel, (uint64_t)&protocol conformance descriptor for EmptyModel);
}

void sub_13B654()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews11LoadingCell_spinner;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11LoadingCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/LoadingCell.swift", 41, 2, 36, 0);
  __break(1u);
}

void sub_13B704(uint64_t a1)
{
  sub_13B740(a1, 0x6C69662E72617473, 0xE90000000000006CLL, &qword_3D82F0);
}

void sub_13B728(uint64_t a1)
{
  sub_13B740(a1, 1918989427, 0xE400000000000000, &qword_3D82F8);
}

void sub_13B740(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  char v6;
  void *v7;
  double v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  id v13;

  v5 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v6 = static UITraitCollection.interfaceIdiomIsMac.getter(v5);
  v7 = (void *)objc_opt_self(_UIImageSymbolConfiguration);
  if ((v6 & 1) != 0)
  {
    v8 = 12.0;
    v9 = -1;
  }
  else
  {
    v8 = 24.0;
    v9 = 2;
  }
  v10 = objc_msgSend(v7, "configurationWithPointSize:weight:scale:", 4, v9, v8);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v11, v10);

  if (v12)
  {
    v13 = objc_msgSend(v12, "imageWithRenderingMode:", 2);

    if (v13)
    {
      *a4 = v13;
      return;
    }
  }
  else
  {

  }
  __break(1u);
}

void sub_13B948()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;
  CGRect v6;
  CGRect v7;

  objc_msgSend(v0, "bounds");
  objc_msgSend(v0, "sizeThatFits:", v1, v2);
  v4 = v3;
  objc_msgSend(v0, "bounds");
  if (CGRectGetWidth(v6) >= v4)
  {
    v5 = objc_msgSend(v0, "traitCollection");
    UITraitCollection.interfaceIdiomIsMac.getter();

  }
  else
  {
    objc_msgSend(v0, "bounds");
    CGRectGetWidth(v7);
    if (qword_3CF448 != -1)
      swift_once(&qword_3CF448, sub_13B704);
    objc_msgSend((id)qword_3D82F0, "size");
  }
}

void sub_13BA4C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  id v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  CGContext *v17;
  CGContext *v18;
  CGContext *v19;
  id v20;
  void *v21;
  CGColor *v22;
  double MidY;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  CGFloat Width;
  double v34;
  double v35;
  double v36;
  CGFloat v37;
  CGFloat v38;
  double v39;
  double v40;
  uint64_t v41;
  double v42;
  uint64_t *v43;
  double v44;
  uint64_t *v45;
  double v46;
  uint64_t *v47;
  double v48;
  uint64_t *v49;
  uint64_t *v50;
  CATransform3D v51;
  objc_super v52;
  CGRect v53;
  CGRect v54;

  v52.receiver = v4;
  v52.super_class = (Class)type metadata accessor for StarRatingControl();
  objc_msgSendSuper2(&v52, "drawRect:", a1, a2, a3, a4);
  v9 = (char *)objc_msgSend(v4, "effectiveUserInterfaceLayoutDirection");
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_hasRTLTransformSet;
  if (v9 == (_BYTE *)&dword_0 + 1)
  {
    if ((v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_hasRTLTransformSet] & 1) != 0)
      goto LABEL_7;
    v11 = objc_msgSend(v4, "layer");
    CATransform3DMakeScale(&v51, -1.0, 1.0, 1.0);
    objc_msgSend(v11, "setTransform:", &v51);
    v12 = 1;
  }
  else
  {
    if (!v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_hasRTLTransformSet])
      goto LABEL_7;
    v11 = objc_msgSend(v4, "layer");
    v13 = *(_OWORD *)&CATransform3DIdentity.m13;
    *(_OWORD *)&v51.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
    *(_OWORD *)&v51.m13 = v13;
    v14 = *(_OWORD *)&CATransform3DIdentity.m23;
    *(_OWORD *)&v51.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
    *(_OWORD *)&v51.m23 = v14;
    v15 = *(_OWORD *)&CATransform3DIdentity.m33;
    *(_OWORD *)&v51.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
    *(_OWORD *)&v51.m33 = v15;
    v16 = *(_OWORD *)&CATransform3DIdentity.m43;
    *(_OWORD *)&v51.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
    *(_OWORD *)&v51.m43 = v16;
    objc_msgSend(v11, "setTransform:", &v51);
    v12 = 0;
  }

  v4[v10] = v12;
LABEL_7:
  v17 = UIGraphicsGetCurrentContext();
  v18 = v17;
  if (v17)
  {
    v19 = v17;
    v20 = objc_msgSend(v4, "tintColor");
    if (!v20)
    {
      __break(1u);
      return;
    }
    v21 = v20;
    v22 = (CGColor *)objc_msgSend(v20, "CGColor");

    CGContextSetFillColorWithColor(v19, v22);
  }
  objc_msgSend(v4, "bounds");
  MidY = CGRectGetMidY(v53);
  if (qword_3CF448 != -1)
    swift_once(&qword_3CF448, sub_13B704);
  v24 = (void *)qword_3D82F0;
  objc_msgSend((id)qword_3D82F0, "size");
  v26 = MidY + v25 * -0.5;
  objc_msgSend(v24, "size");
  v28 = v27;
  sub_13B948();
  v30 = v29;
  objc_msgSend(v4, "intrinsicContentSize");
  v32 = v31;
  v54.origin.x = a1;
  v54.origin.y = a2;
  v54.size.width = a3;
  v54.size.height = a4;
  Width = CGRectGetWidth(v54);
  v34 = a4;
  v35 = a3;
  v36 = 0.0;
  if (v32 < Width)
  {
    v37 = a1;
    v38 = a2;
    v36 = (CGRectGetWidth(*(CGRect *)(&v35 - 2)) - v32) * 0.5;
  }
  v39 = ceil(v26);
  v40 = v28 + v30;
  v41 = OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating;
  v42 = floor(v36 + (v28 + v30) * 0.0);
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating])
  {
    v43 = &qword_3D82F0;
  }
  else
  {
    if (qword_3CF450 != -1)
      swift_once(&qword_3CF450, sub_13B728);
    v43 = &qword_3D82F8;
  }
  objc_msgSend((id)*v43, "drawAtPoint:", v42, v39, v35, v34);
  v44 = floor(v36 + v40);
  if (*(_QWORD *)&v4[v41] <= 1uLL)
  {
    if (qword_3CF450 != -1)
      swift_once(&qword_3CF450, sub_13B728);
    v45 = &qword_3D82F8;
  }
  else
  {
    v45 = &qword_3D82F0;
  }
  objc_msgSend((id)*v45, "drawAtPoint:", v44, v39);
  v46 = floor(v36 + v40 + v40);
  if (*(_QWORD *)&v4[v41] <= 2uLL)
  {
    if (qword_3CF450 != -1)
      swift_once(&qword_3CF450, sub_13B728);
    v47 = &qword_3D82F8;
  }
  else
  {
    v47 = &qword_3D82F0;
  }
  objc_msgSend((id)*v47, "drawAtPoint:", v46, v39);
  v48 = floor(v36 + v40 * 3.0);
  if (*(_QWORD *)&v4[v41] <= 3uLL)
  {
    if (qword_3CF450 != -1)
      swift_once(&qword_3CF450, sub_13B728);
    v49 = &qword_3D82F8;
  }
  else
  {
    v49 = &qword_3D82F0;
  }
  objc_msgSend((id)*v49, "drawAtPoint:", v48, v39);
  if (*(_QWORD *)&v4[v41] <= 4uLL)
  {
    if (qword_3CF450 != -1)
      swift_once(&qword_3CF450, sub_13B728);
    v50 = &qword_3D82F8;
  }
  else
  {
    v50 = &qword_3D82F0;
  }
  objc_msgSend((id)*v50, "drawAtPoint:", floor(v36 + v40 * 4.0), v39);

}

void sub_13C0CC(double a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  CGFloat Width;
  double v9;
  double v10;
  double v11;
  CGRect v12;
  CGRect v13;

  sub_13B948();
  v4 = v3;
  if (qword_3CF448 != -1)
    swift_once(&qword_3CF448, sub_13B704);
  objc_msgSend((id)qword_3D82F0, "size");
  v6 = (v4 + v5) * 5.0 - v4;
  v7 = (v4 + v6) / 5.0;
  objc_msgSend(v1, "frame");
  Width = CGRectGetWidth(v12);
  v9 = 0.0;
  if (v6 < Width)
  {
    objc_msgSend(v1, "frame");
    v9 = (CGRectGetWidth(v13) - v6) * 0.5;
  }
  v10 = (a1 - v9) / v7;
  if (v10 > 5.0)
    v10 = 5.0;
  if (v10 <= 1.0)
    v10 = 1.0;
  v11 = ceil(v10);
  if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v11 <= -1.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v11 >= 1.84467441e19)
LABEL_15:
    __break(1u);
}

id sub_13C27C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v7;
  id v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  void *object;
  NSString v13;
  Swift::String v15;

  v7 = (void *)objc_opt_self(NSBundle);
  v8 = a1;
  v9 = objc_msgSend(v7, "mainBundle");
  v15._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = a3;
  v10._object = a4;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v15)._object;

  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  return v13;
}

void sub_13C3A0(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  objc_super v11;

  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v7 = v6;
    v8 = a1;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v10 = a1;
    v9 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for StarRatingControl();
  objc_msgSendSuper2(&v11, *a4, v9);

}

unint64_t sub_13C498()
{
  void *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  const char *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  __int128 v30;
  id v31;
  _QWORD v32[3];
  uint64_t v33;
  unint64_t v34;
  Swift::String v35;

  v1 = v0;
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  v31 = (id)objc_opt_self(NSBundle);
  v2 = 0;
  v29 = (void *)0x800000000030FD00;
  v3 = 1;
  v30 = xmmword_2F03C0;
  do
  {
    switch(v2)
    {
      case 0:
        v4 = "accessibilitySetStarRatingZero";
        break;
      case 1:
        v4 = "accessibilitySetStarRatingOne";
        break;
      case 2:
        v4 = "accessibilitySetStarRatingTwo";
        break;
      case 3:
        v4 = "accessibilitySetStarRatingThree";
        break;
      case 4:
        v4 = "accessibilitySetStarRatingFour";
        break;
      default:
        if (v2 == 5)
          v4 = "accessibilitySetStarRatingFive";
        else
          v4 = 0;
        break;
    }
    v5 = objc_msgSend(v31, "mainBundle", *(double *)&v3);
    v35._object = (void *)0xE000000000000000;
    v6._countAndFlagsBits = 0xD00000000000001FLL;
    v6._object = v29;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0;
    v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v35);

    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
    v10 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 56) = &type metadata for UInt;
    *(_QWORD *)(v10 + 64) = &protocol witness table for UInt;
    *(_QWORD *)(v10 + 32) = v2;
    static String.localizedStringWithFormat(_:_:)(v8._countAndFlagsBits, v8._object, v10);
    v12 = v11;
    swift_bridgeObjectRelease(v8._object);
    swift_bridgeObjectRelease(v10);
    if (v4)
    {
      v33 = type metadata accessor for StarRatingControl();
      v32[0] = v1;
      v13 = v1;
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
      v15 = v33;
      if (v33)
      {
        v16 = __swift_project_boxed_opaque_existential_1(v32, v33);
        v17 = *(_QWORD *)(v15 - 8);
        v18 = __chkstk_darwin(v16);
        v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v17 + 16))(v20, v18);
        v21 = _bridgeAnythingToObjectiveC<A>(_:)(v20, v15);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
        __swift_destroy_boxed_opaque_existential_0(v32);
      }
      else
      {
        v21 = 0;
      }
      v22 = objc_msgSend(objc_allocWithZone((Class)UIAccessibilityCustomAction), "initWithName:target:selector:", v14, v21, v4);

      swift_unknownObjectRelease(v21);
      v23 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v25 = *(_QWORD *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8));
      v24 = *(_QWORD *)((char *)&dword_18 + (v34 & 0xFFFFFFFFFFFFFF8));
      if (v25 >= v24 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
      v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
      specialized Array._endMutation()(v26);

    }
    else
    {
      v3 = swift_bridgeObjectRelease(v12).n128_u64[0];
    }
    ++v2;
  }
  while (v2 != 6);
  return v34;
}

uint64_t sub_13C86C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  unsigned __int128 v23;
  Swift::String v24;
  double v25;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  void *v34;
  Swift::String v35;
  __n128 v36;
  void *v37;
  __n128 v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  void *v42;
  __n128 v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int128 aBlock;
  uint64_t (*v59)(uint64_t);
  void *v60;
  void (*v61)();
  uint64_t v62;
  Swift::String v63;
  Swift::String v64;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  __chkstk_darwin(v3);
  v55 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0, v6);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v50 - v14;
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating;
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating] = a1;
  if (v17 != a1)
  {
    objc_msgSend(v1, "setNeedsDisplay", v13);
    a1 = *(_QWORD *)&v1[v16];
  }
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_lastSentRating];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_lastSentRating] = a1;
  if (v18 != a1)
    objc_msgSend(v1, "sendActionsForControlEvents:", 4096);
  v19 = (void *)objc_opt_self(NSBundle);
  v20 = objc_msgSend(v19, "mainBundle");
  v63._object = (void *)0xE000000000000000;
  v21._object = (void *)0x800000000030FC90;
  v21._countAndFlagsBits = 0xD000000000000017;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0;
  v23 = (unsigned __int128)NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v63);

  aBlock = v23;
  swift_bridgeObjectRetain(*((_QWORD *)&v23 + 1));
  v24._countAndFlagsBits = 8236;
  v24._object = (void *)0xE200000000000000;
  String.append(_:)(v24);
  *(_QWORD *)&v25 = swift_bridgeObjectRelease(*((_QWORD *)&v23 + 1)).n128_u64[0];
  v28 = (Swift::String)aBlock;
  object = v28._object;
  countAndFlagsBits = v28._countAndFlagsBits;
  v29 = objc_msgSend(v19, "mainBundle", v25);
  v30._countAndFlagsBits = 0xD00000000000001DLL;
  v64._object = (void *)0xE000000000000000;
  v30._object = (void *)0x800000000030FCB0;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v64._countAndFlagsBits = 0;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v64);

  aBlock = __PAIR128__((unint64_t)object, countAndFlagsBits);
  swift_bridgeObjectRetain(object);
  String.append(_:)(v32);
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(v32._object);
  v35 = (Swift::String)aBlock;
  v34 = v35._object;
  v33 = v35._countAndFlagsBits;
  sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v37 = (void *)static OS_dispatch_queue.main.getter(v36);
  static DispatchTime.now()(v38);
  + infix(_:_:)(v11, 1.5);
  v39 = v52;
  v40 = *(void (**)(char *, uint64_t))(v51 + 8);
  v40(v11, v52);
  v41 = swift_allocObject(&unk_384B68, 32, 7);
  *(_OWORD *)(v41 + 16) = __PAIR128__((unint64_t)v34, v33);
  v61 = sub_13CEB0;
  v62 = v41;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v59 = sub_24360;
  v60 = &block_descriptor_26;
  v42 = _Block_copy(&aBlock);
  v43 = swift_release(v62);
  static DispatchQoS.unspecified.getter(v43);
  *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
  v44 = sub_CF9B0();
  v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v46 = sub_CF9F8();
  v47 = v55;
  v48 = v57;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v45, v46, v57, v44);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v47, v42);
  _Block_release(v42);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v47, v48);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v8, v54);
  return ((uint64_t (*)(char *, uint64_t))v40)(v15, v39);
}

void sub_13CC60()
{
  UIAccessibilityNotifications v0;
  NSString v1;

  v0 = UIAccessibilityAnnouncementNotification;
  v1 = String._bridgeToObjectiveC()();
  UIAccessibilityPostNotification(v0, v1);

}

id sub_13CE38()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StarRatingControl();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StarRatingControl()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17StarRatingControl);
}

uint64_t sub_13CE8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_13CEB0()
{
  sub_13CC60();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_26(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_13CED0()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  id v4;
  char v5;
  double v6;
  id v7;
  char v8;
  double v9;

  v1 = v0;
  if (qword_3CF448 != -1)
    swift_once(&qword_3CF448, sub_13B704);
  objc_msgSend((id)qword_3D82F0, "size");
  v3 = v2;
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v5 & 1) != 0)
    v6 = 4.0;
  else
    v6 = 11.0;
  v7 = objc_msgSend(v1, "traitCollection");
  v8 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v8 & 1) != 0)
    v9 = 4.0;
  else
    v9 = 11.0;
  return (v3 + v6) * 5.0 - v9;
}

void sub_13CFC8(void *a1)
{
  char *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    objc_msgSend(a1, "locationInView:", v1);
    sub_13C0CC(v2);
    v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating;
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating] = v3;
    if (v5 != v3)
    {
      objc_msgSend(v1, "setNeedsDisplay");
      v3 = *(_QWORD *)&v1[v4];
    }
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_lastSentRating];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_lastSentRating] = v3;
    if (v6 != v3)
      objc_msgSend(v1, "sendActionsForControlEvents:", 4096);
  }
}

void sub_13D058()
{
  char *v0;
  char *v1;
  id v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v3 & 1) == 0)
  {
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_lastSentRating];
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating] = v4;
    if (v5 != v4)
      objc_msgSend(v1, "setNeedsDisplay");
  }
}

uint64_t sub_13D0E8(uint64_t a1)
{
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v10;

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10._object = (void *)0xE000000000000000;
  v3._object = (void *)0x800000000030FD00;
  v3._countAndFlagsBits = 0xD00000000000001FLL;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v10);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v7 + 56) = &type metadata for UInt;
  *(_QWORD *)(v7 + 64) = &protocol witness table for UInt;
  *(_QWORD *)(v7 + 32) = a1;
  v8 = static String.localizedStringWithFormat(_:_:)(v5._countAndFlagsBits, v5._object, v7);
  swift_bridgeObjectRelease(v5._object);
  swift_bridgeObjectRelease(v7);
  return v8;
}

double sub_13D1F0(char a1)
{
  _BYTE *v1;
  int v2;
  double result;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)();
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  void *v17;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;

  v2 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_followState];
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_followState] = a1;
  if (a1 != 6)
  {
    if (v2 == 6)
    {
      sub_13DEB8(a1);
      return result;
    }
    if (a1 != 3)
    {
      if (a1 == 5)
      {
        v5 = 1;
        goto LABEL_13;
      }
      if (a1 == 4)
      {
        if (v2 == 4)
          return result;
      }
      else if ((v2 - 3) >= 3)
      {
        if (a1 == 2)
        {
          if (v2 == 2)
            return result;
        }
        else if (v2 != 2 && ((((a1 & 1) == 0) ^ v2) & 1) != 0)
        {
          return result;
        }
      }
    }
    v5 = 0;
LABEL_13:
    v6 = swift_allocObject(&unk_384BB8, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v1);
    v7 = swift_allocObject(&unk_384BE0, 25, 7);
    *(_QWORD *)(v7 + 16) = v6;
    *(_BYTE *)(v7 + 24) = a1;
    v8 = (void (**)())&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock];
    v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock];
    v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeUpdateBlock + 8];
    *v8 = sub_13E95C;
    v8[1] = (void (*)())v7;
    swift_retain(v6);
    swift_retain(v7);
    sub_1D618(v9, v10);
    if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeOutInProgress] & 1) != 0)
    {
      swift_release(v6);
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    }
    else
    {
      v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fadeOutInProgress] = 1;
      objc_msgSend(v1, "layoutIfNeeded");
      v11 = (void *)objc_opt_self(UIView);
      v12 = swift_allocObject(&unk_384C08, 25, 7);
      *(_QWORD *)(v12 + 16) = v1;
      *(_BYTE *)(v12 + 24) = v5;
      v22 = sub_13E98C;
      v23 = v12;
      v18 = _NSConcreteStackBlock;
      v19 = 1107296256;
      v20 = sub_24360;
      v21 = &block_descriptor_27;
      v13 = _Block_copy(&v18);
      v14 = v23;
      v15 = v1;
      swift_release(v14);
      v16 = swift_allocObject(&unk_384C58, 24, 7);
      swift_unknownObjectWeakInit(v16 + 16, v15);
      v22 = sub_13E9B0;
      v23 = v16;
      v18 = _NSConcreteStackBlock;
      v19 = 1107296256;
      v20 = sub_1E3D64;
      v21 = &block_descriptor_12_0;
      v17 = _Block_copy(&v18);
      swift_release(v23);
      objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 65540, v13, v17, 0.2, 0.0);
      _Block_release(v17);
      _Block_release(v13);
      swift_release(v6);
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_13D588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1188);
  __chkstk_darwin(v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_followState) == 4)
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
    objc_msgSend(v10, "notificationOccurred:", 0);

    v12 = (void *)UIView.mt_viewController.getter(v11);
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v12, "presentedViewController");

      if (v14)
      {
        v15 = type metadata accessor for PopoverTipViewController(0);
        v16 = swift_dynamicCastClass(v14, v15);
        if (v16)
        {
          v17 = (void *)v16;
          if ((dispatch thunk of PopoverTipViewController.isFollowTipController()() & 1) != 0)
            objc_msgSend(v17, "dismissViewControllerAnimated:completion:", 1, 0);
        }

      }
    }
  }
  v18 = type metadata accessor for InteractionContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
  v19 = type metadata accessor for PresentationSource(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
  v20 = type metadata accessor for ChildAndParentLocation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v3, 1, 1, v20);
  dispatch thunk of FollowButtonPresenter.performPrimaryAction(with:from:location:)(v9, v6, v3);
  sub_D1D4((uint64_t)v3, &qword_3D1188);
  sub_D1D4((uint64_t)v6, &qword_3D83E8);
  return sub_D1D4((uint64_t)v9, &qword_3D83F0);
}

void *sub_13D800(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *Strong;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  CGSize size;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE v28[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83F0);
  __chkstk_darwin(v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E80);
  __chkstk_darwin(v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83E8);
  __chkstk_darwin(v9);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v14 = &v28[-v13 - 8];
  a2 += 16;
  swift_beginAccess(a2, v28, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v16 = type metadata accessor for PresentationSource(0);
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v17(v14, 1, 1, v16);
    v18 = Strong;
    v19 = UIView.mt_viewController.getter(v18);

    if (v19)
    {
      *(_QWORD *)v8 = v18;
      size = CGRectNull.size;
      *(CGPoint *)(v8 + 8) = CGRectNull.origin;
      *(CGSize *)(v8 + 24) = size;
      v27 = v17;
      v21 = enum case for PresentationSource.Position.view(_:);
      v22 = type metadata accessor for PresentationSource.Position(0);
      v23 = *(_QWORD *)(v22 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v8, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v22);
      v24 = v18;
      PresentationSource.init(viewController:position:)(v19, v8);
      sub_D1D4((uint64_t)v14, &qword_3D83E8);
      v27(v11, 0, 1, v16);
      sub_13EABC((uint64_t)v11, (uint64_t)v14);
    }
    v25 = type metadata accessor for InteractionContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 1, 1, v25);
    Strong = (void *)dispatch thunk of FollowButtonPresenter.unfollowMenu(with:from:)(v5, v14);
    sub_D1D4((uint64_t)v5, &qword_3D83F0);
    sub_D1D4((uint64_t)v14, &qword_3D83E8);

  }
  return Strong;
}

void sub_13DAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  void (*v15)(char *, uint64_t);
  __n128 v16;
  void *v17;
  uint64_t v18;

  v1 = type metadata accessor for DispatchTimeInterval(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for DispatchTime(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v18 - v11;
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_updateStateCallback);
  if (v13)
  {
    v14 = swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_updateStateCallback));
    static DispatchTime.now()(v14);
    *v5 = 500;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for DispatchTimeInterval.milliseconds(_:), v1);
    + infix(_:_:)(v9, v5);
    (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
    v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v9, v6);
    sub_1E2A0();
    v17 = (void *)static OS_dispatch_queue.main.getter(v16);
    OS_dispatch_queue.asyncAfter(deadline:execute:)(v12, v13);
    swift_release(v13);

    v15(v12, v6);
  }
}

double sub_13DC44(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = v3;
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_updateStateCallback;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_updateStateCallback);
  if (v9)
  {
    swift_retain(v9);
    dispatch thunk of DispatchWorkItem.cancel()(v10);
    swift_release(v9);
    v11 = *(_QWORD *)(v4 + v8);
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)(v4 + v8) = 0;
  swift_release(v11);
  sub_13DAD0();
  v12 = sub_100BBC(a1, a2, a3);
  return sub_13D1F0(v12);
}

void sub_13DCCC()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.FollowNavButton", 39, "init(frame:glyph:color:style:layout:autolayoutMode:)", 52, 0);
  __break(1u);
}

double sub_13DCF8()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_presenter));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_headerButtonTipProvider));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_metricsController));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0
                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_updateStateCallback)).n128_u64[0];
  return result;
}

id sub_13DD44()
{
  return sub_F2198(type metadata accessor for FollowNavButton);
}

uint64_t sub_13DDA8()
{
  return type metadata accessor for FollowNavButton(0);
}

uint64_t type metadata accessor for FollowNavButton(uint64_t a1)
{
  uint64_t result;

  result = qword_3D83A8;
  if (!qword_3D83A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FollowNavButton);
  return result;
}

uint64_t sub_13DDEC(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  v2[2] = &unk_2F94E0;
  v2[3] = &unk_2F94F8;
  v2[4] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[5] = &unk_2F94E0;
  return swift_updateClassMetadata2(a1, 256, 6, v2, a1 + 880);
}

void sub_13DE60(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_13DEB8(a2);

  }
}

id sub_13DEB8(char a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id *v28;
  double v29;
  id v30;
  id v31;
  _BOOL8 v32;
  _BOOL4 v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  _BYTE v41[24];
  char v42[24];
  Swift::String v43;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  __chkstk_darwin(v3);
  v5 = &v41[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v41[-v11];
  sub_100A64(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_D1D4((uint64_t)v5, (uint64_t *)&unk_3D9F00);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v12, v5, v6);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_1E2B60(v9);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (a1 == 4)
  {
    v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v14._countAndFlagsBits = 0xD000000000000017;
    v43._countAndFlagsBits = 0xD00000000000003BLL;
    v43._object = (void *)0x800000000030FF40;
    v14._object = (void *)0x800000000030FF20;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v43);
    countAndFlagsBits = v16._countAndFlagsBits;
    object = v16._object;

  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  v19 = (uint64_t *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customTitle], v42, 1, 0);
  v20 = v19[1];
  *v19 = countAndFlagsBits;
  v19[1] = (uint64_t)object;
  swift_bridgeObjectRelease(v20);
  v21 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout];
  v22 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 8];
  v23 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 16];
  v24 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_layout + 24];
  v26 = *v19;
  v25 = v19[1];
  swift_bridgeObjectRetain(v25);
  sub_1E4108(v26, v25, v21, v22, v23, v24);
  swift_bridgeObjectRelease(v25);
  v27 = 0;
  if (a1 == 5)
  {
    v27 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Spinner()), "initWithActivityIndicatorStyle:", 100);
    objc_msgSend(v27, "startAnimating");
  }
  v28 = (id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay];
  *(_QWORD *)&v29 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay], v41, 1, 0).n128_u64[0];
  if (*v28)
  {
    objc_msgSend(*v28, "removeFromSuperview", v29);
    v30 = *v28;
  }
  else
  {
    v30 = 0;
  }
  *v28 = v27;
  v31 = v27;

  sub_1E47E0();
  v32 = (a1 - 6) < 0xFDu;
  v34 = (a1 & 1) == 0 || (a1 - 2) < 4u;
  v35 = !v34;
  if (v34)
    v36 = 0;
  else
    v36 = 0xD000000000000011;
  v37 = 0x800000000030FF00;
  v38 = (unint64_t *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeSymbolName];
  v39 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_badgeSymbolName + 8];
  if (!v35)
    v37 = 0;
  *v38 = v36;
  v38[1] = v37;
  swift_bridgeObjectRelease(v39);
  sub_1E3EFC();
  objc_msgSend(v1, "setShowsMenuAsPrimaryAction:", v32);
  return objc_msgSend(v1, "setContextMenuInteractionEnabled:", v32);
}

unint64_t sub_13E298()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;

  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease(0xE000000000000000);
  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_followState);
  if ((v1 - 3) < 2)
  {
    v2 = 0xEC000000676E6977;
    v3 = 0x6F6C6C6F46746F6ELL;
  }
  else if (v1 == 6)
  {
    v2 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
  }
  else if (v1 == 5)
  {
    v2 = 0xE700000000000000;
    v3 = 0x676E6964616F6CLL;
  }
  else
  {
    v2 = 0xE900000000000067;
    v3 = 0x6E69776F6C6C6F66;
  }
  v4 = v2;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v2);
  v5._countAndFlagsBits = 93;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return 0xD000000000000025;
}

id sub_13E514(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for Spinner();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id sub_13E564()
{
  return sub_F2198((uint64_t (*)(_QWORD))type metadata accessor for Spinner);
}

uint64_t type metadata accessor for Spinner()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_BF196CED1AC8F58D44CC0C0970B139AE7Spinner);
}

id sub_13E590(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  void *v24;
  char *v25;
  id v26;
  unint64_t v27;
  id v28;
  uint64_t v30;
  __int128 v31[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Glyph(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FollowButtonPresenter.Data(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_followState] = 6;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_updateStateCallbackDelay] = 0x3FE0000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_updateStateCallback] = 0;
  v14 = type metadata accessor for MetricsController(0);
  v15 = v2;
  BaseObjectGraph.optional<A>(_:)(v31, v14, v14, v16);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_metricsController] = *(_QWORD *)&v31[0];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2B20);
  v18 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v31, v17, a2, v17, v18, v19);
  sub_1B738(v31, (uint64_t)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_headerButtonTipProvider]);
  sub_13E84C(a1, (uint64_t)v13);
  v20 = type metadata accessor for FollowButtonPresenter(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = swift_retain(a2);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews15FollowNavButton_presenter] = FollowButtonPresenter.init(data:displaySuccessHUD:asPartOf:)(v13, 0, a2, v21);

  static Glyph.HeaderButtons.follow.getter();
  v22 = type metadata accessor for Glyph.Color(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v10, (uint64_t)v7, 2, 1, 0, 0.0, 0.0, 0.0, 0.0);
  v24 = v23;
  v25 = &v23[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground];
  swift_beginAccess(&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlayHidesBackground], v31, 1, 0);
  *v25 = 0;
  v26 = v24;
  sub_1E2494();
  objc_msgSend(v26, "addTarget:action:forControlEvents:", v26, "onClick", 0x2000);
  v27 = sub_13E890();
  v28 = v26;
  dispatch thunk of FollowButtonPresenter.delegate.setter(v26, v27);

  sub_13E8D8(a1);
  return v28;
}

uint64_t sub_13E84C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FollowButtonPresenter.Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_13E890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D83E0;
  if (!qword_3D83E0)
  {
    v1 = type metadata accessor for FollowNavButton(255);
    result = swift_getWitnessTable(&unk_2F9518, v1);
    atomic_store(result, (unint64_t *)&qword_3D83E0);
  }
  return result;
}

uint64_t sub_13E8D8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FollowButtonPresenter.Data(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_13E914()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_13E938()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_13E95C()
{
  uint64_t v0;

  sub_13DE60(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_13E968()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_13E98C()
{
  uint64_t v0;

  return sub_1E4A84(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_27(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_13E9B0(uint64_t a1)
{
  uint64_t v1;

  sub_1E4C38(a1, v1);
}

id sub_13E9B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD v7[5];
  uint64_t v8;

  v1 = swift_allocObject(&unk_384BB8, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16, v0);
  v2 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v7[4] = sub_13EAB4;
  v8 = v1;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1FB208;
  v7[3] = &block_descriptor_16_0;
  v3 = _Block_copy(v7);
  v4 = v8;
  swift_retain_n(v1, 2);
  v5 = objc_msgSend(v2, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v3, swift_release(v4).n128_f64[0]);
  swift_release(v1);
  _Block_release(v3);
  swift_release(v1);
  return v5;
}

void *sub_13EAB4(uint64_t a1)
{
  uint64_t v1;

  return sub_13D800(a1, v1);
}

uint64_t sub_13EABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D83E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for IdiomSpecificFontUseCase(uint64_t a1)
{
  sub_DD48(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for IdiomSpecificFontUseCase(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_DE20(*(id *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for IdiomSpecificFontUseCase(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_DE20(*(id *)a2, v4, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_DD48(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for IdiomSpecificFontUseCase(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_DD48(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdiomSpecificFontUseCase(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdiomSpecificFontUseCase(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_13ED14(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IdiomSpecificFontUseCase()
{
  return &type metadata for IdiomSpecificFontUseCase;
}

id sub_13ED2C()
{
  qword_3D83F8 = UIFontSystemFontDesignTrait;
  return UIFontSystemFontDesignTrait;
}

void sub_13ED44()
{
  __int128 *v0;
  _OWORD v1[3];
  __int128 v2;

  sub_143600(v0, v1);
  sub_143600(v0, &v2);
  __asm { BR              X10 }
}

uint64_t sub_13EDA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Swift::UInt32 v8;

  v3 = ((uint64_t (*)())static String._unconditionallyBridgeFromObjectiveC(_:))();
  v5 = v4;
  v6 = v2;
  String.hash(into:)(v1, v3, v5);
  swift_bridgeObjectRelease(v5);
  Hasher._combine(_:)(v8);
  return sub_143618(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DD48);
}

void sub_13EEDC()
{
  __int128 *v0;
  uint64_t v1;
  _OWORD v2[3];
  __int128 v3;

  sub_143600(v0, v2);
  v1 = type metadata accessor for Logger(0);
  __chkstk_darwin(v1);
  sub_143600(v0, &v3);
  __asm { BR              X10 }
}

NSObject *sub_13EF78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  uint64_t v15;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  _DWORD *v22;
  NSObject *v23;
  NSObject **v24;
  uint8_t *v25;
  uint64_t v26;

  v7 = *(_QWORD *)(v6 - 200);
  v8 = *(unsigned int *)(v6 - 192);
  v9 = (void *)objc_opt_self(UIFontDescriptor);
  v10 = v5;
  v11 = objc_msgSend(v9, "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", v7, v3);
  v12 = v11;
  if ((_DWORD)v8
    && (v13 = -[NSObject fontDescriptorWithSymbolicTraits:](v11, "fontDescriptorWithSymbolicTraits:", v8)) != 0)
  {
    v14 = v13;
    -[NSObject pointSize](v13, "pointSize");
    if ((v15 & 0x7FF0000000000000) != 0
      || (v15 & 0xFFFFFFFFFFFFFLL) != 0
      || (v17 = -[NSObject pointSize](v12, "pointSize"), (v18 & 0x7FFFFFFFFFFFFFFFLL) == 0))
    {
      sub_143618(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DD48);

      return v14;
    }
    else
    {
      static Logger.ui.getter(v17);
      v12 = v12;
      v19 = Logger.logObject.getter(v12);
      v20 = static os_log_type_t.error.getter(v19);
      v21 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        *(_DWORD *)(v6 - 252) = v21;
        v22 = (_DWORD *)swift_slowAlloc(12, -1);
        *(_QWORD *)(v6 - 272) = swift_slowAlloc(8, -1);
        *(_QWORD *)(v6 - 264) = v22;
        *v22 = 138412290;
        *(_QWORD *)(v6 - 280) = v22 + 1;
        *(_QWORD *)(v6 - 152) = v12;
        v23 = v12;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 152, v6 - 144);
        v24 = *(NSObject ***)(v6 - 272);
        *v24 = v12;

        v25 = *(uint8_t **)(v6 - 264);
        _os_log_impl(&dword_0, v19, (os_log_type_t)*(_DWORD *)(v6 - 252), "Modifying %@ with traits produced malformed derivative, using original", v25, 0xCu);
        v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F50);
        swift_arrayDestroy(v24, 1, v26);
        swift_slowDealloc(v24, -1, -1);
        swift_slowDealloc(v25, -1, -1);
        sub_143618(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DD48);
      }
      else
      {
        sub_143618(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DD48);

        v19 = v12;
        v14 = v12;
      }

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
    }
  }
  else
  {
    sub_143618(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DD48);
  }
  return v12;
}

void sub_13F440()
{
  __int128 *v0;
  _QWORD v1[9];
  _OWORD v2[3];
  __int128 v3;

  sub_143600(v0, v2);
  Hasher.init(_seed:)(v1, 0);
  sub_143600(v0, &v3);
  __asm { BR              X10 }
}

Swift::Int sub_13F4A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::UInt32 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v3 = *(_DWORD *)(v2 - 104);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v2 - 112));
  v6 = v5;
  v7 = v1;
  String.hash(into:)(&v9, v4, v6);
  swift_bridgeObjectRelease(v6);
  Hasher._combine(_:)(v3);
  sub_143618(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DD48);
  return Hasher._finalize()();
}

void sub_13F5D4()
{
  __int128 *v0;
  _OWORD v1[3];

  sub_143600(v0, v1);
  sub_13F440();
}

void sub_13F608()
{
  __int128 *v0;
  _OWORD v1[3];

  sub_143600(v0, v1);
  sub_13ED44();
}

void sub_13F644(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *(unsigned __int8 *)(v1 + 40);
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_13F694()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v10;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v7 = v6;
  v8 = v2;
  String.hash(into:)(&v10, v5, v7);
  swift_bridgeObjectRelease(v7);
  Hasher._combine(_:)(v0);
  sub_DD48(v2, v0, v4, v3, v1, 0);
  return Hasher._finalize()();
}

uint64_t sub_13F810(__int128 *a1, __int128 *a2)
{
  char v3;
  __int128 v5[3];
  _OWORD v6[3];

  sub_143600(a1, v5);
  sub_143600(a2, v6);
  sub_143270(v5);
  return v3 & 1;
}

unint64_t sub_13F85C()
{
  unint64_t result;

  result = qword_3D8400;
  if (!qword_3D8400)
  {
    result = swift_getWitnessTable(&unk_2F958C, &type metadata for IdiomSpecificFontUseCase);
    atomic_store(result, (unint64_t *)&qword_3D8400);
  }
  return result;
}

double sub_13F8A0()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB070 = static UIFont.title1.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB078 = 0u;
  unk_3FB088 = 0u;
  qword_3FB098 = 3;
  xmmword_3FB0A0 = 0u;
  *(_OWORD *)&qword_3FB0B0 = 0u;
  unk_3FB0BA = 0u;
  return result;
}

double sub_13F900()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB0D0 = static UIFont.title1Emph.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB0D8 = 0u;
  unk_3FB0E8 = 0u;
  qword_3FB0F8 = 3;
  xmmword_3FB100 = 0u;
  *(_OWORD *)&qword_3FB110 = 0u;
  unk_3FB11A = 0u;
  return result;
}

double sub_13F960()
{
  uint64_t v0;
  double result;

  v0 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB130 = static UIFont.title2Emph.getter(v0);
  result = 0.0;
  *(_OWORD *)algn_3FB138 = 0u;
  unk_3FB148 = 0u;
  qword_3FB158 = 3;
  xmmword_3FB160 = 0u;
  *(_OWORD *)&qword_3FB170 = 0u;
  unk_3FB17A = 0u;
  return result;
}

double sub_13F9C0()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB190 = static UIFont.title3.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB198 = 0u;
  unk_3FB1A8 = 0u;
  qword_3FB1B8 = 3;
  xmmword_3FB1C0 = 0u;
  *(_OWORD *)&qword_3FB1D0 = 0u;
  unk_3FB1DA = 0u;
  return result;
}

double sub_13FA20()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB1F0 = static UIFont.title3Emph.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB1F8 = 0u;
  unk_3FB208 = 0u;
  qword_3FB218 = 3;
  xmmword_3FB220 = 0u;
  *(_OWORD *)&qword_3FB230 = 0u;
  unk_3FB23A = 0u;
  return result;
}

double sub_13FA80()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB250 = static UIFont.headline.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB258 = 0u;
  unk_3FB268 = 0u;
  qword_3FB278 = 3;
  xmmword_3FB280 = 0u;
  *(_OWORD *)&qword_3FB290 = 0u;
  unk_3FB29A = 0u;
  return result;
}

double sub_13FAE0()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB2B0 = static UIFont.body.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB2B8 = 0u;
  unk_3FB2C8 = 0u;
  qword_3FB2D8 = 3;
  xmmword_3FB2E0 = 0u;
  *(_OWORD *)&qword_3FB2F0 = 0u;
  unk_3FB2FA = 0u;
  return result;
}

double sub_13FB40()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB310 = static UIFont.bodyEmph.getter();
  result = 0.0;
  *(_OWORD *)&qword_3FB318 = 0u;
  *(_OWORD *)&qword_3FB328 = 0u;
  qword_3FB338 = 3;
  xmmword_3FB340 = 0u;
  *(_OWORD *)&qword_3FB350 = 0u;
  *(_OWORD *)((char *)&qword_3FB358 + 2) = 0u;
  return result;
}

double sub_13FBA0()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB370 = static UIFont.bodyShort.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB378 = 0u;
  unk_3FB388 = 0u;
  qword_3FB398 = 3;
  xmmword_3FB3A0 = 0u;
  *(_OWORD *)&qword_3FB3B0 = 0u;
  unk_3FB3BA = 0u;
  return result;
}

double sub_13FC00()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB3D0 = static UIFont.callout.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB3D8 = 0u;
  unk_3FB3E8 = 0u;
  qword_3FB3F8 = 3;
  xmmword_3FB400 = 0u;
  *(_OWORD *)&qword_3FB410 = 0u;
  unk_3FB41A = 0u;
  return result;
}

double sub_13FC60()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB430 = static UIFont.calloutEmph.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB438 = 0u;
  unk_3FB448 = 0u;
  qword_3FB458 = 3;
  xmmword_3FB460 = 0u;
  *(_OWORD *)&qword_3FB470 = 0u;
  unk_3FB47A = 0u;
  return result;
}

double sub_13FCC0()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB490 = static UIFont.subhead.getter();
  result = 0.0;
  *(_OWORD *)&qword_3FB498 = 0u;
  *(_OWORD *)&qword_3FB4A8 = 0u;
  qword_3FB4B8 = 3;
  xmmword_3FB4C0 = 0u;
  *(_OWORD *)&qword_3FB4D0 = 0u;
  *(_OWORD *)((char *)&qword_3FB4D8 + 2) = 0u;
  return result;
}

double sub_13FD20()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB4F0 = static UIFont.subheadEmph.getter();
  result = 0.0;
  *(_OWORD *)&qword_3FB4F8 = 0u;
  *(_OWORD *)&qword_3FB508 = 0u;
  qword_3FB518 = 3;
  xmmword_3FB520 = 0u;
  *(_OWORD *)&qword_3FB530 = 0u;
  *(_OWORD *)((char *)&qword_3FB538 + 2) = 0u;
  return result;
}

double sub_13FD80()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB550 = static UIFont.subheadShort.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB558 = 0u;
  unk_3FB568 = 0u;
  qword_3FB578 = 3;
  xmmword_3FB580 = 0u;
  *(_OWORD *)&qword_3FB590 = 0u;
  unk_3FB59A = 0u;
  return result;
}

double sub_13FDE0()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB5B0 = static UIFont.footnote.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB5B8 = 0u;
  *(_OWORD *)&qword_3FB5C8 = 0u;
  qword_3FB5D8 = 3;
  xmmword_3FB5E0 = 0u;
  *(_OWORD *)&qword_3FB5F0 = 0u;
  *(_OWORD *)((char *)&qword_3FB5F8 + 2) = 0u;
  return result;
}

double sub_13FE40()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB610 = static UIFont.footnoteEmph.getter();
  result = 0.0;
  *(_OWORD *)&qword_3FB618 = 0u;
  *(_OWORD *)&qword_3FB628 = 0u;
  qword_3FB638 = 3;
  xmmword_3FB640 = 0u;
  *(_OWORD *)&qword_3FB650 = 0u;
  *(_OWORD *)((char *)&qword_3FB658 + 2) = 0u;
  return result;
}

double sub_13FEA0()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB670 = static UIFont.caption1.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB678 = 0u;
  unk_3FB688 = 0u;
  qword_3FB698 = 3;
  xmmword_3FB6A0 = 0u;
  *(_OWORD *)&qword_3FB6B0 = 0u;
  unk_3FB6BA = 0u;
  return result;
}

double sub_13FF00()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB6D0 = static UIFont.caption2.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB6D8 = 0u;
  unk_3FB6E8 = 0u;
  qword_3FB6F8 = 3;
  xmmword_3FB700 = 0u;
  *(_OWORD *)&qword_3FB710 = 0u;
  unk_3FB71A = 0u;
  return result;
}

double sub_13FF60()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB730 = static UIFont.caption2Emph.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB738 = 0u;
  unk_3FB748 = 0u;
  qword_3FB758 = 3;
  xmmword_3FB760 = 0u;
  *(_OWORD *)&qword_3FB770 = 0u;
  unk_3FB77A = 0u;
  return result;
}

double sub_13FFC0()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB790 = static UIFont.largeTitle.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB798 = 0u;
  unk_3FB7A8 = 0u;
  qword_3FB7B8 = 3;
  xmmword_3FB7C0 = 0u;
  *(_OWORD *)&qword_3FB7D0 = 0u;
  unk_3FB7DA = 0u;
  return result;
}

double sub_140020()
{
  double result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  qword_3FB7F0 = static UIFont.largeTitleEmph.getter();
  result = 0.0;
  *(_OWORD *)algn_3FB7F8 = 0u;
  unk_3FB808 = 0u;
  qword_3FB818 = 3;
  xmmword_3FB820 = 0u;
  *(_OWORD *)&qword_3FB830 = 0u;
  unk_3FB83A = 0u;
  return result;
}

UIFontTextStyle sub_140080()
{
  xmmword_3FB850 = xmmword_2F9600;
  qword_3FB860 = (uint64_t)sub_1400DC;
  unk_3FB868 = 0;
  qword_3FB870 = *(_QWORD *)&UIFontWeightRegular;
  unk_3FB878 = 2;
  qword_3FB880 = (uint64_t)UIFontTextStyleHeadline;
  unk_3FB888 = 0u;
  unk_3FB898 = 0u;
  word_3FB8A8 = 256;
  return UIFontTextStyleHeadline;
}

double sub_1400DC()
{
  return 18.0;
}

UIFontTextStyle sub_1400E4()
{
  xmmword_3FB8B0 = xmmword_2F9610;
  qword_3FB8C0 = (uint64_t)sub_1400DC;
  unk_3FB8C8 = 0;
  qword_3FB8D0 = *(_QWORD *)&UIFontWeightBold;
  unk_3FB8D8 = 2;
  qword_3FB8E0 = (uint64_t)UIFontTextStyleHeadline;
  unk_3FB8E8 = 2;
  qword_3FB8F8 = 0;
  qword_3FB900 = 0;
  qword_3FB8F0 = 0;
  word_3FB908 = 256;
  return UIFontTextStyleHeadline;
}

UIFontTextStyle sub_14013C()
{
  xmmword_3FB910 = xmmword_2F9620;
  qword_3FB920 = (uint64_t)sub_140198;
  unk_3FB928 = 0;
  qword_3FB930 = *(_QWORD *)&UIFontWeightRegular;
  qword_3FB938 = 2;
  qword_3FB940 = (uint64_t)UIFontTextStyleSubheadline;
  *(_OWORD *)&qword_3FB948 = 0u;
  *(_OWORD *)&qword_3FB958 = 0u;
  word_3FB968 = 256;
  return UIFontTextStyleSubheadline;
}

double sub_140198()
{
  return 15.0;
}

UIFontTextStyle sub_1401A0()
{
  xmmword_3FB970 = xmmword_2F9630;
  qword_3FB980 = (uint64_t)sub_140198;
  unk_3FB988 = 0;
  qword_3FB990 = *(_QWORD *)&UIFontWeightSemibold;
  unk_3FB998 = 2;
  qword_3FB9A0 = (uint64_t)UIFontTextStyleSubheadline;
  unk_3FB9A8 = 2;
  qword_3FB9B8 = 0;
  qword_3FB9C0 = 0;
  qword_3FB9B0 = 0;
  word_3FB9C8 = 256;
  return UIFontTextStyleSubheadline;
}

UIFontTextStyle sub_1401F8()
{
  xmmword_3FB9D0 = xmmword_2F9640;
  qword_3FB9E0 = (uint64_t)sub_140254;
  unk_3FB9E8 = 0;
  qword_3FB9F0 = *(_QWORD *)&UIFontWeightRegular;
  unk_3FB9F8 = 2;
  qword_3FBA00 = (uint64_t)UIFontTextStyleCaption1;
  unk_3FBA08 = 0u;
  unk_3FBA18 = 0u;
  word_3FBA28 = 256;
  return UIFontTextStyleCaption1;
}

double sub_140254()
{
  return 12.0;
}

UIFontTextStyle sub_14025C()
{
  xmmword_3FBA30 = xmmword_2F9650;
  qword_3FBA40 = (uint64_t)sub_140254;
  unk_3FBA48 = 0;
  qword_3FBA50 = *(_QWORD *)&UIFontWeightSemibold;
  unk_3FBA58 = 2;
  qword_3FBA60 = (uint64_t)UIFontTextStyleCaption1;
  unk_3FBA68 = 2;
  qword_3FBA78 = 0;
  qword_3FBA80 = 0;
  qword_3FBA70 = 0;
  word_3FBA88 = 256;
  return UIFontTextStyleCaption1;
}

UIFontTextStyle sub_1402B4()
{
  xmmword_3FBA90 = xmmword_2F9660;
  qword_3FBAA0 = (uint64_t)sub_14030C;
  unk_3FBAA8 = 0;
  qword_3FBAB0 = *(_QWORD *)&UIFontWeightMedium;
  unk_3FBAB8 = 2;
  qword_3FBAC0 = (uint64_t)UIFontTextStyleFootnote;
  unk_3FBAC8 = 2;
  qword_3FBAD8 = 0;
  qword_3FBAE0 = 0;
  qword_3FBAD0 = 0;
  word_3FBAE8 = 256;
  return UIFontTextStyleFootnote;
}

double sub_14030C()
{
  return 11.0;
}

double sub_140314()
{
  double result;

  xmmword_3FBAF0 = xmmword_2F9670;
  qword_3FBB00 = (uint64_t)sub_140358;
  unk_3FBB08 = 0;
  qword_3FBB10 = *(_QWORD *)&UIFontWeightBold;
  unk_3FBB18 = 2;
  result = 0.0;
  xmmword_3FBB20 = 0u;
  *(_OWORD *)&qword_3FBB30 = 0u;
  unk_3FBB3A = 0u;
  return result;
}

double sub_140358()
{
  return 34.0;
}

double sub_140364()
{
  double result;

  xmmword_3FBB50 = xmmword_2F9680;
  qword_3FBB60 = (uint64_t)sub_1403A8;
  unk_3FBB68 = 0;
  qword_3FBB70 = *(_QWORD *)&UIFontWeightSemibold;
  unk_3FBB78 = 2;
  result = 0.0;
  xmmword_3FBB80 = 0u;
  *(_OWORD *)&qword_3FBB90 = 0u;
  unk_3FBB9A = 0u;
  return result;
}

double sub_1403A8()
{
  return 24.0;
}

double sub_1403B0()
{
  double result;

  xmmword_3FBBB0 = xmmword_2F9690;
  qword_3FBBC0 = (uint64_t)sub_1403F4;
  unk_3FBBC8 = 0;
  qword_3FBBD0 = *(_QWORD *)&UIFontWeightRegular;
  *(_QWORD *)&byte_3FBBD8 = 2;
  result = 0.0;
  xmmword_3FBBE0 = 0u;
  *(_OWORD *)&qword_3FBBF0 = 0u;
  *(_OWORD *)((char *)&qword_3FBBF8 + 2) = 0u;
  return result;
}

double sub_1403F4()
{
  return 14.0;
}

double sub_1403FC()
{
  double result;

  xmmword_3FBC10 = xmmword_2F96A0;
  qword_3FBC20 = (uint64_t)sub_1403F4;
  unk_3FBC28 = 0;
  qword_3FBC30 = *(_QWORD *)&UIFontWeightSemibold;
  *(_QWORD *)&byte_3FBC38 = 2;
  result = 0.0;
  xmmword_3FBC40 = 0u;
  *(_OWORD *)&qword_3FBC50 = 0u;
  *(_OWORD *)((char *)&qword_3FBC58 + 2) = 0u;
  return result;
}

id sub_140440()
{
  if (qword_3CF510 != -1)
    swift_once(&qword_3CF510, sub_1400E4);
  xmmword_3FBC70 = xmmword_3FB8B0;
  qword_3FBC80 = qword_3FB8C0;
  unk_3FBC88 = qword_3FB8C8;
  qword_3FBC90 = qword_3FB8D0;
  unk_3FBC98 = *(_QWORD *)byte_3FB8D8;
  qword_3FBCA0 = qword_3FB8E0;
  qword_3FBCA8 = qword_3FB8E8;
  qword_3FBCB0 = qword_3FB8F0;
  qword_3FBCB8 = qword_3FB8F8;
  qword_3FBCC0 = qword_3FB900;
  word_3FBCC8 = word_3FB908;
  return sub_DDA0((void *)xmmword_3FB8B0, *((uint64_t *)&xmmword_3FB8B0 + 1), qword_3FB8C0, qword_3FB8C8, qword_3FB8D0, byte_3FB8D8[0], (void *)qword_3FB8E0, qword_3FB8E8, qword_3FB8F0, qword_3FB8F8, qword_3FB900, word_3FB908, SHIBYTE(word_3FB908));
}

void sub_1404E4()
{
  __int128 v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  UIFontTextStyle v8;
  NSString *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  if (qword_3CF560 != -1)
    swift_once(&qword_3CF560, sub_140440);
  v0 = xmmword_3FBC70;
  v1 = unk_3FBC88;
  v20 = qword_3FBC80;
  v3 = qword_3FBC90;
  v2 = unk_3FBC98;
  v19 = (void *)qword_3FBCA0;
  v4 = qword_3FBCB0;
  v18 = qword_3FBCA8;
  v6 = qword_3FBCB8;
  v5 = qword_3FBCC0;
  v7 = word_3FBCC8;
  v8 = UIFontTextStyleTitle2;
  if (HIBYTE(word_3FBCC8) == 1)
  {
    v9 = UIFontTextStyleTitle2;
    v10 = v20;
    sub_DDA0((void *)v0, *((uint64_t *)&v0 + 1), v20, v1, v3, v2, v19, v18, v4, v6, v5, v7, 1);
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v20, v1, v3, v2);
    sub_DE20(v19, v18, v4, v6, v5, v7);
    sub_DD48(v19, v18, v4, v6, v5, v7);
    v16 = v7;
    v11 = *((_QWORD *)&v0 + 1);
    v14 = v5;
    v12 = v0;
    v8 = UIFontTextStyleTitle2;
    sub_DCC8((void *)v0, *((uint64_t *)&v0 + 1), v20, v1, v3, v2, v19, v18, v4, v6, v14, v16, 1);
  }
  else
  {
    v13 = UIFontTextStyleTitle2;
    v17 = v7;
    v15 = v5;
    v11 = *((_QWORD *)&v0 + 1);
    v12 = v0;
    v10 = v20;
    sub_DDA0((void *)v0, *((uint64_t *)&v0 + 1), v20, v1, v3, v2, v19, v18, v4, v6, v15, v17, 0);
  }
  qword_3FBCD0 = v12;
  *(_QWORD *)algn_3FBCD8 = v11;
  qword_3FBCE0 = v10;
  unk_3FBCE8 = v1;
  qword_3FBCF0 = v3;
  unk_3FBCF8 = v2;
  qword_3FBD00 = (uint64_t)v8;
  unk_3FBD08 = *(_QWORD *)&UIFontWeightBold;
  qword_3FBD18 = 0;
  unk_3FBD20 = 0;
  qword_3FBD10 = 0;
  word_3FBD28 = 257;
}

UIFontTextStyle sub_140714()
{
  qword_3FBD30 = (uint64_t)UIFontTextStyleBody;
  *(_OWORD *)algn_3FBD38 = 0u;
  unk_3FBD48 = 0u;
  unk_3FBD58 = 0u;
  unk_3FBD68 = 0u;
  unk_3FBD78 = 0u;
  word_3FBD88 = 0;
  return UIFontTextStyleBody;
}

UIFontTextStyle sub_14074C()
{
  qword_3FBD90 = (uint64_t)UIFontTextStyleFootnote;
  *(_OWORD *)algn_3FBD98 = 0u;
  unk_3FBDA8 = 0u;
  unk_3FBDB8 = 0u;
  unk_3FBDC8 = 0u;
  unk_3FBDD8 = 0u;
  word_3FBDE8 = 0;
  return UIFontTextStyleFootnote;
}

UIFontTextStyle sub_140784()
{
  qword_3FBDF0 = 0xD000000000000013;
  *(_QWORD *)algn_3FBDF8 = 0x8000000000310010;
  qword_3FBE00 = (uint64_t)sub_1403F4;
  unk_3FBE08 = 0;
  qword_3FBE10 = *(_QWORD *)&UIFontWeightRegular;
  unk_3FBE18 = 2;
  qword_3FBE20 = (uint64_t)UIFontTextStyleTitle2;
  unk_3FBE28 = 0u;
  unk_3FBE38 = 0u;
  word_3FBE48 = 256;
  return UIFontTextStyleTitle2;
}

id sub_1407F0()
{
  if (qword_3CF580 != -1)
    swift_once(&qword_3CF580, sub_140784);
  qword_3FBE50 = qword_3FBDF0;
  *(_QWORD *)algn_3FBE58 = *(_QWORD *)algn_3FBDF8;
  qword_3FBE60 = qword_3FBE00;
  unk_3FBE68 = qword_3FBE08;
  qword_3FBE70 = qword_3FBE10;
  unk_3FBE78 = *(_QWORD *)byte_3FBE18;
  qword_3FBE80 = qword_3FBE20;
  unk_3FBE88 = qword_3FBE28;
  qword_3FBE90 = qword_3FBE30;
  unk_3FBE98 = qword_3FBE38;
  qword_3FBEA0 = qword_3FBE40;
  word_3FBEA8 = word_3FBE48;
  return sub_DDA0((void *)qword_3FBDF0, *(uint64_t *)algn_3FBDF8, qword_3FBE00, qword_3FBE08, qword_3FBE10, byte_3FBE18[0], (void *)qword_3FBE20, qword_3FBE28, qword_3FBE30, qword_3FBE38, qword_3FBE40, word_3FBE48, SHIBYTE(word_3FBE48));
}

double sub_140894()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  double result;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  char v24;

  if (qword_3CF518 != -1)
    swift_once(&qword_3CF518, sub_14013C);
  v0 = xmmword_3FB910;
  v1 = qword_3FB920;
  v2 = qword_3FB928;
  v4 = qword_3FB930;
  v3 = qword_3FB938;
  v5 = qword_3FB950;
  v6 = qword_3FB958;
  v7 = qword_3FB960;
  v8 = word_3FB968;
  if (HIBYTE(word_3FB968) == 1)
  {
    v22 = (void *)xmmword_3FB910;
    v23 = qword_3FB948;
    v24 = qword_3FB938;
    v9 = (void *)qword_3FB940;
    sub_DDA0((void *)xmmword_3FB910, *((uint64_t *)&xmmword_3FB910 + 1), qword_3FB920, qword_3FB928, qword_3FB930, qword_3FB938, (void *)qword_3FB940, qword_3FB948, qword_3FB950, qword_3FB958, qword_3FB960, word_3FB968, SHIBYTE(word_3FB968));
    v10 = UIFontTextStyleBody;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v24);
    sub_DE20(v9, v23, v5, v6, v7, v8);
    sub_DD48(v9, v23, v5, v6, v7, v8);
    v21 = v8;
    v20 = v7;
    v11 = (uint64_t)v22;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v24;
    sub_DCC8(v22, *((uint64_t *)&v0 + 1), v14, v2, v4, v24, v17, v23, v5, v6, v20, v21, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FB910 + 1);
    v11 = xmmword_3FB910;
    v13 = qword_3FB920;
    v15 = qword_3FB928;
    v16 = qword_3FB930;
    sub_DDA0((void *)xmmword_3FB910, *((uint64_t *)&xmmword_3FB910 + 1), qword_3FB920, qword_3FB928, qword_3FB930, qword_3FB938, (void *)qword_3FB940, qword_3FB948, qword_3FB950, qword_3FB958, qword_3FB960, word_3FB968, 0);
    v18 = UIFontTextStyleBody;
  }
  qword_3FBEB0 = v11;
  *(_QWORD *)algn_3FBEB8 = v12;
  qword_3FBEC0 = v13;
  unk_3FBEC8 = v15;
  qword_3FBED0 = v16;
  qword_3FBED8 = v3;
  qword_3FBEE0 = (uint64_t)UIFontTextStyleBody;
  result = 0.0;
  *(_OWORD *)&qword_3FBEE8 = 0u;
  *(_OWORD *)&qword_3FBEF8 = 0u;
  word_3FBF08 = 256;
  return result;
}

UIFontTextStyle sub_140AA0()
{
  qword_3FBF10 = 0xD000000000000010;
  *(_QWORD *)algn_3FBF18 = 0x800000000030FFF0;
  qword_3FBF20 = (uint64_t)sub_140254;
  unk_3FBF28 = 0;
  qword_3FBF30 = *(_QWORD *)&UIFontWeightRegular;
  unk_3FBF38 = 2;
  qword_3FBF40 = (uint64_t)UIFontTextStyleSubheadline;
  unk_3FBF48 = 0x8000;
  qword_3FBF58 = 0;
  qword_3FBF60 = 0;
  qword_3FBF50 = 0;
  word_3FBF68 = 256;
  return UIFontTextStyleSubheadline;
}

UIFontTextStyle sub_140B0C()
{
  qword_3FBF70 = 0xD000000000000013;
  *(_QWORD *)algn_3FBF78 = 0x800000000030FFD0;
  qword_3FBF80 = (uint64_t)sub_140254;
  unk_3FBF88 = 0;
  qword_3FBF90 = *(_QWORD *)&UIFontWeightRegular;
  qword_3FBF98 = 2;
  qword_3FBFA0 = (uint64_t)UIFontTextStyleSubheadline;
  unk_3FBFA8 = 0x8000;
  qword_3FBFB8 = 0;
  qword_3FBFC0 = 0;
  qword_3FBFB0 = 0;
  word_3FBFC8 = 256;
  return UIFontTextStyleSubheadline;
}

UIFontTextStyle sub_140B78()
{
  qword_3FBFD0 = 0xD000000000000013;
  *(_QWORD *)algn_3FBFD8 = 0x800000000030FFD0;
  qword_3FBFE0 = (uint64_t)sub_140BE4;
  unk_3FBFE8 = 0;
  qword_3FBFF0 = *(_QWORD *)&UIFontWeightHeavy;
  unk_3FBFF8 = 2;
  qword_3FC000 = (uint64_t)UIFontTextStyleBody;
  unk_3FC008 = 32770;
  qword_3FC018 = 0;
  qword_3FC020 = 0;
  qword_3FC010 = 0;
  word_3FC028 = 256;
  return UIFontTextStyleBody;
}

double sub_140BE4()
{
  return 13.0;
}

uint64_t sub_140BEC()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF538 != -1)
    swift_once(&qword_3CF538, sub_1402B4);
  sub_143650((uint64_t)&xmmword_3FBA90, (uint64_t)v1);
  sub_143698((uint64_t)v1);
  if (qword_3CF4F0 != -1)
    swift_once(&qword_3CF4F0, sub_13FF60);
  sub_143650((uint64_t)&qword_3FB730, (uint64_t)v2);
  sub_143698((uint64_t)v2);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FC030);
}

uint64_t sub_140C98()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF518 != -1)
    swift_once(&qword_3CF518, sub_14013C);
  sub_143650((uint64_t)&xmmword_3FB910, (uint64_t)v1);
  sub_143698((uint64_t)v1);
  if (qword_3CF4A0 != -1)
    swift_once(&qword_3CF4A0, sub_13FBA0);
  sub_143650((uint64_t)&qword_3FB370, (uint64_t)v2);
  sub_143698((uint64_t)v2);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FC090);
}

uint64_t sub_140D44()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF528 != -1)
    swift_once(&qword_3CF528, sub_1401F8);
  sub_143650((uint64_t)&xmmword_3FB9D0, (uint64_t)v1);
  sub_143698((uint64_t)v1);
  if (qword_3CF4C8 != -1)
    swift_once(&qword_3CF4C8, sub_13FD80);
  sub_143650((uint64_t)&qword_3FB550, (uint64_t)v2);
  sub_143698((uint64_t)v2);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FC0F0);
}

uint64_t sub_140DF0()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF528 != -1)
    swift_once(&qword_3CF528, sub_1401F8);
  sub_143650((uint64_t)&xmmword_3FB9D0, (uint64_t)v1);
  sub_143698((uint64_t)v1);
  if (qword_3CF4D0 != -1)
    swift_once(&qword_3CF4D0, sub_13FDE0);
  sub_143650((uint64_t)&qword_3FB5B0, (uint64_t)v2);
  sub_143698((uint64_t)v2);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FC150);
}

uint64_t sub_140E9C()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF528 != -1)
    swift_once(&qword_3CF528, sub_1401F8);
  sub_143650((uint64_t)&xmmword_3FB9D0, (uint64_t)v1);
  sub_143698((uint64_t)v1);
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  sub_143650((uint64_t)&qword_3FB490, (uint64_t)v2);
  sub_143698((uint64_t)v2);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FC1B0);
}

void sub_140F48()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  char v23;

  if (qword_3CF520 != -1)
    swift_once(&qword_3CF520, sub_1401A0);
  v0 = xmmword_3FB970;
  v1 = qword_3FB980;
  v2 = qword_3FB988;
  v4 = qword_3FB990;
  v3 = byte_3FB998[0];
  v5 = qword_3FB9B0;
  v6 = qword_3FB9B8;
  v7 = qword_3FB9C0;
  v8 = word_3FB9C8;
  if (HIBYTE(word_3FB9C8) == 1)
  {
    v21 = (void *)xmmword_3FB970;
    v22 = qword_3FB9A8;
    v23 = byte_3FB998[0];
    v9 = (void *)qword_3FB9A0;
    sub_DDA0((void *)xmmword_3FB970, *((uint64_t *)&xmmword_3FB970 + 1), qword_3FB980, qword_3FB988, qword_3FB990, byte_3FB998[0], (void *)qword_3FB9A0, qword_3FB9A8, qword_3FB9B0, qword_3FB9B8, qword_3FB9C0, word_3FB9C8, SHIBYTE(word_3FB9C8));
    v10 = UIFontTextStyleBody;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v23);
    sub_DE20(v9, v22, v5, v6, v7, v8);
    sub_DD48(v9, v22, v5, v6, v7, v8);
    v20 = v8;
    v19 = v7;
    v11 = (uint64_t)v21;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v23;
    sub_DCC8(v21, *((uint64_t *)&v0 + 1), v14, v2, v4, v23, v17, v22, v5, v6, v19, v20, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FB970 + 1);
    v11 = xmmword_3FB970;
    v13 = qword_3FB980;
    v15 = qword_3FB988;
    v16 = qword_3FB990;
    sub_DDA0((void *)xmmword_3FB970, *((uint64_t *)&xmmword_3FB970 + 1), qword_3FB980, qword_3FB988, qword_3FB990, byte_3FB998[0], (void *)qword_3FB9A0, qword_3FB9A8, qword_3FB9B0, qword_3FB9B8, qword_3FB9C0, word_3FB9C8, 0);
    v18 = UIFontTextStyleBody;
  }
  qword_3FC210 = v11;
  *(_QWORD *)algn_3FC218 = v12;
  qword_3FC220 = v13;
  unk_3FC228 = v15;
  qword_3FC230 = v16;
  unk_3FC238 = v3;
  qword_3FC240 = (uint64_t)UIFontTextStyleBody;
  unk_3FC248 = 32770;
  qword_3FC258 = 0;
  qword_3FC260 = 0;
  qword_3FC250 = 0;
  word_3FC268 = 256;
}

id sub_141154()
{
  if (qword_3CF5B0 != -1)
    swift_once(&qword_3CF5B0, sub_140BEC);
  qword_3FC270 = qword_3FC030;
  *(_QWORD *)algn_3FC278 = *(_QWORD *)algn_3FC038;
  qword_3FC280 = qword_3FC040;
  unk_3FC288 = qword_3FC048;
  qword_3FC290 = qword_3FC050;
  unk_3FC298 = *(_QWORD *)byte_3FC058;
  qword_3FC2A0 = qword_3FC060;
  unk_3FC2A8 = qword_3FC068;
  qword_3FC2B0 = qword_3FC070;
  unk_3FC2B8 = qword_3FC078;
  qword_3FC2C0 = qword_3FC080;
  word_3FC2C8 = word_3FC088;
  return sub_DDA0((void *)qword_3FC030, *(uint64_t *)algn_3FC038, qword_3FC040, qword_3FC048, qword_3FC050, byte_3FC058[0], (void *)qword_3FC060, qword_3FC068, qword_3FC070, qword_3FC078, qword_3FC080, word_3FC088, SHIBYTE(word_3FC088));
}

double sub_1411F8()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  double result;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  char v24;

  if (qword_3CF538 != -1)
    swift_once(&qword_3CF538, sub_1402B4);
  v0 = xmmword_3FBA90;
  v1 = qword_3FBAA0;
  v2 = qword_3FBAA8;
  v4 = qword_3FBAB0;
  v3 = byte_3FBAB8[0];
  v5 = qword_3FBAD0;
  v6 = qword_3FBAD8;
  v7 = qword_3FBAE0;
  v8 = word_3FBAE8;
  if (HIBYTE(word_3FBAE8) == 1)
  {
    v22 = (void *)xmmword_3FBA90;
    v23 = qword_3FBAC8;
    v24 = byte_3FBAB8[0];
    v9 = (void *)qword_3FBAC0;
    sub_DDA0((void *)xmmword_3FBA90, *((uint64_t *)&xmmword_3FBA90 + 1), qword_3FBAA0, qword_3FBAA8, qword_3FBAB0, byte_3FBAB8[0], (void *)qword_3FBAC0, qword_3FBAC8, qword_3FBAD0, qword_3FBAD8, qword_3FBAE0, word_3FBAE8, SHIBYTE(word_3FBAE8));
    v10 = UIFontTextStyleSubheadline;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v24);
    sub_DE20(v9, v23, v5, v6, v7, v8);
    sub_DD48(v9, v23, v5, v6, v7, v8);
    v21 = v8;
    v20 = v7;
    v11 = (uint64_t)v22;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v24;
    sub_DCC8(v22, *((uint64_t *)&v0 + 1), v14, v2, v4, v24, v17, v23, v5, v6, v20, v21, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FBA90 + 1);
    v11 = xmmword_3FBA90;
    v13 = qword_3FBAA0;
    v15 = qword_3FBAA8;
    v16 = qword_3FBAB0;
    sub_DDA0((void *)xmmword_3FBA90, *((uint64_t *)&xmmword_3FBA90 + 1), qword_3FBAA0, qword_3FBAA8, qword_3FBAB0, byte_3FBAB8[0], (void *)qword_3FBAC0, qword_3FBAC8, qword_3FBAD0, qword_3FBAD8, qword_3FBAE0, word_3FBAE8, 0);
    v18 = UIFontTextStyleSubheadline;
  }
  qword_3FC2D0 = v11;
  qword_3FC2D8 = v12;
  qword_3FC2E0 = v13;
  qword_3FC2E8 = v15;
  qword_3FC2F0 = v16;
  qword_3FC2F8 = v3;
  qword_3FC300 = (uint64_t)UIFontTextStyleSubheadline;
  result = 0.0;
  *(_OWORD *)&qword_3FC308 = 0u;
  *(_OWORD *)&qword_3FC318 = 0u;
  word_3FC328 = 256;
  return result;
}

void sub_141404()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  char v23;

  if (qword_3CF538 != -1)
    swift_once(&qword_3CF538, sub_1402B4);
  v0 = xmmword_3FBA90;
  v1 = qword_3FBAA0;
  v2 = qword_3FBAA8;
  v4 = qword_3FBAB0;
  v3 = byte_3FBAB8[0];
  v5 = qword_3FBAD0;
  v6 = qword_3FBAD8;
  v7 = qword_3FBAE0;
  v8 = word_3FBAE8;
  if (HIBYTE(word_3FBAE8) == 1)
  {
    v21 = (void *)xmmword_3FBA90;
    v22 = qword_3FBAC8;
    v23 = byte_3FBAB8[0];
    v9 = (void *)qword_3FBAC0;
    sub_DDA0((void *)xmmword_3FBA90, *((uint64_t *)&xmmword_3FBA90 + 1), qword_3FBAA0, qword_3FBAA8, qword_3FBAB0, byte_3FBAB8[0], (void *)qword_3FBAC0, qword_3FBAC8, qword_3FBAD0, qword_3FBAD8, qword_3FBAE0, word_3FBAE8, SHIBYTE(word_3FBAE8));
    v10 = UIFontTextStyleCaption2;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v23);
    sub_DE20(v9, v22, v5, v6, v7, v8);
    sub_DD48(v9, v22, v5, v6, v7, v8);
    v20 = v8;
    v19 = v7;
    v11 = (uint64_t)v21;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v23;
    sub_DCC8(v21, *((uint64_t *)&v0 + 1), v14, v2, v4, v23, v17, v22, v5, v6, v19, v20, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FBA90 + 1);
    v11 = xmmword_3FBA90;
    v13 = qword_3FBAA0;
    v15 = qword_3FBAA8;
    v16 = qword_3FBAB0;
    sub_DDA0((void *)xmmword_3FBA90, *((uint64_t *)&xmmword_3FBA90 + 1), qword_3FBAA0, qword_3FBAA8, qword_3FBAB0, byte_3FBAB8[0], (void *)qword_3FBAC0, qword_3FBAC8, qword_3FBAD0, qword_3FBAD8, qword_3FBAE0, word_3FBAE8, 0);
    v18 = UIFontTextStyleCaption2;
  }
  qword_3FC330 = v11;
  *(_QWORD *)algn_3FC338 = v12;
  qword_3FC340 = v13;
  unk_3FC348 = v15;
  qword_3FC350 = v16;
  unk_3FC358 = v3;
  qword_3FC360 = (uint64_t)UIFontTextStyleCaption2;
  unk_3FC368 = 2;
  qword_3FC378 = 0;
  qword_3FC380 = 0;
  qword_3FC370 = 0;
  word_3FC388 = 256;
}

void sub_141610()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  char v23;

  if (qword_3CF508 != -1)
    swift_once(&qword_3CF508, sub_140080);
  v0 = xmmword_3FB850;
  v1 = qword_3FB860;
  v2 = qword_3FB868;
  v4 = qword_3FB870;
  v3 = byte_3FB878[0];
  v5 = qword_3FB890;
  v6 = qword_3FB898;
  v7 = qword_3FB8A0;
  v8 = word_3FB8A8;
  if (HIBYTE(word_3FB8A8) == 1)
  {
    v21 = (void *)xmmword_3FB850;
    v22 = qword_3FB888;
    v23 = byte_3FB878[0];
    v9 = (void *)qword_3FB880;
    sub_DDA0((void *)xmmword_3FB850, *((uint64_t *)&xmmword_3FB850 + 1), qword_3FB860, qword_3FB868, qword_3FB870, byte_3FB878[0], (void *)qword_3FB880, qword_3FB888, qword_3FB890, qword_3FB898, qword_3FB8A0, word_3FB8A8, SHIBYTE(word_3FB8A8));
    v10 = UIFontTextStyleTitle2;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v23);
    sub_DE20(v9, v22, v5, v6, v7, v8);
    sub_DD48(v9, v22, v5, v6, v7, v8);
    v20 = v8;
    v19 = v7;
    v11 = (uint64_t)v21;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v23;
    sub_DCC8(v21, *((uint64_t *)&v0 + 1), v14, v2, v4, v23, v17, v22, v5, v6, v19, v20, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FB850 + 1);
    v11 = xmmword_3FB850;
    v13 = qword_3FB860;
    v15 = qword_3FB868;
    v16 = qword_3FB870;
    sub_DDA0((void *)xmmword_3FB850, *((uint64_t *)&xmmword_3FB850 + 1), qword_3FB860, qword_3FB868, qword_3FB870, byte_3FB878[0], (void *)qword_3FB880, qword_3FB888, qword_3FB890, qword_3FB898, qword_3FB8A0, word_3FB8A8, 0);
    v18 = UIFontTextStyleTitle2;
  }
  qword_3FC390 = v11;
  *(_QWORD *)algn_3FC398 = v12;
  qword_3FC3A0 = v13;
  unk_3FC3A8 = v15;
  qword_3FC3B0 = v16;
  unk_3FC3B8 = v3;
  qword_3FC3C0 = (uint64_t)UIFontTextStyleTitle2;
  unk_3FC3C8 = 0x8000;
  qword_3FC3D8 = 0;
  qword_3FC3E0 = 0;
  qword_3FC3D0 = 0;
  word_3FC3E8 = 256;
}

void sub_14181C()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  char v23;

  if (qword_3CF508 != -1)
    swift_once(&qword_3CF508, sub_140080);
  v0 = xmmword_3FB850;
  v1 = qword_3FB860;
  v2 = qword_3FB868;
  v4 = qword_3FB870;
  v3 = byte_3FB878[0];
  v5 = qword_3FB890;
  v6 = qword_3FB898;
  v7 = qword_3FB8A0;
  v8 = word_3FB8A8;
  if (HIBYTE(word_3FB8A8) == 1)
  {
    v21 = (void *)xmmword_3FB850;
    v22 = qword_3FB888;
    v23 = byte_3FB878[0];
    v9 = (void *)qword_3FB880;
    sub_DDA0((void *)xmmword_3FB850, *((uint64_t *)&xmmword_3FB850 + 1), qword_3FB860, qword_3FB868, qword_3FB870, byte_3FB878[0], (void *)qword_3FB880, qword_3FB888, qword_3FB890, qword_3FB898, qword_3FB8A0, word_3FB8A8, SHIBYTE(word_3FB8A8));
    v10 = UIFontTextStyleTitle2;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v23);
    sub_DE20(v9, v22, v5, v6, v7, v8);
    sub_DD48(v9, v22, v5, v6, v7, v8);
    v20 = v8;
    v19 = v7;
    v11 = (uint64_t)v21;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v23;
    sub_DCC8(v21, *((uint64_t *)&v0 + 1), v14, v2, v4, v23, v17, v22, v5, v6, v19, v20, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FB850 + 1);
    v11 = xmmword_3FB850;
    v13 = qword_3FB860;
    v15 = qword_3FB868;
    v16 = qword_3FB870;
    sub_DDA0((void *)xmmword_3FB850, *((uint64_t *)&xmmword_3FB850 + 1), qword_3FB860, qword_3FB868, qword_3FB870, byte_3FB878[0], (void *)qword_3FB880, qword_3FB888, qword_3FB890, qword_3FB898, qword_3FB8A0, word_3FB8A8, 0);
    v18 = UIFontTextStyleTitle2;
  }
  qword_3FC3F0 = v11;
  *(_QWORD *)algn_3FC3F8 = v12;
  qword_3FC400 = v13;
  unk_3FC408 = v15;
  qword_3FC410 = v16;
  unk_3FC418 = v3;
  qword_3FC420 = (uint64_t)UIFontTextStyleTitle2;
  unk_3FC428 = 0x8000;
  qword_3FC438 = 0;
  qword_3FC440 = 0;
  qword_3FC430 = 0;
  word_3FC448 = 256;
}

void sub_141A28()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  NSString *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSString *v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  char v25;

  if (qword_3CF4A8 != -1)
    swift_once(&qword_3CF4A8, sub_13FC00);
  v0 = (void *)qword_3FB3D0;
  v1 = *(_QWORD *)algn_3FB3D8;
  v2 = qword_3FB3E0;
  v3 = qword_3FB3E8;
  v5 = qword_3FB3F0;
  v4 = qword_3FB3F8;
  v6 = qword_3FB410;
  v7 = unk_3FB418;
  v8 = qword_3FB420;
  v9 = word_3FB428;
  if (HIBYTE(word_3FB428) == 1)
  {
    v23 = (void *)qword_3FB3D0;
    v24 = *((_QWORD *)&xmmword_3FB400 + 1);
    v25 = qword_3FB3F8;
    v10 = (void *)xmmword_3FB400;
    sub_DDA0((void *)qword_3FB3D0, *(uint64_t *)algn_3FB3D8, qword_3FB3E0, qword_3FB3E8, qword_3FB3F0, qword_3FB3F8, (void *)xmmword_3FB400, *((uint64_t *)&xmmword_3FB400 + 1), qword_3FB410, unk_3FB418, qword_3FB420, word_3FB428, SHIBYTE(word_3FB428));
    v11 = UIFontTextStyleFootnote;
    sub_DE20(v0, v1, v2, v3, v5, v25);
    sub_DE20(v10, v24, v6, v7, v8, v9);
    sub_DD48(v10, v24, v6, v7, v8, v9);
    v22 = v9;
    v21 = v8;
    v12 = (uint64_t)v23;
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v2;
    v17 = v3;
    v18 = v5;
    v19 = v10;
    v4 = v25;
    sub_DCC8(v23, v14, v16, v3, v5, v25, v19, v24, v6, v7, v21, v22, 1);
  }
  else
  {
    v12 = qword_3FB3D0;
    v13 = *(_QWORD *)algn_3FB3D8;
    v15 = qword_3FB3E0;
    v17 = qword_3FB3E8;
    v18 = qword_3FB3F0;
    sub_DDA0((void *)qword_3FB3D0, *(uint64_t *)algn_3FB3D8, qword_3FB3E0, qword_3FB3E8, qword_3FB3F0, qword_3FB3F8, (void *)xmmword_3FB400, *((uint64_t *)&xmmword_3FB400 + 1), qword_3FB410, unk_3FB418, qword_3FB420, word_3FB428, 0);
    v20 = UIFontTextStyleFootnote;
  }
  qword_3FC450 = v12;
  *(_QWORD *)algn_3FC458 = v13;
  qword_3FC460 = v15;
  unk_3FC468 = v17;
  qword_3FC470 = v18;
  unk_3FC478 = v4;
  qword_3FC480 = (uint64_t)UIFontTextStyleFootnote;
  unk_3FC488 = 0x8000;
  qword_3FC498 = 0;
  qword_3FC4A0 = 0;
  qword_3FC490 = 0;
  word_3FC4A8 = 256;
}

double sub_141C34()
{
  uint64_t v0;
  double result;

  v0 = Paragraph.Style.textStyle.getter(0);
  xmmword_3FC4B0 = xmmword_2F96B0;
  qword_3FC4C0 = (uint64_t)sub_140198;
  unk_3FC4C8 = 0;
  qword_3FC4D0 = *(_QWORD *)&UIFontWeightRegular;
  qword_3FC4D8 = 2;
  qword_3FC4E0 = v0;
  result = 0.0;
  *(_OWORD *)&qword_3FC4E8 = 0u;
  *(_OWORD *)&qword_3FC4F8 = 0u;
  word_3FC508 = 256;
  return result;
}

UIFontTextStyle sub_141CA0()
{
  qword_3FC510 = 0xD000000000000015;
  *(_QWORD *)algn_3FC518 = 0x8000000000310090;
  qword_3FC520 = (uint64_t)sub_14030C;
  unk_3FC528 = 0;
  qword_3FC530 = *(_QWORD *)&UIFontWeightRegular;
  qword_3FC538 = 2;
  qword_3FC540 = (uint64_t)UIFontTextStyleSubheadline;
  unk_3FC548 = 0u;
  unk_3FC558 = 0u;
  word_3FC568 = 256;
  return UIFontTextStyleSubheadline;
}

double sub_141D0C()
{
  double result;

  qword_3FC570 = 0xD000000000000018;
  *(_QWORD *)algn_3FC578 = 0x8000000000310070;
  qword_3FC580 = (uint64_t)sub_141D60;
  unk_3FC588 = 0;
  qword_3FC590 = *(_QWORD *)&UIFontWeightBold;
  qword_3FC598 = 2;
  result = 0.0;
  xmmword_3FC5A0 = 0u;
  *(_OWORD *)&qword_3FC5B0 = 0u;
  unk_3FC5BA = 0u;
  return result;
}

double sub_141D60()
{
  return 60.0;
}

void sub_141D6C()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  char v23;

  if (qword_3CF558 != -1)
    swift_once(&qword_3CF558, sub_1403FC);
  v0 = xmmword_3FBC10;
  v1 = qword_3FBC20;
  v2 = qword_3FBC28;
  v4 = qword_3FBC30;
  v3 = byte_3FBC38;
  v5 = qword_3FBC50;
  v6 = qword_3FBC58;
  v7 = qword_3FBC60;
  v8 = byte_3FBC68;
  if (byte_3FBC69 == 1)
  {
    v21 = (void *)xmmword_3FBC10;
    v22 = *((_QWORD *)&xmmword_3FBC40 + 1);
    v23 = byte_3FBC38;
    v9 = (void *)xmmword_3FBC40;
    sub_DDA0((void *)xmmword_3FBC10, *((uint64_t *)&xmmword_3FBC10 + 1), qword_3FBC20, qword_3FBC28, qword_3FBC30, byte_3FBC38, (void *)xmmword_3FBC40, *((uint64_t *)&xmmword_3FBC40 + 1), qword_3FBC50, qword_3FBC58, qword_3FBC60, byte_3FBC68, byte_3FBC69);
    v10 = UIFontTextStyleSubheadline;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v23);
    sub_DE20(v9, v22, v5, v6, v7, v8);
    sub_DD48(v9, v22, v5, v6, v7, v8);
    v20 = v8;
    v19 = v7;
    v11 = (uint64_t)v21;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v23;
    sub_DCC8(v21, *((uint64_t *)&v0 + 1), v14, v2, v4, v23, v17, v22, v5, v6, v19, v20, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FBC10 + 1);
    v11 = xmmword_3FBC10;
    v13 = qword_3FBC20;
    v15 = qword_3FBC28;
    v16 = qword_3FBC30;
    sub_DDA0((void *)xmmword_3FBC10, *((uint64_t *)&xmmword_3FBC10 + 1), qword_3FBC20, qword_3FBC28, qword_3FBC30, byte_3FBC38, (void *)xmmword_3FBC40, *((uint64_t *)&xmmword_3FBC40 + 1), qword_3FBC50, qword_3FBC58, qword_3FBC60, byte_3FBC68, 0);
    v18 = UIFontTextStyleSubheadline;
  }
  qword_3FC5D0 = v11;
  *(_QWORD *)algn_3FC5D8 = v12;
  qword_3FC5E0 = v13;
  unk_3FC5E8 = v15;
  qword_3FC5F0 = v16;
  unk_3FC5F8 = v3;
  qword_3FC600 = (uint64_t)UIFontTextStyleSubheadline;
  unk_3FC608 = 32770;
  qword_3FC618 = 0;
  qword_3FC620 = 0;
  qword_3FC610 = 0;
  word_3FC628 = 256;
}

double sub_141F78()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  double result;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  char v24;

  if (qword_3CF528 != -1)
    swift_once(&qword_3CF528, sub_1401F8);
  v0 = xmmword_3FB9D0;
  v1 = qword_3FB9E0;
  v2 = qword_3FB9E8;
  v4 = qword_3FB9F0;
  v3 = byte_3FB9F8[0];
  v5 = qword_3FBA10;
  v6 = qword_3FBA18;
  v7 = qword_3FBA20;
  v8 = word_3FBA28;
  if (HIBYTE(word_3FBA28) == 1)
  {
    v22 = (void *)xmmword_3FB9D0;
    v23 = qword_3FBA08;
    v24 = byte_3FB9F8[0];
    v9 = (void *)qword_3FBA00;
    sub_DDA0((void *)xmmword_3FB9D0, *((uint64_t *)&xmmword_3FB9D0 + 1), qword_3FB9E0, qword_3FB9E8, qword_3FB9F0, byte_3FB9F8[0], (void *)qword_3FBA00, qword_3FBA08, qword_3FBA10, qword_3FBA18, qword_3FBA20, word_3FBA28, SHIBYTE(word_3FBA28));
    v10 = UIFontTextStyleSubheadline;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v24);
    sub_DE20(v9, v23, v5, v6, v7, v8);
    sub_DD48(v9, v23, v5, v6, v7, v8);
    v21 = v8;
    v20 = v7;
    v11 = (uint64_t)v22;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v24;
    sub_DCC8(v22, *((uint64_t *)&v0 + 1), v14, v2, v4, v24, v17, v23, v5, v6, v20, v21, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FB9D0 + 1);
    v11 = xmmword_3FB9D0;
    v13 = qword_3FB9E0;
    v15 = qword_3FB9E8;
    v16 = qword_3FB9F0;
    sub_DDA0((void *)xmmword_3FB9D0, *((uint64_t *)&xmmword_3FB9D0 + 1), qword_3FB9E0, qword_3FB9E8, qword_3FB9F0, byte_3FB9F8[0], (void *)qword_3FBA00, qword_3FBA08, qword_3FBA10, qword_3FBA18, qword_3FBA20, word_3FBA28, 0);
    v18 = UIFontTextStyleSubheadline;
  }
  qword_3FC630 = v11;
  *(_QWORD *)algn_3FC638 = v12;
  qword_3FC640 = v13;
  unk_3FC648 = v15;
  qword_3FC650 = v16;
  unk_3FC658 = v3;
  qword_3FC660 = (uint64_t)UIFontTextStyleSubheadline;
  result = 0.0;
  unk_3FC668 = 0u;
  unk_3FC678 = 0u;
  word_3FC688 = 256;
  return result;
}

double sub_142184()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  double result;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  char v24;

  if (qword_3CF528 != -1)
    swift_once(&qword_3CF528, sub_1401F8);
  v0 = xmmword_3FB9D0;
  v1 = qword_3FB9E0;
  v2 = qword_3FB9E8;
  v4 = qword_3FB9F0;
  v3 = byte_3FB9F8[0];
  v5 = qword_3FBA10;
  v6 = qword_3FBA18;
  v7 = qword_3FBA20;
  v8 = word_3FBA28;
  if (HIBYTE(word_3FBA28) == 1)
  {
    v22 = (void *)xmmword_3FB9D0;
    v23 = qword_3FBA08;
    v24 = byte_3FB9F8[0];
    v9 = (void *)qword_3FBA00;
    sub_DDA0((void *)xmmword_3FB9D0, *((uint64_t *)&xmmword_3FB9D0 + 1), qword_3FB9E0, qword_3FB9E8, qword_3FB9F0, byte_3FB9F8[0], (void *)qword_3FBA00, qword_3FBA08, qword_3FBA10, qword_3FBA18, qword_3FBA20, word_3FBA28, SHIBYTE(word_3FBA28));
    v10 = UIFontTextStyleSubheadline;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v24);
    sub_DE20(v9, v23, v5, v6, v7, v8);
    sub_DD48(v9, v23, v5, v6, v7, v8);
    v21 = v8;
    v20 = v7;
    v11 = (uint64_t)v22;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v24;
    sub_DCC8(v22, *((uint64_t *)&v0 + 1), v14, v2, v4, v24, v17, v23, v5, v6, v20, v21, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FB9D0 + 1);
    v11 = xmmword_3FB9D0;
    v13 = qword_3FB9E0;
    v15 = qword_3FB9E8;
    v16 = qword_3FB9F0;
    sub_DDA0((void *)xmmword_3FB9D0, *((uint64_t *)&xmmword_3FB9D0 + 1), qword_3FB9E0, qword_3FB9E8, qword_3FB9F0, byte_3FB9F8[0], (void *)qword_3FBA00, qword_3FBA08, qword_3FBA10, qword_3FBA18, qword_3FBA20, word_3FBA28, 0);
    v18 = UIFontTextStyleSubheadline;
  }
  qword_3FC690 = v11;
  *(_QWORD *)algn_3FC698 = v12;
  qword_3FC6A0 = v13;
  unk_3FC6A8 = v15;
  qword_3FC6B0 = v16;
  unk_3FC6B8 = v3;
  qword_3FC6C0 = (uint64_t)UIFontTextStyleSubheadline;
  result = 0.0;
  unk_3FC6C8 = 0u;
  unk_3FC6D8 = 0u;
  word_3FC6E8 = 256;
  return result;
}

double sub_142390()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  double result;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  char v24;

  if (qword_3CF550 != -1)
    swift_once(&qword_3CF550, sub_1403B0);
  v0 = xmmword_3FBBB0;
  v1 = qword_3FBBC0;
  v2 = qword_3FBBC8;
  v4 = qword_3FBBD0;
  v3 = byte_3FBBD8;
  v5 = qword_3FBBF0;
  v6 = qword_3FBBF8;
  v7 = qword_3FBC00;
  v8 = byte_3FBC08;
  if (byte_3FBC09 == 1)
  {
    v22 = (void *)xmmword_3FBBB0;
    v23 = *((_QWORD *)&xmmword_3FBBE0 + 1);
    v24 = byte_3FBBD8;
    v9 = (void *)xmmword_3FBBE0;
    sub_DDA0((void *)xmmword_3FBBB0, *((uint64_t *)&xmmword_3FBBB0 + 1), qword_3FBBC0, qword_3FBBC8, qword_3FBBD0, byte_3FBBD8, (void *)xmmword_3FBBE0, *((uint64_t *)&xmmword_3FBBE0 + 1), qword_3FBBF0, qword_3FBBF8, qword_3FBC00, byte_3FBC08, byte_3FBC09);
    v10 = UIFontTextStyleBody;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v24);
    sub_DE20(v9, v23, v5, v6, v7, v8);
    sub_DD48(v9, v23, v5, v6, v7, v8);
    v21 = v8;
    v20 = v7;
    v11 = (uint64_t)v22;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v24;
    sub_DCC8(v22, *((uint64_t *)&v0 + 1), v14, v2, v4, v24, v17, v23, v5, v6, v20, v21, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FBBB0 + 1);
    v11 = xmmword_3FBBB0;
    v13 = qword_3FBBC0;
    v15 = qword_3FBBC8;
    v16 = qword_3FBBD0;
    sub_DDA0((void *)xmmword_3FBBB0, *((uint64_t *)&xmmword_3FBBB0 + 1), qword_3FBBC0, qword_3FBBC8, qword_3FBBD0, byte_3FBBD8, (void *)xmmword_3FBBE0, *((uint64_t *)&xmmword_3FBBE0 + 1), qword_3FBBF0, qword_3FBBF8, qword_3FBC00, byte_3FBC08, 0);
    v18 = UIFontTextStyleBody;
  }
  qword_3FC6F0 = v11;
  *(_QWORD *)algn_3FC6F8 = v12;
  qword_3FC700 = v13;
  unk_3FC708 = v15;
  qword_3FC710 = v16;
  unk_3FC718 = v3;
  qword_3FC720 = (uint64_t)UIFontTextStyleBody;
  result = 0.0;
  unk_3FC728 = 0u;
  unk_3FC738 = 0u;
  word_3FC748 = 256;
  return result;
}

double sub_14259C()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  double result;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  char v24;

  if (qword_3CF550 != -1)
    swift_once(&qword_3CF550, sub_1403B0);
  v0 = xmmword_3FBBB0;
  v1 = qword_3FBBC0;
  v2 = qword_3FBBC8;
  v4 = qword_3FBBD0;
  v3 = byte_3FBBD8;
  v5 = qword_3FBBF0;
  v6 = qword_3FBBF8;
  v7 = qword_3FBC00;
  v8 = byte_3FBC08;
  if (byte_3FBC09 == 1)
  {
    v22 = (void *)xmmword_3FBBB0;
    v23 = *((_QWORD *)&xmmword_3FBBE0 + 1);
    v24 = byte_3FBBD8;
    v9 = (void *)xmmword_3FBBE0;
    sub_DDA0((void *)xmmword_3FBBB0, *((uint64_t *)&xmmword_3FBBB0 + 1), qword_3FBBC0, qword_3FBBC8, qword_3FBBD0, byte_3FBBD8, (void *)xmmword_3FBBE0, *((uint64_t *)&xmmword_3FBBE0 + 1), qword_3FBBF0, qword_3FBBF8, qword_3FBC00, byte_3FBC08, byte_3FBC09);
    v10 = UIFontTextStyleBody;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v24);
    sub_DE20(v9, v23, v5, v6, v7, v8);
    sub_DD48(v9, v23, v5, v6, v7, v8);
    v21 = v8;
    v20 = v7;
    v11 = (uint64_t)v22;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v24;
    sub_DCC8(v22, *((uint64_t *)&v0 + 1), v14, v2, v4, v24, v17, v23, v5, v6, v20, v21, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FBBB0 + 1);
    v11 = xmmword_3FBBB0;
    v13 = qword_3FBBC0;
    v15 = qword_3FBBC8;
    v16 = qword_3FBBD0;
    sub_DDA0((void *)xmmword_3FBBB0, *((uint64_t *)&xmmword_3FBBB0 + 1), qword_3FBBC0, qword_3FBBC8, qword_3FBBD0, byte_3FBBD8, (void *)xmmword_3FBBE0, *((uint64_t *)&xmmword_3FBBE0 + 1), qword_3FBBF0, qword_3FBBF8, qword_3FBC00, byte_3FBC08, 0);
    v18 = UIFontTextStyleBody;
  }
  qword_3FC750 = v11;
  *(_QWORD *)algn_3FC758 = v12;
  qword_3FC760 = v13;
  unk_3FC768 = v15;
  qword_3FC770 = v16;
  unk_3FC778 = v3;
  qword_3FC780 = (uint64_t)UIFontTextStyleBody;
  result = 0.0;
  unk_3FC788 = 0u;
  unk_3FC798 = 0u;
  word_3FC7A8 = 256;
  return result;
}

void sub_1427A8()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  UIFontWeight v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  if (qword_3CF550 != -1)
    swift_once(&qword_3CF550, sub_1403B0);
  v0 = xmmword_3FBBB0;
  v1 = qword_3FBBC0;
  v2 = qword_3FBBC8;
  v3 = qword_3FBBD0;
  v4 = byte_3FBBD8;
  v5 = UIFontWeightRegular;
  if (byte_3FBC09 == 1)
  {
    v6 = qword_3FBBF8;
    v14 = qword_3FBC00;
    v7 = *((_QWORD *)&xmmword_3FBBE0 + 1);
    v8 = qword_3FBBF0;
    v11 = *((_QWORD *)&xmmword_3FBBE0 + 1);
    v12 = qword_3FBBF8;
    v9 = (void *)xmmword_3FBBE0;
    v13 = byte_3FBC08;
    sub_DE20((id)xmmword_3FBBB0, *((uint64_t *)&xmmword_3FBBB0 + 1), qword_3FBBC0, qword_3FBBC8, qword_3FBBD0, byte_3FBBD8);
    sub_DE20(v9, v7, v8, v6, v14, v13);
    v10 = v9;
    v5 = UIFontWeightRegular;
    sub_DD48(v10, v11, v8, v12, v14, v13);
  }
  else
  {
    sub_DE20((id)xmmword_3FBBB0, *((uint64_t *)&xmmword_3FBBB0 + 1), qword_3FBBC0, qword_3FBBC8, qword_3FBBD0, byte_3FBBD8);
  }
  xmmword_3FC7B0 = v0;
  qword_3FC7C0 = v1;
  unk_3FC7C8 = v2;
  qword_3FC7D0 = v3;
  unk_3FC7D8 = v4;
  qword_3FC7E0 = 0xD000000000000012;
  unk_3FC7E8 = 0x8000000000310050;
  qword_3FC7F0 = (uint64_t)sub_140198;
  unk_3FC7F8 = 0;
  qword_3FC800 = *(_QWORD *)&v5;
  word_3FC808 = 258;
}

void sub_142928()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  UIFontWeight v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  if (qword_3CF558 != -1)
    swift_once(&qword_3CF558, sub_1403FC);
  v0 = xmmword_3FBC10;
  v1 = qword_3FBC20;
  v2 = qword_3FBC28;
  v3 = qword_3FBC30;
  v4 = byte_3FBC38;
  v5 = UIFontWeightBold;
  if (byte_3FBC69 == 1)
  {
    v6 = qword_3FBC58;
    v14 = qword_3FBC60;
    v7 = *((_QWORD *)&xmmword_3FBC40 + 1);
    v8 = qword_3FBC50;
    v11 = *((_QWORD *)&xmmword_3FBC40 + 1);
    v12 = qword_3FBC58;
    v9 = (void *)xmmword_3FBC40;
    v13 = byte_3FBC68;
    sub_DE20((id)xmmword_3FBC10, *((uint64_t *)&xmmword_3FBC10 + 1), qword_3FBC20, qword_3FBC28, qword_3FBC30, byte_3FBC38);
    sub_DE20(v9, v7, v8, v6, v14, v13);
    v10 = v9;
    v5 = UIFontWeightBold;
    sub_DD48(v10, v11, v8, v12, v14, v13);
  }
  else
  {
    sub_DE20((id)xmmword_3FBC10, *((uint64_t *)&xmmword_3FBC10 + 1), qword_3FBC20, qword_3FBC28, qword_3FBC30, byte_3FBC38);
  }
  xmmword_3FC810 = v0;
  qword_3FC820 = v1;
  unk_3FC828 = v2;
  qword_3FC830 = v3;
  unk_3FC838 = v4;
  qword_3FC840 = 0xD000000000000012;
  unk_3FC848 = 0x8000000000310030;
  qword_3FC850 = (uint64_t)sub_140198;
  unk_3FC858 = 0;
  qword_3FC860 = *(_QWORD *)&v5;
  word_3FC868 = 258;
}

void sub_142AA8()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  char v23;

  if (qword_3CF510 != -1)
    swift_once(&qword_3CF510, sub_1400E4);
  v0 = xmmword_3FB8B0;
  v1 = qword_3FB8C0;
  v2 = qword_3FB8C8;
  v4 = qword_3FB8D0;
  v3 = byte_3FB8D8[0];
  v5 = qword_3FB8F0;
  v6 = qword_3FB8F8;
  v7 = qword_3FB900;
  v8 = word_3FB908;
  if (HIBYTE(word_3FB908) == 1)
  {
    v21 = (void *)xmmword_3FB8B0;
    v22 = qword_3FB8E8;
    v23 = byte_3FB8D8[0];
    v9 = (void *)qword_3FB8E0;
    sub_DDA0((void *)xmmword_3FB8B0, *((uint64_t *)&xmmword_3FB8B0 + 1), qword_3FB8C0, qword_3FB8C8, qword_3FB8D0, byte_3FB8D8[0], (void *)qword_3FB8E0, qword_3FB8E8, qword_3FB8F0, qword_3FB8F8, qword_3FB900, word_3FB908, SHIBYTE(word_3FB908));
    v10 = UIFontTextStyleTitle1;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v23);
    sub_DE20(v9, v22, v5, v6, v7, v8);
    sub_DD48(v9, v22, v5, v6, v7, v8);
    v20 = v8;
    v19 = v7;
    v11 = (uint64_t)v21;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v23;
    sub_DCC8(v21, *((uint64_t *)&v0 + 1), v14, v2, v4, v23, v17, v22, v5, v6, v19, v20, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FB8B0 + 1);
    v11 = xmmword_3FB8B0;
    v13 = qword_3FB8C0;
    v15 = qword_3FB8C8;
    v16 = qword_3FB8D0;
    sub_DDA0((void *)xmmword_3FB8B0, *((uint64_t *)&xmmword_3FB8B0 + 1), qword_3FB8C0, qword_3FB8C8, qword_3FB8D0, byte_3FB8D8[0], (void *)qword_3FB8E0, qword_3FB8E8, qword_3FB8F0, qword_3FB8F8, qword_3FB900, word_3FB908, 0);
    v18 = UIFontTextStyleTitle1;
  }
  qword_3FC870 = v11;
  *(_QWORD *)algn_3FC878 = v12;
  qword_3FC880 = v13;
  unk_3FC888 = v15;
  qword_3FC890 = v16;
  unk_3FC898 = v3;
  qword_3FC8A0 = (uint64_t)UIFontTextStyleTitle1;
  unk_3FC8A8 = 2;
  qword_3FC8B8 = 0;
  qword_3FC8C0 = 0;
  qword_3FC8B0 = 0;
  word_3FC8C8 = 256;
}

double sub_142CB4()
{
  __int128 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString *v18;
  double result;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  char v24;

  if (qword_3CF518 != -1)
    swift_once(&qword_3CF518, sub_14013C);
  v0 = xmmword_3FB910;
  v1 = qword_3FB920;
  v2 = qword_3FB928;
  v4 = qword_3FB930;
  v3 = qword_3FB938;
  v5 = qword_3FB950;
  v6 = qword_3FB958;
  v7 = qword_3FB960;
  v8 = word_3FB968;
  if (HIBYTE(word_3FB968) == 1)
  {
    v22 = (void *)xmmword_3FB910;
    v23 = qword_3FB948;
    v24 = qword_3FB938;
    v9 = (void *)qword_3FB940;
    sub_DDA0((void *)xmmword_3FB910, *((uint64_t *)&xmmword_3FB910 + 1), qword_3FB920, qword_3FB928, qword_3FB930, qword_3FB938, (void *)qword_3FB940, qword_3FB948, qword_3FB950, qword_3FB958, qword_3FB960, word_3FB968, SHIBYTE(word_3FB968));
    v10 = UIFontTextStyleSubheadline;
    sub_DE20((id)v0, *((uint64_t *)&v0 + 1), v1, v2, v4, v24);
    sub_DE20(v9, v23, v5, v6, v7, v8);
    sub_DD48(v9, v23, v5, v6, v7, v8);
    v21 = v8;
    v20 = v7;
    v11 = (uint64_t)v22;
    v12 = *((_QWORD *)&v0 + 1);
    v13 = v1;
    v14 = v1;
    v15 = v2;
    v16 = v4;
    v17 = v9;
    v3 = v24;
    sub_DCC8(v22, *((uint64_t *)&v0 + 1), v14, v2, v4, v24, v17, v23, v5, v6, v20, v21, 1);
  }
  else
  {
    v12 = *((_QWORD *)&xmmword_3FB910 + 1);
    v11 = xmmword_3FB910;
    v13 = qword_3FB920;
    v15 = qword_3FB928;
    v16 = qword_3FB930;
    sub_DDA0((void *)xmmword_3FB910, *((uint64_t *)&xmmword_3FB910 + 1), qword_3FB920, qword_3FB928, qword_3FB930, qword_3FB938, (void *)qword_3FB940, qword_3FB948, qword_3FB950, qword_3FB958, qword_3FB960, word_3FB968, 0);
    v18 = UIFontTextStyleSubheadline;
  }
  qword_3FC8D0 = v11;
  *(_QWORD *)algn_3FC8D8 = v12;
  qword_3FC8E0 = v13;
  unk_3FC8E8 = v15;
  qword_3FC8F0 = v16;
  unk_3FC8F8 = v3;
  qword_3FC900 = (uint64_t)UIFontTextStyleSubheadline;
  result = 0.0;
  unk_3FC908 = 0u;
  unk_3FC918 = 0u;
  word_3FC928 = 256;
  return result;
}

UIFontTextStyle sub_142EC0()
{
  qword_3FC930 = (uint64_t)UIFontTextStyleFootnote;
  *(_OWORD *)algn_3FC938 = 0u;
  unk_3FC948 = 0u;
  unk_3FC958 = 0u;
  unk_3FC968 = 0u;
  unk_3FC978 = 0u;
  word_3FC988 = 0;
  return UIFontTextStyleFootnote;
}

uint64_t sub_142EF8()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF510 != -1)
    swift_once(&qword_3CF510, sub_1400E4);
  sub_143650((uint64_t)&xmmword_3FB8B0, (uint64_t)v1);
  sub_143698((uint64_t)v1);
  if (qword_3CF568 != -1)
    swift_once(&qword_3CF568, sub_1404E4);
  sub_143650((uint64_t)&qword_3FBCD0, (uint64_t)v2);
  sub_143698((uint64_t)v2);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FC990);
}

uint64_t sub_142FA4()
{
  _BYTE v1[96];
  _BYTE v2[96];

  if (qword_3CF518 != -1)
    swift_once(&qword_3CF518, sub_14013C);
  sub_143650((uint64_t)&xmmword_3FB910, (uint64_t)v1);
  sub_143698((uint64_t)v1);
  if (qword_3CF618 != -1)
    swift_once(&qword_3CF618, sub_141CA0);
  sub_143650((uint64_t)&qword_3FC510, (uint64_t)v2);
  sub_143698((uint64_t)v2);
  return sub_214380((uint64_t)v1, (uint64_t)v2, (uint64_t)&qword_3FC9F0);
}

id sub_143050(double a1, double a2)
{
  uint64_t v4;
  uint64_t inited;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSString *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString *v17;
  NSString *v18;
  unint64_t v19;
  id v20;
  Class isa;
  id v22;
  _BYTE v24[112];
  _BYTE v25[112];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8410);
  inited = swift_initStackObject(v4, v25);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  if (qword_3CF458 != -1)
    swift_once(&qword_3CF458, sub_13ED2C);
  v6 = (void *)qword_3D83F8;
  *(_QWORD *)(inited + 32) = qword_3D83F8;
  *(_QWORD *)(inited + 40) = static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontSystemFontDesignDefault);
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 64) = &type metadata for String;
  *(_QWORD *)(inited + 72) = UIFontWeightTrait;
  v8 = objc_allocWithZone((Class)NSNumber);
  v9 = v6;
  v10 = UIFontWeightTrait;
  v11 = objc_msgSend(v8, "initWithDouble:", a2);
  v12 = sub_E710(0, (unint64_t *)&qword_3D5AF8, NSNumber_ptr);
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 80) = v11;
  v13 = sub_D4624(inited);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8418);
  v15 = swift_initStackObject(v14, v24);
  *(_OWORD *)(v15 + 16) = xmmword_2EFA20;
  *(_QWORD *)(v15 + 32) = UIFontDescriptorSizeAttribute;
  v16 = objc_allocWithZone((Class)NSNumber);
  v17 = UIFontDescriptorSizeAttribute;
  *(_QWORD *)(v15 + 40) = objc_msgSend(v16, "initWithDouble:", a1);
  *(_QWORD *)(v15 + 64) = v12;
  *(_QWORD *)(v15 + 72) = UIFontDescriptorTraitsAttribute;
  *(_QWORD *)(v15 + 104) = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8420);
  *(_QWORD *)(v15 + 80) = v13;
  v18 = UIFontDescriptorTraitsAttribute;
  v19 = sub_D4640(v15);
  v20 = objc_allocWithZone((Class)UIFontDescriptor);
  type metadata accessor for AttributeName(0);
  sub_1436F8();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v22 = objc_msgSend(v20, "initWithFontAttributes:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

  return v22;
}

void sub_143270(__int128 *a1)
{
  __int128 v1;

  sub_143600(a1, &v1);
  __asm { BR              X10 }
}

BOOL sub_1432BC()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  BOOL v14;
  __int128 v16;
  char v17;
  uint64_t v18;
  int v19;

  v2 = v18;
  v3 = v19;
  sub_143600(v1, &v16);
  if (v17)
  {
    return 0;
  }
  else
  {
    v4 = v16;
    v5 = DWORD2(v16);
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    if (v6 == v9 && v8 == v10)
    {
      sub_143618(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DE20);
      sub_143618((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DE20);
      swift_bridgeObjectRelease_n(v8, 2);
      sub_143618((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DD48);
      sub_143618(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DD48);
    }
    else
    {
      v12 = v10;
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
      sub_143618(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DE20);
      sub_143618((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DE20);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v12);
      sub_143618((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DD48);
      sub_143618(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_DD48);
      v14 = 0;
      if ((v13 & 1) == 0)
        return v14;
    }
    return v3 == v5;
  }
}

_OWORD *sub_143600(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_143618(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

uint64_t sub_143650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_143698(uint64_t a1)
{
  sub_DDA0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
  return a1;
}

unint64_t sub_1436F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D03F0;
  if (!qword_3D03F0)
  {
    type metadata accessor for AttributeName(255);
    result = swift_getWitnessTable(&unk_2EF65C, v1);
    atomic_store(result, (unint64_t *)&qword_3D03F0);
  }
  return result;
}

id sub_143750(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  objc_super v15;
  _QWORD v16[3];
  uint64_t v17;

  sub_430E8(a1, (uint64_t)v16);
  v5 = v17;
  if (v17)
  {
    v6 = __swift_project_boxed_opaque_existential_1(v16, v17);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = __chkstk_darwin(v6);
    v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    __swift_destroy_boxed_opaque_existential_0(v16);
  }
  else
  {
    v11 = 0;
  }
  v12 = (objc_class *)type metadata accessor for UnpreventableHoverGestureRecognizer();
  v15.receiver = v2;
  v15.super_class = v12;
  v13 = objc_msgSendSuper2(&v15, "initWithTarget:action:", v11, a2);
  swift_unknownObjectRelease(v11);
  sub_1FE78(a1);
  return v13;
}

id sub_1438C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UnpreventableHoverGestureRecognizer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UnpreventableHoverGestureRecognizer()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews35UnpreventableHoverGestureRecognizer);
}

id sub_143914(void *a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 v7;
  id v8;
  uint64_t v10;
  unsigned __int16 v11;
  id v12;
  uint64_t v13;
  void *v14;
  double (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  double v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD v49[2];

  v43 = *(void **)v1;
  v2 = *(unsigned __int16 *)(v1 + 88);
  if (!(v2 >> 14))
    return objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:compatibleWithTraitCollection:", v43, a1);
  v40 = *(_QWORD *)(v1 + 16);
  v37 = *(_QWORD *)(v1 + 8);
  v38 = *(_QWORD *)(v1 + 24);
  v39 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 56);
  v41 = *(void **)(v1 + 48);
  v42 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v36 = v3;
  v34 = v4;
  v35 = *(_WORD *)(v1 + 88);
  v33 = v6;
  if (v2 >> 14 == 1)
  {
    v44 = *(void **)v1;
    v45 = v37;
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    memset(v49, 0, 26);
    v7 = v2;
    sub_1472C(v43, v37, v40, v38, v42, v39, v41, v3, v4, v5, v6, v2);
    sub_1472C(v43, v37, v40, v38, v42, v39, v41, v3, v4, v5, v6, v7);
    v8 = sub_1D5728((uint64_t)&v44, a1);
    v32 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v8, 0.0);

    sub_14788(v43, v37, v40, v38, v42, v39, v41, v3, v4, v5, v6, v7);
    sub_14788(v43, v37, v40, v38, v42, v39, v41, v3, v4, v5, v6, v35);
    return v32;
  }
  if ((v2 & 0x100) != 0)
  {
    v10 = *(_QWORD *)(v1 + 64);
    v11 = *(_WORD *)(v1 + 88);
    sub_1FEB8();
    sub_1472C(v43, v37, v40, v38, v42, v39, v41, v3, v4, v5, v6, v11);
    sub_1472C(v43, v37, v40, v38, v42, v39, v41, v3, v4, v5, v6, v35);
    sub_DE20(v43, v37, v40, v38, v42, v39);
    v12 = sub_DE20(v41, v3, v4, v5, v6, v35);
    if ((static UITraitCollection.interfaceIdiomIsMac.getter(v12) & 1) != 0)
    {
      sub_DD48(v41, v3, v4, v5, v6, v35);
      v13 = v42;
      v14 = v43;
      v15 = (double (*)(void))v40;
      sub_14788(v43, v37, v40, v38, v42, v39, v41, v3, v10, v5, v6, v35);
      v16 = v37;
      v17 = v38;
      v18 = v39;
    }
    else
    {
      sub_DD48(v43, v37, v40, v38, v42, v39);
      v14 = v41;
      sub_14788(v43, v37, v40, v38, v42, v39, v41, v3, v4, v5, v6, v35);
      v15 = (double (*)(void))v4;
      v17 = v5;
      v16 = v3;
      v13 = v6;
      v18 = v35;
    }
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 8);
    v19 = *(_WORD *)(v1 + 88);
    sub_DDA0(v43, v37, v40, v38, v42, v39, v41, v3, v4, v5, v6, v2, 0);
    sub_DDA0(v43, v37, v40, v38, v42, v39, v41, v3, v4, v5, v6, v19, 0);
    v14 = v43;
    v15 = (double (*)(void))v40;
    v17 = v38;
    v13 = v42;
    v18 = v39;
  }
  if (v18 == 2)
  {
    v22 = (void *)objc_opt_self(UIFont);
    v23 = objc_msgSend(a1, "preferredContentSizeCategory", swift_retain(v17).n128_f64[0]);
    v24 = v15();

    v21 = objc_msgSend(v22, "systemFontOfSize:weight:", v24, *(double *)&v13);
    sub_14788(v43, v37, v40, v38, v42, v39, v41, v36, v34, v5, v33, v35);
    swift_release(v17);
    v25 = v14;
    v26 = v16;
    v27 = (uint64_t)v15;
    v28 = v17;
    v29 = v13;
    v30 = 2;
    goto LABEL_17;
  }
  if (!v18)
  {
    if ((_DWORD)v16)
    {
      v18 = 0;
      goto LABEL_14;
    }
    v21 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:compatibleWithTraitCollection:", v14, a1);
    sub_14788(v43, v37, v40, v38, v42, v39, v41, v3, v34, v5, v33, v35);
    sub_DD48(v14, v16, (uint64_t)v15, v17, v13, 0);
    v25 = v14;
    v26 = v16;
    v27 = (uint64_t)v15;
    v28 = v17;
    v29 = v13;
    v30 = 0;
LABEL_17:
    sub_DD48(v25, v26, v27, v28, v29, v30);
    return v21;
  }
LABEL_14:
  sub_DD48(v14, v16, (uint64_t)v15, v17, v13, v18);
  v44 = v43;
  v45 = v37;
  *(_QWORD *)&v46 = v40;
  *((_QWORD *)&v46 + 1) = v38;
  *(_QWORD *)&v47 = v42;
  *((_QWORD *)&v47 + 1) = v39;
  *(_QWORD *)&v48 = v41;
  *((_QWORD *)&v48 + 1) = v3;
  *(_QWORD *)&v49[0] = v34;
  *((_QWORD *)&v49[0] + 1) = v5;
  *(_QWORD *)&v49[1] = v6;
  WORD4(v49[1]) = v35 & 0x1FF;
  v20 = sub_1D5728((uint64_t)&v44, a1);
  v21 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v20, 0.0);

  sub_14788(v43, v37, v40, v38, v42, v39, v41, v3, v34, v5, v33, v35);
  return v21;
}

void sub_14401C()
{
  void *v0;
  NSString *v1;
  id v2;

  v0 = (void *)objc_opt_self(UITraitCollection);
  v1 = UIContentSizeCategoryLarge;
  v2 = objc_msgSend(v0, "traitCollectionWithPreferredContentSizeCategory:", v1);

  qword_3FCA50 = (uint64_t)v2;
}

void sub_144084(double a1, uint64_t a2, char a3)
{
  void *v3;
  id v5;
  id v6;
  id v7;

  if ((a3 & 1) != 0)
  {
    v5 = sub_143914(v3);
    objc_msgSend(v5, "_scaledValueForValue:useLanguageAwareScaling:", 1, a1);

  }
  else
  {
    if (qword_3CF688 != -1)
      swift_once(&qword_3CF688, sub_14401C);
    v7 = sub_143914((void *)qword_3FCA50);
    v6 = sub_143914(v3);
    objc_msgSend(v7, "_bodyLeading");
    objc_msgSend(v6, "_bodyLeading");

  }
}

_QWORD *sub_14421C(uint64_t a1, uint64_t a2)
{
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  int64_t v8;
  _QWORD *result;
  double *v10;
  unint64_t v11;
  double v12;
  unint64_t v13;
  void *v14;
  _QWORD *v16;

  if (qword_3CF688 != -1)
    swift_once(&qword_3CF688, sub_14401C);
  v2 = sub_143914((void *)qword_3FCA50);
  v3 = sub_143914(v14);
  objc_msgSend(v2, "_bodyLeading");
  v5 = v4;
  objc_msgSend(v3, "_bodyLeading");
  v7 = v6;

  v8 = *(_QWORD *)(a2 + 16);
  result = _swiftEmptyArrayStorage;
  if (v8)
  {
    sub_F3470(0, v8, 0);
    result = _swiftEmptyArrayStorage;
    v10 = (double *)(a2 + 32);
    v11 = _swiftEmptyArrayStorage[2];
    do
    {
      v12 = *v10;
      v16 = result;
      v13 = result[3];
      if (v11 >= v13 >> 1)
      {
        sub_F3470(v13 > 1, v11 + 1, 1);
        result = v16;
      }
      result[2] = v11 + 1;
      *(double *)&result[v11 + 4] = v7 * (v12 / v5);
      ++v10;
      ++v11;
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_1443E8(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  void *v26;
  uint64_t v27;
  unsigned __int16 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int16 v58;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int16 v88;
  unsigned __int16 v89;
  unsigned __int16 v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[11];
  __int16 v108;
  _QWORD v109[11];
  __int16 v110;
  _QWORD v111[11];
  __int16 v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int16 v124;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(void **)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(unsigned __int16 *)(a1 + 88);
  v15 = *(void **)a2;
  v14 = *(_QWORD *)(a2 + 8);
  v17 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(a2 + 24);
  v19 = *(_QWORD *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 40);
  v20 = *(void **)(a2 + 48);
  v21 = *(_QWORD *)(a2 + 56);
  v22 = *(_QWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  v24 = *(_QWORD *)(a2 + 80);
  v25 = *(unsigned __int16 *)(a2 + 88);
  v111[0] = v2;
  v111[1] = v3;
  v111[2] = v4;
  v111[3] = v5;
  v111[4] = v6;
  v111[5] = v7;
  v111[6] = v8;
  v111[7] = v9;
  v111[8] = v10;
  v111[9] = v11;
  v111[10] = v12;
  v112 = v13;
  v26 = v15;
  v113 = v15;
  v114 = v14;
  v115 = v17;
  v116 = v16;
  v117 = v19;
  v118 = v18;
  v119 = v20;
  v120 = v21;
  v105 = v23;
  v106 = v22;
  v121 = v22;
  v122 = v23;
  v27 = v24;
  v123 = v24;
  v28 = v13;
  v124 = v25;
  if (!(v13 >> 14))
  {
    if (v25 < 0x4000)
    {
      v89 = v25;
      v71 = v20;
      v75 = v12;
      v77 = v11;
      v79 = v10;
      v81 = v5;
      v100 = v14;
      v103 = v4;
      v83 = v6;
      v85 = v7;
      v95 = v8;
      v97 = v3;
      v87 = v9;
      v92 = v2;
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
      v36 = v35;
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v64 = v37;
      if (v34 == v38 && v36 == v37)
        v61 = 1;
      else
        v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36, v38, v37, 0);
      sub_1472C(v26, v100, v17, v16, v19, v18, v71, v21, v106, v105, v27, v89);
      sub_1472C(v92, v97, v103, v81, v83, v85, v95, v87, v79, v77, v75, v28);
      sub_1472C(v92, v97, v103, v81, v83, v85, v95, v87, v79, v77, v75, v28);
      sub_1472C(v26, v100, v17, v16, v19, v18, v71, v21, v106, v105, v27, v89);
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v64);
      sub_144D44((uint64_t)v111);
      sub_14788(v26, v100, v17, v16, v19, v18, v71, v21, v106, v105, v27, v89);
      sub_14788(v92, v97, v103, v81, v83, v85, v95, v87, v79, v77, v75, v28);
      v55 = v61;
      return v55 & 1;
    }
LABEL_13:
    v56 = v14;
    v57 = v3;
    v58 = v25;
    sub_1472C(v2, v57, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
    sub_1472C(v26, v56, v17, v16, v19, v18, v20, v21, v106, v105, v27, v58);
    sub_144D44((uint64_t)v111);
    v55 = 0;
    return v55 & 1;
  }
  if (v13 >> 14 != 1)
  {
    v107[0] = v2;
    v107[1] = v3;
    v107[2] = v4;
    v107[3] = v5;
    v107[4] = v6;
    v107[5] = v7;
    v107[6] = v8;
    v107[7] = v9;
    v107[8] = v10;
    v107[9] = v11;
    v107[10] = v12;
    v108 = v13 & 0x1FF;
    if ((v25 & 0xC000) == 0x8000)
    {
      v109[0] = v15;
      v109[1] = v14;
      v66 = v24;
      v67 = v15;
      v109[2] = v17;
      v109[3] = v16;
      v109[4] = v19;
      v109[5] = v18;
      v109[6] = v20;
      v109[7] = v21;
      v109[8] = v22;
      v109[9] = v23;
      v109[10] = v24;
      v110 = v25 & 0x1FF;
      v39 = v14;
      v101 = v14;
      v104 = v4;
      v40 = v21;
      v72 = v20;
      v73 = v21;
      v41 = v20;
      v42 = v18;
      v65 = v18;
      v43 = v19;
      v68 = v16;
      v69 = v19;
      v70 = v17;
      v44 = v26;
      v45 = v17;
      v46 = v5;
      v47 = v16;
      v48 = v6;
      v49 = v7;
      v50 = v8;
      v51 = v9;
      v52 = v10;
      v53 = v11;
      v54 = v12;
      v93 = v2;
      v90 = v25;
      sub_1472C(v44, v39, v45, v47, v43, v42, v41, v40, v106, v105, v24, v25);
      sub_1472C(v93, v3, v104, v46, v48, v49, v50, v51, v52, v53, v54, v28);
      sub_1472C(v93, v3, v104, v46, v48, v49, v50, v51, v52, v53, v54, v28);
      sub_1472C(v67, v101, v70, v68, v69, v65, v72, v73, v106, v105, v66, v90);
      v98 = v3;
      v55 = sub_2795FC((uint64_t)v107, (uint64_t)v109);
      sub_144D44((uint64_t)v111);
      sub_14788(v67, v101, v70, v68, v69, v65, v72, v73, v106, v105, v66, v90);
      sub_14788(v93, v98, v104, v46, v48, v49, v50, v51, v52, v53, v54, v28);
      return v55 & 1;
    }
    goto LABEL_13;
  }
  if ((v25 & 0xC000) != 0x4000)
    goto LABEL_13;
  v88 = v25;
  v74 = v12;
  v76 = v11;
  v78 = v10;
  v99 = v14;
  v102 = v4;
  v80 = v5;
  v82 = v6;
  v84 = v7;
  v94 = v8;
  v96 = v3;
  v86 = v9;
  v91 = v2;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v63 = v30;
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  if (v29 == v32 && v63 == v31)
  {
    sub_1472C(v26, v99, v17, v16, v19, v18, v20, v21, v106, v105, v27, v88);
    sub_1472C(v91, v96, v102, v80, v82, v84, v94, v86, v78, v76, v74, v28);
    sub_1472C(v91, v96, v102, v80, v82, v84, v94, v86, v78, v76, v74, v28);
    sub_1472C(v26, v99, v17, v16, v19, v18, v20, v21, v106, v105, v27, v88);
    swift_bridgeObjectRelease_n(v63, 2);
    sub_144D44((uint64_t)v111);
    sub_14788(v26, v99, v17, v16, v19, v18, v20, v21, v106, v105, v27, v88);
    v33 = v96;
    sub_14788(v91, v96, v102, v80, v82, v84, v94, v86, v78, v76, v74, v28);
LABEL_15:
    v55 = v33 == (_DWORD)v99;
    return v55 & 1;
  }
  v60 = v31;
  v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v63, v32, v31, 0);
  sub_1472C(v26, v99, v17, v16, v19, v18, v20, v21, v106, v105, v27, v88);
  sub_1472C(v91, v96, v102, v80, v82, v84, v94, v86, v78, v76, v74, v28);
  sub_1472C(v91, v96, v102, v80, v82, v84, v94, v86, v78, v76, v74, v28);
  sub_1472C(v26, v99, v17, v16, v19, v18, v20, v21, v106, v105, v27, v88);
  swift_bridgeObjectRelease(v63);
  swift_bridgeObjectRelease(v60);
  sub_144D44((uint64_t)v111);
  sub_14788(v26, v99, v17, v16, v19, v18, v20, v21, v106, v105, v27, v88);
  v33 = v96;
  sub_14788(v91, v96, v102, v80, v82, v84, v94, v86, v78, v76, v74, v28);
  v55 = 0;
  if ((v62 & 1) != 0)
    goto LABEL_15;
  return v55 & 1;
}

uint64_t sub_144D44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  __int128 v12;
  void *v13;

  v2 = *(_QWORD *)(a1 + 104);
  v13 = *(void **)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(void **)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v12 = *(_OWORD *)(a1 + 160);
  v9 = *(_QWORD *)(a1 + 176);
  v10 = *(_WORD *)(a1 + 184);
  sub_14788(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_WORD *)(a1 + 88));
  sub_14788(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

void destroy for FontSource(uint64_t a1)
{
  sub_14788(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_WORD *)(a1 + 88));
}

uint64_t initializeWithCopy for FontSource(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unsigned __int16 v15;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(void **)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_WORD *)(a2 + 88);
  sub_1472C(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_WORD *)(a1 + 88) = v15;
  return a1;
}

uint64_t assignWithCopy for FontSource(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unsigned __int16 v22;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(void **)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v24 = *(_QWORD *)(a2 + 72);
  v25 = *(_QWORD *)(a2 + 80);
  v26 = *(_WORD *)(a2 + 88);
  sub_1472C(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(void **)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 80);
  v22 = *(_WORD *)(a1 + 88);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v25;
  *(_WORD *)(a1 + 88) = v26;
  sub_14788(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22);
  return a1;
}

__n128 __swift_memcpy90_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 74) = *(_OWORD *)(a2 + 74);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for FontSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unsigned __int16 v15;
  __int128 v16;
  __int128 v17;

  v3 = *(_QWORD *)(a2 + 80);
  v4 = *(_WORD *)(a2 + 88);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(void **)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_WORD *)(a1 + 88);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v3;
  *(_WORD *)(a1 + 88) = v4;
  sub_14788(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for FontSource(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 90))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int16 *)(a1 + 88) >> 7) & 0x7C | (*(unsigned __int16 *)(a1 + 88) >> 14)) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FontSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 90) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 90) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 80) = 0;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_WORD *)(result + 88) = (((-a2 >> 2) & 0x1F) - 32 * (_WORD)a2) << 9;
    }
  }
  return result;
}

uint64_t sub_145188(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 88) >> 14;
}

uint64_t sub_145194(uint64_t result)
{
  *(_WORD *)(result + 88) &= 0x3FFFu;
  return result;
}

uint64_t sub_1451A4(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 88) = *(_WORD *)(result + 88) & 0x1FF | (a2 << 14);
  return result;
}

ValueMetadata *type metadata accessor for FontSource()
{
  return &type metadata for FontSource;
}

double sub_1451C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  _BYTE v10[24];

  v3 = v1[1];
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_graph);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_graph) = v3;
  swift_retain(v3);
  swift_release(v4);
  v5 = (uint64_t *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_playButton)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph);
  swift_beginAccess(v5, v10, 1, 0);
  v6 = *v5;
  *v5 = v3;
  swift_release(v6);
  v7 = *v1;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_episode);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_episode) = *v1;
  swift_retain_n(v7, 2);
  swift_retain(v3);
  sub_1454F8();
  swift_release(v8);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

void sub_1452A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;

  v1 = *v0;
  v2 = v0[1];
  v3 = *((double *)v0 + 2);
  v4 = *((double *)v0 + 3);
  v5 = *((double *)v0 + 4);
  v6 = *((double *)v0 + 5);
  swift_retain(*v0);
  swift_retain(v2);
  v7 = NSDirectionalEdgeInsets.init(_:)(v3, v4, v5, v6);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = objc_allocWithZone((Class)type metadata accessor for EpisodeHeroButtonAreaUIKitView());
  sub_145844(v1, v2, v7, v9, v11, v13);
}

uint64_t sub_14534C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_super v8;

  v8.receiver = *(id *)(a5 + OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_playButton);
  v8.super_class = (Class)type metadata accessor for PlayButton(0);
  objc_msgSendSuper2(&v8, "intrinsicContentSize");
  if (qword_3CF1B8 != -1)
    swift_once(&qword_3CF1B8, sub_920F4);
  if ((a2 & 1) != 0)
    return 0x4024000000000000;
  else
    return a1;
}

uint64_t sub_145424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1489DC();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_145474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1489DC();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1454C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1489DC();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_1454E8()
{
  qword_3D8450 = 0x402C000000000000;
}

double sub_1454F8()
{
  char *v0;
  void *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  double result;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  char isEscapingClosureAtFileLocation;
  _QWORD v20[5];
  uint64_t v21;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_episode];
  v3 = swift_retain(v2);
  v4 = LegacyLockup.id.getter(v3);
  v6 = v5;
  v7 = swift_release(v2);
  v8 = LegacyLockup.id.getter(v7);
  if (v4 == v8 && v6 == v9)
    goto LABEL_8;
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v8, v9, 0);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  if ((v12 & 1) == 0)
  {
    v14 = (void *)objc_opt_self(UIView);
    v15 = swift_allocObject(&unk_385048, 24, 7);
    *(_QWORD *)(v15 + 16) = v1;
    v6 = swift_allocObject(&unk_385070, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_148A20;
    *(_QWORD *)(v6 + 24) = v15;
    v20[4] = sub_EC6A0;
    v21 = v6;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_920D4;
    v20[3] = &block_descriptor_33_0;
    v16 = _Block_copy(v20);
    v17 = v21;
    v18 = v1;
    swift_retain(v6);
    objc_msgSend(v14, "performWithoutAnimation:", v16, swift_release(v17).n128_f64[0]);
    _Block_release(v16);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v6, "", 144, 353, 40, 1);
    swift_release(v15);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_8:
      *(_QWORD *)&result = swift_bridgeObjectRelease_n(v6, 2).n128_u64[0];
    }
  }
  return result;
}

id sub_1456B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v0 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v1 = (void *)static UIFont.title3Emph.getter(v0);
  v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v1, 2);

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v3, v2);

  v5 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v4);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.5);

  objc_msgSend(v5, "setTintColor:", v7);
  v8 = objc_msgSend(v5, "layer");
  v9 = kCAFilterPlusL;
  objc_msgSend(v8, "setCompositingFilter:", v9);

  return v5;
}

void sub_145844(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  _BYTE *v6;
  _BYTE *v7;
  objc_class *ObjectType;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  double *v22;
  void *v23;
  id v24;
  char *v25;
  void *v26;
  char *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  void **aBlock;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  objc_super v46;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType();
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v15);
  v17 = (char *)&aBlock - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkStateMachine] = 0;
  v7[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkState] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_downloadPresenter] = 0;
  v7[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_shouldShowDownloadIcon] = 0;
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_moreIcon;
  v19 = v7;
  *(_QWORD *)&v7[v18] = sub_1456B0();
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkIcon] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__downloadIcon] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__sizingDownloadIcon] = 0;
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_contextMenuButton;
  v21 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  objc_msgSend(v21, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v21, "setPreferredMenuElementOrder:", 2);
  objc_msgSend(v21, "setHoverStyle:", 0);
  *(_QWORD *)&v19[v20] = v21;
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_episode] = a1;
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_graph] = a2;
  v22 = (double *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_padding];
  *v22 = a3;
  v22[1] = a4;
  v22[2] = a5;
  v22[3] = a6;
  swift_retain_n(a1, 2);
  swift_retain_n(a2, 2);
  PlayButtonPresenter.Data.init(lockup:)(a1);
  LOBYTE(aBlock) = 1;
  v23 = (void *)_s23ShelfKitCollectionViews10PlayButtonC8asPartOf4data5themeAC9JetEngine15BaseObjectGraphC_0aB00eF9PresenterC4DataVSgAC5ThemeOtcfC_0(a2, (uint64_t)v17, (unsigned __int8 *)&aBlock);
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_playButton] = v23;
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v24 = v23;
  objc_msgSend(v24, "setHitTestDirectionalInsets:", -a3, -a4, -a5, 0.0);

  v46.receiver = v19;
  v46.super_class = ObjectType;
  v25 = (char *)objc_msgSendSuper2(&v46, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v26 = *(void **)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_playButton];
  v27 = v25;
  objc_msgSend(v27, "addSubview:", v26);
  objc_msgSend(v27, "addSubview:", *(_QWORD *)&v27[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_moreIcon]);
  v28 = *(void **)&v27[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_contextMenuButton];
  objc_msgSend(v27, "addSubview:", v28);
  v29 = swift_allocObject(&unk_385278, 32, 7);
  *(_QWORD *)(v29 + 16) = v26;
  *(_QWORD *)(v29 + 24) = v28;
  v44 = sub_148B8C;
  v45 = v29;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_145FEC;
  v43 = &block_descriptor_74;
  v30 = _Block_copy(&aBlock);
  v31 = v45;
  v32 = v26;
  v33 = v28;
  objc_msgSend(v27, "setAccessibilityCustomActionsBlock:", v30, swift_release(v31).n128_f64[0]);
  _Block_release(v30);
  v34 = objc_opt_self(UIView);
  v35 = swift_allocObject(&unk_3852C8, 24, 7);
  *(_QWORD *)(v35 + 16) = v27;
  v36 = swift_allocObject(&unk_3852F0, 32, 7);
  *(_QWORD *)(v36 + 16) = sub_148C5C;
  *(_QWORD *)(v36 + 24) = v35;
  v44 = sub_EC6A0;
  v45 = v36;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_920D4;
  v43 = &block_descriptor_85;
  v37 = _Block_copy(&aBlock);
  v38 = v45;
  v39 = v27;
  swift_retain(v36);
  objc_msgSend((id)v34, "performWithoutAnimation:", v37, swift_release(v38).n128_f64[0]);
  _Block_release(v37);
  LOBYTE(v34) = swift_isEscapingClosureAtFileLocation(v36, "", 144, 353, 40, 1);

  swift_release(a1);
  swift_release(a2);
  swift_release(v35);
  swift_release(v36);
  if ((v34 & 1) != 0)
    __break(1u);
}

unint64_t sub_145CB4(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  NSString v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  void *object;
  uint64_t v27;
  id v28;
  id v29;
  NSString v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void **aBlock;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, void *);
  void *v41;
  uint64_t (*v42)();
  uint64_t v43;
  char v44[24];
  unint64_t v45;
  Swift::String v46;

  v4 = type metadata accessor for PlayButtonPresenter.State(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = (unint64_t)_swiftEmptyArrayStorage;
  v8 = &a1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState];
  v9 = swift_beginAccess(&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState], v44, 0, 0);
  v10 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v9);
  PlayButtonPresenter.State.accessibilityLabel.getter(v10);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = swift_allocObject(&unk_385340, 24, 7);
  *(_QWORD *)(v13 + 16) = a1;
  v14 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  v15 = a1;
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v42 = sub_148BA4;
  v43 = v13;
  aBlock = _NSConcreteStackBlock;
  v39 = 1107296256;
  v40 = sub_14A58C;
  v41 = &block_descriptor_91;
  v17 = _Block_copy(&aBlock);
  v18 = objc_msgSend(v14, "initWithName:actionHandler:", v16, v17);

  _Block_release(v17);
  swift_release(v43);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v21 = *(_QWORD *)((char *)&dword_10 + (v45 & 0xFFFFFFFFFFFFFF8));
  v20 = *(_QWORD *)((char *)&dword_18 + (v45 & 0xFFFFFFFFFFFFFF8));
  if (v21 >= v20 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
  v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
  specialized Array._endMutation()(v22);
  v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v46._object = (void *)0xE000000000000000;
  v24._object = (void *)0x8000000000310320;
  v24._countAndFlagsBits = 0xD00000000000001CLL;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v46._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v46)._object;

  v27 = swift_allocObject(&unk_385390, 24, 7);
  *(_QWORD *)(v27 + 16) = a2;
  v28 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  v29 = a2;
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v42 = sub_148BC8;
  v43 = v27;
  aBlock = _NSConcreteStackBlock;
  v39 = 1107296256;
  v40 = sub_14A58C;
  v41 = &block_descriptor_97_0;
  v31 = _Block_copy(&aBlock);
  v32 = objc_msgSend(v28, "initWithName:actionHandler:", v30, v31);

  _Block_release(v31);
  swift_release(v43);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((char *)&dword_10 + (v45 & 0xFFFFFFFFFFFFFF8));
  v34 = *(_QWORD *)((char *)&dword_18 + (v45 & 0xFFFFFFFFFFFFFF8));
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v32);
  specialized Array._endMutation()(v36);
  return v45;
}

Class sub_145FEC(uint64_t a1)
{
  uint64_t (*v1)(__n128);
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  NSArray v5;

  v1 = *(uint64_t (**)(__n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = v1(v3);
  swift_release(v2);
  if (v4)
  {
    sub_E710(0, &qword_3D8348, UIAccessibilityCustomAction_ptr);
    v5.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5.super.isa = 0;
  }
  return v5.super.isa;
}

id sub_146060()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  char *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  double v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  double v38;
  double MinX;
  CGFloat MinY;
  double v41;
  id v42;
  void (*v43)(_QWORD);
  double v44;
  double v45;
  id v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double Width;
  double v53;
  double Height;
  double v55;
  double v56;
  double left;
  CGFloat bottom;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  double v67;
  double v68;
  void *v69;
  objc_class *v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  CGFloat v77;
  CGFloat v78;
  double v79;
  double v80;
  CGFloat v81;
  double v82;
  id v83;
  double v84;
  double v85;
  id v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  CGFloat v96;
  double v97;
  double v98;
  double v99;
  double x;
  double y;
  double v102;
  CGFloat v103;
  double v104;
  uint64_t v105;
  char v106;
  double v107;
  id v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  int v115;
  double v116;
  BOOL v117;
  char *v118;
  void *v119;
  int v120;
  id v121;
  void *v122;
  void *v123;
  void *v124;
  id v125;
  double v126;
  double v127;
  _BOOL4 v128;
  double v129;
  CGFloat v130;
  id v131;
  id v132;
  CGFloat v133;
  CGFloat v134;
  int v135;
  double v136;
  CGFloat v137;
  double v138;
  CGFloat v139;
  double v140;
  double v141;
  id v142;
  double v143;
  double v144;
  id v145;
  double v146;
  double v147;
  double v148;
  double v149;
  double v150;
  double v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  double v158;
  uint64_t v159;
  double v160;
  CGFloat v161;
  double v162;
  CGFloat v163;
  CGFloat v164;
  double v165;
  double v166;
  double v167;
  double v168;
  id v169;
  double v170;
  double v171;
  id v172;
  double v173;
  CGFloat v174;
  double v175;
  uint64_t v176;
  double v177;
  double v178;
  double v179;
  double v180;
  double v181;
  double v182;
  double v183;
  void *v184;
  double v185;
  char v186;
  uint64_t v187;
  char *v188;
  double v189;
  double v190;
  double v191;
  double v192;
  double v193;
  double v194;
  double v195;
  double v196;
  double v197;
  void *v198;
  uint64_t v199;
  id v200;
  int v201;
  double v202;
  id result;
  double v204;
  uint64_t v205;
  uint64_t v206;
  double v207;
  double v208;
  double v209;
  double v210;
  double v211;
  char *v212;
  double v213;
  double v214;
  double v215;
  double v216;
  unsigned int v217;
  void (*v218)(char *, _QWORD, uint64_t);
  void (*v219)(char *, uint64_t);
  double v220;
  double v221;
  CGFloat right;
  double v223;
  double top;
  CGFloat v225;
  double v226;
  double v227;
  objc_super v228;
  objc_super v229;
  CGRect v230;
  CGRect v231;
  CGRect v232;
  CGRect v233;
  CGRect v234;
  CGRect v235;
  CGRect v236;
  CGRect v237;
  CGRect v238;
  CGRect v239;
  CGRect v240;
  CGRect v241;
  CGRect v242;
  CGRect v243;
  CGRect v244;
  CGRect v245;
  CGRect v246;
  CGRect v247;
  CGRect v248;
  CGRect v249;
  CGRect v250;
  CGRect v251;
  CGRect v252;
  CGRect v253;
  CGRect v254;
  CGRect v255;
  CGRect v256;
  CGRect v257;
  CGRect v258;
  CGRect v259;
  CGRect v260;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v212 = (char *)&v205 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v205 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v205 - v9;
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = (char *)&v205 - v13;
  v229.receiver = v0;
  v229.super_class = ObjectType;
  objc_msgSendSuper2(&v229, "layoutSubviews", v12);
  v15 = (char *)objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  objc_msgSend(v0, "bounds");
  v20 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_padding];
  v21 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_padding + 8];
  v22 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_padding + 24];
  v213 = v22;
  if (v15 == (_BYTE *)&dword_0 + 1)
    v21 = v22;
  v23 = UIEdgeInsetsInsetRect(v16, v17, v18, v19, v20, v21);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v30 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_moreIcon];
  objc_msgSend(v30, "sizeThatFits:", v26, v28);
  v32 = v31;
  v34 = v33;
  v35 = v23;
  v36 = v25;
  v37 = v27;
  v38 = v29;
  if (v15 == (_BYTE *)&dword_0 + 1)
    MinX = CGRectGetMinX(*(CGRect *)&v35);
  else
    MinX = CGRectGetMaxX(*(CGRect *)&v35) - v32;
  top = v25;
  v225 = v23;
  v230.origin.x = v23;
  v230.origin.y = v25;
  v216 = v27;
  v230.size.width = v27;
  v230.size.height = v29;
  MinY = CGRectGetMinY(v230);
  v215 = v29;
  v41 = (v29 - v34) * 0.5 + MinY;
  v42 = objc_msgSend(v0, "traitCollection");
  v43 = *(void (**)(_QWORD))(v3 + 104);
  v217 = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
  v218 = (void (*)(char *, _QWORD, uint64_t))v43;
  v43(v14);
  objc_msgSend(v42, "displayScale");
  v45 = v44;
  if (v44 < COERCE_DOUBLE(1))
  {
    v46 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v46, "scale");
    v45 = v47;

  }
  v231.origin.x = MinX;
  v231.origin.y = v41;
  v231.size.width = v32;
  v231.size.height = v34;
  v48 = CGRectGetMinX(v231);
  v49 = CGFloat.rounded(_:toScale:)((uint64_t)v14, v45, v48);
  v232.origin.x = MinX;
  v232.origin.y = v41;
  v232.size.width = v32;
  v232.size.height = v34;
  v50 = CGRectGetMinY(v232);
  v51 = CGFloat.rounded(_:toScale:)((uint64_t)v14, v45, v50);
  v233.origin.x = MinX;
  v233.origin.y = v41;
  v233.size.width = v32;
  v233.size.height = v34;
  Width = CGRectGetWidth(v233);
  v53 = CGFloat.rounded(_:toScale:)((uint64_t)v14, v45, Width);
  v234.origin.x = MinX;
  v234.origin.y = v41;
  v234.size.width = v32;
  v234.size.height = v34;
  Height = CGRectGetHeight(v234);
  v55 = CGFloat.rounded(_:toScale:)((uint64_t)v14, v45, Height);

  v219 = *(void (**)(char *, uint64_t))(v3 + 8);
  v219(v14, v2);
  v226 = v53;
  v227 = v49;
  v235.origin.x = v49;
  v220 = v55;
  v221 = v51;
  v235.origin.y = v51;
  v235.size.width = v53;
  v235.size.height = v55;
  v56 = CGRectGetWidth(v235);
  if (qword_3CF690 != -1)
    swift_once(&qword_3CF690, sub_1454E8);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v223 = left;
  if (v15 == (_BYTE *)&dword_0 + 1)
    v59 = v56 + *(double *)&qword_3D8450;
  else
    v59 = left;
  v61 = top;
  v60 = v225;
  top = UIEdgeInsetsZero.top;
  v225 = bottom;
  v62 = UIEdgeInsetsInsetRect(v60, v61, v216, v215, UIEdgeInsetsZero.top, v59);
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v69 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_playButton];
  v70 = (objc_class *)type metadata accessor for PlayButton(0);
  v228.receiver = v69;
  v228.super_class = v70;
  objc_msgSendSuper2(&v228, "intrinsicContentSize");
  v72 = v71;
  v74 = v73;
  if (qword_3CF1B8 != -1)
    swift_once(&qword_3CF1B8, sub_920F4);
  if (v74 > *(double *)&qword_3D34E0)
    v75 = v74;
  else
    v75 = *(double *)&qword_3D34E0;
  v76 = v62;
  v77 = v64;
  v78 = v66;
  v79 = v68;
  if (v15 == (_BYTE *)&dword_0 + 1)
    v80 = CGRectGetMaxX(*(CGRect *)&v76) - v72;
  else
    v80 = CGRectGetMinX(*(CGRect *)&v76);
  v216 = v62;
  v236.origin.x = v62;
  v215 = v64;
  v236.origin.y = v64;
  v214 = v66;
  v236.size.width = v66;
  v236.size.height = v68;
  v81 = CGRectGetMinY(v236);
  v208 = v68;
  v82 = (v68 - v75) * 0.5 + v81;
  v83 = objc_msgSend(v0, "traitCollection");
  v218(v10, v217, v2);
  objc_msgSend(v83, "displayScale");
  v85 = v84;
  if (v84 < COERCE_DOUBLE(1))
  {
    v86 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v86, "scale");
    v85 = v87;

  }
  v237.origin.x = v80;
  v237.origin.y = v82;
  v237.size.width = v72;
  v237.size.height = v75;
  v88 = CGRectGetMinX(v237);
  v89 = CGFloat.rounded(_:toScale:)((uint64_t)v10, v85, v88);
  v238.origin.x = v80;
  v238.origin.y = v82;
  v238.size.width = v72;
  v238.size.height = v75;
  v90 = CGRectGetMinY(v238);
  v91 = CGFloat.rounded(_:toScale:)((uint64_t)v10, v85, v90);
  v239.origin.x = v80;
  v239.origin.y = v82;
  v239.size.width = v72;
  v239.size.height = v75;
  v92 = CGRectGetWidth(v239);
  v93 = CGFloat.rounded(_:toScale:)((uint64_t)v10, v85, v92);
  v240.origin.x = v80;
  v240.origin.y = v82;
  v240.size.width = v72;
  v240.size.height = v75;
  v94 = CGRectGetHeight(v240);
  v95 = CGFloat.rounded(_:toScale:)((uint64_t)v10, v85, v94);

  v219(v10, v2);
  v211 = v89;
  v241.origin.x = v89;
  v210 = v91;
  v241.origin.y = v91;
  v209 = v93;
  v241.size.width = v93;
  v207 = v95;
  v241.size.height = v95;
  v96 = CGRectGetWidth(v241);
  v97 = *(double *)&qword_3D8450;
  v98 = v96 + *(double *)&qword_3D8450;
  if (v15 == (_BYTE *)&dword_0 + 1)
    v99 = v223;
  else
    v99 = v98;
  v242.origin.x = UIEdgeInsetsInsetRect(v216, v215, v214, v208, top, v99);
  x = v242.origin.x;
  y = v242.origin.y;
  v102 = v242.size.width;
  v103 = v242.size.height;
  v104 = CGRectGetWidth(v242);
  v105 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkState;
  v106 = EpisodeBookmarkState.isEpisodeBookmarked.getter(v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkState]);
  v107 = 0.0;
  v216 = x;
  v214 = y;
  v215 = v102;
  if ((v106 & 1) != 0)
  {
    v108 = sub_146EFC();
    objc_msgSend(v108, "sizeThatFits:", 9.22337204e18, 9.22337204e18);
    v110 = v109;
    v112 = v111;
    v243.origin.x = x;
    v243.origin.y = y;
    v113 = v112;
    v243.size.width = v102;
    v243.size.height = v103;
    v114 = CGRectGetWidth(v243);

    v208 = v110;
    if (v110 >= v114)
    {
      v115 = 0;
    }
    else
    {
      v104 = v104 - (v97 + v110);
      v115 = 1;
    }
  }
  else
  {
    v115 = 0;
    v113 = 0.0;
    v208 = 0.0;
  }
  v116 = v103;
  v205 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_shouldShowDownloadIcon;
  v117 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_shouldShowDownloadIcon] == 1;
  v206 = v105;
  if (v117)
  {
    v118 = v7;
    v119 = v30;
    v120 = v115;
    v121 = sub_1470F8();
    v123 = v122;

    v124 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__sizingDownloadIcon];
    if (v124)
    {
      v125 = v124;
      objc_msgSend(v125, "sizeThatFits:", 9.22337204e18, 9.22337204e18);
      v129 = v126;
      v107 = v127;

    }
    else
    {

      v129 = 0.0;
    }
    v130 = v214;
    v128 = v129 < v104;
    v115 = v120;
    v30 = v119;
    v7 = v118;
  }
  else
  {
    v128 = 0;
    v129 = 0.0;
    v130 = v214;
  }
  objc_msgSend(v30, "setFrame:", v227, v221, v226, v220, v205);
  objc_msgSend(v69, "setFrame:", v211, v210, v209, v207);
  if (v128)
  {
    v131 = sub_1470F8();

    v133 = v216;
    v134 = v215;
    v135 = v115;
    v136 = v216;
    v137 = v130;
    v138 = v215;
    v139 = v103;
    if (v15 == (_BYTE *)&dword_0 + 1)
      v140 = CGRectGetMinX(*(CGRect *)&v136);
    else
      v140 = CGRectGetMaxX(*(CGRect *)&v136) - v129;
    v211 = v113;
    v244.origin.x = v133;
    v244.origin.y = v130;
    v244.size.width = v134;
    v244.size.height = v116;
    v141 = (v116 - v107) * 0.5 + CGRectGetMinY(v244);
    v142 = objc_msgSend(v0, "traitCollection");
    v218(v7, v217, v2);
    objc_msgSend(v142, "displayScale");
    v144 = v143;
    if (v143 < COERCE_DOUBLE(1))
    {
      v145 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v145, "scale");
      v144 = v146;

    }
    v245.origin.x = v140;
    v245.origin.y = v141;
    v245.size.width = v129;
    v245.size.height = v107;
    v147 = CGRectGetMinX(v245);
    v210 = CGFloat.rounded(_:toScale:)((uint64_t)v7, v144, v147);
    v246.origin.x = v140;
    v246.origin.y = v141;
    v246.size.width = v129;
    v246.size.height = v107;
    v148 = CGRectGetMinY(v246);
    v149 = CGFloat.rounded(_:toScale:)((uint64_t)v7, v144, v148);
    v247.origin.x = v140;
    v247.origin.y = v141;
    v247.size.width = v129;
    v247.size.height = v107;
    v150 = CGRectGetWidth(v247);
    v151 = CGFloat.rounded(_:toScale:)((uint64_t)v7, v144, v150);
    v248.origin.x = v140;
    v248.origin.y = v141;
    v248.size.width = v129;
    v248.size.height = v107;
    v152 = CGRectGetHeight(v248);
    v153 = CGFloat.rounded(_:toScale:)((uint64_t)v7, v144, v152);

    v219(v7, v2);
    if (v15 == (_BYTE *)&dword_0 + 1)
      v154 = v129 + *(double *)&qword_3D8450;
    else
      v154 = v223;
    v216 = UIEdgeInsetsInsetRect(v216, v214, v215, v116, top, v154);
    v130 = v155;
    v215 = v156;
    v116 = v157;
    v249.size.width = v226;
    v249.origin.x = v227;
    v249.size.height = v220;
    v249.origin.y = v221;
    v158 = v210;
    v259.origin.x = v210;
    v259.origin.y = v149;
    v259.size.width = v151;
    v259.size.height = v153;
    v250 = CGRectUnion(v249, v259);
    v226 = v250.size.width;
    v227 = v250.origin.x;
    v220 = v250.size.height;
    v221 = v250.origin.y;
    v159 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
    objc_msgSend(v131, "alpha");
    sub_14839C(v160 == 0.0, v159, v131, v158, v149, v151, v153);

    v115 = v135;
    v113 = v211;
  }
  if (v115)
  {
    v161 = v216;
    v162 = v216;
    v163 = v130;
    v164 = v215;
    v165 = v215;
    v166 = v116;
    if (v15 == (_BYTE *)&dword_0 + 1)
      v167 = CGRectGetMinX(*(CGRect *)&v162);
    else
      v167 = CGRectGetMaxX(*(CGRect *)&v162) - v208;
    v251.origin.x = v161;
    v251.origin.y = v130;
    v251.size.width = v164;
    v251.size.height = v116;
    v168 = (v116 - v113) * 0.5 + CGRectGetMinY(v251);
    v169 = objc_msgSend(v0, "traitCollection");
    v218(v212, v217, v2);
    objc_msgSend(v169, "displayScale");
    v171 = v170;
    if (v170 < COERCE_DOUBLE(1))
    {
      v172 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v172, "scale");
      v171 = v173;

    }
    v252.origin.x = v167;
    v252.origin.y = v168;
    v174 = v208;
    v252.size.width = v208;
    v252.size.height = v113;
    v175 = CGRectGetMinX(v252);
    v176 = (uint64_t)v212;
    v177 = CGFloat.rounded(_:toScale:)((uint64_t)v212, v171, v175);
    v253.origin.x = v167;
    v253.origin.y = v168;
    v253.size.width = v174;
    v253.size.height = v113;
    v178 = CGRectGetMinY(v253);
    v179 = CGFloat.rounded(_:toScale:)(v176, v171, v178);
    v254.origin.x = v167;
    v254.origin.y = v168;
    v254.size.width = v174;
    v254.size.height = v113;
    v180 = CGRectGetWidth(v254);
    v181 = CGFloat.rounded(_:toScale:)(v176, v171, v180);
    v255.origin.x = v167;
    v255.origin.y = v168;
    v255.size.width = v174;
    v255.size.height = v113;
    v182 = CGRectGetHeight(v255);
    v183 = CGFloat.rounded(_:toScale:)(v176, v171, v182);

    v219((char *)v176, v2);
    v256.size.width = v226;
    v256.origin.x = v227;
    v256.size.height = v220;
    v256.origin.y = v221;
    v260.origin.x = v177;
    v260.origin.y = v179;
    v260.size.width = v181;
    v260.size.height = v183;
    v257 = CGRectUnion(v256, v260);
    v226 = v257.size.width;
    v227 = v257.origin.x;
    v184 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkIcon];
    if (v184)
    {
      objc_msgSend(v184, "alpha");
      v186 = v185 == 0.0;
    }
    else
    {
      v186 = 0;
    }
    v187 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
    v188 = v0;
    sub_148508(v186, v187, (uint64_t)v188, v177, v179, v181, v183);

  }
  objc_msgSend(v0, "bounds");
  v189 = CGRectGetHeight(v258);
  v190 = v223;
  if (v15 == (_BYTE *)&dword_0 + 1)
    v191 = -v213;
  else
    v191 = v223;
  v192 = top;
  v193 = UIEdgeInsetsInsetRect(v227, 0.0, v226, v189, top, v191);
  if (v15 == (_BYTE *)&dword_0 + 1)
    v197 = v190;
  else
    v197 = -*(double *)&qword_3D8450;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_contextMenuButton], "setFrame:", UIEdgeInsetsInsetRect(v193, v194, v195, v196, v192, v197));
  v198 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkIcon];
  if (v198)
  {
    v199 = v0[v206];
    v200 = v198;
    v201 = EpisodeBookmarkState.isEpisodeBookmarked.getter(v199);
    v202 = 1.0;
    if ((v115 & v201) == 0)
      v202 = 0.0;
    objc_msgSend(v200, "setAlpha:", v202);

  }
  result = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__downloadIcon];
  if (result)
  {
    v204 = 0.0;
    if ((v0[v205] & v128) != 0)
      v204 = 1.0;
    return objc_msgSend(result, "setAlpha:", v204);
  }
  return result;
}

id sub_146EFC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  void *v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkIcon;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkIcon];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkIcon];
  }
  else
  {
    v4 = v0;
    sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v5 = (void *)static UIFont.bodyEmph.getter();
    v6 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v5, 1);

    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v7, v6);

    v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v8);
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    v11 = objc_msgSend(v10, "colorWithAlphaComponent:", 0.5);

    objc_msgSend(v9, "setTintColor:", v11);
    v12 = objc_msgSend(v9, "layer");
    objc_msgSend(v12, "setCompositingFilter:", kCAFilterPlusL);

    objc_msgSend(v4, "addSubview:", v9);
    v13 = v9;
    objc_msgSend(v13, "setAlpha:", 0.0);

    v14 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v13;
    v3 = v13;

    v2 = 0;
  }
  v15 = v2;
  return v3;
}

id sub_1470F8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  id v30;
  double v31;
  double v32;
  id v33;
  double v34;
  double v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  id v54;
  __n128 v55;
  void *v56;
  id v57;
  NSString v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  char *v66;
  uint64_t v67;
  void *v68;
  id v69;
  void *v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v2);
  v76 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for DownloadButton.Style(0);
  __chkstk_darwin(v8);
  v77 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v72 - v11;
  v13 = type metadata accessor for Glyph(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v72 - v17;
  v22 = __chkstk_darwin(v19);
  v23 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__downloadIcon];
  if (v23
    && (v24 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__sizingDownloadIcon]) != 0)
  {
    v25 = v23;
    v24;
  }
  else
  {
    v74 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__downloadIcon;
    v75 = v12;
    v26 = v21;
    v27 = (char *)&v72 - v20;
    static Glyph.EpisodeHero.download.getter(v22);
    v78 = v26;
    v79 = v27;
    v28 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
    v28(v18, v27, v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v4);
    v29 = objc_msgSend(v1, "traitCollection");
    v73 = v13;
    v30 = v29;
    objc_msgSend(v29, "displayScale");
    v32 = v31;
    if (v31 < COERCE_DOUBLE(1))
    {
      v33 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v33, "scale");
      v32 = v34;

    }
    v35 = CGFloat.rounded(_:toScale:)((uint64_t)v7, v32, 2.5);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v36 = (void *)objc_opt_self(UIColor);
    v37 = objc_msgSend(v36, "whiteColor");
    v38 = objc_msgSend(v36, "whiteColor");
    v39 = objc_msgSend(v38, "colorWithAlphaComponent:", 0.5);

    v40 = (uint64_t)v75;
    v41 = v73;
    v28(&v75[v8[6]], v79, v73);
    v42 = v18;
    v43 = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v40, v42, v41);
    v44 = v40 + v8[5];
    *(_QWORD *)v44 = 0;
    *(_QWORD *)(v44 + 8) = 0;
    *(_BYTE *)(v44 + 16) = 1;
    *(_QWORD *)(v44 + 24) = 0x3FF0000000000000;
    *(double *)(v44 + 32) = v35;
    *(_QWORD *)(v44 + 40) = 0;
    *(_QWORD *)(v44 + 48) = 0;
    *(_BYTE *)(v44 + 56) = 1;
    *(_QWORD *)(v44 + 64) = 0;
    *(_QWORD *)(v44 + 72) = v37;
    *(_QWORD *)(v44 + 80) = v39;
    *(_QWORD *)(v44 + 88) = 0;
    *(_BYTE *)(v40 + v8[7]) = 0;
    v45 = v77;
    sub_FB13C(v40, v77);
    v46 = objc_allocWithZone((Class)type metadata accessor for DownloadButton(0));
    v46[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_episodeCellState] = 3;
    *(_QWORD *)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressView] = 0;
    v47 = &v46[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressState];
    *(_QWORD *)v47 = 0;
    *((_WORD *)v47 + 4) = 256;
    v48 = &v46[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_downloadButtonStyle];
    sub_FB13C(v45, (uint64_t)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_downloadButtonStyle]);
    v28(v15, v48, v43);
    v49 = type metadata accessor for Glyph.Color(0);
    v50 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v76, 1, 1, v49);
    GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v15, v50, 0, 0, 1, 0.0, 0.0, 0.0, 0.0);
    v52 = v51;
    sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v53 = swift_allocObject(&unk_384F20, 24, 7);
    swift_unknownObjectWeakInit(v53 + 16, v52);
    v54 = v52;
    v56 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v55, 0, 0, 0, sub_FB1A4, v53);
    objc_msgSend(v54, "addAction:forControlEvents:", v56, 0x2000);

    v57 = v54;
    v58 = String._bridgeToObjectiveC()();
    objc_msgSend(v57, "setAccessibilityIdentifier:", v58);

    sub_FB1AC(v45);
    v59 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_downloadPresenter];
    swift_retain(v59);
    sub_FB04C(v60);
    objc_msgSend(v57, "setUserInteractionEnabled:", 0, swift_release(v59).n128_f64[0]);
    v61 = v57;
    v62 = objc_msgSend(v36, "whiteColor");
    v63 = objc_msgSend(v62, "colorWithAlphaComponent:", 0.5);

    objc_msgSend(v61, "setTintColor:", v63);
    v64 = objc_msgSend(v61, "layer");
    objc_msgSend(v64, "setCompositingFilter:", kCAFilterPlusL);

    objc_msgSend(v1, "addSubview:", v61);
    objc_msgSend(v61, "setAlpha:", 0.0);
    v65 = *(void **)&v1[v74];
    *(_QWORD *)&v1[v74] = v52;
    v25 = v61;

    v66 = v79;
    v68 = (void *)Glyph.image.getter(v67);
    v69 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v68);

    objc_msgSend(v69, "setHidden:", 1);
    objc_msgSend(v1, "addSubview:", v69);
    sub_FB1AC(v40);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v66, v43);
    v70 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__sizingDownloadIcon];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__sizingDownloadIcon] = v69;
    v69;

  }
  return v25;
}

void sub_147830(char *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  void **v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  __n128 v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  __n128 v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  char v75;
  char v76;
  int v78;
  int v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  char v85;
  Swift::OpaquePointer v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD aBlock[5];
  uint64_t v91;
  _OWORD v92[3];
  void **v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t);
  void *v96;
  id (*v97)();
  uint64_t v98;
  UIImage_optional v99;

  v89 = type metadata accessor for DownloadButtonPresenter.Data(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v3 = (uint64_t *)((char *)&v87 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v4);
  v6 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_episode;
  swift_retain(*(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_episode]);
  PlayButtonPresenter.Data.init(lockup:)(v8);
  PlayButton.data.setter((uint64_t)v6);
  v9 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_contextMenuButton];
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_graph;
  v11 = *(void ***)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_graph];
  v12 = *(_QWORD *)&a1[v7];
  v97 = (id (*)())type metadata accessor for LegacyEpisodeLockup(0);
  v98 = sub_239FC((unint64_t *)&qword_3D7600, 255, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
  v93 = v11;
  v94 = v12;
  v13 = (void *)objc_opt_self(UIDeferredMenuElement);
  v14 = swift_allocObject(&unk_3850C0, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v9);
  sub_148A38((uint64_t *)&v93, (uint64_t)v92);
  v15 = swift_allocObject(&unk_3850E8, 80, 7);
  v16 = v92[1];
  *(_OWORD *)(v15 + 24) = v92[0];
  *(_QWORD *)(v15 + 16) = v11;
  *(_OWORD *)(v15 + 40) = v16;
  *(_OWORD *)(v15 + 56) = v92[2];
  *(_QWORD *)(v15 + 72) = v14;
  aBlock[4] = sub_148AB0;
  v91 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_148184;
  aBlock[3] = &block_descriptor_42;
  v17 = _Block_copy(aBlock);
  v18 = v91;
  swift_retain_n(v11, 2);
  swift_retain(v12);
  v19 = objc_msgSend(v13, "elementWithUncachedProvider:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);
  sub_E710(0, &qword_3D4CF8, UIMenu_ptr);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_2F11D0;
  *(_QWORD *)(v21 + 32) = v19;
  *(_QWORD *)&v92[0] = v21;
  specialized Array._endMutation()(v21);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v99.value.super.isa = 0;
  v99.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v99, 0, 0xFFFFFFFFFFFFFFFFLL, *(UIMenuElementSize *)&v92[0], v86).super.super.isa;
  sub_148AC0(&v93);
  objc_msgSend(v9, "setMenu:", isa);

  v24 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkStateMachine;
  v25 = *(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkStateMachine];
  if (v25)
  {
    v26 = swift_retain(*(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkStateMachine]);
    dispatch thunk of EpisodeStateMachine.removeStateTransitionActions(for:)(a1, v26);
    swift_release(v25);
  }
  v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_downloadPresenter;
  v28 = *(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_downloadPresenter];
  if (v28)
  {
    v29 = swift_retain(*(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_downloadPresenter]);
    dispatch thunk of DownloadButtonPresenter.delegate.setter(0, 0, v29);
    swift_release(v28);
  }
  v30 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__downloadIcon;
  v31 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__downloadIcon];
  if (v31)
  {
    v32 = v31;
    sub_FB04C(0);

  }
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D84F8);
  v34 = *(_QWORD *)&a1[v10];
  v35 = type metadata accessor for BaseObjectGraph(0);
  v36 = swift_retain(v34);
  inject<A, B>(_:from:)(&v93, v33, v34, v33, v35, v36);
  swift_release(v34);
  v37 = v93;
  v38 = *(_QWORD *)&a1[v7];
  v39 = swift_retain(v38);
  v40 = EpisodeStateController.stateMachine(for:)(v39);
  swift_release(v38);
  v41 = *(_QWORD *)&a1[v24];
  *(_QWORD *)&a1[v24] = v40;
  v42 = swift_release(v41);
  v43 = *(_QWORD *)&a1[v7];
  *v3 = v43;
  v44.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t, __n128))(v88 + 104))(v3, enum case for DownloadButtonPresenter.Data.lockup(_:), v89, v42);
  v45 = *(_QWORD *)&a1[v10];
  v46 = type metadata accessor for DownloadButtonPresenter(0, v44);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  swift_retain(v43);
  v47 = swift_retain(v45);
  v48 = DownloadButtonPresenter.init(data:graph:)(v3, v45, v47);
  v49 = *(_QWORD *)&a1[v27];
  *(_QWORD *)&a1[v27] = v48;
  swift_release(v49);
  v51 = *(_QWORD *)&a1[v24];
  if (v51)
  {
    v52 = swift_allocObject(&unk_385138, 24, 7);
    swift_unknownObjectWeakInit(v52 + 16, a1);
    v53 = swift_retain(v51);
    dispatch thunk of EpisodeStateMachine.addStateTransitionObserver(_:action:)(v53);
    swift_release(v51);
    swift_release(v52);
  }
  v54 = *(_QWORD *)&a1[v27];
  if (v54)
  {
    v55 = sub_239FC(&qword_3D8500, v50, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeHeroButtonAreaUIKitView, (uint64_t)&unk_2F97B0);
    swift_retain(v54);
    v56 = a1;
    dispatch thunk of DownloadButtonPresenter.delegate.setter(a1, v55, v57);
    swift_release(v54);
  }
  v58 = *(void **)&a1[v30];
  if (v58)
  {
    v59 = *(_QWORD *)&a1[v27];
    swift_retain(v59);
    v60 = v58;
    sub_FB04C(v59);

    swift_release(v59);
  }
  v61 = *(_QWORD *)&a1[v24];
  if (v61)
  {
    v62 = swift_retain(*(_QWORD *)&a1[v24]);
    dispatch thunk of EpisodeStateMachine.currentState.getter(v62);
    swift_release(v61);
    v63 = (char)v93;
  }
  else
  {
    v63 = 0;
  }
  v64 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkState;
  v65 = a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkState];
  a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkState] = v63;
  v66 = EpisodeBookmarkState.isEpisodeBookmarked.getter(v65) & 1;
  if (v66 != (EpisodeBookmarkState.isEpisodeBookmarked.getter(a1[v64]) & 1))
  {
    v67 = (void *)objc_opt_self(UIView);
    v68 = swift_allocObject(&unk_385160, 24, 7);
    *(_QWORD *)(v68 + 16) = a1;
    v97 = sub_148790;
    v98 = v68;
    v93 = _NSConcreteStackBlock;
    v94 = 1107296256;
    v95 = sub_24360;
    v96 = &block_descriptor_51;
    v69 = _Block_copy(&v93);
    v70 = v98;
    v71 = a1;
    swift_release(v70);
    objc_msgSend(v67, "animateWithDuration:animations:", v69, 0.2);
    _Block_release(v69);
  }
  v72 = *(_QWORD *)&a1[v27];
  if (!v72)
  {
    v85 = a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_shouldShowDownloadIcon];
    a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_shouldShowDownloadIcon] = 0;
    if ((v85 & 1) == 0)
      goto LABEL_27;
    goto LABEL_26;
  }
  v73 = swift_retain(*(_QWORD *)&a1[v27]);
  v74 = dispatch thunk of DownloadButtonPresenter.currentState.getter(v73);
  v76 = v75;
  swift_release(v72);
  v78 = (v76 & 1) == 0 || v74 != 0;
  v79 = a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_shouldShowDownloadIcon];
  a1[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_shouldShowDownloadIcon] = v78;
  if (v79 != v78)
  {
LABEL_26:
    v80 = (void *)objc_opt_self(UIView);
    v81 = swift_allocObject(&unk_3851B0, 24, 7);
    *(_QWORD *)(v81 + 16) = a1;
    v97 = sub_148790;
    v98 = v81;
    v93 = _NSConcreteStackBlock;
    v94 = 1107296256;
    v95 = sub_24360;
    v96 = &block_descriptor_58;
    v82 = _Block_copy(&v93);
    v83 = v98;
    v84 = a1;
    swift_release(v83);
    objc_msgSend(v80, "animateWithDuration:animations:", v82, 0.2);
    _Block_release(v82);
  }
LABEL_27:
  swift_release(v37);
}

void sub_147F40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  __n128 v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;
  char v15;
  char v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    dispatch thunk of EpisodeStateMachine.currentState.getter(v4);
    v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkState;
    v7 = v5[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkState];
    v5[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkState] = v15;
    v8 = EpisodeBookmarkState.isEpisodeBookmarked.getter(v7) & 1;
    if (v8 != (EpisodeBookmarkState.isEpisodeBookmarked.getter(v5[v6]) & 1))
    {
      v9 = (void *)objc_opt_self(UIView);
      v10 = swift_allocObject(&unk_385200, 24, 7);
      *(_QWORD *)(v10 + 16) = v5;
      v13[4] = sub_148790;
      v14 = v10;
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 1107296256;
      v13[2] = sub_24360;
      v13[3] = &block_descriptor_65;
      v11 = _Block_copy(v13);
      v12 = v14;
      v5 = v5;
      swift_release(v12);
      objc_msgSend(v9, "animateWithDuration:animations:", v11, 0.2);
      _Block_release(v11);
    }

  }
}

uint64_t type metadata accessor for EpisodeHeroButtonAreaUIKitView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView);
}

void sub_148178(uint64_t a1, uint64_t a2, char a3)
{
  sub_148680(a2, a3 & 1);
}

double sub_148184(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(void (*)(uint64_t), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;
  double result;

  v3 = *(void (**)(void (*)(uint64_t), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_385250, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain(v2);
  v3(sub_148B58, v5, v6);
  swift_release(v2);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_1481F4(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_E710(0, (unint64_t *)&unk_3D4C80, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

void sub_148258()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkStateMachine] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkState] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_downloadPresenter] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_shouldShowDownloadIcon] = 0;
  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_moreIcon;
  *(_QWORD *)&v0[v1] = sub_1456B0();
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkIcon] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__downloadIcon] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView__sizingDownloadIcon] = 0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_contextMenuButton;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  objc_msgSend(v3, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v3, "setPreferredMenuElementOrder:", 2);
  objc_msgSend(v3, "setHoverStyle:", 0);
  *(_QWORD *)&v0[v2] = v3;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/EpisodeHeroButtonAreaUIKit.swift", 56, 2, 193, 0);
  __break(1u);
}

void sub_14839C(char a1, uint64_t a2, id a3, double a4, double a5, double a6, double a7)
{
  uint64_t ObjCClassFromMetadata;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[8];
  _QWORD aBlock[5];
  uint64_t v14;

  v12[2] = a3;
  *(double *)&v12[3] = a4;
  *(double *)&v12[4] = a5;
  *(double *)&v12[5] = a6;
  *(double *)&v12[6] = a7;
  if ((a1 & 1) != 0)
  {
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(a2);
    v8 = swift_allocObject(&unk_384EA8, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_1487AC;
    *(_QWORD *)(v8 + 24) = v12;
    v9 = swift_allocObject(&unk_384ED0, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_43920;
    *(_QWORD *)(v9 + 24) = v8;
    aBlock[4] = sub_101EC;
    v14 = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_920D4;
    aBlock[3] = &block_descriptor_9_0;
    v10 = _Block_copy(aBlock);
    v11 = v14;
    swift_retain(v9);
    objc_msgSend((id)ObjCClassFromMetadata, "performWithoutAnimation:", v10, swift_release(v11).n128_f64[0]);
    _Block_release(v10);
    LOBYTE(ObjCClassFromMetadata) = swift_isEscapingClosureAtFileLocation(v9, "", 144, 489, 37, 1);
    swift_release(v8);
    swift_release(v9);
    if ((ObjCClassFromMetadata & 1) != 0)
      __break(1u);
  }
  else
  {
    objc_msgSend(a3, "setFrame:");
  }
}

void sub_148508(char a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t ObjCClassFromMetadata;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[8];
  _QWORD aBlock[5];
  uint64_t v15;

  v13[2] = a3;
  *(double *)&v13[3] = a4;
  *(double *)&v13[4] = a5;
  *(double *)&v13[5] = a6;
  *(double *)&v13[6] = a7;
  if ((a1 & 1) != 0)
  {
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(a2);
    v8 = swift_allocObject(&unk_384F48, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_148808;
    *(_QWORD *)(v8 + 24) = v13;
    v9 = swift_allocObject(&unk_384F70, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_43A64;
    *(_QWORD *)(v9 + 24) = v8;
    aBlock[4] = sub_EC6A0;
    v15 = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_920D4;
    aBlock[3] = &block_descriptor_23;
    v10 = _Block_copy(aBlock);
    v11 = v15;
    swift_retain(v9);
    objc_msgSend((id)ObjCClassFromMetadata, "performWithoutAnimation:", v10, swift_release(v11).n128_f64[0]);
    _Block_release(v10);
    LOBYTE(ObjCClassFromMetadata) = swift_isEscapingClosureAtFileLocation(v9, "", 144, 489, 37, 1);
    swift_release(v8);
    swift_release(v9);
    if ((ObjCClassFromMetadata & 1) == 0)
      return;
    __break(1u);
  }
  v12 = *(void **)(a3 + OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkIcon);
  if (v12)
    objc_msgSend(v12, "setFrame:");
}

void sub_148680(uint64_t a1, char a2)
{
  _BYTE *v2;
  int v4;
  int v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _BYTE *v10;
  _QWORD v11[5];
  uint64_t v12;

  v4 = (a2 & 1) == 0 || a1 != 0;
  v5 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_shouldShowDownloadIcon];
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_shouldShowDownloadIcon] = v4;
  if (v4 != v5)
  {
    v6 = (void *)objc_opt_self(UIView);
    v7 = swift_allocObject(&unk_384E58, 24, 7);
    *(_QWORD *)(v7 + 16) = v2;
    v11[4] = sub_148790;
    v12 = v7;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_24360;
    v11[3] = &block_descriptor_28;
    v8 = _Block_copy(v11);
    v9 = v12;
    v10 = v2;
    swift_release(v9);
    objc_msgSend(v6, "animateWithDuration:animations:", v8, 0.2);
    _Block_release(v8);
  }
}

uint64_t sub_14876C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_28(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1487AC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_1487C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1487D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1487E4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id sub_148808()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews30EpisodeHeroButtonAreaUIKitView_bookmarkIcon);
  if (result)
    return objc_msgSend(result, "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
  return result;
}

uint64_t sub_148834()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_148844()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t destroy for EpisodeHeroButtonAreaUIKit(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t initializeWithCopy for EpisodeHeroButtonAreaUIKit(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v5;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for EpisodeHeroButtonAreaUIKit(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for EpisodeHeroButtonAreaUIKit(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  __int128 v5;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for EpisodeHeroButtonAreaUIKit()
{
  return &type metadata for EpisodeHeroButtonAreaUIKit;
}

unint64_t sub_14898C()
{
  unint64_t result;

  result = qword_3D84E8;
  if (!qword_3D84E8)
  {
    result = swift_getWitnessTable(&unk_2F988C, &type metadata for EpisodeHeroButtonAreaUIKit);
    atomic_store(result, (unint64_t *)&qword_3D84E8);
  }
  return result;
}

void *sub_1489D0()
{
  return &protocol witness table for Never;
}

unint64_t sub_1489DC()
{
  unint64_t result;

  result = qword_3D84F0;
  if (!qword_3D84F0)
  {
    result = swift_getWitnessTable(&unk_2F97FC, &type metadata for EpisodeHeroButtonAreaUIKit);
    atomic_store(result, (unint64_t *)&qword_3D84F0);
  }
  return result;
}

void sub_148A20()
{
  uint64_t v0;

  sub_147830(*(char **)(v0 + 16));
}

uint64_t sub_148A28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_148A38(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for PodcastsContextMenuProvider(a2, a1);
  return a2;
}

uint64_t sub_148A74()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 4);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_148AB0(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_14A380(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24, *(_QWORD *)(v2 + 72));
}

_QWORD *sub_148AC0(_QWORD *a1)
{
  destroy for PodcastsContextMenuProvider(a1);
  return a1;
}

void sub_148AF4(uint64_t a1)
{
  uint64_t v1;

  sub_147F40(a1, v1);
}

id sub_148AFC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "setNeedsLayout");
  return objc_msgSend(v1, "layoutIfNeeded");
}

uint64_t sub_148B34()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_148B58(uint64_t a1)
{
  uint64_t v1;

  sub_1481F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_148B60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_148B8C()
{
  uint64_t v0;

  return sub_145CB4(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_148B94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_148BA4()
{
  sub_94B0C();
  return 1;
}

uint64_t sub_148BC8()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "_accessibilityShowContextMenuForElement:targetPointValue:", *(_QWORD *)(v0 + 16), 0);
  return 1;
}

void sub_148D10()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[5];
  uint64_t v9;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_385500, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_385528, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_149608;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_101EC;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_920D4;
  v8[3] = &block_descriptor_29;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 149, 56, 40, 1);
  swift_release(v2);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

id sub_148E44(char *a1)
{
  uint64_t v2;
  id result;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  char *v9;
  double v10;
  double v14;
  double v15;
  CGFloat MaxX;
  double v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  char *v23;
  id v24;
  id v25;
  void *v26;
  char *v27;
  id v28;
  CGRect v29;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_checkmarkImageView;
  result = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_checkmarkImageView], "image");
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "size");
    v6 = v5;
    v8 = v7;

    v9 = (char *)objc_msgSend(a1, "effectiveUserInterfaceLayoutDirection");
    objc_msgSend(a1, "bounds");
    if (v9 == (_BYTE *)&dword_0 + 1)
    {
      v14 = *(double *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_checkmarkInset];
      v15 = v10 + v14;
    }
    else
    {
      MaxX = CGRectGetMaxX(*(CGRect *)&v10);
      v14 = *(double *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_checkmarkInset];
      v15 = MaxX - v14 - v6;
    }
    objc_msgSend(a1, "bounds");
    v17 = CGRectGetMaxY(v29) - v14 - v8;
    v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_blurredImageBackgroundView;
    v19 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_blurredImageBackgroundView], "maskView");
    objc_msgSend(v19, "setFrame:", v15, v17, v6, v8);

    v20 = *(id *)&a1[v18];
    objc_msgSend(a1, "bounds");
    objc_msgSend(v20, "setFrame:");

    v21 = objc_msgSend(*(id *)&a1[v18], "superview");
    if (!v21)
      goto LABEL_8;
    v22 = v21;
    sub_FA88();
    v23 = a1;
    v24 = v22;
    LOBYTE(v22) = static NSObject.== infix(_:_:)(v24, v23);

    if ((v22 & 1) == 0)
LABEL_8:
      objc_msgSend(a1, "addSubview:", *(_QWORD *)&a1[v18]);
    objc_msgSend(*(id *)&a1[v2], "setFrame:", v15, v17, v6, v8);
    v25 = objc_msgSend(*(id *)&a1[v2], "superview");
    if (!v25)
      goto LABEL_11;
    v26 = v25;
    sub_FA88();
    v27 = a1;
    v28 = v26;
    LOBYTE(v26) = static NSObject.== infix(_:_:)(v28, v27);

    if ((v26 & 1) == 0)
LABEL_11:
      objc_msgSend(a1, "addSubview:", *(_QWORD *)&a1[v2]);
    return objc_msgSend(a1, "bringSubviewToFront:", *(_QWORD *)&a1[v2]);
  }
  return result;
}

void sub_149134()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_checkmarkImageView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_blurredImageBackgroundView));
}

uint64_t type metadata accessor for LegacyArtworkCheckmarkProgressOverlay()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay);
}

uint64_t sub_1491B8()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_progressStyle);
}

void sub_1491CC(__int128 *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void (*v3)(__int128 *);
  _QWORD *v4;
  __int128 v5;

  v2 = *(_QWORD **)(*v1
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_blurredImageBackgroundView);
  v5 = *a1;
  v3 = *(void (**)(__int128 *))&stru_388.segname[(swift_isaMask & *v2) + 8];
  v4 = v2;
  v3(&v5);

}

id sub_149238(float a1)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *(float *)((char *)*v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_progress) = a1;
  return objc_msgSend(v2, "setNeedsLayout");
}

uint64_t sub_149254(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_playing) = result;
  return result;
}

void sub_149268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  void *v13;
  char *v14;
  id v15;
  NSString v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  _QWORD *v32;
  void (*v33)(_QWORD *);
  _QWORD *v34;
  objc_class *ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;
  _QWORD v40[2];

  v5 = v4;
  v37 = a2;
  v38 = a4;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v8);
  v10 = (objc_class **)((char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_progressStyle] = 2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_checkmarkInset] = 0;
  *(_DWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_progress] = 0;
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_playing] = 0;
  v11 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v11);
  v13 = (void *)objc_opt_self(NSBundle);
  v14 = v5;
  v36 = ObjCClassFromMetadata;
  v15 = objc_msgSend(v13, "bundleForClass:", ObjCClassFromMetadata);
  v16 = String._bridgeToObjectiveC()();
  v17 = (void *)objc_opt_self(UIImage);
  v18 = objc_msgSend(v17, "imageNamed:inBundle:", v16, v15);

  if (v18)
  {
    v19 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v18);

    *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_checkmarkImageView] = v19;
    v20 = type metadata accessor for LegacyCachingArtworkView(0);
    *v10 = 0x401C000000000000;
    v21 = enum case for ImageBlur.light(_:);
    v22 = type metadata accessor for ImageBlur(0);
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v23 + 104))(v10, v21, v22);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v22);
    v24 = swift_getObjectType();
    swift_unknownObjectRetain(a1);
    swift_unknownObjectRetain(a3);
    v25 = sub_1BFD2C(a1, v37, a3, 0, (uint64_t)v10, v20, v24, v38);
    swift_unknownObjectRelease(a1);
    swift_unknownObjectRelease(a3);
    v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_blurredImageBackgroundView;
    *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews37LegacyArtworkCheckmarkProgressOverlay_blurredImageBackgroundView] = v25;
    v27 = v25;
    v28 = objc_msgSend(v13, "bundleForClass:", v36);
    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v17, "imageNamed:inBundle:", v29, v28);

    if (v30)
    {
      v31 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v30);

      objc_msgSend(v27, "setMaskView:", v31);
      v32 = *(_QWORD **)&v14[v26];
      v40[0] = 0;
      v40[1] = 0;
      v33 = *(void (**)(_QWORD *))&stru_388.segname[(swift_isaMask & *v32) + 8];
      v34 = v32;
      v33(v40);

      v39.receiver = v14;
      v39.super_class = ObjectType;
      objc_msgSendSuper2(&v39, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1495E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_149608()
{
  uint64_t v0;

  return sub_148E44(*(char **)(v0 + 16));
}

uint64_t sub_149610()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_29(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_149638(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  void *v16;
  __n128 v17;
  void (*v18)(char *, uint64_t);
  double result;
  uint64_t v20;

  v4 = type metadata accessor for DispatchTime(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - v9;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews22HoverScrollCoordinator_futureWork;
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HoverScrollCoordinator_futureWork);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews22HoverScrollCoordinator_futureWork) = a1;
  swift_retain(a1);
  if (v12)
    dispatch thunk of DispatchWorkItem.cancel()(v13);
  v14 = *(_QWORD *)(v2 + v11);
  if (v14)
  {
    sub_1E2A0();
    v15 = swift_retain(v14);
    v16 = (void *)static OS_dispatch_queue.main.getter(v15);
    static DispatchTime.now()(v17);
    + infix(_:_:)(v7, 0.2);
    v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v7, v4);
    OS_dispatch_queue.asyncAfter(deadline:execute:)(v10, v14);
    swift_release(v14);

    v18(v10, v4);
  }
  swift_release(v12);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

double sub_1497A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  _QWORD *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject(&unk_3855C0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  aBlock[4] = sub_149A54;
  v18 = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_30;
  v6 = _Block_copy(aBlock);
  v16 = _swiftEmptyArrayStorage;
  v7 = sub_CF9B0();
  swift_retain(v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v9 = sub_CF9F8();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v8, v9, v2, v7);
  v10 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v11 = DispatchWorkItem.init(flags:block:)(v4, v6);
  v12 = v18;
  swift_release(v5);
  v13 = swift_release(v12);
  return sub_149638(v11, v13);
}

void sub_149918(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1A058C(1);

  }
}

id sub_1499CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HoverScrollCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HoverScrollCoordinator()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews22HoverScrollCoordinator);
}

uint64_t sub_149A30()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_149A54()
{
  uint64_t v0;

  sub_149918(v0);
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_30(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

UIMenu sub_149A74(uint64_t a1)
{
  uint64_t *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  UIMenuElementSize v12;
  Swift::String v13;
  Swift::OpaquePointer v15;
  _QWORD aBlock[5];
  uint64_t v17;
  UIMenuElementSize preferredElementSize[2];
  __int128 v19;
  __int128 v20;
  UIImage_optional v21;

  v3 = (void *)objc_opt_self(UIDeferredMenuElement);
  v4 = swift_allocObject(&unk_3856E8, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a1);
  v5 = *v1;
  sub_148A38(v1, (uint64_t)preferredElementSize);
  v6 = swift_allocObject(&unk_385710, 80, 7);
  v7 = v19;
  *(_OWORD *)(v6 + 24) = *(_OWORD *)preferredElementSize;
  *(_QWORD *)(v6 + 16) = v5;
  *(_OWORD *)(v6 + 40) = v7;
  *(_OWORD *)(v6 + 56) = v20;
  *(_QWORD *)(v6 + 72) = v4;
  aBlock[4] = sub_148AB0;
  v17 = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_148184;
  aBlock[3] = &block_descriptor_9_1;
  v8 = _Block_copy(aBlock);
  v9 = v17;
  swift_retain(v5);
  v10 = objc_msgSend(v3, "elementWithUncachedProvider:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
  sub_E710(0, &qword_3D4CF8, UIMenu_ptr);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_2F11D0;
  *(_QWORD *)(v12 + 32) = v10;
  preferredElementSize[0] = v12;
  specialized Array._endMutation()(v12);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v21.value.super.isa = 0;
  v21.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v21, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize[0], v15);
}

uint64_t PodcastsContextMenu.init(menuProvider:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B738(a1, a2);
}

id PodcastsContextMenu.makeUIView(context:)()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v1 = type metadata accessor for PodcastsContextUIButton();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "init");
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v4 = *(uint64_t (**)(void))(v3 + 8);
  v5 = v2;
  v6 = (void *)v4();
  objc_msgSend(v5, "setMenu:", v6);

  objc_msgSend(v5, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v5, "setPreferredMenuElementOrder:", 2);
  objc_msgSend(v5, "setHoverStyle:", 0);
  return v5;
}

uint64_t type metadata accessor for PodcastsContextUIButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23PodcastsContextUIButton);
}

void PodcastsContextMenu.updateUIView(_:context:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  id v6;

  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v4 = *(uint64_t (**)(void))(v3 + 8);
  v5 = a1;
  v6 = (id)v4();

  objc_msgSend(v5, "setMenu:", v6);
}

double PodcastsContextMenu.sizeThatFits(_:uiView:context:)(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    result = 0.0;
  if (result <= 44.0)
    return 44.0;
  return result;
}

uint64_t sub_149DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_14A64C();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_149E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_14A64C();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_149E80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_14A64C();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_149F10()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String v3;
  void *object;
  uint64_t v5;
  id v6;
  id v7;
  NSString v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD aBlock[5];
  uint64_t v15;
  Swift::String v16;

  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16._object = (void *)0xE000000000000000;
  v2._object = (void *)0x8000000000310320;
  v2._countAndFlagsBits = 0xD00000000000001CLL;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v16._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v16)._object;

  v5 = swift_allocObject(&unk_385618, 24, 7);
  *(_QWORD *)(v5 + 16) = v0;
  v6 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  v7 = v0;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  aBlock[4] = sub_148BC8;
  v15 = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_14A58C;
  aBlock[3] = &block_descriptor_31;
  v9 = _Block_copy(aBlock);
  v10 = objc_msgSend(v6, "initWithName:actionHandler:", v8, v9);

  _Block_release(v9);
  swift_release(v15);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_2F11D0;
  *(_QWORD *)(v12 + 32) = v10;
  aBlock[0] = v12;
  specialized Array._endMutation()(v12);
  return aBlock[0];
}

void sub_14A148(uint64_t a1)
{
  void *v1;
  NSArray v3;
  objc_super v4;

  if (a1)
  {
    sub_E710(0, &qword_3D8348, UIAccessibilityCustomAction_ptr);
    v3.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3.super.isa = 0;
  }
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for PodcastsContextUIButton();
  objc_msgSendSuper2(&v4, "setAccessibilityCustomActions:", v3.super.isa);

}

uint64_t sub_14A1D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id PodcastsContextUIButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for PodcastsContextUIButton();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id PodcastsContextUIButton.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PodcastsContextUIButton();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id PodcastsContextUIButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastsContextUIButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_14A380(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  _BYTE v31[24];
  _BYTE v32[24];
  _QWORD v33[5];
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v25 = a4;
  v29 = a2;
  v30 = a1;
  v7 = type metadata accessor for InteractionContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - v12;
  v27 = type metadata accessor for PresentationSource(0);
  v14 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  v28 = a3;
  BaseObjectGraph.inject<A>(_:)(v34, v17, v17);
  v18 = v35;
  v26 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  sub_1D5D4(v25 + 8, (uint64_t)v33);
  swift_beginAccess(a5, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  PresentationSource.init(view:)(Strong);
  swift_beginAccess(a5, v31, 0, 0);
  v20 = swift_unknownObjectWeakLoadStrong(a5);
  if (v20)
  {
    v21 = (void *)v20;
    UIView.interactionContext.getter(v20);

    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v10, v7);
  }
  else
  {
    static InteractionContext.none.getter(0);
  }
  v22 = dispatch thunk of EpisodeControllerProtocol.contextMenuItems(asPartOf:for:presentationSource:interactionContext:)(v28, v33, v16, v13, v18, v26);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v27);
  __swift_destroy_boxed_opaque_existential_0(v33);
  v30(v22);
  swift_bridgeObjectRelease(v22);
  return __swift_destroy_boxed_opaque_existential_0(v34);
}

uint64_t sub_14A58C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  LOBYTE(v4) = v4();
  swift_release(v3);

  return v4 & 1;
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_31(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_14A5F8()
{
  unint64_t result;

  result = qword_3D8598;
  if (!qword_3D8598)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PodcastsContextMenu, &type metadata for PodcastsContextMenu);
    atomic_store(result, (unint64_t *)&qword_3D8598);
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsContextMenu()
{
  return &type metadata for PodcastsContextMenu;
}

unint64_t sub_14A64C()
{
  unint64_t result;

  result = qword_3D85C8;
  if (!qword_3D85C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PodcastsContextMenu, &type metadata for PodcastsContextMenu);
    atomic_store(result, (unint64_t *)&qword_3D85C8);
  }
  return result;
}

uint64_t sub_14A690()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_14A6B4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 4);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t destroy for PodcastsContextMenuProvider(_QWORD *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;
  swift_release(*a1);
  return __swift_destroy_boxed_opaque_existential_0(v1);
}

uint64_t initializeWithCopy for PodcastsContextMenuProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t *v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t *, uint64_t);

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  v4 = a2 + 1;
  v5 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v5 - 8);
  swift_retain(v3);
  v7(a1 + 8, v4, v6);
  return a1;
}

uint64_t *assignWithCopy for PodcastsContextMenuProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4 = a2 + 1;
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v3);
  swift_release(v5);
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v4);
  return a1;
}

uint64_t *assignWithTake for PodcastsContextMenuProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  __swift_destroy_boxed_opaque_existential_0(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  a1[5] = a2[5];
  return a1;
}

ValueMetadata *type metadata accessor for PodcastsContextMenuProvider()
{
  return &type metadata for PodcastsContextMenuProvider;
}

uint64_t sub_14A840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t result;
  uint64_t *v23;
  __int128 v24;

  *(_QWORD *)a3 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v24, v6, v6);
  *(_OWORD *)(a3 + 8) = v24;
  v7 = type metadata accessor for CategoryView(0);
  v8 = a3 + *(int *)(v7 + 24);
  v9 = type metadata accessor for Category(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  v11 = type metadata accessor for InterestStateController(0);
  v12 = BaseObjectGraph.inject<A>(_:)(&v24, v11, v11);
  v13 = v24;
  v14 = Category.id.getter(v12);
  v15 = InterestStateController.stateMachine(for:)(v14);
  v16 = type metadata accessor for InterestStateMachine(0);
  v17 = sub_89A0(&qword_3D85F8, (uint64_t (*)(uint64_t))&type metadata accessor for InterestStateMachine, (uint64_t)&protocol conformance descriptor for InterestStateMachine);
  v18 = ObservedObject.init(wrappedValue:)(v15, v16, v17);
  v20 = v19;
  swift_release(a1);
  v21 = swift_release(v13);
  result = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 8))(a2, v9, v21);
  v23 = (uint64_t *)(a3 + *(int *)(v7 + 28));
  *v23 = v18;
  v23[1] = v20;
  return result;
}

uint64_t type metadata accessor for CategoryView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D8658;
  if (!qword_3D8658)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CategoryView);
  return result;
}

uint64_t sub_14A9D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  __int128 v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v7 = a1;
    v18 = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 8) = v18;
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for Category(0);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v4);
    v13 = swift_unknownObjectRetain(v18);
    v12(v9, v10, v11, v13);
    v14 = *(int *)(a3 + 28);
    v15 = (_QWORD *)(v7 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v4 = v16[1];
    *v15 = *v16;
    v15[1] = v4;
  }
  swift_retain(v4);
  return v7;
}

uint64_t sub_14AAB0(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  swift_unknownObjectRelease(a1[1]);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Category(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 28) + 8));
}

uint64_t sub_14AB18(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v18;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  v18 = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = v18;
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = type metadata accessor for Category(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v6);
  v12 = swift_unknownObjectRetain(v18);
  v11(v8, v9, v10, v12);
  v13 = *(int *)(a3 + 28);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  return a1;
}

uint64_t *sub_14ABD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[1];
  v9 = a2[2];
  v10 = a1[1];
  a1[1] = v8;
  swift_unknownObjectRetain(v8);
  swift_unknownObjectRelease(v10);
  a1[2] = v9;
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Category(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(a3 + 28);
  v16 = (uint64_t *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  *v16 = *v17;
  v18 = v17[1];
  v19 = v16[1];
  v16[1] = v18;
  swift_retain(v18);
  swift_release(v19);
  return a1;
}

uint64_t sub_14AC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Category(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t *sub_14AD14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a2[2];
  v8 = a1[1];
  a1[1] = a2[1];
  swift_unknownObjectRelease(v8);
  a1[2] = v7;
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Category(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = *(int *)(a3 + 28);
  v14 = (uint64_t *)((char *)a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_release(v18);
  return a1;
}

uint64_t sub_14ADB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_14ADC4);
}

uint64_t sub_14ADC4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Category(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_14AE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_14AE4C);
}

char *sub_14AE4C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Category(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_14AEC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_2F9B68;
  result = type metadata accessor for Category(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_2F9B68;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_14AF40(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32E60C, 1);
}

int64x2_t sub_14AF50()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4048000000000000uLL);
  xmmword_3D85D0 = (__int128)result;
  return result;
}

void sub_14AF68()
{
  qword_3D85E0 = 0x4014000000000000;
}

__n128 sub_14AF78()
{
  __n128 result;

  __asm { FMOV            V0.2D, #22.0 }
  xmmword_3D85E8 = (__int128)result;
  return result;
}

uint64_t sub_14AF8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t OpaqueTypeConformance2;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  uint64_t v84;
  unint64_t v85;

  v2 = v1;
  v82 = a1;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v80 = *(_QWORD *)(v3 - 8);
  v81 = v3;
  __chkstk_darwin(v3);
  v79 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v75 = *(_QWORD *)(v5 - 8);
  v76 = v5;
  __chkstk_darwin(v5);
  v70 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for CategoryView(0);
  v69 = *(_QWORD *)(v74 - 8);
  v7 = *(_QWORD *)(v69 + 64);
  __chkstk_darwin(v74);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8698);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86A8);
  v71 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86B0);
  v19 = *(_QWORD *)(v18 - 8);
  v72 = v18;
  v73 = v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86B8);
  __chkstk_darwin(v78);
  v68 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v77 = (char *)&v68 - v24;
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v25);
  *((_QWORD *)v11 + 1) = 0x4028000000000000;
  v11[16] = 0;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86C0);
  sub_14B568(v2, (uint64_t)&v11[*(int *)(v26 + 44)]);
  sub_D184((uint64_t)v11, (uint64_t)v14, &qword_3D8698);
  v14[*(int *)(v12 + 36)] = 0;
  sub_D1D4((uint64_t)v11, &qword_3D8698);
  sub_19C4C(v2, (uint64_t)v8, type metadata accessor for CategoryView);
  v27 = *(unsigned __int8 *)(v69 + 80);
  v28 = (v27 + 16) & ~v27;
  v29 = swift_allocObject(&unk_3858A0, v28 + v7, v27 | 7);
  sub_1B79C((uint64_t)v8, v29 + v28, type metadata accessor for CategoryView);
  v30 = sub_14CE38();
  View.onTapGesture(count:perform:)(1, sub_14CE0C, v29, v12, v30);
  swift_release(v29);
  v31 = sub_D1D4((uint64_t)v14, &qword_3D86A0);
  v32 = v70;
  static AccessibilityChildBehavior.combine.getter(v31);
  v84 = v12;
  v85 = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v84, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  View.accessibilityElement(children:)(v32, v15, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v32, v76);
  v34 = v17;
  v35 = (uint64_t)v68;
  v36 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v34, v15);
  v37 = Category.title.getter(v36);
  v39 = v38;
  v84 = v37;
  v85 = v38;
  v83[0] = v15;
  v83[1] = OpaqueTypeConformance2;
  v40 = swift_getOpaqueTypeConformance2(v83, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v41 = sub_D254();
  v42 = v72;
  View.accessibilityLabel<A>(_:)(&v84, v72, &type metadata for String, v40, v41);
  v43 = swift_bridgeObjectRelease(v39);
  v44.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v73 + 8))(v21, v42, v43);
  v45 = InterestStateMachine.currentState.getter(v44);
  v47 = InterestState.rawValue.getter(v45, v46);
  v49 = v48;
  v52 = InterestState.rawValue.getter(2, v50);
  v53 = v51;
  if (v47 == v52 && v49 == v51)
  {
    swift_bridgeObjectRelease_n(v49, 2);
  }
  else
  {
    v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v49, v52, v51, 0);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v53);
    if ((v54 & 1) == 0)
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86E8);
      v56 = v80;
      v57 = swift_allocObject(v59, ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72), *(unsigned __int8 *)(v80 + 80) | 7);
      *(_OWORD *)(v57 + 16) = xmmword_2F03C0;
      static AccessibilityTraits.isButton.getter(v57);
      goto LABEL_7;
    }
  }
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86E8);
  v56 = v80;
  v57 = swift_allocObject(v55, ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ 2 * *(_QWORD *)(v80 + 72), *(unsigned __int8 *)(v80 + 80) | 7);
  *(_OWORD *)(v57 + 16) = xmmword_2EFA20;
  v58 = static AccessibilityTraits.isButton.getter(v57);
  static AccessibilityTraits.isSelected.getter(v58);
LABEL_7:
  v84 = v57;
  v60 = sub_89A0(&qword_3D86F0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86F8);
  v62 = sub_10EDC(&qword_3D8700, &qword_3D86F8, (uint64_t)&protocol conformance descriptor for [A]);
  v63 = v79;
  v64 = v61;
  v65 = v81;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v84, v64, v62, v81, v60);
  v66 = (uint64_t)v77;
  ModifiedContent<>.accessibilityAddTraits(_:)(v63, v78);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v63, v65);
  sub_D1D4(v35, &qword_3D86B8);
  return sub_14CED4(v66, v82);
}

uint64_t sub_14B568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (**v41)(char *, char *, uint64_t, __n128);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  __n128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  __n128 v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t OpaqueTypeConformance2;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  char v123;
  uint64_t v124;
  __n128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __n128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  uint64_t v148;
  __n128 v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  unint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  char *v176;
  unint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(char *, char *, uint64_t);
  char *v188;
  uint64_t v189;
  uint64_t v190;
  int *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void (*v198)(char *, uint64_t, __n128);
  __n128 v199;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  void (**v206)(char *, char *, uint64_t, __n128);
  char *v207;
  char *v208;
  uint64_t v209;
  char *v210;
  uint64_t *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t KeyPath;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char v255;
  unint64_t v256;
  char v257;
  uint64_t v258;
  uint64_t v259;

  v243 = a2;
  v242 = type metadata accessor for BorderlessButtonStyle(0);
  v241 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v239 = (char *)&v201 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  __chkstk_darwin(v225);
  v231 = (uint64_t *)((char *)&v201 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v229 = type metadata accessor for Image.Scale(0);
  v228 = *(_QWORD *)(v229 - 8);
  __chkstk_darwin(v229);
  v227 = (char *)&v201 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8718);
  __chkstk_darwin(v224);
  v232 = (char *)&v201 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8720);
  __chkstk_darwin(v226);
  v233 = (uint64_t)&v201 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8728);
  __chkstk_darwin(v235);
  v236 = (uint64_t)&v201 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v240 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8730);
  v237 = *(_QWORD *)(v240 - 8);
  __chkstk_darwin(v240);
  v238 = (char *)&v201 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v234 = (char *)&v201 - v11;
  __chkstk_darwin(v12);
  v245 = (char *)&v201 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v14);
  v204 = (char *)&v201 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = type metadata accessor for Artwork(0);
  v209 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v208 = (char *)&v201 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7188);
  v202 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v207 = (char *)&v201 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v210 = (char *)&v201 - v20;
  v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7190);
  __chkstk_darwin(v217);
  v222 = (char *)&v201 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC0);
  __chkstk_darwin(v22);
  v215 = (char *)&v201 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = type metadata accessor for RoundedCornerStyle(0);
  v213 = *(_QWORD *)(v214 - 8);
  __chkstk_darwin(v214);
  v212 = (char *)&v201 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v218);
  v211 = (uint64_t *)((char *)&v201 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v201 = type metadata accessor for Color.RGBColorSpace(0);
  v26 = *(_QWORD *)(v201 - 8);
  __chkstk_darwin(v201);
  v28 = (char *)&v201 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7198);
  v206 = *(void (***)(char *, char *, uint64_t, __n128))(KeyPath - 8);
  __chkstk_darwin(KeyPath);
  v203 = (char *)&v201 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v205 = (char *)&v201 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v32);
  v34 = (char *)&v201 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v201 - v36;
  v38 = type metadata accessor for ArtworkModel(0);
  v39 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v41 = (void (**)(char *, char *, uint64_t, __n128))((char *)&v201 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D71A0);
  __chkstk_darwin(v42);
  v244 = (uint64_t)&v201 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v246 = (uint64_t)&v201 - v45;
  v220 = type metadata accessor for CategoryView(0);
  v46 = *(int *)(v220 + 24);
  v230 = a1;
  v47 = a1 + v46;
  Category.artwork.getter();
  v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38);
  v223 = v17;
  v216 = v47;
  if (v48 == 1)
  {
    v49 = sub_D1D4((uint64_t)v37, &qword_3D0A58);
    if (qword_3CF698 != -1)
      v49 = swift_once(&qword_3CF698, sub_14AF50);
    v51 = xmmword_3D85D0;
    v52 = static Alignment.center.getter(v49, v50);
    v54 = _FrameLayout.init(width:height:alignment:)(&v254, v51, 0, *((_QWORD *)&v51 + 1), 0, v52, v53);
    v55 = v254;
    v56 = v255;
    v57 = v256;
    v58 = v257;
    v59 = v258;
    v60 = v259;
    v61 = Category.color.getter(v54);
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v28, enum case for Color.RGBColorSpace.sRGB(_:), v201);
    v62 = Color.init(_:red:green:blue:opacity:)(v28, (double)v61 / 255.0, (double)BYTE1(v61) / 255.0, (double)BYTE2(v61) / 255.0, (double)HIBYTE(v61) / 255.0);
    v247 = v55;
    LOBYTE(v248) = v56;
    v249 = v57;
    LOBYTE(v250) = v58;
    v251 = v59;
    v252 = v60;
    v253 = v62;
    if (qword_3CF6A0 != -1)
      swift_once(&qword_3CF6A0, sub_14AF68);
    v63 = qword_3D85E0;
    v64 = v213;
    v65 = v212;
    v66 = v214;
    (*(void (**)(char *, _QWORD, uint64_t))(v213 + 104))(v212, enum case for RoundedCornerStyle.continuous(_:), v214);
    v67 = v218;
    v68 = v211;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))((char *)v211 + *(int *)(v218 + 20), v65, v66);
    *v68 = v63;
    v68[1] = v63;
    v69 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    v70 = (uint64_t)v215;
    static ArtworkShadow.default.getter(v69);
    v71 = type metadata accessor for ArtworkShadow(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v70, 0, 1, v71);
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D71A8);
    v73 = sub_11581C();
    v74 = sub_89A0(&qword_3D71D0, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
    v75 = v203;
    View.artworkStyle<A>(shape:shadow:)(v68, v70, v72, v67, v73, v74);
    sub_D1D4(v70, &qword_3D0EC0);
    sub_FA4C((uint64_t)v68, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v76 = swift_release(v253);
    v77 = (uint64_t)v206;
    v78 = v205;
    v79 = KeyPath;
    v206[4](v205, v75, KeyPath, v76);
    v80 = v222;
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v222, v78, v79);
    swift_storeEnumTagMultiPayload(v80, v217, 1);
    v81 = sub_89A0(&qword_3D0E68, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v247 = v221;
    v248 = v67;
    v249 = v81;
    v250 = v74;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v247, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    v247 = v72;
    v248 = v67;
    v249 = v73;
    v250 = v74;
    v83 = swift_getOpaqueTypeConformance2(&v247, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    _ConditionalContent<>.init(storage:)(v80, v223, v79, OpaqueTypeConformance2, v83);
    v84 = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v78, v79);
  }
  else
  {
    sub_1B79C((uint64_t)v37, (uint64_t)v41, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    sub_19C4C((uint64_t)v41, (uint64_t)v34, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v34, 0, 1, v38);
    if (qword_3CF698 != -1)
      swift_once(&qword_3CF698, sub_14AF50);
    v206 = v41;
    v85 = v202;
    v86 = xmmword_3D85D0;
    v87 = type metadata accessor for CropCode(0);
    v88 = v204;
    v89 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v204, 1, 1, v87);
    v90 = static Alignment.top.getter(v89);
    v91 = v208;
    Artwork.init(artwork:fittingImageSize:isResizable:alignment:cropCodeOverride:contentMode:)(v34, 0, v90, v92, v88, 1, *(double *)&v86, *((double *)&v86 + 1));
    if (qword_3CF6A0 != -1)
      swift_once(&qword_3CF6A0, sub_14AF68);
    v93 = qword_3D85E0;
    v94 = v213;
    v95 = v212;
    v96 = v214;
    (*(void (**)(char *, _QWORD, uint64_t))(v213 + 104))(v212, enum case for RoundedCornerStyle.continuous(_:), v214);
    v97 = v218;
    v98 = v211;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))((char *)v211 + *(int *)(v218 + 20), v95, v96);
    *v98 = v93;
    v98[1] = v93;
    v99 = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v95, v96);
    v100 = (uint64_t)v215;
    static ArtworkShadow.default.getter(v99);
    v101 = type metadata accessor for ArtworkShadow(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v100, 0, 1, v101);
    v102 = sub_89A0(&qword_3D0E68, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v103 = sub_89A0(&qword_3D71D0, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
    v104 = v207;
    v105 = v221;
    View.artworkStyle<A>(shape:shadow:)(v98, v100, v221, v97, v102, v103);
    sub_D1D4(v100, &qword_3D0EC0);
    sub_FA4C((uint64_t)v98, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v91, v105);
    v106 = v210;
    v107 = v104;
    v108 = v223;
    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v210, v107, v223);
    v109 = v222;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v222, v106, v108);
    swift_storeEnumTagMultiPayload(v109, v217, 0);
    v247 = v105;
    v248 = v97;
    v249 = v102;
    v250 = v103;
    v110 = swift_getOpaqueTypeConformance2(&v247, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    v111 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D71A8);
    v112 = sub_11581C();
    v247 = v111;
    v248 = v97;
    v249 = v112;
    v250 = v103;
    v113 = swift_getOpaqueTypeConformance2(&v247, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    _ConditionalContent<>.init(storage:)(v109, v108, KeyPath, v110, v113);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v106, v108);
    v84 = sub_FA4C((uint64_t)v206, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
  v114 = 0xD000000000000010;
  v247 = Category.title.getter(v84);
  v248 = v115;
  v116 = sub_D254();
  v117 = Text.init<A>(_:)(&v247, &type metadata for String, v116);
  v119 = v118;
  v121 = v120;
  v123 = v122 & 1;
  v124 = static Font.callout.getter();
  v126 = Text.font(_:)(v125);
  v128 = v127;
  v130 = v129;
  v132 = v131;
  swift_release(v124);
  sub_D170(v117, v119, v123);
  v133 = swift_bridgeObjectRelease(v121);
  LODWORD(v247) = static HierarchicalShapeStyle.primary.getter(v133);
  v222 = (char *)Text.foregroundStyle<A>(_:)(&v247, v126, v128, v130 & 1, v132, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v221 = v134;
  LODWORD(v218) = v135;
  v223 = v136;
  sub_D170(v126, v128, v130 & 1);
  swift_bridgeObjectRelease(v132);
  KeyPath = swift_getKeyPath(&unk_2F9BD0);
  v137 = InterestStateMachine.currentState.getter();
  v139 = InterestState.rawValue.getter(v137, v138);
  v141 = v140;
  v144 = InterestState.rawValue.getter(2, v142);
  v145 = v143;
  if (v139 == v144 && v141 == v143)
  {
    swift_bridgeObjectRelease_n(v141, 2);
    v146 = 0x8000000000310540;
  }
  else
  {
    v147 = _stringCompareWithSmolCheck(_:_:expecting:)(v139, v141, v144, v143, 0);
    swift_bridgeObjectRelease(v141);
    swift_bridgeObjectRelease(v145);
    if ((v147 & 1) != 0)
    {
      v146 = 0x8000000000310540;
    }
    else
    {
      v114 = 0x656C63726963;
      v146 = 0xE600000000000000;
    }
  }
  v148 = Image.init(systemName:)(v114, v146);
  v230 = v148;
  if (qword_3CF6A8 != -1)
    v148 = swift_once(&qword_3CF6A8, sub_14AF78);
  v150 = xmmword_3D85E8;
  v151 = static Alignment.center.getter(v148, v149);
  _FrameLayout.init(width:height:alignment:)(&v247, v150, 0, *((_QWORD *)&v150 + 1), 0, v151, v152);
  v153 = v247;
  v154 = v248;
  v155 = v249;
  LODWORD(v220) = v250;
  v217 = v251;
  v216 = v252;
  v156 = v228;
  v157 = v227;
  v158 = v229;
  (*(void (**)(char *, _QWORD, uint64_t))(v228 + 104))(v227, enum case for Image.Scale.large(_:), v229);
  v159 = swift_getKeyPath(&unk_2F9C00);
  v160 = v231;
  (*(void (**)(char *, char *, uint64_t))(v156 + 16))((char *)v231 + *(int *)(v225 + 28), v157, v158);
  *v160 = v159;
  v161 = (uint64_t)v232;
  sub_D184((uint64_t)v160, (uint64_t)&v232[*(int *)(v224 + 36)], &qword_3D2620);
  v162 = v230;
  *(_QWORD *)v161 = v230;
  *(_QWORD *)(v161 + 8) = v153;
  *(_BYTE *)(v161 + 16) = v154;
  *(_QWORD *)(v161 + 24) = v155;
  *(_BYTE *)(v161 + 32) = v220;
  v163 = v216;
  *(_QWORD *)(v161 + 40) = v217;
  *(_QWORD *)(v161 + 48) = v163;
  swift_retain(v162);
  sub_D1D4((uint64_t)v160, &qword_3D2620);
  (*(void (**)(char *, uint64_t))(v156 + 8))(v157, v158);
  swift_release(v162);
  v165 = static Font.body.getter(v164);
  v166 = swift_getKeyPath(&unk_2F9C30);
  v167 = v233;
  sub_D184(v161, v233, &qword_3D8718);
  v168 = (uint64_t *)(v167 + *(int *)(v226 + 36));
  *v168 = v166;
  v168[1] = v165;
  sub_D1D4(v161, &qword_3D8718);
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  v169 = v218 & 1;
  v170 = Color.init(uiColor:)((id)qword_3D0890);
  v171 = swift_getKeyPath(&unk_2F9C60);
  v172 = v236;
  sub_D184(v167, v236, &qword_3D8720);
  v173 = v235;
  v174 = (uint64_t *)(v172 + *(int *)(v235 + 36));
  *v174 = v171;
  v174[1] = v170;
  v175 = sub_D1D4(v167, &qword_3D8720);
  v176 = v239;
  BorderlessButtonStyle.init()(v175);
  v177 = sub_14CF3C();
  v178 = sub_89A0(&qword_3D8750, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v179 = v234;
  v180 = v173;
  v181 = v242;
  View.buttonStyle<A>(_:)(v176, v180, v242, v177, v178);
  (*(void (**)(char *, uint64_t))(v241 + 8))(v176, v181);
  sub_D1D4(v172, &qword_3D8728);
  v182 = v237;
  v183 = v245;
  v184 = v179;
  v185 = v240;
  (*(void (**)(char *, char *, uint64_t))(v237 + 32))(v245, v184, v240);
  v186 = v244;
  sub_D184(v246, v244, &qword_3D71A0);
  v187 = *(void (**)(char *, char *, uint64_t))(v182 + 16);
  v188 = v238;
  v187(v238, v183, v185);
  v189 = v186;
  v190 = v243;
  sub_D184(v189, v243, &qword_3D71A0);
  v191 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_3D8758);
  v192 = v190 + v191[12];
  v193 = (uint64_t)v222;
  v194 = v221;
  *(_QWORD *)v192 = v222;
  *(_QWORD *)(v192 + 8) = v194;
  *(_BYTE *)(v192 + 16) = v169;
  v195 = v223;
  v196 = KeyPath;
  *(_QWORD *)(v192 + 24) = v223;
  *(_QWORD *)(v192 + 32) = v196;
  *(_QWORD *)(v192 + 40) = 1;
  *(_BYTE *)(v192 + 48) = 0;
  v197 = v190 + v191[16];
  *(_QWORD *)v197 = 0;
  *(_BYTE *)(v197 + 8) = 1;
  v187((char *)(v190 + v191[20]), v188, v185);
  sub_D130(v193, v194, v169);
  v198 = *(void (**)(char *, uint64_t, __n128))(v182 + 8);
  swift_bridgeObjectRetain(v195);
  v199 = swift_retain(v196);
  v198(v245, v185, v199);
  sub_D1D4(v246, &qword_3D71A0);
  ((void (*)(char *, uint64_t))v198)(v188, v185);
  sub_D170(v193, v194, v169);
  swift_release(v196);
  swift_bridgeObjectRelease(v195);
  return sub_D1D4(v244, &qword_3D71A0);
}

void sub_14C8DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  char *v6;

  v0 = type metadata accessor for CategoryView(0);
  __chkstk_darwin(v0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for Logger(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for ActionMetricsBehavior(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for ActionMetrics(0);
  v5 = __chkstk_darwin(v4);
  v6 = (char *)sub_14CA24 + 4 * byte_2F9B30[InterestStateMachine.currentState.getter(v5)];
  __asm { BR              X10 }
}

uint64_t sub_14CA24()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v6 = v1[2];
  ObjectType = swift_getObjectType();
  v8 = Category.id.getter(ObjectType);
  static ActionMetrics.notInstrumented.getter(v8);
  *(_QWORD *)(v5 - 104) = ((uint64_t (*)(_QWORD))type metadata accessor for FavoriteInterestAction)(0);
  *(_QWORD *)(v5 - 96) = sub_89A0(&qword_3D8710, (uint64_t (*)(uint64_t))&type metadata accessor for FavoriteInterestAction, (uint64_t)&protocol conformance descriptor for FavoriteInterestAction);
  __swift_allocate_boxed_opaque_existential_0((_QWORD *)(v5 - 128));
  ((void (*)(uint64_t, uint64_t))FavoriteInterestAction.init(adamID:actionMetrics:))(v8, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v3, enum case for ActionMetricsBehavior.notProcessed(_:), v2);
  v9 = ActionRunner.perform(_:withMetrics:asPartOf:)(v5 - 128, v3, *v1, ObjectType, v6);
  v10 = swift_release(v9);
  (*(void (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v3, v2, v10);
  return __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v5 - 128));
}

uint64_t sub_14CD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CategoryView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  swift_unknownObjectRelease(*(_QWORD *)(v7 + 8));
  v8 = v7 + *(int *)(v1 + 24);
  v9 = type metadata accessor for Category(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v5, v6);
}

void sub_14CE0C()
{
  type metadata accessor for CategoryView(0);
  sub_14C8DC();
}

unint64_t sub_14CE38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D86C8;
  if (!qword_3D86C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D86A0);
    sub_10EDC(&qword_3D86D0, &qword_3D8698, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_10EDC(&qword_3D86D8, &qword_3D86E0, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D86C8);
  }
  return result;
}

uint64_t sub_14CED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D86B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_14CF3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D8738;
  if (!qword_3D8738)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D8728);
    sub_14CFC0();
    sub_10EDC(&qword_3D10C0, &qword_3D10C8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D8738);
  }
  return result;
}

unint64_t sub_14CFC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D8740;
  if (!qword_3D8740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D8720);
    sub_14D044();
    sub_10EDC(&qword_3D10B0, &qword_3D10B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D8740);
  }
  return result;
}

unint64_t sub_14D044()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D8748;
  if (!qword_3D8748)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D8718);
    sub_115CC0();
    sub_10EDC(&qword_3D2630, &qword_3D2620, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D8748);
  }
  return result;
}

unint64_t sub_14D0CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_3D8760;
  if (!qword_3D8760)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D86B8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D86A8);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D86A0);
    v5 = sub_14CE38();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_89A0(&qword_3D0D28, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D8760);
  }
  return result;
}

uint64_t type metadata accessor for BundleImage()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews11BundleImage);
}

void sub_14D1C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  __n128 v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  NSString v24;
  id v25;
  __n128 v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(*a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_E8C08((uint64_t)v4);
    return;
  }
  v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  URL.host.getter(v9);
  if (!v10)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return;
  }
  v11 = v10;
  v12 = URL.scheme.getter();
  v14 = v13;
  type metadata accessor for ArtworkURLScheme(0);
  v15 = static ArtworkURLScheme.resource.getter();
  v17 = v16;
  if (!v14)
  {
    v20 = swift_bridgeObjectRelease(v16);
    goto LABEL_13;
  }
  if (v12 == v15 && v14 == v16)
  {
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v17);
    goto LABEL_15;
  }
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
  swift_bridgeObjectRelease(v14);
  v20 = swift_bridgeObjectRelease(v17);
  if ((v19 & 1) == 0)
  {
LABEL_13:
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v20);
    swift_bridgeObjectRelease(v11);
    return;
  }
LABEL_15:
  v21 = type metadata accessor for BundleImage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v21);
  v23 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  swift_bridgeObjectRetain(v11);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v25 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v24, v23);

  if (v25)
  {
    v26 = swift_bridgeObjectRelease(v11);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v26);
  }
  else
  {
    __break(1u);
  }
}

double EnvironmentValues.cellSize.getter()
{
  unint64_t v0;
  double v2;

  v0 = sub_14D464();
  EnvironmentValues.subscript.getter(&v2, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v0);
  return v2;
}

unint64_t sub_14D464()
{
  unint64_t result;

  result = qword_3D8800;
  if (!qword_3D8800)
  {
    result = swift_getWitnessTable(&unk_2F9CF8, &type metadata for CellSizeEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_3D8800);
  }
  return result;
}

double sub_14D4A8@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;

  v2 = sub_14D464();
  EnvironmentValues.subscript.getter(&v4, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v2);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

uint64_t sub_14D4F4(__int128 *a1)
{
  unint64_t v1;
  __int128 v3;

  v3 = *a1;
  v1 = sub_14D464();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v1);
}

uint64_t EnvironmentValues.cellSize.setter(double a1, double a2)
{
  unint64_t v2;
  _QWORD v4[2];

  *(double *)v4 = a1;
  *(double *)&v4[1] = a2;
  v2 = sub_14D464();
  return EnvironmentValues.subscript.setter(v4, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v2);
}

__n128 sub_14D574@<Q0>(__n128 *a1@<X8>)
{
  __n128 result;

  __asm { FMOV            V0.2D, #10.0 }
  *a1 = result;
  return result;
}

uint64_t sub_14D580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_14D724();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void (*EnvironmentValues.cellSize.modify(_QWORD *a1))(_OWORD **a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = sub_14D464();
  v3[5] = v4;
  EnvironmentValues.subscript.getter(v3 + 2, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v4);
  *(_OWORD *)v3 = *((_OWORD *)v3 + 1);
  return sub_14D640;
}

void sub_14D640(_OWORD **a1)
{
  _OWORD *v1;
  uint64_t v2;

  v2 = *((_QWORD *)*a1 + 5);
  v1 = *a1;
  v1[1] = **a1;
  EnvironmentValues.subscript.setter(v1 + 1, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v2);
  free(v1);
}

double sub_14D680@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;

  v2 = sub_14D464();
  EnvironmentValues.subscript.getter(&v4, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v2);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

uint64_t sub_14D6CC(__int128 *a1)
{
  unint64_t v1;
  __int128 v3;

  v3 = *a1;
  v1 = sub_14D464();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for CellSizeEnvironmentKey, &type metadata for CellSizeEnvironmentKey, v1);
}

ValueMetadata *type metadata accessor for CellSizeEnvironmentKey()
{
  return &type metadata for CellSizeEnvironmentKey;
}

unint64_t sub_14D724()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D8808;
  if (!qword_3D8808)
  {
    type metadata accessor for CGSize(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CGSize, v1);
    atomic_store(result, (unint64_t *)&qword_3D8808);
  }
  return result;
}

void sub_14D76C()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.08);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.08);
  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v0, v1);
  v3 = v2;

  qword_3D8810 = v3;
}

id sub_14D7FC(uint64_t a1)
{
  return sub_14DA3C(a1, qword_3D8818, (id *)&UIFontTextStyleBody);
}

id sub_14D810()
{
  if (qword_3CF570 != -1)
    swift_once(&qword_3CF570, sub_140714);
  qword_3D8830 = qword_3FBD30;
  *(_QWORD *)algn_3D8838 = *(_QWORD *)algn_3FBD38;
  qword_3D8840 = qword_3FBD40;
  unk_3D8848 = qword_3FBD48;
  qword_3D8850 = qword_3FBD50;
  unk_3D8858 = *(_QWORD *)byte_3FBD58;
  qword_3D8860 = qword_3FBD60;
  unk_3D8868 = qword_3FBD68;
  qword_3D8870 = qword_3FBD70;
  unk_3D8878 = qword_3FBD78;
  qword_3D8880 = qword_3FBD80;
  word_3D8888 = word_3FBD88;
  return sub_DDA0((void *)qword_3FBD30, *(uint64_t *)algn_3FBD38, qword_3FBD40, qword_3FBD48, qword_3FBD50, byte_3FBD58[0], (void *)qword_3FBD60, qword_3FBD68, qword_3FBD70, qword_3FBD78, qword_3FBD80, word_3FBD88, SHIBYTE(word_3FBD88));
}

uint64_t sub_14D8B4(uint64_t a1)
{
  return sub_14D8D4(30.0, a1, qword_3D8890);
}

uint64_t sub_14D8C4(uint64_t a1)
{
  return sub_14D8D4(18.0, a1, qword_3D88A8);
}

uint64_t sub_14D8D4(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *boxed_opaque_existential_0;
  _QWORD v16[5];

  v5 = type metadata accessor for FontSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StaticDimension(0, v7);
  __swift_allocate_value_buffer(v10, a3);
  __swift_project_value_buffer(v10, (uint64_t)a3);
  if (qword_3CF6B8 != -1)
    swift_once(&qword_3CF6B8, sub_14D7FC);
  v11 = type metadata accessor for FontUseCase(0);
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_3D8818);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v12, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for FontSource.useCase(_:), v5);
  v16[3] = v5;
  v16[4] = &protocol witness table for FontSource;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(boxed_opaque_existential_0, v9, v5);
  StaticDimension.init(_:scaledLike:)(v16, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

id sub_14DA28(uint64_t a1)
{
  return sub_14DA3C(a1, qword_3D88C0, (id *)&UIFontTextStyleFootnote);
}

id sub_14DA3C(uint64_t a1, uint64_t *a2, id *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v8;

  v5 = type metadata accessor for FontUseCase(0);
  __swift_allocate_value_buffer(v5, a2);
  v6 = __swift_project_value_buffer(v5, (uint64_t)a2);
  v8 = *a3;
  *(_QWORD *)v6 = *a3;
  *(_DWORD *)(v6 + 8) = 0;
  (*(void (**)(void))(*(_QWORD *)(v5 - 8) + 104))();
  return v8;
}

id sub_14DABC()
{
  if (qword_3CF578 != -1)
    swift_once(&qword_3CF578, sub_14074C);
  qword_3D88D8 = qword_3FBD90;
  unk_3D88E0 = *(_QWORD *)algn_3FBD98;
  qword_3D88E8 = qword_3FBDA0;
  unk_3D88F0 = qword_3FBDA8;
  qword_3D88F8 = qword_3FBDB0;
  unk_3D8900 = *(_QWORD *)byte_3FBDB8;
  qword_3D8908 = qword_3FBDC0;
  unk_3D8910 = qword_3FBDC8;
  qword_3D8918 = qword_3FBDD0;
  unk_3D8920 = qword_3FBDD8;
  qword_3D8928 = qword_3FBDE0;
  word_3D8930 = word_3FBDE8;
  return sub_DDA0((void *)qword_3FBD90, *(uint64_t *)algn_3FBD98, qword_3FBDA0, qword_3FBDA8, qword_3FBDB0, byte_3FBDB8[0], (void *)qword_3FBDC0, qword_3FBDC8, qword_3FBDD0, qword_3FBDD8, qword_3FBDE0, word_3FBDE8, SHIBYTE(word_3FBDE8));
}

uint64_t sub_14DB60()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *boxed_opaque_existential_0;
  _QWORD v11[5];

  v0 = type metadata accessor for FontSource(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0, v2);
  __swift_allocate_value_buffer(v5, qword_3D8938);
  __swift_project_value_buffer(v5, (uint64_t)qword_3D8938);
  if (qword_3CF6D8 != -1)
    swift_once(&qword_3CF6D8, sub_14DA28);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_3D88C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for FontSource.useCase(_:), v0);
  v11[3] = v0;
  v11[4] = &protocol witness table for FontSource;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v1 + 16))(boxed_opaque_existential_0, v4, v0);
  StaticDimension.init(_:scaledLike:)(v11, 20.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_14DCAC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  UIFontTextStyle *v4;
  uint64_t v5;
  _QWORD *boxed_opaque_existential_0;
  NSString *v7;
  _QWORD v10[5];

  v0 = type metadata accessor for FontSource(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (UIFontTextStyle *)((char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for StaticDimension(0, v2);
  __swift_allocate_value_buffer(v5, qword_3D8950);
  __swift_project_value_buffer(v5, (uint64_t)qword_3D8950);
  *v4 = UIFontTextStyleSubheadline;
  (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for FontSource.textStyle(_:), v0);
  v10[3] = v0;
  v10[4] = &protocol witness table for FontSource;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
  (*(void (**)(_QWORD *, UIFontTextStyle *, uint64_t))(v1 + 16))(boxed_opaque_existential_0, v4, v0);
  v7 = UIFontTextStyleSubheadline;
  StaticDimension.init(_:scaledLike:)(v10, 20.0);
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_14DDB4()
{
  qword_3FCA58 = 0x4020000000000000;
}

void sub_14DDC4()
{
  _BYTE *v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  double v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessory];
  v2 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessory + 16];
  if (v2 != 255)
  {
    v4 = *v1;
    v3 = v1[1];
    sub_151860(*v1, v3, v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessory + 16]);
    sub_218D54(v4, v3, v2);
    v6 = v5;
    v7 = sub_151834(v4, v3, v2);
    v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryView;
    v9 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryView];
    if (v9)
    {
      objc_msgSend(v9, "removeFromSuperview", v7);
      v10 = *(void **)&v0[v8];
    }
    else
    {
      v10 = 0;
    }
    *(_QWORD *)&v0[v8] = v6;
    v11 = v6;

    if (*(_QWORD *)&v0[v8])
      objc_msgSend(v0, "addSubview:");
    objc_msgSend(v0, "setNeedsLayout");

    v12 = *(_QWORD *)&v0[v8];
    if (v12)
    {
      v13 = objc_opt_self(UIButton);
      v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
      if (v14)
        objc_msgSend(v14, "addTarget:action:forControlEvents:", v0, "didTapWithAccessoryView:", 64);
    }
  }
}

void sub_14DEF0(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  uint64_t v7;
  void *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryView;
  v8 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryView];
  if (v8)
  {
    objc_msgSend(v8, "removeFromSuperview");
    v9 = *(void **)&v3[v7];
  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)&v3[v7] = 0;

  if (*(_QWORD *)&v3[v7])
    objc_msgSend(v3, "addSubview:");
  objc_msgSend(v3, "setNeedsLayout");
  v10 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessory];
  v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessory];
  v12 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessory + 8];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v13 = v10[16];
  v10[16] = a3;
  sub_151834(v11, v12, v13);
  sub_14DDC4();
}

id sub_14DFC8(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AccountDetailCollectionViewCell();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_14E018(void *a1, uint64_t a2, uint64_t a3, SEL *a4, SEL *a5)
{
  id v8;
  objc_super v9;

  v8 = a1;
  sub_14E080(a3);
  v9.receiver = v8;
  v9.super_class = (Class)type metadata accessor for AccountDetailCollectionViewCell();
  objc_msgSendSuper2(&v9, *a4, a3);
  sub_14E120(a5);

}

id sub_14E080(char a1)
{
  void *v1;
  id v3;
  void *v4;
  char **v5;
  id v6;

  v3 = objc_msgSend(v1, "contentView");
  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_clearColor;
  if ((a1 & 1) == 0)
    v5 = &selRef_secondarySystemGroupedBackgroundColor;
  v6 = objc_msgSend(v4, *v5);
  objc_msgSend(v3, "setBackgroundColor:", v6);

  return objc_msgSend(v1, "setNeedsDisplay");
}

id sub_14E120(SEL *a1)
{
  void *v1;
  unsigned int v2;
  id v3;
  void *v4;
  char **v5;
  id v6;

  v2 = objc_msgSend(v1, *a1);
  v3 = objc_msgSend(v1, "contentView");
  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_clearColor;
  if (!v2)
    v5 = &selRef_secondarySystemGroupedBackgroundColor;
  v6 = objc_msgSend(v4, *v5);
  objc_msgSend(v3, "setBackgroundColor:", v6);

  return objc_msgSend(v1, "setNeedsDisplay");
}

id sub_14E1CC(id result)
{
  _BYTE *v1;
  int v2;
  void *v3;
  _BOOL8 v4;
  Class isa;
  NSString v6;
  void *v7;
  Class v8;
  NSString v9;

  v2 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_disabled];
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_disabled] = (_BYTE)result;
  if (v2 != (result & 1))
  {
    v3 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_titleLabel];
    v4 = (result & 1) == 0;
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setValue:forKey:", isa, v6);

    v7 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_subtitleLabel];
    v8 = Bool._bridgeToObjectiveC()().super.super.isa;
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setValue:forKey:", v8, v9);

    objc_msgSend(v1, "setUserInteractionEnabled:", v4);
    return objc_msgSend(v1, "setNeedsDisplay");
  }
  return result;
}

char *sub_14E2F0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  char *v10;
  _QWORD *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  _BYTE *v16;
  _QWORD *v17;
  objc_class *v18;
  id v19;
  id v20;
  char *v21;
  double left;
  double bottom;
  double right;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  void *v32;
  id v33;
  char *v34;
  id v35;
  double v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  _BYTE *v51;
  CGFloat *v52;
  _BYTE *v53;
  void *v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  _BYTE *v59;
  CGFloat *v60;
  _BYTE *v61;
  void *v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  void *v67;
  id v69;
  objc_super v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int16 v82;

  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageMarginRight];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryView] = 0;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessory];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = -1;
  v11 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryAction];
  *v11 = 0;
  v11[1] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showTopDivider] = 0;
  v12 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_topDividerInsets];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[32] = 1;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showBottomDivider] = 0;
  v13 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDividerInsets];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v13[32] = 1;
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_backgroundSelectionView;
  v15 = objc_allocWithZone((Class)UIView);
  v16 = v4;
  *(_QWORD *)&v4[v14] = objc_msgSend(v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_isSelectable] = 1;
  v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_disabled] = 0;
  v17 = &v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_selectionHandler];
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_tapGestureRecognizer] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF6C0 != -1)
    swift_once(&qword_3CF6C0, sub_14D810);
  v71 = qword_3D8830;
  v72 = *(_QWORD *)algn_3D8838;
  v73 = qword_3D8840;
  v74 = qword_3D8848;
  v75 = qword_3D8850;
  v76 = *(_QWORD *)byte_3D8858;
  v77 = qword_3D8860;
  v78 = qword_3D8868;
  v79 = qword_3D8870;
  v80 = qword_3D8878;
  v81 = qword_3D8880;
  v82 = word_3D8888;
  sub_DDA0((void *)qword_3D8830, *(uint64_t *)algn_3D8838, qword_3D8840, qword_3D8848, qword_3D8850, byte_3D8858[0], (void *)qword_3D8860, qword_3D8868, qword_3D8870, qword_3D8878, qword_3D8880, word_3D8888, SHIBYTE(word_3D8888));
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_titleLabel] = sub_A96AC((uint64_t)&v71, 2, 0, 1);
  if (qword_3CF6E0 != -1)
    swift_once(&qword_3CF6E0, sub_14DABC);
  v71 = qword_3D88D8;
  v72 = qword_3D88E0;
  v73 = qword_3D88E8;
  v74 = qword_3D88F0;
  v75 = qword_3D88F8;
  v76 = *(_QWORD *)byte_3D8900;
  v77 = qword_3D8908;
  v78 = qword_3D8910;
  v79 = qword_3D8918;
  v80 = qword_3D8920;
  v81 = qword_3D8928;
  v82 = word_3D8930;
  sub_DDA0((void *)qword_3D88D8, qword_3D88E0, qword_3D88E8, qword_3D88F0, qword_3D88F8, byte_3D8900[0], (void *)qword_3D8908, qword_3D8910, qword_3D8918, qword_3D8920, qword_3D8928, word_3D8930, SHIBYTE(word_3D8930));
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_subtitleLabel] = sub_A96AC((uint64_t)&v71, 1, 0, 1);
  v71 = qword_3D8830;
  v72 = *(_QWORD *)algn_3D8838;
  v73 = qword_3D8840;
  v74 = qword_3D8848;
  v75 = qword_3D8850;
  v76 = *(_QWORD *)byte_3D8858;
  v77 = qword_3D8860;
  v78 = qword_3D8868;
  v79 = qword_3D8870;
  v80 = qword_3D8878;
  v81 = qword_3D8880;
  v82 = word_3D8888;
  sub_DDA0((void *)qword_3D8830, *(uint64_t *)algn_3D8838, qword_3D8840, qword_3D8848, qword_3D8850, byte_3D8858[0], (void *)qword_3D8860, qword_3D8868, qword_3D8870, qword_3D8878, qword_3D8880, word_3D8888, SHIBYTE(word_3D8888));
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_detailLabel] = sub_A96AC((uint64_t)&v71, 1, 0, 1);
  v18 = (objc_class *)type metadata accessor for DividerView();
  v19 = objc_msgSend(objc_allocWithZone(v18), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_topDivider] = v19;
  v20 = objc_msgSend(objc_allocWithZone(v18), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDivider] = v20;

  v70.receiver = v16;
  v70.super_class = (Class)type metadata accessor for AccountDetailCollectionViewCell();
  v21 = (char *)objc_msgSendSuper2(&v70, "initWithFrame:", a1, a2, a3, a4);
  sub_1500FC();
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  objc_msgSend(v21, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v25 = objc_msgSend(v21, "contentView");
  v26 = (void *)objc_opt_self(UIColor);
  v27 = objc_msgSend(v26, "secondarySystemGroupedBackgroundColor");
  objc_msgSend(v25, "setBackgroundColor:", v27);

  v28 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageView;
  v29 = qword_3CF6B0;
  v30 = (char *)*(id *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageView];
  if (v29 != -1)
    swift_once(&qword_3CF6B0, sub_14D76C);
  v31 = (void *)qword_3D8810;
  v32 = *(void **)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3D8810;
  v33 = v31;

  sub_A2A14();
  v34 = (char *)*(id *)&v21[v28];
  v35 = objc_msgSend(v21, "traitCollection");
  v36 = static Separator.thickness(compatibleWith:)();

  *(double *)&v34[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = v36;
  sub_A2A14();

  v37 = *(id *)&v21[v28];
  v38 = objc_msgSend(v21, "backgroundColor");
  objc_msgSend(v37, "setBackgroundColor:", v38);

  v39 = *(void **)&v21[v28];
  objc_msgSend(v39, "setContentMode:", 1);
  v40 = objc_msgSend(v21, "contentView");
  objc_msgSend(v40, "addSubview:", v39);

  v41 = objc_msgSend(v21, "contentView");
  objc_msgSend(v41, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_titleLabel]);

  v42 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_subtitleLabel;
  v43 = *(id *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_subtitleLabel];
  v44 = objc_msgSend(v26, "secondaryLabelColor");
  objc_msgSend(v43, "setTextColor:", v44);

  v45 = objc_msgSend(v21, "contentView");
  objc_msgSend(v45, "addSubview:", *(_QWORD *)&v21[v42]);

  v46 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_detailLabel;
  v47 = *(id *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_detailLabel];
  v48 = objc_msgSend(v26, "secondaryLabelColor");
  objc_msgSend(v47, "setTextColor:", v48);

  v49 = objc_msgSend(v21, "contentView");
  objc_msgSend(v49, "addSubview:", *(_QWORD *)&v21[v46]);

  v69 = v26;
  v50 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_topDivider;
  v51 = *(_BYTE **)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_topDivider];
  v51[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_style] = 3;
  v52 = (CGFloat *)&v51[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorInset];
  *v52 = UIEdgeInsetsZero.top;
  v52[1] = left;
  v52[2] = bottom;
  v52[3] = right;
  v53 = v51;
  objc_msgSend(v53, "setNeedsLayout");
  objc_msgSend(v53, "setNeedsLayout");

  v54 = *(void **)&v21[v50];
  objc_msgSend(v54, "setHidden:", 1);
  v55 = qword_3CF090;
  v56 = v54;
  if (v55 != -1)
    swift_once(&qword_3CF090, sub_1EB44);
  objc_msgSend(v56, "setBackgroundColor:", qword_3FA918);

  v57 = objc_msgSend(v21, "contentView");
  objc_msgSend(v57, "addSubview:", *(_QWORD *)&v21[v50]);

  v58 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDivider;
  v59 = *(_BYTE **)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDivider];
  v59[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_style] = 3;
  v60 = (CGFloat *)&v59[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorInset];
  *v60 = UIEdgeInsetsZero.top;
  v60[1] = left;
  v60[2] = bottom;
  v60[3] = right;
  v61 = v59;
  objc_msgSend(v61, "setNeedsLayout");
  objc_msgSend(v61, "setNeedsLayout");

  v62 = *(void **)&v21[v58];
  objc_msgSend(v62, "setHidden:", 1);
  objc_msgSend(v62, "setBackgroundColor:", qword_3FA918);
  v63 = objc_msgSend(v21, "contentView");
  objc_msgSend(v63, "addSubview:", v62);

  v64 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_backgroundSelectionView;
  v65 = *(id *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_backgroundSelectionView];
  v66 = objc_msgSend(v69, "tableSelectionColor");
  objc_msgSend(v65, "setBackgroundColor:", v66);

  v67 = *(void **)&v21[v64];
  objc_msgSend(v67, "setOpaque:", 0);
  objc_msgSend(v67, "setUserInteractionEnabled:", 0);
  if (v21[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_isSelectable] == 1)
    objc_msgSend(v21, "setSelectedBackgroundView:", v67);

  return v21;
}

void sub_14ECB4(__n128 a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_class *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double Width;
  void *v19;
  unsigned int v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  double *v25;
  CGFloat v26;
  id v27;
  double v28;
  CGFloat MinX;
  double v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  id v58;
  id v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  CGFloat v69;
  double v70;
  double v71;
  double v72;
  char **p_name;
  void *v74;
  id v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  CGFloat x;
  CGFloat y;
  CGFloat v104;
  CGFloat height;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  CGFloat v118;
  CGFloat v119;
  id v120;
  id v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  id v135;
  CGFloat v136;
  double v137;
  CGFloat v138;
  void *v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  double v148;
  double v149;
  double v150;
  double v151;
  CGFloat v152;
  CGFloat v153;
  double v154;
  double v155;
  double v156;
  double v157;
  double v158;
  double v159;
  double v160;
  double v161;
  double v162;
  double v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  double v169;
  double v170;
  double v171;
  double v172;
  double v173;
  double v174;
  double MinY;
  uint64_t v176;
  void (*v177)(char *);
  id v178;
  uint64_t v179;
  uint64_t v180;
  double v181;
  double v182;
  double v183;
  id v184;
  id v185;
  double v186;
  double v187;
  double v188;
  double v189;
  double v190;
  double v191;
  double v192;
  double v193;
  double v194;
  double v195;
  double v196;
  double v197;
  double v198;
  double v199;
  double v200;
  double v201;
  double v202;
  double v203;
  double v204;
  double v205;
  double v206;
  CGFloat v207;
  double v208;
  double v209;
  double v210;
  CGFloat v211;
  double v212;
  CGFloat v213;
  double v214;
  double v215;
  id v216;
  double v217;
  double v218;
  double v219;
  id v220;
  id v221;
  double v222;
  double v223;
  double v224;
  double v225;
  double v226;
  double v227;
  double v228;
  double v229;
  double v230;
  double v231;
  double v232;
  double v233;
  double v234;
  double v235;
  void *v236;
  id v237;
  void *v238;
  uint64_t v239;
  unint64_t v240;
  unint64_t v241;
  uint64_t v242;
  double v243;
  double v244;
  double v245;
  double v246;
  double v247;
  double v248;
  double v249;
  double v250;
  double v251;
  double v252;
  double v253;
  void *v254;
  double v255;
  double v256;
  double v257;
  double v258;
  double v259;
  double v260;
  double v261;
  double v262;
  double v263;
  double v264;
  double v265;
  double v266;
  double v267;
  double v268;
  double v269;
  double v270;
  double v271;
  double v272;
  double v273;
  double v274;
  id v275;
  id v276;
  id v277;
  double v278;
  double v279;
  double v280;
  double v281;
  double v282;
  double v283;
  double v284;
  double v285;
  double v286;
  double v287;
  double v288;
  double v289;
  double v290;
  double v291;
  double v292;
  double v293;
  double v294;
  double v295;
  double v296;
  double v297;
  double v298;
  double v299;
  double v300;
  double v301;
  double v302;
  double v303;
  double v304;
  double v305;
  double v306;
  double v307;
  double v308;
  id v309;
  double v310;
  Swift::Int v311;
  void *v312;
  double v313;
  double v314;
  double v315;
  double v316;
  double v317;
  double v318;
  double v319;
  double v320;
  double v321;
  double v322;
  double v323;
  double v324;
  double v325;
  double v326;
  double v327;
  double v328;
  double v329;
  double v330;
  double v331;
  double v332;
  double v333;
  id v334;
  double v335;
  double v336;
  double v337;
  double v338;
  double v339;
  double v340;
  double v341;
  double v342;
  double v343;
  double v344;
  id v345;
  double v346;
  Swift::Int v347;
  void *v348;
  double v349;
  double v350;
  double v351;
  double v352;
  double v353;
  double v354;
  double v355;
  double v356;
  double v357;
  double v358;
  double v359;
  uint64_t v360;
  uint64_t v361;
  CGFloat v362;
  double v363;
  CGFloat v364;
  CGFloat v365;
  id v366;
  double v367;
  double v368;
  objc_super v369;
  CGRect v370;
  CGRect v371;
  CGRect v372;
  CGRect v373;
  CGRect v374;
  CGRect v375;
  CGRect v376;
  CGRect v377;
  CGRect v378;
  CGRect v379;
  CGRect v380;
  CGRect v381;
  CGRect v382;
  CGRect v383;
  CGRect v384;
  CGRect v385;
  CGRect v386;
  CGRect v387;
  CGRect v388;
  CGRect v389;
  CGRect v390;
  CGRect v391;
  CGRect v392;
  CGRect v393;
  CGRect v394;
  CGRect v395;
  CGRect v396;

  v2 = v1;
  v3 = type metadata accessor for StaticDimension(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v360 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (objc_class *)type metadata accessor for AccountDetailCollectionViewCell();
  v369.receiver = v2;
  v369.super_class = v7;
  objc_msgSendSuper2(&v369, "layoutSubviews");
  objc_msgSend(v2, "bounds");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  objc_msgSend(v2, "layoutMargins");
  v370.origin.x = UIEdgeInsetsInsetRect(v9, v11, v13, v15, v16, v17);
  Width = CGRectGetWidth(v370);
  v361 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryView;
  v19 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryView];
  if (v19)
    v20 = objc_msgSend(v19, "isHidden") ^ 1;
  else
    v20 = 0;
  v21 = *(char **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageView];
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView;
  v23 = objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView], "image");

  v24 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_subtitleLabel];
  v366 = objc_msgSend(v24, "text");
  if (v366)

  v25 = (double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageMarginRight];
  if (v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageMarginRight + 8] == 1)
  {
    if (qword_3CF6F8 != -1)
      swift_once(&qword_3CF6F8, sub_14DDB4);
    v25 = (double *)&qword_3FCA58;
  }
  v368 = *v25;
  v26 = 0.0;
  if (v23)
  {
    v27 = objc_msgSend(*(id *)&v21[v22], "image");
    v28 = 0.0;
    MinX = 0.0;
    v30 = 0.0;
    if (v27)
    {
      v31 = v27;
      objc_msgSend(v27, "size");
      v33 = v32;
      v28 = v34;

      objc_msgSend(v2, "bounds");
      v36 = v35;
      v38 = v37;
      v40 = v39;
      v41 = Width;
      v43 = v42;
      objc_msgSend(v2, "layoutMargins");
      v44 = v43;
      v45 = v41;
      v26 = v33;
      v371.origin.x = UIEdgeInsetsInsetRect(v36, v38, v40, v44, v46, v47);
      MinX = CGRectGetMinX(v371);
      objc_msgSend(v2, "bounds");
      v49 = v48;
      v51 = v50;
      v53 = v52;
      v55 = v54;
      objc_msgSend(v2, "layoutMargins");
      v372.origin.x = UIEdgeInsetsInsetRect(v49, v51, v53, v55, v56, v57);
      v30 = CGRectGetMidY(v372) + v28 * -0.5;
      v373.origin.x = MinX;
      v373.origin.y = v30;
      v373.size.width = v26;
      v373.size.height = v28;
      Width = v45 - (v368 + CGRectGetWidth(v373));
    }
  }
  else
  {
    v28 = 0.0;
    MinX = 0.0;
    v30 = 0.0;
  }
  v365 = MinX;
  v58 = objc_msgSend(v2, "traitCollection");
  v59 = objc_msgSend(v58, "layoutDirection");

  objc_msgSend(v2, "bounds");
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v67 = v66;
  objc_msgSend(v2, "layoutMargins");
  v68 = v67;
  v69 = v365;
  v72 = UIEdgeInsetsInsetRect(v61, v63, v65, v68, v70, v71);
  v364 = v28;
  CGRect.withLayoutDirection(_:relativeTo:)(v59, v72);
  objc_msgSend(v21, "setFrame:");
  p_name = &stru_3B7FF8.name;
  v362 = v26;
  if (v20)
  {
    v74 = *(void **)&v2[v361];
    if (v74)
    {
      v75 = v74;
      objc_msgSend(v2, "bounds");
      v77 = v76;
      v79 = v78;
      v81 = v80;
      v83 = v82;
      objc_msgSend(v2, "layoutMargins");
      UIEdgeInsetsInsetRect(v77, v79, v81, v83, v84, v85);
      objc_msgSend(v75, "sizeThatFits:", v86, v87);
      v89 = v88;
      v91 = v90;
      objc_msgSend(v2, "bounds");
      v93 = v92;
      v95 = v94;
      v97 = v96;
      v99 = v98;
      objc_msgSend(v2, "layoutMargins");
      v374.origin.x = UIEdgeInsetsInsetRect(v93, v95, v97, v99, v100, v101);
      v363 = CGRectGetMaxX(v374) - v89;
      objc_msgSend(v2, "bounds");
      x = v375.origin.x;
      y = v375.origin.y;
      v104 = v375.size.width;
      height = v375.size.height;
      CGRectGetWidth(v375);
      v376.origin.x = x;
      v376.origin.y = y;
      v376.size.width = v104;
      v376.size.height = height;
      v106 = CGRectGetHeight(v376);
      objc_msgSend(v2, "bounds");
      v108 = v107;
      v110 = v109;
      v112 = v111;
      v367 = Width;
      v114 = v113;
      objc_msgSend(v2, "layoutMargins");
      v377.origin.x = UIEdgeInsetsInsetRect(v108, v110, v112, v114, v115, v116);
      v117 = CGRectGetWidth(v377);
      if (v89 >= v117)
        v118 = v117;
      else
        v118 = v89;
      v119 = v106 * 0.5 - v91 * 0.5;
      v120 = objc_msgSend(v2, "traitCollection");
      v121 = objc_msgSend(v120, "layoutDirection");

      objc_msgSend(v2, "bounds");
      v123 = v122;
      v125 = v124;
      v127 = v126;
      v129 = v128;
      objc_msgSend(v2, "layoutMargins");
      v130 = v129;
      v131 = v367;
      v134 = UIEdgeInsetsInsetRect(v123, v125, v127, v130, v132, v133);
      v135 = v121;
      p_name = (char **)(&stru_3B7FF8 + 8);
      v136 = v363;
      CGRect.withLayoutDirection(_:relativeTo:)(v135, v134);
      objc_msgSend(v75, "setFrame:");
      v378.origin.x = v136;
      v378.origin.y = v119;
      v69 = v365;
      v378.size.width = v118;
      v378.size.height = v91;
      v137 = CGRectGetWidth(v378);

      Width = v131 - (v137 + 16.0);
    }
  }
  v138 = v364;
  v139 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_titleLabel];
  objc_msgSend(v2, "bounds");
  v141 = v140;
  v143 = v142;
  v145 = v144;
  v147 = v146;
  objc_msgSend(v2, "layoutMargins");
  v379.origin.x = UIEdgeInsetsInsetRect(v141, v143, v145, v147, v148, v149);
  objc_msgSend(v139, p_name[291], Width, CGRectGetHeight(v379));
  v152 = v151;
  v367 = Width;
  if (Width >= v150)
    v153 = v150;
  else
    v153 = Width;
  if (v23)
  {
    v380.origin.x = v69;
    v380.origin.y = v30;
    v380.size.width = v362;
    v380.size.height = v138;
    v154 = v368 + CGRectGetMaxX(v380);
  }
  else
  {
    objc_msgSend(v2, "bounds");
    v156 = v155;
    v158 = v157;
    v160 = v159;
    v162 = v161;
    objc_msgSend(v2, "layoutMargins");
    v381.origin.x = UIEdgeInsetsInsetRect(v156, v158, v160, v162, v163, v164);
    v154 = CGRectGetMinX(v381);
  }
  objc_msgSend(v2, "bounds");
  v166 = v165;
  v168 = v167;
  v170 = v169;
  v172 = v171;
  objc_msgSend(v2, "layoutMargins");
  v382.origin.x = UIEdgeInsetsInsetRect(v166, v168, v170, v172, v173, v174);
  MinY = CGRectGetMinY(v382);
  if (qword_3CF6C8 != -1)
    swift_once(&qword_3CF6C8, sub_14D8B4);
  v176 = __swift_project_value_buffer(v3, (uint64_t)qword_3D8890);
  v177 = *(void (**)(char *))(v4 + 16);
  v360 = v176;
  v177(v6);
  v178 = objc_msgSend(v139, "traitCollection");
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v179 = type metadata accessor for FloatingPointRoundingRule(0);
  v180 = __swift_project_value_buffer(v179, (uint64_t)qword_3FCFB0);
  v181 = StaticDimension.value(compatibleWith:rounded:)(v178, v180);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v139, "firstBaselineFromTop");
  v183 = MinY + v181 - v182;
  v184 = objc_msgSend(v2, "traitCollection");
  v185 = objc_msgSend(v184, "layoutDirection");

  objc_msgSend(v2, "bounds");
  v187 = v186;
  v189 = v188;
  v191 = v190;
  v193 = v192;
  objc_msgSend(v2, "layoutMargins");
  v196 = UIEdgeInsetsInsetRect(v187, v189, v191, v193, v194, v195);
  CGRect.withLayoutDirection(_:relativeTo:)(v185, v196);
  objc_msgSend(v139, "setFrame:");
  v363 = v153;
  v364 = v152;
  v365 = v154;
  v362 = v183;
  if (v366)
  {
    objc_msgSend(v24, "setHidden:", 0);
    objc_msgSend(v2, "bounds");
    v198 = v197;
    v200 = v199;
    v202 = v201;
    v204 = v203;
    objc_msgSend(v2, "layoutMargins");
    v383.origin.x = UIEdgeInsetsInsetRect(v198, v200, v202, v204, v205, v206);
    v207 = CGRectGetHeight(v383);
    v208 = v367;
    objc_msgSend(v24, "sizeThatFits:", v367, v207);
    v211 = v210;
    if (v208 >= v209)
      v212 = v209;
    else
      v212 = v208;
    v384.origin.x = v154;
    v384.origin.y = v183;
    v384.size.width = v153;
    v384.size.height = v152;
    v213 = CGRectGetMinX(v384);
    objc_msgSend(v139, "lastBaselineMaxY");
    v215 = v214;
    if (qword_3CF6E8 != -1)
      swift_once(&qword_3CF6E8, sub_14DB60);
    __swift_project_value_buffer(v3, (uint64_t)qword_3D8938);
    v216 = objc_msgSend(v24, "traitCollection");
    v217 = StaticDimension.value(compatibleWith:rounded:)(v216, v180);

    objc_msgSend(v24, "firstBaselineFromTop");
    v219 = v215 + v217 - v218;
  }
  else
  {
    objc_msgSend(v24, "setHidden:", 1);
    v212 = 0.0;
    v211 = 0.0;
    v213 = 0.0;
    v219 = 0.0;
  }
  v220 = objc_msgSend(v2, "traitCollection");
  v221 = objc_msgSend(v220, "layoutDirection");

  objc_msgSend(v2, "bounds");
  v223 = v222;
  v225 = v224;
  v227 = v226;
  v229 = v228;
  objc_msgSend(v2, "layoutMargins");
  v232 = UIEdgeInsetsInsetRect(v223, v225, v227, v229, v230, v231);
  CGRect.withLayoutDirection(_:relativeTo:)(v221, v232);
  objc_msgSend(v24, "setFrame:");
  v385.origin.x = v213;
  v385.origin.y = v219;
  v385.size.width = v212;
  v385.size.height = v211;
  v233 = CGRectGetWidth(v385);
  v386.size.height = v364;
  v386.origin.x = v365;
  v386.origin.y = v362;
  v386.size.width = v363;
  v234 = CGRectGetWidth(v386);
  if (v233 <= v234)
    v233 = v234;
  if (v23)
    v235 = v368;
  else
    v235 = -0.0;
  v236 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_detailLabel];
  v237 = objc_msgSend(v236, "text");
  if (v237)
  {
    v238 = v237;
    v239 = static String._unconditionallyBridgeFromObjectiveC(_:)(v237);
    v241 = v240;

    swift_bridgeObjectRelease(v241);
    v242 = HIBYTE(v241) & 0xF;
    if ((v241 & 0x2000000000000000) == 0)
      v242 = v239 & 0xFFFFFFFFFFFFLL;
    if (v242)
    {
      v243 = v367 - (v235 + v233) + -16.0;
      objc_msgSend(v2, "bounds");
      v245 = v244;
      v247 = v246;
      v249 = v248;
      v251 = v250;
      objc_msgSend(v2, "layoutMargins");
      v387.origin.x = UIEdgeInsetsInsetRect(v245, v247, v249, v251, v252, v253);
      objc_msgSend(v236, "sizeThatFits:", v243, CGRectGetHeight(v387));
      v254 = *(void **)&v2[v361];
      if (v254)
      {
        objc_msgSend(v254, "frame");
        CGRectGetMinX(v388);
      }
      else
      {
        objc_msgSend(v2, "bounds");
        v256 = v255;
        v258 = v257;
        v260 = v259;
        v262 = v261;
        objc_msgSend(v2, "layoutMargins");
        v389.origin.x = UIEdgeInsetsInsetRect(v256, v258, v260, v262, v263, v264);
        CGRectGetMaxX(v389);
      }
      objc_msgSend(v2, "bounds");
      v266 = v265;
      v268 = v267;
      v270 = v269;
      v272 = v271;
      objc_msgSend(v2, "layoutMargins");
      v390.origin.x = UIEdgeInsetsInsetRect(v266, v268, v270, v272, v273, v274);
      CGRectGetMinY(v390);
      v275 = objc_msgSend(v139, "traitCollection");
      StaticDimension.value(compatibleWith:rounded:)(v275, v180);

      objc_msgSend(v139, "firstBaselineFromTop");
      v276 = objc_msgSend(v2, "traitCollection");
      v277 = objc_msgSend(v276, "layoutDirection");

      objc_msgSend(v2, "bounds");
      v279 = v278;
      v281 = v280;
      v283 = v282;
      v285 = v284;
      objc_msgSend(v2, "layoutMargins");
      v288 = UIEdgeInsetsInsetRect(v279, v281, v283, v285, v286, v287);
      CGRect.withLayoutDirection(_:relativeTo:)(v277, v288);
      objc_msgSend(v236, "setFrame:");
    }
  }
  if (v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showTopDivider] == 1)
  {
    objc_msgSend(v2, "bounds");
    v290 = v289;
    v292 = v291;
    v294 = v293;
    v296 = v295;
    objc_msgSend(v2, "layoutMargins");
    v391.origin.x = UIEdgeInsetsInsetRect(v290, v292, v294, v296, v297, v298);
    CGRectGetMinX(v391);
    objc_msgSend(v2, "bounds");
    CGRectGetMinY(v392);
    objc_msgSend(v2, "bounds");
    v300 = v299;
    v302 = v301;
    v304 = v303;
    v306 = v305;
    objc_msgSend(v2, "layoutMargins");
    v393.origin.x = UIEdgeInsetsInsetRect(v300, v302, v304, v306, v307, v308);
    CGRectGetWidth(v393);
    v309 = objc_msgSend(v2, "traitCollection");
    static Separator.thickness(compatibleWith:)();

    if ((v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_topDividerInsets + 32] & 1) == 0)
    {
      objc_msgSend(v2, "bounds");
      v311 = sub_F387C((uint64_t)&off_37A1E0);
      sub_310B0(0, v311);
      sub_310B0(1uLL, v311);
      *(_QWORD *)&v310 = swift_bridgeObjectRelease(v311).n128_u64[0];
    }
    v312 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_topDivider];
    objc_msgSend(v2, "bounds", v310);
    v314 = v313;
    v316 = v315;
    v318 = v317;
    v320 = v319;
    objc_msgSend(v2, "layoutMargins");
    v323 = UIEdgeInsetsInsetRect(v314, v316, v318, v320, v321, v322);
    CGRect.withLayoutDirection(in:relativeTo:)(v2, v323);
    objc_msgSend(v312, "setFrame:");
  }
  if (v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showBottomDivider] == 1)
  {
    objc_msgSend(v2, "bounds");
    v325 = v324;
    v327 = v326;
    v329 = v328;
    v331 = v330;
    objc_msgSend(v2, "layoutMargins");
    v394.origin.x = UIEdgeInsetsInsetRect(v325, v327, v329, v331, v332, v333);
    CGRectGetMinX(v394);
    objc_msgSend(v2, "bounds");
    CGRectGetMaxY(v395);
    v334 = objc_msgSend(v2, "traitCollection");
    static Separator.thickness(compatibleWith:)();

    objc_msgSend(v2, "bounds");
    v336 = v335;
    v338 = v337;
    v340 = v339;
    v342 = v341;
    objc_msgSend(v2, "layoutMargins");
    v396.origin.x = UIEdgeInsetsInsetRect(v336, v338, v340, v342, v343, v344);
    CGRectGetWidth(v396);
    v345 = objc_msgSend(v2, "traitCollection");
    static Separator.thickness(compatibleWith:)();

    if ((v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDividerInsets + 32] & 1) == 0)
    {
      objc_msgSend(v2, "bounds");
      v347 = sub_F387C((uint64_t)&off_37A210);
      sub_310B0(0, v347);
      sub_310B0(1uLL, v347);
      *(_QWORD *)&v346 = swift_bridgeObjectRelease(v347).n128_u64[0];
    }
    v348 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDivider];
    objc_msgSend(v2, "bounds", v346);
    v350 = v349;
    v352 = v351;
    v354 = v353;
    v356 = v355;
    objc_msgSend(v2, "layoutMargins");
    v359 = UIEdgeInsetsInsetRect(v350, v352, v354, v356, v357, v358);
    CGRect.withLayoutDirection(in:relativeTo:)(v2, v359);
    objc_msgSend(v348, "setFrame:");
  }
}

double sub_14FEF0(double a1, double a2)
{
  _BYTE *v2;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;

  v5 = objc_msgSend(*(id *)(*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageView]+ OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView), "image");
  v6 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_titleLabel];
  v7 = objc_msgSend(v6, "text");
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  v12 = objc_msgSend(v6, "attributedText");
  v13 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_subtitleLabel], "text");
  if (v13)
  {
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v18 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showTopDivider];
  v19 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showBottomDivider];
  objc_msgSend(v2, "layoutMargins");
  v24 = sub_1506F8(v5, 0, 0, 1, v9, v11, v12, v15, v20, v21, v22, v23, a1, a2, v17, 0, 0, 255, v18, v19, v2);

  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v11);
  return v24;
}

uint64_t sub_1500FC()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  char v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _BOOL8 v16;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_subtitleLabel], "text");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = objc_msgSend(v0, "traitCollection");
  v8 = objc_msgSend(v7, "preferredContentSizeCategory");
  v9 = UIContentSizeCategory.isAccessibilityCategory.getter();

  if ((v9 & 1) != 0)
  {

    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v5).n128_u64[0];
    v11 = 0;
    v12 = 3;
  }
  else
  {

    if (!v5)
      goto LABEL_11;
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v5).n128_u64[0];
    v13 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v13 = v6;
    if (v13)
    {
      v12 = 1;
      v11 = &dword_4;
    }
    else
    {
LABEL_11:
      v11 = 0;
      v12 = 2;
    }
  }
  v14 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_titleLabel];
  v15 = objc_msgSend(v14, "numberOfLines", v10);
  v16 = v12 != (_QWORD)v15;
  if ((id)v12 != v15)
    objc_msgSend(v14, "setNumberOfLines:", v12);
  if (v11 != objc_msgSend(v14, "lineBreakMode"))
  {
    objc_msgSend(v14, "setLineBreakMode:", v11);
    return 1;
  }
  return v16;
}

double sub_1502FC()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  double result;
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for AccountDetailCollectionViewCell();
  objc_msgSendSuper2(&v14, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageView];
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView], "setImage:", 0);
  objc_msgSend(v1, "invalidateIntrinsicContentSize");
  objc_msgSend(v0, "setNeedsLayout");
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageMarginRight];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_titleLabel];
  objc_msgSend(v3, "setText:", 0);
  objc_msgSend(v0, "setNeedsLayout");
  v4 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_subtitleLabel];
  objc_msgSend(v4, "setText:", 0);
  if ((sub_1500FC() & 1) != 0)
    objc_msgSend(v0, "setNeedsLayout");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_detailLabel], "setText:", 0);
  sub_14DEF0(0, 0, 255);
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryAction];
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryAction];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryAction + 8];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  sub_1D618(v6, v7);
  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "labelColor");
  objc_msgSend(v3, "setTextColor:", v9);

  v10 = objc_msgSend(v8, "secondaryLabelColor");
  objc_msgSend(v4, "setTextColor:", v10);

  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showTopDivider] = 0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_topDivider], "setHidden:", 1);
  objc_msgSend(v0, "setNeedsLayout");
  v11 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_topDividerInsets];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[32] = 1;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showBottomDivider] = 0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDivider], "setHidden:", 1);
  objc_msgSend(v0, "setNeedsLayout");
  v12 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDividerInsets];
  result = 0.0;
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[32] = 1;
  return result;
}

id sub_1505C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountDetailCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AccountDetailCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell);
}

double sub_1506F8(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, unint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, char a20,void *a21)
{
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  id v44;
  char v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  double v72;
  double v73;
  uint64_t v74;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  double v97;
  double v98;
  id v99;
  id v100;
  double v101;
  double v102;
  id v103;
  double v104;
  double v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  double v114;
  uint64_t v115;
  uint64_t v116;
  double v117;

  v108 = a5;
  v109 = a8;
  v113 = a11;
  v117 = a9;
  v31 = type metadata accessor for FloatingPointRoundingRule(0);
  v111 = *(_QWORD *)(v31 - 8);
  v112 = v31;
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v107 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for TextMeasurable(0, v32);
  v115 = *(_QWORD *)(v35 - 8);
  v116 = v35;
  __chkstk_darwin(v35);
  v37 = (char *)&v107 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = a13;
  v38 = a13 - a10 - a12;
  if (a1)
  {
    objc_msgSend(a1, "size");
    v41 = v40;
  }
  else
  {
    v41 = 0.0;
    if ((a4 & 1) != 0)
      goto LABEL_8;
    v39 = *(double *)&a2;
    v41 = *(double *)&a3;
  }
  v42 = v38 - v39;
  if (qword_3CF6F8 != -1)
    swift_once(&qword_3CF6F8, sub_14DDB4);
  v38 = v42 - *(double *)&qword_3FCA58;
LABEL_8:
  v43 = objc_msgSend(a21, "traitCollection");
  if (a18 != -1)
    v38 = v38 - (sub_21A21C(a16, a17, a18) + 16.0);
  v110 = v43;
  v44 = objc_msgSend(v43, "preferredContentSizeCategory");
  v45 = UIContentSizeCategory.isAccessibilityCategory.getter();

  if ((v45 & 1) == 0)
  {
    if (!a15)
      goto LABEL_22;
    v48 = HIBYTE(a15) & 0xF;
    if ((a15 & 0x2000000000000000) == 0)
      v48 = v109 & 0xFFFFFFFFFFFFLL;
    if (v48)
    {
      v47 = 1;
      if (!a7)
        goto LABEL_18;
    }
    else
    {
LABEL_22:
      v47 = 2;
      if (!a7)
        goto LABEL_18;
    }
LABEL_23:
    sub_A1E18();
    v63 = qword_3CF6B8;
    v64 = a7;
    if (v63 != -1)
      swift_once(&qword_3CF6B8, sub_14D7FC);
    v65 = type metadata accessor for FontUseCase(0);
    v66 = __swift_project_value_buffer(v65, (uint64_t)qword_3D8818);
    v67 = objc_msgSend(a21, "traitCollection");
    v68 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v66, v67);

    v69 = static TextMeasurable.defaultTextAlignment.getter();
    v70 = static TextMeasurable.defaultLineBreakMode.getter();
    TextMeasurable.init(attributedText:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:)(v64, v68, v69, v70, 0, v47, 0);
    v56 = TextMeasurable.measurements(fitting:in:)(a21, v38, a14);
    v58 = v71;
    v60 = v72;
    v62 = v73;

    goto LABEL_26;
  }
  v47 = 3;
  if (a7)
    goto LABEL_23;
LABEL_18:
  if (a6)
  {
    sub_A1E18();
    v49 = qword_3CF6B8;
    swift_bridgeObjectRetain(a6);
    if (v49 != -1)
      swift_once(&qword_3CF6B8, sub_14D7FC);
    v50 = type metadata accessor for FontUseCase(0);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_3D8818);
    v52 = objc_msgSend(a21, "traitCollection");
    v53 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v51, v52);

    v54 = static TextMeasurable.defaultTextAlignment.getter();
    v55 = static TextMeasurable.defaultLineBreakMode.getter();
    TextMeasurable.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:)(v108, a6, v53, v54, v55, 0, v47, 0);
    v56 = TextMeasurable.measurements(fitting:in:)(a21, v38, a14);
    v58 = v57;
    v60 = v59;
    v62 = v61;
LABEL_26:
    (*(void (**)(char *, uint64_t))(v115 + 8))(v37, v116);
    goto LABEL_27;
  }
  v56 = 0.0;
  v58 = 0.0;
  v60 = 0.0;
  v62 = 0.0;
LABEL_27:
  if (qword_3CF6C8 != -1)
    swift_once(&qword_3CF6C8, sub_14D8B4);
  v74 = type metadata accessor for StaticDimension(0, v46);
  __swift_project_value_buffer(v74, (uint64_t)qword_3D8890);
  v75 = AnyDimension.topMargin(from:in:)(a21, v74, &protocol witness table for StaticDimension, v56, v58, v60, v62);
  v76 = v58 - v62 + v75 + v117;
  if (a15)
  {
    sub_A1E18();
    v77 = qword_3CF6D8;
    swift_bridgeObjectRetain(a15);
    if (v77 != -1)
      swift_once(&qword_3CF6D8, sub_14DA28);
    v78 = type metadata accessor for FontUseCase(0);
    v79 = __swift_project_value_buffer(v78, (uint64_t)qword_3D88C0);
    v80 = objc_msgSend(a21, "traitCollection");
    v81 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v79, v80);

    v82 = static TextMeasurable.defaultTextAlignment.getter();
    v83 = static TextMeasurable.defaultLineBreakMode.getter();
    TextMeasurable.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:)(v109, a15, v81, v82, v83, 0, v47, 0);
    v84 = TextMeasurable.measurements(fitting:in:)(a21, v38, a14);
    v86 = v85;
    v88 = v87;
    v90 = v89;
    if (qword_3CF6E8 != -1)
      swift_once(&qword_3CF6E8, sub_14DB60);
    __swift_project_value_buffer(v74, (uint64_t)qword_3D8938);
    v91 = v86
        - v90
        + v76
        + AnyDimension.topMargin(from:in:)(a21, v74, &protocol witness table for StaticDimension, v84, v86, v88, v90);
    if (qword_3CF6F0 != -1)
      swift_once(&qword_3CF6F0, sub_14DCAC);
    __swift_project_value_buffer(v74, (uint64_t)qword_3D8950);
    v92 = AnyDimension.bottomMargin(from:in:)(a21, v74, &protocol witness table for StaticDimension, v84, v86, v88, v90);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v37, v116);
    v93 = v91 + v92;
  }
  else
  {
    if (qword_3CF6D0 != -1)
      swift_once(&qword_3CF6D0, sub_14D8C4);
    __swift_project_value_buffer(v74, (uint64_t)qword_3D88A8);
    v93 = v76
        + AnyDimension.bottomMargin(from:in:)(a21, v74, &protocol witness table for StaticDimension, v56, v58, v60, v62);
  }
  v95 = v111;
  v94 = v112;
  if ((a19 & 1) == 0)
  {
    v97 = 0.0;
    v98 = 0.0;
    if ((a20 & 1) == 0)
      goto LABEL_45;
    goto LABEL_44;
  }
  v96 = objc_msgSend(a21, "traitCollection");
  v97 = static Separator.thickness(compatibleWith:)();

  v98 = 0.0;
  if ((a20 & 1) != 0)
  {
LABEL_44:
    v99 = objc_msgSend(a21, "traitCollection");
    v98 = static Separator.thickness(compatibleWith:)();

  }
LABEL_45:
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v34, enum case for FloatingPointRoundingRule.up(_:), v94);
  v100 = objc_msgSend(a21, "traitCollection");
  objc_msgSend(v100, "displayScale");
  v102 = v101;
  if (v101 < COERCE_DOUBLE(1))
  {
    v103 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v103, "scale");
    v102 = v104;

  }
  if (v93 > v41)
    v105 = v93;
  else
    v105 = v41;
  CGFloat.rounded(_:toScale:)((uint64_t)v34, v102, v98 + v105 + 0.0 + v97 + v117 + v113);

  (*(void (**)(char *, uint64_t))(v95 + 8))(v34, v94);
  return v114;
}

double sub_150F0C(void *a1, uint64_t a2, uint64_t a3, char a4, char *a5, uint64_t a6, void *a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, unint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, char a20,void *a21)
{
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  id v44;
  char v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  char v93;
  id v94;
  double v95;
  double v96;
  id v97;
  double v98;
  double v99;
  uint64_t v100;
  uint64_t v101;
  char *v103;
  uint64_t v104;
  id v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double v113;

  v103 = a5;
  v104 = a8;
  v106 = a11;
  v113 = a9;
  v31 = type metadata accessor for FloatingPointRoundingRule(0);
  v107 = *(_QWORD *)(v31 - 8);
  v108 = v31;
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for TextMeasurable(0, v32);
  v111 = *(_QWORD *)(v35 - 8);
  v112 = v35;
  __chkstk_darwin(v35);
  v37 = (char *)&v103 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = a13;
  v38 = a13 - a10 - a12;
  if (a1)
  {
    objc_msgSend(a1, "size", v103);
    v41 = v40;
  }
  else
  {
    v41 = 0.0;
    if ((a4 & 1) != 0)
      goto LABEL_8;
    v39 = *(double *)&a2;
    v41 = *(double *)&a3;
  }
  v42 = v38 - v39;
  if (qword_3CF6F8 != -1)
    swift_once(&qword_3CF6F8, sub_14DDB4);
  v38 = v42 - *(double *)&qword_3FCA58;
LABEL_8:
  v43 = objc_msgSend(a21, "traitCollection", v103);
  if (a18 != -1)
    v38 = v38 - (sub_21A21C(a16, a17, a18) + 16.0);
  v105 = v43;
  v44 = objc_msgSend(v43, "preferredContentSizeCategory");
  v45 = UIContentSizeCategory.isAccessibilityCategory.getter();

  if ((v45 & 1) == 0)
  {
    if (!a15)
      goto LABEL_22;
    v47 = HIBYTE(a15) & 0xF;
    if ((a15 & 0x2000000000000000) == 0)
      v47 = v104 & 0xFFFFFFFFFFFFLL;
    if (v47)
    {
      v110 = 1;
      if (!a7)
        goto LABEL_18;
    }
    else
    {
LABEL_22:
      v110 = 2;
      if (!a7)
        goto LABEL_18;
    }
LABEL_23:
    sub_A1E18();
    v62 = qword_3CF6B8;
    v63 = a7;
    if (v62 != -1)
      swift_once(&qword_3CF6B8, sub_14D7FC);
    v64 = type metadata accessor for FontUseCase(0);
    v65 = __swift_project_value_buffer(v64, (uint64_t)qword_3D8818);
    v66 = objc_msgSend(a21, "traitCollection");
    v67 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v65, v66);

    v68 = static TextMeasurable.defaultTextAlignment.getter();
    v69 = static TextMeasurable.defaultLineBreakMode.getter();
    TextMeasurable.init(attributedText:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:)(v63, v67, v68, v69, 0, v110, 0);
    v55 = TextMeasurable.measurements(fitting:in:)(a21, v38, a14);
    v57 = v70;
    v59 = v71;
    v61 = v72;

    goto LABEL_26;
  }
  v110 = 3;
  if (a7)
    goto LABEL_23;
LABEL_18:
  if (a6)
  {
    sub_A1E18();
    v48 = qword_3CF6B8;
    swift_bridgeObjectRetain(a6);
    if (v48 != -1)
      swift_once(&qword_3CF6B8, sub_14D7FC);
    v49 = type metadata accessor for FontUseCase(0);
    v50 = __swift_project_value_buffer(v49, (uint64_t)qword_3D8818);
    v51 = objc_msgSend(a21, "traitCollection");
    v52 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v50, v51);

    v53 = static TextMeasurable.defaultTextAlignment.getter();
    v54 = static TextMeasurable.defaultLineBreakMode.getter();
    TextMeasurable.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:)(v103, a6, v52, v53, v54, 0, v110, 0);
    v55 = TextMeasurable.measurements(fitting:in:)(a21, v38, a14);
    v57 = v56;
    v59 = v58;
    v61 = v60;
LABEL_26:
    (*(void (**)(char *, uint64_t))(v111 + 8))(v37, v112);
    goto LABEL_27;
  }
  v55 = 0.0;
  v57 = 0.0;
  v59 = 0.0;
  v61 = 0.0;
LABEL_27:
  if (qword_3CF6C8 != -1)
    swift_once(&qword_3CF6C8, sub_14D8B4);
  v73 = type metadata accessor for StaticDimension(0, v46);
  __swift_project_value_buffer(v73, (uint64_t)qword_3D8890);
  v74 = AnyDimension.topMargin(from:in:)(a21, v73, &protocol witness table for StaticDimension, v55, v57, v59, v61);
  v75 = v57 - v61 + v74 + v113;
  if (a15)
  {
    v103 = v34;
    sub_A1E18();
    v76 = qword_3CF6D8;
    swift_bridgeObjectRetain(a15);
    if (v76 != -1)
      swift_once(&qword_3CF6D8, sub_14DA28);
    v77 = type metadata accessor for FontUseCase(0);
    v78 = __swift_project_value_buffer(v77, (uint64_t)qword_3D88C0);
    v79 = objc_msgSend(a21, "traitCollection");
    v80 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v78, v79);

    v81 = static TextMeasurable.defaultTextAlignment.getter();
    v82 = static TextMeasurable.defaultLineBreakMode.getter();
    TextMeasurable.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:)(v104, a15, v80, v81, v82, 0, v110, 0);
    v83 = TextMeasurable.measurements(fitting:in:)(a21, v38, a14);
    v85 = v84;
    v87 = v86;
    v89 = v88;
    if (qword_3CF6E8 != -1)
      swift_once(&qword_3CF6E8, sub_14DB60);
    __swift_project_value_buffer(v73, (uint64_t)qword_3D8938);
    v90 = v85
        - v89
        + v75
        + AnyDimension.topMargin(from:in:)(a21, v73, &protocol witness table for StaticDimension, v83, v85, v87, v89);
    if (qword_3CF6F0 != -1)
      swift_once(&qword_3CF6F0, sub_14DCAC);
    __swift_project_value_buffer(v73, (uint64_t)qword_3D8950);
    v91 = AnyDimension.bottomMargin(from:in:)(a21, v73, &protocol witness table for StaticDimension, v83, v85, v87, v89);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v37, v112);
    v92 = v90 + v91;
    v34 = v103;
    v93 = a20;
    if ((a19 & 1) != 0)
      goto LABEL_37;
LABEL_42:
    v95 = 0.0;
    v96 = 0.0;
    if ((v93 & 1) == 0)
      goto LABEL_44;
    goto LABEL_43;
  }
  if (qword_3CF6D0 != -1)
    swift_once(&qword_3CF6D0, sub_14D8C4);
  __swift_project_value_buffer(v73, (uint64_t)qword_3D88A8);
  v92 = v75
      + AnyDimension.bottomMargin(from:in:)(a21, v73, &protocol witness table for StaticDimension, v55, v57, v59, v61);
  v93 = a20;
  if ((a19 & 1) == 0)
    goto LABEL_42;
LABEL_37:
  v94 = objc_msgSend(a21, "traitCollection");
  v95 = static Separator.thickness(compatibleWith:)();

  v96 = 0.0;
  if ((v93 & 1) != 0)
  {
LABEL_43:
    v97 = objc_msgSend(a21, "traitCollection");
    v96 = static Separator.thickness(compatibleWith:)();

  }
LABEL_44:
  if (v92 > v41)
    v98 = v92;
  else
    v98 = v41;
  v99 = v96 + v98 + 0.0 + v95 + v113 + v106;
  v101 = v107;
  v100 = v108;
  (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v34, enum case for FloatingPointRoundingRule.up(_:), v108);
  sub_21E73C((uint64_t)v34, a21, v99);

  (*(void (**)(char *, uint64_t))(v101 + 8))(v34, v100);
  return v109;
}

void sub_1516D8()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  _QWORD *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_imageMarginRight];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryView] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessory];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v2[16] = -1;
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_accessoryAction];
  *v3 = 0;
  v3[1] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showTopDivider] = 0;
  v4 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_topDividerInsets];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[32] = 1;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_showBottomDivider] = 0;
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_bottomDividerInsets];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v5[32] = 1;
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_backgroundSelectionView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_isSelectable] = 1;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_disabled] = 0;
  v7 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_selectionHandler];
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountDetailCollectionViewCell_tapGestureRecognizer] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/AccountDetailCollectioinViewCell.swift", 62, 2, 294, 0);
  __break(1u);
}

double sub_151834(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  double result;

  if (a3 != 0xFF)
    return sub_151848(a1, a2, a3);
  return result;
}

double sub_151848(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  double result;

  if (a3 <= 3u)
    *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
  return result;
}

uint64_t sub_151860(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRetain(a2);
  return result;
}

char *sub_151878(void *a1, char a2, void *a3)
{
  _BYTE *v3;
  id v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSArray v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  objc_super v52;

  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_internalTrailingConstraint] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_extraTrailingPadding] = 0;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_isMultiShowListLayout] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_contentView] = a1;
  v52.receiver = v3;
  v52.super_class = (Class)type metadata accessor for EpisodeCellLayoutGuide();
  v7 = a1;
  v8 = (char *)objc_msgSendSuper2(&v52, "init");
  objc_msgSend(v7, "addLayoutGuide:", v8);
  if ((a2 & 1) != 0)
  {
    v9 = (void *)objc_opt_self(NSLayoutConstraint);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v11 = swift_allocObject(v10, 64, 7);
    *(_OWORD *)(v11 + 16) = xmmword_2F0A20;
    v12 = objc_msgSend(v8, "leadingAnchor");
    v13 = objc_msgSend(v7, "layoutMarginsGuide");
    v14 = objc_msgSend(v13, "leadingAnchor");

    v15 = objc_msgSend(v12, "constraintEqualToAnchor:", v14);
    *(_QWORD *)(v11 + 32) = v15;
    v16 = objc_msgSend(v8, "trailingAnchor");
    v17 = objc_msgSend(v7, "layoutMarginsGuide");
    v18 = objc_msgSend(v17, "trailingAnchor");

    v19 = objc_msgSend(v16, "constraintEqualToAnchor:", v18);
    *(_QWORD *)(v11 + 40) = v19;
    v20 = objc_msgSend(v8, "topAnchor");
    v21 = objc_msgSend(v7, "layoutMarginsGuide");
    v22 = objc_msgSend(v21, "topAnchor");

    v23 = objc_msgSend(v20, "constraintEqualToAnchor:", v22);
    *(_QWORD *)(v11 + 48) = v23;
    v24 = objc_msgSend(v8, "bottomAnchor");
    v25 = objc_msgSend(v7, "layoutMarginsGuide");
    v26 = objc_msgSend(v25, "bottomAnchor");

    v27 = objc_msgSend(v24, "constraintEqualToAnchor:", v26);
    *(_QWORD *)(v11 + 56) = v27;
    specialized Array._endMutation()(v28);
    v29 = v11;
    sub_12D34();
    v30.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "activateConstraints:", v30.super.isa, swift_bridgeObjectRelease(v29).n128_f64[0]);
  }
  else
  {
    v31 = objc_msgSend(v7, "trailingAnchor");
    v32 = objc_msgSend(v8, "trailingAnchor");
    v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

    v34 = *(void **)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_internalTrailingConstraint];
    *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_internalTrailingConstraint] = v33;
    v35 = v33;

    v36 = (void *)objc_opt_self(NSLayoutConstraint);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v38 = swift_allocObject(v37, 64, 7);
    *(_OWORD *)(v38 + 16) = xmmword_2F0A20;
    v39 = objc_msgSend(v8, "leadingAnchor");
    v40 = objc_msgSend(v7, "leadingAnchor");
    v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

    *(_QWORD *)(v38 + 32) = v41;
    *(_QWORD *)(v38 + 40) = v35;
    v42 = v35;
    v43 = objc_msgSend(v8, "topAnchor");
    v44 = objc_msgSend(v7, "topAnchor");
    v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

    *(_QWORD *)(v38 + 48) = v45;
    v46 = objc_msgSend(v8, "bottomAnchor");
    v47 = objc_msgSend(v7, "bottomAnchor");
    v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

    *(_QWORD *)(v38 + 56) = v48;
    specialized Array._endMutation()(v49);
    v50 = v38;
    sub_12D34();
    v30.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v36, "activateConstraints:", v30.super.isa, swift_bridgeObjectRelease(v50).n128_f64[0]);

  }
  return v8;
}

id sub_151E60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeCellLayoutGuide();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EpisodeCellLayoutGuide()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide);
}

void sub_151EE8(void *a1, unint64_t a2)
{
  void *v2;
  id v4;
  __n128 v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  __n128 v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  void **v25;
  uint64_t v26;
  double (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;

  v2 = (void *)a2;
  if (!(a2 >> 62))
    goto LABEL_5;
  if (a2 >> 62 == 1)
  {
    v4 = (id)(a2 & 0x3FFFFFFFFFFFFFFFLL);
    v2 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter(v5);
    v6 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v2);
    v7 = objc_msgSend(v2, "length");
    v8 = swift_allocObject(&unk_3859E8, 33, 7);
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = v6;
    *(_BYTE *)(v8 + 32) = 1;
    v9 = swift_allocObject(&unk_385A10, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_152390;
    *(_QWORD *)(v9 + 24) = v8;
    v29 = sub_43A64;
    v30 = v9;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_152250;
    v28 = &block_descriptor_14_0;
    v10 = _Block_copy(&v25);
    v11 = v30;
    v12 = a1;
    v13 = v6;
    swift_retain(v9);
    objc_msgSend(v2, "enumerateAttributesInRange:options:usingBlock:", 0, v7, 0x100000, v10, swift_release(v11).n128_f64[0]);
    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v9, "", 142, 29, 97, 1);

    swift_release(v8);
    swift_release(v9);
    if ((v7 & 1) != 0)
    {
      __break(1u);
LABEL_5:
      v14 = v2;
      return;
    }
    goto LABEL_7;
  }
  v4 = (id)(a2 & 0x3FFFFFFFFFFFFFFFLL);
  v16 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter(v15);
  v17 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v16);
  v18 = objc_msgSend(v16, "length");
  v19 = swift_allocObject(&unk_385970, 33, 7);
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = v17;
  *(_BYTE *)(v19 + 32) = 0;
  v20 = swift_allocObject(&unk_385998, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_152304;
  *(_QWORD *)(v20 + 24) = v19;
  v29 = sub_43920;
  v30 = v20;
  v25 = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_152250;
  v28 = &block_descriptor_32;
  v21 = _Block_copy(&v25);
  v22 = v30;
  v23 = a1;
  v13 = v17;
  swift_retain(v20);
  objc_msgSend(v16, "enumerateAttributesInRange:options:usingBlock:", 0, v18, 0x100000, v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v20, "", 142, 29, 97, 1);

  swift_release(v19);
  swift_release(v20);
  if ((v18 & 1) == 0)
  {
LABEL_7:
    v24 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString(0));
    LanguageAwareString.init(_:baseParagraphStyle:)(v13, 0);

    return;
  }
  __break(1u);
}

uint64_t sub_152230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

double sub_152250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double result;

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  v11 = v10;
  v12 = sub_152348();
  v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, v11, (char *)&type metadata for Any + 8, v12);
  v9(v13, a3, a4, a5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

uint64_t sub_1522D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_152304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_226E54(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24), *(_BYTE *)(v4 + 32));
}

uint64_t sub_152310()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_32(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_152338()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_152348()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D0150;
  if (!qword_3D0150)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_2EDC20, v1);
    atomic_store(result, (unint64_t *)&qword_3D0150);
  }
  return result;
}

id sub_1523A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell____lazy_storage___infoButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell____lazy_storage___infoButton);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell____lazy_storage___infoButton);
  }
  else
  {
    v4 = sub_1523FC();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1523FC()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v0 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  v1 = v0;
  v2 = (id)UIColor.init(hexString:alpha:)(0x354635463546, 0xE600000000000000, 1.0);
  if (!v2)
    v2 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v3 = v2;
  v4 = (id)UIColor.init(hexString:alpha:)(0x383038303830, 0xE600000000000000, 1.0);
  if (!v4)
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v5 = v4;
  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v3, v4);
  v7 = v6;

  objc_msgSend(v1, "setBackgroundColor:", v7);
  objc_msgSend(v1, "setFrame:", 0.0, 0.0, 200.0, 200.0);
  objc_msgSend(v1, "_setCornerRadius:", 17.0);
  return v1;
}

void sub_152634(uint64_t a1, uint64_t a2)
{
  sub_D162C(a1, a2);
  sub_152C10();
}

void sub_15266C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  id v22;
  id v23;
  __n128 v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8AB8);
  __chkstk_darwin(v3);
  v5 = (double *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_D1D20(a1);
  v7 = type metadata accessor for LibraryEpisodeLockup(0, v6);
  if (swift_dynamicCastClass(a1, v7))
  {
    v8 = swift_retain(a1);
    LegacyEpisodeLockup.listenNowReason.getter(v8);
    v9 = type metadata accessor for EpisodeListenNowReason(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
    {
      swift_release(a1);
      sub_152BD0((uint64_t)v5);
    }
    else if ((*(unsigned int (**)(double *, uint64_t))(v10 + 88))(v5, v9) == enum case for EpisodeListenNowReason.prototypedUpNextScore(_:))
    {
      v11 = (*(uint64_t (**)(double *, uint64_t))(v10 + 96))(v5, v9);
      v12 = *v5;
      v13 = LibraryEpisodeLockup.podcastUuid.getter(v11);
      v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell_podcastUuid);
      v15 = *(_QWORD *)(v1
                      + OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell_podcastUuid
                      + 8);
      *v14 = v13;
      v14[1] = v16;
      swift_bridgeObjectRelease(v15);
      v17 = sub_1523A0();
      Double.description.getter(v17, round(v12 * 100.0) / 100.0);
      v19 = v18;
      v20 = String._bridgeToObjectiveC()();
      objc_msgSend(v17, "setTitle:forState:", v20, 0, swift_bridgeObjectRelease(v19).n128_f64[0]);

      v21 = sub_1523A0();
      v22 = objc_msgSend(v21, "titleLabel");

      if (v22)
      {
        v23 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 10.0);
        objc_msgSend(v22, "setFont:", v23);

      }
      swift_release(a1);
    }
    else
    {
      v24 = swift_release(a1);
      (*(void (**)(double *, uint64_t, __n128))(v10 + 8))(v5, v9, v24);
    }
  }
}

void sub_15289C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  _QWORD v28[5];

  v1 = v0;
  v2 = type metadata accessor for PresentationSource(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell_podcastUuid];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell_podcastUuid + 8];
  if (v7)
  {
    v8 = *v6;
    swift_bridgeObjectRetain(v7);
    sub_FFF0(v8, v7);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v28[3] = &type metadata for PrototypeUpNextSingleShowController;
    v28[4] = &off_37B1F8;
    v17 = swift_allocObject(&unk_385A60, 48, 7);
    v28[0] = v17;
    *(_QWORD *)(v17 + 16) = v10;
    *(_QWORD *)(v17 + 24) = v12;
    *(_BYTE *)(v17 + 32) = v14 & 1;
    *(_QWORD *)(v17 + 40) = v16;
    v18 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D8AC0));
    v19 = v16;
    swift_bridgeObjectRetain(v12);
    v20 = (void *)UIHostingController.init(rootView:)(v28);
    objc_msgSend(v20, "setModalPresentationStyle:", 2);
    v21 = objc_msgSend(v20, "popoverPresentationController");
    if (v21)
    {
      v22 = v21;
      v23 = sub_1523A0();
      objc_msgSend(v22, "setSourceItem:", v23);

    }
    v24 = (void *)UIView.mt_viewController.getter(v21);
    if (v24)
    {
      v25 = v24;
      v26 = v1;
      PresentationSource.init(viewController:view:location:)(v25, v1, 0, 0, 1);
      PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v20, 1, 15, 1, 0, 0);

      swift_bridgeObjectRelease(v12);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {

      swift_bridgeObjectRelease(v12);
    }
  }
}

double sub_152AD8()
{
  uint64_t v0;
  double result;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell____lazy_storage___infoButton));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell_podcastUuid
                                                           + 8)).n128_u64[0];
  return result;
}

uint64_t sub_152B44()
{
  return type metadata accessor for PrototypeUpNextMultiShowEpisodeCell(0);
}

uint64_t type metadata accessor for PrototypeUpNextMultiShowEpisodeCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3D8AA8;
  if (!qword_3D8AA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PrototypeUpNextMultiShowEpisodeCell);
  return result;
}

uint64_t sub_152B88(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "\b";
  v2[1] = &unk_2F9E20;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 440);
}

uint64_t sub_152BD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8AB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_152C10()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  Class isa;
  id v30;

  v1 = v0;
  v2 = sub_1523A0();
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v4 = swift_allocObject(v3, 72, 7);
  *(_OWORD *)(v4 + 16) = xmmword_2F1D10;
  v5 = sub_1523A0();
  v6 = objc_msgSend(v5, "trailingAnchor");

  v7 = objc_msgSend(v1, "contentView");
  v8 = objc_msgSend(v7, "trailingAnchor");

  v9 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v8, -7.0);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = sub_1523A0();
  v11 = objc_msgSend(v10, "topAnchor");

  v12 = objc_msgSend(v1, "contentView");
  v13 = objc_msgSend(v12, "topAnchor");

  v14 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v13, 6.0);
  *(_QWORD *)(v4 + 40) = v14;
  v15 = sub_1523A0();
  v16 = objc_msgSend(v15, "heightAnchor");

  v17 = objc_msgSend(v16, "constraintEqualToConstant:", 35.0);
  *(_QWORD *)(v4 + 48) = v17;
  v18 = sub_1523A0();
  v19 = objc_msgSend(v18, "widthAnchor");

  v20 = objc_msgSend(v19, "constraintEqualToConstant:", 35.0);
  *(_QWORD *)(v4 + 56) = v20;
  v21 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView];
  if (v21)
  {
    v22 = (void *)objc_opt_self(NSLayoutConstraint);
    v23 = objc_msgSend(v21, "trailingAnchor");
    v24 = sub_1523A0();
    v25 = objc_msgSend(v24, "leadingAnchor");

    v26 = objc_msgSend(v23, "constraintEqualToAnchor:", v25);
    *(_QWORD *)(v4 + 64) = v26;
    specialized Array._endMutation()(v27);
    v28 = v4;
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v22, "activateConstraints:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

    v30 = sub_1523A0();
    objc_msgSend(v30, "addTarget:action:forControlEvents:", v1, "buttonPressed", 0x2000);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_152F68()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

void sub_152F94()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell____lazy_storage___infoButton] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews35PrototypeUpNextMultiShowEpisodeCell_podcastUuid];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/PrototypeUpNextMultiShowEpisodeCell.swift", 65, 2, 58, 0);
  __break(1u);
}

double ModernPageViewController.anyPresenter.getter@<D0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)((char *)v1 + qword_3DDD70);
  a1[3] = *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v1));
  *a1 = v2;
  *(_QWORD *)&result = swift_unknownObjectRetain(v2).n128_u64[0];
  return result;
}

double sub_153060@<D0>(_QWORD *a1@<X8>)
{
  return ModernPageViewController.anyPresenter.getter(a1);
}

char *CircularProgressView.__allocating_init(style:)(uint64_t *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CircularProgressView.init(style:)(a1);
}

uint64_t CircularProgressView.Style.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CircularProgressView.Style.size.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = a2;
  *(_BYTE *)(v3 + 16) = a3 & 1;
  return result;
}

uint64_t (*CircularProgressView.Style.size.modify())()
{
  return UINavigationBar.overrideBackButtonStyle.setter;
}

double CircularProgressView.Style.ringPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void CircularProgressView.Style.ringPadding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*CircularProgressView.Style.ringPadding.modify())()
{
  return UINavigationBar.overrideBackButtonStyle.setter;
}

double CircularProgressView.Style.lineWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void CircularProgressView.Style.lineWidth.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*CircularProgressView.Style.lineWidth.modify())()
{
  return UINavigationBar.overrideBackButtonStyle.setter;
}

uint64_t CircularProgressView.Style.stopGlyphSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t CircularProgressView.Style.stopGlyphSize.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = result;
  *(_QWORD *)(v3 + 48) = a2;
  *(_BYTE *)(v3 + 56) = a3 & 1;
  return result;
}

uint64_t (*CircularProgressView.Style.stopGlyphSize.modify())()
{
  return UINavigationBar.overrideBackButtonStyle.setter;
}

double CircularProgressView.Style.stopGlyphCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

void CircularProgressView.Style.stopGlyphCornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 64) = a1;
}

uint64_t (*CircularProgressView.Style.stopGlyphCornerRadius.modify())()
{
  return UINavigationBar.overrideBackButtonStyle.setter;
}

void *CircularProgressView.Style.customPrimaryColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 72);
  v2 = v1;
  return v1;
}

void CircularProgressView.Style.customPrimaryColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
}

uint64_t (*CircularProgressView.Style.customPrimaryColor.modify())()
{
  return UINavigationBar.overrideBackButtonStyle.setter;
}

void *CircularProgressView.Style.customSecondaryColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 80);
  v2 = v1;
  return v1;
}

void CircularProgressView.Style.customSecondaryColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
}

uint64_t (*CircularProgressView.Style.customSecondaryColor.modify())()
{
  return UINavigationBar.overrideBackButtonStyle.setter;
}

void *CircularProgressView.Style.fontMetrics.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 88);
  v2 = v1;
  return v1;
}

void CircularProgressView.Style.fontMetrics.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
}

uint64_t (*CircularProgressView.Style.fontMetrics.modify())()
{
  return UINavigationBar.overrideBackButtonStyle.setter;
}

id sub_15327C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v12;
  _BYTE v13[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style;
  swift_beginAccess(v3, v13, 0, 0);
  v4 = *(_BYTE *)(v3 + 16);
  v5 = *(_BYTE *)(v3 + 56);
  v6 = *(_QWORD *)(v3 + 64);
  v7 = *(void **)(v3 + 72);
  v12 = *(id *)(v3 + 80);
  v8 = *(void **)(v3 + 88);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_BYTE *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v3 + 40);
  *(_BYTE *)(a2 + 56) = v5;
  *(_QWORD *)(a2 + 64) = v6;
  *(_QWORD *)(a2 + 72) = v7;
  *(_QWORD *)(a2 + 80) = v12;
  *(_QWORD *)(a2 + 88) = v8;
  v9 = v8;
  v10 = v7;
  return v12;
}

void sub_15331C(__int128 *a1)
{
  char v1;
  char v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  __int128 v10;
  char v11;
  __int128 v12;
  __int128 v13;
  char v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;

  v1 = *((_BYTE *)a1 + 16);
  v2 = *((_BYTE *)a1 + 56);
  v3 = *((_QWORD *)a1 + 8);
  v4 = (void *)*((_QWORD *)a1 + 9);
  v5 = (void *)*((_QWORD *)a1 + 10);
  v6 = (void *)*((_QWORD *)a1 + 11);
  v10 = *a1;
  v11 = v1;
  v12 = *(__int128 *)((char *)a1 + 24);
  v13 = *(__int128 *)((char *)a1 + 40);
  v14 = v2;
  v15 = v3;
  v16 = v4;
  v17 = v5;
  v18 = v6;
  v7 = v6;
  v8 = v4;
  v9 = v5;
  sub_15391C((uint64_t *)&v10);
}

void sub_15339C()
{
  char *v0;
  double MidX;
  double MidY;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  char *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  double v23;
  double v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  double v30;
  double v31;
  CGPathRef v32;
  char v33[24];
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  objc_msgSend(v0, "bounds");
  MidX = CGRectGetMidX(v34);
  objc_msgSend(v0, "bounds");
  MidY = CGRectGetMidY(v35);
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring];
  v4 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign];
  v5 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_backgroundRing];
  v6 = v3;
  v7 = v4;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v5, "setBounds:");
  objc_msgSend(v5, "setPosition:", MidX, MidY);

  v8 = v6;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v8, "setBounds:");
  objc_msgSend(v8, "setPosition:", MidX, MidY);

  v9 = v7;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v9, "setBounds:");
  objc_msgSend(v9, "setPosition:", MidX, MidY);

  v10 = sub_154F44(v0);
  v12 = v11;
  v13 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style];
  swift_beginAccess(v13, v33, 0, 0);
  v14 = (void *)*((_QWORD *)v13 + 11);
  if (v14)
  {
    objc_msgSend(v14, "scaledValueForValue:", *((double *)v13 + 4));
    v16 = v15;
  }
  else
  {
    v16 = *((double *)v13 + 4);
  }
  if (v12 >= v10)
    v17 = v10;
  else
    v17 = v12;
  v18 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, MidX, MidY, (v17 - v16) * 0.5, -1.57079633, 4.71238898);
  v19 = objc_msgSend(v18, "CGPath");

  v20 = v5;
  v21 = v8;
  objc_msgSend(v20, "setPath:", v19);
  objc_msgSend(v20, "setLineWidth:", v16);

  v22 = v21;
  objc_msgSend(v22, "setPath:", v19);
  objc_msgSend(v22, "setLineWidth:", v16);

  if ((v13[56] & 1) == 0)
  {
    v24 = *((double *)v13 + 5);
    v23 = *((double *)v13 + 6);
    v25 = (void *)*((_QWORD *)v13 + 11);
    if (v25)
    {
      v26 = (void *)*((_QWORD *)v13 + 9);
      v27 = *((id *)v13 + 10);
      v28 = v25;
      v29 = v26;
      objc_msgSend(v28, "scaledValueForValue:", v24);
      v24 = v30;
      objc_msgSend(v28, "scaledValueForValue:", v23);
      v23 = v31;

    }
    v36.size.width = 0.0;
    v36.size.height = 0.0;
    v36.origin.x = MidX;
    v36.origin.y = MidY;
    v37 = CGRectInset(v36, v24 * -0.5, v23 * -0.5);
    v32 = CGPathCreateWithRoundedRect(v37, *((CGFloat *)v13 + 8), *((CGFloat *)v13 + 8), 0);
    objc_msgSend(v9, "setPath:", v32);

  }
}

void sub_15370C()
{
  char *v0;
  void *v1;
  unsigned __int8 *v2;
  double v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  char *v9;
  char v10;
  void *v11;
  uint64_t v12;
  char v13;
  char v14[31];
  unsigned __int8 v15;
  char v16[24];

  v1 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v1, "begin");
  objc_msgSend(v1, "setDisableActions:", 1);
  v2 = (unsigned __int8 *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState];
  *(_QWORD *)&v3 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState], v16, 0, 0).n128_u64[0];
  if (*v2 != 3)
  {
    v15 = *v2;
    v9 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState], v14, 0, 0);
    v10 = v9[8];
    v12 = *(_QWORD *)v9;
    v13 = v10;
    v6 = sub_154BD4(&v15, (uint64_t)&v12);
    v8 = v11;
    goto LABEL_5;
  }
  v4 = objc_msgSend(v0, "tintColor", v3);
  if (v4)
  {
    v5 = v4;
    v6 = sub_154DC4(v4);
    v8 = v7;

LABEL_5:
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring], "setStrokeColor:", v6);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign], "setFillColor:", v6);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_backgroundRing], "setStrokeColor:", v8);
    objc_msgSend(v1, "commit");

    return;
  }
  __break(1u);
}

id sub_153880@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v12;
  _BYTE v13[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style;
  swift_beginAccess(v3, v13, 0, 0);
  v4 = *(_BYTE *)(v3 + 16);
  v5 = *(_BYTE *)(v3 + 56);
  v6 = *(_QWORD *)(v3 + 64);
  v7 = *(void **)(v3 + 72);
  v12 = *(id *)(v3 + 80);
  v8 = *(void **)(v3 + 88);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v3 + 40);
  *(_BYTE *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v8;
  v9 = v8;
  v10 = v7;
  return v12;
}

void sub_15391C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v2 = a1[1];
  v19 = *a1;
  v3 = *((_BYTE *)a1 + 16);
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = *((_BYTE *)a1 + 56);
  v9 = a1[8];
  v18 = *(_OWORD *)(a1 + 9);
  v10 = a1[11];
  v11 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style, v21, 1, 0);
  v12 = *(void **)(v11 + 72);
  v13 = *(void **)(v11 + 80);
  v14 = *(void **)(v11 + 88);
  *(_QWORD *)v11 = v19;
  *(_QWORD *)(v11 + 8) = v2;
  *(_BYTE *)(v11 + 16) = v3;
  *(_QWORD *)(v11 + 24) = v4;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v6;
  *(_QWORD *)(v11 + 48) = v7;
  *(_BYTE *)(v11 + 56) = v8;
  *(_QWORD *)(v11 + 64) = v9;
  *(_OWORD *)(v11 + 72) = v18;
  *(_QWORD *)(v11 + 88) = v10;

  v15 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign);
  LODWORD(v16) = 0;
  if ((*(_BYTE *)(v11 + 56) & 1) == 0)
  {
    v17 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState;
    swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState, v20, 0, 0);
    v16 = *(double *)v17;
    LODWORD(v16) = 1.0;
    if (*(_BYTE *)(v17 + 8) & 1 | (*(double *)v17 == 0.0))
      *(float *)&v16 = 0.0;
  }
  objc_msgSend(v15, "setOpacity:", v16, v18);
  sub_15339C();
  sub_15370C();
}

void (*sub_153A64(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_153ABC;
}

void sub_153ABC(_QWORD *a1, char a2)
{
  _QWORD *v3;
  __n128 v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v3 = (_QWORD *)*a1;
  v4 = swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v5 = v3[3];
    v6 = *(void **)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign);
    if ((*(_BYTE *)(v5 + v3[4] + 56) & 1) != 0)
    {
      v4.n128_u32[0] = 0;
    }
    else
    {
      v7 = v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState;
      swift_beginAccess(v7, v3, 0, 0);
      v4.n128_u64[0] = *(_QWORD *)v7;
      v4.n128_u32[0] = 1.0;
      if (*(_BYTE *)(v7 + 8) & 1 | (*(double *)v7 == 0.0))
        v4.n128_f32[0] = 0.0;
    }
    objc_msgSend(v6, "setOpacity:", v4.n128_f64[0]);
    sub_15339C();
    sub_15370C();
  }
  free(v3);
}

void sub_153B78(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState);
  swift_beginAccess(v3, v4, 0, 0);
  *a1 = *v3;
}

void sub_153BC4(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState, v4, 1, 0);
  *v3 = v2;
  sub_15370C();
}

void (*sub_153C18(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState, a1, 33, 0);
  return sub_153C60;
}

void sub_153C60(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_15370C();
}

void sub_153CC8()
{
  char *v0;
  void *v1;
  char *v2;
  __n128 v3;
  char *v4;
  void *v5;
  double *v6;
  double v7;
  double v8;
  char v9[24];
  char v10[24];
  char v11[24];

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign];
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style];
  v3 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style], v11, 0, 0);
  v3.n128_u32[0] = 0;
  if ((v2[56] & 1) == 0)
  {
    v4 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState], v9, 0, 0);
    v3.n128_u64[0] = *(_QWORD *)v4;
    v3.n128_u32[0] = 1.0;
    if (v4[8] & 1 | (*(double *)v4 == 0.0))
      v3.n128_f32[0] = 0.0;
  }
  objc_msgSend(v1, "setOpacity:", v3.n128_f64[0]);
  v5 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_backgroundRing];
  v6 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState], v10, 0, 0);
  v7 = *v6;
  LODWORD(v7) = 1.0;
  if ((_BYTE)v6[1] & 1 | (*v6 == 0.0))
    *(float *)&v7 = 0.0;
  objc_msgSend(v5, "setOpacity:", v7);
  v8 = *v6;
  if ((_BYTE)v6[1] & 1 | (*v6 == 0.0))
    v8 = 0.85;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring], "setStrokeEnd:", v8);
  objc_msgSend(v0, "updateRotationAnimation");
  sub_15370C();
}

void sub_153E38(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState;
  swift_beginAccess(v3, v5, 0, 0);
  v4 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_BYTE *)(a1 + 8) = v4;
}

void sub_153E8C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState, v5, 1, 0);
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  sub_153CC8();
}

void (*sub_153EE8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState, a1, 33, 0);
  return sub_153F30;
}

void sub_153F30(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_153CC8();
}

char *CircularProgressView.init(style:)(uint64_t *a1)
{
  _BYTE *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  char *v36;
  __n128 v37;
  char *v38;
  void *v39;
  double *v40;
  double v41;
  double v42;
  id v43;
  id v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54[24];
  char v55[24];
  char v56[24];
  objc_super v57;

  v50 = a1[1];
  v52 = *a1;
  v2 = *((_BYTE *)a1 + 16);
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = *((_BYTE *)a1 + 56);
  v8 = a1[8];
  v48 = *(_OWORD *)(a1 + 9);
  v46 = a1[11];
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState] = 3;
  v9 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_rotationState] = 0;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_backgroundRing;
  v11 = objc_allocWithZone((Class)CAShapeLayer);
  v12 = v1;
  *(_QWORD *)&v1[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v15 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style];
  *(_QWORD *)v15 = v52;
  *((_QWORD *)v15 + 1) = v50;
  v15[16] = v2;
  *((_QWORD *)v15 + 3) = v3;
  *((_QWORD *)v15 + 4) = v4;
  *((_QWORD *)v15 + 5) = v5;
  *((_QWORD *)v15 + 6) = v6;
  v15[56] = v7;
  *((_QWORD *)v15 + 8) = v8;
  *(_OWORD *)(v15 + 72) = v48;
  *((_QWORD *)v15 + 11) = v46;

  v57.receiver = v12;
  v57.super_class = (Class)type metadata accessor for CircularProgressView();
  v16 = (char *)objc_msgSendSuper2(&v57, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v51 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring;
  v17 = *(void **)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring];
  v53 = v16;
  v18 = v16;
  objc_msgSend(v17, "setLineCap:", kCALineCapRound);
  v49 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_backgroundRing;
  v19 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_backgroundRing];
  v47 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign;
  v20 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign];
  v21 = (void *)objc_opt_self(UIColor);
  v22 = v19;
  v23 = v17;
  v45 = v20;
  v24 = objc_msgSend(v21, "clearColor");
  v25 = objc_msgSend(v24, "CGColor");

  objc_msgSend(v22, "setFillColor:", v25);
  v26 = objc_msgSend(v18, "layer");
  objc_msgSend(v26, "addSublayer:", v22);

  v27 = v23;
  v28 = objc_msgSend(v21, "clearColor");
  v29 = objc_msgSend(v28, "CGColor");

  objc_msgSend(v27, "setFillColor:", v29);
  v30 = objc_msgSend(v18, "layer");
  objc_msgSend(v30, "addSublayer:", v27);

  v31 = v45;
  v32 = objc_msgSend(v21, "clearColor");
  v33 = objc_msgSend(v32, "CGColor");

  objc_msgSend(v31, "setFillColor:", v33);
  v34 = objc_msgSend(v18, "layer");
  objc_msgSend(v34, "addSublayer:", v31);

  sub_15370C();
  sub_15339C();
  v35 = *(void **)&v18[v47];
  v36 = &v18[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style];
  v37 = swift_beginAccess(&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style], v56, 0, 0);
  v37.n128_u32[0] = 0;
  if ((v36[56] & 1) == 0)
  {
    v38 = &v18[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
    swift_beginAccess(&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState], v54, 0, 0);
    v37.n128_u64[0] = *(_QWORD *)v38;
    v37.n128_u32[0] = 1.0;
    if (v38[8] & 1 | (*(double *)v38 == 0.0))
      v37.n128_f32[0] = 0.0;
  }
  objc_msgSend(v35, "setOpacity:", v37.n128_f64[0]);
  v39 = *(void **)&v18[v49];
  v40 = (double *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
  swift_beginAccess(&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState], v55, 0, 0);
  v41 = *v40;
  LODWORD(v41) = 1.0;
  if ((_BYTE)v40[1] & 1 | (*v40 == 0.0))
    *(float *)&v41 = 0.0;
  objc_msgSend(v39, "setOpacity:", v41);
  objc_msgSend(v18, "updateRotationAnimation");
  v42 = *v40;
  if ((_BYTE)v40[1] & 1 | (*v40 == 0.0))
    v42 = 0.85;
  objc_msgSend(*(id *)&v53[v51], "setStrokeEnd:", v42);
  v43 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v43, "addObserver:selector:name:object:", v18, "updateRotationAnimation", UIApplicationWillEnterForegroundNotification, 0);

  return v18;
}

uint64_t type metadata accessor for CircularProgressView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews20CircularProgressView);
}

void sub_1544BC(uint64_t a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for CircularProgressView();
  objc_msgSendSuper2(&v3, "traitCollectionDidChange:", a1);
  sub_15370C();
  sub_15339C();
}

void sub_154574()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for CircularProgressView();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  sub_15339C();
}

void CircularProgressView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.CircularProgressView", 44, "init(frame:)", 12, 0);
  __break(1u);
}

id CircularProgressView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CircularProgressView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_15468C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_1546DC(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
  sub_15370C();
}

void sub_154734(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState;
  swift_beginAccess(v3, v5, 0, 0);
  v4 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_BYTE *)(a2 + 8) = v4;
}

void sub_15478C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState;
  swift_beginAccess(v4, v5, 1, 0);
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  sub_153CC8();
}

uint64_t method lookup function for CircularProgressView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for CircularProgressView);
}

uint64_t dispatch thunk of CircularProgressView.style.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of MigrationViewController.isAcknowledgementRequired.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of CircularProgressView.episodeCellState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of CircularProgressView.episodeCellState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of CircularProgressView.progressState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of CircularProgressView.progressState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of CircularProgressView.progressState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of CircularProgressView.__allocating_init(style:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

void destroy for CircularProgressView.Style(id *a1)
{

}

uint64_t initializeWithCopy for CircularProgressView.Style(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v3 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v3;
  v4 = *(void **)(a2 + 80);
  v5 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 88) = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

uint64_t assignWithCopy for CircularProgressView.Style(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  v4 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v4;
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  v5 = *(__int128 *)((char *)a2 + 40);
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  v6 = *(void **)(a1 + 72);
  v7 = (void *)*((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = v7;

  v9 = *(void **)(a1 + 80);
  v10 = (void *)*((_QWORD *)a2 + 10);
  *(_QWORD *)(a1 + 80) = v10;
  v11 = v10;

  v12 = *(void **)(a1 + 88);
  v13 = (void *)*((_QWORD *)a2 + 11);
  *(_QWORD *)(a1 + 88) = v13;
  v14 = v13;

  return a1;
}

uint64_t assignWithTake for CircularProgressView.Style(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  v4 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  v5 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);

  return a1;
}

uint64_t getEnumTagSinglePayload for CircularProgressView.Style(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CircularProgressView.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_QWORD *)(result + 72) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.Style()
{
  return &type metadata for CircularProgressView.Style;
}

ValueMetadata *type metadata accessor for CircularProgressView.ProgressState()
{
  return &type metadata for CircularProgressView.ProgressState;
}

id sub_154BD4(unsigned __int8 *a1, uint64_t a2)
{
  void *v2;
  int v3;
  int v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;

  v3 = *a1;
  v4 = *(unsigned __int8 *)(a2 + 8);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "systemGray2Color");
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v6, "resolvedColorWithTraitCollection:", v7);

  v9 = objc_msgSend(v8, "CGColor");
  if (v3)
  {
    if (v3 == 1)
    {
      v10 = objc_msgSend(v5, "whiteColor");
      v11 = objc_msgSend(v2, "traitCollection");
      v12 = objc_msgSend(v10, "resolvedColorWithTraitCollection:", v11);

      v13 = objc_msgSend(v12, "CGColor");
      return v13;
    }
    if (v4)
      return v9;
  }
  else if ((v4 & 1) != 0)
  {
    return v9;
  }
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  v14 = (void *)qword_3D0890;
  v15 = objc_msgSend(v2, "traitCollection");
  v16 = objc_msgSend(v14, "resolvedColorWithTraitCollection:", v15);

  v13 = objc_msgSend(v16, "CGColor");
  return v13;
}

id sub_154DC4(void *a1)
{
  char *v1;
  char *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  char v16[24];

  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style], v16, 0, 0);
  v4 = (void *)*((_QWORD *)v3 + 9);
  if (v4)
  {
    v5 = (id)*((_QWORD *)v3 + 9);
  }
  else
  {
    v5 = a1;
    v4 = 0;
  }
  v6 = v4;
  v7 = objc_msgSend(v1, "traitCollection");
  v8 = objc_msgSend(v5, "resolvedColorWithTraitCollection:", v7);

  v9 = objc_msgSend(v8, "CGColor");
  v10 = (void *)*((_QWORD *)v3 + 10);
  if (v10)
  {
    v11 = (id)*((_QWORD *)v3 + 10);
  }
  else
  {
    v11 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.2);
    v10 = 0;
  }
  v12 = v10;
  v13 = objc_msgSend(v1, "traitCollection");
  v14 = objc_msgSend(v11, "resolvedColorWithTraitCollection:", v13);

  objc_msgSend(v14, "CGColor");
  return v9;
}

double sub_154F44(char *a1)
{
  char *v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  double v11;
  char v13[24];
  CGRect v14;
  CGRect v15;

  v2 = &a1[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style];
  *(_QWORD *)&v3 = swift_beginAccess(&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_style], v13, 0, 0).n128_u64[0];
  if ((v2[16] & 1) != 0)
  {
    objc_msgSend(a1, "bounds", v3);
    v4 = CGRectGetWidth(v14) - (*((double *)v2 + 3) + *((double *)v2 + 3));
    objc_msgSend(a1, "bounds");
    CGRectGetHeight(v15);
  }
  else
  {
    v4 = *(double *)v2;
    v5 = *((double *)v2 + 1);
    v6 = (void *)*((_QWORD *)v2 + 11);
    if (v6)
    {
      v7 = (void *)*((_QWORD *)v2 + 9);
      v8 = *((id *)v2 + 10);
      v9 = v6;
      v10 = v7;
      objc_msgSend(v9, "scaledValueForValue:", v4);
      v4 = v11;
      objc_msgSend(v9, "scaledValueForValue:", v5);

    }
  }
  return v4;
}

void sub_15505C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  double v4;
  char v5;
  void *v6;
  NSString v7;
  id v8;
  NSString v9;
  id v10;
  double v11;
  Class isa;
  void *v13;
  id v14;
  id v15;
  void *v16;
  NSString v17;
  id v18;
  void *v19;
  NSString v20;
  id v21;
  __n128 v22;
  NSString v23;
  id v24;
  Class v25;
  Class v26;
  void *v27;
  id v28;
  id v29;
  NSString v30;
  uint64_t v31;
  _OWORD v32[2];
  _BYTE v33[24];
  uint64_t v34;
  _BYTE v35[24];

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_rotationState;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_rotationState);
  v3 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState, v35, 0, 0);
  v4 = *(double *)v3;
  v5 = *(_BYTE *)(v3 + 8) | (*(double *)v3 == 0.0);
  if (v2 != 1)
  {
    if (!(*(_BYTE *)(v3 + 8) & 1 | (*(double *)v3 == 0.0)))
      return;
    goto LABEL_6;
  }
  v6 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring);
  if ((v5 & 1) != 0)
  {
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "animationForKey:", v7);

    if (v8)
      return;
LABEL_6:
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v9);

    objc_msgSend(v10, "setDuration:", 0.375);
    LODWORD(v11) = 2139095039;
    objc_msgSend(v10, "setRepeatCount:", v11);
    objc_msgSend(v10, "setCumulative:", 1);
    isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v10, "setByValue:", isa);

    v13 = (void *)objc_opt_self(CAMediaTimingFunction);
    v14 = v10;
    v15 = objc_msgSend(v13, "functionWithName:", kCAMediaTimingFunctionLinear);
    objc_msgSend(v14, "setTimingFunction:", v15);

    v16 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring);
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "addAnimation:forKey:", v14, v17);

    *(_BYTE *)(v0 + v1) = 1;
    return;
  }
  v18 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring), "presentationLayer", v4);
  if (v18)
  {
    v19 = v18;
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v19, "valueForKeyPath:", v20);

    if (v21)
    {
      _bridgeAnyObjectToAny(_:)(v32, v21, v22);
      swift_unknownObjectRelease(v21);
    }
    else
    {
      memset(v32, 0, sizeof(v32));
    }
    sub_56AF8((uint64_t)v32, (uint64_t)v33);
    if (v34)
    {
      if ((swift_dynamicCast(&v31, v33, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) != 0)
      {
        v23 = String._bridgeToObjectiveC()();
        v24 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v23);

        objc_msgSend(v24, "setDuration:", 0.2);
        v25 = CGFloat._bridgeToObjectiveC()().super.super.isa;
        objc_msgSend(v24, "setFromValue:", v25);

        v26 = Int._bridgeToObjectiveC()().super.super.isa;
        objc_msgSend(v24, "setToValue:", v26);

        v27 = (void *)objc_opt_self(CAMediaTimingFunction);
        v28 = v24;
        v29 = objc_msgSend(v27, "functionWithName:", kCAMediaTimingFunctionLinear);
        objc_msgSend(v28, "setTimingFunction:", v29);

        v30 = String._bridgeToObjectiveC()();
        objc_msgSend(v6, "addAnimation:forKey:", v28, v30);

        *(_BYTE *)(v0 + v1) = 0;
      }
      else
      {

      }
    }
    else
    {

      sub_1FE78((uint64_t)v33);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CircularProgressView.Rotation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_155568 + 4 * byte_2F9EB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_15559C + 4 * byte_2F9EB0[v4]))();
}

uint64_t sub_15559C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1555A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1555ACLL);
  return result;
}

uint64_t sub_1555B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1555C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1555C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1555CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.Rotation()
{
  return &type metadata for CircularProgressView.Rotation;
}

unint64_t sub_1555EC()
{
  unint64_t result;

  result = qword_3D8B28;
  if (!qword_3D8B28)
  {
    result = swift_getWitnessTable(&unk_2F9F90, &type metadata for CircularProgressView.Rotation);
    atomic_store(result, (unint64_t *)&qword_3D8B28);
  }
  return result;
}

void sub_155630()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState] = 3;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_rotationState] = 0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_backgroundRing;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/CircularProgressView.swift", 50, 2, 192, 0);
  __break(1u);
}

void (*sub_155898(objc_super **a1))(uint64_t *a1, char a2)
{
  objc_class *v1;
  objc_super *v3;
  uint64_t ObjectType;

  v3 = (objc_super *)malloc(0x58uLL);
  *a1 = v3;
  v3[4].super_class = v1;
  ObjectType = swift_getObjectType();
  v3[5].receiver = (id)ObjectType;
  v3->receiver = v1;
  v3->super_class = (Class)ObjectType;
  v3[4].receiver = -[objc_super tintColor](v3, "tintColor");
  return sub_155908;
}

void sub_155908(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(*a1 + 64);
  if ((a2 & 1) != 0)
  {
    *(_OWORD *)(v2 + 16) = *(_OWORD *)(v2 + 72);
    objc_msgSendSuper2((objc_super *)(v2 + 16), "setTintColor:", v3);

  }
  else
  {
    v5 = *(_QWORD *)(v2 + 72);
    v4 = *(_QWORD *)(v2 + 80);
    *(_QWORD *)(v2 + 32) = v5;
    *(_QWORD *)(v2 + 40) = v4;
    objc_msgSendSuper2((objc_super *)(v2 + 32), "setTintColor:", v3);

    v6 = *(void **)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button);
    *(_QWORD *)(v2 + 48) = v5;
    *(_QWORD *)(v2 + 56) = v4;
    v7 = objc_msgSendSuper2((objc_super *)(v2 + 48), "tintColor");
    objc_msgSend(v6, "setTintColor:", v7);

  }
  free((void *)v2);
}

uint64_t type metadata accessor for ContextMenuButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17ContextMenuButton);
}

uint64_t sub_155BEC()
{
  return 6;
}

void (*sub_155BF4(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button);
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style;
  v3[3] = v4;
  v3[4] = v5;
  v6 = (_BYTE *)(v4 + v5);
  swift_beginAccess(v4 + v5, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v6;
  return sub_155C70;
}

void sub_155C70(uint64_t a1)
{
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v5 = *(unsigned __int8 *)(v4 + v3);
  *(_BYTE *)(v4 + v3) = v2;
  if (v5 != v2)
    sub_1E2494();
  free(v1);
}

double sub_155CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  id v15;
  double v16;
  NSString v17;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button);
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView;
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                             + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView), "_groupName"));
  if (!v7)
  {
    if (!a2)
      return result;
    goto LABEL_10;
  }
  v9 = v7;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v12 = v11;

  if (!a2)
  {
    swift_bridgeObjectRelease(v12);
    v15 = *(id *)(v5 + v6);
    v17 = 0;
    goto LABEL_12;
  }
  if (v10 != a1 || v12 != a2)
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, a1, a2, 0);
    swift_bridgeObjectRelease(v12);
    if ((v14 & 1) != 0)
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
      return result;
    }
LABEL_10:
    v15 = *(id *)(v5 + v6);
    v17 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(a2).n128_u64[0];
LABEL_12:
    objc_msgSend(v15, "_setGroupName:", v17, v16);

    return result;
  }
  swift_bridgeObjectRelease(a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

double (*sub_155E1C(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  v3 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button)+ OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView), "_groupName");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_155EA4;
}

double sub_155EA4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return sub_155CB4(*a1, v2);
  swift_bridgeObjectRetain(a1[1]);
  sub_155CB4(v3, v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

void sub_155F04(objc_class *a1)
{
  uint64_t v1;
  id v3;
  char v4;
  id v5;
  UIBlurEffect_optional v6;

  v3 = objc_retain(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button)
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView));
  v4 = (char)v3;
  v5 = v3;
  v6.value.super.super.isa = a1;
  v6.is_nil = 0;
  UIVisualEffectView.setBlurEffect(_:animated:)(v6, v4);

}

uint64_t sub_155F60()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button)
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style);
  swift_beginAccess(v1, v3, 0, 0);
  return *v1;
}

void sub_155FB4(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  int v4;
  _BYTE v5[24];

  v3 = (unsigned __int8 *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button)
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_style);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
    sub_1E2494();
}

void (*sub_156024(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_155BF4(v2);
  return sub_919A8;
}

id sub_156068()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "tintColor");
}

void sub_1560A0(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  void *v4;
  id v5;
  objc_super v6;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v7.receiver = v1;
  v7.super_class = ObjectType;
  objc_msgSendSuper2(&v7, "setTintColor:", a1);
  v4 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button];
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v6, "tintColor");
  objc_msgSend(v4, "setTintColor:", v5);

}

void (*sub_15613C(objc_super ***a1))(_QWORD *)
{
  objc_super **v2;

  v2 = (objc_super **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (objc_super *)sub_155898(v2);
  return sub_919A8;
}

id sub_156180()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button)
            + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor);
  swift_beginAccess(v1, v3, 0, 0);
  return *v1;
}

void sub_1561D4(void *a1)
{
  sub_1569E4(a1);

}

void (*sub_1561F8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button)
               + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor);
  swift_beginAccess(v4, v3, 0, 0);
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  return sub_15627C;
}

void sub_15627C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void **v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (void **)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    sub_1569E4(v5);

    v3 = *v4;
  }
  else
  {
    sub_1569E4(*(void **)(*(_QWORD *)a1 + 24));
  }

  free(v2);
}

uint64_t sub_1562D8()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button)+ OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_blurView), "_groupName");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void (*sub_156354(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_155E1C(v2);
  return sub_919A8;
}

char *sub_156398(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  NSString v28;
  char *v29;
  void *v30;
  char *v31;
  Class v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  char *v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  Class isa;
  double v58;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  objc_class *ObjectType;
  uint64_t v66;
  objc_super v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[6];

  ObjectType = (objc_class *)swift_getObjectType();
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Glyph(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[3] = a5;
  v71[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v71);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_0, a2, a5);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  v21 = a4;
  BaseObjectGraph.inject<A>(_:)(v68, v20, v20);
  v22 = v69;
  v23 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  if ((dispatch thunk of EpisodeControllerProtocol.canCreateContextMenu(asPartOf:for:)(a1, v71, v22, v23) & 1) != 0)
  {
    *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_objectGraph] = a1;
    sub_1D5D4((uint64_t)v68, (uint64_t)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_episodeController]);
    sub_1D5D4((uint64_t)v71, (uint64_t)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_model]);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a3, v15);
    v24 = type metadata accessor for Glyph.Color(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v14, 1, 1, v24);
    v25 = objc_allocWithZone((Class)type metadata accessor for GlyphButton(0));
    swift_retain(a1);
    GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v18, (uint64_t)v14, 2, 0, 1, 0.0, 0.0, 0.0, 0.0);
    *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button] = v26;
    v27 = v26;
    v28 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "setAccessibilityIdentifier:", v28);

    v67.receiver = v21;
    v67.super_class = ObjectType;
    v29 = (char *)objc_msgSendSuper2(&v67, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v30 = *(void **)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button];
    v31 = v29;
    objc_msgSend(v31, "addSubview:", v30);
    v32 = v30;
    v33 = -[objc_class superview](v32, "superview");
    if (v33)
    {
      v34 = v33;
      -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      ObjectType = (objc_class *)objc_opt_self(NSLayoutConstraint);
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
      v60 = swift_allocObject(v35, 64, 7);
      *(_OWORD *)(v60 + 16) = xmmword_2F0A20;
      v36 = -[objc_class leftAnchor](v32, "leftAnchor");
      v63 = v15;
      v64 = a3;
      v62 = v16;
      v37 = v36;
      v38 = objc_msgSend(v34, "leftAnchor");
      v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

      v40 = v60;
      *(_QWORD *)(v60 + 32) = v39;
      v41 = -[objc_class rightAnchor](v32, "rightAnchor");
      v42 = v31;
      v43 = v34;
      v44 = objc_msgSend(v34, "rightAnchor");
      v45 = objc_msgSend(v41, "constraintEqualToAnchor:", v44);

      v46 = v40;
      *(_QWORD *)(v40 + 40) = v45;
      v47 = -[objc_class topAnchor](v32, "topAnchor");
      v48 = v43;
      v49 = v43;
      v61 = v43;
      v31 = v42;
      v50 = objc_msgSend(v48, "topAnchor");
      v51 = objc_msgSend(v47, "constraintEqualToAnchor:", v50);

      *(_QWORD *)(v46 + 48) = v51;
      v52 = -[objc_class bottomAnchor](v32, "bottomAnchor");
      v53 = objc_msgSend(v49, "bottomAnchor");
      v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

      v16 = v62;
      v15 = v63;
      a3 = v64;
      *(_QWORD *)(v46 + 56) = v54;
      v66 = v46;
      specialized Array._endMutation()(v55);
      v56 = v66;
      sub_12D34();
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v58 = swift_bridgeObjectRelease(v56).n128_u64[0];
      -[objc_class activateConstraints:](ObjectType, "activateConstraints:", isa, v58);

      v32 = isa;
    }

    objc_msgSend(v31, "setContextMenuInteractionEnabled:", 1);
    objc_msgSend(v31, "setShowsMenuAsPrimaryAction:", 1);
    swift_release(a1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a3, v15);
    __swift_destroy_boxed_opaque_existential_0(v71);
    __swift_destroy_boxed_opaque_existential_0(v68);
  }
  else
  {
    swift_release(a1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a3, v15);
    __swift_destroy_boxed_opaque_existential_0(v71);
    __swift_destroy_boxed_opaque_existential_0(v68);
    swift_deallocPartialClassInstance(v21, ObjectType, 104, 7);
    return 0;
  }
  return v31;
}

char *sub_156934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  Class v14;
  id v15;
  uint64_t v17;

  v11 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_allocWithZone(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, a5);
  return sub_156398(a1, (uint64_t)v13, a3, v15, a5, a6);
}

void sub_1569E4(void *a1)
{
  uint64_t v1;
  char *v3;
  id *v4;
  id v5;
  id v6;
  char *v7;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12[24];

  v3 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17ContextMenuButton_button);
  v4 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor];
  swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_platterFillColor], v12, 1, 0);
  v5 = *v4;
  *v4 = a1;
  v6 = a1;

  v7 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active];
  *(_QWORD *)&v8 = swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active], &v11, 0, 0).n128_u64[0];
  if (*v7 == 1)
    v9 = objc_msgSend(v3, "tintColor", v8);
  else
    v9 = *v4;
  v10 = v9;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_fillView], "setBackgroundColor:", v9);

}

void sub_156AC8()
{
  qword_3D8B78 = 0x4077700000000000;
}

void sub_156ADC()
{
  qword_3D8B80 = 0x407E000000000000;
}

void sub_156AEC()
{
  qword_3D8B88 = 0x4080E00000000000;
}

void sub_156B00(void *a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  char v5;
  id v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v3 = v2;
  if (a1)
  {
    v5 = v3[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_style];
    v6 = a1;
    v7 = sub_157770(v5, v6);
    objc_msgSend(v3, "bounds");
    objc_msgSend(v7, "setFrame:");
    objc_msgSend(v7, "setAutoresizingMask:", 18);
    v15 = v7;
    objc_msgSend(v3, "insertSubview:below:");
    v8 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_backgroundImageView];
    *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_backgroundImageView] = v7;

    if ((a2 & 1) != 0)
    {
      objc_msgSend(v15, "setAlpha:", 0.0);
      v9 = (void *)objc_opt_self(UIView);
      v10 = swift_allocObject(&unk_385DC8, 24, 7);
      *(_QWORD *)(v10 + 16) = v15;
      aBlock[4] = sub_AF734;
      v17 = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24360;
      aBlock[3] = &block_descriptor_33;
      v11 = _Block_copy(aBlock);
      v12 = v17;
      v13 = v15;
      swift_release(v12);
      objc_msgSend(v9, "animateWithDuration:animations:", v11, 0.25);

      _Block_release(v11);
    }
    else
    {

    }
  }
  else
  {
    v14 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_backgroundImageView];
    if (v14)
      objc_msgSend(v14, "removeFromSuperview");
  }
}

id sub_156CF0(double a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;

  v2 = a1;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_offset;
  *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_offset) = a1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_backgroundImageView);
  if (v4)
  {
    v5 = type metadata accessor for UberBackgroundImageView();
    v6 = (char *)swift_dynamicCastClass(v4, v5);
    if (v6)
    {
      *(double *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_offset] = v2;
      objc_msgSend(v6, "setNeedsLayout");
      v2 = *(double *)(v1 + v3);
    }
  }
  v7 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_navGradientView);
  if (v2 < 0.0)
    v2 = 0.0;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_navGradientView), "frame");
  return objc_msgSend(v7, "setFrame:", 0.0, v2);
}

char *sub_156DB0(char a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  char *v6;
  objc_class *ObjectType;
  uint64_t v13;
  objc_class *ObjCClassFromMetadata;
  id v15;
  char *v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  __int128 v28;
  void *v29;
  id v30;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;
  CGRect v39;

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_backgroundImageView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_offset] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_zoomFactor] = 0x3FF0000000000000;
  v13 = type metadata accessor for GradientView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v13);
  v15 = objc_allocWithZone(ObjCClassFromMetadata);
  v16 = v6;
  v17 = objc_msgSend(v15, "init");
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_navGradientView] = v17;
  v18 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_gradientOverlayView] = v18;
  v16[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_style] = a1;

  v38.receiver = v16;
  v38.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", a2, a3, a4, a5);
  objc_msgSend(v19, "setClipsToBounds:", 1);
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_gradientOverlayView;
  if (qword_3CFB80 != -1)
    swift_once(&qword_3CFB80, sub_21329C);
  v21 = xmmword_3FD360;
  v22 = (void *)qword_3FD398;
  v33 = xmmword_3FD360;
  v34 = xmmword_3FD370;
  v35 = unk_3FD380;
  v36 = qword_3FD390;
  v37 = qword_3FD398;
  swift_bridgeObjectRetain(xmmword_3FD370);
  v23 = v22;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(*((_QWORD *)&v21 + 1));
  sub_ECA74(&v33);
  v24 = *(id *)&v19[v20];
  objc_msgSend(v19, "bounds", v33, v34, v35, v36, v37);
  objc_msgSend(v24, "setFrame:");

  v25 = *(void **)&v19[v20];
  objc_msgSend(v25, "setAutoresizingMask:", 18);
  objc_msgSend(v19, "addSubview:", v25);
  v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_navGradientView;
  v27 = *(id *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_navGradientView];
  objc_msgSend(v19, "bounds");
  objc_msgSend(v27, "setFrame:", 0.0, 0.0, CGRectGetWidth(v39), 120.0);

  if (qword_3CFB68 != -1)
    swift_once(&qword_3CFB68, sub_212FA4);
  v28 = xmmword_3FD2A0;
  v29 = (void *)qword_3FD2D8;
  v33 = xmmword_3FD2A0;
  v34 = xmmword_3FD2B0;
  v35 = unk_3FD2C0;
  v36 = qword_3FD2D0;
  v37 = qword_3FD2D8;
  swift_bridgeObjectRetain(xmmword_3FD2B0);
  v30 = v29;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(*((_QWORD *)&v28 + 1));
  sub_ECA74(&v33);
  v31 = *(void **)&v19[v26];
  objc_msgSend(v31, "setAutoresizingMask:", 2);
  objc_msgSend(v19, "addSubview:", v31);

  return v19;
}

uint64_t type metadata accessor for UberBackgroundView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews18UberBackgroundView);
}

void sub_157210(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;

  *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_zoomFactor) = a1;
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UberBackgroundView_backgroundImageView);
  if (v2)
  {
    v4 = type metadata accessor for UberBackgroundImageView();
    v5 = (char *)swift_dynamicCastClass(v2, v4);
    if (v5)
    {
      *(double *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_zoomFactor] = a1;
      objc_msgSend(v5, "setNeedsLayout");
    }
  }
}

double sub_15728C()
{
  int v0;
  uint64_t *v1;

  v0 = static SizeClass.deviceCategory.getter();
  if (v0)
  {
    if (v0 == 1)
    {
      if (qword_3CF708 != -1)
        swift_once(&qword_3CF708, sub_156ADC);
      v1 = &qword_3D8B80;
    }
    else
    {
      if (qword_3CF710 != -1)
        swift_once(&qword_3CF710, sub_156AEC);
      v1 = &qword_3D8B88;
    }
  }
  else
  {
    if (qword_3CF700 != -1)
      swift_once(&qword_3CF700, sub_156AC8);
    v1 = &qword_3D8B78;
  }
  return *(double *)v1;
}

char *sub_157354(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  id v11;
  char *v12;
  id v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  id v19;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_parallaxFactor] = 0x3FD3333333333333;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_fixedWidth];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_zoomFactor] = 0x3FF0000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_offset] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_image] = 0;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v4;
  v13 = objc_msgSend(v11, "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_backgroundImageView] = v13;

  v21.receiver = v12;
  v21.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  v15 = *(void **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_backgroundImageView];
  v16 = v14;
  objc_msgSend(v15, "setContentMode:", 2);
  objc_msgSend(v16, "setClipsToBounds:", 1);
  objc_msgSend(v16, "addSubview:", v15);
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v16;
  v19 = objc_msgSend(v17, "clearColor");
  objc_msgSend(v18, "setBackgroundColor:", v19);

  return v18;
}

id sub_157540()
{
  char *v0;
  id result;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double Width;
  double v8;
  double v9;
  CGFloat v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  objc_super v20;
  CGRect v21;
  CGRect v22;

  v20.receiver = v0;
  v20.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v20, "layoutSubviews");
  result = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_image];
  if (result)
  {
    objc_msgSend(result, "size");
    v3 = v2;
    v5 = v4;
    if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_fixedWidth + 8])
      v6 = 0.0;
    else
      v6 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_fixedWidth];
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v21);
    if (v6 <= Width)
      v6 = Width;
    if (v3 >= v5)
      v8 = v6 / v5;
    else
      v8 = v6 / v3;
    v9 = v5 * v8 * *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_zoomFactor];
    objc_msgSend(v0, "bounds");
    v10 = CGRectGetWidth(v22);
    v11 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_backgroundImageView];
    objc_msgSend(v11, "setFrame:", (v6 - v10) * -0.5, 0.0, v6, v9);
    v12 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_parallaxFactor];
    if (-(*(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_offset] * v12) <= 0.0)
      v13 = -(*(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_offset] * v12);
    else
      v13 = 0.0;
    objc_msgSend(v0, "bounds");
    v15 = v14;
    objc_msgSend(v0, "bounds");
    v17 = v16;
    objc_msgSend(v0, "bounds");
    return objc_msgSend(v11, "_setContentRectInPixels:forContentSize:", 0.0, v13, v15, v17, v18, v19);
  }
  return result;
}

uint64_t type metadata accessor for UberBackgroundImageView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23UberBackgroundImageView);
}

char *sub_157770(char a1, void *a2)
{
  int v3;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  void *v10;
  id v11;
  char *v12;
  char *v13;

  if (a1 == 2)
  {
    v3 = static SizeClass.deviceCategory.getter();
    if (v3)
    {
      if (v3 == 1)
      {
        if (qword_3CF708 != -1)
          swift_once(&qword_3CF708, sub_156ADC);
        v4 = &qword_3D8B80;
      }
      else
      {
        if (qword_3CF710 != -1)
          swift_once(&qword_3CF710, sub_156AEC);
        v4 = &qword_3D8B88;
      }
    }
    else
    {
      if (qword_3CF700 != -1)
        swift_once(&qword_3CF700, sub_156AC8);
      v4 = &qword_3D8B78;
    }
    v6 = *v4;
    v7 = objc_allocWithZone((Class)type metadata accessor for UberBackgroundImageView());
    v8 = a2;
    v9 = (char *)objc_msgSend(v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v10 = *(void **)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_image];
    *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_image] = a2;
    v11 = v8;
    v12 = v9;

    v13 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_fixedWidth];
    *(_QWORD *)v13 = v6;
    v13[8] = 0;
    objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_backgroundImageView], "setImage:", v11);
    v5 = v12;
    objc_msgSend(v5, "setNeedsLayout");

  }
  else
  {
    v5 = (char *)objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", a2);
    objc_msgSend(v5, "setContentMode:", 2);
  }
  return v5;
}

uint64_t sub_15793C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_33(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_157978()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_parallaxFactor] = 0x3FD3333333333333;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_fixedWidth];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_zoomFactor] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_offset] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23UberBackgroundImageView_image] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UberBackgroundView.swift", 48, 2, 190, 0);
  __break(1u);
}

void sub_157A28()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  __n128 v5;
  uint64_t v6;
  int v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for Glyph(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14.receiver = v0;
  v14.super_class = ObjectType;
  if (!objc_msgSendSuper2(&v14, "isEnabled"))
    goto LABEL_14;
  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15GlyphPlayButton_playButtonState + 8] & 1) == 0)
  {
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15GlyphPlayButton_playButtonState];
    if (v6 == 2)
    {
      static Glyph.MacEpisodeCells.document.getter();
    }
    else if (v6 == 1)
    {
      static Glyph.MacEpisodeCells.pause.getter();
    }
    else
    {
      if (v6)
      {
        v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15GlyphPlayButton_playButtonState];
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for PlayButtonState, &v12, &type metadata for PlayButtonState, &type metadata for Int);
        __break(1u);
        return;
      }
      static Glyph.MacEpisodeCells.play.getter(v5);
    }
    sub_1E2B60(v4);
  }
  v7 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15GlyphPlayButton_isHovering];
  v13.receiver = v0;
  v13.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v13, "isSelected");
  if (v7 != 1)
  {
LABEL_14:
    objc_msgSend(v0, "setHidden:", 1);
    return;
  }
  v9 = v8;
  objc_msgSend(v0, "setHidden:", 0);
  if ((v9 & 1) != 0)
  {
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    objc_msgSend(v0, "setTintColor:", v10);

  }
  else
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    objc_msgSend(v0, "setTintColor:", qword_3D0890);
  }
}

void sub_157C30(void *a1, uint64_t a2, uint64_t a3, const char **a4)
{
  const char *v6;
  id v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)swift_getObjectType();
  v6 = *a4;
  v7 = v8.receiver;
  objc_msgSendSuper2(&v8, v6, a3);
  sub_157A28();

}

uint64_t sub_157C94(uint64_t a1, uint64_t a2, char a3, char a4, char a5, double a6, double a7, double a8, double a9)
{
  objc_class *v9;
  objc_class *v10;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _BYTE *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v10 = v9;
  v18 = a4 & 1;
  v19 = a5 & 1;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v20);
  v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Glyph(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = objc_allocWithZone(v10);
  v27[OBJC_IVAR____TtC23ShelfKitCollectionViews15GlyphPlayButton_isHovering] = 0;
  v28 = &v27[OBJC_IVAR____TtC23ShelfKitCollectionViews15GlyphPlayButton_playButtonState];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, a1, v23);
  sub_236F0(a2, (uint64_t)v22);
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v26, (uint64_t)v22, a3, v18, v19, a6, a7, a8, a9);
  v30 = v29;
  sub_157F08(a2);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
  return v30;
}

uint64_t sub_157E7C()
{
  return type metadata accessor for GlyphPlayButton(0);
}

uint64_t type metadata accessor for GlyphPlayButton(uint64_t a1)
{
  uint64_t result;

  result = qword_3D8C68;
  if (!qword_3D8C68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GlyphPlayButton);
  return result;
}

uint64_t sub_157EC0(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_2FA0C8;
  v2[1] = &unk_2FA0E0;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 880);
}

uint64_t sub_157F08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_157F48(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  double result;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_actionRunner);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = *v4;
  *v4 = v2;
  v4[1] = v3;
  swift_unknownObjectRetain(v2);
  *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  return result;
}

double sub_157FB0()
{
  uint64_t v0;
  _QWORD *v1;
  double result;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_actionRunner);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_actionRunner, v3, 0, 0);
  *(_QWORD *)&result = swift_unknownObjectRetain(*v1).n128_u64[0];
  return result;
}

double sub_157FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  double result;
  _BYTE v8[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_actionRunner);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t (*sub_158058(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_actionRunner, a1, 33, 0);
  return j_j__swift_endAccess;
}

double sub_15809C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  _BYTE v6[40];

  sub_D184(a1, (uint64_t)v6, &qword_3D31A0);
  v3 = *a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController;
  swift_beginAccess(v3, v5, 33, 0);
  sub_91F74((uint64_t)v6, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t sub_158108@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_D184(v3, a1, &qword_3D31A0);
}

double sub_158160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController;
  swift_beginAccess(v3, v5, 33, 0);
  sub_91F74(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1581B8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1581FC()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_isShowingTransientController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_isShowingTransientController, v3, 0, 0);
  return *v1;
}

void sub_158240(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_isShowingTransientController);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*sub_158288(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_isShowingTransientController, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_1582CC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;

  v3 = objc_msgSend(*a1, "viewControllers");
  v4 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  *a2 = v5;
}

void sub_15833C(_QWORD *a1, void **a2)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  Class isa;

  v2 = (_QWORD *)*a1;
  v3 = *a2;
  if (*a1)
    v4 = (_QWORD *)*a1;
  else
    v4 = _swiftEmptyArrayStorage;
  sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  swift_bridgeObjectRetain(v2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "setViewControllers:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

uint64_t sub_1583D0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "viewControllers");
  v2 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  return v3;
}

void sub_158434(_QWORD *a1)
{
  void *v1;
  _QWORD *v2;
  Class isa;

  if (a1)
    v2 = a1;
  else
    v2 = _swiftEmptyArrayStorage;
  sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setViewControllers:", isa, swift_bridgeObjectRelease(v2).n128_f64[0]);

}

void (*sub_1584AC(uint64_t *a1))(_QWORD *a1, char a2)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;

  a1[1] = (uint64_t)v1;
  v3 = objc_msgSend(v1, "viewControllers");
  v4 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  a1[2] = v4;
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  *a1 = v5;
  return sub_158530;
}

void sub_158530(_QWORD *a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  Class isa;

  v3 = (void *)*a1;
  v2 = (void *)a1[1];
  if (*a1)
    v4 = (void *)*a1;
  else
    v4 = &_swiftEmptyArrayStorage;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(*a1);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "setViewControllers:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "setViewControllers:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);
  }

}

uint64_t sub_1585E4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2FA100);
  v5 = swift_getKeyPath(&unk_2FA128);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

double sub_158660(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_2FA100);
  v5 = swift_getKeyPath(&unk_2FA128);
  static Published.subscript.getter(&v10, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  LOBYTE(KeyPath) = v10;
  v6 = swift_getKeyPath(&unk_2FA100);
  v7 = swift_getKeyPath(&unk_2FA128);
  v9 = v2;
  static Published.subscript.setter(&v9, v3, v6, v7);
  return sub_15872C(KeyPath);
}

double sub_15872C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  double result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[24];
  _QWORD v51[5];

  v2 = v1;
  v3 = a1 & 1;
  KeyPath = swift_getKeyPath(&unk_2FA100);
  v5 = swift_getKeyPath(&unk_2FA128);
  static Published.subscript.getter(v51, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = LOBYTE(v51[0]);
  v7 = InterfaceMode.rawValue.getter(v3);
  v9 = v8;
  v10 = InterfaceMode.rawValue.getter(v6);
  if (v7 == v10 && v9 == v11)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v9, 2).n128_u64[0];
    return result;
  }
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  if ((v14 & 1) != 0)
    return result;
  v16 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController, v50, 0, 0);
  sub_D184(v16, (uint64_t)v51, &qword_3D31A0);
  if (!v51[3])
  {
    v19 = sub_D1D4((uint64_t)v51, &qword_3D31A0);
LABEL_18:
    if ((os_feature_enabled_red_sun(v19) & 1) != 0)
      return result;
    goto LABEL_19;
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  v18 = type metadata accessor for ParentFlowController(0);
  v19 = swift_dynamicCast(&v49, v51, v17, v18, 6);
  if ((v19 & 1) == 0)
    goto LABEL_18;
  v20 = v49;
  v21 = swift_getKeyPath(&unk_2FA100);
  v22 = swift_getKeyPath(&unk_2FA128);
  static Published.subscript.getter(v51, v2, v21, v22);
  swift_release(v21);
  swift_release(v22);
  v23 = LOBYTE(v51[0]);
  v24 = (_BYTE *)(v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_interfaceMode);
  swift_beginAccess(v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_interfaceMode, v51, 1, 0);
  *v24 = v23;
  v25 = *(_QWORD *)(v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager);
  v26 = *(unsigned __int8 *)(v25 + 56);
  *(_BYTE *)(v25 + 56) = v23;
  v27 = InterfaceMode.rawValue.getter(v26);
  v29 = v28;
  v30 = InterfaceMode.rawValue.getter(v23);
  if (v27 == v30 && v29 == v31)
  {
    swift_release(v20);
    swift_bridgeObjectRelease_n(v29, 2);
    if ((os_feature_enabled_red_sun(v48) & 1) != 0)
      return result;
    goto LABEL_19;
  }
  v33 = v31;
  v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v30, v31, 0);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v33);
  if ((v34 & 1) == 0)
    sub_11A728(v26, *(_BYTE *)(v25 + 56));
  swift_release(v20);
  if ((os_feature_enabled_red_sun(v35) & 1) == 0)
  {
LABEL_19:
    v36 = sub_159458(v3);
    if (v36)
    {
      v38 = v36;
      v39 = v37;
      ObjectType = swift_getObjectType();
      v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(ObjectType, v39);

      v42 = swift_getKeyPath(&unk_2FA100);
      v43 = swift_getKeyPath(&unk_2FA128);
      static Published.subscript.getter(&v49, v2, v42, v43);
      swift_release(v42);
      swift_release(v43);
      v45 = sub_159458(v49);
      if (v45)
      {
        v46 = v44;
        v47 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v41, v47, v46);
        swift_unknownObjectRelease(v41);

      }
      else
      {
        *(_QWORD *)&result = swift_unknownObjectRelease(v41).n128_u64[0];
      }
    }
  }
  return result;
}

uint64_t sub_158A88()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2FA100);
  v2 = swift_getKeyPath(&unk_2FA128);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_158B00(char a1)
{
  void *v1;
  char v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;

  v2 = a1 & 1;
  KeyPath = swift_getKeyPath(&unk_2FA100);
  v4 = swift_getKeyPath(&unk_2FA128);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  LOBYTE(KeyPath) = v9;
  v5 = swift_getKeyPath(&unk_2FA100);
  v6 = swift_getKeyPath(&unk_2FA128);
  v8 = v2;
  static Published.subscript.setter(&v8, v1, v5, v6);
  return sub_15872C(KeyPath);
}

double (*sub_158BC4(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = (_QWORD *)(a1 + 9);
  *(_QWORD *)a1 = v1;
  KeyPath = swift_getKeyPath(&unk_2FA100);
  v5 = swift_getKeyPath(&unk_2FA128);
  static Published.subscript.getter(v3, v1, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_158C50;
}

double sub_158C50(uint64_t a1)
{
  _QWORD *v2;
  char v3;
  uint64_t KeyPath;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = (_QWORD *)(a1 + 9);
  v3 = *(_BYTE *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_2FA100);
  v5 = swift_getKeyPath(&unk_2FA128);
  v6 = *(void **)a1;
  static Published.subscript.getter(v2, *(_QWORD *)a1, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  LOBYTE(KeyPath) = *(_BYTE *)(a1 + 9);
  v7 = swift_getKeyPath(&unk_2FA100);
  v8 = swift_getKeyPath(&unk_2FA128);
  *(_BYTE *)(a1 + 9) = v3;
  static Published.subscript.setter(v2, v6, v7, v8);
  return sub_15872C(KeyPath);
}

double sub_158D24(_QWORD *a1)
{
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController__interfaceMode, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8C98);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

uint64_t sub_158D88(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  __n128 v16;
  _BYTE v19[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8CA0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v19[-v10 - 8];
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12(&v19[-v10 - 8], a1, v4, v9);
  v13 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(v7, v11, v4);
  swift_beginAccess(v13 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController__interfaceMode, v19, 33, 0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8C98);
  Published.projectedValue.setter(v7, v14, v15);
  v16 = swift_endAccess(v19);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v11, v4, v16);
}

double sub_158E98()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController__interfaceMode, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8C98);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

uint64_t sub_158EF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8CA0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController__interfaceMode, v13, 33, 0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8C98);
  Published.projectedValue.setter(v7, v8, v9);
  v10 = swift_endAccess(v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 8))(a1, v3, v10);
}

void (*sub_158FCC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8CA0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController__interfaceMode;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8C98);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_159094;
}

void sub_159094(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void (*v15)(void *, uint64_t);
  __n128 v16;

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    v14 = swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6, v14);
    swift_endAccess(v3 + 3);
    v15 = *(void (**)(void *, uint64_t))(v10 + 8);
    v15(v7, v12);
  }
  else
  {
    v16 = swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6, v16);
    swift_endAccess(v3 + 6);
    v15 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v15(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

id RootSplitViewController.__allocating_init(hostingViewController:tabBarController:searchSuggestionsController:asPartOf:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;
  id v12;

  v11 = objc_allocWithZone(v5);
  v12 = sub_1628DC((uint64_t)a1, a2, a3, a4, a5);

  swift_release(a5);
  return v12;
}

id RootSplitViewController.init(hostingViewController:tabBarController:searchSuggestionsController:asPartOf:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v8;

  v8 = sub_1628DC((uint64_t)a1, a2, a3, a4, a5);

  swift_release(a5);
  return v8;
}

double sub_15926C()
{
  void *v0;
  void *v1;
  id v2;
  char v3;
  char v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  objc_super v11;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for RootSplitViewController(0);
  objc_msgSendSuper2(&v11, "viewDidLoad");
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = UITraitCollection.interfaceMode.getter();

  v4 = v3 & 1;
  KeyPath = swift_getKeyPath(&unk_2FA100);
  v6 = swift_getKeyPath(&unk_2FA128);
  static Published.subscript.getter(&v10, v1, KeyPath, v6);
  swift_release(KeyPath);
  swift_release(v6);
  LOBYTE(KeyPath) = v10;
  v7 = swift_getKeyPath(&unk_2FA100);
  v8 = swift_getKeyPath(&unk_2FA128);
  v10 = v4;
  static Published.subscript.setter(&v10, v1, v7, v8);
  return sub_15872C(KeyPath);
}

id sub_1593B0()
{
  void *v0;
  id result;
  void *v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  result = objc_msgSend(v0, "viewControllerForColumn:", 2);
  if (result)
  {
    v2 = result;
    ObjectType = swift_getObjectType();
    v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HostingViewController);
    if (v4)
      v5 = v4;
    else
      v5 = 0;
    if (v4)
      v6 = v2;
    else
      v6 = 0;
    if (v6)
    {
      v7 = swift_getObjectType();
      v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v5);

      v9 = type metadata accessor for FlowNavigationController();
      result = (id)swift_dynamicCastClass(v8, v9);
      if (result)
        return result;

    }
    else
    {

    }
    return 0;
  }
  return result;
}

void *sub_159458(char a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t ObjectType;

  if ((a1 & 1) != 0)
  {
    v6 = objc_msgSend(v1, "viewControllerForColumn:", 2);
    if (v6)
    {
      v7 = v6;
      ObjectType = swift_getObjectType();
      if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for MiniPlayerHostingViewController))
        v4 = v7;
      else
        v4 = 0;
      if (!v4)

    }
    else
    {
      return 0;
    }
  }
  else
  {
    v2 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_rootTabBarController];
    v3 = swift_getObjectType();
    if (swift_conformsToProtocol2(v3, &protocol descriptor for MiniPlayerHostingViewController))
      v4 = v2;
    else
      v4 = 0;
    if (v4)
      v5 = v2;
  }
  return v4;
}

void sub_159510(id a1)
{
  void *v1;
  id v3;
  uint64_t ObjectType;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  void *v8;
  id v9;
  void (*v10)(void);
  id v11;

  v3 = objc_msgSend(v1, "viewControllerForColumn:", 2);
  if (!v3)
    goto LABEL_12;
  v11 = v3;
  ObjectType = swift_getObjectType();
  v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HostingViewController);
  v6 = v5 == 0;
  if (v5)
    v7 = v5;
  else
    v7 = 0;
  v8 = v11;
  if (v6)
    v9 = 0;
  else
    v9 = v11;
  if (!v9)
  {
LABEL_11:

LABEL_12:
    v8 = a1;
    goto LABEL_13;
  }
  if (a1)
  {
    swift_getObjectType();
    v10 = *(void (**)(void))(v7 + 16);
    a1 = a1;
    v10();
    v8 = v11;
    goto LABEL_11;
  }
LABEL_13:

}

void (*sub_1595C0(_QWORD *a1))(void **a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  a1[1] = v1;
  v3 = objc_msgSend(v1, "viewControllerForColumn:", 2);
  if (v3)
  {
    v4 = v3;
    ObjectType = swift_getObjectType();
    v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HostingViewController);
    if (v6)
      v7 = v6;
    else
      v7 = 0;
    if (v6)
      v8 = v4;
    else
      v8 = 0;
    if (!v8)
    {

      goto LABEL_12;
    }
    v9 = swift_getObjectType();
    v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v9, v7);

    v11 = type metadata accessor for FlowNavigationController();
    v3 = (id)swift_dynamicCastClass(v10, v11);
    if (!v3)
    {

LABEL_12:
      v3 = 0;
    }
  }
  *a1 = v3;
  return sub_159680;
}

void sub_159680(void **a1, char a2)
{
  void *v2;
  void *v3;
  id v5;
  id v6;
  void *v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (*v12)(void);
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  void *v19;
  id v20;
  void (*v21)(void);
  id v22;
  id v23;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    v6 = objc_msgSend(v2, "viewControllerForColumn:", 2);
    if (!v6)
    {

      goto LABEL_26;
    }
    v7 = v6;
    ObjectType = swift_getObjectType();
    v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HostingViewController);
    if (v9)
      v10 = v9;
    else
      v10 = 0;
    if (v9)
      v11 = v7;
    else
      v11 = 0;
    if (v11)
    {
      if (v3)
      {
        swift_getObjectType();
        v12 = *(void (**)(void))(v10 + 16);
        v13 = v5;
        v12();

        v3 = *a1;
LABEL_26:
        v19 = v3;
        goto LABEL_27;
      }
    }
    else
    {

    }
    goto LABEL_26;
  }
  v14 = objc_msgSend(a1[1], "viewControllerForColumn:", 2);
  if (!v14)
    goto LABEL_26;
  v23 = v14;
  v15 = swift_getObjectType();
  v16 = swift_conformsToProtocol2(v15, &protocol descriptor for HostingViewController);
  v17 = v16 == 0;
  if (v16)
    v18 = v16;
  else
    v18 = 0;
  v19 = v23;
  if (v17)
    v20 = 0;
  else
    v20 = v23;
  if (!v20)
  {

    goto LABEL_26;
  }
  if (v3)
  {
    swift_getObjectType();
    v21 = *(void (**)(void))(v18 + 16);
    v22 = v3;
    v21();

    v19 = v23;
  }
LABEL_27:

}

void sub_1597E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  id v8;
  id v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  _QWORD v20[5];
  _BYTE v21[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_destinations);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_destinations, v21, 0, 0);
  v5 = *v4;
  if (*(_QWORD *)(*v4 + 16))
  {
    sub_3D600(a1);
    swift_bridgeObjectRetain(v5);
    v6 = sub_36F2C(a1);
    if ((v7 & 1) != 0)
    {
      *(id *)(*(_QWORD *)(v5 + 56) + 8 * v6);
      swift_bridgeObjectRelease(v5);
      sub_7C28(a1);
      return;
    }
    swift_bridgeObjectRelease(v5);
    sub_7C28(a1);
  }
  v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FlowNavigationController()), "init");
  swift_beginAccess(v4, v20, 33, 0);
  sub_3D600(a1);
  v9 = v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
  v19[0] = *v4;
  *v4 = 0x8000000000000000;
  sub_15F320((uint64_t)v9, a1, isUniquelyReferenced_nonNull_native);
  v11 = *v4;
  *v4 = v19[0];
  swift_bridgeObjectRelease(v11);
  sub_7C28(a1);
  swift_endAccess(v20);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_objectGraph);
  if (v12)
  {
    v13 = type metadata accessor for NavigationFlowController(0);
    v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
    *(_BYTE *)(v14 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_pushDisabledForTests) = 0;
    swift_unknownObjectUnownedInit(v14 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController, v9, v15);
    v16 = (char *)v9;
    swift_retain(v12);
    v17 = sub_8CBF0((uint64_t)v16, v12);

    swift_release(v12);
    v20[3] = v13;
    v20[4] = &protocol witness table for BaseFlowController;
    v20[0] = v17;
    v18 = (uint64_t)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController];
    swift_beginAccess(&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController], v19, 33, 0);
    sub_91F74((uint64_t)v20, v18);
    swift_endAccess(v19);
  }
  else
  {
    __break(1u);
  }
}

void sub_1599F8(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char v12[24];

  v2 = v1;
  v3 = a1;
  v4 = objc_msgSend(v1, "viewControllerForColumn:", 2);
  if (v4)
  {
    v5 = v4;
    ObjectType = swift_getObjectType();
    v7 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HostingViewController);
    if (v7)
      v8 = v7;
    else
      v8 = 0;
    if (v7)
      v9 = v5;
    else
      v9 = 0;
    if (v9)
    {
      v10 = swift_getObjectType();
      (*(void (**)(id, uint64_t, uint64_t))(v8 + 16))(v3, v10, v8);
    }

  }
  v11 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_isShowingTransientController];
  swift_beginAccess(v11, v12, 1, 0);
  *v11 = 1;
}

char *sub_159AD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, _QWORD, __n128);
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  char *result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, _QWORD, __n128);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  Class v48;
  char *v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  void *v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  Class isa;
  uint64_t v60;
  char v61[40];
  uint64_t v62;
  unsigned __int8 v63[24];
  _QWORD v64[3];
  char v65[24];
  _QWORD v66[3];
  uint64_t v67;
  _UNKNOWN **v68;

  v2 = v1;
  if ((static NavigationTab.== infix(_:_:)(a1, 13) & 1) != 0)
    return sub_15A13C();
  v5 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController, v65, 0, 0);
  sub_D184(v5, (uint64_t)v66, &qword_3D31A0);
  if (!v67)
  {
    sub_D1D4((uint64_t)v66, &qword_3D31A0);
    return 0;
  }
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  v7 = type metadata accessor for ParentFlowController(0);
  if ((swift_dynamicCast(v64, v66, v6, v7, 6) & 1) == 0)
    return 0;
  v8 = v64[0];
  v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_destinations);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_destinations, v64, 0, 0);
  v10 = *v9;
  if (*(_QWORD *)(*v9 + 16))
  {
    sub_3D600(a1);
    swift_bridgeObjectRetain(v10);
    v11 = sub_36F2C(a1);
    if ((v12 & 1) != 0)
    {
      v4 = (char *)*(id *)(*(_QWORD *)(v10 + 56) + 8 * v11);
      swift_bridgeObjectRelease(v10);
      sub_7C28(a1);
      v13 = objc_msgSend(v4, "viewControllers");
      v14 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
      v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

      if ((unint64_t)v15 >> 62)
      {
        if (v15 < 0)
          v60 = v15;
        else
          v60 = v15 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v15);
        v16 = _CocoaArrayWrapper.endIndex.getter(v60);
        swift_bridgeObjectRelease(v15);
      }
      else
      {
        v16 = *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
      }
      swift_bridgeObjectRelease(v15);
      if (!v16)
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D78);
        inited = swift_initStackObject(v17, v61);
        *(_OWORD *)(inited + 16) = xmmword_2F03C0;
        v19 = v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator;
        swift_beginAccess(v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator, v66, 0, 0);
        v20 = *(uint64_t (**)(uint64_t, _QWORD, __n128))v19;
        if (*(_QWORD *)v19)
        {
          v21 = *(_QWORD *)(v19 + 8);
          KeyPath = swift_getKeyPath(&unk_2FA100);
          v23 = swift_getKeyPath(&unk_2FA128);
          v24 = v4;
          sub_2C690((uint64_t)v20, v21);
          static Published.subscript.getter(v63, v2, KeyPath, v23);
          swift_release(KeyPath);
          v25 = swift_release(v23);
          v26 = v20(a1, v63[0], v25);
          v27 = (char *)sub_1D618((uint64_t)v20, v21);
        }
        else
        {
          v27 = v4;
          v26 = 0;
        }
        *(_QWORD *)(inited + 32) = v26;
        *(_QWORD *)v63 = inited;
        specialized Array._endMutation()(v27);
        v52 = *(_QWORD *)v63;
        v53 = _swiftEmptyArrayStorage;
        *(_QWORD *)v63 = _swiftEmptyArrayStorage;
        v54 = *(void **)(v52 + 32);
        if (v54)
        {
          v55 = v54;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
          v57 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v63 & 0xFFFFFFFFFFFFFF8));
          v56 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v63 & 0xFFFFFFFFFFFFFF8));
          if (v57 >= v56 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
          v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
          specialized Array._endMutation()(v58);
          v53 = *(_QWORD **)v63;
        }
        swift_bridgeObjectRelease(v52);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v4, "setViewControllers:", isa, swift_bridgeObjectRelease(v53).n128_f64[0]);

      }
      goto LABEL_27;
    }
    swift_bridgeObjectRelease(v10);
    sub_7C28(a1);
  }
  v28 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FlowNavigationController()), "init");
  v29 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  result = (char *)static UITraitCollection.interfaceIdiomIsMac.getter(v29);
  if ((result & 1) != 0)
    result = (char *)objc_msgSend(v28, "setNavigationBarHidden:animated:", 1, 0);
  v31 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_objectGraph);
  if (v31)
  {
    v32 = type metadata accessor for NavigationFlowController(0);
    v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
    *(_BYTE *)(v33 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_pushDisabledForTests) = 0;
    swift_unknownObjectUnownedInit(v33 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController, v28, v34);
    v4 = (char *)v28;
    swift_retain(v31);
    v35 = sub_8CBF0((uint64_t)v4, v31);

    swift_release(v31);
    v67 = v32;
    v68 = &protocol witness table for BaseFlowController;
    v66[0] = v35;
    v36 = (uint64_t)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController];
    swift_beginAccess(&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController], v63, 33, 0);
    sub_91F74((uint64_t)v66, v36);
    swift_endAccess(v63);
    v37 = v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator;
    swift_beginAccess(v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_viewControllerGenerator, v66, 0, 0);
    v38 = *(uint64_t (**)(uint64_t, _QWORD, __n128))v37;
    if (*(_QWORD *)v37)
    {
      v39 = *(_QWORD *)(v37 + 8);
      v40 = swift_getKeyPath(&unk_2FA100);
      v41 = swift_getKeyPath(&unk_2FA128);
      swift_retain(v39);
      static Published.subscript.getter(v63, v2, v40, v41);
      swift_release(v40);
      v42 = swift_release(v41);
      v43 = (void *)v38(a1, v63[0], v42);
      sub_1D618((uint64_t)v38, v39);
      if (v43)
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
        v45 = swift_allocObject(v44, 40, 7);
        *(_OWORD *)(v45 + 16) = xmmword_2F11D0;
        *(_QWORD *)(v45 + 32) = v43;
        *(_QWORD *)v63 = v45;
        specialized Array._endMutation()(v45);
        v46 = *(_QWORD *)v63;
        sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
        v47 = v43;
        v48 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v4, "setViewControllers:animated:", v48, 0, swift_bridgeObjectRelease(v46).n128_f64[0]);

        swift_beginAccess(v9, v63, 33, 0);
        sub_3D600(a1);
        v49 = v4;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
        v62 = *v9;
        *v9 = 0x8000000000000000;
        sub_15F320((uint64_t)v49, a1, isUniquelyReferenced_nonNull_native);
        v51 = *v9;
        *v9 = v62;
        swift_bridgeObjectRelease(v51);
        sub_7C28(a1);
        swift_endAccess(v63);
        swift_release(v8);

        return v4;
      }
    }
LABEL_27:
    swift_release(v8);
    return v4;
  }
  __break(1u);
  return result;
}

char *sub_15A13C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController____lazy_storage___loadingViewController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController____lazy_storage___loadingViewController);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController____lazy_storage___loadingViewController);
  }
  else
  {
    v4 = sub_15A19C(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_15A19C(uint64_t a1)
{
  char *result;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  _QWORD v12[5];

  result = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FlowNavigationController()), "init");
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_objectGraph);
  if (v3)
  {
    v4 = result;
    v5 = type metadata accessor for NavigationFlowController(0);
    v6 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    *(_BYTE *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_pushDisabledForTests) = 0;
    swift_unknownObjectUnownedInit(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController, v4, v7);
    swift_retain(v3);
    v8 = v4;
    v9 = sub_8CBF0((uint64_t)v8, v3);

    swift_release(v3);
    v12[3] = v5;
    v12[4] = &protocol witness table for BaseFlowController;
    v12[0] = v9;
    v10 = (uint64_t)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController];
    swift_beginAccess(&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController], v11, 33, 0);
    sub_91F74((uint64_t)v12, v10);
    swift_endAccess(v11);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_15A2BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE v6[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_destinations);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_destinations, v6, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v2);
  v4 = sub_15B3A4(v3);
  swift_bridgeObjectRelease(v2);
  return v4;
}

void sub_15A31C(uint64_t a1, char a2)
{
  char *v2;
  char *v3;
  char *v6;
  char *v7;
  char *v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(void);
  char *v14;
  void *v15;
  id v16;
  char *v17;
  char v18[24];

  v3 = v2;
  v6 = sub_159AD0(a1);
  v7 = (char *)objc_msgSend(v3, "viewControllerForColumn:", 2);
  if (!v7)
    goto LABEL_12;
  v8 = v7;
  ObjectType = swift_getObjectType();
  v10 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HostingViewController);
  if (v10)
    v11 = v10;
  else
    v11 = 0;
  if (v10)
    v12 = v8;
  else
    v12 = 0;
  if (!v12)
  {

LABEL_12:
    v8 = v6;
    goto LABEL_13;
  }
  if (v6)
  {
    swift_getObjectType();
    v13 = *(void (**)(void))(v11 + 16);
    v14 = v6;
    v13();

    v8 = v14;
  }
LABEL_13:

  v15 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_menuController];
  if (v15)
  {
    v16 = v15;
    SidebarMenuController.selectTab(_:userInitiated:)(a1, a2 & 1);

    v17 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_isShowingTransientController];
    swift_beginAccess(v17, v18, 1, 0);
    *v17 = 0;
  }
  else
  {
    __break(1u);
  }
}

double sub_15A448(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  BOOL v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];
  _QWORD v13[5];

  v13[3] = type metadata accessor for ParentFlowController(0);
  v13[4] = &protocol witness table for BaseFlowController;
  v13[0] = a1;
  v3 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController], v12, 33, 0);
  swift_retain(a1);
  sub_91F74((uint64_t)v13, v3);
  v4 = objc_msgSend(v1, "traitCollection", swift_endAccess(v12).n128_f64[0]);
  v5 = (char *)objc_msgSend(v4, "horizontalSizeClass");

  v6 = v5 != (_BYTE *)&dword_0 + 1;
  KeyPath = swift_getKeyPath(&unk_2FA100);
  v8 = swift_getKeyPath(&unk_2FA128);
  static Published.subscript.getter(v13, v1, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  LOBYTE(KeyPath) = v13[0];
  v9 = swift_getKeyPath(&unk_2FA100);
  v10 = swift_getKeyPath(&unk_2FA128);
  LOBYTE(v13[0]) = v6;
  static Published.subscript.setter(v13, v1, v9, v10);
  return sub_15872C(KeyPath);
}

id sub_15A598(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  NSString v13;
  void *v14;
  id v15;
  _BYTE v17[40];

  v2 = v1;
  v4 = objc_allocWithZone((Class)type metadata accessor for SidebarMenuController(0));
  swift_retain(a1);
  v6 = sub_194614(v5);
  swift_release(a1);
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = v6;
  v9 = objc_msgSend(v7, "mainBundle");
  NSBundle.displayName.getter();
  v11 = v10;

  if (v11)
  {
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v8, "setTitle:", v13, v12);

  sub_D184((uint64_t)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_searchSuggestionsController], (uint64_t)v17, &qword_3D8CC8);
  SidebarMenuController.searchSuggestionsController.setter((uint64_t)v17);
  v14 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_menuController];
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_menuController] = v8;
  v15 = v8;

  objc_msgSend(v2, "setViewController:forColumn:", v15, 0);
  return v15;
}

uint64_t NSBundle.displayName.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v1 = objc_msgSend(v0, "localizedInfoDictionary");
  if (!v1)
  {
    v8 = 0u;
    v9 = 0u;
    goto LABEL_11;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v3 + 16) || (v4 = sub_36BA4(0xD000000000000013, 0x8000000000310D40), (v5 & 1) == 0))
  {
    v8 = 0u;
    v9 = 0u;
    swift_bridgeObjectRelease(v3);
    goto LABEL_11;
  }
  sub_1D66C(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_11:
    sub_D1D4((uint64_t)&v8, &qword_3D1A70);
    return 0;
  }
  if (swift_dynamicCast(&v7, &v8, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    return v7;
  else
    return 0;
}

double sub_15A820(id a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  double result;
  id v8;
  char v9;
  char v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v2 = v1;
  if (a1)
    v4 = objc_msgSend(a1, "horizontalSizeClass");
  else
    v4 = 0;
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = objc_msgSend(v5, "horizontalSizeClass");

  if (!a1 || v4 != v6)
  {
    v8 = objc_msgSend(v2, "traitCollection");
    v9 = UITraitCollection.interfaceMode.getter();

    v10 = v9 & 1;
    KeyPath = swift_getKeyPath(&unk_2FA100);
    v12 = swift_getKeyPath(&unk_2FA128);
    static Published.subscript.getter(&v16, v2, KeyPath, v12);
    swift_release(KeyPath);
    swift_release(v12);
    LOBYTE(KeyPath) = v16;
    v13 = swift_getKeyPath(&unk_2FA100);
    v14 = swift_getKeyPath(&unk_2FA128);
    v15 = v10;
    static Published.subscript.setter(&v15, v2, v13, v14);
    return sub_15872C(KeyPath);
  }
  return result;
}

void RootSplitViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.RootSplitViewController", 47, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id DebugSettingsViewController.__allocating_init(style:)(uint64_t a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), "initWithStyle:", a1);
}

void RootSplitViewController.init(style:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.RootSplitViewController", 47, "init(style:)", 12, 0);
  __break(1u);
}

id RootSplitViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RootSplitViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void (*sub_15ABBC(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1595C0(v2);
  return sub_919A8;
}

void (*sub_15AC08(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1584AC(v2);
  return sub_919A8;
}

void RootSplitViewController.perform(searchAction:sender:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  uint64_t v10;
  double v11;
  id v12;
  void *v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  NSObject *v39;
  uint64_t v40;
  id v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_2FA100);
  v10 = swift_getKeyPath(&unk_2FA128);
  static Published.subscript.getter(v45, v2, KeyPath, v10);
  swift_release(KeyPath);
  *(_QWORD *)&v11 = swift_release(v10).n128_u64[0];
  if ((v45[0] & 1) != 0)
  {
    v12 = objc_msgSend(v2, "viewControllerForColumn:", 2, v11);
    if (!v12)
      return;
    v13 = v12;
    ObjectType = swift_getObjectType();
    v15 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HostingViewController);
    if (v15)
      v16 = v15;
    else
      v16 = 0;
    if (v15)
      v17 = v13;
    else
      v17 = 0;
    if (!v17)
    {

      return;
    }
    v18 = swift_getObjectType();
    v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v18, v16);

  }
  else
  {
    v20 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_rootTabBarController], "selectedViewController", v11);
    if (!v20)
      return;
    v19 = v20;
  }
  v21 = type metadata accessor for FlowNavigationController();
  v22 = swift_dynamicCastClass(v19, v21);
  if (v22)
  {
    v23 = v22;
    v24 = v19;
    v25 = -[NSObject visibleViewController](v23, "visibleViewController");
    if (v25
      && (v41 = v25,
          v26 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr),
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8CD8),
          (swift_dynamicCast(&v42, &v41, v26, v27, 6) & 1) != 0))
    {
      if (*((_QWORD *)&v43 + 1))
      {
        sub_1B738(&v42, (uint64_t)v45);
LABEL_23:
        v32 = v46;
        v33 = v47;
        __swift_project_boxed_opaque_existential_1(v45, v46);
        dispatch thunk of SearchPerforming.perform(searchAction:sender:)(a1, a2, v32, v33);

        __swift_destroy_boxed_opaque_existential_0(v45);
        return;
      }
    }
    else
    {
      v44 = 0;
      v42 = 0u;
      v43 = 0u;
    }
    sub_D1D4((uint64_t)&v42, &qword_3D8CD0);
    v28 = -[NSObject bottomViewController](v23, "bottomViewController");
    if (v28
      && (v41 = v28,
          v29 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr),
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8CD8),
          (swift_dynamicCast(&v42, &v41, v29, v30, 6) & 1) != 0))
    {
      if (*((_QWORD *)&v43 + 1))
      {
        sub_1B738(&v42, (uint64_t)v45);
        v31 = (unint64_t)FlowNavigationController.popToRootViewController(animated:)(1);
        swift_bridgeObjectRelease(v31);
        goto LABEL_23;
      }
    }
    else
    {
      v44 = 0;
      v42 = 0u;
      v43 = 0u;
    }
    v34 = sub_D1D4((uint64_t)&v42, &qword_3D8CD0);
    v35 = static Logger.ui.getter(v34);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_0, v36, v37, "Search actions may only be performed while the SearchViewController is visible.", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
      v39 = v23;
    }
    else
    {
      v39 = v36;
      v36 = v23;
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {

  }
}

void sub_15AFE4(uint64_t a1, uint64_t a2)
{
  RootSplitViewController.perform(searchAction:sender:)(a1, a2);
}

Swift::Void __swiftcall RootSplitViewController.makeSearchFieldFirstResponder()()
{
  uint64_t v0;
  char *v1;
  void **v2;
  void *v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17[24];

  v1 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_menuController);
  if (!v1)
    goto LABEL_21;
  v2 = (void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView], v17, 0, 0);
  v3 = *v2;
  if (!*v2)
    return;
  v4 = v1;
  v5 = objc_msgSend(v3, "visibleSupplementaryViewsOfKind:", UICollectionElementKindSectionHeader);
  v6 = sub_E710(0, &qword_3D8CE8, UICollectionReusableView_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_5;
LABEL_17:

    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 < 0)
    v15 = v7;
  else
    v15 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v16 = _CocoaArrayWrapper.endIndex.getter(v15);
  swift_bridgeObjectRelease(v7);
  if (!v16)
    goto LABEL_17;
LABEL_5:
  if ((v7 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
    {
      v8 = *(id *)(v7 + 32);
      goto LABEL_8;
    }
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
LABEL_8:
  v9 = v8;
  swift_bridgeObjectRelease(v7);
  v10 = type metadata accessor for SearchFieldHeaderView();
  v11 = swift_dynamicCastClass(v9, v10);
  if (v11)
  {
    v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchFieldHeaderView_contentView);
    if (v12)
    {
      v13 = objc_opt_self(UIControl);
      v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
      if (v14)
        objc_msgSend(v14, "becomeFirstResponder");
    }
  }

}

void sub_15B1B0()
{
  RootSplitViewController.makeSearchFieldFirstResponder()();
}

_QWORD *sub_15B1D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51F0);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = _swift_stdlib_malloc_size_0(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_1620C8((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_F9918(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_15B2B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  size_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D48);
  v4 = (_QWORD *)swift_allocObject(v3, 40 * v1 + 32, 7);
  v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = v1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 40);
  v6 = sub_1622C4(&v9, (uint64_t)(v4 + 4), v1, a1);
  v7 = v9;
  swift_bridgeObjectRetain(a1);
  sub_F9918(v7);
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_15B3A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v4 = (_QWORD *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = _swift_stdlib_malloc_size_0(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = (2 * (v6 >> 3)) | 1;
  v7 = sub_1624EC(&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_F9918(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_15B48C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 8 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D80);
  v10 = (_QWORD *)swift_allocObject(v9, v8 + 32, 7);
  v11 = _swift_stdlib_malloc_size_0(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 25;
  v10[2] = v5;
  v10[3] = 2 * (v12 >> 3);
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = v10 + 4;
  v14 = a2 + 8 * a3;
  if (v14 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)v13 >= v14 + v8)
  {
    swift_arrayInitWithCopy(v13);
    return v10;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t *sub_15B5FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D80);
  v4 = (uint64_t *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = _swift_stdlib_malloc_size_0(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 3);
  v7 = sub_1626E4((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_F9918(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

void sub_15B6E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D55B0);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_bridgeObjectRetain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_15B9F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5570);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1D65C(v24, v38);
      }
      else
      {
        sub_1D66C((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain(v22);
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_1D65C(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_15BCF0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];
  _OWORD v41[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5520);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_25;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v17 >= v37)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v38 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v37)
        goto LABEL_37;
      v19 = *(_QWORD *)(v38 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v37)
        {
LABEL_37:
          swift_release(v5);
          if ((v39 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v19 = *(_QWORD *)(v38 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_46;
            if (v13 >= v37)
              goto LABEL_37;
            v19 = *(_QWORD *)(v38 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_24;
          }
        }
        v13 = v20;
      }
    }
LABEL_24:
    v11 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_25:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v39 & 1) != 0)
    {
      sub_1D65C(v22, v41);
    }
    else
    {
      sub_1D66C((uint64_t)v22, (uint64_t)v41);
      v23 = v21;
    }
    v24 = *(_QWORD *)(v8 + 40);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v27 = v26;
    Hasher.init(_seed:)(v40, v24);
    String.hash(into:)(v40, v25, v27);
    v28 = Hasher._finalize()();
    swift_bridgeObjectRelease(v27);
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v21;
    sub_1D65C(v41, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v18 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v18, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_15C028(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  char v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D40);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v34[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v34[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((v33 & 1) == 0)
              {
                swift_release(v5);
                v3 = v32;
                goto LABEL_41;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v9 >= v13)
                  goto LABEL_34;
                v19 = v34[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v17);
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v17);
      Hasher.init(_seed:)(v35, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v21);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v15) = v21;
      *(_BYTE *)(*(_QWORD *)(v8 + 56) + v15) = v22;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_15C2EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  char v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5530);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v3;
  v35 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_34;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v12)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v35 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v12)
        goto LABEL_36;
      v24 = *(_QWORD *)(v35 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v34;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v24 = *(_QWORD *)(v35 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v14 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_34:
    v30 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
    v31 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v21);
    if ((a2 & 1) == 0)
      v32 = v30;
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v18 == v27;
        if (v18 == v27)
          v18 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v29 == -1);
      v19 = __clz(__rbit64(~v29)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19) = v30;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v19) = v31;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v34;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_15C5B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[4];
  int v49;
  uint64_t *v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;

  v3 = v2;
  v6 = type metadata accessor for ShelfCellHeight(0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  __chkstk_darwin(v6);
  v56 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v55 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = &v48[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v12 = a1;
  else
    v12 = *(_QWORD *)(*v3 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D88);
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v11, v12, a2);
  v14 = v13;
  if (!*(_QWORD *)(v11 + 16))
  {
    v45 = v11;
LABEL_45:
    swift_release(v45);
    *v3 = v14;
    return;
  }
  v15 = 1 << *(_BYTE *)(v11 + 32);
  v16 = *(_QWORD *)(v11 + 64);
  v52 = (_QWORD *)(v11 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v50 = v3;
  v51 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  v54 = v11;
  v20 = swift_retain(v11);
  v21 = 0;
  v49 = a2;
  v22 = 16;
  if ((a2 & 1) != 0)
    v22 = 32;
  v53 = v22;
  v23 = v22;
  while (1)
  {
    if (v18)
    {
      v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v26 = v25 | (v21 << 6);
      goto LABEL_27;
    }
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v27 >= v51)
    {
      v46 = v54;
      swift_release(v54);
      v3 = v50;
      v28 = v52;
      if ((v49 & 1) != 0)
      {
LABEL_40:
        v47 = 1 << *(_BYTE *)(v46 + 32);
        if (v47 >= 64)
          bzero(v28, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v28 = -1 << v47;
        *(_QWORD *)(v46 + 16) = 0;
      }
LABEL_44:
      v45 = v46;
      goto LABEL_45;
    }
    v28 = v52;
    v29 = v52[v27];
    ++v21;
    if (!v29)
    {
      v21 = v27 + 1;
      if (v27 + 1 >= v51)
        goto LABEL_37;
      v29 = v52[v21];
      if (!v29)
        break;
    }
LABEL_26:
    v18 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v21 << 6);
LABEL_27:
    v31 = v54;
    v32 = *(_QWORD *)(v55 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t, __n128))(v55 + v23))(v10, *(_QWORD *)(v54 + 48) + v32 * v26, v8, v20);
    v33 = *(_QWORD *)(v31 + 56);
    v34 = *(_QWORD *)(v57 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v57 + v23))(v56, v33 + v34 * v26, v58);
    v35 = *(_QWORD *)(v14 + 40);
    v36 = sub_89A0(&qword_3D1D88, (uint64_t (*)(uint64_t))&type metadata accessor for ModernShelf.ItemPresentation, (uint64_t)&protocol conformance descriptor for ModernShelf.ItemPresentation);
    v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v8, v36);
    v38 = -1 << *(_BYTE *)(v14 + 32);
    v39 = v37 & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v19 + 8 * v40);
      }
      while (v44 == -1);
      v24 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v19 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v55 + 32))(*(_QWORD *)(v14 + 48) + v32 * v24, v10, v8);
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v57 + 32))(*(_QWORD *)(v14 + 56) + v34 * v24, v56, v58);
    ++*(_QWORD *)(v14 + 16);
  }
  v30 = v27 + 2;
  if (v30 >= v51)
  {
LABEL_37:
    v46 = v54;
    swift_release(v54);
    v3 = v50;
    if ((v49 & 1) != 0)
      goto LABEL_40;
    goto LABEL_44;
  }
  v29 = v52[v30];
  if (v29)
  {
    v21 = v30;
    goto LABEL_26;
  }
  while (1)
  {
    v21 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v21 >= v51)
      goto LABEL_37;
    v29 = v52[v21];
    ++v30;
    if (v29)
      goto LABEL_26;
  }
LABEL_47:
  __break(1u);
}

void sub_15C9A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  _QWORD v45[9];

  v3 = v2;
  v6 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
  v43 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D55C0);
  v44 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v42 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v3;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_36;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_36:
          swift_release(v9);
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v17 >= v41)
              goto LABEL_36;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_23;
          }
        }
        v17 = v25;
      }
    }
LABEL_23:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_24:
    v26 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v43 + 72);
    v30 = *(_QWORD *)(v9 + 56) + v29 * v21;
    if ((v44 & 1) != 0)
    {
      sub_1B79C(v30, (uint64_t)v8, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
    }
    else
    {
      sub_19C4C(v30, (uint64_t)v8, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
      swift_bridgeObjectRetain(v27);
    }
    Hasher.init(_seed:)(v45, *(_QWORD *)(v11 + 40));
    String.hash(into:)(v45, v28, v27);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    sub_1B79C((uint64_t)v8, *(_QWORD *)(v11 + 56) + v29 * v18, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v9 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release(v9);
  *v3 = v11;
}

void sub_15CD28(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D62C0);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v31[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v33, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_15D02C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5558);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(void **)(*(_QWORD *)(v5 + 56) + v31);
    if ((v38 & 1) == 0)
    {
      sub_3D600(v32);
      v34 = v33;
    }
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    NavigationTab.hash(into:)(v39, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_15D328(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5560);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v3;
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v36 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v36 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v36 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v36 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((v37 & 1) == 0)
    {
      sub_3D600(v32);
      sub_3D600(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    NavigationTab.hash(into:)(v38, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v24 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v24, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_15D628(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int64_t v40;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D58);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v39 = a2;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v37 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v38 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v19 >= v40)
          goto LABEL_34;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v40)
            goto LABEL_34;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v40)
            {
LABEL_34:
              if ((v39 & 1) != 0)
              {
                if (v38 >= 64)
                  bzero((void *)(v5 + 64), 8 * v40);
                else
                  *v10 = v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v9 >= v40)
                  goto LABEL_34;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v9 = v21;
          }
        }
LABEL_24:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v23 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 40 * v18);
      v24 = v23[4];
      v26 = v23[2];
      v25 = v23[3];
      v28 = *v23;
      v27 = v23[1];
      v29 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v22);
      v30 = -1 << *(_BYTE *)(v8 + 32);
      v31 = v29 & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v14 + 8 * v32);
        }
        while (v36 == -1);
        v15 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v15) = v22;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 40 * v15);
      *v16 = v28;
      v16[1] = v27;
      v16[2] = v26;
      v16[3] = v25;
      v16[4] = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_15D8F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int64_t v37;
  __int128 v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D60);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = a2;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v35 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v19 >= v37)
          goto LABEL_34;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v37)
            goto LABEL_34;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v37)
            {
LABEL_34:
              if ((v36 & 1) != 0)
              {
                if (v35 >= 64)
                  bzero((void *)(v5 + 64), 8 * v37);
                else
                  *v10 = v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v9 >= v37)
                  goto LABEL_34;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v9 = v21;
          }
        }
LABEL_24:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v23 = *(_QWORD *)(v5 + 56) + 48 * v18;
      v24 = *(_QWORD *)(v23 + 40);
      v25 = *(_QWORD *)(v23 + 32);
      v38 = *(_OWORD *)v23;
      v39 = *(_OWORD *)(v23 + 16);
      v26 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v22);
      v27 = -1 << *(_BYTE *)(v8 + 32);
      v28 = v26 & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v14 + 8 * (v28 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v14 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v14 + 8 * v29);
        }
        while (v33 == -1);
        v15 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v15) = v22;
      v16 = *(_QWORD *)(v8 + 56) + 48 * v15;
      *(_OWORD *)v16 = v38;
      *(_OWORD *)(v16 + 16) = v39;
      *(_QWORD *)(v16 + 32) = v25;
      *(_QWORD *)(v16 + 40) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_15DBD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  _QWORD v45[9];

  v3 = v2;
  v6 = type metadata accessor for UberScrollConfiguration(0);
  v43 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5540);
  v44 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v42 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v3;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v21 >= v41)
      break;
    v22 = v42;
    v23 = v42[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v41)
        goto LABEL_36;
      v23 = v42[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v41)
        {
LABEL_36:
          swift_release(v9);
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v23 = v42[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_45;
            if (v17 >= v41)
              goto LABEL_36;
            v23 = v42[v17];
            ++v24;
            if (v23)
              goto LABEL_23;
          }
        }
        v17 = v24;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 48) + v20);
    v26 = *(_QWORD *)(v43 + 72);
    v27 = *(_QWORD *)(v9 + 56) + v26 * v20;
    if ((v44 & 1) != 0)
      sub_1B79C(v27, (uint64_t)v8, type metadata accessor for UberScrollConfiguration);
    else
      sub_19C4C(v27, (uint64_t)v8, type metadata accessor for UberScrollConfiguration);
    Hasher.init(_seed:)(v45, *(_QWORD *)(v11 + 40));
    v28 = UberStyle.rawValue.getter(v25);
    v30 = v29;
    String.hash(into:)(v45, v28, v29);
    swift_bridgeObjectRelease(v30);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_BYTE *)(*(_QWORD *)(v11 + 48) + v18) = v25;
    sub_1B79C((uint64_t)v8, *(_QWORD *)(v11 + 56) + v26 * v18, type metadata accessor for UberScrollConfiguration);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v40;
  v22 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v9 + 32);
  if (v39 >= 64)
    bzero(v22, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v39;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release(v9);
  *v3 = v11;
}

void sub_15DF54(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D68);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    v35 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v21 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v22 = v21 | (v9 << 6);
      }
      else
      {
        v23 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v23 >= v36)
          goto LABEL_36;
        v24 = v10[v23];
        ++v9;
        if (!v24)
        {
          v9 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_36;
          v24 = v10[v9];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v35 >= 64)
                  bzero((void *)(v5 + 64), 8 * v36);
                else
                  *v10 = v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                v9 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_44;
                if (v9 >= v36)
                  goto LABEL_36;
                v24 = v10[v9];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v9 = v25;
          }
        }
LABEL_33:
        v13 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v9 << 6);
      }
      v30 = 8 * v22;
      v31 = *(_QWORD *)(v5 + 56);
      v32 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *(_QWORD *)(v31 + v30);
      if ((a2 & 1) == 0)
        swift_retain(*(_QWORD *)(v31 + v30));
      v15 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v32);
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_15E208(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  Swift::UInt v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D70);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v32 = v3;
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v21 >= v33)
          goto LABEL_36;
        v22 = v34[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_36;
          v22 = v34[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v32;
                goto LABEL_43;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v34[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_45;
                if (v9 >= v33)
                  goto LABEL_36;
                v22 = v34[v9];
                ++v23;
                if (v22)
                  goto LABEL_33;
              }
            }
            v9 = v23;
          }
        }
LABEL_33:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v20);
      v29 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
      if ((a2 & 1) == 0)
        v30 = v29;
      Hasher.init(_seed:)(v35, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v28);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v28;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v29;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_15E4D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::UInt64 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v3 = v2;
  v6 = type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (Swift::UInt64 *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D90);
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  if (*(_QWORD *)(v10 + 16))
  {
    v26 = v3;
    v12 = 1 << *(_BYTE *)(v10 + 32);
    v13 = (_QWORD *)(v10 + 64);
    v14 = -1;
    if (v12 < 64)
      v14 = ~(-1 << v12);
    v15 = v14 & *(_QWORD *)(v10 + 64);
    v16 = (unint64_t)(v12 + 63) >> 6;
    swift_retain(v10);
    v17 = 0;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v17 << 6);
      }
      else
      {
        v20 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          return;
        }
        if (v20 >= v16)
          goto LABEL_25;
        v21 = v13[v20];
        ++v17;
        if (!v21)
        {
          v17 = v20 + 1;
          if (v20 + 1 >= v16)
            goto LABEL_25;
          v21 = v13[v17];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v16)
            {
LABEL_25:
              swift_release(v10);
              if ((a2 & 1) == 0)
              {
                swift_release(v10);
                v3 = v26;
                goto LABEL_32;
              }
              v24 = 1 << *(_BYTE *)(v10 + 32);
              if (v24 >= 64)
                bzero((void *)(v10 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v13 = -1 << v24;
              v3 = v26;
              *(_QWORD *)(v10 + 16) = 0;
              break;
            }
            v21 = v13[v22];
            if (!v21)
            {
              while (1)
              {
                v17 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_34;
                if (v17 >= v16)
                  goto LABEL_25;
                v21 = v13[v17];
                ++v22;
                if (v21)
                  goto LABEL_22;
              }
            }
            v17 = v22;
          }
        }
LABEL_22:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v17 << 6);
      }
      v23 = *(_QWORD *)(v10 + 48) + *(_QWORD *)(v7 + 72) * v19;
      if ((a2 & 1) != 0)
        sub_1B79C(v23, (uint64_t)v9, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
      else
        sub_19C4C(v23, (uint64_t)v9, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
      sub_15FD68(v9, v11, *(double *)(*(_QWORD *)(v10 + 56) + 8 * v19));
    }
  }
  swift_release(v10);
LABEL_32:
  *v3 = v11;
}

void sub_15E718(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  char v41;
  _QWORD v42[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D50);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v40 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v39 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v24 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v25 = v24 | (v13 << 6);
      goto LABEL_34;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v26 >= v39)
      break;
    v27 = (_QWORD *)(v5 + 64);
    v28 = *(_QWORD *)(v40 + 8 * v26);
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v39)
        goto LABEL_36;
      v28 = *(_QWORD *)(v40 + 8 * v13);
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v39)
        {
LABEL_36:
          swift_release(v5);
          if ((v41 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v28 = *(_QWORD *)(v40 + 8 * v29);
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_45;
            if (v13 >= v39)
              goto LABEL_36;
            v28 = *(_QWORD *)(v40 + 8 * v13);
            ++v29;
            if (v28)
              goto LABEL_33;
          }
        }
        v13 = v29;
      }
    }
LABEL_33:
    v11 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v13 << 6);
LABEL_34:
    v34 = 8 * v25;
    v35 = *(void **)(*(_QWORD *)(v5 + 48) + v34);
    v36 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v34);
    if ((v41 & 1) == 0)
      v37 = v35;
    v14 = *(_QWORD *)(v8 + 40);
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v17 = v16;
    Hasher.init(_seed:)(v42, v14);
    String.hash(into:)(v42, v15, v17);
    v18 = Hasher._finalize()();
    swift_bridgeObjectRelease(v17);
    v19 = -1 << *(_BYTE *)(v8 + 32);
    v20 = v18 & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v32 = v21 == v31;
        if (v21 == v31)
          v21 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v33 == -1);
      v22 = __clz(__rbit64(~v33)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = 8 * v22;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v23) = v35;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v23) = v36;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v27 = (_QWORD *)(v5 + 64);
  if ((v41 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v27, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

_OWORD *sub_15EA48(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_36BA4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0(v19);
        return sub_1D65C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_160354();
      goto LABEL_7;
    }
    sub_15B9F4(v15, a4 & 1);
    v21 = sub_36BA4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_15FEAC(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

_OWORD *sub_15EB78(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _OWORD *result;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_36C54(a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_QWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_0(v16);
        return sub_1D65C(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_160538();
      goto LABEL_7;
    }
    sub_15BCF0(v12, a3 & 1);
    v18 = sub_36C54(a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_15FF14(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
  __break(1u);
  return result;
}

void sub_15EC98(char a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_36DF0(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_9:
    v18 = a1 & 1;
    v19 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
      *(_BYTE *)(v19[7] + v10) = v18;
      return;
    }
    v19[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v19[6] + v10) = a2;
    *(_BYTE *)(v19[7] + v10) = v18;
    v20 = v19[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v19[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1606FC();
    goto LABEL_9;
  }
  sub_15C028(v13, a3 & 1);
  v16 = sub_36DF0(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = v16;
    goto LABEL_9;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Neighbor);
  __break(1u);
}

id sub_15EDC0(char a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  id result;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v7 = *v3;
  v9 = sub_36E48((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  result = (id)(v10 + v11);
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= (uint64_t)result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= (uint64_t)result && (a3 & 1) == 0)
  {
    result = sub_160884();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v15[7] + v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    *(_QWORD *)(v15[6] + 8 * v9) = a2;
    *(_BYTE *)(v15[7] + v9) = a1;
    v17 = v15[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (!v18)
    {
      v15[2] = v19;
      return a2;
    }
    goto LABEL_14;
  }
  sub_15C2EC((uint64_t)result, a3 & 1);
  result = (id)sub_36E48((uint64_t)a2);
  if ((v13 & 1) == (v16 & 1))
  {
    v9 = (unint64_t)result;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v20 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
  __break(1u);
  return result;
}

uint64_t sub_15EF10(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_36E94(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for ShelfCellHeight(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_160A24();
      goto LABEL_7;
    }
    sub_15C5B0(v17, a3 & 1);
    v24 = sub_36E94(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_15FF78(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

void sub_15F098(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_36BA4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19
            + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0) - 8)
                        + 72)
            * v12;
        sub_1633B4(a1, v20);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_160D04();
      goto LABEL_7;
    }
    sub_15C9A8(v15, a4 & 1);
    v21 = sub_36BA4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_160030(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_15F1CC(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_36BA4(a1, a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_160F48();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = (uint64_t *)(v18[6] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    *(double *)(v18[7] + 8 * v12) = a4;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      swift_bridgeObjectRetain(a2);
      return;
    }
    goto LABEL_14;
  }
  sub_15CD28(v15, a3 & 1);
  v19 = sub_36BA4(a1, a2);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = v19;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_15F320(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_36F2C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1610F4();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      sub_3D600(a2);
      return;
    }
    goto LABEL_14;
  }
  sub_15D02C(v13, a3 & 1);
  v18 = sub_36F2C(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for NavigationTab);
  __break(1u);
}

uint64_t sub_15F470(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  v10 = sub_36F2C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_161298();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = sub_7C28(*(_QWORD *)(v17 + 8 * v10));
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v21 = 8 * v10;
    *(_QWORD *)(v16[6] + v21) = a2;
    *(_QWORD *)(v16[7] + v21) = a1;
    v22 = v16[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return sub_3D600(a2);
    }
    goto LABEL_14;
  }
  sub_15D328(v13, a3 & 1);
  v19 = sub_36F2C(a2);
  if ((v14 & 1) == (v20 & 1))
  {
    v10 = v19;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for NavigationTab);
  __break(1u);
  return result;
}

void sub_15F5C0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v4 = v3;
  v8 = *v3;
  v10 = sub_36F84(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_161440();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7] + 40 * v10;
      v18 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)v17 = *(_OWORD *)a1;
      *(_OWORD *)(v17 + 16) = v18;
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(a1 + 32);
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_QWORD *)(v16[6] + 8 * v10) = a2;
    v21 = v16[7] + 40 * v10;
    v22 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v21 = *(_OWORD *)a1;
    *(_OWORD *)(v21 + 16) = v22;
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(a1 + 32);
    v23 = v16[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v16[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_15D628(v13, a3 & 1);
  v19 = sub_36F84(a2);
  if ((v14 & 1) == (v20 & 1))
  {
    v10 = v19;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_15F710(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  __int128 v18;
  unint64_t v19;
  char v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v4 = v3;
  v8 = *v3;
  v10 = sub_36F84(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1615E4();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = (_OWORD *)(v16[7] + 48 * v10);
      v18 = a1[1];
      *v17 = *a1;
      v17[1] = v18;
      v17[2] = a1[2];
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_QWORD *)(v16[6] + 8 * v10) = a2;
    v21 = (_OWORD *)(v16[7] + 48 * v10);
    v22 = a1[1];
    *v21 = *a1;
    v21[1] = v22;
    v21[2] = a1[2];
    v23 = v16[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v16[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_15D8F8(v13, a3 & 1);
  v19 = sub_36F84(a2);
  if ((v14 & 1) == (v20 & 1))
  {
    v10 = v19;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_15F860(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_36F84(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1619B8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      swift_release(*(_QWORD *)(v17 + 8 * v10));
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_15DF54(v13, a3 & 1);
  v18 = sub_36F84(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_15F998(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_37058(a2 & 1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_161B58();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = v7;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_15E208(v13, a3 & 1);
  v18 = sub_37058(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for InformationView.Style);
  __break(1u);
}

void sub_15FACC(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_370B4(a1);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = v11[3];
    if (v18 >= v16 && (a2 & 1) != 0)
    {
LABEL_7:
      v19 = *v4;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        *(double *)(v19[7] + 8 * v13) = a3;
        return;
      }
      goto LABEL_11;
    }
    if (v18 >= v16 && (a2 & 1) == 0)
    {
      sub_161CF8();
      goto LABEL_7;
    }
    sub_15E4D0(v16, a2 & 1);
    v20 = sub_370B4(a1);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v19 = *v4;
      if ((v17 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_19C4C(a1, (uint64_t)v10, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
      sub_160108(v13, (uint64_t)v10, v19, a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
}

void sub_15FC1C(void *a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  id v22;
  uint64_t v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_36C54(a1);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a2 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a2 & 1) == 0)
  {
    sub_161F28();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      *(double *)(v15[7] + 8 * v9) = a3;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v18 = 8 * v9;
    *(_QWORD *)(v15[6] + v18) = a1;
    *(double *)(v15[7] + v18) = a3;
    v19 = v15[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v15[2] = v21;
      v22 = a1;
      return;
    }
    goto LABEL_14;
  }
  sub_15E718(v12, a2 & 1);
  v16 = sub_36C54(a1);
  if ((v13 & 1) == (v17 & 1))
  {
    v9 = v16;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for UIContentSizeCategory(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v23);
  __break(1u);
}

uint64_t sub_15FD68(Swift::UInt64 *a1, uint64_t a2, double a3)
{
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  uint64_t result;
  _QWORD v14[9];

  Hasher.init(_seed:)(v14, *(_QWORD *)(a2 + 40));
  if ((*a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = *a1;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  if ((a1[1] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = a1[1];
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
  v8 = type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey(0);
  v9 = type metadata accessor for DynamicTypeSize(0);
  v10 = sub_89A0((unint64_t *)&unk_3D1EB0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  dispatch thunk of Hashable.hash(into:)(v14, v9, v10);
  v11 = Hasher._finalize()();
  v12 = _HashTable.nextHole(atOrAfter:)(v11 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 64, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 64 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
  result = sub_1B79C((uint64_t)a1, *(_QWORD *)(a2 + 48) + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v12, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
  *(double *)(*(_QWORD *)(a2 + 56) + 8 * v12) = a3;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

_OWORD *sub_15FEAC(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1D65C(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_15FF14(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1D65C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_15FF78(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for ShelfCellHeight(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_160030(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
  result = sub_1B79C(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

unint64_t sub_1600C0(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_160108(unint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a3[6];
  v9 = type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey(0);
  result = sub_1B79C(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
  *(double *)(a3[7] + 8 * a1) = a4;
  v11 = a3[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a3[2] = v13;
  return result;
}

void sub_1601A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D55B0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_160354()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5570);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1D66C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1D65C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_160538()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5520);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1D66C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1D65C(v23, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    v19 = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1606FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D40);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_160884()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5530);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v17 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v16;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v17;
    result = v16;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_160A24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = type metadata accessor for ShelfCellHeight(0);
  v37 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D88);
  v33 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    swift_release(v3);
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return;
  }
  v6 = v4;
  v7 = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || v7 >= &v8[8 * v9])
  {
    memmove(v7, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    swift_release(v42);
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_160D04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D55C0);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v26 = v1;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_19C4C(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_1B79C((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
    swift_bridgeObjectRetain(v20);
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    swift_release(v5);
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_160F48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D62C0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1610F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5558);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    sub_3D600(v17);
    v19 = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_161298()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5560);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    sub_3D600(v17);
    sub_3D600(v18);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_161440()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D58);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v27 = __clz(__rbit64(v25));
    v12 = (v25 - 1) & v25;
    v15 = v27 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)(v19 + 32);
    v21 = *(_OWORD *)v19;
    v22 = *(_OWORD *)(v19 + 16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v23 = v21;
    *(_OWORD *)(v23 + 16) = v22;
    *(_QWORD *)(v23 + 32) = v20;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1615E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D60);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v28 = __clz(__rbit64(v26));
    v12 = (v26 - 1) & v26;
    v15 = v28 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 48 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)(v19 + 32);
    v21 = *(_QWORD *)(v19 + 40);
    v22 = *(_OWORD *)v19;
    v23 = *(_OWORD *)(v19 + 16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v24 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v24 = v22;
    *(_OWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 32) = v20;
    *(_QWORD *)(v24 + 40) = v21;
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_161790()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for UberScrollConfiguration(0);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5540);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v24 = v1;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v19 = *(_QWORD *)(v26 + 72) * v17;
    sub_19C4C(*(_QWORD *)(v5 + 56) + v19, (uint64_t)v4, type metadata accessor for UberScrollConfiguration);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    sub_1B79C((uint64_t)v4, *(_QWORD *)(v7 + 56) + v19, type metadata accessor for UberScrollConfiguration);
  }
  v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_26:
    swift_release(v5);
    v1 = v24;
    goto LABEL_28;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1619B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D68);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain(v17);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_161B58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D70);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    v17 = v16;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_161CF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey(0);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D90);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v25 = v1;
  v8 = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v10)
    memmove(v8, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v26 + 72) * v18;
    sub_19C4C(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20);
    sub_1B79C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    swift_release(v5);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_161F28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D8D50);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_1620C8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1622C4(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v12 = 0;
LABEL_37:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v12;
  }
  if (!a3)
  {
    v11 = 0;
    v12 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
    goto LABEL_39;
  v10 = a2;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  v24 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v15);
    sub_1D66C(*(_QWORD *)(a4 + 56) + 32 * v15, (uint64_t)&v25 + 8);
    *(_QWORD *)&v25 = v19;
    v20 = v27;
    v30 = v27;
    v21 = v26;
    v28 = v25;
    v29 = v26;
    *(_OWORD *)v10 = v25;
    *(_OWORD *)(v10 + 16) = v21;
    *(_QWORD *)(v10 + 32) = v20;
    if (v12 == a3)
    {
      v22 = v19;
      v12 = a3;
      goto LABEL_36;
    }
    v10 += 40;
    result = v19;
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_35;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v18 = v11 + 2;
      ++v11;
      if (v16 + 1 >= v13)
        goto LABEL_35;
      v17 = *(_QWORD *)(v5 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v11 = v16 + 1;
      if (v16 + 2 >= v13)
        goto LABEL_35;
      v17 = *(_QWORD *)(v5 + 8 * (v16 + 2));
      if (v17)
      {
        v16 += 2;
      }
      else
      {
        v11 = v16 + 2;
        if (v16 + 3 >= v13)
          goto LABEL_35;
        v17 = *(_QWORD *)(v5 + 8 * (v16 + 3));
        if (!v17)
        {
          v18 = v16 + 4;
          v11 = v16 + 3;
          if (v16 + 4 < v13)
          {
            v17 = *(_QWORD *)(v5 + 8 * v18);
            if (!v17)
            {
              while (1)
              {
                v16 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_40;
                if (v16 >= v13)
                {
                  v11 = v13 - 1;
                  goto LABEL_35;
                }
                v17 = *(_QWORD *)(v5 + 8 * v16);
                ++v18;
                if (v17)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v16 = v18;
            goto LABEL_21;
          }
LABEL_35:
          v8 = 0;
LABEL_36:
          v6 = v23;
          result = v24;
          goto LABEL_37;
        }
        v16 += 3;
      }
    }
LABEL_21:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

_QWORD *sub_1624EC(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1626E4(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      sub_3D600(v20);
      goto LABEL_38;
    }
    ++v11;
    result = sub_3D600(v20);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

id sub_1628DC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  double v23;
  id result;
  void *v25;
  objc_super v26;
  char v27;
  _BYTE v28[24];

  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_objectGraph;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_objectGraph] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_menuController] = 0;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_destinations;
  v12 = v5;
  *(_QWORD *)&v5[v11] = sub_D50D4((uint64_t)_swiftEmptyArrayStorage);
  v13 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_actionRunner];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_QWORD *)v14 + 4) = 0;
  v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_isShowingTransientController] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController____lazy_storage___loadingViewController] = 0;
  v15 = *(_QWORD *)&v5[v10];
  *(_QWORD *)&v5[v10] = a5;
  swift_retain(a5);
  swift_release(v15);
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_rootTabBarController] = a3;
  v16 = a3;
  v17 = objc_msgSend(v16, "traitCollection");
  LOBYTE(a5) = UITraitCollection.interfaceMode.getter();

  swift_beginAccess(&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController__interfaceMode], v28, 33, 0);
  v27 = a5 & 1;
  Published.init(initialValue:)(&v27, &type metadata for InterfaceMode);
  swift_endAccess(v28);
  sub_D184(a4, (uint64_t)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_searchSuggestionsController], &qword_3D8CC8);

  v26.receiver = v12;
  v26.super_class = (Class)type metadata accessor for RootSplitViewController(0);
  v18 = objc_msgSendSuper2(&v26, "initWithStyle:", 1);
  objc_msgSend(v18, "setPrimaryBackgroundStyle:", 1);
  v19 = objc_msgSend(v18, "traitCollection");
  LOBYTE(a5) = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((a5 & 1) == 0)
  {
LABEL_6:
    objc_msgSend(v18, "setPreferredDisplayMode:", 0);
    objc_msgSend(v18, "setDisplayModeButtonVisibility:", 0);
    objc_msgSend(v18, "setViewController:forColumn:", v16, 3);
    objc_msgSend(v18, "setViewController:forColumn:", a1, 2);

    sub_D1D4(a4, &qword_3D8CC8);
    return v18;
  }
  objc_msgSend(v18, "setMinimumPrimaryColumnWidth:", 200.0);
  objc_msgSend(v18, "setMaximumPrimaryColumnWidth:", 260.0);
  v20 = (void *)objc_opt_self(NSUserDefaults);
  v21 = v18;
  v22 = objc_msgSend(v20, "standardUserDefaults");
  v23 = NSUserDefaults.sidebarColumnWidth.getter();

  objc_msgSend(v21, "setPreferredPrimaryColumnWidth:", v23);
  result = objc_msgSend(v21, "view");
  if (result)
  {
    v25 = result;
    if (qword_3CF000 != -1)
      swift_once(&qword_3CF000, sub_E00C);
    objc_msgSend(v25, "setBackgroundColor:", qword_3D08A8);

    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RootSplitViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_3D8D28;
  if (!qword_3D8D28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RootSplitViewController);
  return result;
}

uint64_t sub_162C54(uint64_t a1)
{
  uint64_t result;

  result = sub_89A0(&qword_3D8CF0, type metadata accessor for RootSplitViewController, (uint64_t)&protocol conformance descriptor for RootSplitViewController);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

double sub_162C90@<D0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  __int128 *v3;
  __int128 v4;
  double result;
  _BYTE v6[24];

  v3 = (__int128 *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_actionRunner);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  *(_QWORD *)&result = swift_unknownObjectRetain(v4).n128_u64[0];
  return result;
}

uint64_t sub_162CEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_D184(v3, a2, &qword_3D31A0);
}

void sub_162D4C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_isShowingTransientController);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_162D9C(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_isShowingTransientController);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

id sub_162DF8@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1593B0();
  *a1 = result;
  return result;
}

void sub_162E20(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_159510(v1);
}

uint64_t dispatch thunk of TabbedInterfaceController.prepareForInterfaceChange(_:currentNavigationTabs:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(_QWORD))(a4 + 64))(a1 & 1);
}

uint64_t dispatch thunk of TabbedInterfaceController.showTransientController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of TabbedInterfaceController.rootViewControllers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of TabbedInterfaceController.rootViewControllers.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t sub_162E70()
{
  return type metadata accessor for RootSplitViewController(0);
}

void sub_162E78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_2FA248;
  v4[1] = &unk_2FA248;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_2FA260;
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[5] = &unk_2FA278;
  v4[6] = &unk_2FA260;
  v4[7] = &unk_2FA290;
  sub_163270();
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = &unk_2FA248;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

uint64_t method lookup function for RootSplitViewController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for RootSplitViewController);
}

uint64_t dispatch thunk of RootSplitViewController.actionRunner.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.actionRunner.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.actionRunner.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.flowController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.flowController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of RootSplitViewController.flowController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of RootSplitViewController.isShowingTransientController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of RootSplitViewController.isShowingTransientController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of RootSplitViewController.isShowingTransientController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of RootSplitViewController.rootViewControllers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.rootViewControllers.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.rootViewControllers.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.interfaceMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.flags + (swift_isaMask & *v0)))() & 1;
}

uint64_t dispatch thunk of RootSplitViewController.interfaceMode.setter(char a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD))((char *)&stru_108.reserved2 + (swift_isaMask & *v1)))(a1 & 1);
}

uint64_t dispatch thunk of RootSplitViewController.interfaceMode.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of RootSplitViewController.$interfaceMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of RootSplitViewController.$interfaceMode.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of RootSplitViewController.$interfaceMode.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of RootSplitViewController.__allocating_init(hostingViewController:tabBarController:searchSuggestionsController:asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t dispatch thunk of RootSplitViewController.selectedViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.selectedNavigationController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.selectedNavigationController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.selectedNavigationController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.reusableNavigationController(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of RootSplitViewController.showTransientController(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of RootSplitViewController.navigationControllers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.selectTab(_:userInitiated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.setFlowController(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of RootSplitViewController.createMenuBarController(asPartOf:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.reserved2 + (swift_isaMask & *v0)))();
}

void sub_163270()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_3D8D38)
  {
    v0 = type metadata accessor for Published(0, &type metadata for InterfaceMode);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_3D8D38);
  }
}

void sub_1632C8()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_objectGraph] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_menuController] = 0;
  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_destinations;
  *(_QWORD *)&v0[v1] = sub_D50D4((uint64_t)_swiftEmptyArrayStorage);
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_actionRunner];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_flowController];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController_isShowingTransientController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23RootSplitViewController____lazy_storage___loadingViewController] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/RootSplitViewController.swift", 53, 2, 220, 0);
  __break(1u);
}

uint64_t sub_1633B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1633F8(void *a1, void *a2, double a3, double a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  double v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void **aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  uint64_t (*v37)();
  uint64_t v38;

  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageAsset), "init");
  v8 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRendererFormat), "init");
  v9 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v8, a3, a4);

  v10 = (void *)objc_opt_self(UITraitCollection);
  v11 = objc_msgSend(v10, "traitCollectionWithUserInterfaceStyle:", 1);
  v12 = swift_allocObject(&unk_385F68, 56, 7);
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = a1;
  *(double *)(v12 + 32) = a3;
  *(double *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = v7;
  v13 = swift_allocObject(&unk_385F90, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_166080;
  *(_QWORD *)(v13 + 24) = v12;
  v37 = sub_101EC;
  v38 = v13;
  aBlock = _NSConcreteStackBlock;
  v34 = 1107296256;
  v35 = sub_920D4;
  v36 = &block_descriptor_34;
  v14 = _Block_copy(&aBlock);
  v15 = v38;
  v16 = v9;
  v17 = a1;
  v18 = v7;
  swift_retain(v13);
  v31 = v11;
  objc_msgSend(v11, "performAsCurrentTraitCollection:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v13, "", 143, 32, 33, 1);
  *(_QWORD *)&v19 = swift_release(v13).n128_u64[0];
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = objc_msgSend(v10, "traitCollectionWithUserInterfaceStyle:", 2, v19);
    v21 = swift_allocObject(&unk_385FE0, 72, 7);
    *(_QWORD *)(v21 + 16) = v16;
    *(_QWORD *)(v21 + 24) = a2;
    *(_QWORD *)(v21 + 32) = v17;
    *(double *)(v21 + 40) = a3;
    *(double *)(v21 + 48) = a4;
    *(_QWORD *)(v21 + 56) = v18;
    *(_QWORD *)(v21 + 64) = v20;
    v22 = swift_allocObject(&unk_386008, 32, 7);
    *(_QWORD *)(v22 + 16) = sub_1660FC;
    *(_QWORD *)(v22 + 24) = v21;
    v37 = sub_EC6A0;
    v38 = v22;
    aBlock = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_920D4;
    v36 = &block_descriptor_13_2;
    v23 = _Block_copy(&aBlock);
    v24 = v38;
    v25 = a2;
    v26 = v20;
    swift_retain(v22);
    v27 = v16;
    v28 = v17;
    v29 = v18;
    objc_msgSend(v26, "performAsCurrentTraitCollection:", v23, swift_release(v24).n128_f64[0]);
    _Block_release(v23);
    LOBYTE(v23) = swift_isEscapingClosureAtFileLocation(v22, "", 143, 42, 32, 1);
    swift_release(v22);
    if ((v23 & 1) == 0)
    {
      v30 = objc_msgSend(objc_allocWithZone((Class)UITraitCollection), "init");
      objc_msgSend(v29, "imageWithTraitCollection:", v30);
      swift_release(v21);
      swift_release(v12);

      return;
    }
  }
  __break(1u);
}

void sub_163788(void *a1, void *a2, void *a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  v10 = swift_allocObject(&unk_3860D0, 40, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(double *)(v10 + 24) = a4;
  *(double *)(v10 + 32) = a5;
  v11 = swift_allocObject(&unk_3860F8, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_16618C;
  *(_QWORD *)(v11 + 24) = v10;
  v17[4] = sub_43A64;
  v18 = v11;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_16391C;
  v17[3] = &block_descriptor_32;
  v12 = _Block_copy(v17);
  v13 = v18;
  v14 = a2;
  swift_retain(v11);
  v15 = objc_msgSend(a1, "imageWithActions:", v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation(v11, "", 143, 33, 36, 1);
  swift_release(v11);
  if ((a2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v16 = objc_msgSend(objc_allocWithZone((Class)UITraitCollection), "init");
    objc_msgSend(a3, "registerImage:withTraitCollection:", v15, v16);
    swift_release(v10);

  }
}

void sub_16391C(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void sub_163950(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  double v21;
  _QWORD v22[5];
  uint64_t v23;

  v14 = swift_allocObject(&unk_386058, 48, 7);
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  *(double *)(v14 + 32) = a6;
  *(double *)(v14 + 40) = a7;
  v15 = swift_allocObject(&unk_386080, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_16614C;
  *(_QWORD *)(v15 + 24) = v14;
  v22[4] = sub_43920;
  v23 = v15;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_16391C;
  v22[3] = &block_descriptor_22_0;
  v16 = _Block_copy(v22);
  v17 = v23;
  v18 = a2;
  v19 = a3;
  swift_retain(v15);
  v20 = objc_msgSend(a1, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation(v15, "", 143, 44, 35, 1);
  *(_QWORD *)&v21 = swift_release(v15).n128_u64[0];
  if ((a3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(a4, "registerImage:withTraitCollection:", v20, a5, v21);
    swift_release(v14);

  }
}

void sub_163AD8(CGFloat a1, CGFloat a2, uint64_t a3, void *a4, void *a5)
{
  id v8;
  id v9;
  CGRect v10;

  v8 = a4;
  if (!a4)
    v8 = a5;
  v9 = a4;
  objc_msgSend(v8, "set");

  v10.origin.x = 0.0;
  v10.origin.y = 0.0;
  v10.size.width = a1;
  v10.size.height = a2;
  UIRectFill(v10);
}

char *sub_163B3C(unint64_t a1)
{
  void *v1;
  id v3;
  char *v4;
  id v5;
  id v6;
  char *v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  double v11;
  void *v12;
  _BYTE *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  __C::UILayoutPriority v38;
  NSLayoutConstraint v39;
  id v40;
  id v41;
  id v42;
  __C::UILayoutPriority v43;
  NSLayoutConstraint v44;
  id v45;
  id v46;
  id v47;
  __C::UILayoutPriority v48;
  NSLayoutConstraint v49;
  id v50;
  id v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  objc_class *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  objc_class *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void *v70;
  Class isa;
  _QWORD *v73;
  objc_super v74;
  CGRect v75;

  v3 = objc_allocWithZone((Class)type metadata accessor for ReviewRatingView());
  v4 = v1;
  v5 = objc_msgSend(v3, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13RatingRowView_ratingView] = v5;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "initWithProgressViewStyle:", 1);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13RatingRowView_barView] = v6;

  v74.receiver = v4;
  v74.super_class = (Class)type metadata accessor for RatingRowView();
  v7 = (char *)objc_msgSendSuper2(&v74, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews13RatingRowView_ratingView;
  v9 = *(_BYTE **)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews13RatingRowView_ratingView];
  LODWORD(v4) = v9[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_starSize];
  v9[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_starSize] = 5;
  v10 = v7;
  if ((_DWORD)v4 != 5)
    objc_msgSend(v9, "setNeedsDisplay");
  v9[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_showsEmptyStars] = 0;
  objc_msgSend(v9, "setNeedsLayout");
  v11 = *(double *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_rating];
  *(double *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews16ReviewRatingView_rating] = (double)a1;
  if (v11 != (double)a1)
    objc_msgSend(v9, "setNeedsDisplay");
  v12 = (void *)objc_opt_self(UIColor);
  v13 = v9;
  v14 = objc_msgSend(v12, "secondaryLabelColor");
  objc_msgSend(v13, "setTintColor:", v14);

  v15 = *(void **)&v7[v8];
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "addSubview:", v15);
  v16 = objc_msgSend(v15, "centerYAnchor");
  v17 = objc_msgSend(v10, "centerYAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  v19 = v18;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v21 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v20 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v21 >= v20 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
  v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
  specialized Array._endMutation()(v22);

  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews13RatingRowView_barView;
  v24 = *(id *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews13RatingRowView_barView];
  v25 = objc_msgSend(v12, "systemFillColor");
  sub_1633F8(v25, 0, 1.0, 2.0);
  v27 = v26;

  objc_msgSend(v24, "setTrackImage:", v27);
  v28 = *(id *)&v10[v23];
  v29 = objc_msgSend(v12, "secondaryLabelColor");
  sub_1633F8(v29, 0, 1.0, 2.0);
  v31 = v30;

  objc_msgSend(v28, "setProgressImage:", v31);
  v32 = *(void **)&v10[v23];
  v33 = objc_msgSend(v32, "layer");
  objc_msgSend(v32, "bounds");
  objc_msgSend(v33, "setCornerRadius:", CGRectGetHeight(v75) * 0.5);

  v34 = *(void **)&v10[v23];
  objc_msgSend(v34, "setClipsToBounds:", 1);
  objc_msgSend(v34, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "addSubview:", v34);
  v35 = objc_msgSend(v34, "leadingAnchor");
  v36 = objc_msgSend(*(id *)&v7[v8], "trailingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v36, 12.0);

  v38.rawValue = static UILayoutPriority.highestBreakable.getter();
  v39.super.isa = NSLayoutConstraint.withPriority(priority:)(v38).super.isa;

  v40 = objc_msgSend(*(id *)&v10[v23], "leadingAnchor");
  v41 = objc_msgSend(v10, "leadingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v41, 50.0);

  v43.rawValue = static UILayoutPriority.highestBreakable.getter();
  v44.super.isa = NSLayoutConstraint.withPriority(priority:)(v43).super.isa;

  v45 = objc_msgSend(*(id *)&v10[v23], "trailingAnchor");
  v46 = objc_msgSend(v10, "trailingAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  v48.rawValue = static UILayoutPriority.highestBreakable.getter();
  v49.super.isa = NSLayoutConstraint.withPriority(priority:)(v48).super.isa;

  v50 = objc_msgSend(*(id *)&v10[v23], "centerYAnchor");
  v51 = objc_msgSend(v10, "centerYAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v73 = _swiftEmptyArrayStorage;
    else
      v73 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v54 = _CocoaArrayWrapper.endIndex.getter(v73);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v55 = v54 + 4;
    if (!__OFADD__(v54, 4))
    {
LABEL_9:
      v56 = sub_215E80(v55, 1);
      specialized Array._endMutation()(v56);
      v39.super.isa = v39.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39.super.isa);
      v54 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      v53 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      if (v54 < v53 >> 1)
        goto LABEL_10;
      goto LABEL_23;
    }
  }
  else
  {
    v53 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8;
    v54 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8));
    v55 = v54 + 4;
    if (!__OFADD__(v54, 4))
      goto LABEL_9;
  }
  __break(1u);
LABEL_23:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
LABEL_10:
  v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v39.super.isa);
  specialized Array._endMutation()(v57);
  v58 = v44.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
  v60 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v59 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v60 >= v59 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
  v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v58);
  specialized Array._endMutation()(v61);
  v62 = v49.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
  v64 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v63 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v64 >= v63 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v64 + 1, 1);
  v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v64, v62);
  specialized Array._endMutation()(v65);
  v66 = v52;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v66);
  v68 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v67 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v68 >= v67 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
  v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v66);
  specialized Array._endMutation()(v69);

  v70 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v70, "activateConstraints:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return v10;
}

id sub_164404()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RatingRowView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RatingRowView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews13RatingRowView);
}

char *sub_16448C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  id v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  objc_class *v43;
  id v44;
  char *v45;
  id v46;
  char *v47;
  id v48;
  char *v49;
  id v50;
  char *v51;
  id v52;
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v93;
  uint64_t v94;
  char v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char *v114;
  id v115;
  id v116;
  id v117;
  char *v118;
  char *v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  void *v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char v144;
  objc_super v145;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_objectGraph] = 0;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_currentRatingLabel] = v12;
  v13 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_outOfRatingLabel] = v13;
  v14 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_ratingCountLabel] = v14;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_ratingBreakdownStack] = v15;

  v145.receiver = v11;
  v145.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v145, "initWithFrame:", a1, a2, a3, a4);
  v17 = objc_msgSend(v16, "contentView");
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v131 = v16;
  v114 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_currentRatingLabel;
  v18 = *(void **)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_currentRatingLabel];
  v19 = qword_3CF620;
  v117 = v18;
  if (v19 != -1)
    swift_once(&qword_3CF620, sub_141D0C);
  v21 = (void *)qword_3FC570;
  v20 = *(_QWORD *)algn_3FC578;
  v22 = unk_3FC588;
  v93 = qword_3FC590;
  v123 = qword_3FC598;
  v126 = (id)qword_3FC580;
  v23 = *((_QWORD *)&xmmword_3FC5A0 + 1);
  v120 = (void *)xmmword_3FC5A0;
  v25 = qword_3FC5B0;
  v24 = unk_3FC5B8;
  v99 = qword_3FC5B0;
  v102 = unk_3FC5B8;
  v26 = qword_3FC5C0;
  v105 = qword_3FC5C0;
  v27 = byte_3FC5C8;
  v28 = byte_3FC5C9;
  v108 = byte_3FC5C8;
  v111 = byte_3FC5C9;
  v29 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  v94 = v20;
  sub_DDA0(v21, v20, (uint64_t)v126, v22, v93, v123, v120, v23, v25, v24, v26, v27, v28);
  v130 = v29;
  v30 = objc_msgSend(v29, "system");
  v31 = objc_msgSend(v30, "preferredContentSizeCategory");

  v129 = (id)objc_opt_self(UITraitCollection);
  v32 = objc_msgSend(v129, "traitCollectionWithPreferredContentSizeCategory:", v31);

  v132 = v21;
  v133 = v20;
  v134 = (uint64_t)v126;
  v135 = v22;
  v136 = v93;
  v137 = v123;
  v138 = (uint64_t)v120;
  v139 = v23;
  v140 = v99;
  v141 = v102;
  v142 = v105;
  v143 = v108;
  v144 = v111;
  v33 = sub_1D5728((uint64_t)&v132, v32);
  v128 = (id)objc_opt_self(UIFont);
  v34 = objc_msgSend(v128, "fontWithDescriptor:size:", v33, 0.0);

  sub_DCC8(v21, v94, (uint64_t)v126, v22, v93, v123, v120, v23, v99, v102, v105, v108, v111);
  objc_msgSend(v117, "setFont:", v34);

  v35 = *(void **)&v114[(_QWORD)v131];
  objc_msgSend(v35, "setTextAlignment:", 1);
  v36 = (void *)objc_opt_self(UIColor);
  v37 = v35;
  v127 = v36;
  v38 = objc_msgSend(v36, "labelColor");
  v39 = objc_msgSend(v38, "colorWithAlphaComponent:", 0.7);

  objc_msgSend(v37, "setTextColor:", v39);
  v40 = objc_msgSend(v131, "contentView");
  objc_msgSend(v40, "addSubview:", *(_QWORD *)&v114[(_QWORD)v131]);

  v41 = OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_ratingBreakdownStack;
  v42 = *(void **)((char *)v131
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_ratingBreakdownStack);
  objc_msgSend(v42, "setAxis:", 1);
  objc_msgSend(v42, "setAlignment:", 0);
  objc_msgSend(v42, "setDistribution:", 1);
  v43 = (objc_class *)type metadata accessor for RatingRowView();
  v44 = objc_allocWithZone(v43);
  v45 = sub_163B3C(5uLL);
  objc_msgSend(*(id *)((char *)v131 + v41), "addArrangedSubview:", v45);

  v46 = objc_allocWithZone(v43);
  v47 = sub_163B3C(4uLL);
  objc_msgSend(*(id *)((char *)v131 + v41), "addArrangedSubview:", v47);

  v48 = objc_allocWithZone(v43);
  v49 = sub_163B3C(3uLL);
  objc_msgSend(*(id *)((char *)v131 + v41), "addArrangedSubview:", v49);

  v50 = objc_allocWithZone(v43);
  v51 = sub_163B3C(2uLL);
  objc_msgSend(*(id *)((char *)v131 + v41), "addArrangedSubview:", v51);

  v52 = objc_allocWithZone(v43);
  v53 = sub_163B3C(1uLL);
  objc_msgSend(*(id *)((char *)v131 + v41), "addArrangedSubview:", v53);

  v54 = objc_msgSend(v131, "contentView");
  objc_msgSend(v54, "addSubview:", *(_QWORD *)((char *)v131 + v41));

  v118 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_ratingCountLabel;
  v55 = qword_3CF650;
  v115 = objc_retain(*(id *)((char *)v131
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_ratingCountLabel));
  if (v55 != -1)
    swift_once(&qword_3CF650, sub_1427A8);
  v56 = *((_QWORD *)&xmmword_3FC7B0 + 1);
  v57 = qword_3FC7C0;
  v58 = qword_3FC7D0;
  v59 = *(_QWORD *)byte_3FC7D8;
  v103 = (void *)xmmword_3FC7B0;
  v106 = (void *)qword_3FC7E0;
  v121 = qword_3FC7C8;
  v124 = qword_3FC7E8;
  v60 = qword_3FC7F0;
  v61 = qword_3FC7F8;
  v62 = qword_3FC800;
  v109 = word_3FC808;
  v112 = HIBYTE(word_3FC808);
  v63 = (void *)xmmword_3FC7B0;
  v97 = qword_3FC7D0;
  v100 = *((_QWORD *)&xmmword_3FC7B0 + 1);
  v95 = byte_3FC7D8[0];
  sub_DDA0((void *)xmmword_3FC7B0, *((uint64_t *)&xmmword_3FC7B0 + 1), qword_3FC7C0, qword_3FC7C8, qword_3FC7D0, byte_3FC7D8[0], (void *)qword_3FC7E0, qword_3FC7E8, qword_3FC7F0, qword_3FC7F8, qword_3FC800, word_3FC808, SHIBYTE(word_3FC808));
  v64 = objc_msgSend(v130, "system");
  v65 = objc_msgSend(v64, "preferredContentSizeCategory");

  v66 = objc_msgSend(v129, "traitCollectionWithPreferredContentSizeCategory:", v65);
  v132 = v63;
  v133 = v56;
  v134 = v57;
  v135 = v121;
  v136 = v58;
  v137 = v59;
  v138 = (uint64_t)v106;
  v139 = v124;
  v140 = v60;
  v141 = v61;
  v142 = v62;
  v143 = v109;
  v144 = v112;
  v67 = sub_1D5728((uint64_t)&v132, v66);
  v68 = objc_msgSend(v128, "fontWithDescriptor:size:", v67, 0.0);

  sub_DCC8(v103, v100, v57, v121, v97, v95, v106, v124, v60, v61, v62, v109, v112);
  objc_msgSend(v115, "setFont:", v68);

  v69 = *(id *)&v118[(_QWORD)v131];
  v70 = objc_msgSend(v127, "secondaryLabelColor");
  objc_msgSend(v69, "setTextColor:", v70);

  v71 = *(id *)&v118[(_QWORD)v131];
  objc_msgSend(v71, "setTextAlignment:", 2 * (objc_msgSend(v131, "effectiveUserInterfaceLayoutDirection") != (char *)&dword_0 + 1));

  v72 = objc_msgSend(v131, "contentView");
  objc_msgSend(v72, "addSubview:", *(_QWORD *)&v118[(_QWORD)v131]);

  v119 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_outOfRatingLabel;
  v73 = qword_3CF658;
  v116 = objc_retain(*(id *)((char *)v131
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_outOfRatingLabel));
  if (v73 != -1)
    swift_once(&qword_3CF658, sub_142928);
  v74 = *((_QWORD *)&xmmword_3FC810 + 1);
  v75 = qword_3FC820;
  v76 = qword_3FC830;
  v122 = *(_QWORD *)byte_3FC838;
  v125 = qword_3FC828;
  v77 = qword_3FC840;
  v104 = (void *)xmmword_3FC810;
  v107 = qword_3FC848;
  v78 = qword_3FC850;
  v79 = qword_3FC858;
  v80 = qword_3FC860;
  v110 = word_3FC868;
  v113 = HIBYTE(word_3FC868);
  v81 = (void *)xmmword_3FC810;
  v98 = qword_3FC830;
  v101 = *((_QWORD *)&xmmword_3FC810 + 1);
  v96 = (void *)qword_3FC840;
  sub_DDA0((void *)xmmword_3FC810, *((uint64_t *)&xmmword_3FC810 + 1), qword_3FC820, qword_3FC828, qword_3FC830, byte_3FC838[0], (void *)qword_3FC840, qword_3FC848, qword_3FC850, qword_3FC858, qword_3FC860, word_3FC868, SHIBYTE(word_3FC868));
  v82 = objc_msgSend(v130, "system");
  v83 = objc_msgSend(v82, "preferredContentSizeCategory");

  v84 = objc_msgSend(v129, "traitCollectionWithPreferredContentSizeCategory:", v83);
  v132 = v81;
  v133 = v74;
  v134 = v75;
  v135 = v125;
  v136 = v76;
  v137 = v122;
  v138 = v77;
  v139 = v107;
  v140 = v78;
  v141 = v79;
  v142 = v80;
  v143 = v110;
  v144 = v113;
  v85 = sub_1D5728((uint64_t)&v132, v84);
  v86 = objc_msgSend(v128, "fontWithDescriptor:size:", v85, 0.0);

  sub_DCC8(v104, v101, v75, v125, v98, v122, v96, v107, v78, v79, v80, v110, v113);
  objc_msgSend(v116, "setFont:", v86);

  v87 = *(void **)&v119[(_QWORD)v131];
  objc_msgSend(v87, "setTextAlignment:", 1);
  v88 = v87;
  v89 = objc_msgSend(v127, "secondaryLabelColor");
  objc_msgSend(v88, "setTextColor:", v89);

  v90 = objc_msgSend(v131, "contentView");
  v91 = *(id *)&v119[(_QWORD)v131];
  objc_msgSend(v90, "addSubview:", v91);

  return (char *)v131;
}

void sub_164F78()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  double v30;
  double v31;
  double v32;
  CGFloat v33;
  double MaxY;
  id v35;
  void *v36;
  double v37;
  double v38;
  void *v39;
  double v40;
  double Width;
  double MinX;
  id v43;
  void *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  void *v53;
  CGFloat v54;
  double MaxX;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  void *v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  CGFloat v67;
  double v68;
  double v69;
  CGFloat v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  objc_super v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;

  v80.receiver = v0;
  v80.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v80, "layoutSubviews");
  v1 = objc_msgSend(v0, "contentView");
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(v1, "layoutMargins");
  v11 = v10;
  v13 = v12;

  v14 = (char *)objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v15 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_currentRatingLabel];
  v16 = objc_msgSend(v15, "font");
  if (!v16)
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v16;
  v18 = UIEdgeInsetsInsetRect(v3, v5, v7, v9, v11, v13);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  objc_msgSend(v15, "sizeThatFits:", v21, v23);
  v26 = v25;
  v28 = v27;
  v81.origin.x = v18;
  v81.origin.y = v20;
  v81.size.width = v22;
  v81.size.height = v24;
  v29 = CGRectGetMinY(v81) + 5.0;
  objc_msgSend(v17, "ascender");
  v31 = v30;
  objc_msgSend(v17, "capHeight");
  v79 = v29;
  v33 = v29 + v32 - v31;
  v82.origin.x = v18;
  v82.origin.y = v20;
  v82.size.width = v22;
  v82.size.height = v24;
  v77 = v26;
  objc_msgSend(v15, "setFrame:", CGRectGetMinX(v82), v33, v26, v28);
  objc_msgSend(v15, "frame");
  MaxY = CGRectGetMaxY(v83);
  v35 = objc_msgSend(v15, "font");
  if (!v35)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v36 = v35;
  objc_msgSend(v35, "descender");
  v38 = v37;

  v39 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_outOfRatingLabel];
  objc_msgSend(v39, "sizeThatFits:", v22, v24);
  v78 = v40;
  objc_msgSend(v15, "frame");
  Width = CGRectGetWidth(v84);
  v85.origin.x = v18;
  v85.origin.y = v20;
  v85.size.width = v22;
  v85.size.height = v24;
  MinX = CGRectGetMinX(v85);
  v43 = objc_msgSend(v39, "font");
  if (!v43)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v44 = v43;
  v45 = MaxY + v38;
  objc_msgSend(v43, "ascender");
  v47 = v46;

  v48 = v45 + 23.0 - v47;
  v49 = Width;
  objc_msgSend(v39, "setFrame:", MinX, v48, Width, v78);
  v86.origin.x = v18;
  v86.origin.y = v20;
  v86.size.width = v22;
  v86.size.height = v24;
  v50 = CGRectGetWidth(v86) * 0.5 + 50.0;
  objc_msgSend(v15, "frame");
  v51 = CGRectGetMaxX(v87) + 12.0;
  v88.origin.x = v18;
  v88.origin.y = v20;
  v88.size.width = v22;
  v88.size.height = v24;
  v52 = CGRectGetMaxX(v88) - v50;
  if (v51 >= v52)
  {
    v50 = v50 + v52 - v51;
  }
  else
  {
    v89.origin.x = v18;
    v89.origin.y = v20;
    v89.size.width = v22;
    v89.size.height = v24;
    v51 = CGRectGetMaxX(v89) - v50;
  }
  v53 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_ratingBreakdownStack];
  objc_msgSend(v53, "setFrame:", v51, v79, v50, 44.0);
  if (v14 == (_BYTE *)&dword_0 + 1)
  {
    v90.origin.x = v18;
    v90.origin.y = v20;
    v90.size.width = v22;
    v90.size.height = v24;
    v54 = CGRectGetMaxX(v90) - v77;
    objc_msgSend(v15, "frame");
    objc_msgSend(v15, "setFrame:", v54);
    v91.origin.x = v18;
    v91.origin.y = v20;
    v91.size.width = v22;
    v91.size.height = v24;
    MaxX = CGRectGetMaxX(v91);
    objc_msgSend(v39, "frame");
    v57 = MaxX - v56 - v49;
    objc_msgSend(v39, "frame");
    objc_msgSend(v39, "setFrame:", v57);
    v92.origin.x = v18;
    v92.origin.y = v20;
    v92.size.width = v22;
    v92.size.height = v24;
    v58 = CGRectGetMaxX(v92);
    objc_msgSend(v53, "frame");
    v60 = v58 - v59 - v50;
    objc_msgSend(v53, "frame");
    objc_msgSend(v53, "setFrame:", v60);
  }
  v61 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_ratingCountLabel];
  objc_msgSend(v61, "sizeThatFits:", v22, v24);
  v63 = v62;
  v65 = v64;
  v66 = v18;
  v67 = v20;
  v68 = v22;
  v69 = v24;
  if (v14 == (_BYTE *)&dword_0 + 1)
  {
    v70 = CGRectGetMinX(*(CGRect *)&v66);
    v71 = v20;
    v72 = v70;
  }
  else
  {
    v73 = CGRectGetMaxX(*(CGRect *)&v66);
    v71 = v20;
    v72 = v73 - v63;
  }
  v74 = v18;
  v75 = v22;
  v76 = v24;
  objc_msgSend(v61, "setFrame:", v72, CGRectGetMaxY(*(CGRect *)(&v71 - 1)) - v65, v63, v65);

}

void sub_1655C0(float a1)
{
  uint64_t v1;
  id v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  NSString *v13;
  unint64_t v14;
  id v15;
  NSString v16;
  Class isa;
  id v18;
  _BYTE v19[72];
  Swift::String v20;

  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0x465F474E49544152;
  v4._object = (void *)0xED000054414D524FLL;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v20);

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v8 + 56) = &type metadata for Float;
  *(_QWORD *)(v8 + 64) = &protocol witness table for Float;
  *(float *)(v8 + 32) = a1;
  static String.localizedStringWithFormat(_:_:)(v6._countAndFlagsBits, v6._object, v8);
  v10 = v9;
  swift_bridgeObjectRelease(v6._object);
  swift_bridgeObjectRelease(v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
  inited = swift_initStackObject(v11, v19);
  *(_OWORD *)(inited + 16) = xmmword_2F03C0;
  *(_QWORD *)(inited + 64) = &type metadata for Int;
  *(_QWORD *)(inited + 32) = NSKernAttributeName;
  *(_QWORD *)(inited + 40) = -1;
  v13 = NSKernAttributeName;
  v14 = sub_D4784(inited);
  v15 = objc_allocWithZone((Class)NSAttributedString);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  type metadata accessor for Key(0);
  sub_239FC((unint64_t *)&qword_3D0150, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(v15, "initWithString:attributes:", v16, isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_currentRatingLabel), "setAttributedText:", v18);
}

void sub_1657EC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_ratingBreakdownStack), "arrangedSubviews");
  v2 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v11 = v3;
  else
    v11 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v6 = *(id *)(v3 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = type metadata accessor for RatingRowView();
      v9 = swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0);
      LODWORD(v10) = 0;
      objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC23ShelfKitCollectionViews13RatingRowView_barView), "setProgress:", v10);

    }
    while (v4 != v5);
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t type metadata accessor for ProductRatingCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell);
}

id sub_165A30()
{
  char *v0;
  char *v1;
  float v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  char **p_name;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  id v20;
  void *v21;
  float v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  id v37;
  Swift::String v38;
  Swift::String v39;

  v1 = v0;
  v2 = Ratings.ratingAverage.getter();
  sub_1655C0(v2);
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_outOfRatingLabel];
  v37 = (id)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v37, "mainBundle");
  v38._object = (void *)0xE000000000000000;
  v5._object = (void *)0x8000000000311240;
  v5._countAndFlagsBits = 0xD000000000000012;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v38);

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v9 + 56) = &type metadata for Int;
  *(_QWORD *)(v9 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v9 + 32) = 5;
  static String.localizedStringWithFormat(_:_:)(v7._countAndFlagsBits, v7._object, v9);
  v11 = v10;
  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v9);
  v12 = String._bridgeToObjectiveC()();
  p_name = &stru_3B7FF8.name;
  objc_msgSend(v3, "setText:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v14 = Ratings.totalNumberOfRatings.getter();
  v15 = Ratings.ratingCounts.getter();
  if (!v15)
    goto LABEL_19;
  v17 = v15;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 >= 0)
      v25 = v15 & 0xFFFFFFFFFFFFFF8;
    else
      v25 = v15;
    swift_bridgeObjectRetain(v15);
    v26 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v17);
    if (v26 == 5)
    {
      swift_bridgeObjectRetain(v17);
      v18 = _CocoaArrayWrapper.endIndex.getter(v25);
      swift_bridgeObjectRelease(v17);
      if (!v18)
      {
        *(_QWORD *)&v24 = swift_bridgeObjectRelease(v17).n128_u64[0];
        goto LABEL_20;
      }
      if (v18 >= 1)
        goto LABEL_5;
      __break(1u);
    }
    goto LABEL_18;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8)) != 5)
  {
LABEL_18:
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
LABEL_19:
    objc_msgSend(v1, "clearAllRatings", v16);
    goto LABEL_20;
  }
  v18 = 5;
LABEL_5:
  for (i = 0; i != v18; ++i)
  {
    if ((v17 & 0xC000000000000001) != 0)
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
    else
      v20 = *(id *)(v17 + 8 * i + 32);
    v21 = v20;
    objc_msgSend(v20, "floatValue");
    *(float *)&v23 = v22 / (float)v14;
    objc_msgSend(v1, "setRatingWithProportion:at:", i, v23);

  }
  *(_QWORD *)&v24 = swift_bridgeObjectRelease(v17).n128_u64[0];
  p_name = (char **)(&stru_3B7FF8 + 8);
LABEL_20:
  v27 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_ratingCountLabel];
  v28 = objc_msgSend(v37, "mainBundle", v24);
  v29._countAndFlagsBits = 0xD000000000000013;
  v39._object = (void *)0xE000000000000000;
  v29._object = (void *)0x8000000000311260;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v39._countAndFlagsBits = 0;
  v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v39);

  v32 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v32 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v32 + 56) = &type metadata for Int;
  *(_QWORD *)(v32 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v32 + 32) = v14;
  static String.localizedStringWithFormat(_:_:)(v31._countAndFlagsBits, v31._object, v32);
  v34 = v33;
  swift_bridgeObjectRelease(v31._object);
  swift_bridgeObjectRelease(v32);
  v35 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, p_name[286], v35, swift_bridgeObjectRelease(v34).n128_f64[0]);

  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_165DF8()
{
  return sub_165A30();
}

uint64_t sub_165E00()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_objectGraph));
}

uint64_t sub_165E10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_165E44(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC((unint64_t *)&unk_3D8E40, v3, (uint64_t (*)(uint64_t))type metadata accessor for ProductRatingCollectionViewCell, (uint64_t)&unk_2FA438);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_165E9C()
{
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 75.0);
}

uint64_t sub_165EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC((unint64_t *)&unk_3D8E40, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductRatingCollectionViewCell, (uint64_t)&unk_2FA438);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_165EE4(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D8E20, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductRatingCollectionViewCell, (uint64_t)&unk_2FA310);
}

uint64_t sub_165F10(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C40, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductRatingCollectionViewCell, (uint64_t)&unk_2FA398);
}

uint64_t sub_165F3C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D8E28, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductRatingCollectionViewCell, (uint64_t)&unk_2FA370);
}

uint64_t sub_165F68(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D8E30, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductRatingCollectionViewCell, (uint64_t)&unk_2FA3C8);
}

uint64_t sub_165F94()
{
  return sub_239FC(&qword_3D8E38, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Ratings, (uint64_t)&protocol conformance descriptor for Ratings);
}

void sub_165FC4()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ProductRatingCollectionViewCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ProductRatingCollectionViewCell.swift", 61, 2, 202, 0);
  __break(1u);
}

uint64_t sub_16604C()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

void sub_166080()
{
  uint64_t v0;

  sub_163788(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 48), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_166090()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1660B8()
{
  id *v0;

  return swift_deallocObject(v0, 72, 7);
}

void sub_1660FC()
{
  uint64_t v0;

  sub_163950(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 56), *(_QWORD *)(v0 + 64), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_166110()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_166120()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_16614C(uint64_t a1)
{
  uint64_t v1;

  sub_163AD8(*(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_166158()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_166168()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_16618C()
{
  uint64_t v0;
  CGFloat v1;
  CGFloat v2;
  CGRect v3;

  v1 = *(double *)(v0 + 24);
  v2 = *(double *)(v0 + 32);
  objc_msgSend(*(id *)(v0 + 16), "set");
  v3.origin.x = 0.0;
  v3.origin.y = 0.0;
  v3.size.width = v1;
  v3.size.height = v2;
  UIRectFill(v3);
}

uint64_t sub_1661C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

char *sub_1661FC(uint64_t a1, void *a2, uint64_t a3)
{
  _BYTE *v3;
  id v7;
  char *v8;
  id v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  __n128 v22;
  void *v23;
  objc_super v25;

  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_subscriptions] = _swiftEmptyArrayStorage;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_didCancel] = 0;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_didCommit] = 0;
  v7 = objc_allocWithZone((Class)UISearchController);
  v8 = v3;
  v9 = objc_msgSend(v7, "initWithSearchResultsController:", 0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_searchController] = v9;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_searchExtension] = a1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_scopeBar] = objc_msgSend(objc_allocWithZone((Class)UISegmentedControl), "init", swift_retain(a1).n128_f64[0]);

  objc_msgSend(a2, "setPreferredSearchBarPlacement:", 2);
  v25.receiver = v8;
  v25.super_class = (Class)type metadata accessor for SearchExtensionHelper();
  v10 = (char *)objc_msgSendSuper2(&v25, "init");
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_searchController;
  v12 = *(void **)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_searchController];
  v13 = v10;
  objc_msgSend(a2, "setHidesSearchBarWhenScrolling:", SearchExtension.hidesSearchBarWhenScrolling.getter(objc_msgSend(a2, "setSearchController:", v12)) & 1);
  objc_msgSend(v12, "setObscuresBackgroundDuringPresentation:", 0);
  objc_msgSend(v12, "setScopeBarActivation:", 1);
  v14 = objc_msgSend(v12, "searchBar");
  objc_msgSend(v14, "setDelegate:", v13);

  v15 = objc_msgSend(*(id *)&v10[v11], "searchBar");
  v16 = objc_msgSend(v15, "searchTextField");

  objc_msgSend(v16, "setDelegate:", v13);
  v17 = *(void **)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_scopeBar];
  sub_43740();
  v18 = swift_allocObject(&unk_386248, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v13);
  v19 = (_QWORD *)swift_allocObject(&unk_386270, 40, 7);
  v19[2] = a1;
  v19[3] = v17;
  v19[4] = v18;
  v20 = v17;
  swift_retain(a1);
  v21 = v20;
  v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v22, 0, 0, 0, sub_168F30, v19);
  objc_msgSend(v21, "addAction:forControlEvents:", v23, 4096);

  sub_1668CC(a2);
  swift_release(a1);

  swift_release(a3);
  return v13;
}

uint64_t sub_1664F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  _BYTE *Strong;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];

  v41 = a4;
  v6 = type metadata accessor for SearchExtensionScope(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D8F90);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D8F70);
  __chkstk_darwin(v13);
  v40 = (uint64_t)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v40 - v16;
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v40 - v19);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v40 - v23;
  v42 = a2;
  v25 = SearchExtension.scopes.getter(v22);
  result = (uint64_t)objc_msgSend(a3, "selectedSegmentIndex");
  if (result >= *(_QWORD *)(v25 + 16))
  {
    v27 = 1;
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v24, v27, 1, v6);
    v28 = swift_bridgeObjectRelease(v25);
    v29 = SearchExtension.selectedScope.getter(v28);
    CurrentValueSubject.value.getter(v20);
    swift_release(v29);
    v30 = (uint64_t)&v12[*(int *)(v10 + 48)];
    sub_D184((uint64_t)v20, (uint64_t)v12, (uint64_t *)&unk_3D8F70);
    sub_D184((uint64_t)v24, v30, (uint64_t *)&unk_3D8F70);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (v31((uint64_t)v12, 1, v6) == 1)
    {
      sub_D1D4((uint64_t)v20, (uint64_t *)&unk_3D8F70);
      if (v31(v30, 1, v6) == 1)
      {
        sub_D1D4((uint64_t)v12, (uint64_t *)&unk_3D8F70);
        return sub_D1D4((uint64_t)v24, (uint64_t *)&unk_3D8F70);
      }
    }
    else
    {
      sub_D184((uint64_t)v12, (uint64_t)v17, (uint64_t *)&unk_3D8F70);
      if (v31(v30, 1, v6) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v30, v6);
        v32 = sub_89A0((unint64_t *)&unk_3D34C0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchExtensionScope, (uint64_t)&protocol conformance descriptor for SearchExtensionScope);
        v33 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v9, v6, v32);
        v34 = *(void (**)(char *, uint64_t))(v7 + 8);
        v34(v9, v6);
        sub_D1D4((uint64_t)v20, (uint64_t *)&unk_3D8F70);
        v34(v17, v6);
        sub_D1D4((uint64_t)v12, (uint64_t *)&unk_3D8F70);
        if ((v33 & 1) != 0)
          return sub_D1D4((uint64_t)v24, (uint64_t *)&unk_3D8F70);
LABEL_12:
        v35 = v41 + 16;
        swift_beginAccess(v41 + 16, v43, 0, 0);
        Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v35);
        if (Strong)
        {
          Strong[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_didCommit] = 0;

        }
        v38 = SearchExtension.selectedScope.getter(v37);
        v39 = v40;
        sub_D184((uint64_t)v24, v40, (uint64_t *)&unk_3D8F70);
        CurrentValueSubject.value.setter(v39);
        swift_release(v38);
        return sub_D1D4((uint64_t)v24, (uint64_t *)&unk_3D8F70);
      }
      sub_D1D4((uint64_t)v20, (uint64_t *)&unk_3D8F70);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
    }
    sub_D1D4((uint64_t)v12, (uint64_t *)&unk_3D8F90);
    goto LABEL_12;
  }
  if ((result & 0x8000000000000000) == 0)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v24, v25+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * result, v6);
    v27 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1668CC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  double v44;
  void *v45;
  char *v46;
  double v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  __n128 v57;
  void *v58;
  __n128 v59;
  void *v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  __n128 v64;
  int v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  _QWORD *v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  _QWORD *v122;
  id v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, unint64_t, uint64_t, __n128);
  uint64_t v139;
  int64_t v140;
  uint64_t v141;
  char *v142;
  _QWORD v143[3];
  _QWORD v144[3];
  __int128 v145;
  uint64_t v146;

  v2 = v1;
  v125 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FA8);
  v134 = *(_QWORD *)(v3 - 8);
  v135 = v3;
  __chkstk_darwin(v3);
  v133 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v128 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v127 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB8);
  v131 = *(_QWORD *)(v6 - 8);
  v132 = v6;
  __chkstk_darwin(v6);
  v130 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D8F70);
  __chkstk_darwin(v8);
  v10 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v119 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FC0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __chkstk_darwin(v17);
  v20 = (uint64_t *)((char *)&v119 - v19);
  v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_searchExtension);
  v22 = SearchExtension.scopes.getter(v18);
  v23 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_searchController), "searchBar");
  v24 = swift_allocObject(&unk_386298, 24, 7);
  *(_QWORD *)(v24 + 16) = 0;
  v25 = *(_QWORD *)(v22 + 16);
  v26 = &OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_objectGraph;
  v136 = v24;
  if (v25 < 2)
  {
    v57 = swift_bridgeObjectRelease(v22);
LABEL_19:
    v143[0] = SearchExtension.term.getter(v57);
    v82 = swift_allocObject(&unk_386248, 24, 7);
    swift_unknownObjectWeakInit(v82 + 16, v2);
    v83 = swift_allocObject(&unk_3862C0, 32, 7);
    *(_QWORD *)(v83 + 16) = v23;
    *(_QWORD *)(v83 + 24) = v82;
    v142 = (char *)v23;
    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FC8);
    v85 = sub_10EDC((unint64_t *)&unk_3D8FD0, &qword_3D8FC8, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    v86 = Publisher<>.sink(receiveValue:)(sub_168F64, v83, v84, v85);
    swift_release(v83);
    swift_release(v143[0]);
    v87 = v2 + v26[461];
    swift_beginAccess(v87, v143, 33, 0);
    v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
    v89 = v2;
    v141 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
    v90 = v88;
    AnyCancellable.store<A>(in:)(v87, v88, v141);
    swift_endAccess(v143);
    v91 = swift_release(v86);
    v92 = v21;
    v93 = SearchExtension.hidesScopeBar.getter(v91);
    v143[0] = v93;
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
    v95 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    v96 = v127;
    Publisher.dropFirst(_:)(1, v94, v95);
    swift_release(v93);
    v97 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    v98 = v130;
    v99 = v129;
    Publisher<>.removeDuplicates()(v129, v97, &protocol witness table for Bool);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v96, v99);
    v100 = *(void **)(v89 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_scopeBar);
    v101 = swift_allocObject(&unk_3862E8, 32, 7);
    v102 = v136;
    *(_QWORD *)(v101 + 16) = v136;
    *(_QWORD *)(v101 + 24) = v100;
    v103 = sub_10EDC(&qword_3D8FF0, &qword_3D8FB8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v104 = v100;
    swift_retain(v102);
    v105 = v132;
    v106 = Publisher<>.sink(receiveValue:)(sub_168F98, v101, v132, v103);
    v107 = swift_release(v101);
    (*(void (**)(char *, uint64_t, __n128))(v131 + 8))(v98, v105, v107);
    swift_beginAccess(v87, v143, 33, 0);
    v108 = v141;
    AnyCancellable.store<A>(in:)(v87, v90, v141);
    swift_endAccess(v143);
    v109 = swift_release(v106);
    v110 = SearchExtension.isNetworkReachable.getter(v109);
    v143[0] = v110;
    v111 = v133;
    Publisher<>.removeDuplicates()(v94, v95, &protocol witness table for Bool);
    swift_release(v110);
    v112 = swift_allocObject(&unk_386310, 32, 7);
    v113 = v142;
    *(_QWORD *)(v112 + 16) = v142;
    *(_QWORD *)(v112 + 24) = v92;
    v114 = sub_10EDC(&qword_3D8FF8, &qword_3D8FA8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v115 = v113;
    swift_retain(v92);
    v116 = v135;
    v117 = Publisher<>.sink(receiveValue:)(sub_168FD0, v112, v135, v114);
    v118 = swift_release(v112);
    (*(void (**)(char *, uint64_t, __n128))(v134 + 8))(v111, v116, v118);
    swift_beginAccess(v87, v143, 33, 0);
    AnyCancellable.store<A>(in:)(v87, v90, v108);
    swift_endAccess(v143);

    swift_release(v136);
    swift_release(v117);
    return;
  }
  v122 = v13;
  v121 = v10;
  v123 = v23;
  v124 = v21;
  v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_scopeBar;
  v140 = v25;
  v28 = type metadata accessor for SearchExtensionScope(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = v22 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  v31 = *(_QWORD *)(v29 + 72);
  v141 = v29;
  v32 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v29 + 16);
  v137 = v31;
  v138 = v32;
  v126 = v22;
  v33 = swift_bridgeObjectRetain(v22);
  v34 = 0;
  v120 = v30;
  v139 = v28;
  v142 = (char *)v27;
  do
  {
    v35 = v34 + 1;
    v36 = (char *)v16 + *(int *)(v14 + 48);
    v138(v36, v30, v28, v33);
    v37 = (char *)v20 + *(int *)(v14 + 48);
    *v20 = v34;
    (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v37, v36, v28);
    v38 = sub_168FD8((uint64_t)v20, (uint64_t)v16);
    v39 = *v16;
    v40 = *(void **)&v142[v2];
    SearchExtensionScope.title.getter(v38);
    v42 = v41;
    v43 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v44 = swift_bridgeObjectRelease(v42).n128_u64[0];
    v45 = v40;
    v46 = v142;
    objc_msgSend(v45, "insertSegmentWithTitle:atIndex:animated:", v43, v39, 0, v44);

    v28 = v139;
    sub_D1D4((uint64_t)v16, &qword_3D8FC0);
    v30 += v137;
    v34 = v35;
  }
  while (v140 != v35);
  *(_QWORD *)&v47 = swift_bridgeObjectRelease(v126).n128_u64[0];
  v48 = v125;
  v49 = objc_msgSend(v125, "_bottomPalette", v47);
  v50 = v136;
  v21 = v124;
  v51 = v141;
  if (!v49)
  {
LABEL_9:
    v55 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MultiViewHostingPalette()), "init");
    objc_msgSend(v48, "_setBottomPalette:", v55);
    v58 = *(void **)(v50 + 16);
    *(_QWORD *)(v50 + 16) = v55;

    if (!v55)
      goto LABEL_11;
    goto LABEL_10;
  }
  v52 = v49;
  v53 = type metadata accessor for MultiViewHostingPalette();
  v54 = swift_dynamicCastClass(v52, v53);
  if (!v54)
  {

    goto LABEL_9;
  }
  v55 = (id)v54;
  v56 = *(void **)(v50 + 16);
  *(_QWORD *)(v50 + 16) = v54;

LABEL_10:
  v60 = *(void **)&v46[v2];
  v144[1] = 0;
  v144[2] = 0;
  v144[0] = 0x4040000000000000;
  v145 = xmmword_2F5080;
  v146 = 10;
  v61 = v55;
  sub_1ECBD4(v60, (uint64_t)v144);

LABEL_11:
  v62 = SearchExtension.selectedScope.getter(v59);
  v63 = v122;
  CurrentValueSubject.value.getter(v122);
  v64 = swift_release(v62);
  v65 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v51 + 48))(v63, 1, v28, v64);
  sub_D1D4((uint64_t)v63, (uint64_t *)&unk_3D8F70);
  v26 = &OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_objectGraph;
  v23 = v123;
  if (v65 != 1)
  {
LABEL_18:
    v143[0] = SearchExtension.selectedScope.getter(v66);
    v72 = *(void **)&v142[v2];
    v73 = (_QWORD *)swift_allocObject(&unk_386338, 40, 7);
    v73[2] = v126;
    v73[3] = v72;
    v73[4] = v23;
    v74 = v72;
    v75 = v23;
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9000);
    v77 = sub_10EDC(&qword_3D9008, &qword_3D9000, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    v78 = Publisher<>.sink(receiveValue:)(sub_169054, v73, v76, v77);
    swift_release(v73);
    swift_release(v143[0]);
    v79 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_subscriptions;
    swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_subscriptions, v143, 33, 0);
    v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
    v81 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v79, v80, v81);
    swift_endAccess(v143);
    v57 = swift_release(v78);
    goto LABEL_19;
  }
  v67 = SearchExtension.selectedScope.getter(v66);
  v68 = (uint64_t)objc_msgSend(v23, "selectedScopeButtonIndex");
  if (v68 >= v140)
  {
    v71 = 1;
    v69 = v121;
    v70 = v139;
    goto LABEL_17;
  }
  v69 = v121;
  if (v68 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v68 < *(_QWORD *)(v126 + 16))
  {
    v70 = v139;
    ((void (*)(char *, unint64_t, uint64_t))v138)(v121, v120 + v137 * v68, v139);
    v71 = 0;
LABEL_17:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v69, v71, 1, v70);
    CurrentValueSubject.value.setter(v69);
    v66 = swift_release(v67);
    goto LABEL_18;
  }
  __break(1u);
}

double sub_167324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  __n128 v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v3 = type metadata accessor for SearchExtensionTerm(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8F80);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8F68);
  __chkstk_darwin(v10);
  v30 = (uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - v13;
  v16 = __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v29 - v17);
  v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_searchExtension);
  v19 = SearchExtension.term.getter(v16);
  CurrentValueSubject.value.getter(v18);
  swift_release(v19);
  v20 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_D184((uint64_t)v18, (uint64_t)v9, &qword_3D8F68);
  sub_D184(a1, v20, &qword_3D8F68);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v21((uint64_t)v9, 1, v3) != 1)
  {
    sub_D184((uint64_t)v9, (uint64_t)v14, &qword_3D8F68);
    if (v21(v20, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v20, v3);
      v23 = sub_89A0(&qword_3D8F88, (uint64_t (*)(uint64_t))&type metadata accessor for SearchExtensionTerm, (uint64_t)&protocol conformance descriptor for SearchExtensionTerm);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v6, v3, v23);
      v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v6, v3);
      sub_D1D4((uint64_t)v18, &qword_3D8F68);
      v25(v14, v3);
      sub_D1D4((uint64_t)v9, &qword_3D8F68);
      if ((v24 & 1) != 0)
        return v22.n128_f64[0];
LABEL_8:
      v26 = SearchExtension.term.getter(v22);
      v27 = v30;
      sub_D184(a1, v30, &qword_3D8F68);
      CurrentValueSubject.value.setter(v27);
      v22.n128_u64[0] = swift_release(v26).n128_u64[0];
      return v22.n128_f64[0];
    }
    sub_D1D4((uint64_t)v18, &qword_3D8F68);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
LABEL_6:
    sub_D1D4((uint64_t)v9, &qword_3D8F80);
    goto LABEL_8;
  }
  sub_D1D4((uint64_t)v18, &qword_3D8F68);
  if (v21(v20, 1, v3) != 1)
    goto LABEL_6;
  sub_D1D4((uint64_t)v9, &qword_3D8F68);
  return v22.n128_f64[0];
}

uint64_t sub_16761C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8F68);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_didCancel) = 0;
  v7 = objc_msgSend(a1, "text", v4);
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  SearchExtensionTerm.init(term:searchPrefix:state:)(v9, v11, 0, 0, 0);
  sub_167324((uint64_t)v6);
  sub_D1D4((uint64_t)v6, &qword_3D8F68);
  return 1;
}

void sub_16774C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  id v22;
  __n128 v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8F68);
  __chkstk_darwin(v4);
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v41 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D8F70);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = SearchExtension.scopes.getter(v11);
  v15 = (uint64_t)objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_scopeBar), "selectedSegmentIndex");
  if (v15 >= *(_QWORD *)(v14 + 16))
  {
    v17 = type metadata accessor for SearchExtensionScope(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
  }
  else
  {
    v16 = v15;
    if (v15 < 0)
    {
      __break(1u);
      return;
    }
    v17 = type metadata accessor for SearchExtensionScope(0);
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v13, v14+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
  }
  swift_bridgeObjectRelease(v14);
  type metadata accessor for SearchExtensionScope(0);
  v19 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v17) == 1)
  {
    sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D8F70);
    v20 = 1;
  }
  else
  {
    v21 = SearchExtensionScope.isLocal.getter();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v17);
    v20 = v21 ^ 1;
  }
  v22 = objc_msgSend(a1, "text");
  if (v22)
  {
    v24 = v22;
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v27 = v26;

    v41[0] = v25;
    v41[1] = v27;
    v28 = sub_2C298();
    LODWORD(v24) = Collection.isNotEmpty.getter(&type metadata for String, v28);
    v23 = swift_bridgeObjectRelease(v27);
    v29 = v24 ^ 1;
  }
  else
  {
    v29 = 1;
  }
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_didCancel) & 1) != 0
    || (v30 = SearchExtension.isPresentingLanding.getter(v23),
        CurrentValueSubject.value.getter(v41),
        v23.n128_u64[0] = swift_release(v30).n128_u64[0],
        LOBYTE(v41[0]) == 1))
  {
    v31 = objc_msgSend(a1, "text", v23.n128_f64[0]);
    if (v31)
    {
      v32 = v31;
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v35 = v34;

    }
    else
    {
      v33 = 0;
      v35 = 0;
    }
    SearchExtensionTerm.init(term:searchPrefix:state:)(v33, v35, 0, 0, 3);
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_searchController), "setActive:", 0, sub_167324((uint64_t)v9));
LABEL_17:
    sub_D1D4((uint64_t)v9, &qword_3D8F68);
    return;
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_didCommit) == 1
    || ((v20 | v29) & 1) == 0)
  {
    v36 = objc_msgSend(a1, "text", v23.n128_f64[0]);
    if (v36)
    {
      v37 = v36;
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v40 = v39;

    }
    else
    {
      v38 = 0;
      v40 = 0;
    }
    SearchExtensionTerm.init(term:searchPrefix:state:)(v38, v40, 0, 0, 2);
    sub_167324((uint64_t)v6);
    v9 = v6;
    goto LABEL_17;
  }
}

void sub_167B40(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8F68);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "searchField", v8);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "hasMarkedText");

    if ((v13 & 1) == 0)
    {
      *(_BYTE *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_didCommit) = 0;
      v14 = HIBYTE(a3) & 0xF;
      if ((a3 & 0x2000000000000000) == 0)
        v14 = a2 & 0xFFFFFFFFFFFFLL;
      v15 = v14 != 0;
      swift_bridgeObjectRetain(a3);
      SearchExtensionTerm.init(term:searchPrefix:state:)(a2, a3, 0, 0, v15);
      sub_167324((uint64_t)v10);
      sub_D1D4((uint64_t)v10, &qword_3D8F68);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_167D08(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8F68);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_didCommit) = 1;
  v7 = objc_msgSend(a1, "text", v4);
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  SearchExtensionTerm.init(term:searchPrefix:state:)(v9, v11, 0, 0, 2);
  sub_167324((uint64_t)v6);
  return sub_D1D4((uint64_t)v6, &qword_3D8F68);
}

id sub_167FF0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchExtensionHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchExtensionHelper()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21SearchExtensionHelper);
}

void sub_168098(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  id v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  char v33;
  uint64_t v34;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D8F70);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v34 - v12;
  v14 = type metadata accessor for SearchExtensionScope(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D184(a1, (uint64_t)v13, (uint64_t *)&unk_3D8F70);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v18(v13, 1, v14) == 1)
  {
    sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D8F70);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v19 = (id)sub_8FF5C((uint64_t)v17, a2);
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if ((v21 & 1) == 0)
      goto LABEL_5;
  }
  v19 = 0;
LABEL_5:
  if (v19 != objc_msgSend(a3, "selectedSegmentIndex"))
    objc_msgSend(a3, "setSelectedSegmentIndex:", v19);
  sub_D184(a1, (uint64_t)v10, (uint64_t *)&unk_3D8F70);
  v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v10, 1, v14);
  if ((_DWORD)v22 == 1)
  {
    sub_D1D4((uint64_t)v10, (uint64_t *)&unk_3D8F70);
    v23 = 0;
    v24 = 0;
  }
  else
  {
    v23 = SearchExtensionScope.placeholderText.getter(v22);
    v24 = v25;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
  }
  v26 = objc_msgSend(a4, "placeholder");
  if (v26)
  {
    v27 = v26;
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v30 = v29;

    if (!v24)
    {
      v32 = 0;
LABEL_22:
      objc_msgSend(a4, "setPlaceholder:", v32, swift_bridgeObjectRelease(v30).n128_f64[0]);

      return;
    }
    if (v28 == v23 && v24 == v30)
    {
      swift_bridgeObjectRelease(v24);
      v31 = v30;
LABEL_20:
      swift_bridgeObjectRelease(v31);
      return;
    }
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v23, v24, 0);
    swift_bridgeObjectRelease(v30);
    if ((v33 & 1) != 0)
    {
      v31 = v24;
      goto LABEL_20;
    }
LABEL_21:
    v32 = String._bridgeToObjectiveC()();
    v30 = v24;
    goto LABEL_22;
  }
  if (v24)
    goto LABEL_21;
}

void sub_168350(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  NSString v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  unsigned int v40;
  _BYTE *Strong;
  uint64_t v42;
  uint64_t v43;
  id v44;
  unsigned __int8 v45;
  id v46;
  uint64_t v47;
  id v48;
  unsigned __int8 v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  char v59[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8F68);
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v56 = (uint64_t)&v54 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v54 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - v15;
  sub_D184(a1, (uint64_t)&v54 - v15, &qword_3D8F68);
  v17 = type metadata accessor for SearchExtensionTerm(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v16, 1, v17);
  v57 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v19;
  v55 = a3;
  if (v20 == 1)
  {
    sub_D1D4((uint64_t)v16, &qword_3D8F68);
    v21 = 0;
    v22 = 0;
  }
  else
  {
    v21 = SearchExtensionTerm.term.getter();
    v22 = v23;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  }
  v24 = objc_msgSend(a2, "text");
  v58 = v18;
  if (!v24)
  {
    if (!v22)
      goto LABEL_17;
    goto LABEL_13;
  }
  v25 = v24;
  v26 = a1;
  v27 = v8;
  v28 = a2;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v31 = v30;

  if (!v22)
  {
    v34 = 0;
    a2 = v28;
    v8 = v27;
    a1 = v26;
    v18 = v58;
    goto LABEL_15;
  }
  if (v29 != v21 || v22 != v31)
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v21, v22, 0);
    swift_bridgeObjectRelease(v31);
    a2 = v28;
    v8 = v27;
    a1 = v26;
    v18 = v58;
    if ((v33 & 1) != 0)
    {
      swift_bridgeObjectRelease(v22);
      goto LABEL_17;
    }
LABEL_13:
    v34 = String._bridgeToObjectiveC()();
    v31 = v22;
LABEL_15:
    objc_msgSend(a2, "setText:", v34, swift_bridgeObjectRelease(v31).n128_f64[0]);

    goto LABEL_17;
  }
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v31);
  a2 = v28;
  v8 = v27;
  a1 = v26;
  v18 = v58;
LABEL_17:
  sub_D184(a1, (uint64_t)v13, &qword_3D8F68);
  v35 = v57;
  if (v57((uint64_t)v13, 1, v17) == 1)
  {
    sub_D1D4((uint64_t)v13, &qword_3D8F68);
  }
  else
  {
    v36 = SearchExtensionTerm.state.getter();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
    if ((static SearchExtensionTerm.State.== infix(_:_:)(v36, 2) & 1) != 0)
    {
      v37 = v55 + 16;
      v38 = a2;
      v39 = objc_msgSend(a2, "searchTextField");
      v40 = objc_msgSend(v39, "isFirstResponder");

      if (v40)
        objc_msgSend(v38, "resignFirstResponder");
      swift_beginAccess(v37, v59, 0, 0);
      Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v37);
      a2 = v38;
      if (Strong)
      {
        Strong[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchExtensionHelper_didCommit] = 1;

      }
    }
  }
  v42 = v56;
  sub_D184(a1, v56, &qword_3D8F68);
  if (v35(v42, 1, v17) == 1)
  {
    sub_D1D4(v42, &qword_3D8F68);
  }
  else
  {
    v43 = SearchExtensionTerm.state.getter();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v42, v17);
    if ((static SearchExtensionTerm.State.== infix(_:_:)(v43, 1) & 1) != 0)
    {
      v44 = objc_msgSend(a2, "searchTextField");
      v45 = objc_msgSend(v44, "isFirstResponder");

      if ((v45 & 1) == 0)
      {
        v46 = objc_msgSend(a2, "searchTextField");
        objc_msgSend(v46, "becomeFirstResponder");

      }
    }
  }
  sub_D184(a1, (uint64_t)v8, &qword_3D8F68);
  if (v35((uint64_t)v8, 1, v17) == 1)
  {
    sub_D1D4((uint64_t)v8, &qword_3D8F68);
  }
  else
  {
    v47 = SearchExtensionTerm.state.getter();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v17);
    if ((static SearchExtensionTerm.State.== infix(_:_:)(v47, 0) & 1) != 0)
    {
      v48 = objc_msgSend(a2, "searchTextField");
      v49 = objc_msgSend(v48, "isFirstResponder");

      if ((v49 & 1) == 0)
      {
        v50 = objc_msgSend(a2, "searchTextField");
        objc_msgSend(v50, "becomeFirstResponder");

        v51 = objc_msgSend(a2, "searchTextField");
        v52 = objc_msgSend(a2, "searchTextField");
        v53 = objc_msgSend(v52, "textualRange");

        objc_msgSend(v51, "setSelectedTextRange:", v53);
      }
    }
  }
}

void sub_1688AC(_BYTE *a1, uint64_t a2, void *a3)
{
  id *v4;
  id v5;
  _BYTE v6[24];

  v4 = (id *)(a2 + 16);
  if (*a1 == 1)
  {
    swift_beginAccess(v4, v6, 0, 0);
    if (!*v4)
      return;
    v5 = *v4;
    sub_1ECE78(a3);
  }
  else
  {
    swift_beginAccess(v4, v6, 0, 0);
    if (!*v4)
      return;
    v5 = *v4;
    sub_1ECCB0((uint64_t)a3);
  }

}

void sub_168938(_BYTE *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __n128 v13;
  double v14;
  NSString v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  void *object;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  Swift::String v23;

  v4 = type metadata accessor for SearchExtensionScope(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D8F70);
  v9 = __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*a1 != 1)
  {
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v23._object = (void *)0xEC00000079726172;
    v17._object = (void *)0x80000000003113F0;
    v17._countAndFlagsBits = 0xD000000000000015;
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v23._countAndFlagsBits = 0x62694C2072756F59;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v23)._object;

LABEL_6:
    v15 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(object).n128_u64[0];
    goto LABEL_7;
  }
  v12 = SearchExtension.selectedScope.getter(v9);
  CurrentValueSubject.value.getter(v11);
  v13 = swift_release(v12);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v5 + 48))(v11, 1, v4, v13))
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v5 + 16))(v7, v11, v4);
    v20 = sub_D1D4((uint64_t)v11, (uint64_t *)&unk_3D8F70);
    SearchExtensionScope.placeholderText.getter(v20);
    object = v21;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_6;
  }
  sub_D1D4((uint64_t)v11, (uint64_t *)&unk_3D8F70);
  v15 = 0;
LABEL_7:
  objc_msgSend(a2, "setPlaceholder:", v15, v14);

}

uint64_t sub_168B38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  __n128 v27;
  char *v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v2 = type metadata accessor for SearchExtensionScope(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v34 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D8F90);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D8F70);
  __chkstk_darwin(v8);
  v35 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - v11;
  __chkstk_darwin(v13);
  v15 = (char **)((char *)&v34 - v14);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v34 - v18;
  result = SearchExtension.scopes.getter(v17);
  v21 = result;
  if (*(_QWORD *)(result + 16) <= a1)
  {
    v22 = 1;
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v19, v22, 1, v2);
    v23 = swift_bridgeObjectRelease(v21);
    v24 = SearchExtension.selectedScope.getter(v23);
    CurrentValueSubject.value.getter(v15);
    swift_release(v24);
    v25 = (uint64_t)&v7[*(int *)(v5 + 48)];
    sub_D184((uint64_t)v15, (uint64_t)v7, (uint64_t *)&unk_3D8F70);
    sub_D184((uint64_t)v19, v25, (uint64_t *)&unk_3D8F70);
    v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v26((uint64_t)v7, 1, v2) == 1)
    {
      sub_D1D4((uint64_t)v15, (uint64_t *)&unk_3D8F70);
      if (v26(v25, 1, v2) == 1)
      {
        sub_D1D4((uint64_t)v7, (uint64_t *)&unk_3D8F70);
        return sub_D1D4((uint64_t)v19, (uint64_t *)&unk_3D8F70);
      }
    }
    else
    {
      sub_D184((uint64_t)v7, (uint64_t)v12, (uint64_t *)&unk_3D8F70);
      if (v26(v25, 1, v2) != 1)
      {
        v28 = v34;
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v34, v25, v2);
        v29 = sub_89A0((unint64_t *)&unk_3D34C0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchExtensionScope, (uint64_t)&protocol conformance descriptor for SearchExtensionScope);
        v30 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v28, v2, v29);
        v31 = *(void (**)(char *, uint64_t))(v3 + 8);
        v31(v28, v2);
        sub_D1D4((uint64_t)v15, (uint64_t *)&unk_3D8F70);
        v31(v12, v2);
        sub_D1D4((uint64_t)v7, (uint64_t *)&unk_3D8F70);
        if ((v30 & 1) != 0)
          return sub_D1D4((uint64_t)v19, (uint64_t *)&unk_3D8F70);
LABEL_12:
        v32 = SearchExtension.selectedScope.getter(v27);
        v33 = v35;
        sub_D184((uint64_t)v19, v35, (uint64_t *)&unk_3D8F70);
        CurrentValueSubject.value.setter(v33);
        swift_release(v32);
        return sub_D1D4((uint64_t)v19, (uint64_t *)&unk_3D8F70);
      }
      sub_D1D4((uint64_t)v15, (uint64_t *)&unk_3D8F70);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    }
    sub_D1D4((uint64_t)v7, (uint64_t *)&unk_3D8F90);
    goto LABEL_12;
  }
  if ((a1 & 0x8000000000000000) == 0)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v19, result+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * a1, v2);
    v22 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_168ED8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_168EFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_168F30(uint64_t a1)
{
  uint64_t v1;

  return sub_1664F0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_168F3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_168F64(uint64_t a1)
{
  uint64_t v1;

  sub_168350(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_168F6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_168F98(_BYTE *a1)
{
  uint64_t v1;

  sub_1688AC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_168FD0(_BYTE *a1)
{
  uint64_t v1;

  sub_168938(a1, *(void **)(v1 + 16));
}

uint64_t sub_168FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_169020()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_169054(uint64_t a1)
{
  uint64_t v1;

  sub_168098(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

char *sub_169060(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  objc_class *v20;
  _BYTE *v21;
  char *v22;
  id v23;
  char *v24;
  double v25;
  char *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  Class isa;
  id v55;
  id v57;
  objc_super v58;
  objc_super v59;
  _QWORD v60[11];
  __int16 v61;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_rateAction] = 0;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_stackView;
  v11 = objc_allocWithZone((Class)UIStackView);
  v12 = v4;
  v13 = objc_msgSend(v11, "init");
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setAxis:", 0);
  objc_msgSend(v13, "setSpacing:", 16.0);
  objc_msgSend(v13, "setAlignment:", 3);
  *(_QWORD *)&v4[v10] = v13;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF640 != -1)
    swift_once(&qword_3CF640, sub_142390);
  v60[0] = qword_3FC6F0;
  v60[1] = *(_QWORD *)algn_3FC6F8;
  v60[2] = qword_3FC700;
  v60[3] = qword_3FC708;
  v60[4] = qword_3FC710;
  v60[5] = *(_QWORD *)byte_3FC718;
  v60[6] = qword_3FC720;
  v60[7] = qword_3FC728;
  v60[8] = qword_3FC730;
  v60[9] = qword_3FC738;
  v60[10] = qword_3FC740;
  v61 = word_3FC748;
  sub_DDA0((void *)qword_3FC6F0, *(uint64_t *)algn_3FC6F8, qword_3FC700, qword_3FC708, qword_3FC710, byte_3FC718[0], (void *)qword_3FC720, qword_3FC728, qword_3FC730, qword_3FC738, qword_3FC740, word_3FC748, SHIBYTE(word_3FC748));
  v14 = sub_A96AC((uint64_t)v60, 2, 4, 0);
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_titleLabel;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_titleLabel] = v14;
  v16 = (void *)objc_opt_self(UIColor);
  v17 = v14;
  v18 = objc_msgSend(v16, "secondaryLabelColor");
  objc_msgSend(v17, "setTextColor:", v18);

  v19 = *(id *)&v12[v15];
  static UILayoutPriority.highestBreakable.getter();
  objc_msgSend(v19, "setContentCompressionResistancePriority:forAxis:", 0);

  v20 = (objc_class *)type metadata accessor for StarRatingControl();
  v21 = objc_allocWithZone(v20);
  *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_starCount] = 5;
  v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_hasRTLTransformSet] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_lastSentRating] = 0;
  v59.receiver = v21;
  v59.super_class = v20;
  v22 = (char *)objc_msgSendSuper2(&v59, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v23 = objc_msgSend(v16, "clearColor");
  objc_msgSend(v22, "setBackgroundColor:", v23);

  objc_msgSend(v22, "setContentMode:", 3);
  *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_ratingControl] = v22;
  v24 = v22;
  LODWORD(v25) = 1148846080;
  objc_msgSend(v24, "setContentHuggingPriority:forAxis:", 0, v25);

  v58.receiver = v12;
  v58.super_class = ObjectType;
  v26 = (char *)objc_msgSendSuper2(&v58, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v26, "setPreservesSuperviewLayoutMargins:", 1);
  v27 = objc_msgSend(v26, "contentView");
  objc_msgSend(v27, "setPreservesSuperviewLayoutMargins:", 1);

  v28 = OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_stackView;
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_titleLabel;
  objc_msgSend(*(id *)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_stackView], "addArrangedSubview:", *(_QWORD *)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_titleLabel]);
  v30 = OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_ratingControl;
  objc_msgSend(*(id *)&v26[v28], "addArrangedSubview:", *(_QWORD *)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_ratingControl]);
  v31 = objc_msgSend(v26, "contentView");
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v26[v28]);

  v57 = (id)objc_opt_self(NSLayoutConstraint);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v33 = swift_allocObject(v32, 64, 7);
  *(_OWORD *)(v33 + 16) = xmmword_2F0A20;
  v34 = objc_msgSend(*(id *)&v26[v28], "bottomAnchor");
  v35 = objc_msgSend(v26, "contentView");
  v36 = objc_msgSend(v35, "bottomAnchor");

  v37 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v36, -12.0);
  *(_QWORD *)(v33 + 32) = v37;
  v38 = objc_msgSend(*(id *)&v26[v29], "firstBaselineAnchor");
  v39 = objc_msgSend(v26, "contentView");
  v40 = objc_msgSend(v39, "topAnchor");

  v41 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v40, 32.0);
  *(_QWORD *)(v33 + 40) = v41;
  v42 = objc_msgSend(*(id *)&v26[v28], "leadingAnchor");
  v43 = objc_msgSend(v26, "contentView");
  v44 = objc_msgSend(v43, "layoutMarginsGuide");

  v45 = objc_msgSend(v44, "leadingAnchor");
  v46 = objc_msgSend(v42, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v33 + 48) = v46;
  v47 = objc_msgSend(*(id *)&v26[v28], "trailingAnchor");
  v48 = objc_msgSend(v26, "contentView");
  v49 = objc_msgSend(v48, "layoutMarginsGuide");

  v50 = objc_msgSend(v49, "trailingAnchor");
  v51 = objc_msgSend(v47, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v33 + 56) = v51;
  v60[0] = v33;
  specialized Array._endMutation()(v52);
  v53 = v60[0];
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v57, "activateConstraints:", isa, swift_bridgeObjectRelease(v53).n128_f64[0]);

  objc_msgSend(*(id *)&v26[v30], "addTarget:action:forControlEvents:", v26, "ratingChangedWithSender:", 4096);
  v55 = objc_msgSend(v26, "traitCollection");
  sub_16974C(v55);

  return v26;
}

id sub_16974C(void *a1)
{
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = objc_msgSend(a1, "horizontalSizeClass") == (char *)&dword_0 + 1;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_stackView;
  if (v2)
    v4 = 0;
  else
    v4 = 3;
  if (v2)
    v5 = 1;
  else
    v5 = 4;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_stackView), "setAxis:", v2);
  objc_msgSend(*(id *)(v1 + v3), "setAlignment:", v4);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_titleLabel), "setTextAlignment:", v5);
}

void sub_1697F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __n128 v40;
  unsigned int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  __n128 v49;
  char *v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  __n128 v58;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t ObjectType;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  _QWORD v71[4];
  _QWORD v72[7];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v69 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActionMetrics(0);
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  __chkstk_darwin(v5);
  v66 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v65 = (char *)v59 - v9;
  v10 = type metadata accessor for HttpTemplateSubstitutions(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D90F0);
  __chkstk_darwin(v14);
  v16 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for HttpTemplateParameter(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v70 = (char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_rateAction];
  if (v20)
  {
    v63 = v3;
    swift_retain(v20);
    v22 = HttpTemplateAction.parameters.getter(v21);
    v23 = v22;
    if (*(_QWORD *)(v22 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v16, v22 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v17);
      v24 = 0;
    }
    else
    {
      v24 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v24, 1, v17);
    v25 = swift_bridgeObjectRelease(v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48))(v16, 1, v17, v25) == 1)
    {
      swift_release(v20);
      sub_D1D4((uint64_t)v16, &qword_3D90F0);
    }
    else
    {
      v59[1] = v2;
      v61 = v11;
      v62 = v10;
      v26 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v27 = v70;
      v60 = v17;
      v26(v70, v16, v17);
      v72[0] = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_ratingControl]
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating);
      v28 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
      v30 = v29;
      v31 = sub_16A658((uint64_t)_swiftEmptyArrayStorage);
      v32 = sub_16A658((uint64_t)_swiftEmptyArrayStorage);
      v33 = sub_272D78((uint64_t)_swiftEmptyArrayStorage);
      HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:)(v31, v32, v33);
      HttpTemplateSubstitutions.setParameter(value:for:)(v28, v30, v27);
      swift_bridgeObjectRelease(v30);
      v34 = swift_retain(v20);
      v35 = Action.uniqueId.getter(v34);
      v37 = v36;
      swift_release(v20);
      v38 = swift_allocObject(&unk_386368, 24, 7);
      swift_unknownObjectWeakInit(v38 + 16, v1);
      v39 = (_QWORD *)swift_allocObject(&unk_386390, 40, 7);
      v39[2] = v38;
      v39[3] = v35;
      v39[4] = v37;
      v40 = swift_retain(v38);
      v41 = static Link.Presentation.textFollowsTintColor.getter(v40);
      v42 = Link.Presentation.init(rawValue:)(0);
      v43 = Link.Presentation.init(rawValue:)(v42);
      v44 = Link.Presentation.init(rawValue:)(v43 & v41);
      if (v44 != v41)
      {
        v44 = Link.Presentation.init(rawValue:)(v42 | v41);
        v42 = v44;
      }
      v45 = v65;
      static ActionMetrics.notInstrumented.getter(v44);
      v46 = type metadata accessor for ClosureAction(0);
      swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
      v47 = ClosureAction.init(title:presentationStyle:actionMetrics:closure:)(0, 0, v42, v45, sub_16A8D4, v39);
      v48 = swift_release(v38);
      HttpTemplateSubstitutions.successAction.setter(v47, v48);
      v49 = swift_retain(v20);
      v50 = v66;
      dispatch thunk of Action.actionMetrics.getter(v49);
      v51 = swift_release(v20);
      v52 = HttpTemplateAction.makeAction(with:actionMetrics:)(v13, v50, v51);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v50, v68);
      v72[3] = type metadata accessor for HttpAction(0);
      v72[4] = sub_239FC(&qword_3D90F8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for HttpAction, (uint64_t)&protocol conformance descriptor for Action);
      v53 = ObjectType;
      v71[3] = ObjectType;
      v72[0] = v52;
      v71[0] = v1;
      v55 = sub_239FC(&qword_3D90D8, v54, (uint64_t (*)(uint64_t))type metadata accessor for ProductTapToRateCollectionViewCell, (uint64_t)&unk_2FA634);
      swift_retain(v52);
      v56 = v1;
      v57 = ShelfUIKitCell.perform(_:from:in:)(v72, v71, v1, v53, v55);
      swift_release(v20);
      swift_release(v52);
      v58 = swift_release(v57);
      (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v13, v62, v58);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v70, v60);
      sub_D1D4((uint64_t)v71, &qword_3D1A70);
      __swift_destroy_boxed_opaque_existential_0(v72);
    }
  }
}

void sub_169EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *object;
  _BYTE v21[24];
  _BYTE v22[24];
  Swift::String v23;

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (NSString)Strong;
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_rateAction);
    if (v8)
    {
      swift_retain(*(_QWORD *)(Strong
                             + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_rateAction));

      v9 = Action.uniqueId.getter();
      v11 = v10;
      swift_release(v8);
      if (v9 == a2 && v11 == a3)
      {
        swift_bridgeObjectRelease(a3);
      }
      else
      {
        v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, a2, a3, 0);
        swift_bridgeObjectRelease(v11);
        if ((v13 & 1) == 0)
          return;
      }
      swift_beginAccess(v5, v21, 0, 0);
      v14 = swift_unknownObjectWeakLoadStrong(v5);
      if (!v14)
        return;
      v15 = (void *)v14;
      v16 = objc_retain(*(id *)(v14
                              + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_titleLabel));

      v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v23._object = (void *)0xE000000000000000;
      v18._object = (void *)0x80000000003114D0;
      v18._countAndFlagsBits = 0xD000000000000018;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      v23._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v23)._object;

      v7 = String._bridgeToObjectiveC()();
      objc_msgSend(v16, "setText:", v7, swift_bridgeObjectRelease(object).n128_f64[0]);

    }
  }
}

uint64_t type metadata accessor for ProductTapToRateCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell);
}

uint64_t sub_16A214()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_titleLabel);
  TapToRate.title.getter();
  if (v2)
  {
    v4 = v2;
    v5 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v3 = swift_bridgeObjectRelease(v4).n128_u64[0];
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v1, "setText:", v5, v3);

  v6 = TapToRate.rateAction.getter();
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_rateAction);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_rateAction) = v6;
  return swift_release(v7);
}

uint64_t sub_16A2A4()
{
  return sub_16A214();
}

uint64_t sub_16A2AC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_objectGraph));
}

uint64_t sub_16A2BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_16A2F0(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D90E8, v3, (uint64_t (*)(uint64_t))type metadata accessor for ProductTapToRateCollectionViewCell, (uint64_t)&unk_2FA6A4);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

void sub_16A348()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "ShelfKitCollectionViews/ProductTapToRateCollectionViewCell.swift", 64, 2, 128, 0);
  __break(1u);
}

uint64_t sub_16A390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D90E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductTapToRateCollectionViewCell, (uint64_t)&unk_2FA6A4);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_16A3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShelfCellListSeparatorMode(0);
  __swift_allocate_value_buffer(v8, qword_3FCA70);
  __swift_project_value_buffer(v8, (uint64_t)qword_3FCA70);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ShelfCellListSeparatorMode.Layout.marginToMargin(_:), v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Placement.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v3, v7);
}

uint64_t sub_16A4DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3CF718 != -1)
    swift_once(&qword_3CF718, sub_16A3C4);
  v2 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_3FCA70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_16A54C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D90C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductTapToRateCollectionViewCell, (uint64_t)&unk_2FA524);
}

uint64_t sub_16A578(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D90C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductTapToRateCollectionViewCell, (uint64_t)&unk_2FA57C);
}

uint64_t sub_16A5A4(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C30, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductTapToRateCollectionViewCell, (uint64_t)&unk_2FA604);
}

uint64_t sub_16A5D0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D90D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductTapToRateCollectionViewCell, (uint64_t)&unk_2FA5DC);
}

uint64_t sub_16A5FC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D90D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProductTapToRateCollectionViewCell, (uint64_t)&unk_2FA634);
}

uint64_t sub_16A628()
{
  return sub_239FC(&qword_3D90E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TapToRate, (uint64_t)&protocol conformance descriptor for TapToRate);
}

unint64_t sub_16A658(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D9100);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_1D358(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_16A778()
{
  char *v0;
  uint64_t v1;
  id v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_rateAction] = 0;
  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews34ProductTapToRateCollectionViewCell_stackView;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v2, "setAxis:", 0);
  objc_msgSend(v2, "setSpacing:", 16.0);
  objc_msgSend(v2, "setAlignment:", 3);
  *(_QWORD *)&v0[v1] = v2;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ProductTapToRateCollectionViewCell.swift", 64, 2, 94, 0);
  __break(1u);
}

uint64_t sub_16A884()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_16A8A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_16A8D4()
{
  uint64_t *v0;

  sub_169EBC(v0[2], v0[3], v0[4]);
}

void sub_16A8E0()
{
  qword_3D9108 = 0x4020000000000000;
}

void sub_16A8F0()
{
  qword_3D9110 = 0x3FF0000000000000;
}

void sub_16A900()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.08);

  qword_3D9118 = (uint64_t)v1;
}

void sub_16A968()
{
  qword_3D9120 = 0x404C000000000000;
}

void sub_16A978()
{
  qword_3D9128 = 0x4056800000000000;
}

id sub_16A98C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___gradientView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___gradientView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___gradientView);
  }
  else
  {
    v4 = sub_16A9E8();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_16A9E8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  NSString *v8;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  CAGradientLayerType v14;

  v0 = type metadata accessor for GradientView();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_2EFC90;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "systemBackgroundColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v3 + 32) = v6;
  v7 = objc_msgSend(v4, "systemBackgroundColor");
  *(_QWORD *)(v3 + 40) = v7;
  v10 = (unint64_t)v3;
  specialized Array._endMutation()(v7);
  v11 = 0;
  v12 = xmmword_2F1D40;
  v13 = xmmword_2F1D50;
  v14 = kCAGradientLayerAxial;
  v8 = kCAGradientLayerAxial;
  sub_ECA74(&v10);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0, v10, v11, v12, v13, v14);
  return v1;
}

id sub_16AB2C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___hStackHeightConstraint;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___hStackHeightConstraint);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___hStackHeightConstraint);
  }
  else
  {
    v4 = sub_16AB88();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_16AB88()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  unint64_t v5;
  id v6;
  id v7;
  id v8;
  id v10;
  char v11;
  char v12;
  id v13;
  id v14;

  v1 = v0;
  v2 = sub_16ADB8();
  v3 = UpsellInformation.showGridArtworks.getter(v2);
  if ((static SizeClass.isPhone8RatioOrSmaller.getter() & 1) != 0)
  {
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v3).n128_u64[0];
LABEL_4:
    v6 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_horizontalStack], "heightAnchor", v4);
    v7 = objc_msgSend(v6, "constraintEqualToConstant:", 0.0);
    goto LABEL_5;
  }
  v5 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)&v4 = swift_bridgeObjectRelease(v3).n128_u64[0];
  if (v5 < 2)
    goto LABEL_4;
  v10 = objc_msgSend(v1, "traitCollection", v4);
  v11 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v11 & 1) != 0)
  {
    v6 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_horizontalStack], "heightAnchor");
    if (qword_3CF738 != -1)
      swift_once(&qword_3CF738, sub_16A968);
    v7 = objc_msgSend(v6, "constraintEqualToConstant:", *(double *)&qword_3D9120);
  }
  else
  {
    v12 = SizeClass.isWideHorizontal.getter(v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___sizeClass]);
    v6 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_horizontalStack], "heightAnchor");
    if ((v12 & 1) == 0)
    {
      v13 = objc_msgSend(v1, "layoutMarginsGuide");
      v14 = objc_msgSend(v13, "widthAnchor");

      v8 = objc_msgSend(v6, "constraintEqualToAnchor:multiplier:", v14, 0.5);
      v6 = v14;
      goto LABEL_6;
    }
    if (qword_3CF740 != -1)
      swift_once(&qword_3CF740, sub_16A978);
    v7 = objc_msgSend(v6, "constraintEqualToConstant:", *(double *)&qword_3D9128);
  }
LABEL_5:
  v8 = v7;
LABEL_6:

  return v8;
}

uint64_t sub_16ADB8()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t result;
  double Width;
  CGRect v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___sizeClass;
  result = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___sizeClass];
  if ((_DWORD)result == 8)
  {
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v4);
    result = SizeClass.init(width:)(Width);
    v0[v1] = result;
  }
  return result;
}

void sub_16AE00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  Class isa;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  Class v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  uint64_t v52;
  Swift::OpaquePointer v53;
  char *v54;
  char *v55;
  double v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  char *v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  id v72;
  __int128 v73;
  void *v74;

  v1 = v0;
  v2 = type metadata accessor for ArtworkModel(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v63 - v6;
  v71 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
  v8 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v70 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)objc_opt_self(NSLayoutConstraint);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v12 = swift_allocObject(v11, 40, 7);
  v73 = xmmword_2F11D0;
  *(_OWORD *)(v12 + 16) = xmmword_2F11D0;
  v13 = sub_16AB2C();
  *(_QWORD *)(v12 + 32) = v13;
  v74 = (void *)v12;
  specialized Array._endMutation()(v13);
  v14 = v74;
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v16 = sub_16AB88();
  v17 = *(void **)(v1
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___hStackHeightConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___hStackHeightConstraint) = v16;

  v69 = v11;
  v18 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v18 + 16) = v73;
  v19 = sub_16AB2C();
  *(_QWORD *)(v18 + 32) = v19;
  v74 = (void *)v18;
  specialized Array._endMutation()(v19);
  v20 = v74;
  v21 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "activateConstraints:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

  v72 = *(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_horizontalStack);
  *(_QWORD *)&v73 = v1;
  v22 = objc_msgSend(v72, "arrangedSubviews");
  v23 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

  if ((unint64_t)v24 >> 62)
  {
    if (v24 < 0)
      v29 = v24;
    else
      v29 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v24);
    v25 = _CocoaArrayWrapper.endIndex.getter(v29);
    if (!v25)
      goto LABEL_13;
  }
  else
  {
    v25 = *(_QWORD *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v24);
    if (!v25)
      goto LABEL_13;
  }
  if (v25 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v25; ++i)
  {
    if ((v24 & 0xC000000000000001) != 0)
      v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v24);
    else
      v27 = *(id *)(v24 + 8 * i + 32);
    v28 = v27;
    objc_msgSend(v27, "removeFromSuperview");

  }
LABEL_13:
  swift_bridgeObjectRelease_n(v24, 2);
  v30 = sub_16A98C();
  objc_msgSend(v30, "removeFromSuperview");

  v31 = sub_16ADB8();
  v32 = UpsellInformation.showGridArtworks.getter(v31);
  if ((static SizeClass.isPhone8RatioOrSmaller.getter() & 1) != 0)
  {
    v33 = (_QWORD *)v32;
LABEL_15:
    swift_bridgeObjectRelease(v33);
    return;
  }
  v34 = *(_QWORD *)(v32 + 16);
  swift_bridgeObjectRelease(v32);
  if (v34 >= 2)
  {
    v35 = (void *)v73;
    v36 = sub_16A98C();
    objc_msgSend(v35, "insertSubview:below:", v36, v72);

    v37 = sub_16A98C();
    UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v37, 0, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);

    v33 = sub_16B9E4(v38);
    v39 = v33[2];
    if (!v39)
      goto LABEL_15;
    v40 = *(unsigned __int8 *)(v8 + 80);
    v64 = v33;
    v41 = (uint64_t)v33 + ((v40 + 32) & ~v40);
    v42 = *(_QWORD *)(v8 + 72);
    v67 = xmmword_2EFC90;
    v43 = (uint64_t)v70;
    v68 = v42;
    v65 = v5;
    v66 = v7;
    do
    {
      sub_19C4C(v41, v43, type metadata accessor for UpsellShowGridView.ArtworkColumn);
      if (swift_getEnumCaseMultiPayload(v43, v71) == 1)
      {
        v48 = v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D9188) + 48);
        sub_2376C(v43, (uint64_t)v7);
        sub_2376C(v48, (uint64_t)v5);
        v49 = sub_16CD68((uint64_t)v7);
        v50 = sub_16CD68((uint64_t)v5);
        sub_16C94C(v49, (uint64_t)v7);
        sub_16C94C(v50, (uint64_t)v5);
        v51 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
        objc_msgSend(v51, "setAxis:", 1);
        if (qword_3CF720 != -1)
          swift_once(&qword_3CF720, sub_16A8E0);
        objc_msgSend(v51, "setSpacing:", *(double *)&qword_3D9108);
        v52 = swift_allocObject(v69, 48, 7);
        *(_OWORD *)(v52 + 16) = v67;
        *(_QWORD *)(v52 + 32) = v49;
        *(_QWORD *)(v52 + 40) = v50;
        v74 = (void *)v52;
        specialized Array._endMutation()(v52);
        v53._rawValue = v74;
        v54 = v49;
        v55 = v50;
        UIStackView.addArrangedSubviews(_:)(v53);
        *(_QWORD *)&v56 = swift_bridgeObjectRelease(v53._rawValue).n128_u64[0];
        objc_msgSend(v72, "addArrangedSubview:", v51, v56);
        v57 = objc_msgSend(v54, "heightAnchor");
        v58 = objc_msgSend(v54, "widthAnchor");
        v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

        objc_msgSend(v59, "setActive:", 1);
        v60 = objc_msgSend(v55, "heightAnchor");
        v61 = objc_msgSend(v55, "widthAnchor");
        v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

        objc_msgSend(v62, "setActive:", 1);
        v5 = v65;
        sub_FA4C((uint64_t)v65, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
        v43 = (uint64_t)v70;
        v42 = v68;
        v7 = v66;
      }
      else
      {
        sub_2376C(v43, (uint64_t)v7);
        v44 = sub_16CD68((uint64_t)v7);
        sub_16C94C(v44, (uint64_t)v7);
        objc_msgSend(v72, "addArrangedSubview:", v44);
        v45 = objc_msgSend(v44, "heightAnchor");
        v46 = objc_msgSend(v44, "widthAnchor");
        v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

        objc_msgSend(v47, "setActive:", 1);
      }
      sub_FA4C((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      v41 += v42;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease(v64);
  }
}

char *sub_16B544(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v7;
  id v8;
  _BYTE *v9;
  id v10;
  id v11;
  void *v12;
  char *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  Class isa;
  id v32;
  objc_super v33;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_horizontalStack;
  v8 = objc_allocWithZone((Class)UIStackView);
  v9 = v3;
  v10 = objc_msgSend(v8, "init");
  objc_msgSend(v10, "setAxis:", 0);
  if (qword_3CF720 != -1)
    swift_once(&qword_3CF720, sub_16A8E0);
  objc_msgSend(v10, "setSpacing:", *(double *)&qword_3D9108);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v9[v7] = v10;
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___gradientView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___hStackHeightConstraint] = 0;
  v9[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___sizeClass] = 8;
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_upsellInformation] = a1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_objectGraph] = a2;
  v32 = a1;
  swift_retain(a2);

  v33.receiver = v9;
  v33.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v33, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v11, "setClipsToBounds:", 1);
  v12 = (void *)objc_opt_self(UIColor);
  v13 = (char *)v11;
  v14 = objc_msgSend(v12, "clearColor");
  objc_msgSend(v13, "setBackgroundColor:", v14);

  objc_msgSend(v13, "setPreservesSuperviewLayoutMargins:", 1);
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_horizontalStack;
  v16 = *(void **)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_horizontalStack];
  objc_msgSend(v13, "addSubview:", v16);
  v17 = (void *)objc_opt_self(NSLayoutConstraint);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v19 = swift_allocObject(v18, 64, 7);
  *(_OWORD *)(v19 + 16) = xmmword_2F0A20;
  v20 = objc_msgSend(v16, "topAnchor");
  v21 = objc_msgSend(v13, "topAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v19 + 32) = v22;
  v23 = objc_msgSend(*(id *)&v13[v15], "bottomAnchor");
  v24 = objc_msgSend(v13, "bottomAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v19 + 40) = v25;
  v26 = objc_msgSend(*(id *)&v13[v15], "centerXAnchor");
  v27 = objc_msgSend(v13, "centerXAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v19 + 48) = v28;
  v29 = sub_16AB2C();
  *(_QWORD *)(v19 + 56) = v29;
  specialized Array._endMutation()(v29);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "activateConstraints:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

  sub_16AE00();
  swift_release(a2);
  return v13;
}

_QWORD *sub_16B9E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char HasReferral;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v1 = UpsellInformation.showGridArtworks.getter(a1);
  v2 = sub_16ADB8();
  if ((SizeClass.isWideHorizontal.getter(v2) & 1) != 0)
  {
    v3 = *(_QWORD *)(v1 + 16);
    if (v3 != 2)
      goto LABEL_9;
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
    v5 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 72);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject(v4, v9 + 2 * v7, v8 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_2EFA20;
    v11 = v10 + v9;
    v12 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
    v13 = v1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    sub_19C4C(v13, v11, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    swift_storeEnumTagMultiPayload(v11, v5, 0);
    if (*(_QWORD *)(v1 + 16) >= 2uLL)
    {
LABEL_16:
      v35 = v11 + v7;
      v36 = *(_QWORD *)(v12 + 72);
      goto LABEL_17;
    }
    __break(1u);
  }
  HasReferral = UpsellInformation.showGridArtworksHasReferralShow.getter();
  v15 = *(_QWORD *)(v1 + 16);
  v16 = v15 == 2;
  if ((HasReferral & 1) == 0)
    goto LABEL_13;
  if (v15 == 2)
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
    v5 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
    v18 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v18 + 72);
    v19 = *(unsigned __int8 *)(v18 + 80);
    v20 = (v19 + 32) & ~v19;
    v10 = swift_allocObject(v17, v20 + 2 * v7, v19 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_2EFA20;
    v11 = v10 + v20;
    v12 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
    v13 = v1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    sub_19C4C(v13, v11, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    swift_storeEnumTagMultiPayload(v11, v5, 0);
    v3 = *(_QWORD *)(v1 + 16);
    if (v3 < 2)
    {
      __break(1u);
LABEL_9:
      if (v3 - 3 <= 1)
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
        v5 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
        v22 = *(_QWORD *)(v5 - 8);
        v23 = *(_QWORD *)(v22 + 72);
        v24 = *(unsigned __int8 *)(v22 + 80);
        v25 = (v24 + 32) & ~v24;
        v10 = swift_allocObject(v21, v25 + 3 * v23, v24 | 7);
        *(_OWORD *)(v10 + 16) = xmmword_2F5ED0;
        v26 = v10 + v25;
        v27 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
        v28 = v1 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
        v29 = *(_QWORD *)(v27 + 72);
        sub_19C4C(v28 + v29, v26, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
        result = (_QWORD *)swift_storeEnumTagMultiPayload(v26, v5, 0);
        if (!*(_QWORD *)(v1 + 16))
        {
          __break(1u);
LABEL_75:
          __break(1u);
          goto LABEL_76;
        }
        sub_19C4C(v28, v26 + v23, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
        swift_storeEnumTagMultiPayload(v26 + v23, v5, 0);
        v15 = *(_QWORD *)(v1 + 16);
        v16 = v15 == 3;
        if (v15 < 3)
        {
          __break(1u);
LABEL_13:
          if (!v16)
          {
            if (v15 - 3 <= 6)
            {
              v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
              v5 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
              v52 = *(_QWORD *)(v5 - 8);
              v23 = *(_QWORD *)(v52 + 72);
              v53 = *(unsigned __int8 *)(v52 + 80);
              v54 = (v53 + 32) & ~v53;
              v10 = swift_allocObject(v51, v54 + 3 * v23, v53 | 7);
              *(_OWORD *)(v10 + 16) = xmmword_2F5ED0;
              v26 = v10 + v54;
              v55 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
              v28 = v1 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
              v29 = *(_QWORD *)(v55 + 72);
              sub_19C4C(v28 + v29, v26, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              result = (_QWORD *)swift_storeEnumTagMultiPayload(v26, v5, 0);
              if (*(_QWORD *)(v1 + 16))
              {
                sub_19C4C(v28, v26 + v23, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
                result = (_QWORD *)swift_storeEnumTagMultiPayload(v26 + v23, v5, 0);
                if (*(_QWORD *)(v1 + 16) >= 3uLL)
                  goto LABEL_31;
                goto LABEL_82;
              }
LABEL_81:
              __break(1u);
LABEL_82:
              __break(1u);
              goto LABEL_83;
            }
            if (v15 >= 0xA)
            {
              v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
              v79 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
              v80 = *(_QWORD *)(v79 - 8);
              v81 = *(_QWORD *)(v80 + 72);
              v82 = *(unsigned __int8 *)(v80 + 80);
              v83 = (v82 + 32) & ~v82;
              v10 = swift_allocObject(v78, v83 + 5 * v81, v82 | 7);
              *(_OWORD *)(v10 + 16) = xmmword_2F48B0;
              v84 = v10 + v83;
              v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9188);
              v86 = *(int *)(v85 + 48);
              v87 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
              v88 = v1 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
              v89 = *(_QWORD *)(v87 + 72);
              result = (_QWORD *)sub_19C4C(v88 + 6 * v89, v84, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              if (*(_QWORD *)(v1 + 16) < 9uLL)
              {
LABEL_95:
                __break(1u);
                goto LABEL_96;
              }
              sub_19C4C(v88 + 8 * v89, v84 + v86, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              result = (_QWORD *)swift_storeEnumTagMultiPayload(v84, v79, 1);
              if (*(_QWORD *)(v1 + 16) < 3uLL)
              {
LABEL_96:
                __break(1u);
                goto LABEL_97;
              }
              v90 = *(int *)(v85 + 48);
              result = (_QWORD *)sub_19C4C(v88 + 2 * v89, v84 + v81, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              if (*(_QWORD *)(v1 + 16) < 5uLL)
              {
LABEL_97:
                __break(1u);
                goto LABEL_98;
              }
              sub_19C4C(v88 + 4 * v89, v84 + v81 + v90, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              result = (_QWORD *)swift_storeEnumTagMultiPayload(v84 + v81, v79, 1);
              if (!*(_QWORD *)(v1 + 16))
              {
LABEL_98:
                __break(1u);
                goto LABEL_99;
              }
              v91 = *(int *)(v85 + 48);
              result = (_QWORD *)sub_19C4C(v88, v84 + 2 * v81, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              if (*(_QWORD *)(v1 + 16) < 2uLL)
              {
LABEL_99:
                __break(1u);
                goto LABEL_100;
              }
              sub_19C4C(v88 + v89, v84 + 2 * v81 + v91, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              result = (_QWORD *)swift_storeEnumTagMultiPayload(v84 + 2 * v81, v79, 1);
              if (*(_QWORD *)(v1 + 16) < 4uLL)
              {
LABEL_100:
                __break(1u);
                goto LABEL_101;
              }
              v92 = *(int *)(v85 + 48);
              result = (_QWORD *)sub_19C4C(v88 + 3 * v89, v84 + 3 * v81, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              if (*(_QWORD *)(v1 + 16) < 6uLL)
              {
LABEL_101:
                __break(1u);
                goto LABEL_102;
              }
              sub_19C4C(v88 + 5 * v89, v84 + 3 * v81 + v92, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              result = (_QWORD *)swift_storeEnumTagMultiPayload(v84 + 3 * v81, v79, 1);
              if (*(_QWORD *)(v1 + 16) < 8uLL)
              {
LABEL_102:
                __break(1u);
                goto LABEL_103;
              }
              v93 = v84 + 4 * v81;
              v94 = *(int *)(v85 + 48);
              result = (_QWORD *)sub_19C4C(v88 - v89 + 8 * v89, v93, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              if (*(_QWORD *)(v1 + 16) < 0xAuLL)
              {
LABEL_103:
                __break(1u);
                goto LABEL_104;
              }
              v95 = v93 + v94;
              v96 = v88 + 9 * v89;
LABEL_73:
              sub_19C4C(v96, v95, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
              swift_bridgeObjectRelease(v1);
              v56 = v93;
              v57 = v79;
              v58 = 1;
              goto LABEL_33;
            }
LABEL_63:
            swift_bridgeObjectRelease(v1);
            return _swiftEmptyArrayStorage;
          }
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
          v5 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
          v32 = *(_QWORD *)(v5 - 8);
          v7 = *(_QWORD *)(v32 + 72);
          v33 = *(unsigned __int8 *)(v32 + 80);
          v34 = (v33 + 32) & ~v33;
          v10 = swift_allocObject(v31, v34 + 2 * v7, v33 | 7);
          *(_OWORD *)(v10 + 16) = xmmword_2EFA20;
          v11 = v10 + v34;
          v12 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
          v13 = v1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
          sub_19C4C(v13, v11, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
          result = (_QWORD *)swift_storeEnumTagMultiPayload(v11, v5, 0);
          if (*(_QWORD *)(v1 + 16) >= 2uLL)
            goto LABEL_16;
          goto LABEL_75;
        }
LABEL_31:
        v35 = v26 + 2 * v23;
        v37 = v28 + 2 * v29;
        goto LABEL_32;
      }
      goto LABEL_22;
    }
    goto LABEL_16;
  }
  if (v15 - 3 <= 3)
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
    v5 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
    v39 = *(_QWORD *)(v5 - 8);
    v23 = *(_QWORD *)(v39 + 72);
    v40 = *(unsigned __int8 *)(v39 + 80);
    v41 = (v40 + 32) & ~v40;
    v10 = swift_allocObject(v38, v41 + 3 * v23, v40 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_2F5ED0;
    v26 = v10 + v41;
    v42 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
    v28 = v1 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
    v29 = *(_QWORD *)(v42 + 72);
    sub_19C4C(v28 + v29, v26, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    result = (_QWORD *)swift_storeEnumTagMultiPayload(v26, v5, 0);
    if (!*(_QWORD *)(v1 + 16))
    {
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    sub_19C4C(v28, v26 + v23, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    swift_storeEnumTagMultiPayload(v26 + v23, v5, 0);
    v3 = *(_QWORD *)(v1 + 16);
    if (v3 >= 3)
      goto LABEL_31;
    __break(1u);
LABEL_22:
    if (v3 - 5 <= 1)
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
      v5 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
      v44 = *(_QWORD *)(v5 - 8);
      v45 = *(_QWORD *)(v44 + 72);
      v46 = *(unsigned __int8 *)(v44 + 80);
      v47 = (v46 + 32) & ~v46;
      v10 = swift_allocObject(v43, v47 + 5 * v45, v46 | 7);
      *(_OWORD *)(v10 + 16) = xmmword_2F48B0;
      v48 = v10 + v47;
      v49 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
      v13 = v1 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
      v50 = *(_QWORD *)(v49 + 72);
      sub_19C4C(v13 + 4 * v50, v48, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      result = (_QWORD *)swift_storeEnumTagMultiPayload(v48, v5, 0);
      if (*(_QWORD *)(v1 + 16) >= 2uLL)
      {
        sub_19C4C(v13 + v50, v48 + v45, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
        result = (_QWORD *)swift_storeEnumTagMultiPayload(v48 + v45, v5, 0);
        if (*(_QWORD *)(v1 + 16))
        {
          sub_19C4C(v13, v48 + 2 * v45, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
          result = (_QWORD *)swift_storeEnumTagMultiPayload(v48 + 2 * v45, v5, 0);
          if (*(_QWORD *)(v1 + 16) >= 3uLL)
          {
            sub_19C4C(v13 + 2 * v50, v48 + 3 * v45, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
            result = (_QWORD *)swift_storeEnumTagMultiPayload(v48 + 3 * v45, v5, 0);
            if (*(_QWORD *)(v1 + 16) >= 4uLL)
            {
              v35 = v48 + 4 * v45;
              v36 = 3 * v50;
              goto LABEL_17;
            }
LABEL_80:
            __break(1u);
            goto LABEL_81;
          }
LABEL_79:
          __break(1u);
          goto LABEL_80;
        }
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    if (v3 < 7)
      goto LABEL_63;
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
    v5 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
    v71 = *(_QWORD *)(v5 - 8);
    v72 = *(_QWORD *)(v71 + 72);
    v73 = *(unsigned __int8 *)(v71 + 80);
    v74 = (v73 + 32) & ~v73;
    v10 = swift_allocObject(v70, v74 - v72 + 8 * v72, v73 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_2FA6F0;
    v75 = v10 + v74;
    v76 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
    v13 = v1 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
    v77 = *(_QWORD *)(v76 + 72);
    sub_19C4C(v13 + 6 * v77, v75, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    result = (_QWORD *)swift_storeEnumTagMultiPayload(v75, v5, 0);
    if (*(_QWORD *)(v1 + 16) < 5uLL)
    {
LABEL_89:
      __break(1u);
      goto LABEL_90;
    }
    sub_19C4C(v13 + 4 * v77, v75 + v72, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    result = (_QWORD *)swift_storeEnumTagMultiPayload(v75 + v72, v5, 0);
    if (*(_QWORD *)(v1 + 16) < 2uLL)
    {
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    sub_19C4C(v13 + v77, v75 + 2 * v72, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    result = (_QWORD *)swift_storeEnumTagMultiPayload(v75 + 2 * v72, v5, 0);
    if (!*(_QWORD *)(v1 + 16))
    {
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
    sub_19C4C(v13, v75 + 3 * v72, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    result = (_QWORD *)swift_storeEnumTagMultiPayload(v75 + 3 * v72, v5, 0);
    if (*(_QWORD *)(v1 + 16) < 3uLL)
    {
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    sub_19C4C(v13 + 2 * v77, v75 + 4 * v72, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    result = (_QWORD *)swift_storeEnumTagMultiPayload(v75 + 4 * v72, v5, 0);
    if (*(_QWORD *)(v1 + 16) < 4uLL)
    {
LABEL_93:
      __break(1u);
      goto LABEL_94;
    }
    sub_19C4C(v13 + 3 * v77, v75 + 5 * v72, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    result = (_QWORD *)swift_storeEnumTagMultiPayload(v75 + 5 * v72, v5, 0);
    if (*(_QWORD *)(v1 + 16) < 6uLL)
    {
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    v35 = v75 + 6 * v72;
    v36 = 5 * v77;
LABEL_17:
    v37 = v13 + v36;
LABEL_32:
    sub_19C4C(v37, v35, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    swift_bridgeObjectRelease(v1);
    v56 = v35;
    v57 = v5;
    v58 = 0;
LABEL_33:
    swift_storeEnumTagMultiPayload(v56, v57, v58);
    return (_QWORD *)v10;
  }
  if (v15 - 7 <= 1)
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
    v5 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
    v60 = *(_QWORD *)(v5 - 8);
    v61 = *(_QWORD *)(v60 + 72);
    v62 = *(unsigned __int8 *)(v60 + 80);
    v63 = (v62 + 32) & ~v62;
    v10 = swift_allocObject(v59, v63 + 5 * v61, v62 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_2F48B0;
    v64 = v10 + v63;
    v65 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
    v13 = v1 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
    v66 = *(_QWORD *)(v65 + 72);
    sub_19C4C(v13 + 6 * v66, v64, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    swift_storeEnumTagMultiPayload(v64, v5, 0);
    result = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_3D9188);
    if (*(_QWORD *)(v1 + 16) < 2uLL)
    {
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    v67 = result;
    v68 = *((int *)result + 12);
    result = (_QWORD *)sub_19C4C(v13 + v66, v64 + v61, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    if (*(_QWORD *)(v1 + 16) < 3uLL)
    {
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    sub_19C4C(v13 + 2 * v66, v64 + v61 + v68, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    result = (_QWORD *)swift_storeEnumTagMultiPayload(v64 + v61, v5, 1);
    if (!*(_QWORD *)(v1 + 16))
    {
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    sub_19C4C(v13, v64 + 2 * v61, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    result = (_QWORD *)swift_storeEnumTagMultiPayload(v64 + 2 * v61, v5, 0);
    if (*(_QWORD *)(v1 + 16) < 4uLL)
    {
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    v69 = *((int *)v67 + 12);
    result = (_QWORD *)sub_19C4C(v13 + 3 * v66, v64 + 3 * v61, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    if (*(_QWORD *)(v1 + 16) < 5uLL)
    {
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    sub_19C4C(v13 + 4 * v66, v64 + 3 * v61 + v69, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    result = (_QWORD *)swift_storeEnumTagMultiPayload(v64 + 3 * v61, v5, 1);
    if (*(_QWORD *)(v1 + 16) < 6uLL)
    {
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    v35 = v64 + 4 * v61;
    v36 = 5 * v66;
    goto LABEL_17;
  }
  if (v15 < 9)
    goto LABEL_63;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9190);
  v79 = type metadata accessor for UpsellShowGridView.ArtworkColumn(0);
  v98 = *(_QWORD *)(v79 - 8);
  v99 = *(_QWORD *)(v98 + 72);
  v100 = *(unsigned __int8 *)(v98 + 80);
  v101 = (v100 + 32) & ~v100;
  v10 = swift_allocObject(v97, v101 + 5 * v99, v100 | 7);
  *(_OWORD *)(v10 + 16) = xmmword_2F48B0;
  v102 = v10 + v101;
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9188);
  v104 = *(int *)(v103 + 48);
  v105 = *(_QWORD *)(type metadata accessor for ArtworkModel(0) - 8);
  v106 = v1 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
  v107 = *(_QWORD *)(v105 + 72);
  result = (_QWORD *)sub_19C4C(v106 + 6 * v107, v102, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  if (*(_QWORD *)(v1 + 16) < 9uLL)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  sub_19C4C(v106 + 8 * v107, v102 + v104, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  result = (_QWORD *)swift_storeEnumTagMultiPayload(v102, v79, 1);
  if (*(_QWORD *)(v1 + 16) < 2uLL)
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  v108 = *(int *)(v103 + 48);
  result = (_QWORD *)sub_19C4C(v106 + v107, v102 + v99, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  if (*(_QWORD *)(v1 + 16) < 3uLL)
  {
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  sub_19C4C(v106 + 2 * v107, v102 + v99 + v108, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  result = (_QWORD *)swift_storeEnumTagMultiPayload(v102 + v99, v79, 1);
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  sub_19C4C(v106, v102 + 2 * v99, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  result = (_QWORD *)swift_storeEnumTagMultiPayload(v102 + 2 * v99, v79, 0);
  if (*(_QWORD *)(v1 + 16) < 4uLL)
  {
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  v109 = *(int *)(v103 + 48);
  result = (_QWORD *)sub_19C4C(v106 + 3 * v107, v102 + 3 * v99, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  if (*(_QWORD *)(v1 + 16) < 5uLL)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  sub_19C4C(v106 + 4 * v107, v102 + 3 * v99 + v109, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  result = (_QWORD *)swift_storeEnumTagMultiPayload(v102 + 3 * v99, v79, 1);
  if (*(_QWORD *)(v1 + 16) < 6uLL)
  {
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  v93 = v102 + 4 * v99;
  v110 = *(int *)(v103 + 48);
  result = (_QWORD *)sub_19C4C(v106 + 5 * v107, v93, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  if (*(_QWORD *)(v1 + 16) >= 8uLL)
  {
    v95 = v93 + v110;
    v96 = v106 - v107 + 8 * v107;
    goto LABEL_73;
  }
LABEL_111:
  __break(1u);
  return result;
}

uint64_t sub_16C94C(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  double v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  __n128 v34;
  _QWORD v36[2];
  char *v37;
  char *v38;
  _OWORD v39[2];
  uint64_t v40;

  v36[0] = a2;
  v4 = type metadata accessor for ArtworkAspectRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v38 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v37 = (char *)v36 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v9);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ArtworkModel(0);
  __chkstk_darwin(v12);
  v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkRequest(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C(a2, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  v19 = type metadata accessor for CropCode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  v40 = 0;
  memset(v39, 0, sizeof(v39));
  v20 = (void *)objc_opt_self(UIScreen);
  v21 = objc_msgSend(v20, "mainScreen", v36[0]);
  objc_msgSend(v21, "scale");
  v23 = v22;

  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v14, 2, 0, v11, 0, _swiftEmptyArrayStorage, v39, 200.0, 200.0, v23);
  v24 = *(_QWORD *)(v36[1] + OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_objectGraph);
  v25 = type metadata accessor for ArtworkView(0);
  v26 = sub_54A90();
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v18, v24, 0, v25, v26);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v28 = ArtworkModel.size.getter(v27);
  v29 = &a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
  *(double *)v29 = v28;
  *((_QWORD *)v29 + 1) = v30;
  objc_msgSend(a1, "setNeedsLayout");
  v31 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v37, enum case for ArtworkAspectRule.aspectFill(_:), v4);
  objc_msgSend(a1, "effectiveUserInterfaceLayoutDirection");
  objc_msgSend(a1, "setContentMode:", 6);
  v32 = v38;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v38, v31, v4);
  v33 = &a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule];
  v34 = swift_beginAccess(&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule], v39, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v5 + 40))(v33, v32, v4, v34);
  swift_endAccess(v39);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v31, v4);
}

uint64_t type metadata accessor for UpsellShowGridView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews18UpsellShowGridView);
}

uint64_t type metadata accessor for UpsellShowGridView.ArtworkColumn(uint64_t a1)
{
  uint64_t result;

  result = qword_3D9208;
  if (!qword_3D9208)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UpsellShowGridView.ArtworkColumn);
  return result;
}

char *sub_16CD68(uint64_t a1)
{
  uint64_t v2;
  id v3;
  __n128 v4;
  id v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  unsigned __int8 v19;

  v2 = type metadata accessor for ArtworkView(0);
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (qword_3CF028 != -1)
      swift_once(&qword_3CF028, sub_E308);
    v5 = (id)qword_3FA888;
  }
  else
  {
    v5 = (id)Color.color.getter(*(_QWORD *)(a1 + 56), v4);
  }
  v6 = v5;
  objc_msgSend(v3, "setBackgroundColor:", v5);
  v19 = *((_BYTE *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style);
  *((_BYTE *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style) = 0;
  sub_EB33C(&v19);
  v7 = qword_3CF728;
  v8 = (char *)v3;
  if (v7 != -1)
    swift_once(&qword_3CF728, sub_16A8F0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = qword_3D9110;
  sub_A2A14();

  v9 = qword_3CF730;
  v10 = v8;
  if (v9 != -1)
    swift_once(&qword_3CF730, sub_16A900);
  v11 = (void *)qword_3D9118;
  v12 = *(void **)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3D9118;
  v13 = v11;

  sub_A2A14();
  LODWORD(v14) = 1132068864;
  objc_msgSend(v10, "setContentCompressionResistancePriority:forAxis:", 0, v14);
  LODWORD(v15) = 1132068864;
  objc_msgSend(v10, "setContentCompressionResistancePriority:forAxis:", 1, v15);
  LODWORD(v16) = 1132068864;
  objc_msgSend(v10, "setContentHuggingPriority:forAxis:", 1, v16);
  LODWORD(v17) = 1132068864;
  objc_msgSend(v10, "setContentHuggingPriority:forAxis:", 0, v17);

  return v10;
}

void sub_16CF60()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView_horizontalStack;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v2, "setAxis:", 0);
  if (qword_3CF720 != -1)
    swift_once(&qword_3CF720, sub_16A8E0);
  objc_msgSend(v2, "setSpacing:", *(double *)&qword_3D9108);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___gradientView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___hStackHeightConstraint] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18UpsellShowGridView____lazy_storage___sizeClass] = 8;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UpsellShowGridView.swift", 48, 2, 89, 0);
  __break(1u);
}

uint64_t sub_16D074(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  int v18;
  id v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  id *v44;
  int v45;
  id v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id *v84;
  int v85;
  id v86;
  id *v87;
  int v88;
  id v89;
  id *v90;
  int v91;
  id v92;
  id *v93;
  int v94;
  id v95;
  id *v96;
  int v97;
  id v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v14);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = (_OWORD *)(a1 + 16);
    v10 = a2 + 2;
    v11 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain(v8);
    if (EnumCaseMultiPayload == 1)
    {
      if (v11 == 255)
      {
        *v9 = *v10;
        *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v12 = a2[2];
        v13 = a2[3];
        sub_108110(v12, v13, v11);
        *(_QWORD *)(a1 + 16) = v12;
        *(_QWORD *)(a1 + 24) = v13;
        *(_BYTE *)(a1 + 32) = v11;
      }
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      v17 = (id *)(a2 + 7);
      v18 = *((unsigned __int8 *)a2 + 64);
      if (v18 == 255)
      {
        *(_QWORD *)(a1 + 56) = *v17;
        *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v19 = *v17;
        sub_27F80(*v17, *((_BYTE *)a2 + 64));
        *(_QWORD *)(a1 + 56) = v19;
        *(_BYTE *)(a1 + 64) = v18;
      }
      v23 = (id *)(a2 + 9);
      v24 = *((unsigned __int8 *)a2 + 80);
      if (v24 == 255)
      {
        *(_QWORD *)(a1 + 72) = *v23;
        *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v25 = *v23;
        sub_27F80(*v23, *((_BYTE *)a2 + 80));
        *(_QWORD *)(a1 + 72) = v25;
        *(_BYTE *)(a1 + 80) = v24;
      }
      v29 = (id *)(a2 + 11);
      v30 = *((unsigned __int8 *)a2 + 96);
      if (v30 == 255)
      {
        *(_QWORD *)(a1 + 88) = *v29;
        *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v31 = *v29;
        sub_27F80(*v29, *((_BYTE *)a2 + 96));
        *(_QWORD *)(a1 + 88) = v31;
        *(_BYTE *)(a1 + 96) = v30;
      }
      v35 = (id *)(a2 + 13);
      v36 = *((unsigned __int8 *)a2 + 112);
      if (v36 == 255)
      {
        *(_QWORD *)(a1 + 104) = *v35;
        *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v37 = *v35;
        sub_27F80(*v35, *((_BYTE *)a2 + 112));
        *(_QWORD *)(a1 + 104) = v37;
        *(_BYTE *)(a1 + 112) = v36;
      }
      v41 = (id *)(a2 + 15);
      v42 = *((unsigned __int8 *)a2 + 128);
      if (v42 == 255)
      {
        *(_QWORD *)(a1 + 120) = *v41;
        *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v43 = *v41;
        sub_27F80(*v41, *((_BYTE *)a2 + 128));
        *(_QWORD *)(a1 + 120) = v43;
        *(_BYTE *)(a1 + 128) = v42;
      }
      *(_BYTE *)(a1 + 129) = *((_BYTE *)a2 + 129);
      v47 = (int *)type metadata accessor for ArtworkModel(0);
      v48 = v47[11];
      v49 = a1 + v48;
      v50 = (uint64_t)a2 + v48;
      v51 = type metadata accessor for ArtworkCrop(0);
      v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
      v52(v49, v50, v51);
      v53 = v47[12];
      v54 = (_QWORD *)(a1 + v53);
      v55 = (uint64_t *)((char *)a2 + v53);
      v56 = v55[1];
      *v54 = *v55;
      v54[1] = v56;
      *(_BYTE *)(a1 + v47[13]) = *((_BYTE *)a2 + v47[13]);
      *(_BYTE *)(a1 + v47[14]) = *((_BYTE *)a2 + v47[14]);
      *(_BYTE *)(a1 + v47[15]) = *((_BYTE *)a2 + v47[15]);
      v57 = v47[16];
      v58 = (_QWORD *)(a1 + v57);
      v59 = (uint64_t *)((char *)a2 + v57);
      v60 = v59[1];
      *v58 = *v59;
      v58[1] = v60;
      swift_bridgeObjectRetain(v56);
      swift_bridgeObjectRetain(v60);
      v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D9188) + 48);
      v62 = a1 + v61;
      v63 = (uint64_t)a2 + v61;
      v64 = *(uint64_t *)((char *)a2 + v61 + 8);
      *(_QWORD *)v62 = *(uint64_t *)((char *)a2 + v61);
      *(_QWORD *)(v62 + 8) = v64;
      v65 = *((unsigned __int8 *)a2 + v61 + 32);
      swift_bridgeObjectRetain(v64);
      if (v65 == 255)
      {
        *(_OWORD *)(v62 + 16) = *(_OWORD *)(v63 + 16);
        *(_BYTE *)(v62 + 32) = *(_BYTE *)(v63 + 32);
      }
      else
      {
        v66 = *(_QWORD *)(v63 + 16);
        v67 = *(_QWORD *)(v63 + 24);
        sub_108110(v66, v67, v65);
        *(_QWORD *)(v62 + 16) = v66;
        *(_QWORD *)(v62 + 24) = v67;
        *(_BYTE *)(v62 + 32) = v65;
      }
      *(_OWORD *)(v62 + 40) = *(_OWORD *)(v63 + 40);
      v84 = (id *)(v63 + 56);
      v85 = *(unsigned __int8 *)(v63 + 64);
      if (v85 == 255)
      {
        *(_QWORD *)(v62 + 56) = *v84;
        *(_BYTE *)(v62 + 64) = *(_BYTE *)(v63 + 64);
      }
      else
      {
        v86 = *v84;
        sub_27F80(*v84, *(_BYTE *)(v63 + 64));
        *(_QWORD *)(v62 + 56) = v86;
        *(_BYTE *)(v62 + 64) = v85;
      }
      v87 = (id *)(v63 + 72);
      v88 = *(unsigned __int8 *)(v63 + 80);
      if (v88 == 255)
      {
        *(_QWORD *)(v62 + 72) = *v87;
        *(_BYTE *)(v62 + 80) = *(_BYTE *)(v63 + 80);
      }
      else
      {
        v89 = *v87;
        sub_27F80(*v87, *(_BYTE *)(v63 + 80));
        *(_QWORD *)(v62 + 72) = v89;
        *(_BYTE *)(v62 + 80) = v88;
      }
      v90 = (id *)(v63 + 88);
      v91 = *(unsigned __int8 *)(v63 + 96);
      if (v91 == 255)
      {
        *(_QWORD *)(v62 + 88) = *v90;
        *(_BYTE *)(v62 + 96) = *(_BYTE *)(v63 + 96);
      }
      else
      {
        v92 = *v90;
        sub_27F80(*v90, *(_BYTE *)(v63 + 96));
        *(_QWORD *)(v62 + 88) = v92;
        *(_BYTE *)(v62 + 96) = v91;
      }
      v93 = (id *)(v63 + 104);
      v94 = *(unsigned __int8 *)(v63 + 112);
      if (v94 == 255)
      {
        *(_QWORD *)(v62 + 104) = *v93;
        *(_BYTE *)(v62 + 112) = *(_BYTE *)(v63 + 112);
      }
      else
      {
        v95 = *v93;
        sub_27F80(*v93, *(_BYTE *)(v63 + 112));
        *(_QWORD *)(v62 + 104) = v95;
        *(_BYTE *)(v62 + 112) = v94;
      }
      v96 = (id *)(v63 + 120);
      v97 = *(unsigned __int8 *)(v63 + 128);
      if (v97 == 255)
      {
        *(_QWORD *)(v62 + 120) = *v96;
        *(_BYTE *)(v62 + 128) = *(_BYTE *)(v63 + 128);
      }
      else
      {
        v98 = *v96;
        sub_27F80(*v96, *(_BYTE *)(v63 + 128));
        *(_QWORD *)(v62 + 120) = v98;
        *(_BYTE *)(v62 + 128) = v97;
      }
      *(_BYTE *)(v62 + 129) = *(_BYTE *)(v63 + 129);
      v52(v62 + v47[11], v63 + v47[11], v51);
      v99 = v47[12];
      v100 = (_QWORD *)(v62 + v99);
      v101 = (_QWORD *)(v63 + v99);
      v102 = v101[1];
      *v100 = *v101;
      v100[1] = v102;
      *(_BYTE *)(v62 + v47[13]) = *(_BYTE *)(v63 + v47[13]);
      *(_BYTE *)(v62 + v47[14]) = *(_BYTE *)(v63 + v47[14]);
      *(_BYTE *)(v62 + v47[15]) = *(_BYTE *)(v63 + v47[15]);
      v103 = v47[16];
      v104 = (_QWORD *)(v62 + v103);
      v105 = (_QWORD *)(v63 + v103);
      v106 = v105[1];
      *v104 = *v105;
      v104[1] = v106;
      swift_bridgeObjectRetain(v102);
      swift_bridgeObjectRetain(v106);
      v81 = a1;
      v82 = a3;
      v83 = 1;
    }
    else
    {
      if (v11 == 255)
      {
        *v9 = *v10;
        *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v15 = a2[2];
        v16 = a2[3];
        sub_108110(v15, v16, v11);
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_BYTE *)(a1 + 32) = v11;
      }
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      v20 = (id *)(a2 + 7);
      v21 = *((unsigned __int8 *)a2 + 64);
      if (v21 == 255)
      {
        *(_QWORD *)(a1 + 56) = *v20;
        *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v22 = *v20;
        sub_27F80(*v20, *((_BYTE *)a2 + 64));
        *(_QWORD *)(a1 + 56) = v22;
        *(_BYTE *)(a1 + 64) = v21;
      }
      v26 = (id *)(a2 + 9);
      v27 = *((unsigned __int8 *)a2 + 80);
      if (v27 == 255)
      {
        *(_QWORD *)(a1 + 72) = *v26;
        *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v28 = *v26;
        sub_27F80(*v26, *((_BYTE *)a2 + 80));
        *(_QWORD *)(a1 + 72) = v28;
        *(_BYTE *)(a1 + 80) = v27;
      }
      v32 = (id *)(a2 + 11);
      v33 = *((unsigned __int8 *)a2 + 96);
      if (v33 == 255)
      {
        *(_QWORD *)(a1 + 88) = *v32;
        *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v34 = *v32;
        sub_27F80(*v32, *((_BYTE *)a2 + 96));
        *(_QWORD *)(a1 + 88) = v34;
        *(_BYTE *)(a1 + 96) = v33;
      }
      v38 = (id *)(a2 + 13);
      v39 = *((unsigned __int8 *)a2 + 112);
      if (v39 == 255)
      {
        *(_QWORD *)(a1 + 104) = *v38;
        *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v40 = *v38;
        sub_27F80(*v38, *((_BYTE *)a2 + 112));
        *(_QWORD *)(a1 + 104) = v40;
        *(_BYTE *)(a1 + 112) = v39;
      }
      v44 = (id *)(a2 + 15);
      v45 = *((unsigned __int8 *)a2 + 128);
      if (v45 == 255)
      {
        *(_QWORD *)(a1 + 120) = *v44;
        *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v46 = *v44;
        sub_27F80(*v44, *((_BYTE *)a2 + 128));
        *(_QWORD *)(a1 + 120) = v46;
        *(_BYTE *)(a1 + 128) = v45;
      }
      *(_BYTE *)(a1 + 129) = *((_BYTE *)a2 + 129);
      v68 = (int *)type metadata accessor for ArtworkModel(0);
      v69 = v68[11];
      v70 = a1 + v69;
      v71 = (uint64_t)a2 + v69;
      v72 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
      v73 = v68[12];
      v74 = (_QWORD *)(a1 + v73);
      v75 = (uint64_t *)((char *)a2 + v73);
      v76 = v75[1];
      *v74 = *v75;
      v74[1] = v76;
      *(_BYTE *)(a1 + v68[13]) = *((_BYTE *)a2 + v68[13]);
      *(_BYTE *)(a1 + v68[14]) = *((_BYTE *)a2 + v68[14]);
      *(_BYTE *)(a1 + v68[15]) = *((_BYTE *)a2 + v68[15]);
      v77 = v68[16];
      v78 = (_QWORD *)(a1 + v77);
      v79 = (uint64_t *)((char *)a2 + v77);
      v80 = v79[1];
      *v78 = *v79;
      v78[1] = v80;
      swift_bridgeObjectRetain(v76);
      swift_bridgeObjectRetain(v80);
      v81 = a1;
      v82 = a3;
      v83 = 0;
    }
    swift_storeEnumTagMultiPayload(v81, v82, v83);
  }
  return a1;
}

double sub_16D790(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  int *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;

  v2 = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
  v4 = *(unsigned __int8 *)(v2 + 32);
  if (EnumCaseMultiPayload == 1)
  {
    if (v4 != 255)
      sub_108270(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v4);
    v5 = *(unsigned __int8 *)(v2 + 64);
    if (v5 != 255)
      sub_27FA8(*(id *)(v2 + 56), v5);
    v6 = *(unsigned __int8 *)(v2 + 80);
    if (v6 != 255)
      sub_27FA8(*(id *)(v2 + 72), v6);
    v7 = *(unsigned __int8 *)(v2 + 96);
    if (v7 != 255)
      sub_27FA8(*(id *)(v2 + 88), v7);
    v8 = *(unsigned __int8 *)(v2 + 112);
    if (v8 != 255)
      sub_27FA8(*(id *)(v2 + 104), v8);
    v9 = *(unsigned __int8 *)(v2 + 128);
    if (v9 != 255)
      sub_27FA8(*(id *)(v2 + 120), v9);
    v10 = (int *)type metadata accessor for ArtworkModel(0);
    v11 = v2 + v10[11];
    v12 = type metadata accessor for ArtworkCrop(0);
    v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v13(v11, v12);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + v10[12] + 8));
    v14 = v10 + 16;
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + v10[16] + 8));
    v2 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D9188) + 48);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
    v15 = *(unsigned __int8 *)(v2 + 32);
    if (v15 != 255)
      sub_108270(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v15);
    v16 = *(unsigned __int8 *)(v2 + 64);
    if (v16 != 255)
      sub_27FA8(*(id *)(v2 + 56), v16);
    v17 = *(unsigned __int8 *)(v2 + 80);
    if (v17 != 255)
      sub_27FA8(*(id *)(v2 + 72), v17);
    v18 = *(unsigned __int8 *)(v2 + 96);
    if (v18 != 255)
      sub_27FA8(*(id *)(v2 + 88), v18);
    v19 = *(unsigned __int8 *)(v2 + 112);
    if (v19 != 255)
      sub_27FA8(*(id *)(v2 + 104), v19);
    v20 = *(unsigned __int8 *)(v2 + 128);
    if (v20 != 255)
      sub_27FA8(*(id *)(v2 + 120), v20);
    v13(v2 + v10[11], v12);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + v10[12] + 8));
  }
  else
  {
    if (v4 != 255)
      sub_108270(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v4);
    v21 = *(unsigned __int8 *)(v2 + 64);
    if (v21 != 255)
      sub_27FA8(*(id *)(v2 + 56), v21);
    v22 = *(unsigned __int8 *)(v2 + 80);
    if (v22 != 255)
      sub_27FA8(*(id *)(v2 + 72), v22);
    v23 = *(unsigned __int8 *)(v2 + 96);
    if (v23 != 255)
      sub_27FA8(*(id *)(v2 + 88), v23);
    v24 = *(unsigned __int8 *)(v2 + 112);
    if (v24 != 255)
      sub_27FA8(*(id *)(v2 + 104), v24);
    v25 = *(unsigned __int8 *)(v2 + 128);
    if (v25 != 255)
      sub_27FA8(*(id *)(v2 + 120), v25);
    v26 = type metadata accessor for ArtworkModel(0);
    v27 = v2 + *(int *)(v26 + 44);
    v28 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + *(int *)(v26 + 48) + 8));
    v14 = (int *)(v26 + 64);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + *v14 + 8)).n128_u64[0];
  return result;
}

uint64_t sub_16DA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  int v16;
  id v17;
  id *v18;
  int v19;
  id v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  id *v80;
  int v81;
  id v82;
  id *v83;
  int v84;
  id v85;
  id *v86;
  int v87;
  id v88;
  id *v89;
  int v90;
  id v91;
  id *v92;
  int v93;
  id v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = (_OWORD *)(a1 + 16);
  v9 = (_OWORD *)(a2 + 16);
  v10 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain(v7);
  if (EnumCaseMultiPayload == 1)
  {
    if (v10 == 255)
    {
      *v8 = *v9;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    }
    else
    {
      v11 = *(_QWORD *)(a2 + 16);
      v12 = *(_QWORD *)(a2 + 24);
      sub_108110(v11, v12, v10);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v12;
      *(_BYTE *)(a1 + 32) = v10;
    }
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v15 = (id *)(a2 + 56);
    v16 = *(unsigned __int8 *)(a2 + 64);
    if (v16 == 255)
    {
      *(_QWORD *)(a1 + 56) = *v15;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    }
    else
    {
      v17 = *v15;
      sub_27F80(*v15, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v17;
      *(_BYTE *)(a1 + 64) = v16;
    }
    v21 = (id *)(a2 + 72);
    v22 = *(unsigned __int8 *)(a2 + 80);
    if (v22 == 255)
    {
      *(_QWORD *)(a1 + 72) = *v21;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    }
    else
    {
      v23 = *v21;
      sub_27F80(*v21, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v23;
      *(_BYTE *)(a1 + 80) = v22;
    }
    v27 = (id *)(a2 + 88);
    v28 = *(unsigned __int8 *)(a2 + 96);
    if (v28 == 255)
    {
      *(_QWORD *)(a1 + 88) = *v27;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    }
    else
    {
      v29 = *v27;
      sub_27F80(*v27, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v29;
      *(_BYTE *)(a1 + 96) = v28;
    }
    v33 = (id *)(a2 + 104);
    v34 = *(unsigned __int8 *)(a2 + 112);
    if (v34 == 255)
    {
      *(_QWORD *)(a1 + 104) = *v33;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    }
    else
    {
      v35 = *v33;
      sub_27F80(*v33, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v35;
      *(_BYTE *)(a1 + 112) = v34;
    }
    v39 = (id *)(a2 + 120);
    v40 = *(unsigned __int8 *)(a2 + 128);
    if (v40 == 255)
    {
      *(_QWORD *)(a1 + 120) = *v39;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    }
    else
    {
      v41 = *v39;
      sub_27F80(*v39, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v41;
      *(_BYTE *)(a1 + 128) = v40;
    }
    *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
    v45 = (int *)type metadata accessor for ArtworkModel(0);
    v46 = v45[11];
    v47 = a1 + v46;
    v48 = a2 + v46;
    v49 = type metadata accessor for ArtworkCrop(0);
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
    v50(v47, v48, v49);
    v51 = v45[12];
    v52 = (_QWORD *)(a1 + v51);
    v53 = (_QWORD *)(a2 + v51);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    *(_BYTE *)(a1 + v45[13]) = *(_BYTE *)(a2 + v45[13]);
    *(_BYTE *)(a1 + v45[14]) = *(_BYTE *)(a2 + v45[14]);
    *(_BYTE *)(a1 + v45[15]) = *(_BYTE *)(a2 + v45[15]);
    v55 = v45[16];
    v56 = (_QWORD *)(a1 + v55);
    v57 = (_QWORD *)(a2 + v55);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v58);
    v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D9188) + 48);
    v60 = a1 + v59;
    v61 = a2 + v59;
    v62 = *(_QWORD *)(a2 + v59 + 8);
    *(_QWORD *)v60 = *(_QWORD *)(a2 + v59);
    *(_QWORD *)(v60 + 8) = v62;
    v63 = *(unsigned __int8 *)(a2 + v59 + 32);
    swift_bridgeObjectRetain(v62);
    if (v63 == 255)
    {
      *(_OWORD *)(v60 + 16) = *(_OWORD *)(v61 + 16);
      *(_BYTE *)(v60 + 32) = *(_BYTE *)(v61 + 32);
    }
    else
    {
      v64 = *(_QWORD *)(v61 + 16);
      v65 = *(_QWORD *)(v61 + 24);
      sub_108110(v64, v65, v63);
      *(_QWORD *)(v60 + 16) = v64;
      *(_QWORD *)(v60 + 24) = v65;
      *(_BYTE *)(v60 + 32) = v63;
    }
    *(_OWORD *)(v60 + 40) = *(_OWORD *)(v61 + 40);
    v80 = (id *)(v61 + 56);
    v81 = *(unsigned __int8 *)(v61 + 64);
    if (v81 == 255)
    {
      *(_QWORD *)(v60 + 56) = *v80;
      *(_BYTE *)(v60 + 64) = *(_BYTE *)(v61 + 64);
    }
    else
    {
      v82 = *v80;
      sub_27F80(*v80, *(_BYTE *)(v61 + 64));
      *(_QWORD *)(v60 + 56) = v82;
      *(_BYTE *)(v60 + 64) = v81;
    }
    v83 = (id *)(v61 + 72);
    v84 = *(unsigned __int8 *)(v61 + 80);
    if (v84 == 255)
    {
      *(_QWORD *)(v60 + 72) = *v83;
      *(_BYTE *)(v60 + 80) = *(_BYTE *)(v61 + 80);
    }
    else
    {
      v85 = *v83;
      sub_27F80(*v83, *(_BYTE *)(v61 + 80));
      *(_QWORD *)(v60 + 72) = v85;
      *(_BYTE *)(v60 + 80) = v84;
    }
    v86 = (id *)(v61 + 88);
    v87 = *(unsigned __int8 *)(v61 + 96);
    if (v87 == 255)
    {
      *(_QWORD *)(v60 + 88) = *v86;
      *(_BYTE *)(v60 + 96) = *(_BYTE *)(v61 + 96);
    }
    else
    {
      v88 = *v86;
      sub_27F80(*v86, *(_BYTE *)(v61 + 96));
      *(_QWORD *)(v60 + 88) = v88;
      *(_BYTE *)(v60 + 96) = v87;
    }
    v89 = (id *)(v61 + 104);
    v90 = *(unsigned __int8 *)(v61 + 112);
    if (v90 == 255)
    {
      *(_QWORD *)(v60 + 104) = *v89;
      *(_BYTE *)(v60 + 112) = *(_BYTE *)(v61 + 112);
    }
    else
    {
      v91 = *v89;
      sub_27F80(*v89, *(_BYTE *)(v61 + 112));
      *(_QWORD *)(v60 + 104) = v91;
      *(_BYTE *)(v60 + 112) = v90;
    }
    v92 = (id *)(v61 + 120);
    v93 = *(unsigned __int8 *)(v61 + 128);
    if (v93 == 255)
    {
      *(_QWORD *)(v60 + 120) = *v92;
      *(_BYTE *)(v60 + 128) = *(_BYTE *)(v61 + 128);
    }
    else
    {
      v94 = *v92;
      sub_27F80(*v92, *(_BYTE *)(v61 + 128));
      *(_QWORD *)(v60 + 120) = v94;
      *(_BYTE *)(v60 + 128) = v93;
    }
    *(_BYTE *)(v60 + 129) = *(_BYTE *)(v61 + 129);
    v50(v60 + v45[11], v61 + v45[11], v49);
    v95 = v45[12];
    v96 = (_QWORD *)(v60 + v95);
    v97 = (_QWORD *)(v61 + v95);
    v75 = v97[1];
    *v96 = *v97;
    v96[1] = v75;
    *(_BYTE *)(v60 + v45[13]) = *(_BYTE *)(v61 + v45[13]);
    *(_BYTE *)(v60 + v45[14]) = *(_BYTE *)(v61 + v45[14]);
    *(_BYTE *)(v60 + v45[15]) = *(_BYTE *)(v61 + v45[15]);
    v98 = v45[16];
    v99 = (_QWORD *)(v60 + v98);
    v100 = (_QWORD *)(v61 + v98);
    v79 = v100[1];
    *v99 = *v100;
    v99[1] = v79;
    v71 = 1;
  }
  else
  {
    if (v10 == 255)
    {
      *v8 = *v9;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    }
    else
    {
      v13 = *(_QWORD *)(a2 + 16);
      v14 = *(_QWORD *)(a2 + 24);
      sub_108110(v13, v14, v10);
      *(_QWORD *)(a1 + 16) = v13;
      *(_QWORD *)(a1 + 24) = v14;
      *(_BYTE *)(a1 + 32) = v10;
    }
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v18 = (id *)(a2 + 56);
    v19 = *(unsigned __int8 *)(a2 + 64);
    if (v19 == 255)
    {
      *(_QWORD *)(a1 + 56) = *v18;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    }
    else
    {
      v20 = *v18;
      sub_27F80(*v18, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v20;
      *(_BYTE *)(a1 + 64) = v19;
    }
    v24 = (id *)(a2 + 72);
    v25 = *(unsigned __int8 *)(a2 + 80);
    if (v25 == 255)
    {
      *(_QWORD *)(a1 + 72) = *v24;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    }
    else
    {
      v26 = *v24;
      sub_27F80(*v24, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v26;
      *(_BYTE *)(a1 + 80) = v25;
    }
    v30 = (id *)(a2 + 88);
    v31 = *(unsigned __int8 *)(a2 + 96);
    if (v31 == 255)
    {
      *(_QWORD *)(a1 + 88) = *v30;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    }
    else
    {
      v32 = *v30;
      sub_27F80(*v30, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v32;
      *(_BYTE *)(a1 + 96) = v31;
    }
    v36 = (id *)(a2 + 104);
    v37 = *(unsigned __int8 *)(a2 + 112);
    if (v37 == 255)
    {
      *(_QWORD *)(a1 + 104) = *v36;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    }
    else
    {
      v38 = *v36;
      sub_27F80(*v36, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v38;
      *(_BYTE *)(a1 + 112) = v37;
    }
    v42 = (id *)(a2 + 120);
    v43 = *(unsigned __int8 *)(a2 + 128);
    if (v43 == 255)
    {
      *(_QWORD *)(a1 + 120) = *v42;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    }
    else
    {
      v44 = *v42;
      sub_27F80(*v42, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v44;
      *(_BYTE *)(a1 + 128) = v43;
    }
    *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
    v66 = (int *)type metadata accessor for ArtworkModel(0);
    v67 = v66[11];
    v68 = a1 + v67;
    v69 = a2 + v67;
    v70 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
    v71 = 0;
    v72 = v66[12];
    v73 = (_QWORD *)(a1 + v72);
    v74 = (_QWORD *)(a2 + v72);
    v75 = v74[1];
    *v73 = *v74;
    v73[1] = v75;
    *(_BYTE *)(a1 + v66[13]) = *(_BYTE *)(a2 + v66[13]);
    *(_BYTE *)(a1 + v66[14]) = *(_BYTE *)(a2 + v66[14]);
    *(_BYTE *)(a1 + v66[15]) = *(_BYTE *)(a2 + v66[15]);
    v76 = v66[16];
    v77 = (_QWORD *)(a1 + v76);
    v78 = (_QWORD *)(a2 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
  }
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRetain(v79);
  swift_storeEnumTagMultiPayload(a1, a3, v71);
  return a1;
}

uint64_t sub_16E100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _OWORD *v8;
  __int128 *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  id *v16;
  int v17;
  id v18;
  __int128 v19;
  id *v20;
  int v21;
  id v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id v39;
  id *v40;
  int v41;
  id v42;
  id v43;
  id *v44;
  int v45;
  id v46;
  id v47;
  id *v48;
  int v49;
  id v50;
  id v51;
  id *v52;
  int v53;
  id v54;
  id v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  __int128 v92;
  id *v93;
  int v94;
  id v95;
  id v96;
  id *v97;
  int v98;
  id v99;
  id v100;
  id *v101;
  int v102;
  id v103;
  id v104;
  id *v105;
  int v106;
  id v107;
  id v108;
  id *v109;
  int v110;
  id v111;
  id v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;

  if (a1 != a2)
  {
    sub_FA4C(a1, type metadata accessor for UpsellShowGridView.ArtworkColumn);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 8) = v7;
    v8 = (_OWORD *)(a1 + 16);
    v9 = (__int128 *)(a2 + 16);
    v10 = *(unsigned __int8 *)(a2 + 32);
    swift_bridgeObjectRetain(v7);
    if (EnumCaseMultiPayload == 1)
    {
      if (v10 == 255)
      {
        v15 = *v9;
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        *v8 = v15;
      }
      else
      {
        v11 = *(_QWORD *)(a2 + 16);
        v12 = *(_QWORD *)(a2 + 24);
        sub_108110(v11, v12, v10);
        *(_QWORD *)(a1 + 16) = v11;
        *(_QWORD *)(a1 + 24) = v12;
        *(_BYTE *)(a1 + 32) = v10;
      }
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v16 = (id *)(a2 + 56);
      v17 = *(unsigned __int8 *)(a2 + 64);
      if (v17 == 255)
      {
        v23 = *v16;
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        *(_QWORD *)(a1 + 56) = v23;
      }
      else
      {
        v18 = *v16;
        sub_27F80(*v16, *(_BYTE *)(a2 + 64));
        *(_QWORD *)(a1 + 56) = v18;
        *(_BYTE *)(a1 + 64) = v17;
      }
      v24 = (id *)(a2 + 72);
      v25 = *(unsigned __int8 *)(a2 + 80);
      if (v25 == 255)
      {
        v31 = *v24;
        *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
        *(_QWORD *)(a1 + 72) = v31;
      }
      else
      {
        v26 = *v24;
        sub_27F80(*v24, *(_BYTE *)(a2 + 80));
        *(_QWORD *)(a1 + 72) = v26;
        *(_BYTE *)(a1 + 80) = v25;
      }
      v32 = (id *)(a2 + 88);
      v33 = *(unsigned __int8 *)(a2 + 96);
      if (v33 == 255)
      {
        v39 = *v32;
        *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
        *(_QWORD *)(a1 + 88) = v39;
      }
      else
      {
        v34 = *v32;
        sub_27F80(*v32, *(_BYTE *)(a2 + 96));
        *(_QWORD *)(a1 + 88) = v34;
        *(_BYTE *)(a1 + 96) = v33;
      }
      v40 = (id *)(a2 + 104);
      v41 = *(unsigned __int8 *)(a2 + 112);
      if (v41 == 255)
      {
        v47 = *v40;
        *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
        *(_QWORD *)(a1 + 104) = v47;
      }
      else
      {
        v42 = *v40;
        sub_27F80(*v40, *(_BYTE *)(a2 + 112));
        *(_QWORD *)(a1 + 104) = v42;
        *(_BYTE *)(a1 + 112) = v41;
      }
      v48 = (id *)(a2 + 120);
      v49 = *(unsigned __int8 *)(a2 + 128);
      if (v49 == 255)
      {
        v55 = *v48;
        *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
        *(_QWORD *)(a1 + 120) = v55;
      }
      else
      {
        v50 = *v48;
        sub_27F80(*v48, *(_BYTE *)(a2 + 128));
        *(_QWORD *)(a1 + 120) = v50;
        *(_BYTE *)(a1 + 128) = v49;
      }
      *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
      v56 = (int *)type metadata accessor for ArtworkModel(0);
      v57 = v56[11];
      v58 = a1 + v57;
      v59 = a2 + v57;
      v60 = type metadata accessor for ArtworkCrop(0);
      v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
      v61(v58, v59, v60);
      v62 = v56[12];
      v63 = (_QWORD *)(a1 + v62);
      v64 = (_QWORD *)(a2 + v62);
      *v63 = *v64;
      v65 = v64[1];
      v63[1] = v65;
      *(_BYTE *)(a1 + v56[13]) = *(_BYTE *)(a2 + v56[13]);
      *(_BYTE *)(a1 + v56[14]) = *(_BYTE *)(a2 + v56[14]);
      *(_BYTE *)(a1 + v56[15]) = *(_BYTE *)(a2 + v56[15]);
      v66 = v56[16];
      v67 = (_QWORD *)(a1 + v66);
      v68 = (_QWORD *)(a2 + v66);
      *v67 = *v68;
      v69 = v68[1];
      v67[1] = v69;
      swift_bridgeObjectRetain(v65);
      swift_bridgeObjectRetain(v69);
      v70 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D9188) + 48);
      v71 = a1 + v70;
      v72 = a2 + v70;
      *(_QWORD *)v71 = *(_QWORD *)(a2 + v70);
      v73 = *(_QWORD *)(a2 + v70 + 8);
      *(_QWORD *)(v71 + 8) = v73;
      v74 = *(unsigned __int8 *)(a2 + v70 + 32);
      swift_bridgeObjectRetain(v73);
      if (v74 == 255)
      {
        v92 = *(_OWORD *)(v72 + 16);
        *(_BYTE *)(v71 + 32) = *(_BYTE *)(v72 + 32);
        *(_OWORD *)(v71 + 16) = v92;
      }
      else
      {
        v75 = *(_QWORD *)(v72 + 16);
        v76 = *(_QWORD *)(v72 + 24);
        sub_108110(v75, v76, v74);
        *(_QWORD *)(v71 + 16) = v75;
        *(_QWORD *)(v71 + 24) = v76;
        *(_BYTE *)(v71 + 32) = v74;
      }
      *(_QWORD *)(v71 + 40) = *(_QWORD *)(v72 + 40);
      *(_QWORD *)(v71 + 48) = *(_QWORD *)(v72 + 48);
      v93 = (id *)(v72 + 56);
      v94 = *(unsigned __int8 *)(v72 + 64);
      if (v94 == 255)
      {
        v96 = *v93;
        *(_BYTE *)(v71 + 64) = *(_BYTE *)(v72 + 64);
        *(_QWORD *)(v71 + 56) = v96;
      }
      else
      {
        v95 = *v93;
        sub_27F80(*v93, *(_BYTE *)(v72 + 64));
        *(_QWORD *)(v71 + 56) = v95;
        *(_BYTE *)(v71 + 64) = v94;
      }
      v97 = (id *)(v72 + 72);
      v98 = *(unsigned __int8 *)(v72 + 80);
      if (v98 == 255)
      {
        v100 = *v97;
        *(_BYTE *)(v71 + 80) = *(_BYTE *)(v72 + 80);
        *(_QWORD *)(v71 + 72) = v100;
      }
      else
      {
        v99 = *v97;
        sub_27F80(*v97, *(_BYTE *)(v72 + 80));
        *(_QWORD *)(v71 + 72) = v99;
        *(_BYTE *)(v71 + 80) = v98;
      }
      v101 = (id *)(v72 + 88);
      v102 = *(unsigned __int8 *)(v72 + 96);
      if (v102 == 255)
      {
        v104 = *v101;
        *(_BYTE *)(v71 + 96) = *(_BYTE *)(v72 + 96);
        *(_QWORD *)(v71 + 88) = v104;
      }
      else
      {
        v103 = *v101;
        sub_27F80(*v101, *(_BYTE *)(v72 + 96));
        *(_QWORD *)(v71 + 88) = v103;
        *(_BYTE *)(v71 + 96) = v102;
      }
      v105 = (id *)(v72 + 104);
      v106 = *(unsigned __int8 *)(v72 + 112);
      if (v106 == 255)
      {
        v108 = *v105;
        *(_BYTE *)(v71 + 112) = *(_BYTE *)(v72 + 112);
        *(_QWORD *)(v71 + 104) = v108;
      }
      else
      {
        v107 = *v105;
        sub_27F80(*v105, *(_BYTE *)(v72 + 112));
        *(_QWORD *)(v71 + 104) = v107;
        *(_BYTE *)(v71 + 112) = v106;
      }
      v109 = (id *)(v72 + 120);
      v110 = *(unsigned __int8 *)(v72 + 128);
      if (v110 == 255)
      {
        v112 = *v109;
        *(_BYTE *)(v71 + 128) = *(_BYTE *)(v72 + 128);
        *(_QWORD *)(v71 + 120) = v112;
      }
      else
      {
        v111 = *v109;
        sub_27F80(*v109, *(_BYTE *)(v72 + 128));
        *(_QWORD *)(v71 + 120) = v111;
        *(_BYTE *)(v71 + 128) = v110;
      }
      *(_BYTE *)(v71 + 129) = *(_BYTE *)(v72 + 129);
      v61(v71 + v56[11], v72 + v56[11], v60);
      v113 = v56[12];
      v114 = (_QWORD *)(v71 + v113);
      v115 = (_QWORD *)(v72 + v113);
      *v114 = *v115;
      v87 = v115[1];
      v114[1] = v87;
      *(_BYTE *)(v71 + v56[13]) = *(_BYTE *)(v72 + v56[13]);
      *(_BYTE *)(v71 + v56[14]) = *(_BYTE *)(v72 + v56[14]);
      *(_BYTE *)(v71 + v56[15]) = *(_BYTE *)(v72 + v56[15]);
      v116 = v56[16];
      v117 = (_QWORD *)(v71 + v116);
      v118 = (_QWORD *)(v72 + v116);
      *v117 = *v118;
      v91 = v118[1];
      v117[1] = v91;
      v83 = 1;
    }
    else
    {
      if (v10 == 255)
      {
        v19 = *v9;
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        *v8 = v19;
      }
      else
      {
        v13 = *(_QWORD *)(a2 + 16);
        v14 = *(_QWORD *)(a2 + 24);
        sub_108110(v13, v14, v10);
        *(_QWORD *)(a1 + 16) = v13;
        *(_QWORD *)(a1 + 24) = v14;
        *(_BYTE *)(a1 + 32) = v10;
      }
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v20 = (id *)(a2 + 56);
      v21 = *(unsigned __int8 *)(a2 + 64);
      if (v21 == 255)
      {
        v27 = *v20;
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        *(_QWORD *)(a1 + 56) = v27;
      }
      else
      {
        v22 = *v20;
        sub_27F80(*v20, *(_BYTE *)(a2 + 64));
        *(_QWORD *)(a1 + 56) = v22;
        *(_BYTE *)(a1 + 64) = v21;
      }
      v28 = (id *)(a2 + 72);
      v29 = *(unsigned __int8 *)(a2 + 80);
      if (v29 == 255)
      {
        v35 = *v28;
        *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
        *(_QWORD *)(a1 + 72) = v35;
      }
      else
      {
        v30 = *v28;
        sub_27F80(*v28, *(_BYTE *)(a2 + 80));
        *(_QWORD *)(a1 + 72) = v30;
        *(_BYTE *)(a1 + 80) = v29;
      }
      v36 = (id *)(a2 + 88);
      v37 = *(unsigned __int8 *)(a2 + 96);
      if (v37 == 255)
      {
        v43 = *v36;
        *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
        *(_QWORD *)(a1 + 88) = v43;
      }
      else
      {
        v38 = *v36;
        sub_27F80(*v36, *(_BYTE *)(a2 + 96));
        *(_QWORD *)(a1 + 88) = v38;
        *(_BYTE *)(a1 + 96) = v37;
      }
      v44 = (id *)(a2 + 104);
      v45 = *(unsigned __int8 *)(a2 + 112);
      if (v45 == 255)
      {
        v51 = *v44;
        *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
        *(_QWORD *)(a1 + 104) = v51;
      }
      else
      {
        v46 = *v44;
        sub_27F80(*v44, *(_BYTE *)(a2 + 112));
        *(_QWORD *)(a1 + 104) = v46;
        *(_BYTE *)(a1 + 112) = v45;
      }
      v52 = (id *)(a2 + 120);
      v53 = *(unsigned __int8 *)(a2 + 128);
      if (v53 == 255)
      {
        v77 = *v52;
        *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
        *(_QWORD *)(a1 + 120) = v77;
      }
      else
      {
        v54 = *v52;
        sub_27F80(*v52, *(_BYTE *)(a2 + 128));
        *(_QWORD *)(a1 + 120) = v54;
        *(_BYTE *)(a1 + 128) = v53;
      }
      *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
      v78 = (int *)type metadata accessor for ArtworkModel(0);
      v79 = v78[11];
      v80 = a1 + v79;
      v81 = a2 + v79;
      v82 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
      v83 = 0;
      v84 = v78[12];
      v85 = (_QWORD *)(a1 + v84);
      v86 = (_QWORD *)(a2 + v84);
      *v85 = *v86;
      v87 = v86[1];
      v85[1] = v87;
      *(_BYTE *)(a1 + v78[13]) = *(_BYTE *)(a2 + v78[13]);
      *(_BYTE *)(a1 + v78[14]) = *(_BYTE *)(a2 + v78[14]);
      *(_BYTE *)(a1 + v78[15]) = *(_BYTE *)(a2 + v78[15]);
      v88 = v78[16];
      v89 = (_QWORD *)(a1 + v88);
      v90 = (_QWORD *)(a2 + v88);
      *v89 = *v90;
      v91 = v90[1];
      v89[1] = v91;
    }
    swift_bridgeObjectRetain(v87);
    swift_bridgeObjectRetain(v91);
    swift_storeEnumTagMultiPayload(a1, a3, v83);
  }
  return a1;
}

uint64_t sub_16E850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v8 = (int *)type metadata accessor for ArtworkModel(0);
  v9 = v8[11];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ArtworkCrop(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  *(_OWORD *)(a1 + v8[12]) = *(_OWORD *)(a2 + v8[12]);
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
  *(_OWORD *)(a1 + v8[16]) = *(_OWORD *)(a2 + v8[16]);
  if (EnumCaseMultiPayload == 1)
  {
    v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D9188) + 48);
    v15 = a1 + v14;
    v16 = a2 + v14;
    v17 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
    *(_OWORD *)(v15 + 40) = *(_OWORD *)(v16 + 40);
    *(_QWORD *)(v15 + 56) = *(_QWORD *)(v16 + 56);
    *(_BYTE *)(v15 + 64) = *(_BYTE *)(v16 + 64);
    *(_OWORD *)(v15 + 113) = *(_OWORD *)(v16 + 113);
    *(_OWORD *)(v15 + 104) = *(_OWORD *)(v16 + 104);
    *(_OWORD *)(v15 + 88) = *(_OWORD *)(v16 + 88);
    *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
    *(_BYTE *)(v15 + 129) = *(_BYTE *)(v16 + 129);
    v13(a1 + v14 + v8[11], v16 + v8[11], v12);
    *(_OWORD *)(v15 + v8[12]) = *(_OWORD *)(v16 + v8[12]);
    *(_BYTE *)(v15 + v8[13]) = *(_BYTE *)(v16 + v8[13]);
    *(_BYTE *)(v15 + v8[14]) = *(_BYTE *)(v16 + v8[14]);
    *(_BYTE *)(v15 + v8[15]) = *(_BYTE *)(v16 + v8[15]);
    *(_OWORD *)(v15 + v8[16]) = *(_OWORD *)(v16 + v8[16]);
    v18 = 1;
  }
  else
  {
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v18);
  return a1;
}

uint64_t sub_16EA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_FA4C(a1, type metadata accessor for UpsellShowGridView.ArtworkColumn);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
    v8 = (int *)type metadata accessor for ArtworkModel(0);
    v9 = v8[11];
    v10 = a1 + v9;
    v11 = a2 + v9;
    v12 = type metadata accessor for ArtworkCrop(0);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    *(_OWORD *)(a1 + v8[12]) = *(_OWORD *)(a2 + v8[12]);
    *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
    *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
    *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
    *(_OWORD *)(a1 + v8[16]) = *(_OWORD *)(a2 + v8[16]);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D9188) + 48);
      v15 = a1 + v14;
      v16 = a2 + v14;
      v17 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *(_OWORD *)(v15 + 16) = v17;
      *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
      *(_OWORD *)(v15 + 40) = *(_OWORD *)(v16 + 40);
      *(_QWORD *)(v15 + 56) = *(_QWORD *)(v16 + 56);
      *(_BYTE *)(v15 + 64) = *(_BYTE *)(v16 + 64);
      *(_OWORD *)(v15 + 113) = *(_OWORD *)(v16 + 113);
      *(_OWORD *)(v15 + 104) = *(_OWORD *)(v16 + 104);
      *(_OWORD *)(v15 + 88) = *(_OWORD *)(v16 + 88);
      *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
      *(_BYTE *)(v15 + 129) = *(_BYTE *)(v16 + 129);
      v13(a1 + v14 + v8[11], v16 + v8[11], v12);
      *(_OWORD *)(v15 + v8[12]) = *(_OWORD *)(v16 + v8[12]);
      *(_BYTE *)(v15 + v8[13]) = *(_BYTE *)(v16 + v8[13]);
      *(_BYTE *)(v15 + v8[14]) = *(_BYTE *)(v16 + v8[14]);
      *(_BYTE *)(v15 + v8[15]) = *(_BYTE *)(v16 + v8[15]);
      *(_OWORD *)(v15 + v8[16]) = *(_OWORD *)(v16 + v8[16]);
      v18 = 1;
    }
    else
    {
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v18);
  }
  return a1;
}

uint64_t sub_16EC5C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  result = type metadata accessor for ArtworkModel(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v4, v5[0], v5[0]);
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

id sub_16ECD4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(id *)(v0 + 64);
  }
  else
  {
    v3 = v0;
    v4 = *(void **)(v0 + 40);
    v5 = swift_allocObject(&unk_386528, 24, 7);
    swift_weakInit(v5 + 16, v3);
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D94A0));
    v6 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v4, sub_179554, v5);
    v7 = *(void **)(v3 + 64);
    *(_QWORD *)(v3 + 64) = v6;
    v2 = v6;

    v1 = 0;
  }
  v8 = v1;
  return v2;
}

id sub_16ED7C(void *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  id v10;
  _BYTE v12[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (!Strong)
    return 0;
  v9 = Strong;
  v10 = sub_16EE04(a1, a2, a3);
  swift_release(v9);
  return v10;
}

id sub_16EE04(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v25 = a3;
  v22 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ModernShelf(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v21 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v3;
  sub_16F4D0(v30, v10);
  v12 = v30[0];
  v13 = v30[1];
  v14 = (uint64_t)v31;
  v15 = v32;
  v17 = v33;
  v16 = v34;
  v28 = v35;
  v29 = v37;
  v26 = v36;
  v27 = v38;
  v24 = a2;
  if (v31)
    v31(a2);
  else
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  sub_1D618(v12, v13);
  sub_1D618(v14, v15);
  sub_1D618(v17, v16);
  sub_1D618(v28, v26);
  sub_1D618(v29, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_D1D4((uint64_t)v7, (uint64_t *)&unk_3D3010);
    return 0;
  }
  else
  {
    v19 = v21;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v21, v7, v8);
    v18 = ShelvesViewProvider.cell(for:indexPath:section:item:)(v22, v24, v19, v25);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
  }
  return v18;
}

id sub_16EFD8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(id *)(v0 + 72);
  }
  else
  {
    v3 = swift_allocObject(&unk_386528, 24, 7);
    swift_weakInit(v3 + 16, v0);
    v4 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
    v11[4] = sub_1797C0;
    v12 = v3;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1777C8;
    v11[3] = &block_descriptor_33_1;
    v5 = _Block_copy(v11);
    v6 = objc_msgSend(v4, "initWithSectionProvider:", v5, swift_retain(v3).n128_f64[0]);
    _Block_release(v5);
    v7 = v12;
    swift_release(v3);
    swift_release(v7);
    v8 = *(void **)(v0 + 72);
    *(_QWORD *)(v0 + 72) = v6;
    v2 = v6;

    v1 = 0;
  }
  v9 = v1;
  return v2;
}

void (*sub_16F0E4(uint64_t a1, void *a2, uint64_t a3))(_QWORD)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  void (*v8)(_QWORD);
  _BYTE v10[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (!Strong)
    return 0;
  v7 = Strong;
  v8 = sub_16F164(a1, a2);
  swift_release(v7);
  return v8;
}

void (*sub_16F164(uint64_t a1, void *a2))(_QWORD)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double (*v13)(uint64_t, uint64_t, uint64_t, double, double);
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD);
  char *v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  id v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, double, double);
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void **aBlock;
  uint64_t v52;
  double (*v53)(uint64_t, uint64_t, uint64_t, double, double);
  void *v54;
  void (*v55)(uint64_t, uint64_t, double, double);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v41 = a2;
  v46 = a1;
  v3 = type metadata accessor for IndexPath(0);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ModernShelf(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v42 = v2;
  v43 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_16F4D0((id (**)(uint64_t))&aBlock);
  v13 = v53;
  v12 = (uint64_t)v54;
  v14 = (uint64_t)v55;
  v15 = v57;
  v49 = v56;
  v50 = v58;
  v47 = v59;
  v48 = v60;
  if (v53)
  {
    v16 = aBlock;
    v17 = v52;
    IndexPath.init(row:section:)(0, v46);
    ((void (*)(char *))v13)(v5);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v45);
    v18 = v17;
    v19 = (uint64_t)v16;
  }
  else
  {
    v20 = aBlock;
    v21 = v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    v18 = v21;
    v19 = (uint64_t)v20;
    v13 = 0;
  }
  v22 = v9;
  sub_1D618(v19, v18);
  sub_1D618((uint64_t)v13, v12);
  sub_1D618(v14, v49);
  sub_1D618(v15, v50);
  sub_1D618(v47, v48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_D1D4((uint64_t)v8, (uint64_t *)&unk_3D3010);
    return 0;
  }
  else
  {
    v24 = v43;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v8, v22);
    v25 = v42;
    objc_msgSend(*(id *)(v42 + 40), "safeAreaInsets");
    v23 = ShelvesViewProvider.layout(for:environment:safeAreaInsets:)((void (*)(_QWORD, _QWORD))v24, v41, v26, v27, v28, v29);
    if (objc_msgSend(v23, "orthogonalScrollingBehavior"))
    {
      v30 = objc_msgSend(v23, "visibleItemsInvalidationHandler");
      if (v30)
      {
        v31 = v30;
        v32 = swift_allocObject(&unk_386730, 24, 7);
        *(_QWORD *)(v32 + 16) = v31;
        v33 = sub_179850;
      }
      else
      {
        v33 = 0;
        v32 = 0;
      }
      v34 = v46;
      v35 = swift_allocObject(&unk_3866B8, 24, 7);
      swift_unknownObjectWeakInit(v35 + 16, *(_QWORD *)(v25 + 32));
      v36 = (_QWORD *)swift_allocObject(&unk_3866E0, 48, 7);
      v36[2] = v33;
      v36[3] = v32;
      v36[4] = v35;
      v36[5] = v34;
      v55 = sub_179820;
      v56 = (uint64_t)v36;
      aBlock = _NSConcreteStackBlock;
      v52 = 1107296256;
      v53 = sub_308E0;
      v54 = &block_descriptor_42_0;
      v37 = _Block_copy(&aBlock);
      v38 = v56;
      sub_2C690((uint64_t)v33, v32);
      objc_msgSend(v23, "setVisibleItemsInvalidationHandler:", v37, swift_release(v38).n128_f64[0]);
      _Block_release(v37);
      sub_1D618((uint64_t)v33, v32);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v24, v22);
  }
  return v23;
}

uint64_t sub_16F4D0@<X0>(id (**a1)(uint64_t a1)@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id (*v11)(uint64_t);
  uint64_t v12;
  uint64_t (*v13)@<X0>(uint64_t@<X8>);
  uint64_t v14;
  uint64_t (*v15)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v16;
  double (*v17)@<D0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v3 = v1[10];
  v4 = v1[11];
  v5 = v1[12];
  v6 = v1[13];
  v7 = v1[14];
  v8 = v1[15];
  v9 = v1[16];
  v10 = v1[17];
  v11 = (id (*)(uint64_t))v3;
  v12 = v4;
  v13 = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;
  v14 = v6;
  v15 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  v16 = v8;
  v17 = (double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>))v9;
  v18 = v1[18];
  v19 = v1[19];
  v20 = v10;
  v21 = (uint64_t (*)(uint64_t, uint64_t))v18;
  v22 = v19;
  if (v3 == 1)
  {
    v46 = v1[11];
    v44 = v1[13];
    v45 = v1[12];
    v42 = v1[15];
    v43 = v1[14];
    v40 = v1[17];
    v41 = v1[16];
    v38 = v1[19];
    v39 = v1[18];
    v23 = swift_allocObject(&unk_386528, 24, 7);
    swift_weakInit(v23 + 16, v1);
    v14 = swift_allocObject(&unk_386528, 24, 7);
    swift_weakInit(v14 + 16, v1);
    v26 = swift_allocObject(&unk_386528, 24, 7);
    swift_weakInit(v26 + 16, v1);
    v20 = swift_allocObject(&unk_386528, 24, 7);
    swift_weakInit(v20 + 16, v1);
    v22 = swift_allocObject(&unk_386528, 24, 7);
    swift_weakInit(v22 + 16, v1);
    v36 = v1[11];
    v37 = v1[10];
    v34 = v1[13];
    v35 = v1[12];
    v32 = v1[15];
    v33 = v1[14];
    v30 = v1[17];
    v31 = v1[16];
    v28 = v1[19];
    v29 = v1[18];
    v11 = sub_1794A4;
    v1[10] = sub_1794A4;
    v1[11] = v23;
    v24 = v23;
    v27 = v23;
    v13 = sub_1794AC;
    v1[12] = sub_1794AC;
    v1[13] = v14;
    v15 = sub_1794B4;
    v1[14] = sub_1794B4;
    v1[15] = v26;
    v17 = sub_1794BC;
    v1[16] = sub_1794BC;
    v1[17] = v20;
    v21 = sub_1794C4;
    v1[18] = sub_1794C4;
    v1[19] = v22;
    sub_2C690((uint64_t)sub_1794A4, v24);
    sub_2C690((uint64_t)sub_1794AC, v14);
    sub_2C690((uint64_t)sub_1794B4, v26);
    sub_2C690((uint64_t)sub_1794BC, v20);
    sub_2C690((uint64_t)sub_1794C4, v22);
    sub_17782C(v37, v36, v35, v34, v33, v32, v31, v30, v29, v28);
    v16 = v26;
    v12 = v27;
    v19 = v38;
    v18 = v39;
    v10 = v40;
    v9 = v41;
    v8 = v42;
    v7 = v43;
    v6 = v44;
    v5 = v45;
    v4 = v46;
    v3 = 1;
  }
  *a1 = v11;
  a1[1] = (id (*)(uint64_t))v12;
  a1[2] = (id (*)(uint64_t))v13;
  a1[3] = (id (*)(uint64_t))v14;
  a1[4] = (id (*)(uint64_t))v15;
  a1[5] = (id (*)(uint64_t))v16;
  a1[6] = (id (*)(uint64_t))v17;
  a1[7] = (id (*)(uint64_t))v20;
  a1[8] = (id (*)(uint64_t))v21;
  a1[9] = (id (*)(uint64_t))v22;
  return sub_1794CC(v3, v4, v5, v6, v7, v8, v9, v10, v18, v19);
}

id sub_16F734(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  id v4;
  id v5;
  Class isa;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  v4 = (id)Strong;
  if (Strong)
  {
    v5 = *(id *)(Strong + 40);
    swift_release(v4);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v4 = objc_msgSend(v5, "cellForItemAtIndexPath:", isa);

  }
  return v4;
}

uint64_t sub_16F7D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9450);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (!Strong)
    goto LABEL_4;
  v8 = Strong;
  v9 = sub_16ECD4();
  swift_release(v8);
  sub_16F93C((uint64_t)v6);

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10) == 1)
  {
    sub_D1D4((uint64_t)v6, &qword_3D9450);
LABEL_4:
    v11 = type metadata accessor for ModernShelf(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
  v13 = type metadata accessor for ModernShelf(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a2, v6, v13);
  sub_D1D4((uint64_t)v6, &qword_3D9460);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
}

unint64_t sub_16F93C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9458);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v4);
  if (IndexPath.count.getter(v7) < 1
    || IndexPath.subscript.getter(0) < 0
    || (v8 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v2), IndexPath.subscript.getter(0) >= v8))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
  }
  else
  {
    v9 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v2);
    result = IndexPath.subscript.getter(0);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v11 = result;
      if (result < *(_QWORD *)(v9 + 16))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
        v13 = *(_QWORD *)(v12 - 8);
        sub_D184(v9+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v11, a1, &qword_3D9460);
        v14 = swift_bridgeObjectRelease(v9);
        (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v14);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_16FAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v29[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9458);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  __chkstk_darwin(v10);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v29, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v14 = Strong;
    v15 = sub_16ECD4();
    swift_release(v14);
    v16 = type metadata accessor for ModernShelf(0);
    v17.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v12, a1, v16);
    v18 = ModernShelf.id.getter(v17);
    v19 = (uint64_t *)&v12[*(int *)(v10 + 28)];
    *v19 = v18;
    v19[1] = v20;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v21);
    v22 = NSDiffableDataSourceSnapshot.indexOfSection(_:)(v12, v6);
    if ((v23 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v27 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a3, 1, 1, v27);
    }
    else
    {
      IndexPath.init(row:section:)(0, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v24 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a3, 0, 1, v24);
    }

    return sub_D1D4((uint64_t)v12, &qword_3D9460);
  }
  else
  {
    v25 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 1, 1, v25);
  }
}

double sub_16FCE4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  id v8;
  __n128 v9;
  double result;
  uint64_t v11;
  _QWORD v12[7];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, &v11, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_16ECD4();
    v9 = swift_release(v7);
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v12, a1, v9);

    if (v12[3])
    {
      sub_1D5D4((uint64_t)v12, a3);
      sub_D1D4((uint64_t)v12, &qword_3D9468);
      return result;
    }
    sub_D1D4((uint64_t)v12, &qword_3D9498);
  }
  *(_QWORD *)(a3 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_16FDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  Swift::OpaquePointer v16;
  id v17;
  _BYTE v18[40];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9458);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a3 += 16;
  swift_beginAccess(a3, v21, 0, 0);
  result = swift_weakLoadStrong(a3);
  if (result)
  {
    v11 = result;
    sub_1D5D4(a1, (uint64_t)v18);
    v19 = static ModernShelf.collectionUniqueItemIdFor(section:item:)(a2, a1);
    v20 = v12;
    v13 = sub_16ECD4();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v14);

    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9490);
    v16._rawValue = (void *)swift_allocObject(v15, 88, 7);
    *((_OWORD *)v16._rawValue + 1) = xmmword_2F03C0;
    sub_D184((uint64_t)v18, (uint64_t)v16._rawValue + 32, &qword_3D9468);
    NSDiffableDataSourceSnapshot.reloadItems(_:)(v16);
    swift_bridgeObjectRelease(v16._rawValue);
    v17 = sub_16ECD4();
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v9, 1, 0, 0);
    swift_release(v11);

    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    return sub_D1D4((uint64_t)v18, &qword_3D9468);
  }
  return result;
}

uint64_t sub_16FF20(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (!Strong)
    return 0;
  v11 = Strong;
  v12 = sub_16FFB8(a1, a2, a3, a4);
  swift_release(v11);
  return v12;
}

uint64_t sub_16FFB8(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  id (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD);
  uint64_t v43;
  void (*v44)(_QWORD *__return_ptr, _QWORD);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  _OWORD v48[2];
  uint64_t v49;
  id (*v50)(uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(_QWORD *__return_ptr, _QWORD);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v5 = v4;
  v47 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for ModernShelf(0);
  v12 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CF748 != -1)
    swift_once(&qword_3CF748, sub_17640C);
  v18 = type metadata accessor for Supplementaries.InlineHeader(0);
  v19 = (_QWORD *)__swift_project_value_buffer(v18, (uint64_t)qword_3D9240);
  v20 = v19[1];
  if (*v19 == a2 && v20 == a3 || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, *v19, v20, 0) & 1) != 0)
    goto LABEL_11;
  if (qword_3CF750 != -1)
    swift_once(&qword_3CF750, sub_17665C);
  if ((v19 = (_QWORD *)__swift_project_value_buffer(v18, (uint64_t)qword_3D9258), v21 = v19[1], *v19 == a2) && v21 == a3
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, *v19, v21, 0) & 1) != 0)
  {
LABEL_11:
    v22 = (char *)v19 + *(int *)(v18 + 24);
    v23 = type metadata accessor for ModernTitleHeaderView(0);
    v24 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v22, a4, v23);
    v25 = v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader;
    swift_beginAccess(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader, &v50, 0, 0);
    sub_D184(v25, (uint64_t)v17, &qword_3D19E8);
    v26 = *(_QWORD *)(v5 + 16);
    swift_retain(v26);
    ModernTitleHeaderView.apply(header:objectGraph:)((uint64_t)v17, v26);
    swift_release(v26);
    sub_D1D4((uint64_t)v17, &qword_3D19E8);
  }
  else
  {
    sub_16F4D0(&v50);
    v39 = v50;
    v28 = (uint64_t)v52;
    v38 = v51;
    v29 = v53;
    v42 = (void (*)(_QWORD))v54;
    v40 = v55;
    v44 = v56;
    v41 = v57;
    v45 = v58;
    v43 = v59;
    if (v52)
    {
      v52(a4);
      v30 = v46;
    }
    else
    {
      v30 = v46;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1, 1, v46);
    }
    sub_1D618((uint64_t)v39, v38);
    sub_1D618(v28, v29);
    sub_1D618((uint64_t)v42, v40);
    sub_1D618((uint64_t)v44, v41);
    sub_1D618(v45, v43);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v30) == 1)
    {
      sub_D1D4((uint64_t)v11, (uint64_t *)&unk_3D3010);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, v30);
      sub_16F4D0(&v50);
      v31 = v50;
      v32 = v51;
      v33 = v53;
      v42 = v52;
      v43 = v54;
      v34 = (uint64_t)v56;
      v41 = v55;
      v35 = v57;
      v44 = (void (*)(_QWORD *__return_ptr, _QWORD))v59;
      v45 = v58;
      if (v56)
      {
        v40 = v53;
        v36 = v50;
        v37 = v51;
        v56(v48, a4);
        v32 = v37;
        v31 = v36;
        v33 = v40;
        v30 = v46;
      }
      else
      {
        v49 = 0;
        memset(v48, 0, sizeof(v48));
      }
      sub_1D618((uint64_t)v31, v32);
      sub_1D618((uint64_t)v42, v33);
      sub_1D618(v43, v41);
      sub_1D618(v34, v35);
      sub_1D618(v45, (uint64_t)v44);
      v24 = ShelvesViewProvider.supplementaryView(for:kind:indexPath:section:item:)(v47, a2, a3, a4, (uint64_t)v14);
      sub_D1D4((uint64_t)v48, &qword_3D1A10);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
    }
  }
  return v24;
}

uint64_t sub_17042C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9540);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v49 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v50 = (char *)&v40 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9518);
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ReorderingExtension(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - v15;
  sub_D184(a1, (uint64_t)v9, &qword_3D9518);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_D1D4((uint64_t)v9, &qword_3D9518);
  v45 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v45(v16, v9, v10);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9468);
  v46 = v3;
  v20 = v19;
  v48 = v2;
  v21 = sub_10EDC(&qword_3D9470, &qword_3D9460, (uint64_t)&unk_2FA8B0);
  v22 = sub_10EDC(&qword_3D9478, &qword_3D9468, (uint64_t)&unk_2FA8B0);
  UICollectionViewDiffableDataSource.ReorderingHandlers.init()(v18, v20, v21, v22);
  v23 = swift_allocObject(&unk_386528, 24, 7);
  swift_weakInit(v23 + 16, v51);
  v47 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v41 = v16;
  v47(v13, v16, v10);
  v24 = *(unsigned __int8 *)(v11 + 80);
  v25 = (v24 + 24) & ~v24;
  v43 = v24 | 7;
  v26 = swift_allocObject(&unk_386758, v25 + v12, v24 | 7);
  *(_QWORD *)(v26 + 16) = v23;
  v27 = (void (*)(uint64_t, char *, uint64_t))v45;
  v45((char *)(v26 + v25), v13, v10);
  UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter(sub_1798DC, v26, v48);
  v28 = swift_allocObject(&unk_386528, 24, 7);
  swift_weakInit(v28 + 16, v51);
  v47(v13, v16, v10);
  v29 = (v24 + 16) & ~v24;
  v42 = v29 + v12;
  v30 = (v29 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = v43;
  v32 = swift_allocObject(&unk_386780, v30 + 8, v43);
  v27(v32 + v29, v13, v10);
  *(_QWORD *)(v32 + v30) = v28;
  v44 = v11;
  v33 = v48;
  v34 = v50;
  UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter(sub_179990, v32, v48);
  v35 = v41;
  v47(v13, v41, v10);
  v36 = swift_allocObject(&unk_3867A8, v42, v31);
  v27(v36 + v29, v13, v10);
  UICollectionViewDiffableDataSource.ReorderingHandlers.willReorder.setter(sub_179A40, v36, v33);
  v37 = sub_16ECD4();
  v38 = v46;
  v39 = v49;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v49, v34, v33);
  UICollectionViewDiffableDataSource.reorderingHandlers.setter(v39);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v35, v10);
}

uint64_t sub_170824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  id (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, char *);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v35;
  uint64_t v36;
  id (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id (*v47[2])(uint64_t);
  void (*v48)(char *);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56[32];

  v45 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for ModernShelf(0);
  v8 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v44 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a2 + 16, v56, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  if (Strong)
  {
    v18 = Strong;
    v19 = sub_16ECD4();
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      swift_release(v18);
      v20 = (uint64_t *)&unk_3D1A00;
      v21 = (uint64_t)v12;
    }
    else
    {
      v36 = a1;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
      sub_16F4D0(v47);
      v23 = v47[1];
      v37 = v47[0];
      v25 = (uint64_t)v48;
      v24 = v49;
      v40 = v50;
      v38 = v51;
      v39 = v53;
      v42 = v52;
      v43 = v54;
      v41 = v55;
      if (v48)
      {
        v48(v16);
        v26 = v46;
      }
      else
      {
        v26 = v46;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, 1, 1, v46);
      }
      sub_1D618((uint64_t)v37, (uint64_t)v23);
      sub_1D618(v25, v24);
      sub_1D618(v40, v38);
      sub_1D618(v42, v39);
      sub_1D618(v43, v41);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v26) != 1)
      {
        v27 = v26;
        v28 = v44;
        v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v44, v7, v26);
        v30 = (uint64_t (*)(uint64_t, char *))ReorderingExtension.canReorder.getter(v29);
        v32 = v31;
        v22 = v30(v36, v28);
        swift_release(v32);
        v33 = swift_release(v18);
        (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v28, v27, v33);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
        return v22 & 1;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      swift_release(v18);
      v20 = (uint64_t *)&unk_3D3010;
      v21 = (uint64_t)v7;
    }
    sub_D1D4(v21, v20);
    v22 = 0;
  }
  else
  {
    v22 = 0;
  }
  return v22 & 1;
}

void sub_170B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  __n128 v42;
  uint64_t Strong;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD *, __n128);
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  _QWORD v66[7];
  __int128 v67[2];
  _QWORD *v68;
  char v69[8];

  v52 = a2;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9548);
  v50 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v49 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModernShelf(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v65 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  __chkstk_darwin(v8);
  v48 = (uint64_t *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9550);
  v64 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v63 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9558);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v54 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9560);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9568);
  v19 = NSDiffableDataSourceTransaction.sectionTransactions.getter(v18);
  v62 = *(_QWORD *)(v19 + 16);
  if (v62)
  {
    v61 = v19 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v46 = a3 + 16;
    v20 = swift_beginAccess(a3 + 16, v69, 0, 0);
    v21 = 0;
    v58 = v6;
    v47 = v10;
    v22 = v54;
    v45 = v5;
    v60 = v17;
    v59 = v19;
    while (v21 < *(_QWORD *)(v19 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v13 + 16))(v17, v61 + *(_QWORD *)(v13 + 72) * v21, v12, v20);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
      v23(v17, 0, 1, v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12) == 1)
        goto LABEL_20;
      v57 = v23;
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v22, v17, v12);
      v24 = v63;
      NSDiffableDataSourceSectionTransaction.difference.getter(v12);
      v25 = sub_10EDC((unint64_t *)&unk_3D9570, &qword_3D9550, (uint64_t)&protocol conformance descriptor for CollectionDifference<A>);
      dispatch thunk of Collection.startIndex.getter(v10, v25);
      dispatch thunk of Collection.endIndex.getter(v67, v10, v25);
      v26 = v66[0];
      v27 = *(_QWORD *)&v67[0];
      v28 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v24, v10);
      if (v26 != v27)
      {
        v55 = (void (*)(char *, _QWORD *, __n128))ReorderingExtension.didReorder.getter(v28);
        v56 = v29;
        v30 = v48;
        NSDiffableDataSourceSectionTransaction.sectionIdentifier.getter(v48, v12);
        (*(void (**)(char *, _QWORD *, uint64_t))(v58 + 16))(v65, v30, v5);
        sub_D1D4((uint64_t)v30, &qword_3D9460);
        v31 = v49;
        NSDiffableDataSourceSectionTransaction.finalSnapshot.getter(v12);
        v32 = v51;
        v33 = NSDiffableDataSourceSectionSnapshot.items.getter(v51);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v32);
        v34 = *(_QWORD *)(v33 + 16);
        if (v34)
        {
          v68 = _swiftEmptyArrayStorage;
          sub_F3518(0, v34, 0);
          v53 = v33;
          v35 = v33 + 32;
          v36 = v68;
          do
          {
            sub_D184(v35, (uint64_t)v66, &qword_3D9468);
            sub_1D5D4((uint64_t)v66, (uint64_t)v67);
            sub_D1D4((uint64_t)v66, &qword_3D9468);
            if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
            {
              sub_F3518(0, v36[2] + 1, 1);
              v36 = v68;
            }
            v38 = v36[2];
            v37 = v36[3];
            if (v38 >= v37 >> 1)
            {
              sub_F3518(v37 > 1, v38 + 1, 1);
              v36 = v68;
            }
            v36[2] = v38 + 1;
            sub_1B738(v67, (uint64_t)&v36[5 * v38 + 4]);
            v35 += 56;
            --v34;
          }
          while (v34);
          v39 = swift_bridgeObjectRelease(v53);
        }
        else
        {
          v39 = swift_bridgeObjectRelease(v33);
          v36 = _swiftEmptyArrayStorage;
        }
        v5 = v45;
        v40 = v56;
        v41 = v65;
        v55(v65, v36, v39);
        swift_release(v40);
        v42 = swift_bridgeObjectRelease(v36);
        (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v41, v5, v42);
        Strong = swift_weakLoadStrong(v46);
        v10 = v47;
        v22 = v54;
        if (Strong)
        {
          v44 = Strong;
          sub_171160(v54);
          swift_release(v44);
        }
      }
      ++v21;
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v22, v12);
      v17 = v60;
      v19 = v59;
      if (v21 == v62)
      {
        v57(v60, 1, 1, v12);
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v17, 1, 1, v12);
LABEL_20:
    swift_bridgeObjectRelease(v19);
  }
}

uint64_t sub_171160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id (*v32)(uint64_t);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  id (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  id (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(__int128 *__return_ptr, char *, __n128);
  __n128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t);
  int v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  _QWORD *v86;
  uint64_t *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  char *v101;
  __n128 v102;
  _QWORD *v103;
  uint64_t v104;
  __n128 v105;
  char *v106;
  uint64_t v107;
  __n128 v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  char *v140;
  char *v141;
  void (*v142)(char *, uint64_t);
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(_QWORD);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[10];
  id (*v162)(uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(_QWORD *);
  uint64_t v167;
  void (*v168)(__int128 *__return_ptr, char *, __n128);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;

  v2 = v1;
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  v135 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v130 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for ClickLocationElement(0);
  v129 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v123 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for ImpressionMetrics(0);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v118 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v119 = (uint64_t)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v131 = (uint64_t)&v117 - v9;
  v127 = type metadata accessor for ImpressionMetrics.ID(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v120 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v125 = (char *)&v117 - v12;
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9548);
  v128 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v146 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v14);
  v154 = (uint64_t)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for IndexPath(0);
  v149 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v141 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v143 = (char *)&v117 - v18;
  __chkstk_darwin(v19);
  v140 = (char *)&v117 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v152 = (void (*)(_QWORD))__swift_instantiateConcreteTypeFromMangledName(&qword_3D9558);
  v153 = a1;
  NSDiffableDataSourceSectionTransaction.sectionIdentifier.getter(v23, v152);
  v148 = v2;
  sub_16F4D0(&v162);
  v24 = v163;
  v25 = v164;
  v26 = v165;
  v28 = (uint64_t)v166;
  v27 = v167;
  v29 = (uint64_t)v168;
  v30 = v169;
  v31 = v170;
  v139 = v23;
  v155 = v171;
  if (v166)
  {
    v32 = v162;
    v33 = v23;
    v34 = v154;
    v166(v33);
    v35 = (uint64_t)v32;
  }
  else
  {
    v34 = v154;
    v36 = v162;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v154, 1, 1, v156);
    v35 = (uint64_t)v36;
    v28 = 0;
  }
  sub_1D618(v35, v24);
  sub_1D618(v25, v26);
  sub_1D618(v28, v27);
  sub_1D618(v29, v30);
  sub_1D618(v31, v155);
  v37 = v149;
  v38 = v156;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v149 + 48))(v34, 1, v156) == 1)
  {
    sub_D1D4((uint64_t)v139, &qword_3D9460);
    v39 = (uint64_t *)&unk_3D1A00;
    v40 = v34;
    return sub_D1D4(v40, v39);
  }
  v41 = (uint64_t)v140;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v140, v34, v38);
  sub_16F4D0(&v162);
  v42 = v162;
  v43 = v163;
  v44 = v164;
  v45 = v165;
  v46 = (uint64_t)v166;
  v47 = v167;
  v48 = (uint64_t)v168;
  v49 = v169;
  v155 = v170;
  v154 = v171;
  v161[0] = v162;
  v161[1] = v163;
  v161[2] = v164;
  v161[3] = v165;
  v161[4] = v166;
  v161[5] = v167;
  v161[6] = v168;
  v161[7] = v169;
  v161[8] = v170;
  v161[9] = v171;
  v50 = CollectionConverter.shelf(for:)(v41);
  sub_1D618((uint64_t)v42, v43);
  sub_1D618(v44, v45);
  sub_1D618(v46, v47);
  sub_1D618(v48, v49);
  sub_1D618(v155, v154);
  if (!v50)
  {
    (*(void (**)(char *, uint64_t))(v149 + 8))(v140, v156);
    v39 = &qword_3D9460;
    v40 = (uint64_t)v139;
    return sub_D1D4(v40, v39);
  }
  v147 = v50;
  v51 = v146;
  NSDiffableDataSourceSectionTransaction.finalSnapshot.getter(v152);
  v52 = v145;
  v53 = NSDiffableDataSourceSectionSnapshot.visibleItems.getter(v145);
  v54 = *(_QWORD *)(v53 + 16);
  if (!v54)
    goto LABEL_34;
  v117 = v53;
  v55 = v53 + 32;
  v144 = OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_index;
  v56 = v143;
  do
  {
    sub_D184(v55, (uint64_t)v161, &qword_3D9468);
    v57 = NSDiffableDataSourceSectionSnapshot.index(of:)(v161, v52);
    if ((v58 & 1) != 0)
      goto LABEL_22;
    v59 = v57;
    v60 = v147;
    IndexPath.init(row:section:)(v57, *(_QWORD *)(v147 + v144));
    sub_16F4D0(&v162);
    v61 = v162;
    v62 = v163;
    v64 = v168;
    v63 = v169;
    v155 = v171;
    v154 = v170;
    v153 = v167;
    v152 = (void (*)(_QWORD))v166;
    v151 = v165;
    v150 = v164;
    if (!v168)
    {
      v159 = 0;
      v158 = 0u;
      v157 = 0u;
      swift_retain(v60);
LABEL_18:
      sub_D1D4((uint64_t)&v157, &qword_3D1A10);
      swift_release(v60);
      sub_1D618((uint64_t)v61, v62);
      sub_1D618(v150, v151);
      sub_1D618((uint64_t)v152, v153);
      sub_1D618((uint64_t)v64, v63);
      sub_1D618(v154, v155);
      v84 = *(void (**)(char *, uint64_t))(v149 + 8);
      v52 = v145;
      v51 = v146;
      v69 = v156;
      goto LABEL_21;
    }
    v65 = swift_retain(v60);
    v64(&v157, v56, v65);
    if (!*((_QWORD *)&v158 + 1))
      goto LABEL_18;
    sub_1B738(&v157, (uint64_t)&v160);
    v66 = v149;
    v67 = v56;
    v68 = v141;
    v69 = v156;
    (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v141, v67, v156);
    if (!v61)
    {
      v142 = *(void (**)(char *, uint64_t))(v66 + 8);
      v142(v68, v69);
LABEL_20:
      v56 = v143;
      v85 = v147;
      __swift_destroy_boxed_opaque_existential_0(&v160);
      swift_release(v85);
      sub_1D618((uint64_t)v61, v62);
      sub_1D618(v150, v151);
      sub_1D618((uint64_t)v152, v153);
      sub_1D618((uint64_t)v64, v63);
      sub_1D618(v154, v155);
      v52 = v145;
      v51 = v146;
      v84 = v142;
LABEL_21:
      v84(v56, v69);
LABEL_22:
      v86 = v161;
      v87 = &qword_3D9468;
      goto LABEL_23;
    }
    v121 = v59;
    v70 = (uint64_t)v61((uint64_t)v68);
    v69 = v156;
    v71 = v70;
    v142 = *(void (**)(char *, uint64_t))(v66 + 8);
    v142(v68, v156);
    v122 = v71;
    if (!v71)
      goto LABEL_20;
    sub_1D5D4((uint64_t)&v160, (uint64_t)&v157);
    v72 = v147;
    v73 = swift_retain(v147);
    v74 = IndexPath.row.getter(v73);
    __swift_destroy_boxed_opaque_existential_0(&v160);
    v75 = type metadata accessor for CollectionConverter.ShelfItem(0);
    v76 = (_QWORD *)swift_allocObject(v75, *(unsigned int *)(v75 + 48), *(unsigned __int16 *)(v75 + 52));
    v76[10] = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v132 + 56))((uint64_t)v76+ OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___impressionMetrics, 1, 1, v133);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))((uint64_t)v76+ OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___clickLocationElement, 1, 1, v136);
    v76[2] = v72;
    sub_1B738(&v157, (uint64_t)(v76 + 3));
    swift_release(v72);
    sub_1D618((uint64_t)v61, v62);
    sub_1D618(v150, v151);
    sub_1D618((uint64_t)v152, v153);
    sub_1D618((uint64_t)v64, v63);
    sub_1D618(v154, v155);
    v76[8] = v122;
    v76[9] = v74;
    v124 = v76;
    v77 = v131;
    CollectionConverter.Shelf.impressionMetrics.getter(v131);
    v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
    v79 = v78(v77, 1, v138);
    v81 = v121;
    if (v79)
    {
      sub_D1D4(v77, &qword_3D0EE0);
LABEL_16:
      v82 = (uint64_t)v130;
      v83 = v129;
      v52 = v145;
      goto LABEL_31;
    }
    v88 = v120;
    ImpressionMetrics.id.getter(v80);
    sub_D1D4(v77, &qword_3D0EE0);
    v89 = v126;
    v90 = v125;
    v91 = v88;
    v92 = v127;
    (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v125, v91, v127);
    v93 = *(_QWORD *)(v148 + 48);
    v94 = swift_retain(v93);
    v95 = DynamicImpressionsCalculator.childCalculator(for:)(v90, v94);
    v96 = swift_release(v93);
    if (!v95)
    {
      (*(void (**)(char *, uint64_t, __n128))(v89 + 8))(v90, v92, v96);
      goto LABEL_16;
    }
    v97 = v119;
    CollectionConverter.ShelfItem.impressionMetrics.getter(v119);
    v98 = v138;
    v99 = v78(v97, 1, v138);
    v83 = v129;
    v52 = v145;
    if (v99 == 1)
    {
      (*(void (**)(char *, uint64_t))(v126 + 8))(v125, v127);
      swift_release(v95);
      sub_D1D4(v97, &qword_3D0EE0);
    }
    else
    {
      v100 = v137;
      v101 = v118;
      (*(void (**)(char *, uint64_t, uint64_t))(v137 + 32))(v118, v97, v98);
      DynamicImpressionsCalculator.moveElement(_:to:)(v101, v81);
      v102 = swift_release(v95);
      (*(void (**)(char *, uint64_t, __n128))(v100 + 8))(v101, v98, v102);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v125, v127);
    }
    v82 = (uint64_t)v130;
LABEL_31:
    v51 = v146;
    v103 = v124;
    CollectionConverter.ShelfItem.clickLocationElement.getter(v82);
    v104 = v134;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v82, 1, v134) != 1)
    {
      v106 = v123;
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(v123, v82, v104);
      v107 = *(_QWORD *)(v148 + 56);
      v108 = swift_retain(v107);
      ClickLocationTracker.addElement(_:)(v106, v108);
      swift_release(v107);
      v109 = swift_release(v124);
      (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v106, v104, v109);
      v56 = v143;
      v142(v143, v156);
      goto LABEL_22;
    }
    v105 = swift_release(v103);
    v56 = v143;
    ((void (*)(char *, uint64_t, __n128))v142)(v143, v156, v105);
    sub_D1D4((uint64_t)v161, &qword_3D9468);
    v86 = (_QWORD *)v82;
    v87 = &qword_3D56E0;
LABEL_23:
    sub_D1D4((uint64_t)v86, v87);
    v55 += 56;
    --v54;
  }
  while (v54);
  v53 = v117;
LABEL_34:
  swift_bridgeObjectRelease(v53);
  v110 = v128;
  v111 = v156;
  v112 = v149;
  v113 = v140;
  v114 = (uint64_t)v139;
  v115 = swift_release(v147);
  (*(void (**)(char *, uint64_t, __n128))(v110 + 8))(v51, v52, v115);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v111);
  v39 = &qword_3D9460;
  v40 = v114;
  return sub_D1D4(v40, v39);
}

void sub_171EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, _QWORD *, __n128);
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[7];
  __int128 v65[2];
  _QWORD *v66;

  v50 = a2;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9548);
  v48 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v47 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for ModernShelf(0);
  v3 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v59 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  __chkstk_darwin(v5);
  v46 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9550);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  __chkstk_darwin(v7);
  v61 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9558);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9560);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9568);
  v17 = NSDiffableDataSourceTransaction.sectionTransactions.getter(v16);
  v18 = v17;
  v60 = *(_QWORD *)(v17 + 16);
  if (v60)
  {
    v19 = 0;
    v58 = v17 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v44 = v3;
    v45 = v12;
    v56 = v17;
    v57 = v15;
    while (v19 < *(_QWORD *)(v18 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v15, v58 + *(_QWORD *)(v10 + 72) * v19, v9);
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v24(v15, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
        goto LABEL_19;
      v55 = v24;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
      v25 = v61;
      NSDiffableDataSourceSectionTransaction.difference.getter(v9);
      v26 = sub_10EDC((unint64_t *)&unk_3D9570, &qword_3D9550, (uint64_t)&protocol conformance descriptor for CollectionDifference<A>);
      v27 = v3;
      v28 = v63;
      dispatch thunk of Collection.startIndex.getter(v63, v26);
      dispatch thunk of Collection.endIndex.getter(v65, v28, v26);
      v29 = v64[0];
      v30 = *(_QWORD *)&v65[0];
      v31 = v28;
      v3 = v27;
      v32 = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v25, v31);
      if (v29 != v30)
      {
        v53 = (void (*)(char *, _QWORD *, __n128))ReorderingExtension.willReorder.getter(v32);
        v54 = v33;
        v34 = v46;
        NSDiffableDataSourceSectionTransaction.sectionIdentifier.getter(v46, v9);
        v35 = v52;
        (*(void (**)(char *, _QWORD *, uint64_t))(v27 + 16))(v59, v34, v52);
        sub_D1D4((uint64_t)v34, &qword_3D9460);
        v36 = v47;
        NSDiffableDataSourceSectionTransaction.finalSnapshot.getter(v9);
        v37 = v49;
        v38 = NSDiffableDataSourceSectionSnapshot.items.getter(v49);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v37);
        v39 = *(_QWORD *)(v38 + 16);
        if (v39)
        {
          v66 = _swiftEmptyArrayStorage;
          sub_F3518(0, v39, 0);
          v51 = v38;
          v40 = v38 + 32;
          v41 = v66;
          do
          {
            sub_D184(v40, (uint64_t)v64, &qword_3D9468);
            sub_1D5D4((uint64_t)v64, (uint64_t)v65);
            sub_D1D4((uint64_t)v64, &qword_3D9468);
            if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
            {
              sub_F3518(0, v41[2] + 1, 1);
              v41 = v66;
            }
            v43 = v41[2];
            v42 = v41[3];
            if (v43 >= v42 >> 1)
            {
              sub_F3518(v42 > 1, v43 + 1, 1);
              v41 = v66;
            }
            v41[2] = v43 + 1;
            sub_1B738(v65, (uint64_t)&v41[5 * v43 + 4]);
            v40 += 56;
            --v39;
          }
          while (v39);
          v20 = swift_bridgeObjectRelease(v51);
          v35 = v52;
          v3 = v44;
        }
        else
        {
          v20 = swift_bridgeObjectRelease(v38);
          v41 = _swiftEmptyArrayStorage;
        }
        v21 = v59;
        v22 = v54;
        v53(v59, v41, v20);
        swift_release(v22);
        v23 = swift_bridgeObjectRelease(v41);
        (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v21, v35, v23);
        v12 = v45;
      }
      ++v19;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v18 = v56;
      v15 = v57;
      if (v19 == v60)
      {
        v55(v57, 1, 1, v9);
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, 1, 1, v9);
LABEL_19:
    swift_bridgeObjectRelease(v18);
  }
}

void sub_17245C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  id v5;
  Class isa;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class v13;
  id v14;
  _BYTE v15[24];
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (!Strong)
    goto LABEL_7;
  v4 = Strong;
  v5 = *(id *)(Strong + 40);
  swift_release(v4);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "cellForItemAtIndexPath:", isa);

  if (!v7
    || (v14 = v7,
        v8 = sub_E710(0, &qword_3D19D0, UICollectionViewCell_ptr),
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9530),
        (swift_dynamicCast(&v16, &v14, v8, v9, 6) & 1) == 0))
  {
LABEL_7:
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
    goto LABEL_8;
  }
  if (!*((_QWORD *)&v17 + 1))
  {
LABEL_8:
    sub_D1D4((uint64_t)&v16, (uint64_t *)&unk_3D9520);
    return;
  }
  sub_D1D4((uint64_t)&v16, (uint64_t *)&unk_3D9520);
  swift_beginAccess(v2, &v16, 0, 0);
  v10 = swift_weakLoadStrong(v2);
  if (v10)
  {
    v11 = v10;
    v12 = *(id *)(v10 + 40);
    swift_release(v11);
    v13 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v12, "selectItemAtIndexPath:animated:scrollPosition:", v13, 0, 16, v14);

  }
}

void sub_1725E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  id v18;
  int v19;
  uint64_t *v20;
  uint64_t v21;
  id v22;
  char *v23;
  double v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  NSString v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  Class isa;
  id v40;
  NSString v41;
  __n128 v42;
  char *v43;
  Class v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[24];

  v1 = type metadata accessor for IndexPath(0);
  v60 = *(_QWORD *)(v1 - 8);
  v61 = v1;
  __chkstk_darwin(v1);
  v59 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Supplementaries.InlineHeader(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  __chkstk_darwin(v6);
  v58 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v52 - v10;
  v12 = type metadata accessor for Header(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration), "init");
  objc_msgSend(v16, "setContentInsetsReference:", 3);
  v17 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader, v63, 0, 0);
  sub_D184(v17, (uint64_t)v11, &qword_3D19E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_D1D4((uint64_t)v11, &qword_3D19E8);
    v18 = sub_16EFD8();
    objc_msgSend(v18, "setConfiguration:", v16);

    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v19 = *(unsigned __int8 *)(v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48));
  v56 = v13;
  v57 = v12;
  if (v19 == 1)
  {
    if (qword_3CF748 != -1)
      swift_once(&qword_3CF748, sub_17640C);
    v20 = qword_3D9240;
  }
  else
  {
    if (qword_3CF750 != -1)
      swift_once(&qword_3CF750, sub_17665C);
    v20 = qword_3D9258;
  }
  v21 = __swift_project_value_buffer(v3, (uint64_t)v20);
  sub_19C4C(v21, (uint64_t)v5, type metadata accessor for Supplementaries.InlineHeader);
  v55 = *(id *)(v0 + 40);
  v22 = objc_msgSend(v55, "traitCollection");
  v23 = &v5[*(int *)(v3 + 20)];
  v53 = v15;
  v24 = _s23ShelfKitCollectionViews21ModernTitleHeaderViewC19roughHeightEstimate6header5style6traits12CoreGraphics7CGFloatV0aB00G0V_AC5StyleVSo07UITraitC0CtFZ_0(v15, v23, v22);
  v25 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v26 = objc_msgSend(v25, "fractionalWidthDimension:", 1.0);
  v27 = objc_msgSend(v25, "estimatedDimension:", v24);
  v28 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v26, v27);

  v29 = *((_QWORD *)v5 + 1);
  v54 = v5;
  swift_bridgeObjectRetain(v29);
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  v31 = v0;
  v32 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v28, v30, 1);

  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v34 = swift_allocObject(v33, 40, 7);
  *(_OWORD *)(v34 + 16) = xmmword_2F11D0;
  *(_QWORD *)(v34 + 32) = v32;
  v62 = v34;
  specialized Array._endMutation()(v34);
  v35 = v62;
  sub_E710(0, &qword_3D1A20, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  v36 = v32;
  v37 = v31;
  v38 = v36;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

  v40 = sub_16EFD8();
  objc_msgSend(v40, "setConfiguration:", v16);

  swift_bridgeObjectRetain(v29);
  v41 = String._bridgeToObjectiveC()();
  v42 = swift_bridgeObjectRelease(v29);
  v43 = v59;
  IndexPath.init(index:)(0, v42);
  v44 = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v61);
  v45 = objc_msgSend(v55, "supplementaryViewForElementKind:atIndexPath:", v41, v44);

  v47 = v56;
  v46 = v57;
  if (v45)
  {
    v48 = type metadata accessor for ModernTitleHeaderView(0);
    if (swift_dynamicCastClass(v45, v48))
    {
      v49 = (uint64_t)v58;
      v50 = v53;
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v58, v53, v46);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
      v51 = *(_QWORD *)(v37 + 16);
      swift_retain(v51);
      ModernTitleHeaderView.apply(header:objectGraph:)(v49, v51);

      swift_release(v51);
      sub_D1D4(v49, &qword_3D19E8);
      sub_FA4C((uint64_t)v54, type metadata accessor for Supplementaries.InlineHeader);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v46);
      return;
    }

  }
  sub_FA4C((uint64_t)v54, type metadata accessor for Supplementaries.InlineHeader);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v53, v46);
}

void sub_172BB8(uint64_t a1, int a2, void (*a3)(__n128), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  char *v48;
  void *v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  double (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  void (*v72)(char *, uint64_t, __n128);
  uint64_t (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  void *v86;
  __n128 v87;
  uint64_t v88;
  double (*v89)(uint64_t, char *, uint64_t, __n128);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  __n128 v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  __n128 v106;
  os_log_type_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  Swift::OpaquePointer v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  Swift::Int v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  BOOL v137;
  char *v138;
  char *v139;
  uint64_t v140;
  NSObject *v141;
  __n128 v142;
  os_log_type_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  __n128 v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  __n128 v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  BOOL v160;
  unint64_t v161;
  unint64_t v162;
  _QWORD *v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  Swift::OpaquePointer v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  __n128 v188;
  id v189;
  __n128 v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  int v195;
  __n128 v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _BYTE *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  int64_t v207;
  int64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  __n128 v214;
  int64_t v215;
  unint64_t v216;
  int64_t v217;
  char *v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  __n128 v222;
  char v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  char v231;
  char v232;
  __n128 v233;
  uint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  id v239;
  id v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  _BOOL8 v246;
  id v247;
  __n128 v248;
  char *v249;
  void *v250;
  uint64_t v251;
  uint64_t v252;
  void *v253;
  uint64_t v254;
  uint64_t v255;
  __n128 v256;
  char isEscapingClosureAtFileLocation;
  uint64_t v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  id v265;
  uint64_t v266;
  void (*v267)(__n128);
  int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  int v272;
  char *v273;
  __n128 v274;
  uint64_t v275;
  char *v276;
  __int128 v277;
  char *v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  __n128 v288;
  char *v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  double (*v296)(uint64_t, char *, uint64_t, __n128);
  uint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  void (*v305)(char *, uint64_t (*)(char *, char *, uint64_t));
  uint64_t v306;
  __int128 aBlock;
  __int128 v308;
  __int128 v309;
  unint64_t v310;
  uint64_t v311;
  _QWORD *v312;
  char v313[8];
  uint64_t v314;
  uint64_t v315;

  v266 = a4;
  v272 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9440);
  __chkstk_darwin(v7);
  v264 = (char *)&v258 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v9);
  v263 = (char *)&v258 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v11);
  v262 = (char *)&v258 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  __chkstk_darwin(v13);
  v261 = (char *)&v258 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9450);
  __chkstk_darwin(v15);
  v278 = (char *)&v258 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v298 = type metadata accessor for Logger(0);
  v297 = *(_QWORD *)(v298 - 8);
  __chkstk_darwin(v298);
  v281 = (char *)&v258 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v299 = (char *)&v258 - v19;
  v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9458);
  v283 = *(_QWORD *)(v284 - 8);
  __chkstk_darwin(v284);
  v280 = (char *)&v258 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v291 = (char *)&v258 - v22;
  v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  v292 = *(_QWORD *)(v290 - 8);
  __chkstk_darwin(v290);
  v24 = (char *)&v258 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v276 = (char *)&v258 - v26;
  __chkstk_darwin(v27);
  v275 = (uint64_t)&v258 - v28;
  __chkstk_darwin(v29);
  v279 = (uint64_t)&v258 - v30;
  __chkstk_darwin(v31);
  v282 = (uint64_t)&v258 - v32;
  v305 = (void (*)(char *, uint64_t (*)(char *, char *, uint64_t)))type metadata accessor for ModernShelf.ItemPresentation(0);
  v304 = *((_QWORD *)v305 - 1);
  __chkstk_darwin(v305);
  v259 = (char *)&v258 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v258 - v35;
  v301 = type metadata accessor for ModernShelf(0);
  v300 = *(_QWORD *)(v301 - 8);
  __chkstk_darwin(v301);
  v260 = (char *)&v258 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v295 = (char *)&v258 - v39;
  __chkstk_darwin(v40);
  v302 = (char *)&v258 - v41;
  __chkstk_darwin(v42);
  v44 = (char *)&v258 - v43;
  *(_QWORD *)&v46 = __chkstk_darwin(v45).n128_u64[0];
  v48 = (char *)&v258 - v47;
  v271 = v4;
  v49 = *(void **)(v4 + 40);
  v50 = objc_msgSend(v49, "traitCollection", v46);
  v51 = (char *)objc_msgSend(v50, "userInterfaceIdiom");

  v289 = v24;
  v269 = a1;
  v267 = a3;
  v265 = v49;
  if (v51 != (_BYTE *)&dword_4 + 1)
  {
    v268 = 0;
    v73 = (uint64_t (*)(char *, char *, uint64_t))v284;
    goto LABEL_17;
  }
  v52 = *(_QWORD *)(a1 + 16);
  if (!v52)
  {
    v268 = 1;
    goto LABEL_16;
  }
  v53 = a1 + ((*(unsigned __int8 *)(v300 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v300 + 80));
  v303 = *(_QWORD *)(v300 + 72);
  v54 = *(double (**)(char *, uint64_t, uint64_t))(v300 + 16);
  swift_bridgeObjectRetain(a1);
  do
  {
    v57.n128_f64[0] = v54(v48, v53, v301);
    v58 = ModernShelf.itemPresentation.getter(v57);
    v59 = ModernShelf.ItemPresentation.orientation.getter(v58) & 1;
    (*(void (**)(char *, _QWORD *))(v304 + 8))(v36, v305);
    v60 = ModernShelf.ItemPresentation.Orientation.rawValue.getter(v59);
    v62 = v61;
    v64 = ModernShelf.ItemPresentation.Orientation.rawValue.getter(0);
    v65 = v63;
    if (v60 == v64 && v62 == v63)
    {
      swift_bridgeObjectRelease_n(v62, 2);
      v55 = v301;
      v54(v44, (uint64_t)v48, v301);
LABEL_5:
      v56 = *(void (**)(char *, uint64_t))(v300 + 8);
      v56(v44, v55);
      v56(v48, v55);
      goto LABEL_6;
    }
    v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v62, v64, v63, 0);
    swift_bridgeObjectRelease(v62);
    v67 = swift_bridgeObjectRelease(v65);
    v55 = v301;
    v68 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v54)(v44, v48, v301, v67);
    if ((v66 & 1) != 0)
      goto LABEL_5;
    v69 = ModernShelf.items.getter(v68);
    v70 = *(_QWORD *)(v69 + 16);
    v71 = swift_bridgeObjectRelease(v69);
    v72 = *(void (**)(char *, uint64_t, __n128))(v300 + 8);
    v72(v44, v55, v71);
    ((void (*)(char *, uint64_t))v72)(v48, v55);
    if (v70)
    {
      v268 = 0;
      goto LABEL_14;
    }
LABEL_6:
    v53 += v303;
    --v52;
  }
  while (v52);
  v268 = 1;
LABEL_14:
  swift_bridgeObjectRelease(v269);
LABEL_16:
  v73 = (uint64_t (*)(char *, char *, uint64_t))v284;
  v24 = v289;
LABEL_17:
  v74 = v301;
  v75 = v282;
  v76 = v302;
  v270 = swift_allocBox(v73);
  v78 = v77;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9468);
  v80 = sub_10EDC(&qword_3D9470, &qword_3D9460, (uint64_t)&unk_2FA8B0);
  v81 = sub_10EDC(&qword_3D9478, &qword_3D9468, (uint64_t)&unk_2FA8B0);
  v293 = v78;
  NSDiffableDataSourceSnapshot.init()(v290, v79, v80, v81);
  v83 = v74;
  v287 = *(_QWORD *)(v269 + 16);
  if (!v287)
    goto LABEL_60;
  v286 = v269 + ((*(unsigned __int8 *)(v300 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v300 + 80));
  v285 = *(_QWORD *)(v300 + 72);
  v296 = *(double (**)(uint64_t, char *, uint64_t, __n128))(v300 + 16);
  v84 = swift_bridgeObjectRetain(v269);
  v85 = 0;
  v84.n128_u64[0] = 136315138;
  v274 = v84;
  v273 = (char *)&type metadata for Any + 8;
  v84.n128_u64[1] = 2;
  v277 = xmmword_2F03C0;
  v84.n128_u64[0] = 136315394;
  v288 = v84;
  while (2)
  {
    v294 = v85;
    v89 = v296;
    v90 = ((uint64_t (*)(char *, uint64_t, uint64_t))v296)(v76, v286 + v285 * v85, v83);
    v91 = ModernShelf.items.getter(v90);
    v92 = *(_QWORD *)(v91 + 16);
    v93 = swift_bridgeObjectRelease(v91);
    if (!v92)
      goto LABEL_21;
    v94.n128_f64[0] = v89(v75, v76, v83, v93);
    v95 = ModernShelf.id.getter(v94);
    v96 = (uint64_t *)(v75 + *(int *)(v290 + 28));
    *v96 = v95;
    v96[1] = v97;
    v98 = v283;
    v99 = v291;
    (*(void (**)(char *, uint64_t, uint64_t (*)(char *, char *, uint64_t)))(v283 + 16))(v291, v293, v73);
    NSDiffableDataSourceSnapshot.indexOfSection(_:)(v75, v73);
    v101 = v100;
    (*(void (**)(char *, uint64_t (*)(char *, char *, uint64_t)))(v98 + 8))(v99, v73);
    if ((v101 & 1) != 0)
    {
      v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9480);
      v119 = *(unsigned __int8 *)(v292 + 80);
      v120 = (v119 + 32) & ~v119;
      v121._rawValue = (void *)swift_allocObject(v118, v120 + *(_QWORD *)(v292 + 72), v119 | 7);
      *((_OWORD *)v121._rawValue + 1) = v277;
      sub_D184(v75, (uint64_t)v121._rawValue + v120, &qword_3D9460);
      NSDiffableDataSourceSnapshot.appendSections(_:)(v121);
      swift_bridgeObjectRelease(v121._rawValue);
      v312 = &_swiftEmptySetSingleton;
      v123 = ModernShelf.items.getter(v122);
      v124 = v123;
      v305 = *(void (**)(char *, uint64_t (*)(char *, char *, uint64_t)))(v123 + 16);
      if (v305)
      {
        v125 = 0;
        v304 = v123 + 32;
        v126 = _swiftEmptyArrayStorage;
        v73 = (uint64_t (*)(char *, char *, uint64_t))v296;
        v303 = v123;
        while (1)
        {
          if (v125 >= *(_QWORD *)(v124 + 16))
          {
            __break(1u);
LABEL_129:
            swift_bridgeObjectRelease(v124);
            goto LABEL_130;
          }
          sub_1D5D4(v304 + 40 * v125, (uint64_t)&v311);
          sub_1D5D4((uint64_t)&v311, (uint64_t)v313);
          v127 = static ModernShelf.collectionUniqueItemIdFor(section:item:)(v76, &v311);
          v129 = v128;
          v314 = v127;
          v315 = v128;
          v130 = v312;
          if (!v312[2])
            goto LABEL_51;
          Hasher.init(_seed:)(&aBlock, v312[5]);
          swift_bridgeObjectRetain(v130);
          swift_bridgeObjectRetain(v129);
          String.hash(into:)(&aBlock, v127, v129);
          v131 = Hasher._finalize()();
          v132 = -1 << *((_BYTE *)v130 + 32);
          v133 = v131 & ~v132;
          if (((*(_QWORD *)((char *)v130 + ((v133 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v133) & 1) == 0)
            goto LABEL_50;
          v134 = v130[6];
          v135 = (_QWORD *)(v134 + 16 * v133);
          v136 = v135[1];
          v137 = *v135 == v127 && v136 == v129;
          if (!v137 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v135, v136, v127, v129, 0) & 1) == 0)
            break;
LABEL_40:
          swift_bridgeObjectRelease(v129);
          swift_bridgeObjectRelease(v130);
          sub_E710(0, &qword_3D3810, OS_os_log_ptr);
          v138 = v299;
          static OS_os_log.shelfSystem.getter();
          sub_D184((uint64_t)v313, (uint64_t)&aBlock, &qword_3D9468);
          v139 = v295;
          v76 = v302;
          v83 = v301;
          v140 = v73(v295, v302, v301);
          v141 = Logger.logObject.getter(v140);
          v143 = static os_log_type_t.fault.getter(v142);
          if (os_log_type_enabled(v141, v143))
          {
            v144 = v139;
            v145 = swift_slowAlloc(22, -1);
            v146 = v83;
            v147 = swift_slowAlloc(64, -1);
            v306 = v147;
            *(_DWORD *)v145 = v288.n128_u32[0];
            v149 = *((_QWORD *)&v309 + 1);
            v148 = v310;
            swift_bridgeObjectRetain(v310);
            *(_QWORD *)(v145 + 4) = sub_37E78(v149, v148, &v306);
            swift_bridgeObjectRelease(v148);
            sub_D1D4((uint64_t)&aBlock, &qword_3D9468);
            *(_WORD *)(v145 + 12) = 2080;
            v151 = ModernShelf.id.getter(v150);
            v153 = v152;
            *(_QWORD *)(v145 + 14) = sub_37E78(v151, v152, &v306);
            v154 = swift_bridgeObjectRelease(v153);
            v155 = v144;
            v76 = v302;
            (*(void (**)(char *, uint64_t, __n128))(v300 + 8))(v155, v146, v154);
            _os_log_impl(&dword_0, v141, v143, "item (%s) in section (%s) is duplicated, dropping", (uint8_t *)v145, 0x16u);
            swift_arrayDestroy(v147, 2, (char *)&type metadata for Any + 8);
            v156 = v147;
            v83 = v146;
            v73 = (uint64_t (*)(char *, char *, uint64_t))v296;
            swift_slowDealloc(v156, -1, -1);
            swift_slowDealloc(v145, -1, -1);

            (*(void (**)(char *, uint64_t))(v297 + 8))(v299, v298);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v300 + 8))(v139, v83);
            sub_D1D4((uint64_t)&aBlock, &qword_3D9468);
            (*(void (**)(char *, uint64_t))(v297 + 8))(v138, v298);
          }
          sub_D1D4((uint64_t)v313, &qword_3D9468);
          __swift_destroy_boxed_opaque_existential_0(&v311);
          v124 = v303;
LABEL_31:
          if ((void (*)(char *, uint64_t (*)(char *, char *, uint64_t)))++v125 == v305)
          {
            swift_bridgeObjectRelease(v124);
            v86 = v312;
            v24 = v289;
            goto LABEL_20;
          }
        }
        v157 = ~v132;
        while (1)
        {
          v133 = (v133 + 1) & v157;
          if (((*(_QWORD *)((char *)v130 + ((v133 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v133) & 1) == 0)
            break;
          v158 = (_QWORD *)(v134 + 16 * v133);
          v159 = v158[1];
          v160 = *v158 == v127 && v159 == v129;
          if (v160 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v158, v159, v127, v129, 0) & 1) != 0)
            goto LABEL_40;
        }
LABEL_50:
        swift_bridgeObjectRelease(v129);
        swift_bridgeObjectRelease(v130);
        v83 = v301;
        v76 = v302;
LABEL_51:
        swift_bridgeObjectRetain(v129);
        sub_3858C((uint64_t *)&aBlock, v127, v129);
        swift_bridgeObjectRelease(*((_QWORD *)&aBlock + 1));
        sub_D184((uint64_t)v313, (uint64_t)&aBlock, &qword_3D9468);
        if ((swift_isUniquelyReferenced_nonNull_native(v126) & 1) == 0)
          v126 = sub_20FA90(0, v126[2] + 1, 1, v126);
        v124 = v303;
        v162 = v126[2];
        v161 = v126[3];
        if (v162 >= v161 >> 1)
          v126 = sub_20FA90((_QWORD *)(v161 > 1), v162 + 1, 1, v126);
        v126[2] = v162 + 1;
        v163 = &v126[7 * v162];
        v164 = aBlock;
        v165 = v308;
        v166 = v309;
        v163[10] = v310;
        *((_OWORD *)v163 + 3) = v165;
        *((_OWORD *)v163 + 4) = v166;
        *((_OWORD *)v163 + 2) = v164;
        sub_D1D4((uint64_t)v313, &qword_3D9468);
        __swift_destroy_boxed_opaque_existential_0(&v311);
        goto LABEL_31;
      }
      swift_bridgeObjectRelease(v123);
      v86 = &_swiftEmptySetSingleton;
      v126 = _swiftEmptyArrayStorage;
LABEL_20:
      v87 = swift_bridgeObjectRelease(v86);
      v88 = (uint64_t)v278;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v292 + 56))(v278, 1, 1, v290, v87);
      v73 = (uint64_t (*)(char *, char *, uint64_t))v284;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v126, v88, v284);
      swift_bridgeObjectRelease(v126);
      sub_D1D4(v88, &qword_3D9450);
      v75 = v282;
      sub_D1D4(v282, &qword_3D9460);
LABEL_21:
      (*(void (**)(char *, uint64_t))(v300 + 8))(v76, v83);
      goto LABEL_22;
    }
    sub_E710(0, &qword_3D3810, OS_os_log_ptr);
    v102 = v281;
    static OS_os_log.shelfSystem.getter();
    v103 = v279;
    v104 = sub_D184(v75, v279, &qword_3D9460);
    v105 = Logger.logObject.getter(v104);
    v107 = static os_log_type_t.fault.getter(v106);
    if (os_log_type_enabled(v105, v107))
    {
      v108 = v103;
      v109 = swift_slowAlloc(12, -1);
      v110 = swift_slowAlloc(32, -1);
      *(_QWORD *)&aBlock = v110;
      *(_DWORD *)v109 = v274.n128_u32[0];
      v111 = (uint64_t *)(v108 + *(int *)(v290 + 28));
      v112 = v83;
      v113 = *v111;
      v114 = v111[1];
      swift_bridgeObjectRetain(v114);
      v115 = v113;
      v83 = v112;
      *(_QWORD *)(v109 + 4) = sub_37E78(v115, v114, (uint64_t *)&aBlock);
      v116 = v114;
      v73 = (uint64_t (*)(char *, char *, uint64_t))v284;
      swift_bridgeObjectRelease(v116);
      v117 = v108;
      v75 = v282;
      sub_D1D4(v117, &qword_3D9460);
      _os_log_impl(&dword_0, v105, v107, "section (%s) is duplicated, dropping", (uint8_t *)v109, 0xCu);
      swift_arrayDestroy(v110, 1, v273);
      swift_slowDealloc(v110, -1, -1);
      swift_slowDealloc(v109, -1, -1);

      (*(void (**)(char *, uint64_t))(v297 + 8))(v281, v298);
      sub_D1D4(v75, &qword_3D9460);
      (*(void (**)(char *, uint64_t))(v300 + 8))(v76, v112);
    }
    else
    {

      sub_D1D4(v103, &qword_3D9460);
      (*(void (**)(char *, uint64_t))(v297 + 8))(v102, v298);
      sub_D1D4(v75, &qword_3D9460);
      (*(void (**)(char *, uint64_t))(v300 + 8))(v76, v83);
    }
    v24 = v289;
LABEL_22:
    v85 = v294 + 1;
    if (v294 + 1 != v287)
      continue;
    break;
  }
  v82 = swift_bridgeObjectRelease(v269);
LABEL_60:
  if (v268)
  {
    v167 = type metadata accessor for Header(0, v82);
    v168 = v261;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 56))(v261, 1, 1, v167);
    LOBYTE(aBlock) = 1;
    v169 = v83;
    v170 = v259;
    ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)(34, 1, 0x10000000000, 1);
    v171 = type metadata accessor for URL(0);
    v172 = v262;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v262, 1, 1, v171);
    v173 = type metadata accessor for ImpressionMetrics(0);
    aBlock = 0u;
    v308 = 0u;
    *(_QWORD *)&v309 = 0;
    v174 = v263;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 56))(v263, 1, 1, v173);
    v175 = type metadata accessor for MetricsShelfName(0);
    v176 = v264;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 56))(v264, 1, 1, v175);
    v177 = v260;
    ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)(0x7869667261656C63, 0xE800000000000000, v168, v170, _swiftEmptyArrayStorage, v172, 1, 0, &aBlock, v174, v176);
    v178 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9480);
    v179 = *(unsigned __int8 *)(v292 + 80);
    v180 = (v179 + 32) & ~v179;
    v181._rawValue = (void *)swift_allocObject(v178, v180 + *(_QWORD *)(v292 + 72), v179 | 7);
    *((_OWORD *)v181._rawValue + 1) = xmmword_2F03C0;
    v182 = (char *)v181._rawValue + v180;
    v183 = ModernShelf.id.getter((__n128)xmmword_2F03C0);
    v185 = v184;
    v186 = v300;
    (*(void (**)(char *, char *, uint64_t))(v300 + 16))(v182, v177, v169);
    v187 = (uint64_t *)&v182[*(int *)(v290 + 28)];
    *v187 = v183;
    v187[1] = v185;
    NSDiffableDataSourceSnapshot.appendSections(_:)(v181);
    v188 = swift_bridgeObjectRelease(v181._rawValue);
    (*(void (**)(char *, uint64_t, __n128))(v186 + 8))(v177, v169, v188);
  }
  v189 = sub_16ECD4();
  v126 = v280;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v190);

  v191 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v73);
  v192 = v283;
  v193 = v291;
  v304 = *(_QWORD *)(v283 + 16);
  ((void (*)(char *, uint64_t, uint64_t (*)(char *, char *, uint64_t)))v304)(v291, v293, v73);
  v194 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v73);
  v305 = *(void (**)(char *, uint64_t (*)(char *, char *, uint64_t)))(v192 + 8);
  v305(v193, v73);
  v195 = sub_17765C(v191, v194);
  swift_bridgeObjectRelease(v191);
  v196 = swift_bridgeObjectRelease(v194);
  if ((v272 & 1) != 0)
  {
    if ((v195 & 1) != 0)
      goto LABEL_95;
    v197 = v291;
    ((void (*)(char *, uint64_t, uint64_t (*)(char *, char *, uint64_t), __n128))v304)(v291, v293, v73, v196);
    v198 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v73);
    v305(v197, v73);
    v199 = sub_179074(v198);
    swift_bridgeObjectRelease(v198);
    v200 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v73);
    v201 = sub_179074(v200);
    swift_bridgeObjectRelease(v200);
    if (*(_QWORD *)(v201 + 16) <= *(_QWORD *)(v199 + 16) >> 3)
    {
      *(_QWORD *)&aBlock = v199;
      sub_1779B4(v201);
      swift_bridgeObjectRelease(v201);
      v202 = (_BYTE *)aBlock;
    }
    else
    {
      v202 = sub_177DFC(v201, v199);
      swift_bridgeObjectRelease(v201);
    }
    v203 = v202 + 56;
    v204 = 1 << v202[32];
    v205 = -1;
    if (v204 < 64)
      v205 = ~(-1 << v204);
    v206 = v205 & *((_QWORD *)v202 + 7);
    v207 = (unint64_t)(v204 + 63) >> 6;
    swift_bridgeObjectRetain(v202);
    v208 = 0;
    v209 = (uint64_t)v276;
    while (1)
    {
      if (v206)
      {
        v210 = __clz(__rbit64(v206));
        v206 &= v206 - 1;
        v211 = v210 | (v208 << 6);
      }
      else
      {
        v215 = v208 + 1;
        if (__OFADD__(v208, 1))
        {
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        v126 = v280;
        if (v215 >= v207)
          goto LABEL_94;
        v216 = *(_QWORD *)&v203[8 * v215];
        ++v208;
        if (!v216)
        {
          v208 = v215 + 1;
          if (v215 + 1 >= v207)
            goto LABEL_94;
          v216 = *(_QWORD *)&v203[8 * v208];
          if (!v216)
          {
            v208 = v215 + 2;
            if (v215 + 2 >= v207)
              goto LABEL_94;
            v216 = *(_QWORD *)&v203[8 * v208];
            if (!v216)
            {
              v208 = v215 + 3;
              if (v215 + 3 >= v207)
                goto LABEL_94;
              v216 = *(_QWORD *)&v203[8 * v208];
              if (!v216)
              {
                v208 = v215 + 4;
                if (v215 + 4 >= v207)
                  goto LABEL_94;
                v216 = *(_QWORD *)&v203[8 * v208];
                if (!v216)
                {
                  v217 = v215 + 5;
                  if (v217 >= v207)
                  {
LABEL_94:
                    swift_release(v202);
                    v196 = swift_bridgeObjectRelease(v202);
                    v73 = (uint64_t (*)(char *, char *, uint64_t))v284;
                    v24 = v289;
                    goto LABEL_95;
                  }
                  v216 = *(_QWORD *)&v203[8 * v217];
                  if (!v216)
                  {
                    while (1)
                    {
                      v208 = v217 + 1;
                      if (__OFADD__(v217, 1))
                        break;
                      if (v208 >= v207)
                        goto LABEL_94;
                      v216 = *(_QWORD *)&v203[8 * v208];
                      ++v217;
                      if (v216)
                        goto LABEL_92;
                    }
LABEL_142:
                    __break(1u);
                    return;
                  }
                  v208 = v217;
                }
              }
            }
          }
        }
LABEL_92:
        v206 = (v216 - 1) & v216;
        v211 = __clz(__rbit64(v216)) + (v208 << 6);
      }
      v212 = v275;
      sub_D184(*((_QWORD *)v202 + 6) + *(_QWORD *)(v292 + 72) * v211, v275, &qword_3D9460);
      v213 = sub_131648(v212, v209);
      LOBYTE(v212) = ModernShelf.disableAnimationsOnUpdate.getter(v213, v214);
      sub_D1D4(v209, &qword_3D9460);
      if ((v212 & 1) != 0)
      {
        swift_release(v202);
        swift_bridgeObjectRelease(v202);
        v272 = 0;
        v73 = (uint64_t (*)(char *, char *, uint64_t))v284;
        v126 = v280;
        goto LABEL_130;
      }
    }
  }
  if ((v195 & 1) == 0)
  {
LABEL_67:
    v272 = 0;
    goto LABEL_130;
  }
LABEL_95:
  v218 = v291;
  ((void (*)(char *, uint64_t, uint64_t (*)(char *, char *, uint64_t), __n128))v304)(v291, v293, v73, v196);
  v124 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v73);
  v305(v218, v73);
  v303 = *(_QWORD *)(v124 + 16);
  if (!v303)
  {
    v233 = swift_bridgeObjectRelease(v124);
    if ((v195 & 1) == 0)
      goto LABEL_130;
LABEL_126:
    if (v267)
      v267(v233);
    goto LABEL_135;
  }
  v219 = 0;
  LODWORD(v301) = v195 ^ 1;
  v302 = (char *)(v124 + ((*(unsigned __int8 *)(v292 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v292 + 80)));
  do
  {
    while (1)
    {
      if (v219 >= *(_QWORD *)(v124 + 16))
        goto LABEL_139;
      v220 = v219++;
      sub_D184((uint64_t)&v302[*(_QWORD *)(v292 + 72) * v220], (uint64_t)v24, &qword_3D9460);
      v221 = NSDiffableDataSourceSnapshot.indexOfSection(_:)(v24, v73);
      if ((v223 & 1) == 0)
        break;
LABEL_115:
      v232 = ModernShelf.disableAnimationsOnUpdate.getter(v221, v222);
      sub_D1D4((uint64_t)v24, &qword_3D9460);
      if ((v232 & 1) != 0)
      {
        v272 = 0;
        LODWORD(v301) = 1;
        if (v219 == v303)
        {
          swift_bridgeObjectRelease(v124);
          goto LABEL_67;
        }
      }
      else
      {
        LODWORD(v301) = 1;
        if (v219 == v303)
          goto LABEL_129;
      }
    }
    v224 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(v24, v73);
    v225 = v291;
    ((void (*)(char *, uint64_t, uint64_t (*)(char *, char *, uint64_t)))v304)(v291, v293, v73);
    v226 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(v24, v73);
    v305(v225, v73);
    v227 = *(_QWORD *)(v224 + 16);
    if (v227 != *(_QWORD *)(v226 + 16))
    {
      swift_bridgeObjectRelease(v224);
LABEL_114:
      v24 = v289;
      v222 = swift_bridgeObjectRelease(v226);
      goto LABEL_115;
    }
    if (v227)
    {
      if (v224 != v226)
      {
        v228 = 0;
        v229 = 32;
        while (1)
        {
          sub_D184(v224 + v229, (uint64_t)&aBlock, &qword_3D9468);
          if (v228 >= *(_QWORD *)(v226 + 16))
            break;
          sub_D184(v226 + v229, (uint64_t)v313, &qword_3D9468);
          if (*((_QWORD *)&v309 + 1) == v314 && v310 == v315)
          {
            sub_D1D4((uint64_t)v313, &qword_3D9468);
            sub_D1D4((uint64_t)&aBlock, &qword_3D9468);
          }
          else
          {
            v231 = _stringCompareWithSmolCheck(_:_:expecting:)(*((_QWORD *)&v309 + 1), v310, v314, v315, 0);
            sub_D1D4((uint64_t)v313, &qword_3D9468);
            sub_D1D4((uint64_t)&aBlock, &qword_3D9468);
            if ((v231 & 1) == 0)
            {
              swift_bridgeObjectRelease(v224);
              v73 = (uint64_t (*)(char *, char *, uint64_t))v284;
              v126 = v280;
              goto LABEL_114;
            }
          }
          ++v228;
          v229 += 56;
          if (v227 == v228)
          {
            swift_bridgeObjectRelease(v224);
            v73 = (uint64_t (*)(char *, char *, uint64_t))v284;
            v126 = v280;
            goto LABEL_98;
          }
        }
        __break(1u);
LABEL_139:
        __break(1u);
        goto LABEL_140;
      }
      swift_bridgeObjectRelease(v224);
      v226 = v224;
    }
    else
    {
      swift_bridgeObjectRelease(v224);
    }
LABEL_98:
    swift_bridgeObjectRelease(v226);
    v24 = v289;
    sub_D1D4((uint64_t)v289, &qword_3D9460);
  }
  while (v219 != v303);
  v233 = swift_bridgeObjectRelease(v124);
  if ((v301 & 1) == 0)
    goto LABEL_126;
LABEL_130:
  v234 = swift_allocObject(&unk_386528, 24, 7);
  v235 = v271;
  swift_weakInit(v234 + 16, v271);
  v236 = (_QWORD *)swift_allocObject(&unk_386550, 40, 7);
  v236[2] = v234;
  v237 = (uint64_t)v267;
  v238 = v266;
  v236[3] = v267;
  v236[4] = v238;
  sub_2C690(v237, v238);
  v239 = objc_msgSend(v265, "window");
  v240 = v239;
  if (!v239)
  {
    v241 = swift_allocObject(&unk_386578, 56, 7);
    v244 = v270;
    *(_QWORD *)(v241 + 16) = v235;
    *(_QWORD *)(v241 + 24) = v244;
    *(_BYTE *)(v241 + 32) = 0;
    *(_QWORD *)(v241 + 40) = sub_17790C;
    *(_QWORD *)(v241 + 48) = v236;
    v243 = v293;
    if ((v272 & 1) == 0)
      goto LABEL_136;
    goto LABEL_134;
  }

  v241 = swift_allocObject(&unk_386618, 56, 7);
  v242 = v270;
  *(_QWORD *)(v241 + 16) = v235;
  *(_QWORD *)(v241 + 24) = v242;
  *(_BYTE *)(v241 + 32) = 1;
  *(_QWORD *)(v241 + 40) = sub_17790C;
  *(_QWORD *)(v241 + 48) = v236;
  v243 = v293;
  if ((v272 & 1) != 0)
  {
LABEL_134:
    v245 = v235;
    v246 = v240 != 0;
    swift_retain(v245);
    swift_retain(v236);
    swift_retain(v270);
    v247 = sub_16ECD4();
    v248 = swift_beginAccess(v243, &aBlock, 0, 0);
    v249 = v291;
    ((void (*)(char *, uint64_t, uint64_t (*)(char *, char *, uint64_t), __n128))v304)(v291, v243, v73, v248);
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v249, v246, sub_17790C, v236);

    v305(v249, v73);
    swift_release(v236);
    v233 = swift_release(v241);
LABEL_135:
    ((void (*)(_QWORD *, uint64_t (*)(char *, char *, uint64_t), __n128))v305)(v126, v73, v233);
    swift_release(v270);
    return;
  }
LABEL_136:
  v250 = (void *)objc_opt_self(UIView);
  v251 = swift_allocObject(&unk_3865A0, 32, 7);
  *(_QWORD *)(v251 + 16) = sub_17791C;
  *(_QWORD *)(v251 + 24) = v241;
  v252 = swift_allocObject(&unk_3865C8, 32, 7);
  *(_QWORD *)(v252 + 16) = sub_43920;
  *(_QWORD *)(v252 + 24) = v251;
  *(_QWORD *)&v309 = sub_101EC;
  *((_QWORD *)&v309 + 1) = v252;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v308 = sub_920D4;
  *((_QWORD *)&v308 + 1) = &block_descriptor_35;
  v253 = _Block_copy(&aBlock);
  v254 = *((_QWORD *)&v309 + 1);
  swift_retain(v271);
  swift_retain(v236);
  v255 = v270;
  swift_retain(v270);
  swift_retain(v241);
  swift_retain(v252);
  objc_msgSend(v250, "performWithoutAnimation:", v253, swift_release(v254).n128_f64[0]);
  _Block_release(v253);
  swift_release(v236);
  v256 = swift_release(v241);
  ((void (*)(_QWORD *, uint64_t, __n128))v305)(v126, v284, v256);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v252, "", 165, 341, 44, 1);
  swift_release(v251);
  swift_release(v255);
  swift_release(v252);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
}

void sub_1748F0(uint64_t a1, void (*a2)(__n128))
{
  uint64_t v3;
  uint64_t Strong;
  __n128 v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_174960();
    v5 = swift_release(v6);
  }
  if (a2)
    a2(v5);
}

void sub_174960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  int64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  id (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v71;
  id (*v72)(uint64_t);
  uint64_t v73;
  void (*v74)(__int128 *__return_ptr, char *, __n128);
  __n128 v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t, uint64_t);
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __n128 v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  int64_t v114;
  uint64_t v115;
  char *i;
  unint64_t v117;
  unint64_t v118;
  int64_t v119;
  unint64_t v120;
  int64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  __n128 v133;
  __n128 v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t);
  uint64_t v145;
  uint64_t v146;
  id (*v147)(uint64_t);
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(char *, uint64_t, uint64_t);
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  id (*v162)(uint64_t);
  uint64_t v163;
  void (*v164)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, char *, uint64_t);
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  char *v174;
  char *v175;
  char *v176;
  int64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  __int128 v184;
  __int128 v185;
  uint64_t v186;
  _QWORD *v187;
  id (*v188)(uint64_t);
  uint64_t v189;
  id (*v190)(uint64_t);
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;

  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v180 = (uint64_t)&v136 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v149 = (char *)&v136 - v3;
  v4 = type metadata accessor for ClickLocationElement(0);
  v181 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v175 = (char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v142 = (char *)&v136 - v7;
  v8 = type metadata accessor for ImpressionMetrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v174 = (char *)&v136 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v137 = (char *)&v136 - v12;
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  v153 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v14 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v140 = (uint64_t)&v136 - v16;
  __chkstk_darwin(v17);
  v145 = (uint64_t)&v136 - v18;
  v143 = type metadata accessor for ImpressionMetrics.ID(0);
  v19 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v141 = (char *)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v136 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v24);
  v159 = (char *)&v136 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = type metadata accessor for ModernShelf(0);
  v160 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v152 = (char *)&v136 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v151 = (char *)&v136 - v28;
  v29 = type metadata accessor for IndexPath(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v150 = (char *)&v136 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v182 = (char *)&v136 - v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  *(_QWORD *)&v35 = __chkstk_darwin(v34).n128_u64[0];
  v168 = (char *)&v136 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = &_swiftEmptyDictionarySingleton;
  v183 = v0;
  v37 = objc_msgSend(*(id *)(v0 + 40), "indexPathsForVisibleItems", v35);
  v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v29);

  v39 = *(_QWORD *)(v38 + 16);
  v178 = v4;
  v179 = v8;
  v146 = v38;
  if (v39)
  {
    v40 = v38 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    v165 = *(_QWORD *)(v30 + 72);
    v167 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    v41 = v30;
    v42 = (char *)v40;
    v166 = v41;
    v43 = v168;
    v139 = v19;
    v138 = v23;
    v158 = v29;
    while (1)
    {
      v177 = v39;
      v167(v43, v42, v29);
      v164 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
      v164(v43, 0, 1, v29);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v43, 1, v29) == 1)
        goto LABEL_38;
      v46 = v182;
      v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v41 + 32))(v182, v43, v29);
      v48 = IndexPath.section.getter(v47);
      swift_beginAccess(&v198, &v188, 32, 0);
      v49 = v198;
      if (v198[2] && (v50 = sub_36F84(v48), (v51 & 1) != 0))
      {
        v52 = *(_QWORD *)(v49[7] + 8 * v50);
        swift_endAccess(&v188);
        swift_retain(v52);
      }
      else
      {
        v176 = v42;
        swift_endAccess(&v188);
        sub_16F4D0(&v188);
        v53 = v188;
        v54 = v189;
        v55 = (uint64_t)v190;
        v56 = v191;
        v170 = v192;
        v169 = v193;
        v172 = v194;
        v57 = v196;
        v171 = v195;
        v173 = (_QWORD *)v197;
        if (!v190)
        {
          v59 = (uint64_t)v159;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v159, 1, 1, v161);
LABEL_21:
          sub_D1D4(v59, (uint64_t *)&unk_3D3010);
          sub_1D618((uint64_t)v53, v54);
          sub_1D618(v55, v56);
          sub_1D618(v170, v169);
          sub_1D618(v172, v171);
          sub_1D618(v57, (uint64_t)v173);
          v29 = v158;
          (*(void (**)(char *, uint64_t))(v41 + 8))(v46, v158);
          v4 = v178;
          goto LABEL_22;
        }
        v58 = v159;
        v190((uint64_t)v46);
        v59 = (uint64_t)v58;
        v41 = v166;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48))(v59, 1, v161) == 1)
          goto LABEL_21;
        v163 = v57;
        v60 = v160;
        v162 = v53;
        v157 = *(void (**)(char *, uint64_t, uint64_t))(v160 + 32);
        v61 = v151;
        v62 = v161;
        v157(v151, v59, v161);
        v63 = v152;
        v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v60 + 16))(v152, v61, v62);
        v65 = IndexPath.section.getter(v64);
        v66 = v61;
        v46 = v182;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v66, v62);
        v67 = type metadata accessor for CollectionConverter.Shelf(0);
        v52 = swift_allocObject(v67, *(unsigned int *)(v67 + 48), *(unsigned __int16 *)(v67 + 52));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56))(v52+ OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___impressionMetrics, 1, 1, v154);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56))(v52+ OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf____lazy_storage___clickLocationElement, 1, 1, v156);
        v157((char *)(v52 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_model), (uint64_t)v63, v62);
        *(_QWORD *)(v52 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_index) = v65;
        sub_1D618((uint64_t)v162, v54);
        sub_1D618(v55, v56);
        sub_1D618(v170, v169);
        sub_1D618(v172, v171);
        v68 = sub_1D618(v163, (uint64_t)v173);
        v69 = IndexPath.section.getter(v68);
        swift_beginAccess(&v198, &v188, 33, 0);
        swift_retain(v52);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v198);
        v187 = v198;
        v198 = (_QWORD *)0x8000000000000000;
        sub_15F860(v52, v69, isUniquelyReferenced_nonNull_native);
        v71 = v198;
        v198 = v187;
        swift_bridgeObjectRelease(v71);
        swift_endAccess(&v188);
        v29 = v158;
        v42 = v176;
      }
      sub_16F4D0(&v188);
      v72 = v188;
      v73 = v189;
      v162 = v190;
      v163 = v191;
      v169 = v192;
      v74 = (void (*)(__int128 *__return_ptr, char *, __n128))v194;
      v170 = v193;
      v172 = v196;
      v173 = (_QWORD *)v197;
      v171 = v195;
      if (!v194)
        break;
      v75 = swift_retain(v52);
      v74(&v184, v46, v75);
      v43 = v168;
      if (!*((_QWORD *)&v185 + 1))
        goto LABEL_4;
      v157 = (void (*)(char *, uint64_t, uint64_t))v52;
      sub_1B738(&v184, (uint64_t)&v187);
      v76 = v150;
      v167(v150, v46, v29);
      if (v72)
      {
        v148 = v73;
        v147 = v72;
        v77 = (uint64_t)v72((uint64_t)v76);
        v44 = *(void (**)(char *, uint64_t))(v166 + 8);
        v44(v76, v29);
        if (v77)
        {
          v144 = v44;
          sub_1D5D4((uint64_t)&v187, (uint64_t)&v184);
          v78 = v157;
          v79 = swift_retain(v157);
          v80 = v77;
          v81 = IndexPath.row.getter(v79);
          __swift_destroy_boxed_opaque_existential_0(&v187);
          v82 = type metadata accessor for CollectionConverter.ShelfItem(0);
          v83 = (_QWORD *)swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
          v83[10] = 0;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56))((uint64_t)v83+ OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___impressionMetrics, 1, 1, v154);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56))((uint64_t)v83+ OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter9ShelfItem____lazy_storage___clickLocationElement, 1, 1, v156);
          v83[2] = v78;
          sub_1B738(&v184, (uint64_t)(v83 + 3));
          swift_release(v78);
          sub_1D618((uint64_t)v147, v148);
          sub_1D618((uint64_t)v162, v163);
          sub_1D618(v169, v170);
          sub_1D618((uint64_t)v74, v171);
          sub_1D618(v172, (uint64_t)v173);
          v83[8] = v80;
          v83[9] = v81;
          v173 = v83;
          v84 = v145;
          CollectionConverter.Shelf.impressionMetrics.getter(v145);
          v85 = v84;
          v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
          v87 = v86(v84, 1, v179);
          v176 = v42;
          if (v87)
          {
            sub_D1D4(v84, &qword_3D0EE0);
            v4 = v178;
            v88 = (uint64_t)v149;
            v89 = (uint64_t)v173;
            goto LABEL_32;
          }
          v90 = v141;
          ImpressionMetrics.id.getter();
          sub_D1D4(v85, &qword_3D0EE0);
          v91 = v139;
          v92 = v138;
          v93 = v143;
          (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v138, v90, v143);
          v94 = *(_QWORD *)(v183 + 48);
          v95 = swift_retain(v94);
          v96 = DynamicImpressionsCalculator.childCalculator(for:)(v92, v95);
          v97 = swift_release(v94);
          if (v96)
          {
            v98 = v140;
            v89 = (uint64_t)v173;
            CollectionConverter.ShelfItem.impressionMetrics.getter(v140);
            v99 = v98;
            v100 = v98;
            v101 = v179;
            if (v86(v100, 1, v179) == 1)
            {
              (*(void (**)(char *, uint64_t))(v139 + 8))(v138, v143);
              swift_release(v96);
              sub_D1D4(v99, &qword_3D0EE0);
            }
            else
            {
              v102 = v137;
              (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v137, v99, v101);
              DynamicImpressionsCalculator.moveElement(_:to:)(v102, *(_QWORD *)(v89 + 72));
              v103 = swift_release(v96);
              (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v102, v101, v103);
              (*(void (**)(char *, uint64_t))(v139 + 8))(v138, v143);
            }
            v4 = v178;
            v88 = (uint64_t)v149;
            v29 = v158;
LABEL_32:
            v41 = v166;
          }
          else
          {
            (*(void (**)(char *, uint64_t, __n128))(v91 + 8))(v92, v93, v97);
            v4 = v178;
            v88 = (uint64_t)v149;
            v29 = v158;
            v41 = v166;
            v89 = (uint64_t)v173;
          }
          CollectionConverter.ShelfItem.clickLocationElement.getter(v88);
          v104 = (uint64_t)v149;
          v105 = v181;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v181 + 48))(v149, 1, v4) == 1)
          {
            v144(v182, v29);
            swift_release(v89);
            swift_release(v157);
            sub_D1D4(v104, &qword_3D56E0);
          }
          else
          {
            v106 = v142;
            (*(void (**)(char *, uint64_t, uint64_t))(v105 + 32))(v142, v104, v4);
            v107 = *(_QWORD *)(v183 + 56);
            v108 = swift_retain(v107);
            ClickLocationTracker.addElement(_:)(v106, v108);
            swift_release(v157);
            swift_release(v89);
            v109 = swift_release(v107);
            (*(void (**)(char *, uint64_t, __n128))(v105 + 8))(v106, v4, v109);
            v144(v182, v29);
          }
LABEL_22:
          v8 = v179;
          v43 = v168;
          v45 = v177;
          v42 = v176;
          goto LABEL_6;
        }
        v43 = v168;
      }
      else
      {
        v44 = *(void (**)(char *, uint64_t))(v166 + 8);
        v44(v76, v29);
      }
      v52 = (uint64_t)v157;
      __swift_destroy_boxed_opaque_existential_0(&v187);
      swift_release(v52);
      sub_1D618((uint64_t)v72, v73);
      sub_1D618((uint64_t)v162, v163);
      sub_1D618(v169, v170);
      sub_1D618((uint64_t)v74, v171);
      sub_1D618(v172, (uint64_t)v173);
      v4 = v178;
      v41 = v166;
LABEL_5:
      v44(v182, v29);
      swift_release(v52);
      v8 = v179;
      v45 = v177;
LABEL_6:
      v42 += v165;
      v39 = v45 - 1;
      if (!v39)
      {
        v164(v43, 1, 1, v29);
        goto LABEL_38;
      }
    }
    v186 = 0;
    v184 = 0u;
    v185 = 0u;
    swift_retain(v52);
    v43 = v168;
LABEL_4:
    sub_D1D4((uint64_t)&v184, &qword_3D1A10);
    swift_release(v52);
    sub_1D618((uint64_t)v72, v73);
    sub_1D618((uint64_t)v162, v163);
    sub_1D618(v169, v170);
    sub_1D618((uint64_t)v74, v171);
    sub_1D618(v172, (uint64_t)v173);
    v41 = v166;
    v44 = *(void (**)(char *, uint64_t))(v166 + 8);
    v4 = v178;
    goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v168, 1, 1, v29);
LABEL_38:
  swift_bridgeObjectRelease(v146);
  swift_beginAccess(&v198, &v188, 0, 0);
  v110 = v198[8];
  v176 = (char *)(v198 + 8);
  v111 = 1 << *((_BYTE *)v198 + 32);
  v112 = -1;
  if (v111 < 64)
    v112 = ~(-1 << v111);
  v113 = v112 & v110;
  v177 = (unint64_t)(v111 + 63) >> 6;
  v182 = (char *)v198;
  swift_bridgeObjectRetain(v198);
  v114 = 0;
  v115 = v9;
  for (i = v14; ; v14 = i)
  {
    if (v113)
    {
      v117 = __clz(__rbit64(v113));
      v113 &= v113 - 1;
      v118 = v117 | (v114 << 6);
      goto LABEL_61;
    }
    v119 = v114 + 1;
    if (__OFADD__(v114, 1))
    {
      __break(1u);
      goto LABEL_68;
    }
    if (v119 >= v177)
      goto LABEL_66;
    v120 = *(_QWORD *)&v176[8 * v119];
    ++v114;
    if (!v120)
    {
      v114 = v119 + 1;
      if (v119 + 1 >= v177)
        goto LABEL_66;
      v120 = *(_QWORD *)&v176[8 * v114];
      if (!v120)
      {
        v114 = v119 + 2;
        if (v119 + 2 >= v177)
          goto LABEL_66;
        v120 = *(_QWORD *)&v176[8 * v114];
        if (!v120)
        {
          v114 = v119 + 3;
          if (v119 + 3 >= v177)
            goto LABEL_66;
          v120 = *(_QWORD *)&v176[8 * v114];
          if (!v120)
            break;
        }
      }
    }
LABEL_60:
    v113 = (v120 - 1) & v120;
    v118 = __clz(__rbit64(v120)) + (v114 << 6);
LABEL_61:
    v122 = *(_QWORD *)(*((_QWORD *)v182 + 7) + 8 * v118);
    swift_retain(v122);
    CollectionConverter.Shelf.impressionMetrics.getter((uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
    {
      sub_D1D4((uint64_t)v14, &qword_3D0EE0);
    }
    else
    {
      v123 = v14;
      v124 = v174;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v174, v123, v8);
      v125 = *(_QWORD *)(v183 + 48);
      v126 = *(_QWORD *)(v122 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_index);
      swift_retain(v125);
      v127 = v126;
      v4 = v178;
      DynamicImpressionsCalculator.moveElement(_:to:)(v124, v127);
      v128 = swift_release(v125);
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v124, v8, v128);
    }
    v129 = v180;
    CollectionConverter.Shelf.clickLocationElement.getter(v180);
    v130 = v181;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v181 + 48))(v129, 1, v4) == 1)
    {
      swift_release(v122);
      sub_D1D4(v129, &qword_3D56E0);
    }
    else
    {
      v131 = v175;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 32))(v175, v129, v4);
      v132 = *(_QWORD *)(v183 + 56);
      v133 = swift_retain(v132);
      ClickLocationTracker.addElement(_:)(v131, v133);
      swift_release(v122);
      v134 = swift_release(v132);
      v135 = v131;
      v8 = v179;
      (*(void (**)(char *, uint64_t, __n128))(v130 + 8))(v135, v4, v134);
    }
    v9 = v115;
  }
  v121 = v119 + 4;
  if (v121 >= v177)
  {
LABEL_66:
    swift_release(v182);
    swift_bridgeObjectRelease(v198);
    return;
  }
  v120 = *(_QWORD *)&v176[8 * v121];
  if (v120)
  {
    v114 = v121;
    goto LABEL_60;
  }
  while (1)
  {
    v114 = v121 + 1;
    if (__OFADD__(v121, 1))
      break;
    if (v114 >= v177)
      goto LABEL_66;
    v120 = *(_QWORD *)&v176[8 * v114];
    ++v121;
    if (v120)
      goto LABEL_60;
  }
LABEL_68:
  __break(1u);
}

uint64_t sub_175C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  _BYTE v18[24];

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9458);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = swift_projectBox(a2);
  v14 = sub_16ECD4();
  v15 = swift_beginAccess(v13, v18, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, v13, v9, v15);
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v12, a3, a4, a5);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_175D60(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  Class isa;

  __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E60);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class, uint64_t, double, double))(a5 + 16))(a5, isa, a4, a1, a2);

}

void sub_175DE0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, double, double), double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t Strong;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[24];
  _BYTE v63[32];

  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a7 + 16;
  if (a3)
    a3(a1, a2, a4, a5);
  swift_beginAccess(v19, v63, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v19);
  if (Strong)
  {
    v21 = (void *)Strong;
    v47 = a1;
    v48 = a2;
    v22 = (uint64_t *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
    swift_beginAccess(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter, v62, 0, 0);
    v23 = *v22;
    v24 = v22[1];
    v50 = v15;
    v51 = v16;
    v25 = v22[2];
    v26 = v22[3];
    v28 = v22[4];
    v27 = v22[5];
    v49 = a8;
    v29 = v22[6];
    v30 = v22[7];
    v32 = v22[8];
    v31 = v22[9];
    v52 = v23;
    v53 = v24;
    v54 = v25;
    v55 = v26;
    v56 = v28;
    v57 = v27;
    v58 = v29;
    v59 = v30;
    v60 = v32;
    v61 = v31;
    sub_2C690(v23, v24);
    sub_2C690(v25, v26);
    sub_2C690(v28, v27);
    sub_2C690(v29, v30);
    sub_2C690(v32, v31);
    IndexPath.init(row:section:)(0, v49);
    v33 = CollectionConverter.shelf(for:)((uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v18, v50);
    v34 = v54;
    v35 = v55;
    v36 = v56;
    v37 = v57;
    v38 = v58;
    v39 = v59;
    v40 = v60;
    v41 = v61;
    sub_1D618(v52, v53);
    sub_1D618(v34, v35);
    sub_1D618(v36, v37);
    sub_1D618(v38, v39);
    sub_1D618(v40, v41);
    if (v33)
    {
      v42 = sub_E0680();
      if (v42)
      {
        v44 = v42;
        v45 = v43;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v45 + 56))(v47, v48, ObjectType, v45, a4, 0.0);

        swift_release(v33);
        swift_unknownObjectRelease(v44);
      }
      else
      {

        swift_release(v33);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_176044()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));

  sub_17782C(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  sub_D1D4(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader, (uint64_t *)&unk_3D2E90);
  return v0;
}

uint64_t sub_1760D4()
{
  uint64_t v0;

  sub_176044();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1760F8()
{
  return type metadata accessor for CollectionController(0);
}

uint64_t type metadata accessor for CollectionController(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D9298, (uint64_t)&nominal type descriptor for CollectionController);
}

void sub_176114(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[10];

  v5[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[6] = "\b";
  v5[7] = "\b";
  v5[8] = &unk_2FA800;
  sub_17B380(319, (unint64_t *)&unk_3D92A8, (uint64_t (*)(uint64_t))&type metadata accessor for Header, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(v2 - 8) + 64, &unk_2FA818);
    v5[9] = v4;
    swift_updateClassMetadata2(a1, 256, 10, v5, a1 + 80);
  }
}

double sub_1761F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = (uint64_t *)(v2 + *(int *)(a2 + 28));
  v5 = *v4;
  v6 = v4[1];
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(a1, v5, v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t sub_176240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = *(int *)(type metadata accessor for Diffable(0, a3, a3, a4) + 28);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  v10 = v9[1];
  if (v7 == *v9 && v8 == v10)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, *v9, v10, 0);
}

Swift::Int sub_1762A0(uint64_t a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  sub_1761F4((uint64_t)v3, a1);
  return Hasher._finalize()();
}

Swift::Int sub_1762EC(uint64_t a1, uint64_t a2)
{
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  sub_1761F4((uint64_t)v4, a2);
  return Hasher._finalize()();
}

uint64_t sub_17632C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_176240(a1, a2, *(_QWORD *)(a3 + 16), a4);
}

id sub_176334(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  double v12;
  char v15[24];

  v7 = type metadata accessor for ModernTitleHeaderView.Style(0);
  __chkstk_darwin(v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_19C4C(a5, (uint64_t)v9, v10);
  ModernTitleHeaderView.style.setter((uint64_t)v9);
  v11 = &a1[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions];
  *(_QWORD *)&v12 = swift_beginAccess(&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions], v15, 1, 0).n128_u64[0];
  *v11 = 2;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separator], "setHidden:", 1, v12);
  return objc_msgSend(a1, "setNeedsLayout");
}

uint64_t sub_17640C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D94A8);
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Supplementaries.InlineHeader(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ModernTitleHeaderView.Style(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - v11;
  __swift_allocate_value_buffer(v3, qword_3D9240);
  v13 = __swift_project_value_buffer(v3, (uint64_t)qword_3D9240);
  if (qword_3CF9E0 != -1)
    swift_once(&qword_3CF9E0, sub_1C61A0);
  v14 = __swift_project_value_buffer(v6, (uint64_t)qword_3FCEA8);
  sub_19C4C(v14, (uint64_t)v12, type metadata accessor for ModernTitleHeaderView.Style);
  *(_QWORD *)v5 = 0xD000000000000020;
  *((_QWORD *)v5 + 1) = 0x8000000000311820;
  sub_19C4C((uint64_t)v12, (uint64_t)&v5[*(int *)(v3 + 20)], type metadata accessor for ModernTitleHeaderView.Style);
  sub_19C4C((uint64_t)v12, (uint64_t)v9, type metadata accessor for ModernTitleHeaderView.Style);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(&unk_386640, v16 + v8, v15 | 7);
  sub_1B79C((uint64_t)v9, v17 + v16, type metadata accessor for ModernTitleHeaderView.Style);
  v18 = type metadata accessor for ModernTitleHeaderView(0);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(0xD000000000000020, 0x8000000000311820, sub_179574, v17, v18);
  sub_FA4C((uint64_t)v12, type metadata accessor for ModernTitleHeaderView.Style);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v5[*(int *)(v3 + 24)], v2, v21);
  return sub_1B79C((uint64_t)v5, v13, type metadata accessor for Supplementaries.InlineHeader);
}

uint64_t sub_17665C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D94A8);
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Supplementaries.InlineHeader(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ModernTitleHeaderView.Style(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - v11;
  __swift_allocate_value_buffer(v3, qword_3D9258);
  v13 = __swift_project_value_buffer(v3, (uint64_t)qword_3D9258);
  if (qword_3CF9B0 != -1)
    swift_once(&qword_3CF9B0, sub_1C4C38);
  v14 = __swift_project_value_buffer(v6, (uint64_t)qword_3FCE18);
  sub_19C4C(v14, (uint64_t)v12, type metadata accessor for ModernTitleHeaderView.Style);
  *(_QWORD *)v5 = 0xD000000000000026;
  *((_QWORD *)v5 + 1) = 0x8000000000311850;
  sub_19C4C((uint64_t)v12, (uint64_t)&v5[*(int *)(v3 + 20)], type metadata accessor for ModernTitleHeaderView.Style);
  sub_19C4C((uint64_t)v12, (uint64_t)v9, type metadata accessor for ModernTitleHeaderView.Style);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(&unk_386668, v16 + v8, v15 | 7);
  sub_1B79C((uint64_t)v9, v17 + v16, type metadata accessor for ModernTitleHeaderView.Style);
  v18 = type metadata accessor for ModernTitleHeaderView(0);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(0xD000000000000026, 0x8000000000311850, sub_179574, v17, v18);
  sub_FA4C((uint64_t)v12, type metadata accessor for ModernTitleHeaderView.Style);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v5[*(int *)(v3 + 24)], v2, v21);
  return sub_1B79C((uint64_t)v5, v13, type metadata accessor for Supplementaries.InlineHeader);
}

id sub_1768AC(uint64_t a1, void *a2)
{
  char *v2;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  objc_super v15;

  v5 = &v2[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_viewProvider];
  swift_weakInit(&v2[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_viewProvider], 0);
  v6 = &v2[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_collectionView];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_collectionView], 0);
  v7 = &v2[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_recordedSize];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v2[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_recordedHorizontalSizeClass];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  swift_weakAssign(v5, a1);
  swift_unknownObjectWeakAssign(v6, a2);
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for CollectionController.CollectionViewBackgroundAdjustHackView();
  v9 = objc_msgSendSuper2(&v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36C8);
  v11 = swift_allocObject(v10, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v11 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v11 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v12 = v9;
  v13 = UIView.registerForTraitChanges(_:action:)(v11, "setNeedsLayout");
  swift_unknownObjectRelease(v13);
  swift_bridgeObjectRelease(v11);

  swift_release(a1);
  return v12;
}

double sub_176AF4()
{
  char *v0;
  id v1;
  id v2;
  char *v3;
  BOOL v4;
  double *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double result;
  double v13;
  double v14;
  uint64_t v15;
  BOOL v16;
  uint64_t Strong;
  uint64_t v18;
  void *v19;
  id v20;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "horizontalSizeClass");

  v3 = &v0[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_recordedHorizontalSizeClass];
  v4 = (v0[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_recordedHorizontalSizeClass
         + 8] & 1) != 0
    || *(_QWORD *)v3 != (_QWORD)v2;
  *(_QWORD *)v3 = v2;
  v3[8] = 0;
  v5 = (double *)&v0[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_recordedSize];
  v6 = *(double *)&v0[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_recordedSize];
  v7 = *(double *)&v0[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_recordedSize
                    + 8];
  objc_msgSend(v0, "bounds");
  v9 = v8;
  v11 = v10;
  objc_msgSend(v0, "bounds");
  v14 = v13;
  *v5 = v13;
  *((_QWORD *)v5 + 1) = v15;
  if (v4 || (v6 == v9 ? (v16 = v7 == v11) : (v16 = 0), !v16))
  {
    Strong = swift_weakLoadStrong(&v0[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_viewProvider]);
    if (Strong)
    {
      v18 = Strong;
      v19 = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView_collectionView]);
      if (v19)
      {
        v20 = v19;
        ShelvesViewProvider.adjust(collectionView:boundsSize:horizontalSizeClass:)(v19, (uint64_t)v2, v14);
        swift_release(v18);

      }
      else
      {
        *(_QWORD *)&result = swift_release(v18).n128_u64[0];
      }
    }
  }
  return result;
}

id sub_176CB4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollectionController.CollectionViewBackgroundAdjustHackView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CollectionController.CollectionViewBackgroundAdjustHackView()
{
  return objc_opt_self(_TtCC23ShelfKitCollectionViews20CollectionControllerP33_837FEDCB1403A966AF6BE091B9902C8A38CollectionViewBackgroundAdjustHackView);
}

uint64_t sub_176D40(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_2FA860;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t *sub_176DB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain(v9);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = v11[1];
    v10[1] = v12;
    swift_bridgeObjectRetain(v12);
  }
  return v4;
}

double sub_176E70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)&dword_8
                                                           + ((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFF8))).n128_u64[0];
  return result;
}

uint64_t sub_176EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v8[1];
  v7[1] = v9;
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t sub_176F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v8[1];
  v10 = v7[1];
  v7[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t sub_176F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_176FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v7[1];
  v7[1] = v8[1];
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t sub_177054(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((char *)&dword_8 + ((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8));
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1770D0 + 4 * byte_2FA750[v10]))();
  }
}

void sub_177154(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_177248()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1772C0);
}

void sub_177250(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x177258);
  JUMPOUT(0x1772C0);
}

void sub_17729C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1772C0);
}

void sub_1772A4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1772C0);
}

uint64_t sub_1772AC(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1772B8);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1772C0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for Diffable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Diffable);
}

uint64_t sub_1772E4(uint64_t a1)
{
  return swift_getWitnessTable(&unk_2FA888, a1);
}

id sub_1772F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v2 = a2;
  v3 = a1;
  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_50:
    if (v2 < 0)
      v31 = v2;
    else
      v31 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v2);
    if (v5 == v32)
      goto LABEL_4;
LABEL_54:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (a1 < 0)
    v30 = a1;
  else
    v30 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v3);
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_50;
LABEL_3:
  if (v5 != *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_54;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_60;
  v33 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_61;
  for (result = *(id *)(v3 + 32); ; result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_21:
    v14 = v13;
    sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
    v15 = static NSObject.== infix(_:_:)(v12, v14);

    if ((v15 & 1) == 0)
      goto LABEL_54;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v33)
          v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_59;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = static NSObject.== infix(_:_:)(v20, v21);

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_58;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = static NSObject.== infix(_:_:)(v2, v3);

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

BOOL sub_1775E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  double *v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (double *)(a1 + 40);
  v6 = (double *)(a2 + 40);
  do
  {
    v7 = *v5++;
    v8 = v7;
    v9 = *v6++;
    v10 = v9;
    v12 = v4-- != 0;
    result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

uint64_t sub_17765C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v20;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_D184(a1 + v12, (uint64_t)v10, &qword_3D9460);
      sub_D184(a2 + v12, (uint64_t)v6, &qword_3D9460);
      v14 = *(int *)(v4 + 28);
      v15 = *(_QWORD *)&v10[v14];
      v16 = *(_QWORD *)&v10[v14 + 8];
      v17 = &v6[v14];
      v18 = *((_QWORD *)v17 + 1);
      if (v15 == *(_QWORD *)v17 && v16 == v18)
      {
        sub_D1D4((uint64_t)v6, &qword_3D9460);
        sub_D1D4((uint64_t)v10, &qword_3D9460);
      }
      else
      {
        v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *(_QWORD *)v17, v18, 0);
        sub_D1D4((uint64_t)v6, &qword_3D9460);
        sub_D1D4((uint64_t)v10, &qword_3D9460);
        if ((v20 & 1) == 0)
          return 0;
      }
      v12 += v13;
      --v11;
    }
    while (v11);
  }
  return 1;
}

id sub_1777C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  void *v8;

  v6 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = swift_unknownObjectRetain(a3);
  v8 = (void *)v6(a2, a3, v7);
  swift_release(v5);
  swift_unknownObjectRelease(a3);
  return v8;
}

uint64_t sub_17782C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (result != 1)
  {
    sub_1D618(result, a2);
    sub_1D618(a3, a4);
    sub_1D618(a5, a6);
    sub_1D618(a7, a8);
    return sub_1D618(a9, a10);
  }
  return result;
}

uint64_t sub_1778B4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1778D8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_17790C()
{
  uint64_t v0;

  sub_1748F0(*(_QWORD *)(v0 + 16), *(void (**)(__n128))(v0 + 24));
}

uint64_t sub_177920()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_177944()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_35(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t objectdestroy_5Tm()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1779A4()
{
  uint64_t v0;

  return sub_175C68(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_1779B4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  Swift::Int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  _QWORD v60[10];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9450);
  __chkstk_darwin(v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  v7 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - v11;
  __chkstk_darwin(v13);
  v56 = (uint64_t)&v48 - v14;
  if (!*(_QWORD *)(*v2 + 16))
    return;
  v15 = *(_QWORD *)(a1 + 56);
  v49 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v50 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v19 = 0;
  v53 = v6;
  v54 = v2;
  v55 = a1;
  v51 = v12;
  v52 = v7;
  while (1)
  {
    if (v18)
    {
      v57 = (v18 - 1) & v18;
      v58 = v19;
      v23 = __clz(__rbit64(v18)) | (v19 << 6);
      goto LABEL_26;
    }
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v24 >= v50)
      goto LABEL_39;
    v25 = *(_QWORD *)(v49 + 8 * v24);
    v26 = v19 + 1;
    if (!v25)
    {
      v26 = v19 + 2;
      if (v19 + 2 >= v50)
        goto LABEL_39;
      v25 = *(_QWORD *)(v49 + 8 * v26);
      if (!v25)
      {
        v26 = v19 + 3;
        if (v19 + 3 >= v50)
          goto LABEL_39;
        v25 = *(_QWORD *)(v49 + 8 * v26);
        if (!v25)
        {
          v26 = v19 + 4;
          if (v19 + 4 >= v50)
            goto LABEL_39;
          v25 = *(_QWORD *)(v49 + 8 * v26);
          if (!v25)
            break;
        }
      }
    }
LABEL_25:
    v57 = (v25 - 1) & v25;
    v58 = v26;
    v23 = __clz(__rbit64(v25)) + (v26 << 6);
LABEL_26:
    v28 = *(_QWORD *)(v7 + 72);
    v29 = *(_QWORD *)(a1 + 48) + v28 * v23;
    v30 = v56;
    sub_D184(v29, v56, &qword_3D9460);
    sub_131648(v30, (uint64_t)v12);
    v31 = *v2;
    Hasher.init(_seed:)(v60, *(_QWORD *)(*v2 + 40));
    v32 = &v12[*(int *)(v59 + 28)];
    v33 = *(_QWORD *)v32;
    v34 = *((_QWORD *)v32 + 1);
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v34);
    String.hash(into:)(v60, v33, v34);
    swift_bridgeObjectRelease(v34);
    v35 = Hasher._finalize()();
    v36 = -1 << *(_BYTE *)(v31 + 32);
    v37 = v35 & ~v36;
    if (((*(_QWORD *)(v31 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0)
    {
      v38 = ~v36;
      while (1)
      {
        sub_D184(*(_QWORD *)(v31 + 48) + v37 * v28, (uint64_t)v9, &qword_3D9460);
        v39 = &v9[*(int *)(v59 + 28)];
        v40 = *((_QWORD *)v39 + 1);
        v41 = *((_QWORD *)v32 + 1);
        if (*(_QWORD *)v39 == *(_QWORD *)v32 && v40 == v41)
          break;
        v43 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v39, v40, *(_QWORD *)v32, v41, 0);
        sub_D1D4((uint64_t)v9, &qword_3D9460);
        if ((v43 & 1) != 0)
          goto LABEL_36;
        v37 = (v37 + 1) & v38;
        if (((*(_QWORD *)(v31 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          goto LABEL_6;
      }
      sub_D1D4((uint64_t)v9, &qword_3D9460);
LABEL_36:
      swift_bridgeObjectRelease(v31);
      v2 = v54;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v54);
      v45 = *v2;
      v60[0] = *v2;
      *v2 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_38F8C();
        v45 = v60[0];
      }
      v46 = *(_QWORD *)(v45 + 48) + v37 * v28;
      v22 = (uint64_t)v53;
      sub_131648(v46, (uint64_t)v53);
      sub_178914(v37);
      v47 = *v2;
      *v2 = v60[0];
      v20 = swift_bridgeObjectRelease(v47);
      v21 = 0;
    }
    else
    {
LABEL_6:
      v20 = swift_bridgeObjectRelease(v31);
      v21 = 1;
      v22 = (uint64_t)v53;
      v2 = v54;
    }
    v12 = v51;
    v7 = v52;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v52 + 56))(v22, v21, 1, v59, v20);
    sub_D1D4(v22, &qword_3D9450);
    sub_D1D4((uint64_t)v12, &qword_3D9460);
    a1 = v55;
    v18 = v57;
    v19 = v58;
  }
  v27 = v19 + 5;
  if (v19 + 5 >= v50)
  {
LABEL_39:
    swift_release(a1);
    return;
  }
  v25 = *(_QWORD *)(v49 + 8 * v27);
  if (v25)
  {
    v26 = v19 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v26 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v26 >= v50)
      goto LABEL_39;
    v25 = *(_QWORD *)(v49 + 8 * v26);
    ++v27;
    if (v25)
      goto LABEL_25;
  }
LABEL_42:
  __break(1u);
}

void *sub_177DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t isStackAllocationSafe;
  char v42;
  unsigned int v43;
  unint64_t v44;
  uint64_t v45;
  size_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD v66[9];
  uint64_t v67[3];
  unint64_t v68;
  uint64_t v69;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9450);
  __chkstk_darwin(v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v53 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }
  v65 = v11;
  v62 = v6;
  v14 = -1 << *(_BYTE *)(a1 + 32);
  if (-v14 < 64)
    v15 = ~(-1 << -(char)v14);
  else
    v15 = -1;
  v16 = v15 & *(_QWORD *)(a1 + 56);
  v67[0] = a1;
  v67[1] = a1 + 56;
  v57 = a1 + 56;
  v56 = ~v14;
  v67[2] = ~v14;
  v17 = (unint64_t)(63 - v14) >> 6;
  v18 = a2 + 56;
  v53 = v17 - 1;
  swift_bridgeObjectRetain(a1);
  v19 = 0;
  v58 = v17;
  v55 = v17 - 6;
  v54 = a1 + 104;
  v59 = a1;
  v61 = v13;
  while (1)
  {
    v60 = v19;
    if (v16)
    {
      v63 = (v16 - 1) & v16;
      v64 = v19;
      v20 = __clz(__rbit64(v16)) | (v19 << 6);
      v21 = (uint64_t)v62;
LABEL_9:
      v22 = v65;
      sub_D184(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v65 + 72) * v20, v21, &qword_3D9460);
      v23 = 0;
      goto LABEL_16;
    }
    v24 = v19 + 1;
    v21 = (uint64_t)v62;
    if (__OFADD__(v19, 1))
      __break(1u);
    if (v24 >= v58)
    {
      v63 = 0;
      v64 = v19;
LABEL_15:
      v23 = 1;
      v22 = v65;
      goto LABEL_16;
    }
    v25 = *(_QWORD *)(v57 + 8 * v24);
    if (v25)
      goto LABEL_13;
    v39 = v19 + 2;
    if ((uint64_t)(v19 + 2) >= v58)
    {
      v63 = 0;
      v64 = v19 + 1;
      goto LABEL_15;
    }
    v25 = *(_QWORD *)(v57 + 8 * v39);
    if (v25)
      goto LABEL_28;
    if ((uint64_t)(v19 + 3) >= v58)
      goto LABEL_41;
    v25 = *(_QWORD *)(v57 + 8 * (v19 + 3));
    if (v25)
    {
      v24 = v19 + 3;
      goto LABEL_13;
    }
    v39 = v19 + 4;
    if ((uint64_t)(v19 + 4) >= v58)
    {
      v63 = 0;
      v64 = v19 + 3;
      goto LABEL_15;
    }
    v25 = *(_QWORD *)(v57 + 8 * v39);
    if (v25)
    {
LABEL_28:
      v24 = v39;
LABEL_13:
      v63 = (v25 - 1) & v25;
      v64 = v24;
      v20 = __clz(__rbit64(v25)) + (v24 << 6);
      goto LABEL_9;
    }
    v24 = v19 + 5;
    if ((uint64_t)(v19 + 5) >= v58)
    {
LABEL_41:
      v63 = 0;
      v64 = v39;
      goto LABEL_15;
    }
    v25 = *(_QWORD *)(v57 + 8 * v24);
    if (v25)
      goto LABEL_13;
    v40 = v19;
    while (v55 != v40)
    {
      v25 = *(_QWORD *)(v54 + 8 * v40++);
      if (v25)
      {
        v24 = v40 + 5;
        goto LABEL_13;
      }
    }
    v63 = 0;
    v23 = 1;
    v64 = v53;
    v22 = v65;
LABEL_16:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v21, v23, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v7) == 1)
    {
      sub_F9918(a1);
      sub_D1D4(v21, &qword_3D9450);
      return (void *)a2;
    }
    sub_131648(v21, (uint64_t)v13);
    Hasher.init(_seed:)(v66, *(_QWORD *)(a2 + 40));
    v26 = &v13[*(int *)(v7 + 28)];
    v27 = *(_QWORD *)v26;
    v28 = *((_QWORD *)v26 + 1);
    swift_bridgeObjectRetain(v28);
    String.hash(into:)(v66, v27, v28);
    swift_bridgeObjectRelease(v28);
    v29 = Hasher._finalize()();
    v30 = -1 << *(_BYTE *)(a2 + 32);
    v31 = v29 & ~v30;
    if (((*(_QWORD *)(v18 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) != 0)
      break;
LABEL_6:
    v13 = v61;
    sub_D1D4((uint64_t)v61, &qword_3D9460);
    v16 = v63;
    v19 = v64;
    a1 = v59;
  }
  v32 = ~v30;
  v33 = *(_QWORD *)(v65 + 72);
  while (1)
  {
    sub_D184(*(_QWORD *)(a2 + 48) + v33 * v31, (uint64_t)v9, &qword_3D9460);
    v34 = &v9[*(int *)(v7 + 28)];
    v35 = *((_QWORD *)v34 + 1);
    v36 = *((_QWORD *)v26 + 1);
    if (*(_QWORD *)v34 == *(_QWORD *)v26 && v35 == v36)
    {
      v68 = v64;
      v69 = v63;
      sub_D1D4((uint64_t)v9, &qword_3D9460);
      goto LABEL_47;
    }
    v38 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v34, v35, *(_QWORD *)v26, v36, 0);
    sub_D1D4((uint64_t)v9, &qword_3D9460);
    if ((v38 & 1) != 0)
      break;
    v31 = (v31 + 1) & v32;
    if (((*(_QWORD *)(v18 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
      goto LABEL_6;
  }
  v68 = v64;
  v69 = v63;
LABEL_47:
  isStackAllocationSafe = sub_D1D4((uint64_t)v61, &qword_3D9460);
  v42 = *(_BYTE *)(a2 + 32);
  v43 = v42 & 0x3F;
  v44 = (1 << v42) + 63;
  v45 = v44 >> 6;
  v46 = 8 * (v44 >> 6);
  if (v43 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v44 >> 6), 8), (_DWORD)isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v53 - ((v46 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v46);
    sub_178474((unint64_t *)((char *)&v53 - ((v46 + 15) & 0x3FFFFFFFFFFFFFF0)), v45, a2, v31, v67);
    v48 = v47;
    swift_release(a2);
    sub_F9918(v67[0]);
    return (void *)v48;
  }
  else
  {
    v49 = (void *)swift_slowAlloc(v46, -1);
    memcpy(v49, (const void *)(a2 + 56), v46);
    sub_178474((unint64_t *)v49, v45, a2, v31, v67);
    v51 = v50;
    swift_release(a2);
    sub_F9918(v67[0]);
    swift_slowDealloc(v49, -1, -1);
    return (void *)v51;
  }
}

void sub_178474(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  Swift::Int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v51;
  int64_t v52;
  int64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[10];
  uint64_t v72;

  v61 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9450);
  __chkstk_darwin(v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  __chkstk_darwin(v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v66 = v17;
  v67 = (uint64_t)&v60 - v16;
  v18 = *(_QWORD *)(a3 + 16);
  v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v20 = *(unint64_t *)((char *)a1 + v19) & ((-1 << a4) - 1);
  v63 = a1;
  v64 = a5;
  *(unint64_t *)((char *)a1 + v19) = v20;
  v21 = &qword_3D9460;
  v22 = v17;
  v23 = v18 - 1;
  v72 = a3;
  v70 = a3 + 56;
  v65 = v11;
  while (2)
  {
    v62 = v23;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v26 = a5[2];
        v27 = a5[3];
        v28 = a5[4];
        v68 = v26;
        v69 = v25;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v27 << 6);
LABEL_6:
          v31 = v21;
          v32 = v21;
          v33 = v24;
          sub_D184(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v22 + 72) * v30, (uint64_t)v11, v32);
          v34 = 0;
          goto LABEL_7;
        }
        v52 = v27 + 1;
        if (__OFADD__(v27, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v53 = (unint64_t)(v26 + 64) >> 6;
        if (v52 >= v53)
        {
          v31 = v21;
          v29 = 0;
          v34 = 1;
          v33 = v24;
          goto LABEL_7;
        }
        v54 = *(_QWORD *)(v25 + 8 * v52);
        if (v54)
          goto LABEL_20;
        v57 = v27 + 2;
        if (v27 + 2 >= v53)
          goto LABEL_39;
        v54 = *(_QWORD *)(v25 + 8 * v57);
        if (v54)
          goto LABEL_27;
        if (v27 + 3 >= v53)
          goto LABEL_40;
        v54 = *(_QWORD *)(v25 + 8 * (v27 + 3));
        if (v54)
        {
          v52 = v27 + 3;
          goto LABEL_20;
        }
        v57 = v27 + 4;
        if (v27 + 4 < v53)
        {
          v54 = *(_QWORD *)(v25 + 8 * v57);
          if (v54)
          {
LABEL_27:
            v52 = v57;
LABEL_20:
            v29 = (v54 - 1) & v54;
            v30 = __clz(__rbit64(v54)) + (v52 << 6);
            v27 = v52;
            goto LABEL_6;
          }
          v52 = v27 + 5;
          if (v27 + 5 < v53)
          {
            v54 = *(_QWORD *)(v25 + 8 * v52);
            if (v54)
              goto LABEL_20;
            v52 = v53 - 1;
            v58 = v27 + 6;
            while (v53 != v58)
            {
              v54 = *(_QWORD *)(v25 + 8 * v58++);
              if (v54)
              {
                v52 = v58 - 1;
                goto LABEL_20;
              }
            }
LABEL_39:
            v31 = v21;
            v29 = 0;
            v34 = 1;
            v27 = v52;
            v33 = v24;
            goto LABEL_7;
          }
LABEL_40:
          v31 = v21;
          v29 = 0;
          v34 = 1;
          v27 = v57;
          v33 = v24;
          goto LABEL_7;
        }
        v31 = v21;
        v29 = 0;
        v34 = 1;
        v27 += 3;
        v33 = v24;
LABEL_7:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v11, v34, 1, v12);
        v35 = v69;
        *a5 = v33;
        a5[1] = v35;
        a5[2] = v68;
        a5[3] = v27;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v11, 1, v12) == 1)
        {
          sub_D1D4((uint64_t)v11, &qword_3D9450);
          v59 = v72;
          swift_retain(v72);
          sub_130F08(v63, v61, v62, v59);
          return;
        }
        v36 = v31;
        v37 = v67;
        sub_131648((uint64_t)v11, v67);
        v38 = v72;
        Hasher.init(_seed:)(v71, *(_QWORD *)(v72 + 40));
        v39 = (_QWORD *)(v37 + *(int *)(v12 + 28));
        v41 = *v39;
        v40 = v39[1];
        swift_bridgeObjectRetain(v40);
        String.hash(into:)(v71, v41, v40);
        swift_bridgeObjectRelease(v40);
        v42 = Hasher._finalize()();
        v43 = -1 << *(_BYTE *)(v38 + 32);
        v44 = v42 & ~v43;
        if (((*(_QWORD *)(v70 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) != 0)
          break;
LABEL_3:
        v21 = v36;
        sub_D1D4(v67, v36);
        a5 = v64;
        v11 = v65;
        v22 = v66;
      }
      v45 = ~v43;
      v46 = *(_QWORD *)(v66 + 72);
      while (1)
      {
        sub_D184(*(_QWORD *)(v72 + 48) + v46 * v44, (uint64_t)v14, v36);
        v47 = &v14[*(int *)(v12 + 28)];
        v48 = *((_QWORD *)v47 + 1);
        v49 = v39[1];
        if (*(_QWORD *)v47 == *v39 && v48 == v49)
          break;
        v51 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v47, v48, *v39, v49, 0);
        sub_D1D4((uint64_t)v14, v36);
        if ((v51 & 1) != 0)
          goto LABEL_22;
        v44 = (v44 + 1) & v45;
        if (((*(_QWORD *)(v70 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) == 0)
          goto LABEL_3;
      }
      sub_D1D4((uint64_t)v14, v36);
LABEL_22:
      v21 = v36;
      sub_D1D4(v67, v36);
      v55 = (v44 >> 3) & 0x1FFFFFFFFFFFFFF8;
      a5 = v64;
      v56 = *(unint64_t *)((char *)v63 + v55);
      *(unint64_t *)((char *)v63 + v55) = v56 & ~(1 << v44);
      v11 = v65;
      v22 = v66;
    }
    while ((v56 & (1 << v44)) == 0);
    v23 = v62 - 1;
    if (__OFSUB__(v62, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v62 != 1)
      continue;
    break;
  }
}

void sub_178914(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  Swift::Int v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[9];

  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  v3 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v32 = v1;
    v33 = v6;
    v10 = ~v8;
    swift_retain(v6);
    v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    v34 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v3 + 72);
      v14 = v33;
      while (1)
      {
        v15 = v13;
        v16 = v13 * v9;
        sub_D184(*(_QWORD *)(v14 + 48) + v13 * v9, (uint64_t)v5, &qword_3D9460);
        Hasher.init(_seed:)(v36, *(_QWORD *)(v14 + 40));
        v17 = &v5[*(int *)(v35 + 28)];
        v18 = v10;
        v19 = *(_QWORD *)v17;
        v20 = *((_QWORD *)v17 + 1);
        swift_bridgeObjectRetain(v20);
        String.hash(into:)(v36, v19, v20);
        swift_bridgeObjectRelease(v20);
        v21 = Hasher._finalize()();
        sub_D1D4((uint64_t)v5, &qword_3D9460);
        v22 = v21 & v18;
        v10 = v18;
        if (a1 >= (uint64_t)v12)
        {
          if (v22 < v12)
          {
            v13 = v15;
            v14 = v33;
            goto LABEL_6;
          }
          v13 = v15;
          v14 = v33;
          if (a1 < v22)
            goto LABEL_6;
        }
        else
        {
          v13 = v15;
          v14 = v33;
          if (v22 < v12 && a1 < v22)
            goto LABEL_6;
        }
        v23 = *(_QWORD *)(v14 + 48);
        v24 = v13 * a1;
        v25 = v23 + v13 * a1;
        v26 = v23 + v16;
        if (v13 * a1 < v16 || v25 >= v26 + v13)
        {
          swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v35);
        }
        else
        {
          a1 = v9;
          if (v24 == v16)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v25, v26);
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
        if (((*(_QWORD *)(v34 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_20;
      }
    }
    v14 = v33;
LABEL_20:
    *(_QWORD *)(v34 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v14);
    v1 = v32;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v27 = *v1;
  v28 = *(_QWORD *)(*v1 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v27 + 16) = v30;
    ++*(_DWORD *)(v27 + 36);
  }
}

uint64_t sub_178BBC(uint64_t a1, _QWORD *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id (*v36)(uint64_t);
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  id (*v61)(uint64_t);
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  char v70[24];
  char v71[24];
  id (*v72)(uint64_t);
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;

  v7 = v6;
  *(_QWORD *)(v7 + 64) = 0;
  *(_QWORD *)(v7 + 72) = 0;
  *(_QWORD *)(v7 + 80) = 1;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_OWORD *)(v7 + 104) = 0u;
  *(_OWORD *)(v7 + 120) = 0u;
  *(_OWORD *)(v7 + 136) = 0u;
  *(_QWORD *)(v7 + 152) = 0;
  v14 = v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader;
  v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v17 = type metadata accessor for Header(0, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 1, 1, v17);
  *(_BYTE *)(v14 + v15) = 1;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a4;
  *(_QWORD *)(v7 + 40) = a3;
  v18 = type metadata accessor for DynamicImpressionsCalculator(0);
  swift_retain(a1);
  swift_retain(a2);
  v69 = a4;
  v19 = a3;
  BaseObjectGraph.inject<A>(_:)(&v72, v18, v18);
  *(_QWORD *)(v7 + 48) = v72;
  v20 = type metadata accessor for ClickLocationTracker(0);
  BaseObjectGraph.inject<A>(_:)(&v72, v20, v20);
  *(_QWORD *)(v7 + 56) = v72;
  objc_msgSend(v19, "setKeyboardDismissMode:", 1);
  v21 = sub_16ECD4();
  v22 = swift_allocObject(&unk_386528, 24, 7);
  swift_weakInit(v22 + 16, v7);
  swift_retain(v22);
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_179858, v22);

  swift_release(v22);
  v68 = a5;
  sub_17042C(a5);
  if (a6)
  {
    v23 = swift_allocObject(&unk_386528, 24, 7);
    swift_weakInit(v23 + 16, v7);
    swift_retain(a6);
    v24 = swift_retain(v23);
    MultiSelectableExtension.manuallySelect.setter(sub_179860, v23, v24);
    objc_msgSend(*(id *)(v7 + 40), "setAllowsMultipleSelectionDuringEditing:", 1, swift_release(v23).n128_f64[0]);
    swift_release(a6);
  }
  else
  {
    objc_msgSend(*(id *)(v7 + 40), "setAllowsMultipleSelection:", 1);
  }
  v25 = sub_16EFD8();
  objc_msgSend(v19, "setCollectionViewLayout:", v25);

  sub_16F4D0(&v72);
  v61 = v72;
  v26 = v74;
  v58 = v75;
  v60 = v73;
  v56 = v76;
  v54 = v77;
  v27 = v78;
  swift_beginAccess(a2 + 2, v71, 1, 0);
  v28 = a2[2];
  v29 = a2[3];
  v30 = a2[4];
  v31 = a2[5];
  v32 = a2[6];
  v33 = a2[7];
  v67 = v19;
  v35 = a2[8];
  v34 = a2[9];
  v63 = a2[11];
  v65 = a2[10];
  a2[2] = v61;
  *(_OWORD *)(a2 + 3) = v60;
  a2[5] = v26;
  *((_OWORD *)a2 + 3) = v58;
  a2[8] = v56;
  *(_OWORD *)(a2 + 9) = v54;
  a2[11] = v27;
  sub_1D618(v28, v29);
  sub_1D618(v30, v31);
  sub_1D618(v32, v33);
  sub_1D618(v35, v34);
  sub_1D618(v65, v63);
  sub_16F4D0(&v72);
  v36 = v72;
  v62 = v73;
  *(_QWORD *)&v60 = v74;
  v59 = v75;
  v57 = v76;
  v55 = v77;
  v53 = v78;
  v37 = (uint64_t *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter];
  swift_beginAccess(&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter], v70, 1, 0);
  v38 = *v37;
  v39 = v37[1];
  v40 = v37[2];
  v41 = v37[3];
  v42 = v37[4];
  v43 = v37[5];
  v44 = v37[6];
  v45 = v37[7];
  v64 = v37[9];
  v66 = v37[8];
  *v37 = (uint64_t)v36;
  *(_OWORD *)(v37 + 1) = v62;
  v37[3] = v60;
  *((_OWORD *)v37 + 2) = v59;
  v37[6] = v57;
  *(_OWORD *)(v37 + 7) = v55;
  v37[9] = v53;
  sub_1D618(v38, v39);
  sub_1D618(v40, v41);
  sub_1D618(v42, v43);
  sub_1D618(v44, v45);
  sub_1D618(v66, v64);
  v46 = sub_16EFD8();
  v47 = *(void **)((char *)a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_collectionView);
  *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_collectionView) = v67;

  type metadata accessor for ShelfBackgroundView();
  v48 = v67;
  static ShelfBackgroundView.register(layout:)(v46);

  v49 = objc_allocWithZone((Class)type metadata accessor for CollectionController.CollectionViewBackgroundAdjustHackView());
  swift_retain(a2);
  v50 = v48;
  v51 = sub_1768AC((uint64_t)a2, v50);
  objc_msgSend(v50, "setBackgroundView:", v51);

  objc_msgSend(v50, "setDelegate:", v69);
  sub_D1D4(v68, &qword_3D9518);
  return v7;
}

uint64_t sub_179074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  Swift::Int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[9];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - v7;
  __chkstk_darwin(v9);
  v52 = (uint64_t)&v49 - v10;
  __chkstk_darwin(v11);
  v51 = (uint64_t)&v49 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = sub_10EDC(&qword_3D9470, &qword_3D9460, (uint64_t)&unk_2FA8B0);
  v54 = v2;
  v15 = Set.init(minimumCapacity:)(v13, v2, v14);
  v50 = v13;
  if (!v13)
    return v15;
  v16 = 0;
  v49 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v17 = *(_QWORD *)(v3 + 72);
  v18 = v51;
  while (1)
  {
    v53 = v16;
    sub_D184(v49 + v17 * v16, v18, &qword_3D9460);
    Hasher.init(_seed:)(v56, *(_QWORD *)(v15 + 40));
    v19 = (_QWORD *)(v18 + *(int *)(v54 + 28));
    v20 = *v19;
    v21 = v19[1];
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v21);
    String.hash(into:)(v56, v20, v21);
    swift_bridgeObjectRelease(v21);
    v22 = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    if (((*(_QWORD *)(v15 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
    {
      v25 = ~v23;
      while (1)
      {
        sub_D184(*(_QWORD *)(v15 + 48) + v24 * v17, (uint64_t)v5, &qword_3D9460);
        v26 = &v5[*(int *)(v54 + 28)];
        v27 = *((_QWORD *)v26 + 1);
        v28 = v19[1];
        if (*(_QWORD *)v26 == *v19 && v27 == v28)
          break;
        v30 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v26, v27, *v19, v28, 0);
        sub_D1D4((uint64_t)v5, &qword_3D9460);
        if ((v30 & 1) != 0)
          goto LABEL_4;
        v24 = (v24 + 1) & v25;
        if (((*(_QWORD *)(v15 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
          goto LABEL_14;
      }
      sub_D1D4((uint64_t)v5, &qword_3D9460);
LABEL_4:
      swift_bridgeObjectRelease(v15);
      v18 = v51;
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease(v15);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
    v18 = v51;
    sub_D184(v51, v52, &qword_3D9460);
    v55 = v15;
    v32 = *(_QWORD *)(v15 + 16);
    if (*(_QWORD *)(v15 + 24) <= v32)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_38F8C();
      v15 = v55;
    }
LABEL_29:
    *(_QWORD *)(v15 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v24;
    sub_131648(v52, *(_QWORD *)(v15 + 48) + v24 * v17);
    v45 = *(_QWORD *)(v15 + 16);
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
    {
      __break(1u);
      goto LABEL_33;
    }
    *(_QWORD *)(v15 + 16) = v47;
    swift_bridgeObjectRelease(0x8000000000000000);
LABEL_5:
    v16 = v53 + 1;
    sub_D1D4(v18, &qword_3D9460);
    if (v16 == v50)
      return v15;
  }
  v33 = v32 + 1;
  if (isUniquelyReferenced_nonNull_native)
    sub_13013C(v33);
  else
    sub_3986C(v33);
  v15 = v55;
  Hasher.init(_seed:)(v56, *(_QWORD *)(v55 + 40));
  v34 = (_QWORD *)(v52 + *(int *)(v54 + 28));
  v35 = *v34;
  v36 = v34[1];
  swift_bridgeObjectRetain(v36);
  String.hash(into:)(v56, v35, v36);
  swift_bridgeObjectRelease(v36);
  v37 = Hasher._finalize()();
  v38 = -1 << *(_BYTE *)(v15 + 32);
  v24 = v37 & ~v38;
  if (((*(_QWORD *)(v15 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
    goto LABEL_29;
  v39 = ~v38;
  while (1)
  {
    sub_D184(*(_QWORD *)(v15 + 48) + v24 * v17, (uint64_t)v8, &qword_3D9460);
    v40 = &v8[*(int *)(v54 + 28)];
    v41 = *((_QWORD *)v40 + 1);
    v42 = v34[1];
    if (*(_QWORD *)v40 == *v34 && v41 == v42)
      break;
    v44 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v40, v41, *v34, v42, 0);
    sub_D1D4((uint64_t)v8, &qword_3D9460);
    if ((v44 & 1) != 0)
      goto LABEL_34;
    v24 = (v24 + 1) & v39;
    if (((*(_QWORD *)(v15 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
    {
      v18 = v51;
      goto LABEL_29;
    }
  }
LABEL_33:
  sub_D1D4((uint64_t)v8, &qword_3D9460);
LABEL_34:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v54);
  __break(1u);
  return result;
}

id sub_1794A4(uint64_t a1)
{
  uint64_t v1;

  return sub_16F734(a1, v1);
}

uint64_t sub_1794AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_16F7D0(v1, a1);
}

uint64_t sub_1794B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_16FAE4(a1, v2, a2);
}

double sub_1794BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_16FCE4(a1, v2, a2);
}

uint64_t sub_1794C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_16FDA4(a1, a2, v2);
}

uint64_t sub_1794CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (result != 1)
  {
    sub_2C690(result, a2);
    sub_2C690(a3, a4);
    sub_2C690(a5, a6);
    sub_2C690(a7, a8);
    return sub_2C690(a9, a10);
  }
  return result;
}

id sub_179554(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_16ED7C(a1, a2, a3, v3);
}

uint64_t type metadata accessor for Supplementaries.InlineHeader(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D95D8, (uint64_t)&nominal type descriptor for Supplementaries.InlineHeader);
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v7 + v1[5];
  sub_14788(*(id *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), *(_QWORD *)(v9 + 48), *(_QWORD *)(v9 + 56), *(_QWORD *)(v9 + 64), *(void **)(v9 + 72), *(_QWORD *)(v9 + 80), *(_QWORD *)(v9 + 88), *(_QWORD *)(v9 + 96), *(_QWORD *)(v9 + 104), *(_WORD *)(v9 + 112));
  v10 = v7 + v1[6];
  sub_DCC8(*(void **)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(void **)(v10 + 48), *(_QWORD *)(v10 + 56), *(_QWORD *)(v10 + 64), *(_QWORD *)(v10 + 72), *(_QWORD *)(v10 + 80), *(_BYTE *)(v10 + 88), *(_BYTE *)(v10 + 89));
  v11 = v7 + v1[7];
  sub_DCC8(*(void **)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(void **)(v11 + 48), *(_QWORD *)(v11 + 56), *(_QWORD *)(v11 + 64), *(_QWORD *)(v11 + 72), *(_QWORD *)(v11 + 80), *(_BYTE *)(v11 + 88), *(_BYTE *)(v11 + 89));
  v12 = v7 + v1[8];
  sub_DCC8(*(void **)v12, *(_QWORD *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), *(void **)(v12 + 48), *(_QWORD *)(v12 + 56), *(_QWORD *)(v12 + 64), *(_QWORD *)(v12 + 72), *(_QWORD *)(v12 + 80), *(_BYTE *)(v12 + 88), *(_BYTE *)(v12 + 89));

  v13 = v7 + v1[10];
  sub_14788(*(id *)(v13 + 24), *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 40), *(_QWORD *)(v13 + 48), *(_QWORD *)(v13 + 56), *(_QWORD *)(v13 + 64), *(void **)(v13 + 72), *(_QWORD *)(v13 + 80), *(_QWORD *)(v13 + 88), *(_QWORD *)(v13 + 96), *(_QWORD *)(v13 + 104), *(_WORD *)(v13 + 112));
  v14 = v7 + v1[11];
  sub_14788(*(id *)(v14 + 24), *(_QWORD *)(v14 + 32), *(_QWORD *)(v14 + 40), *(_QWORD *)(v14 + 48), *(_QWORD *)(v14 + 56), *(_QWORD *)(v14 + 64), *(void **)(v14 + 72), *(_QWORD *)(v14 + 80), *(_QWORD *)(v14 + 88), *(_QWORD *)(v14 + 96), *(_QWORD *)(v14 + 104), *(_WORD *)(v14 + 112));
  return swift_deallocObject(v0, v5, v6);
}

id sub_17975C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ModernTitleHeaderView.Style(0) - 8) + 80);
  return sub_176334(a1, a2, a3, a4, v4 + ((v9 + 16) & ~v9));
}

void (*sub_1797C0(uint64_t a1, void *a2))(_QWORD)
{
  uint64_t v2;

  return sub_16F0E4(a1, a2, v2);
}

uint64_t sub_1797C8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1797EC()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_179820(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;

  sub_175DE0(a1, a2, *(void (**)(uint64_t, uint64_t, double, double))(v4 + 16), a3, a4, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t sub_17982C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_179850(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;

  sub_175D60(a3, a4, a1, a2, *(_QWORD *)(v4 + 16));
}

uint64_t sub_179858(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_16FF20(a1, a2, a3, a4, v4);
}

void sub_179860(uint64_t a1)
{
  uint64_t v1;

  sub_17245C(a1, v1);
}

uint64_t sub_179868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ReorderingExtension(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1798DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReorderingExtension(0) - 8) + 80);
  return sub_170824(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_17991C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ReorderingExtension(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_179990(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for ReorderingExtension(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_170B74(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1799E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ReorderingExtension(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_179A40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReorderingExtension(0) - 8) + 80);
  sub_171EE4(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t *sub_179A7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  __int16 v104;
  uint64_t *v107;
  char *v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  char *v112;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v91 = *a2;
    *a1 = *a2;
    v86 = (uint64_t *)(v91 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v91);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for UUID(0);
    v10 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v9 - 8) + 16);
    v11 = swift_bridgeObjectRetain(v5);
    v112 = v7;
    v108 = v8;
    v10(v7, v8, v9, v11);
    v110 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
    v12 = v110[5];
    v13 = &v7[v12];
    v14 = &v8[v12];
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v13[16] = v14[16];
    v15 = (void *)*((_QWORD *)v14 + 3);
    v16 = *((_QWORD *)v14 + 4);
    v17 = *((_QWORD *)v14 + 5);
    v18 = *((_QWORD *)v14 + 6);
    v107 = a1;
    v20 = *((_QWORD *)v14 + 7);
    v19 = *((_QWORD *)v14 + 8);
    v21 = (void *)*((_QWORD *)v14 + 9);
    v22 = *((_QWORD *)v14 + 10);
    v23 = *((_QWORD *)v14 + 11);
    v98 = *((_QWORD *)v14 + 12);
    v103 = *((_QWORD *)v14 + 13);
    v104 = *((_WORD *)v14 + 56);
    sub_1472C(v15, v16, v17, v18, v20, v19, v21, v22, v23, v98, v103, v104);
    *((_QWORD *)v13 + 3) = v15;
    *((_QWORD *)v13 + 4) = v16;
    *((_QWORD *)v13 + 5) = v17;
    *((_QWORD *)v13 + 6) = v18;
    *((_QWORD *)v13 + 7) = v20;
    *((_QWORD *)v13 + 8) = v19;
    *((_QWORD *)v13 + 9) = v21;
    *((_QWORD *)v13 + 10) = v22;
    *((_QWORD *)v13 + 11) = v23;
    *((_QWORD *)v13 + 12) = v98;
    *((_QWORD *)v13 + 13) = v103;
    *((_WORD *)v13 + 56) = v104;
    v24 = v110[6];
    v25 = &v112[v24];
    v26 = &v108[v24];
    v27 = *(void **)v26;
    v28 = *((_QWORD *)v26 + 1);
    v29 = *((_QWORD *)v26 + 2);
    v30 = *((_QWORD *)v26 + 3);
    v31 = *((_QWORD *)v26 + 4);
    v32 = *((_QWORD *)v26 + 5);
    v33 = (void *)*((_QWORD *)v26 + 6);
    v34 = *((_QWORD *)v26 + 7);
    v35 = *((_QWORD *)v26 + 8);
    v94 = *((_QWORD *)v26 + 9);
    v99 = *((_QWORD *)v26 + 10);
    LOBYTE(v103) = v26[88];
    LOBYTE(v104) = v26[89];
    sub_DDA0(*(void **)v26, v28, v29, v30, v31, v32, v33, v34, v35, v94, v99, v103, v104);
    *(_QWORD *)v25 = v27;
    *((_QWORD *)v25 + 1) = v28;
    *((_QWORD *)v25 + 2) = v29;
    *((_QWORD *)v25 + 3) = v30;
    *((_QWORD *)v25 + 4) = v31;
    *((_QWORD *)v25 + 5) = v32;
    *((_QWORD *)v25 + 6) = v33;
    *((_QWORD *)v25 + 7) = v34;
    *((_QWORD *)v25 + 8) = v35;
    *((_QWORD *)v25 + 9) = v94;
    *((_QWORD *)v25 + 10) = v99;
    v25[88] = v103;
    v25[89] = v104;
    v36 = v110[7];
    v37 = &v112[v36];
    v38 = &v108[v36];
    v39 = *(void **)v38;
    v40 = *((_QWORD *)v38 + 1);
    v41 = *((_QWORD *)v38 + 2);
    v42 = *((_QWORD *)v38 + 3);
    v43 = *((_QWORD *)v38 + 4);
    v44 = *((_QWORD *)v38 + 5);
    v45 = (void *)*((_QWORD *)v38 + 6);
    v46 = *((_QWORD *)v38 + 7);
    v47 = *((_QWORD *)v38 + 8);
    v95 = *((_QWORD *)v38 + 9);
    v100 = *((_QWORD *)v38 + 10);
    LOBYTE(v103) = v38[88];
    LOBYTE(v104) = v38[89];
    sub_DDA0(*(void **)v38, v40, v41, v42, v43, v44, v45, v46, v47, v95, v100, v103, v104);
    *(_QWORD *)v37 = v39;
    *((_QWORD *)v37 + 1) = v40;
    *((_QWORD *)v37 + 2) = v41;
    *((_QWORD *)v37 + 3) = v42;
    *((_QWORD *)v37 + 4) = v43;
    *((_QWORD *)v37 + 5) = v44;
    *((_QWORD *)v37 + 6) = v45;
    *((_QWORD *)v37 + 7) = v46;
    *((_QWORD *)v37 + 8) = v47;
    *((_QWORD *)v37 + 9) = v95;
    *((_QWORD *)v37 + 10) = v100;
    v37[88] = v103;
    v37[89] = v104;
    v48 = v110[8];
    v49 = &v112[v48];
    v50 = &v108[v48];
    v51 = *(void **)v50;
    v52 = *((_QWORD *)v50 + 1);
    v53 = *((_QWORD *)v50 + 2);
    v54 = *((_QWORD *)v50 + 3);
    v55 = *((_QWORD *)v50 + 4);
    v56 = *((_QWORD *)v50 + 5);
    v57 = (void *)*((_QWORD *)v50 + 6);
    v58 = *((_QWORD *)v50 + 7);
    v59 = *((_QWORD *)v50 + 8);
    v96 = *((_QWORD *)v50 + 9);
    v101 = *((_QWORD *)v50 + 10);
    LOBYTE(v103) = v50[88];
    LOBYTE(v104) = v50[89];
    sub_DDA0(*(void **)v50, v52, v53, v54, v55, v56, v57, v58, v59, v96, v101, v103, v104);
    *(_QWORD *)v49 = v51;
    *((_QWORD *)v49 + 1) = v52;
    *((_QWORD *)v49 + 2) = v53;
    *((_QWORD *)v49 + 3) = v54;
    *((_QWORD *)v49 + 4) = v55;
    *((_QWORD *)v49 + 5) = v56;
    *((_QWORD *)v49 + 6) = v57;
    *((_QWORD *)v49 + 7) = v58;
    *((_QWORD *)v49 + 8) = v59;
    *((_QWORD *)v49 + 9) = v96;
    *((_QWORD *)v49 + 10) = v101;
    v49[88] = v103;
    v49[89] = v104;
    v60 = v110[9];
    v61 = *(void **)&v108[v60];
    *(_QWORD *)&v112[v60] = v61;
    v62 = v110[10];
    v63 = &v112[v62];
    v64 = &v108[v62];
    *(_OWORD *)v63 = *(_OWORD *)v64;
    v63[16] = v64[16];
    v65 = *((_QWORD *)v64 + 5);
    v97 = *((_QWORD *)v64 + 4);
    v102 = (void *)*((_QWORD *)v64 + 3);
    v66 = *((_QWORD *)v64 + 6);
    v67 = *((_QWORD *)v64 + 7);
    v68 = *((_QWORD *)v64 + 8);
    v69 = (void *)*((_QWORD *)v64 + 9);
    v70 = *((_QWORD *)v64 + 11);
    v71 = *((_QWORD *)v64 + 12);
    v72 = *((_QWORD *)v64 + 13);
    v93 = *((_QWORD *)v64 + 10);
    LOWORD(v52) = *((_WORD *)v64 + 56);
    v73 = v61;
    sub_1472C(v102, v97, v65, v66, v67, v68, v69, v93, v70, v71, v72, v52);
    *((_QWORD *)v63 + 3) = v102;
    *((_QWORD *)v63 + 4) = v97;
    *((_QWORD *)v63 + 5) = v65;
    *((_QWORD *)v63 + 6) = v66;
    *((_QWORD *)v63 + 7) = v67;
    *((_QWORD *)v63 + 8) = v68;
    *((_QWORD *)v63 + 9) = v69;
    *((_QWORD *)v63 + 10) = v93;
    *((_QWORD *)v63 + 11) = v70;
    *((_QWORD *)v63 + 12) = v71;
    *((_QWORD *)v63 + 13) = v72;
    *((_WORD *)v63 + 56) = v52;
    v74 = v110[11];
    v75 = &v112[v74];
    v76 = &v108[v74];
    *(_OWORD *)v75 = *(_OWORD *)v76;
    v75[16] = v76[16];
    v77 = (void *)*((_QWORD *)v76 + 3);
    v78 = *((_QWORD *)v76 + 4);
    v79 = *((_QWORD *)v76 + 5);
    v80 = *((_QWORD *)v76 + 6);
    v81 = *((_QWORD *)v76 + 7);
    v82 = *((_QWORD *)v76 + 8);
    v83 = (void *)*((_QWORD *)v76 + 9);
    v84 = *((_QWORD *)v76 + 10);
    v85 = *((_QWORD *)v76 + 11);
    v109 = *((_QWORD *)v76 + 12);
    v111 = *((_QWORD *)v76 + 13);
    LOWORD(v112) = *((_WORD *)v76 + 56);
    sub_1472C(v77, v78, v79, v80, v81, v82, v83, v84, v85, v109, v111, (unsigned __int16)v112);
    *((_QWORD *)v75 + 3) = v77;
    *((_QWORD *)v75 + 4) = v78;
    *((_QWORD *)v75 + 5) = v79;
    *((_QWORD *)v75 + 6) = v80;
    v86 = v107;
    *((_QWORD *)v75 + 7) = v81;
    *((_QWORD *)v75 + 8) = v82;
    *((_QWORD *)v75 + 9) = v83;
    *((_QWORD *)v75 + 10) = v84;
    *((_QWORD *)v75 + 11) = v85;
    *((_QWORD *)v75 + 12) = v109;
    *((_QWORD *)v75 + 13) = v111;
    v87 = *(int *)(a3 + 24);
    v88 = (char *)v107 + v87;
    v89 = (char *)a2 + v87;
    *((_WORD *)v75 + 56) = (_WORD)v112;
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D94A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
  }
  return v86;
}

uint64_t sub_179F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v7 = v4 + v6[5];
  sub_14788(*(id *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(void **)(v7 + 72), *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), *(_QWORD *)(v7 + 96), *(_QWORD *)(v7 + 104), *(_WORD *)(v7 + 112));
  v8 = v4 + v6[6];
  sub_DCC8(*(void **)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(void **)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 72), *(_QWORD *)(v8 + 80), *(_BYTE *)(v8 + 88), *(_BYTE *)(v8 + 89));
  v9 = v4 + v6[7];
  sub_DCC8(*(void **)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), *(void **)(v9 + 48), *(_QWORD *)(v9 + 56), *(_QWORD *)(v9 + 64), *(_QWORD *)(v9 + 72), *(_QWORD *)(v9 + 80), *(_BYTE *)(v9 + 88), *(_BYTE *)(v9 + 89));
  v10 = v4 + v6[8];
  sub_DCC8(*(void **)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(void **)(v10 + 48), *(_QWORD *)(v10 + 56), *(_QWORD *)(v10 + 64), *(_QWORD *)(v10 + 72), *(_QWORD *)(v10 + 80), *(_BYTE *)(v10 + 88), *(_BYTE *)(v10 + 89));

  v11 = v4 + v6[10];
  sub_14788(*(id *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(_QWORD *)(v11 + 48), *(_QWORD *)(v11 + 56), *(_QWORD *)(v11 + 64), *(void **)(v11 + 72), *(_QWORD *)(v11 + 80), *(_QWORD *)(v11 + 88), *(_QWORD *)(v11 + 96), *(_QWORD *)(v11 + 104), *(_WORD *)(v11 + 112));
  v12 = v4 + v6[11];
  sub_14788(*(id *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), *(_QWORD *)(v12 + 48), *(_QWORD *)(v12 + 56), *(_QWORD *)(v12 + 64), *(void **)(v12 + 72), *(_QWORD *)(v12 + 80), *(_QWORD *)(v12 + 88), *(_QWORD *)(v12 + 96), *(_QWORD *)(v12 + 104), *(_WORD *)(v12 + 112));
  v13 = a1 + *(int *)(a2 + 24);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D94A8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

_QWORD *sub_17A150(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  __int16 v100;
  char *v104;
  uint64_t v105;
  int *v106;
  uint64_t v107;
  char *v108;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UUID(0);
  v8 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v7 - 8) + 16);
  v9 = swift_bridgeObjectRetain(v3);
  v108 = v5;
  v104 = v6;
  v8(v5, v6, v7, v9);
  v106 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v10 = v106[5];
  v11 = &v5[v10];
  v12 = &v6[v10];
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v11[16] = v12[16];
  v13 = (void *)*((_QWORD *)v12 + 3);
  v14 = *((_QWORD *)v12 + 4);
  v15 = *((_QWORD *)v12 + 5);
  v16 = *((_QWORD *)v12 + 6);
  v18 = *((_QWORD *)v12 + 7);
  v17 = *((_QWORD *)v12 + 8);
  v19 = (void *)*((_QWORD *)v12 + 9);
  v20 = *((_QWORD *)v12 + 10);
  v21 = *((_QWORD *)v12 + 11);
  v94 = *((_QWORD *)v12 + 12);
  v99 = *((_QWORD *)v12 + 13);
  v100 = *((_WORD *)v12 + 56);
  sub_1472C(v13, v14, v15, v16, v18, v17, v19, v20, v21, v94, v99, v100);
  *((_QWORD *)v11 + 3) = v13;
  *((_QWORD *)v11 + 4) = v14;
  *((_QWORD *)v11 + 5) = v15;
  *((_QWORD *)v11 + 6) = v16;
  *((_QWORD *)v11 + 7) = v18;
  *((_QWORD *)v11 + 8) = v17;
  *((_QWORD *)v11 + 9) = v19;
  *((_QWORD *)v11 + 10) = v20;
  *((_QWORD *)v11 + 11) = v21;
  *((_QWORD *)v11 + 12) = v94;
  *((_QWORD *)v11 + 13) = v99;
  *((_WORD *)v11 + 56) = v100;
  v22 = v106[6];
  v23 = &v108[v22];
  v24 = &v104[v22];
  v25 = *(void **)v24;
  v26 = *((_QWORD *)v24 + 1);
  v27 = *((_QWORD *)v24 + 2);
  v28 = *((_QWORD *)v24 + 3);
  v29 = *((_QWORD *)v24 + 4);
  v30 = *((_QWORD *)v24 + 5);
  v31 = (void *)*((_QWORD *)v24 + 6);
  v32 = *((_QWORD *)v24 + 7);
  v33 = *((_QWORD *)v24 + 8);
  v90 = *((_QWORD *)v24 + 9);
  v95 = *((_QWORD *)v24 + 10);
  LOBYTE(v99) = v24[88];
  LOBYTE(v100) = v24[89];
  sub_DDA0(*(void **)v24, v26, v27, v28, v29, v30, v31, v32, v33, v90, v95, v99, v100);
  *(_QWORD *)v23 = v25;
  *((_QWORD *)v23 + 1) = v26;
  *((_QWORD *)v23 + 2) = v27;
  *((_QWORD *)v23 + 3) = v28;
  *((_QWORD *)v23 + 4) = v29;
  *((_QWORD *)v23 + 5) = v30;
  *((_QWORD *)v23 + 6) = v31;
  *((_QWORD *)v23 + 7) = v32;
  *((_QWORD *)v23 + 8) = v33;
  *((_QWORD *)v23 + 9) = v90;
  *((_QWORD *)v23 + 10) = v95;
  v23[88] = v99;
  v23[89] = v100;
  v34 = v106[7];
  v35 = &v108[v34];
  v36 = &v104[v34];
  v37 = *(void **)v36;
  v38 = *((_QWORD *)v36 + 1);
  v39 = *((_QWORD *)v36 + 2);
  v40 = *((_QWORD *)v36 + 3);
  v41 = *((_QWORD *)v36 + 4);
  v42 = *((_QWORD *)v36 + 5);
  v43 = (void *)*((_QWORD *)v36 + 6);
  v44 = *((_QWORD *)v36 + 7);
  v45 = *((_QWORD *)v36 + 8);
  v91 = *((_QWORD *)v36 + 9);
  v96 = *((_QWORD *)v36 + 10);
  LOBYTE(v99) = v36[88];
  LOBYTE(v100) = v36[89];
  sub_DDA0(*(void **)v36, v38, v39, v40, v41, v42, v43, v44, v45, v91, v96, v99, v100);
  *(_QWORD *)v35 = v37;
  *((_QWORD *)v35 + 1) = v38;
  *((_QWORD *)v35 + 2) = v39;
  *((_QWORD *)v35 + 3) = v40;
  *((_QWORD *)v35 + 4) = v41;
  *((_QWORD *)v35 + 5) = v42;
  *((_QWORD *)v35 + 6) = v43;
  *((_QWORD *)v35 + 7) = v44;
  *((_QWORD *)v35 + 8) = v45;
  *((_QWORD *)v35 + 9) = v91;
  *((_QWORD *)v35 + 10) = v96;
  v35[88] = v99;
  v35[89] = v100;
  v46 = v106[8];
  v47 = &v108[v46];
  v48 = &v104[v46];
  v49 = *(void **)v48;
  v50 = *((_QWORD *)v48 + 1);
  v51 = *((_QWORD *)v48 + 2);
  v52 = *((_QWORD *)v48 + 3);
  v53 = *((_QWORD *)v48 + 4);
  v54 = *((_QWORD *)v48 + 5);
  v55 = (void *)*((_QWORD *)v48 + 6);
  v56 = *((_QWORD *)v48 + 7);
  v57 = *((_QWORD *)v48 + 8);
  v92 = *((_QWORD *)v48 + 9);
  v97 = *((_QWORD *)v48 + 10);
  LOBYTE(v99) = v48[88];
  LOBYTE(v100) = v48[89];
  sub_DDA0(*(void **)v48, v50, v51, v52, v53, v54, v55, v56, v57, v92, v97, v99, v100);
  *(_QWORD *)v47 = v49;
  *((_QWORD *)v47 + 1) = v50;
  *((_QWORD *)v47 + 2) = v51;
  *((_QWORD *)v47 + 3) = v52;
  *((_QWORD *)v47 + 4) = v53;
  *((_QWORD *)v47 + 5) = v54;
  *((_QWORD *)v47 + 6) = v55;
  *((_QWORD *)v47 + 7) = v56;
  *((_QWORD *)v47 + 8) = v57;
  *((_QWORD *)v47 + 9) = v92;
  *((_QWORD *)v47 + 10) = v97;
  v47[88] = v99;
  v47[89] = v100;
  v58 = v106[9];
  v59 = *(void **)&v104[v58];
  *(_QWORD *)&v108[v58] = v59;
  v60 = v106[10];
  v61 = &v108[v60];
  v62 = &v104[v60];
  *(_OWORD *)v61 = *(_OWORD *)v62;
  v61[16] = v62[16];
  v63 = *((_QWORD *)v62 + 5);
  v93 = *((_QWORD *)v62 + 4);
  v98 = (void *)*((_QWORD *)v62 + 3);
  v64 = *((_QWORD *)v62 + 6);
  v65 = *((_QWORD *)v62 + 7);
  v66 = *((_QWORD *)v62 + 8);
  v67 = (void *)*((_QWORD *)v62 + 9);
  v68 = *((_QWORD *)v62 + 11);
  v69 = *((_QWORD *)v62 + 12);
  v70 = *((_QWORD *)v62 + 13);
  v89 = *((_QWORD *)v62 + 10);
  LOWORD(v50) = *((_WORD *)v62 + 56);
  v71 = v59;
  sub_1472C(v98, v93, v63, v64, v65, v66, v67, v89, v68, v69, v70, v50);
  *((_QWORD *)v61 + 3) = v98;
  *((_QWORD *)v61 + 4) = v93;
  *((_QWORD *)v61 + 5) = v63;
  *((_QWORD *)v61 + 6) = v64;
  *((_QWORD *)v61 + 7) = v65;
  *((_QWORD *)v61 + 8) = v66;
  *((_QWORD *)v61 + 9) = v67;
  *((_QWORD *)v61 + 10) = v89;
  *((_QWORD *)v61 + 11) = v68;
  *((_QWORD *)v61 + 12) = v69;
  *((_QWORD *)v61 + 13) = v70;
  *((_WORD *)v61 + 56) = v50;
  v72 = v106[11];
  v73 = &v108[v72];
  v74 = &v104[v72];
  *(_OWORD *)v73 = *(_OWORD *)v74;
  v73[16] = v74[16];
  v75 = (void *)*((_QWORD *)v74 + 3);
  v76 = *((_QWORD *)v74 + 4);
  v77 = *((_QWORD *)v74 + 5);
  v78 = *((_QWORD *)v74 + 6);
  v79 = *((_QWORD *)v74 + 7);
  v80 = *((_QWORD *)v74 + 8);
  v81 = (void *)*((_QWORD *)v74 + 9);
  v82 = *((_QWORD *)v74 + 10);
  v83 = *((_QWORD *)v74 + 11);
  v105 = *((_QWORD *)v74 + 12);
  v107 = *((_QWORD *)v74 + 13);
  LOWORD(v108) = *((_WORD *)v74 + 56);
  sub_1472C(v75, v76, v77, v78, v79, v80, v81, v82, v83, v105, v107, (unsigned __int16)v108);
  *((_QWORD *)v73 + 3) = v75;
  *((_QWORD *)v73 + 4) = v76;
  *((_QWORD *)v73 + 5) = v77;
  *((_QWORD *)v73 + 6) = v78;
  *((_QWORD *)v73 + 7) = v79;
  *((_QWORD *)v73 + 8) = v80;
  *((_QWORD *)v73 + 9) = v81;
  *((_QWORD *)v73 + 10) = v82;
  *((_QWORD *)v73 + 11) = v83;
  *((_QWORD *)v73 + 12) = v105;
  *((_QWORD *)v73 + 13) = v107;
  v84 = *(int *)(a3 + 24);
  v85 = (char *)a1 + v84;
  v86 = (char *)a2 + v84;
  *((_WORD *)v73 + 56) = (_WORD)v108;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D94A8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
  return a1;
}

_QWORD *sub_17A60C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  unsigned __int16 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  char *v62;
  char *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  void *v110;
  void *v111;
  id v112;
  uint64_t v113;
  char *v114;
  char *v115;
  __int128 v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  unsigned __int16 v136;
  uint64_t v137;
  char *v138;
  char *v139;
  __int128 v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  unsigned __int16 v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __int16 v176;
  unsigned __int16 v177;
  _QWORD *v178;
  char *v181;
  uint64_t v182;
  int *v183;
  uint64_t v184;
  char *v185;

  *a1 = *a2;
  v5 = a2[1];
  v7 = a1[1];
  a1[1] = v5;
  v8 = a1;
  v178 = a1;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v7);
  v9 = *(int *)(a3 + 20);
  v10 = (char *)v8 + v9;
  v11 = (char *)a2 + v9;
  v181 = (char *)a2 + v9;
  v12 = type metadata accessor for UUID(0);
  v185 = v10;
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v183 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v13 = v183[5];
  v14 = &v10[v13];
  v15 = &v11[v13];
  v16 = v15[16];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v16;
  v17 = (void *)*((_QWORD *)v15 + 3);
  v18 = *((_QWORD *)v15 + 4);
  v19 = *((_QWORD *)v15 + 5);
  v20 = *((_QWORD *)v15 + 6);
  v22 = *((_QWORD *)v15 + 7);
  v21 = *((_QWORD *)v15 + 8);
  v23 = (void *)*((_QWORD *)v15 + 9);
  v24 = *((_QWORD *)v15 + 10);
  v25 = *((_QWORD *)v15 + 11);
  v169 = *((_QWORD *)v15 + 12);
  v174 = *((_QWORD *)v15 + 13);
  v176 = *((_WORD *)v15 + 56);
  sub_1472C(v17, v18, v19, v20, v22, v21, v23, v24, v25, v169, v174, v176);
  v26 = (void *)*((_QWORD *)v14 + 3);
  v27 = *((_QWORD *)v14 + 4);
  v28 = *((_QWORD *)v14 + 5);
  v29 = *((_QWORD *)v14 + 6);
  v30 = *((_QWORD *)v14 + 7);
  v31 = *((_QWORD *)v14 + 8);
  v32 = (void *)*((_QWORD *)v14 + 9);
  v33 = *((_QWORD *)v14 + 10);
  v34 = *(_OWORD *)(v14 + 88);
  v35 = *((_QWORD *)v14 + 13);
  v36 = *((_WORD *)v14 + 56);
  *((_QWORD *)v14 + 3) = v17;
  *((_QWORD *)v14 + 4) = v18;
  *((_QWORD *)v14 + 5) = v19;
  *((_QWORD *)v14 + 6) = v20;
  *((_QWORD *)v14 + 7) = v22;
  *((_QWORD *)v14 + 8) = v21;
  *((_QWORD *)v14 + 9) = v23;
  *((_QWORD *)v14 + 10) = v24;
  *((_QWORD *)v14 + 11) = v25;
  *((_QWORD *)v14 + 12) = v169;
  *((_QWORD *)v14 + 13) = v174;
  *((_WORD *)v14 + 56) = v176;
  sub_14788(v26, v27, v28, v29, v30, v31, v32, v33, v34, *((uint64_t *)&v34 + 1), v35, v36);
  v37 = v183[6];
  v38 = &v185[v37];
  v39 = &v181[v37];
  v40 = *(void **)v39;
  v41 = *((_QWORD *)v39 + 1);
  v42 = *((_QWORD *)v39 + 2);
  v43 = *((_QWORD *)v39 + 3);
  v44 = *((_QWORD *)v39 + 4);
  v45 = *((_QWORD *)v39 + 5);
  v46 = (void *)*((_QWORD *)v39 + 6);
  v47 = *((_QWORD *)v39 + 7);
  v48 = *((_QWORD *)v39 + 8);
  v166 = *((_QWORD *)v39 + 9);
  v170 = *((_QWORD *)v39 + 10);
  LOBYTE(v174) = v39[88];
  LOBYTE(v176) = v39[89];
  sub_DDA0(*(void **)v39, v41, v42, v43, v44, v45, v46, v47, v48, v166, v170, v174, v176);
  v49 = *(void **)v38;
  v50 = *((_QWORD *)v38 + 1);
  v51 = *((_QWORD *)v38 + 2);
  v52 = *((_QWORD *)v38 + 3);
  v53 = *((_QWORD *)v38 + 4);
  v54 = *((_QWORD *)v38 + 5);
  v55 = (void *)*((_QWORD *)v38 + 6);
  v56 = *((_QWORD *)v38 + 7);
  v57 = *((_OWORD *)v38 + 4);
  v58 = *((_QWORD *)v38 + 10);
  v59 = v38[88];
  v60 = v38[89];
  *(_QWORD *)v38 = v40;
  *((_QWORD *)v38 + 1) = v41;
  *((_QWORD *)v38 + 2) = v42;
  *((_QWORD *)v38 + 3) = v43;
  *((_QWORD *)v38 + 4) = v44;
  *((_QWORD *)v38 + 5) = v45;
  *((_QWORD *)v38 + 6) = v46;
  *((_QWORD *)v38 + 7) = v47;
  *((_QWORD *)v38 + 8) = v48;
  *((_QWORD *)v38 + 9) = v166;
  *((_QWORD *)v38 + 10) = v170;
  v38[88] = v174;
  v38[89] = v176;
  sub_DCC8(v49, v50, v51, v52, v53, v54, v55, v56, v57, *((uint64_t *)&v57 + 1), v58, v59, v60);
  v61 = v183[7];
  v62 = &v185[v61];
  v63 = &v181[v61];
  v64 = *(void **)v63;
  v65 = *((_QWORD *)v63 + 1);
  v66 = *((_QWORD *)v63 + 2);
  v67 = *((_QWORD *)v63 + 3);
  v68 = *((_QWORD *)v63 + 4);
  v69 = *((_QWORD *)v63 + 5);
  v70 = (void *)*((_QWORD *)v63 + 6);
  v71 = *((_QWORD *)v63 + 7);
  v72 = *((_QWORD *)v63 + 8);
  v167 = *((_QWORD *)v63 + 9);
  v171 = *((_QWORD *)v63 + 10);
  LOBYTE(v174) = v63[88];
  LOBYTE(v176) = v63[89];
  sub_DDA0(*(void **)v63, v65, v66, v67, v68, v69, v70, v71, v72, v167, v171, v174, v176);
  v73 = *(void **)v62;
  v74 = *((_QWORD *)v62 + 1);
  v75 = *((_QWORD *)v62 + 2);
  v76 = *((_QWORD *)v62 + 3);
  v77 = *((_QWORD *)v62 + 4);
  v78 = *((_QWORD *)v62 + 5);
  v79 = (void *)*((_QWORD *)v62 + 6);
  v80 = *((_QWORD *)v62 + 7);
  v81 = *((_OWORD *)v62 + 4);
  v82 = *((_QWORD *)v62 + 10);
  v83 = v62[88];
  v84 = v62[89];
  *(_QWORD *)v62 = v64;
  *((_QWORD *)v62 + 1) = v65;
  *((_QWORD *)v62 + 2) = v66;
  *((_QWORD *)v62 + 3) = v67;
  *((_QWORD *)v62 + 4) = v68;
  *((_QWORD *)v62 + 5) = v69;
  *((_QWORD *)v62 + 6) = v70;
  *((_QWORD *)v62 + 7) = v71;
  *((_QWORD *)v62 + 8) = v72;
  *((_QWORD *)v62 + 9) = v167;
  *((_QWORD *)v62 + 10) = v171;
  v62[88] = v174;
  v62[89] = v176;
  sub_DCC8(v73, v74, v75, v76, v77, v78, v79, v80, v81, *((uint64_t *)&v81 + 1), v82, v83, v84);
  v85 = v183[8];
  v86 = &v185[v85];
  v87 = &v181[v85];
  v88 = *(void **)v87;
  v89 = *((_QWORD *)v87 + 1);
  v90 = *((_QWORD *)v87 + 2);
  v91 = *((_QWORD *)v87 + 3);
  v92 = *((_QWORD *)v87 + 4);
  v93 = *((_QWORD *)v87 + 5);
  v94 = (void *)*((_QWORD *)v87 + 6);
  v95 = *((_QWORD *)v87 + 7);
  v96 = *((_QWORD *)v87 + 8);
  v168 = *((_QWORD *)v87 + 9);
  v172 = *((_QWORD *)v87 + 10);
  LOBYTE(v174) = v87[88];
  LOBYTE(v176) = v87[89];
  sub_DDA0(*(void **)v87, v89, v90, v91, v92, v93, v94, v95, v96, v168, v172, v174, v176);
  v97 = *(void **)v86;
  v98 = *((_QWORD *)v86 + 1);
  v99 = *((_QWORD *)v86 + 2);
  v100 = *((_QWORD *)v86 + 3);
  v101 = *((_QWORD *)v86 + 4);
  v102 = *((_QWORD *)v86 + 5);
  v103 = (void *)*((_QWORD *)v86 + 6);
  v104 = *((_QWORD *)v86 + 7);
  v105 = *((_OWORD *)v86 + 4);
  v106 = *((_QWORD *)v86 + 10);
  v107 = v86[88];
  v108 = v86[89];
  *(_QWORD *)v86 = v88;
  *((_QWORD *)v86 + 1) = v89;
  *((_QWORD *)v86 + 2) = v90;
  *((_QWORD *)v86 + 3) = v91;
  *((_QWORD *)v86 + 4) = v92;
  *((_QWORD *)v86 + 5) = v93;
  *((_QWORD *)v86 + 6) = v94;
  *((_QWORD *)v86 + 7) = v95;
  *((_QWORD *)v86 + 8) = v96;
  *((_QWORD *)v86 + 9) = v168;
  *((_QWORD *)v86 + 10) = v172;
  v86[88] = v174;
  v86[89] = v176;
  sub_DCC8(v97, v98, v99, v100, v101, v102, v103, v104, v105, *((uint64_t *)&v105 + 1), v106, v107, v108);
  v109 = v183[9];
  v110 = *(void **)&v181[v109];
  v111 = *(void **)&v185[v109];
  *(_QWORD *)&v185[v109] = v110;
  v112 = v110;

  v113 = v183[10];
  v114 = &v185[v113];
  v115 = &v181[v113];
  v116 = *(_OWORD *)v115;
  v114[16] = v115[16];
  *(_OWORD *)v114 = v116;
  v117 = (void *)*((_QWORD *)v115 + 3);
  v118 = *((_QWORD *)v115 + 4);
  v119 = *((_QWORD *)v115 + 5);
  v120 = *((_QWORD *)v115 + 6);
  v121 = *((_QWORD *)v115 + 7);
  v122 = *((_QWORD *)v115 + 8);
  v123 = (void *)*((_QWORD *)v115 + 9);
  v124 = *((_QWORD *)v115 + 10);
  v125 = *((_QWORD *)v115 + 11);
  v173 = *((_QWORD *)v115 + 12);
  v175 = *((_QWORD *)v115 + 13);
  v177 = *((_WORD *)v115 + 56);
  sub_1472C(v117, v118, v119, v120, v121, v122, v123, v124, v125, v173, v175, v177);
  v126 = (void *)*((_QWORD *)v114 + 3);
  v127 = *((_QWORD *)v114 + 4);
  v128 = *((_QWORD *)v114 + 5);
  v129 = *((_QWORD *)v114 + 6);
  v130 = *((_QWORD *)v114 + 7);
  v131 = *((_QWORD *)v114 + 8);
  v132 = (void *)*((_QWORD *)v114 + 9);
  v133 = *((_QWORD *)v114 + 10);
  v134 = *(_OWORD *)(v114 + 88);
  v135 = *((_QWORD *)v114 + 13);
  v136 = *((_WORD *)v114 + 56);
  *((_QWORD *)v114 + 3) = v117;
  *((_QWORD *)v114 + 4) = v118;
  *((_QWORD *)v114 + 5) = v119;
  *((_QWORD *)v114 + 6) = v120;
  *((_QWORD *)v114 + 7) = v121;
  *((_QWORD *)v114 + 8) = v122;
  *((_QWORD *)v114 + 9) = v123;
  *((_QWORD *)v114 + 10) = v124;
  *((_QWORD *)v114 + 11) = v125;
  *((_QWORD *)v114 + 12) = v173;
  *((_QWORD *)v114 + 13) = v175;
  *((_WORD *)v114 + 56) = v177;
  sub_14788(v126, v127, v128, v129, v130, v131, v132, v133, v134, *((uint64_t *)&v134 + 1), v135, v136);
  v137 = v183[11];
  v138 = &v185[v137];
  v139 = &v181[v137];
  v140 = *(_OWORD *)v139;
  v138[16] = v139[16];
  *(_OWORD *)v138 = v140;
  v141 = (void *)*((_QWORD *)v139 + 3);
  v142 = *((_QWORD *)v139 + 4);
  v143 = *((_QWORD *)v139 + 5);
  v144 = *((_QWORD *)v139 + 6);
  v145 = *((_QWORD *)v139 + 7);
  v146 = *((_QWORD *)v139 + 8);
  v147 = (void *)*((_QWORD *)v139 + 9);
  v148 = *((_QWORD *)v139 + 10);
  v149 = *((_QWORD *)v139 + 11);
  v182 = *((_QWORD *)v139 + 12);
  v184 = *((_QWORD *)v139 + 13);
  LOWORD(v185) = *((_WORD *)v139 + 56);
  sub_1472C(v141, v142, v143, v144, v145, v146, v147, v148, v149, v182, v184, (unsigned __int16)v185);
  v150 = (void *)*((_QWORD *)v138 + 3);
  v151 = *((_QWORD *)v138 + 4);
  v152 = *((_QWORD *)v138 + 5);
  v153 = *((_QWORD *)v138 + 6);
  v154 = *((_QWORD *)v138 + 7);
  v155 = *((_QWORD *)v138 + 8);
  v156 = (void *)*((_QWORD *)v138 + 9);
  v157 = *((_QWORD *)v138 + 10);
  v158 = *(_OWORD *)(v138 + 88);
  v159 = *((_QWORD *)v138 + 13);
  v160 = *((_WORD *)v138 + 56);
  *((_QWORD *)v138 + 3) = v141;
  *((_QWORD *)v138 + 4) = v142;
  *((_QWORD *)v138 + 5) = v143;
  *((_QWORD *)v138 + 6) = v144;
  *((_QWORD *)v138 + 7) = v145;
  *((_QWORD *)v138 + 8) = v146;
  *((_QWORD *)v138 + 9) = v147;
  *((_QWORD *)v138 + 10) = v148;
  *((_QWORD *)v138 + 11) = v149;
  *((_QWORD *)v138 + 12) = v182;
  *((_QWORD *)v138 + 13) = v184;
  *((_WORD *)v138 + 56) = (_WORD)v185;
  sub_14788(v150, v151, v152, v153, v154, v155, v156, v157, v158, *((uint64_t *)&v158 + 1), v159, v160);
  v161 = *(int *)(a3 + 24);
  v162 = (char *)v178 + v161;
  v163 = (char *)a2 + v161;
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D94A8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 24))(v162, v163, v164);
  return v178;
}

_OWORD *sub_17AC10(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = *((_OWORD *)v13 + 5);
  *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
  *((_OWORD *)v12 + 5) = v14;
  *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
  *((_WORD *)v12 + 56) = *((_WORD *)v13 + 56);
  v15 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v15;
  v16 = *((_OWORD *)v13 + 3);
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *((_OWORD *)v12 + 3) = v16;
  v17 = v10[6];
  v18 = &v7[v17];
  v19 = &v8[v17];
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *(_OWORD *)(v18 + 74) = *(_OWORD *)(v19 + 74);
  v21 = *((_OWORD *)v19 + 4);
  v22 = *((_OWORD *)v19 + 2);
  *((_OWORD *)v18 + 3) = *((_OWORD *)v19 + 3);
  *((_OWORD *)v18 + 4) = v21;
  *((_OWORD *)v18 + 2) = v22;
  v23 = v10[7];
  v24 = &v7[v23];
  v25 = &v8[v23];
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *(_OWORD *)(v24 + 74) = *(_OWORD *)(v25 + 74);
  v27 = *((_OWORD *)v25 + 4);
  v28 = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 4) = v27;
  *((_OWORD *)v24 + 2) = v28;
  v29 = v10[8];
  v30 = &v7[v29];
  v31 = &v8[v29];
  v32 = *((_OWORD *)v31 + 3);
  *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 3) = v32;
  *((_OWORD *)v30 + 4) = *((_OWORD *)v31 + 4);
  *(_OWORD *)(v30 + 74) = *(_OWORD *)(v31 + 74);
  v33 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v33;
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  v34 = v10[10];
  v35 = &v7[v34];
  v36 = &v8[v34];
  v37 = *((_OWORD *)v36 + 5);
  *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
  *((_OWORD *)v35 + 5) = v37;
  *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
  *((_WORD *)v35 + 56) = *((_WORD *)v36 + 56);
  v38 = *((_OWORD *)v36 + 1);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *((_OWORD *)v35 + 1) = v38;
  v39 = *((_OWORD *)v36 + 3);
  *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
  *((_OWORD *)v35 + 3) = v39;
  v40 = v10[11];
  v41 = &v7[v40];
  v42 = &v8[v40];
  v43 = *((_OWORD *)v42 + 5);
  *((_OWORD *)v41 + 4) = *((_OWORD *)v42 + 4);
  *((_OWORD *)v41 + 5) = v43;
  *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
  *((_WORD *)v41 + 56) = *((_WORD *)v42 + 56);
  v44 = *((_OWORD *)v42 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v44;
  v45 = *((_OWORD *)v42 + 3);
  *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
  *((_OWORD *)v41 + 3) = v45;
  v46 = *(int *)(a3 + 24);
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D94A8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
  return a1;
}

_QWORD *sub_17ADE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int16 v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  unsigned __int16 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char v33;
  char v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  char v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char v53;
  char v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  char v65;
  char v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char v73;
  char v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  char v85;
  char v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  __int16 v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  unsigned __int16 v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  __int16 v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  unsigned __int16 v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v16 = *((_QWORD *)v15 + 13);
  v17 = *((_WORD *)v15 + 56);
  v18 = (void *)*((_QWORD *)v14 + 3);
  v19 = *((_QWORD *)v14 + 4);
  v20 = *((_QWORD *)v14 + 5);
  v21 = *((_QWORD *)v14 + 6);
  v22 = *((_QWORD *)v14 + 7);
  v23 = *((_QWORD *)v14 + 8);
  v24 = (void *)*((_QWORD *)v14 + 9);
  v25 = *((_QWORD *)v14 + 10);
  v26 = *(_OWORD *)(v14 + 88);
  v27 = *((_QWORD *)v14 + 13);
  v28 = *((_WORD *)v14 + 56);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(v15 + 56);
  *(_OWORD *)(v14 + 72) = *(_OWORD *)(v15 + 72);
  *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
  *((_QWORD *)v14 + 13) = v16;
  *((_WORD *)v14 + 56) = v17;
  sub_14788(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, v28);
  v29 = v12[6];
  v30 = &v9[v29];
  v31 = &v10[v29];
  v32 = *((_QWORD *)v31 + 10);
  v33 = v31[88];
  v34 = v31[89];
  v35 = *(void **)v30;
  v36 = *((_QWORD *)v30 + 1);
  v37 = *((_QWORD *)v30 + 2);
  v38 = *((_QWORD *)v30 + 3);
  v39 = *((_QWORD *)v30 + 4);
  v40 = *((_QWORD *)v30 + 5);
  v41 = (void *)*((_QWORD *)v30 + 6);
  v42 = *((_QWORD *)v30 + 7);
  v43 = *((_OWORD *)v30 + 4);
  v44 = *((_QWORD *)v30 + 10);
  v45 = v30[88];
  v46 = v30[89];
  v47 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v47;
  v48 = *((_OWORD *)v31 + 3);
  *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 3) = v48;
  *((_OWORD *)v30 + 4) = *((_OWORD *)v31 + 4);
  *((_QWORD *)v30 + 10) = v32;
  v30[88] = v33;
  v30[89] = v34;
  sub_DCC8(v35, v36, v37, v38, v39, v40, v41, v42, v43, *((uint64_t *)&v43 + 1), v44, v45, v46);
  v49 = v12[7];
  v50 = &v9[v49];
  v51 = &v10[v49];
  v52 = *((_QWORD *)v51 + 10);
  v53 = v51[88];
  v54 = v51[89];
  v55 = *(void **)v50;
  v56 = *((_QWORD *)v50 + 1);
  v57 = *((_QWORD *)v50 + 2);
  v58 = *((_QWORD *)v50 + 3);
  v59 = *((_QWORD *)v50 + 4);
  v60 = *((_QWORD *)v50 + 5);
  v61 = (void *)*((_QWORD *)v50 + 6);
  v62 = *((_QWORD *)v50 + 7);
  v63 = *((_OWORD *)v50 + 4);
  v64 = *((_QWORD *)v50 + 10);
  v65 = v50[88];
  v66 = v50[89];
  v67 = *((_OWORD *)v51 + 1);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v67;
  v68 = *((_OWORD *)v51 + 3);
  *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
  *((_OWORD *)v50 + 3) = v68;
  *((_OWORD *)v50 + 4) = *((_OWORD *)v51 + 4);
  *((_QWORD *)v50 + 10) = v52;
  v50[88] = v53;
  v50[89] = v54;
  sub_DCC8(v55, v56, v57, v58, v59, v60, v61, v62, v63, *((uint64_t *)&v63 + 1), v64, v65, v66);
  v69 = v12[8];
  v70 = &v9[v69];
  v71 = &v10[v69];
  v72 = *((_QWORD *)v71 + 10);
  v73 = v71[88];
  v74 = v71[89];
  v75 = *(void **)v70;
  v76 = *((_QWORD *)v70 + 1);
  v77 = *((_QWORD *)v70 + 2);
  v78 = *((_QWORD *)v70 + 3);
  v79 = *((_QWORD *)v70 + 4);
  v80 = *((_QWORD *)v70 + 5);
  v81 = (void *)*((_QWORD *)v70 + 6);
  v82 = *((_QWORD *)v70 + 7);
  v83 = *((_OWORD *)v70 + 4);
  v84 = *((_QWORD *)v70 + 10);
  v85 = v70[88];
  v86 = v70[89];
  v87 = *((_OWORD *)v71 + 1);
  *(_OWORD *)v70 = *(_OWORD *)v71;
  *((_OWORD *)v70 + 1) = v87;
  v88 = *((_OWORD *)v71 + 3);
  *((_OWORD *)v70 + 2) = *((_OWORD *)v71 + 2);
  *((_OWORD *)v70 + 3) = v88;
  *((_OWORD *)v70 + 4) = *((_OWORD *)v71 + 4);
  *((_QWORD *)v70 + 10) = v72;
  v70[88] = v73;
  v70[89] = v74;
  sub_DCC8(v75, v76, v77, v78, v79, v80, v81, v82, v83, *((uint64_t *)&v83 + 1), v84, v85, v86);
  v89 = v12[9];
  v90 = *(void **)&v9[v89];
  *(_QWORD *)&v9[v89] = *(_QWORD *)&v10[v89];

  v91 = v12[10];
  v92 = &v9[v91];
  v93 = &v10[v91];
  *(_OWORD *)v92 = *(_OWORD *)v93;
  v92[16] = v93[16];
  v94 = *((_QWORD *)v93 + 13);
  v95 = *((_WORD *)v93 + 56);
  v96 = (void *)*((_QWORD *)v92 + 3);
  v97 = *((_QWORD *)v92 + 4);
  v98 = *((_QWORD *)v92 + 5);
  v99 = *((_QWORD *)v92 + 6);
  v100 = *((_QWORD *)v92 + 7);
  v101 = *((_QWORD *)v92 + 8);
  v102 = (void *)*((_QWORD *)v92 + 9);
  v103 = *((_QWORD *)v92 + 10);
  v104 = *(_OWORD *)(v92 + 88);
  v105 = *((_QWORD *)v92 + 13);
  v106 = *((_WORD *)v92 + 56);
  *(_OWORD *)(v92 + 24) = *(_OWORD *)(v93 + 24);
  *(_OWORD *)(v92 + 40) = *(_OWORD *)(v93 + 40);
  *(_OWORD *)(v92 + 56) = *(_OWORD *)(v93 + 56);
  *(_OWORD *)(v92 + 72) = *(_OWORD *)(v93 + 72);
  *(_OWORD *)(v92 + 88) = *(_OWORD *)(v93 + 88);
  *((_QWORD *)v92 + 13) = v94;
  *((_WORD *)v92 + 56) = v95;
  sub_14788(v96, v97, v98, v99, v100, v101, v102, v103, v104, *((uint64_t *)&v104 + 1), v105, v106);
  v107 = v12[11];
  v108 = &v9[v107];
  v109 = &v10[v107];
  *(_OWORD *)v108 = *(_OWORD *)v109;
  v108[16] = v109[16];
  v110 = *((_QWORD *)v109 + 13);
  v111 = *((_WORD *)v109 + 56);
  v112 = (void *)*((_QWORD *)v108 + 3);
  v113 = *((_QWORD *)v108 + 4);
  v114 = *((_QWORD *)v108 + 5);
  v115 = *((_QWORD *)v108 + 6);
  v116 = *((_QWORD *)v108 + 7);
  v117 = *((_QWORD *)v108 + 8);
  v118 = (void *)*((_QWORD *)v108 + 9);
  v119 = *((_QWORD *)v108 + 10);
  v120 = *(_OWORD *)(v108 + 88);
  v121 = *((_QWORD *)v108 + 13);
  v122 = *((_WORD *)v108 + 56);
  *(_OWORD *)(v108 + 24) = *(_OWORD *)(v109 + 24);
  *(_OWORD *)(v108 + 40) = *(_OWORD *)(v109 + 40);
  *(_OWORD *)(v108 + 56) = *(_OWORD *)(v109 + 56);
  *(_OWORD *)(v108 + 72) = *(_OWORD *)(v109 + 72);
  *(_OWORD *)(v108 + 88) = *(_OWORD *)(v109 + 88);
  *((_QWORD *)v108 + 13) = v110;
  *((_WORD *)v108 + 56) = v111;
  sub_14788(v112, v113, v114, v115, v116, v117, v118, v119, v120, *((uint64_t *)&v120 + 1), v121, v122);
  v123 = *(int *)(a3 + 24);
  v124 = (char *)a1 + v123;
  v125 = (char *)a2 + v123;
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D94A8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 40))(v124, v125, v126);
  return a1;
}

uint64_t sub_17B17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_17B188);
}

uint64_t sub_17B188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ModernTitleHeaderView.Style(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D94A8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_17B22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_17B238);
}

uint64_t sub_17B238(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for ModernTitleHeaderView.Style(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D94A8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_17B2D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = &unk_2FA860;
  v2 = type metadata accessor for ModernTitleHeaderView.Style(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_17B380(319, (unint64_t *)&unk_3D95E8, type metadata accessor for ModernTitleHeaderView, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for UICollectionView.SupplementaryRegistration);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_17B380(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_17B3F8(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setAlpha:", 0.0);

  }
  else
  {
    __break(1u);
  }
}

id sub_17B4CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardDismissalAnimator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CardDismissalAnimator()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21CardDismissalAnimator);
}

void sub_17B51C(void *a1)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v2 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (v2)
  {
    v3 = v2;
    v4 = (void *)objc_opt_self(UIView);
    v5 = swift_allocObject(&unk_386808, 24, 7);
    *(_QWORD *)(v5 + 16) = v3;
    v16 = sub_17B6C0;
    v17 = v5;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_24360;
    v15 = &block_descriptor_36;
    v6 = _Block_copy(&v12);
    v7 = v17;
    v8 = v3;
    swift_release(v7);
    v9 = swift_allocObject(&unk_386858, 24, 7);
    *(_QWORD *)(v9 + 16) = a1;
    v16 = sub_17B704;
    v17 = v9;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_1E3D64;
    v15 = &block_descriptor_7_1;
    v10 = _Block_copy(&v12);
    v11 = v17;
    swift_unknownObjectRetain(a1);
    swift_release(v11);
    objc_msgSend(v4, "animateWithDuration:animations:completion:", v6, v10, 0.15);
    _Block_release(v10);
    _Block_release(v6);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_17B69C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_17B6C0()
{
  uint64_t v0;

  sub_17B3F8(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_36(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_17B6E0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_17B704()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "completeTransition:", objc_msgSend(*(id *)(v0 + 16), "transitionWasCancelled") ^ 1);
}

uint64_t sub_17B748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v6)(_QWORD *, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[4];
  uint64_t v12;

  v2 = type metadata accessor for LayoutSubviews(0);
  v3 = sub_17BFC0();
  dispatch thunk of Collection.startIndex.getter(v2, v3);
  dispatch thunk of Collection.endIndex.getter(v11, v2, v3);
  if (v12 == v11[0])
  {
    v4 = type metadata accessor for LayoutSubview(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
  else
  {
    v6 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v11, &v12, v2, v3);
    v8 = v7;
    v9 = type metadata accessor for LayoutSubview(0);
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v8, v9);
    v6(v11, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
}

void View.shrinkFrame(maxHeight:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[4];
  uint64_t v12;
  double v13;

  v9 = swift_allocObject(&unk_3868D0, 40, 7);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(double *)(v9 + 32) = a4;
  v11[2] = a1;
  v11[3] = a2;
  v12 = v4;
  v13 = a4;
  v10 = sub_17C018();
  sub_1E8440((uint64_t)sub_17B984, (uint64_t)v11, (uint64_t)&type metadata for ShrinkFrame, a1, v10, a2, a3);
  swift_release(v9);
}

uint64_t sub_17B8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ECBD0(v8, v9, (uint64_t)v7);
  sub_1E82A0((uint64_t)v7, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

uint64_t sub_17B984@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_17B8F4(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_17B990(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D9648);
  v3 = sub_17BA24(&qword_3D9650, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v4 = type metadata accessor for _VariadicView.Tree(255, v2, v1, v3);
  sub_17BA24(&qword_3D9658, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v4);
}

uint64_t sub_17BA24(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D9648);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShrinkFrame()
{
  return &type metadata for ShrinkFrame;
}

unint64_t sub_17BA7C()
{
  unint64_t result;

  result = qword_3D9660;
  if (!qword_3D9660)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyAnimatableData, &type metadata for EmptyAnimatableData);
    atomic_store(result, (unint64_t *)&qword_3D9660);
  }
  return result;
}

double sub_17BAC0(uint64_t a1, char a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  double v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[24];
  unsigned __int8 v27;
  char v28;
  BOOL v29;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9670);
  __chkstk_darwin(v11);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for LayoutSubview(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v26[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_17B748((uint64_t)v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_17BF80((uint64_t)v13);
    return 0.0;
  }
  else
  {
    v19 = a2 & 1;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32))(v17, v13, v14);
    if ((*((_BYTE *)a7 + 25) & 1) != 0
      || (v20 = *((_BYTE *)a7 + 24),
          v21 = *((_QWORD *)a7 + 2),
          v22 = *a7,
          v27 = (_DWORD)a7[1] & 1,
          v26[16] = v20 & 1,
          v26[8] = (_DWORD)v19 != 0,
          v26[0] = 0,
          (static ProposedViewSize.== infix(_:_:)(*(_QWORD *)&v22, v27, v21) & 1) == 0)
      || ((_BYTE)a7[6] & 1) != 0)
    {
      v29 = (_DWORD)v19 != 0;
      v28 = 0;
      v18 = LayoutSubview.sizeThatFits(_:)(a1);
      v24 = v23;
      (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
      *(_QWORD *)a7 = a1;
      *((_QWORD *)a7 + 1) = v19;
      a7[2] = a3;
      *((_WORD *)a7 + 12) = 0;
      a7[4] = v18;
      *((_QWORD *)a7 + 5) = v24;
      *((_BYTE *)a7 + 48) = 0;
    }
    else
    {
      v18 = a7[4];
      (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
  return v18;
}

void sub_17BCAC(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 24) = 256;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 1;
}

double sub_17BCD4(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double *a6)
{
  double *v6;

  return sub_17BAC0(a1, a2 & 1, *v6, a3, a4 & 1, a5, a6);
}

uint64_t sub_17BCF0(double a1, double a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v16;
  double v17;
  double v18;
  _BYTE v19[16];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9670);
  __chkstk_darwin(v8);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for LayoutSubview(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_17B748((uint64_t)v10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_17BF80((uint64_t)v10);
  v16 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v10, v11);
  v17 = static UnitPoint.topLeading.getter(v16);
  v19[8] = 0;
  v19[0] = 0;
  LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&a3, 0, *(_QWORD *)&a4, 0, a1, a2, v17, v18);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_17BE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_17BE9C(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_17BE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_17BE9C(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_17BE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_17BED8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_91A00;
}

unint64_t sub_17BF3C()
{
  unint64_t result;

  result = qword_3D9668;
  if (!qword_3D9668)
  {
    result = swift_getWitnessTable(&unk_2FA984, &type metadata for ShrinkFrame);
    atomic_store(result, (unint64_t *)&qword_3D9668);
  }
  return result;
}

uint64_t sub_17BF80(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9670);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_17BFC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D9678;
  if (!qword_3D9678)
  {
    v1 = type metadata accessor for LayoutSubviews(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for LayoutSubviews, v1);
    atomic_store(result, (unint64_t *)&qword_3D9678);
  }
  return result;
}

uint64_t sub_17C008()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

unint64_t sub_17C018()
{
  unint64_t result;

  result = qword_3D9680;
  if (!qword_3D9680)
  {
    result = swift_getWitnessTable(&unk_2FA9D4, &type metadata for ShrinkFrame);
    atomic_store(result, (unint64_t *)&qword_3D9680);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ShrinkFrame.Cache(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ShrinkFrame.Cache(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 49) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ShrinkFrame.Cache()
{
  return &type metadata for ShrinkFrame.Cache;
}

uint64_t sub_17C0C8(uint64_t a1, uint64_t a2)
{
  return sub_17C0F0(a1, a2, (uint64_t)&qword_3D9988, UIGestureRecognizer_ptr);
}

uint64_t sub_17C0DC(uint64_t a1, uint64_t a2)
{
  return sub_17C0F0(a1, a2, (uint64_t)&qword_3D34B0, UIView_ptr);
}

uint64_t sub_17C0F0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v8 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a2);
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    v9 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v10 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v11 = v10;
      a4 = (_QWORD *)sub_E710(0, (unint64_t *)a3, a4);
      a3 = static NSObject.== infix(_:_:)(v11, a1);

      if ((a3 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v8 == 1)
        goto LABEL_18;
      if (v9)
        break;
      v9 = 5;
      while (1)
      {
        v17 = v9 - 3;
        if (__OFADD__(v9 - 4, 1))
          break;
        a3 = (uint64_t)*(id *)(a2 + 8 * v9);
        v18 = static NSObject.== infix(_:_:)(a3, a1);

        if ((v18 & 1) != 0)
          goto LABEL_6;
        ++v9;
        if (v17 == v8)
          goto LABEL_18;
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(a3, a2);
      v14 = a3 + 1;
      if (__OFADD__(a3, 1))
        break;
      v15 = v13;
      v16 = static NSObject.== infix(_:_:)(v13, a1);
      swift_unknownObjectRelease(v15);
      if ((v16 & 1) != 0)
        goto LABEL_6;
      ++a3;
      if (v14 == v8)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v19 = a2;
    else
      v19 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

void sub_17C274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 32));
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v5 == v8 && v7 == v9)
    {
LABEL_20:
      swift_bridgeObjectRelease_n(v7, 2);
    }
    else
    {
      v11 = v9;
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) != 0)
      {
LABEL_7:
        swift_bridgeObjectRelease(a2);
      }
      else if (v2 == 1)
      {
LABEL_17:
        swift_bridgeObjectRelease(a2);
      }
      else
      {
        v13 = 5;
        while (1)
        {
          v14 = v13 - 3;
          if (__OFADD__(v13 - 4, 1))
            break;
          v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 8 * v13));
          v7 = v16;
          v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v15 == v17 && v7 == v18)
          {
            swift_bridgeObjectRelease(a2);
            goto LABEL_20;
          }
          v20 = v18;
          v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v7, v17, v18, 0);
          swift_bridgeObjectRelease(v7);
          swift_bridgeObjectRelease(v20);
          if ((v21 & 1) != 0)
            goto LABEL_7;
          ++v13;
          if (v14 == v2)
            goto LABEL_17;
        }
        __break(1u);
      }
    }
  }
}

uint64_t sub_17C3C8(uint64_t a1, uint64_t a2)
{
  return sub_17C0F0(a1, a2, (uint64_t)&qword_3D2B40, UIViewController_ptr);
}

void sub_17C3DC(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  char v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  id v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  void *v42;
  id v43;
  char *v44;
  id v45;
  id v46;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  id v58;
  double v59;
  NSString v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  NSString v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  double v68;
  NSString v69;
  __n128 v70;
  uint64_t v71;
  __n128 v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t inited;
  NSString *v77;
  NSString *v78;
  id v79;
  unint64_t v80;
  id v81;
  id v82;
  id v83;
  unint64_t v84;
  unint64_t v85;
  id v86;
  NSString v87;
  Class isa;
  id v89;
  id v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  char v101;
  id v102;
  char v103;
  id v104;
  void *v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  __n128 v111;
  uint64_t v112;
  double v113;
  uint64_t v114;
  NSString v115;
  char *v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __n128 v126;
  uint64_t v127;
  id v128;
  __n128 v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE v138[112];
  _QWORD v139[2];
  _BYTE v140[40];
  _QWORD v141[3];
  uint64_t v142;
  uint64_t v143;

  v2 = v1;
  v4 = type metadata accessor for ArtworkRequest(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v8);
  v10 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)&v2[qword_3D9750];
  if (v15)
  {
    v135 = v4;
    v136 = v5;
    v137 = v15;
    swift_retain(v15);
    swift_retain(a1);
    sub_181414(v16);
    v17 = swift_release(a1);
    UpsellBanner.artwork.getter(v17);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v19 = 1;
    if (v18(v10, 1, v11) == 1)
    {
      sub_D1D4((uint64_t)v10, &qword_3D0A58);
      v20 = qword_3D9718;
      v2[qword_3D9718] = 0;
      v21 = sub_17E14C();
      objc_msgSend(v21, "setHidden:", sub_17F480());

      v22 = sub_451F4(&qword_3D9738, (uint64_t (*)(uint64_t))sub_17F268);
      v23 = qword_3D96B8;
      if (v2[qword_3D96B8])
        v24 = 2;
      else
        v24 = 0;
      (*(void (**)(uint64_t))&stru_B8.segname[(swift_isaMask & *v22) - 8])(v24);

      v25 = *(void **)&v2[qword_3D9748];
      if (sub_17F480())
        v26 = 1;
      else
        v26 = v2[v23] ^ 1;
      objc_msgSend(v25, "setHidden:", v26 & 1);
      v41 = sub_17F524(v2);
      v42 = *(void **)&v2[qword_3D96F0];
      objc_msgSend(v42, "setNumberOfLines:", v41);
      v43 = objc_msgSend(v2, "traitCollection");
      v44 = (char *)objc_msgSend(v43, "userInterfaceIdiom");

      if (v44 == (_BYTE *)&dword_0 + 1 && v2[qword_3D96D0] == 1 && v2[v20] == 1)
        v45 = objc_msgSend(*(id *)&v2[qword_3D96E0], "setAlignment:", 3);
    }
    else
    {
      sub_2376C((uint64_t)v10, (uint64_t)v14);
      v134 = qword_3D9718;
      v2[qword_3D9718] = 1;
      v27 = sub_17E14C();
      objc_msgSend(v27, "setHidden:", sub_17F480());

      v28 = sub_451F4(&qword_3D9738, (uint64_t (*)(uint64_t))sub_17F268);
      v29 = qword_3D96B8;
      if (v2[qword_3D96B8])
        v30 = 2;
      else
        v30 = 0;
      (*(void (**)(uint64_t))&stru_B8.segname[(swift_isaMask & *v28) - 8])(v30);

      v31 = *(void **)&v2[qword_3D9748];
      if (!sub_17F480())
        v19 = v2[v29] ^ 1;
      objc_msgSend(v31, "setHidden:", v19 & 1);
      v32 = sub_17F524(v2);
      v33 = *(void **)&v2[qword_3D96F0];
      objc_msgSend(v33, "setNumberOfLines:", v32);
      v34 = objc_msgSend(v2, "traitCollection");
      v35 = (char *)objc_msgSend(v34, "userInterfaceIdiom");

      if (v35 == (_BYTE *)&dword_0 + 1 && v2[qword_3D96D0] == 1 && v2[v134] == 1)
        v36 = objc_msgSend(*(id *)&v2[qword_3D96E0], "setAlignment:", 3);
      v2[v29] = UpsellBanner.artworkShowsPlus.getter(v36) & 1;
      v37 = sub_17E14C();
      objc_msgSend(v37, "setHidden:", sub_17F480());

      v38 = sub_451F4(&qword_3D9738, (uint64_t (*)(uint64_t))sub_17F268);
      if (v2[v29])
        v39 = 2;
      else
        v39 = 0;
      (*(void (**)(uint64_t))&stru_B8.segname[(swift_isaMask & *v38) - 8])(v39);

      if (sub_17F480())
        v40 = 1;
      else
        v40 = v2[v29] ^ 1;
      objc_msgSend(v31, "setHidden:", v40 & 1);
      v42 = v33;
      objc_msgSend(v33, "setNumberOfLines:", sub_17F524(v2));
      v46 = objc_msgSend(v2, "traitCollection");
      v47 = (char *)objc_msgSend(v46, "userInterfaceIdiom");

      if (v47 == (_BYTE *)&dword_0 + 1 && v2[qword_3D96D0] == 1 && v2[v134] == 1)
        objc_msgSend(*(id *)&v2[qword_3D96E0], "setAlignment:", 3);
      v48 = *(id *)&v2[qword_3D9730];
      ArtworkModel.preferredRequest.getter();
      v49 = type metadata accessor for ArtworkView(0);
      v50 = sub_89A0((unint64_t *)&qword_3D22B8, type metadata accessor for ArtworkView, (uint64_t)&unk_2F56E0);
      ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v7, v137, 0, v49, v50);

      (*(void (**)(char *, uint64_t))(v136 + 8))(v7, v135);
      v45 = (id)sub_239C0((uint64_t)v14);
    }
    v51 = UpsellBanner.cta.getter(v45);
    if (v52)
    {
      v53 = v52;
      v141[0] = v51;
      v141[1] = v52;
      v54 = sub_D254();
      StringProtocol.localizedUppercase.getter(&type metadata for String, v54);
      v56 = v55;
      swift_bridgeObjectRelease(v53);
    }
    else
    {
      v56 = 0;
    }
    v57 = (char *)sub_451F4(&qword_3D9708, (uint64_t (*)(uint64_t))sub_17EBA4);
    v58 = *(id *)&v57[qword_3D5D10];

    if (v56)
    {
      v60 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v59 = swift_bridgeObjectRelease(v56).n128_u64[0];
    }
    else
    {
      v60 = 0;
    }
    objc_msgSend(v58, "setTitle:forState:", v60, 0, v59);

    SubscriptionNameAreaView.applyModel(model:)(a1);
    UpsellBanner.shortTitle.getter();
    if (v61)
    {
      v63 = v61;
      v64 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v62 = swift_bridgeObjectRelease(v63).n128_u64[0];
    }
    else
    {
      v64 = 0;
    }
    objc_msgSend(v42, "setText:", v64, v62);

    UpsellBanner.subtitle.getter();
    v66 = v65;
    v67 = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
    if (v66)
    {
      v69 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v68 = swift_bridgeObjectRelease(v66).n128_u64[0];
    }
    else
    {
      v69 = 0;
    }
    objc_msgSend(v67, "setText:", v69, v68);

    v71 = UpsellBanner.subtitleAction.getter(v70);
    v72 = swift_release(v71);
    if (v71)
    {
      v73 = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
      v74 = objc_msgSend(v73, "textColor");

      if (!v74)
      {
        __break(1u);
        return;
      }
      v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
      inited = swift_initStackObject(v75, v138);
      *(_OWORD *)(inited + 16) = xmmword_2EFA20;
      *(_QWORD *)(inited + 32) = NSUnderlineStyleAttributeName;
      *(_QWORD *)(inited + 40) = 1;
      *(_QWORD *)(inited + 64) = &type metadata for Int;
      *(_QWORD *)(inited + 72) = NSUnderlineColorAttributeName;
      *(_QWORD *)(inited + 104) = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
      *(_QWORD *)(inited + 80) = v74;
      v77 = NSUnderlineStyleAttributeName;
      v78 = NSUnderlineColorAttributeName;
      v79 = v74;
      v80 = sub_D4784(inited);
      v81 = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
      v82 = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
      v83 = objc_msgSend(v82, "text");

      if (v83)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
        v85 = v84;

      }
      else
      {
        v85 = 0xE000000000000000;
      }
      v86 = objc_allocWithZone((Class)NSAttributedString);
      v87 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v85);
      type metadata accessor for Key(0);
      sub_89A0((unint64_t *)&qword_3D0150, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v89 = objc_msgSend(v86, "initWithString:attributes:", v87, isa, swift_bridgeObjectRelease(v80).n128_f64[0]);

      objc_msgSend(v81, "setAttributedText:", v89);
      v90 = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
      objc_msgSend(v90, "setUserInteractionEnabled:", 1);

    }
    v91 = UpsellBanner.channelLinkAction.getter(v72);
    v92.n128_u64[0] = swift_release(v91).n128_u64[0];
    if (v91
      || (v141[0] = a1,
          v93 = type metadata accessor for UpsellBanner(0),
          v94 = EntitlementsActionProviding.entitlementsAction.getter(v93, &protocol witness table for UpsellBanner),
          v92 = swift_release(v94),
          v94))
    {
      v95 = *(void **)&v2[qword_3D5D10];
      v96 = objc_msgSend(v95, "gestureRecognizers", v92.n128_f64[0]);
      if (!v96)
        goto LABEL_55;
      v97 = v96;
      v98 = sub_E710(0, &qword_3D9988, UIGestureRecognizer_ptr);
      v99 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v97, v98);

      v100 = sub_17D2D0();
      v101 = sub_17C0F0((uint64_t)v100, v99, (uint64_t)&qword_3D9988, UIGestureRecognizer_ptr);
      swift_bridgeObjectRelease(v99);

      if ((v101 & 1) == 0)
      {
LABEL_55:
        v102 = sub_17D2D0();
        objc_msgSend(v95, "addGestureRecognizer:", v102);

      }
    }
    v103 = UpsellBanner.isEntitlementsBanner.getter(v92);
    v104 = sub_451F4(&qword_3D9708, (uint64_t (*)(uint64_t))sub_17EBA4);
    v105 = v104;
    if ((v103 & 1) != 0)
    {
      objc_msgSend(v104, "setHidden:", 1);

      v106 = sub_17D350();
      objc_msgSend(v106, "setHidden:", 0);
    }
    else
    {
      objc_msgSend(v104, "setHidden:", 0);

      v106 = sub_17D350();
      objc_msgSend(v106, "setHidden:", 1);
    }

    v141[0] = a1;
    v107 = type metadata accessor for UpsellBanner(0);
    v108 = EntitlementsActionProviding.entitlementsAction.getter(v107, &protocol witness table for UpsellBanner);
    if (v108)
    {
      v109 = v108;
      v110 = sub_17D350();
      Action.title.getter(v111);
      if (v112)
      {
        v114 = v112;
        v115 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v113 = swift_bridgeObjectRelease(v114).n128_u64[0];
      }
      else
      {
        v115 = 0;
      }
      objc_msgSend(v110, "setTitle:forState:", v115, 0, v113);

      v131 = sub_17D350();
      v142 = type metadata accessor for Action(0);
      v143 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v141[0] = v109;
      swift_retain(v109);
      v132 = v137;
      UIControl.setAction(_:for:asPartOf:)(v141, 0x2000, v137);
      swift_release(v132);

      swift_release(v109);
    }
    else
    {
      v116 = (char *)sub_451F4(&qword_3D9708, (uint64_t (*)(uint64_t))sub_17EBA4);
      v117 = UpsellBanner.action.getter();
      v142 = type metadata accessor for Action(0);
      v143 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v141[0] = v117;
      v118 = *(id *)&v116[qword_3D5D10];
      v119 = v137;
      UIControl.setAction(_:for:asPartOf:)(v141, 0x2000, v137);

      sub_1D5D4((uint64_t)v141, (uint64_t)v140);
      v120 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
      v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C0);
      if (swift_dynamicCast(v139, v140, v120, v121, 6))
      {
        v122 = v139[0];
        v123 = v139[1];
        v124 = *(_QWORD *)v139[0];
        v125 = swift_allocObject(&unk_386B10, 24, 7);
        swift_unknownObjectWeakInit(v125 + 16, v116);
        v126 = swift_retain(v125);
        dispatch thunk of CompletableAction.addCompletionHandler(_:)(sub_181644, v125, v124, v123, v126);
        swift_release_n(v125, 2);
        sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
        v127 = swift_allocObject(&unk_386B10, 24, 7);
        swift_unknownObjectWeakInit(v127 + 16, v116);
        v128 = v118;
        v130 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v129, 0, 0, 0, sub_18164C, v127);
        objc_msgSend(v128, "addAction:forControlEvents:", v130, 0x2000);
        swift_release(v119);

        swift_release(v122);
      }
      else
      {
        swift_release(v119);

      }
    }
    __swift_destroy_boxed_opaque_existential_0(v141);
  }
}

void sub_17D200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10[24];

  v3 = *(_QWORD *)(v1 + qword_3D9750);
  *(_QWORD *)(v1 + qword_3D9750) = a1;
  swift_release(v3);
  v4 = (uint64_t *)(*(_QWORD *)(v1 + qword_3D96E8)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph);
  swift_beginAccess(v4, v10, 1, 0);
  v5 = *v4;
  *v4 = a1;
  swift_retain_n(a1, 2);
  swift_release(v5);
  v6 = (char *)SubscriptionNameAreaView.channelLinkButton.getter();
  v7 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph];
  swift_beginAccess(&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph], &v9, 1, 0);
  v8 = *(_QWORD *)v7;
  *(_QWORD *)v7 = a1;
  swift_release(v8);
  swift_retain(a1);

}

id sub_17D2D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_3D9720;
  v2 = *(void **)(v0 + qword_3D9720);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_3D9720);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "viewTapped");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_17D350()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = qword_3D9710;
  v2 = *(void **)(v0 + qword_3D9710);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_3D9710);
  }
  else
  {
    v4 = sub_17EFE0();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_17D3AC()
{
  qword_3D9688 = 0x402C000000000000;
}

void sub_17D3BC()
{
  qword_3FCA90 = 0x4053400000000000;
}

void sub_17D3D0()
{
  qword_3FCA98 = 0x4077200000000000;
}

void sub_17D3E4(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _BYTE *v10;
  double v11;
  double v12;
  _QWORD v13[5];
  uint64_t v14;

  v2 = qword_3D96C0;
  v3 = v1[qword_3D96C0];
  if (a1 == 8)
  {
    if ((_DWORD)v3 == 8)
      return;
  }
  else
  {
    if ((_DWORD)v3 == 8)
      return;
    v12 = SizeClass.rawValue.getter(a1);
    if (v12 == SizeClass.rawValue.getter(v3) || v1[v2] == 8)
      return;
  }
  sub_180CA8();
  sub_17E248();
  objc_msgSend(*(id *)&v1[qword_3D96E8], "setHidden:", sub_17F5DC() & 1);
  v4 = *(void **)&v1[qword_3D96D8];
  if (qword_3CF758 != -1)
    swift_once(&qword_3CF758, sub_17D3AC);
  objc_msgSend(v4, "setLayoutMargins:", *(double *)&qword_3D9688, 16.0, *(double *)&qword_3D9688, 16.0);
  v5 = objc_opt_self(UIView);
  v6 = swift_allocObject(&unk_386BB0, 24, 7);
  *(_QWORD *)(v6 + 16) = v1;
  v7 = swift_allocObject(&unk_386BD8, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_181AD4;
  *(_QWORD *)(v7 + 24) = v6;
  v13[4] = sub_EC6A0;
  v14 = v7;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_920D4;
  v13[3] = &block_descriptor_18;
  v8 = _Block_copy(v13);
  v9 = v14;
  v10 = v1;
  swift_retain(v7);
  objc_msgSend((id)v5, "performWithoutAnimation:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v7, "", 128, 500, 40, 1);
  *(_QWORD *)&v11 = swift_release(v7).n128_u64[0];
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v10, "setNeedsLayout", v11);
    objc_msgSend(v10, "layoutIfNeeded");
    swift_release(v6);
  }
}

char *sub_17D618(char a1)
{
  char *v1;
  char *v2;
  char v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double v13;
  uint64_t v14;
  void *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  NSString v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  char *v33;
  id v34;
  void *v35;
  uint64_t v36;
  double v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  double v42;
  char *v43;
  id v44;
  id v45;
  id v46;
  __C::UILayoutPriority v47;
  NSLayoutConstraint v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  double v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  double v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  double v86;
  id v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  void *v100;
  uint64_t v101;
  Class isa;
  uint64_t v104;
  uint64_t v105;
  double v106;
  _QWORD v107[6];
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int16 v112;

  v2 = v1;
  *(_QWORD *)&v1[qword_3D9698] = 0x4033000000000000;
  *(_QWORD *)&v1[qword_3D96A0] = 0x401C000000000000;
  *(_QWORD *)&v1[qword_3D96A8] = 0;
  v1[qword_3D96B0] = 1;
  v3 = a1 & 1;
  v1[qword_3D96B8] = 1;
  v1[qword_3D96C0] = 8;
  *(_QWORD *)&v1[qword_3D96C8] = 0;
  v4 = qword_3D96D8;
  v5 = objc_allocWithZone((Class)UIStackView);
  v6 = v2;
  v7 = objc_msgSend(v5, "init");
  objc_msgSend(v7, "setAxis:", 1);
  objc_msgSend(v7, "setDistribution:", 0);
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setAllowsGroupBlending:", 0);

  objc_msgSend(v7, "setAlignment:", 0);
  objc_msgSend(v7, "setLayoutMarginsRelativeArrangement:", 1);
  *(_QWORD *)&v2[v4] = v7;
  v9 = qword_3D96E0;
  *(_QWORD *)&v6[v9] = sub_17E690();
  v10 = qword_3D96E8;
  v11 = type metadata accessor for SubscriptionNameAreaView();
  v12 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11)), "init");
  LODWORD(v13) = 1148846080;
  objc_msgSend(v12, "setContentCompressionResistancePriority:forAxis:", 1, v13);
  *(_QWORD *)&v6[v10] = v12;
  v14 = qword_3D96F0;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF4C0 != -1)
    swift_once(&qword_3CF4C0, sub_13FD20);
  v107[0] = qword_3FB4F0;
  v107[1] = qword_3FB4F8;
  v107[2] = qword_3FB500;
  v107[3] = qword_3FB508;
  v107[4] = qword_3FB510;
  v107[5] = qword_3FB518;
  v108 = xmmword_3FB520;
  v109 = qword_3FB530;
  v110 = qword_3FB538;
  v111 = qword_3FB540;
  v112 = word_3FB548;
  sub_DDA0((void *)qword_3FB4F0, qword_3FB4F8, qword_3FB500, qword_3FB508, qword_3FB510, qword_3FB518, (void *)xmmword_3FB520, *((uint64_t *)&xmmword_3FB520 + 1), qword_3FB530, qword_3FB538, qword_3FB540, word_3FB548, SHIBYTE(word_3FB548));
  v15 = sub_A96AC((uint64_t)v107, 2, 0, 1);
  objc_msgSend(v15, "setNumberOfLines:", 3);
  objc_msgSend(v15, "setLineBreakMode:", 4);
  LODWORD(v16) = 1148846080;
  objc_msgSend(v15, "setContentCompressionResistancePriority:forAxis:", 1, v16);
  *(_QWORD *)&v6[v14] = v15;
  *(_QWORD *)&v6[qword_3D96F8] = 0;
  *(_QWORD *)&v6[qword_3D9700] = 0;
  *(_QWORD *)&v6[qword_3D9708] = 0;
  *(_QWORD *)&v6[qword_3D9710] = 0;
  v6[qword_3D9718] = 0;
  *(_QWORD *)&v6[qword_3D9720] = 0;
  *(_QWORD *)&v6[qword_3D9728] = 0;
  v17 = qword_3D9730;
  v18 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v6[v17] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18)), "init");
  *(_QWORD *)&v6[qword_3D9738] = 0;
  *(_QWORD *)&v6[qword_3D9740] = 0;
  v19 = qword_3D9748;
  v20 = (void *)objc_opt_self(UIImage);
  v21 = String._bridgeToObjectiveC()();
  if (qword_3CF770 != -1)
    swift_once(&qword_3CF770, sub_17F440);
  v22 = objc_msgSend(v20, "__systemImageNamed:withConfiguration:", v21, qword_3D9690);

  v23 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v22);
  *(_QWORD *)&v6[v19] = v23;
  *(_QWORD *)&v6[qword_3D9750] = 0;
  v6[qword_3D96D0] = v3;

  v24 = *(void **)&v2[v4];
  v25 = (void *)objc_opt_self(UIBlurEffect);
  v26 = v24;
  v27 = objc_msgSend(v25, "effectWithStyle:", 8);
  v28 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v27, 0);
  v29 = sub_243A4((uint64_t)v27, (uint64_t)v28);
  v31 = v30;

  *(_QWORD *)&v6[qword_3D5D10] = v26;
  v32 = v26;
  v33 = sub_1DF480(v26, v29, v31);
  v34 = objc_msgSend(v33, "layer");
  v35 = v34;
  v36 = qword_3D96D0;
  v37 = 12.0;
  if (v33[qword_3D96D0])
    v37 = 0.0;
  objc_msgSend(v34, "setCornerRadius:", v37);

  objc_msgSend(v33, "setClipsToBounds:", 1);
  v38 = *(void **)&v33[qword_3D9748];
  v39 = (void *)objc_opt_self(UIColor);
  v40 = v38;
  v41 = objc_msgSend(v39, "labelColor");
  objc_msgSend(v40, "setTintColor:", v41);

  v107[0] = _swiftEmptyArrayStorage;
  v104 = 0x4037000000000000;
  v105 = 0x403C000000000000;
  static Platform.preferred<A>(iOS:mac:)(&v106, &v105, &v104, &type metadata for CGFloat);
  v42 = v106;
  v43 = (char *)sub_451F4(&qword_3D9708, (uint64_t (*)(uint64_t))sub_17EBA4);
  v44 = *(id *)&v43[qword_3D5D10];

  v45 = objc_msgSend(v44, "heightAnchor");
  v46 = objc_msgSend(v45, "constraintEqualToConstant:", v42);

  v47.rawValue = static UILayoutPriority.highestBreakable.getter();
  v48.super.isa = NSLayoutConstraint.withPriority(priority:)(v47).super.isa;

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
  v51 = *(_QWORD *)((char *)&dword_10 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  v50 = *(_QWORD *)((char *)&dword_18 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  if (v51 >= v50 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
  v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v48.super.isa);
  specialized Array._endMutation()(v52);
  v53 = (char *)sub_451F4(&qword_3D9708, (uint64_t (*)(uint64_t))sub_17EBA4);
  v54 = *(id *)&v53[qword_3D5D10];

  v55 = objc_msgSend(v54, "widthAnchor");
  v56 = objc_msgSend(v55, "constraintLessThanOrEqualToConstant:", 95.0);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v57);
  v59 = *(_QWORD *)((char *)&dword_10 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  v58 = *(_QWORD *)((char *)&dword_18 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  if (v59 >= v58 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v58 > 1, v59 + 1, 1);
  v60 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v56);
  specialized Array._endMutation()(v60);
  v104 = 0x4037000000000000;
  v105 = 0x403C000000000000;
  static Platform.preferred<A>(iOS:mac:)(&v106, &v105, &v104, &type metadata for CGFloat);
  v61 = v106;
  v62 = sub_17D350();
  v63 = objc_msgSend(v62, "heightAnchor");

  v64 = objc_msgSend(v63, "constraintEqualToConstant:", v61);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
  v67 = *(_QWORD *)((char *)&dword_10 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  v66 = *(_QWORD *)((char *)&dword_18 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  if (v67 >= v66 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
  v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v64);
  specialized Array._endMutation()(v68);
  v69 = sub_17D350();
  v70 = objc_msgSend(v69, "widthAnchor");

  v71 = objc_msgSend(v70, "constraintEqualToConstant:", v61);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v72);
  v74 = *(_QWORD *)((char *)&dword_10 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  v73 = *(_QWORD *)((char *)&dword_18 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  if (v74 >= v73 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v74 + 1, 1);
  v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v74, v71);
  specialized Array._endMutation()(v75);
  v76 = sub_17E14C();
  v77 = objc_msgSend(v76, "widthAnchor");

  v78 = 57.0;
  if (v33[v36])
    v78 = 23.0;
  v79 = objc_msgSend(v77, "constraintEqualToConstant:", v78);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v80);
  v82 = *(_QWORD *)((char *)&dword_10 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  v81 = *(_QWORD *)((char *)&dword_18 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  if (v82 >= v81 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v81 > 1, v82 + 1, 1);
  v83 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v82, v79);
  specialized Array._endMutation()(v83);
  v84 = sub_17E14C();
  v85 = objc_msgSend(v84, "heightAnchor");

  v86 = 57.0;
  if (v33[v36])
    v86 = 23.0;
  v87 = objc_msgSend(v85, "constraintEqualToConstant:", v86);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v88);
  v90 = *(_QWORD *)((char *)&dword_10 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  v89 = *(_QWORD *)((char *)&dword_18 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  if (v90 >= v89 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v89 > 1, v90 + 1, 1);
  v91 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v90, v87);
  specialized Array._endMutation()(v91);
  v92 = objc_msgSend(v33, "heightAnchor");
  if (qword_3CF760 != -1)
    swift_once(&qword_3CF760, sub_17D3BC);
  v93 = objc_msgSend(v92, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_3FCA90);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v94);
  v96 = *(_QWORD *)((char *)&dword_10 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  v95 = *(_QWORD *)((char *)&dword_18 + (v107[0] & 0xFFFFFFFFFFFFFF8));
  if (v96 >= v95 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v95 > 1, v96 + 1, 1);
  v97 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v96, v93);
  specialized Array._endMutation()(v97);
  v98 = &v33[qword_3D5E18];
  *(_QWORD *)v98 = 2;
  v98[8] = 0;
  v99 = v33;
  sub_1DF768(0);

  sub_17E248();
  v100 = (void *)objc_opt_self(NSLayoutConstraint);
  v101 = v107[0];
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v101);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v100, "activateConstraints:", isa, swift_bridgeObjectRelease(v101).n128_f64[0]);

  swift_bridgeObjectRelease(v107[0]);
  return v99;
}

id sub_17E14C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = qword_3D9740;
  v2 = *(void **)(v0 + qword_3D9740);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_3D9740);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v6 = objc_msgSend(v5, "layer");
    objc_msgSend(v6, "setCornerRadius:", 6.0);

    objc_msgSend(v5, "setClipsToBounds:", 1);
    v7 = sub_451F4(&qword_3D9738, (uint64_t (*)(uint64_t))sub_17F268);
    UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v7, 0, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);

    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_17E248()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t j;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t k;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;

  v1 = sub_451F4(&qword_3D9700, (uint64_t (*)(uint64_t))sub_17EA24);
  v2 = objc_msgSend(v1, "arrangedSubviews");

  v3 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v9 = v4;
    else
      v9 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v9);
    if (!v5)
      goto LABEL_13;
  }
  else
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v4);
    if (!v5)
      goto LABEL_13;
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_39;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v7 = *(id *)(v4 + 8 * i + 32);
    v8 = v7;
    objc_msgSend(v7, "removeFromSuperview");

  }
LABEL_13:
  v10 = objc_msgSend(*(id *)(v0 + qword_3D96E0), "arrangedSubviews", swift_bridgeObjectRelease_n(v4, 2).n128_f64[0]);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v3);

  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v16 = v11;
    else
      v16 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v12 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v12)
      goto LABEL_25;
  }
  else
  {
    v12 = *(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v11);
    if (!v12)
      goto LABEL_25;
  }
  if (v12 < 1)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  for (j = 0; j != v12; ++j)
  {
    if ((v11 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v11);
    else
      v14 = *(id *)(v11 + 8 * j + 32);
    v15 = v14;
    objc_msgSend(v14, "removeFromSuperview");

  }
LABEL_25:
  v17 = objc_msgSend(*(id *)(v0 + qword_3D96D8), "arrangedSubviews", swift_bridgeObjectRelease_n(v11, 2).n128_f64[0]);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v3);

  if (!((unint64_t)v18 >> 62))
  {
    v19 = *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v18);
    if (v19)
      goto LABEL_27;
LABEL_37:
    swift_bridgeObjectRelease_n(v18, 2);
    sub_17F730();
    v24 = *(void **)(v0 + qword_3D9748);
    objc_msgSend(v24, "removeFromSuperview");
    v25 = *(void **)(v0 + qword_3D5D10);
    objc_msgSend(v25, "addSubview:", v24);
    objc_msgSend(v25, "bringSubviewToFront:", v24);
    v26 = objc_msgSend(v24, "centerXAnchor");
    v27 = sub_17E14C();
    v28 = objc_msgSend(v27, "trailingAnchor");

    v29 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v28, 0.5);
    objc_msgSend(v29, "setActive:", 1);

    v30 = objc_msgSend(v24, "centerYAnchor");
    v31 = sub_17E14C();
    v32 = objc_msgSend(v31, "topAnchor");

    v33 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v32, 0.5);
    objc_msgSend(v33, "setActive:", 1);

    objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    return;
  }
  if (v18 < 0)
    v23 = v18;
  else
    v23 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v18);
  v19 = _CocoaArrayWrapper.endIndex.getter(v23);
  if (!v19)
    goto LABEL_37;
LABEL_27:
  if (v19 >= 1)
  {
    for (k = 0; k != v19; ++k)
    {
      if ((v18 & 0xC000000000000001) != 0)
        v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v18);
      else
        v21 = *(id *)(v18 + 8 * k + 32);
      v22 = v21;
      objc_msgSend(v21, "removeFromSuperview");

    }
    goto LABEL_37;
  }
LABEL_40:
  __break(1u);
}

id sub_17E690()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v0, "setAxis:", 0);
  objc_msgSend(v0, "setDistribution:", 0);
  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setAllowsGroupBlending:", 0);

  objc_msgSend(v0, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v0, "setSpacing:", 10.0);
  v2 = qword_3CF758;
  v3 = v0;
  if (v2 != -1)
    swift_once(&qword_3CF758, sub_17D3AC);
  objc_msgSend(v3, "setHitTestDirectionalInsets:", 0.0, 0.0, -*(double *)&qword_3D9688, 0.0);

  return v3;
}

id sub_17E7A0(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  double v9;
  id v10;
  uint64_t v11;
  id v12;
  _QWORD v14[6];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;

  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF4D0 != -1)
    swift_once(&qword_3CF4D0, sub_13FDE0);
  v14[0] = qword_3FB5B0;
  v14[1] = *(_QWORD *)algn_3FB5B8;
  v14[2] = qword_3FB5C0;
  v14[3] = qword_3FB5C8;
  v14[4] = qword_3FB5D0;
  v14[5] = qword_3FB5D8;
  v15 = xmmword_3FB5E0;
  v16 = qword_3FB5F0;
  v17 = qword_3FB5F8;
  v18 = qword_3FB600;
  v19 = word_3FB608;
  sub_DDA0((void *)qword_3FB5B0, *(uint64_t *)algn_3FB5B8, qword_3FB5C0, qword_3FB5C8, qword_3FB5D0, qword_3FB5D8, (void *)xmmword_3FB5E0, *((uint64_t *)&xmmword_3FB5E0 + 1), qword_3FB5F0, qword_3FB5F8, qword_3FB600, word_3FB608, SHIBYTE(word_3FB608));
  v2 = sub_A96AC((uint64_t)v14, 2, 0, 1);
  objc_msgSend(v2, "setAlpha:", 0.5);
  objc_msgSend(v2, "setNumberOfLines:", 2);
  objc_msgSend(v2, "setMinimumScaleFactor:", 0.7);
  objc_msgSend(v2, "setAdjustsFontSizeToFitWidth:", 1);
  v3 = objc_msgSend(v2, "layer");
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v5 = v4;
  v6 = objc_allocWithZone((Class)CAFilter);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithType:", v7, swift_bridgeObjectRelease(v5).n128_f64[0]);

  objc_msgSend(v3, "setCompositingFilter:", v8);
  LODWORD(v9) = 1148846080;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 1, v9);
  v10 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", a1, "subtitleLabelTapped");
  objc_msgSend(v2, "addGestureRecognizer:", v10);
  v11 = qword_3CF758;
  v12 = v2;
  if (v11 != -1)
    swift_once(&qword_3CF758, sub_17D3AC);
  objc_msgSend(v12, "setHitTestDirectionalInsets:", -*(double *)&qword_3D9688, -*(double *)&qword_3D9688, -*(double *)&qword_3D9688, 0.0);

  return v12;
}

id sub_17EA24(uint64_t a1)
{
  id v2;
  id v3;
  id result;
  void *v5;
  void *v6;
  double v7;
  double v8;
  uint64_t v9;
  id v10;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v2, "setAxis:", 1);
  objc_msgSend(v2, "setAlignment:", 0);
  v3 = objc_msgSend(v2, "layer");
  objc_msgSend(v3, "setAllowsGroupBlending:", 0);

  objc_msgSend(v2, "setBaselineRelativeArrangement:", 1);
  result = objc_msgSend(*(id *)(a1 + qword_3D96F0), "font");
  if (result)
  {
    v5 = result;
    v6 = (void *)UIFont.metrics.getter();

    objc_msgSend(v6, "scaledValueForValue:", *(double *)(a1 + qword_3D9698));
    v8 = v7;

    objc_msgSend(v2, "setSpacing:", v8);
    v9 = qword_3CF758;
    v10 = v2;
    if (v9 != -1)
      swift_once(&qword_3CF758, sub_17D3AC);
    objc_msgSend(v10, "setHitTestDirectionalInsets:", 0.0, -*(double *)&qword_3D9688, -*(double *)&qword_3D9688, 0.0);

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_17EBA4(void *a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char *v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  double v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;

  v2 = (int *)type metadata accessor for VEVButtonContainer.Style(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = a1;
  if ((sub_17EF30() & 1) != 0)
    v5 = 12.0;
  else
    v5 = 16.0;
  if (qword_3CF4D8 != -1)
    swift_once(&qword_3CF4D8, sub_13FE40);
  v61 = qword_3FB620;
  v62 = qword_3FB618;
  v6 = qword_3FB630;
  v7 = qword_3FB638;
  v59 = (void *)xmmword_3FB640;
  v60 = qword_3FB628;
  v8 = qword_3FB650;
  v63 = *((_QWORD *)&xmmword_3FB640 + 1);
  v64 = (void *)qword_3FB610;
  v9 = qword_3FB658;
  v10 = qword_3FB660;
  v54 = qword_3FB650;
  v55 = qword_3FB658;
  v56 = qword_3FB660;
  v11 = byte_3FB668;
  v12 = &v4[v2[5]];
  v13 = byte_3FB669;
  v57 = byte_3FB668;
  v58 = byte_3FB669;
  v14 = type metadata accessor for Glyph(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  v52 = v13;
  v51 = v11;
  v49 = v9;
  v50 = v10;
  v48 = v8;
  v16 = v63;
  v15 = v64;
  v18 = v61;
  v17 = v62;
  v19 = v59;
  v20 = v60;
  sub_DDA0(v64, v62, v61, v60, v6, v7, v59, v63, v48, v49, v50, v51, v52);
  v21 = UIEdgeInsets.init(topBottom:sides:)(0.0, v5);
  *(_QWORD *)v4 = v15;
  *((_QWORD *)v4 + 1) = v17;
  *((_QWORD *)v4 + 2) = v18;
  *((_QWORD *)v4 + 3) = v20;
  *((_QWORD *)v4 + 4) = v6;
  *((_QWORD *)v4 + 5) = v7;
  *((_QWORD *)v4 + 6) = v19;
  *((_QWORD *)v4 + 7) = v16;
  v22 = v55;
  *((_QWORD *)v4 + 8) = v54;
  *((_QWORD *)v4 + 9) = v22;
  *((_QWORD *)v4 + 10) = v56;
  v4[88] = v57;
  v4[89] = v58;
  v23 = &v4[v2[6]];
  __asm { FMOV            V4.2D, #16.0 }
  *(_OWORD *)v23 = _Q4;
  v23[16] = 0;
  v29 = &v4[v2[8]];
  *(double *)v29 = v21;
  *((_QWORD *)v29 + 1) = v30;
  *((_QWORD *)v29 + 2) = v31;
  *((_QWORD *)v29 + 3) = v32;
  *(_QWORD *)&v4[v2[9]] = 14;
  v4[v2[7]] = 1;
  v33 = objc_allocWithZone((Class)type metadata accessor for VEVButtonContainer(0));
  v34 = sub_1DF878((uint64_t)v4);
  v35 = objc_msgSend(v65, "traitCollection");
  LOBYTE(v19) = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v19 & 1) != 0)
  {
    v36 = *(void **)&v34[qword_3D5D10];
    v37 = (void *)objc_opt_self(UIColor);
    v38 = v36;
    v39 = objc_msgSend(v37, "whiteColor");
    objc_msgSend(v38, "setBackgroundColor:", v39);

  }
  v40 = qword_3D5D10;
  v41 = objc_msgSend(*(id *)&v34[qword_3D5D10], "titleLabel");
  if (v41)
  {
    v42 = v41;
    sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v43 = (void *)static UIFont.footnoteEmph.getter();
    objc_msgSend(v42, "setFont:", v43);

  }
  v44 = objc_msgSend(*(id *)&v34[v40], "titleLabel");
  objc_msgSend(v44, "setAdjustsFontSizeToFitWidth:", 1);

  v45 = *(id *)&v34[v40];
  static UILayoutPriority.highestBreakable.getter();
  objc_msgSend(v45, "setContentCompressionResistancePriority:forAxis:", 0);

  LODWORD(v46) = 1148846080;
  objc_msgSend(*(id *)&v34[v40], "setContentHuggingPriority:forAxis:", 0, v46);
  objc_msgSend(v34, "setHidden:", 1);
  return v34;
}

uint64_t sub_17EF30()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  char *v3;

  v1 = qword_3D96C0;
  if (!v0[qword_3D96C0]
    || v0[qword_3D96C0] == 1
    && (v2 = objc_msgSend(v0, "traitCollection"),
        v3 = (char *)objc_msgSend(v2, "userInterfaceIdiom"),
        v2,
        v3 == (_BYTE *)&dword_0 + 1))
  {
    if (v0[qword_3D96D0] != 1)
      return 1;
  }
  if (v0[v1] - 2 > 3)
    return 0;
  return v0[qword_3D96D0];
}

void *sub_17EFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSString v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v17;

  v0 = type metadata accessor for UIButton.Configuration.Size(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - v9;
  static UIButton.Configuration.plain()(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for UIButton.Configuration.Size.medium(_:), v0);
  UIButton.Configuration.buttonSize.setter(v3);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v12);

  UIButton.Configuration.image.setter(v13);
  v14 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 2);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v14);
  sub_E710(0, (unint64_t *)&qword_3E1860, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v15 = (void *)UIButton.init(configuration:primaryAction:)(v7, 0);
  objc_msgSend(v15, "setHidden:", 1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v15;
}

id sub_17F1B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = qword_3D9728;
  v2 = *(void **)(v0 + qword_3D9728);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_3D9728);
  }
  else
  {
    v4 = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
    v5 = objc_msgSend(v4, "widthAnchor");

    v6 = objc_msgSend(v5, "constraintLessThanOrEqualToConstant:", 120.0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

_QWORD *sub_17F268(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  _QWORD *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v2 = type metadata accessor for RoundedCornerView();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  (*(void (**)(_QWORD, double))((char *)&stru_68.reserved2 + (swift_isaMask & *v3)))(0, 20.0);
  (*(void (**)(uint64_t))&stru_B8.segname[(swift_isaMask & *v3) - 8])(2);
  objc_msgSend(v3, "setClipsToBounds:", 1);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v3;
  v6 = objc_msgSend(v4, "whiteColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  v7 = objc_msgSend(v5, "layer");
  v8 = objc_msgSend(v4, "blackColor");
  v9 = objc_msgSend(v8, "colorWithAlphaComponent:", 0.17);

  v10 = objc_msgSend(v9, "CGColor");
  objc_msgSend(v7, "setShadowColor:", v10);

  v11 = objc_msgSend(v5, "layer");
  objc_msgSend(v11, "setShadowRadius:", 5.0);

  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(*(_QWORD *)(a1 + qword_3D9730), 0, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  return v5;
}

id sub_17F440()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 8, 8.0);
  qword_3D9690 = (uint64_t)result;
  return result;
}

BOOL sub_17F480()
{
  _BYTE *v0;
  id v1;
  char *v2;
  _BOOL8 result;

  result = 1;
  if (v0[qword_3D9718] == 1)
  {
    if (v0[qword_3D96C0])
    {
      if (v0[qword_3D96C0] != 1)
        return 0;
      v1 = objc_msgSend(v0, "traitCollection");
      v2 = (char *)objc_msgSend(v1, "userInterfaceIdiom");

      if (v2 != (_BYTE *)&dword_0 + 1)
        return 0;
    }
    if (v0[qword_3D96D0] == 1)
      return 0;
  }
  return result;
}

uint64_t sub_17F524(_BYTE *a1)
{
  id v2;
  char *v3;

  if (a1[qword_3D9718] == 1
    && (a1[qword_3D96C0]
     && (a1[qword_3D96C0] != 1
      || (v2 = objc_msgSend(a1, "traitCollection"),
          v3 = (char *)objc_msgSend(v2, "userInterfaceIdiom"),
          v2,
          v3 != (_BYTE *)&dword_0 + 1))
     || a1[qword_3D96D0] == 1)
    && a1[qword_3D96D0] != 1)
  {
    return 3;
  }
  else
  {
    return 2;
  }
}

uint64_t sub_17F5DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = qword_3D96A8;
  v6 = *(_QWORD *)(v0 + qword_3D96A8);
  if (v6)
  {
    v7 = swift_retain(v6);
    UpsellBanner.wordmarkArtwork.getter(v7);
    swift_release(v6);
    v8 = type metadata accessor for ArtworkModel(0);
    v9 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) != 1)
      goto LABEL_6;
  }
  else
  {
    v10 = type metadata accessor for ArtworkModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  }
  v9 = 0;
LABEL_6:
  sub_D1D4((uint64_t)v4, &qword_3D0A58);
  v11 = *(_QWORD *)(v1 + v5);
  if (v11
    && (v12 = swift_retain(*(_QWORD *)(v1 + v5)),
        v13 = UpsellBanner.subscriptionTitle.getter(v12),
        v15 = v14,
        swift_release(v11),
        v15))
  {
    swift_bridgeObjectRelease(v15);
    v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0)
      v16 = v13 & 0xFFFFFFFFFFFFLL;
    if (v16)
      v17 = 1;
    else
      v17 = v9;
    if ((v17 & 1) == 0)
      return 1;
  }
  else if ((v9 & 1) == 0)
  {
    return 1;
  }
  return 0;
}

id sub_17F730()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  char v5;
  id v6;
  void *v7;
  id v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  __n128 v17;
  char v18;
  id v19;
  Swift::OpaquePointer v20;
  void *v21;
  id v22;
  Swift::OpaquePointer v23;
  id v24;
  uint64_t v25;
  Swift::OpaquePointer v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  char v35;
  double v36;
  void *v37;
  double v38;
  id v39;
  Swift::OpaquePointer v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  __n128 v45;
  char v46;
  double v47;
  id v48;
  char v49;
  double v50;
  id v52;
  void *v53;
  id v54;
  Swift::OpaquePointer v55;
  Swift::OpaquePointer v56;

  v1 = v0;
  v2 = *(void **)&v0[qword_3D96D8];
  objc_msgSend(v2, "setBaselineRelativeArrangement:", 0);
  v3 = *(void **)&v0[qword_3D96E0];
  v4 = sub_17E14C();
  objc_msgSend(v3, "addArrangedSubview:", v4);

  v5 = sub_17EF30();
  v6 = sub_17F1B4();
  v7 = v6;
  if ((v5 & 1) != 0)
  {
    v8 = objc_msgSend(v1, "traitCollection");
    v9 = (char *)objc_msgSend(v8, "userInterfaceIdiom");

    if (v9 == (_BYTE *)&dword_0 + 1)
      v10 = v1[qword_3D96D0] ^ 1;
    else
      v10 = 1;
    objc_msgSend(v7, "setActive:", v10 & 1);

    objc_msgSend(v3, "setAlignment:", 4);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v26._rawValue = (void *)swift_allocObject(v25, 72, 7);
    *((_OWORD *)v26._rawValue + 1) = xmmword_2F1D10;
    *((_QWORD *)v26._rawValue + 4) = sub_17E14C();
    *((_QWORD *)v26._rawValue + 5) = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
    *((_QWORD *)v26._rawValue + 6) = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    *((_QWORD *)v26._rawValue + 7) = sub_451F4(&qword_3D9708, (uint64_t (*)(uint64_t))sub_17EBA4);
    v27 = sub_17D350();
    *((_QWORD *)v26._rawValue + 8) = v27;
    specialized Array._endMutation()(v27);
    UIStackView.addArrangedSubviews(_:)(v26);
    swift_bridgeObjectRelease(v26._rawValue);
    v28 = swift_allocObject(v25, 56, 7);
    *(_OWORD *)(v28 + 16) = xmmword_2EFC80;
    v29 = *(void **)&v1[qword_3D96E8];
    v30 = *(void **)&v1[qword_3D96F0];
    *(_QWORD *)(v28 + 32) = v29;
    *(_QWORD *)(v28 + 40) = v30;
    *(_QWORD *)(v28 + 48) = v3;
    v56._rawValue = (void *)v28;
    specialized Array._endMutation()(v28);
    v31 = v29;
    v32 = v30;
    v33 = v3;
    UIStackView.addArrangedSubviews(_:)(v56);
    v34 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRelease(v56._rawValue).n128_f64[0]);
    v35 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v35 & 1) != 0 && v1[qword_3D96D0] == 1)
      objc_msgSend(v33, "setAlignment:", 3);
    v36 = *(double *)&v1[qword_3D96A0];
    objc_msgSend(v2, "setCustomSpacing:afterView:", v31, v36);
    v37 = v2;
    v38 = v36;
    v39 = v32;
  }
  else
  {
    objc_msgSend(v6, "setActive:", 0);

    objc_msgSend(v3, "setAlignment:", 3);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v12 = swift_allocObject(v11, 48, 7);
    *(_OWORD *)(v12 + 16) = xmmword_2EFC90;
    v13 = *(void **)&v1[qword_3D96E8];
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 40) = v3;
    v55._rawValue = (void *)v12;
    specialized Array._endMutation()(v12);
    v14 = v3;
    v15 = v13;
    UIStackView.addArrangedSubviews(_:)(v55);
    swift_bridgeObjectRelease(v55._rawValue);
    v54 = v15;
    if ((sub_17F5DC() & 1) != 0
      || (v16 = *(_QWORD *)&v1[qword_3D96A8]) != 0
      && (v17 = swift_retain(*(_QWORD *)&v1[qword_3D96A8]),
          v18 = UpsellBanner.hasChannelLinkData.getter(v17),
          swift_release(v16),
          (v18 & 1) != 0))
    {
      v19 = sub_451F4(&qword_3D9700, (uint64_t (*)(uint64_t))sub_17EA24);
      v20._rawValue = (void *)swift_allocObject(v11, 48, 7);
      *((_OWORD *)v20._rawValue + 1) = xmmword_2EFC90;
      v21 = *(void **)&v1[qword_3D96F0];
      *((_QWORD *)v20._rawValue + 4) = v21;
      v52 = v21;
      v22 = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
      *((_QWORD *)v20._rawValue + 5) = v22;
      specialized Array._endMutation()(v22);
      UIStackView.addArrangedSubviews(_:)(v20);

      swift_bridgeObjectRelease(v20._rawValue);
      v23._rawValue = (void *)swift_allocObject(v11, 64, 7);
      *((_OWORD *)v23._rawValue + 1) = xmmword_2F0A20;
      *((_QWORD *)v23._rawValue + 4) = sub_17E14C();
      *((_QWORD *)v23._rawValue + 5) = sub_451F4(&qword_3D9700, (uint64_t (*)(uint64_t))sub_17EA24);
      *((_QWORD *)v23._rawValue + 6) = sub_451F4(&qword_3D9708, (uint64_t (*)(uint64_t))sub_17EBA4);
      v24 = sub_17D350();
      *((_QWORD *)v23._rawValue + 7) = v24;
      specialized Array._endMutation()(v24);
      UIStackView.addArrangedSubviews(_:)(v23);
      swift_bridgeObjectRelease(v23._rawValue);
    }
    else
    {
      v40._rawValue = (void *)swift_allocObject(v11, 56, 7);
      *((_OWORD *)v40._rawValue + 1) = xmmword_2EFC80;
      v41 = *(void **)&v1[qword_3D96F0];
      *((_QWORD *)v40._rawValue + 4) = v41;
      v52 = v41;
      *((_QWORD *)v40._rawValue + 5) = sub_451F4(&qword_3D9708, (uint64_t (*)(uint64_t))sub_17EBA4);
      v42 = sub_17D350();
      *((_QWORD *)v40._rawValue + 6) = v42;
      specialized Array._endMutation()(v42);
      UIStackView.addArrangedSubviews(_:)(v40);
      swift_bridgeObjectRelease(v40._rawValue);
      v43 = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
      objc_msgSend(v2, "addArrangedSubview:", v43);

      objc_msgSend(v2, "setCustomSpacing:afterView:", v14, 4.0);
    }
    if ((sub_17F5DC() & 1) == 0)
    {
      v44 = *(_QWORD *)&v1[qword_3D96A8];
      if (v44)
      {
        v45 = swift_retain(*(_QWORD *)&v1[qword_3D96A8]);
        v46 = UpsellBanner.hasChannelLinkData.getter(v45);
        *(_QWORD *)&v47 = swift_release(v44).n128_u64[0];
        if ((v46 & 1) != 0)
          objc_msgSend(v14, "setAlignment:", 4, v47);
      }
    }
    v48 = objc_msgSend(v1, "traitCollection", v52);
    v49 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v49 & 1) != 0)
    {
      objc_msgSend(v2, "setBaselineRelativeArrangement:", 1);
      v38 = 18.0;
      v37 = v2;
      v39 = v54;
    }
    else
    {
      v50 = *(double *)&v1[qword_3D96A0];
      objc_msgSend(v2, "setCustomSpacing:afterView:", v54, v50);
      v37 = v2;
      v38 = v50;
      v39 = v53;
    }
  }
  return objc_msgSend(v37, "setCustomSpacing:afterView:", v39, v38);
}

double sub_17FDA4()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  id v32;
  _QWORD v34[3];
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v34[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&result = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v34[-1] - v9;
  v11 = qword_3D96A8;
  if (*(_QWORD *)&v0[qword_3D96A8])
  {
    v36[0] = *(_QWORD *)&v0[qword_3D96A8];
    v12 = type metadata accessor for UpsellBanner(0);
    v13 = EntitlementsActionProviding.entitlementsAction.getter(v12, &protocol witness table for UpsellBanner);
    if (v13)
    {
      v14 = v13;
      v15 = static Logger.purchases.getter(v13);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_0, v16, v17, "Performing Entitlements action on Upsell Banner click.", v18, 2u);
        swift_slowDealloc(v18, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      v37 = type metadata accessor for Action(0);
      v38 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v35 = ObjectType;
      v36[0] = v14;
      v34[0] = v1;
      v19 = sub_89A0(&qword_3D9990, type metadata accessor for UpsellBannerView, (uint64_t)&unk_2FAB84);
      swift_retain(v14);
      v20 = v1;
      v21 = v1;
      v22 = ObjectType;
      v23 = v19;
LABEL_6:
      v24 = DependencyBindableView.perform(_:from:in:)(v36, v34, v21, v22, v23);
      swift_release(v24);
      swift_release(v14);
      sub_D1D4((uint64_t)v34, &qword_3D1A70);
      __swift_destroy_boxed_opaque_existential_0(v36);
      return result;
    }
    v25 = *(_QWORD *)&v0[v11];
    if (v25)
    {
      v26 = swift_retain(*(_QWORD *)&v1[v11]);
      v14 = UpsellBanner.channelLinkAction.getter(v26);
      *(_QWORD *)&result = swift_release(v25).n128_u64[0];
      if (v14)
      {
        v28 = static Logger.purchases.getter(v27);
        v29 = Logger.logObject.getter(v28);
        v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v31 = 0;
          _os_log_impl(&dword_0, v29, v30, "Performing channel link action on Upsell Banner click.", v31, 2u);
          swift_slowDealloc(v31, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v37 = type metadata accessor for Action(0);
        v38 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        v36[0] = v14;
        swift_retain(v14);
        v32 = SubscriptionNameAreaView.channelLinkButton.getter();
        v35 = type metadata accessor for ChevronButton();
        v34[0] = v32;
        v23 = sub_89A0(&qword_3D9990, type metadata accessor for UpsellBannerView, (uint64_t)&unk_2FAB84);
        v21 = v1;
        v22 = ObjectType;
        goto LABEL_6;
      }
    }
  }
  return result;
}

void sub_1800E8(void *a1)
{
  id v1;

  v1 = a1;
  sub_17FDA4();

}

uint64_t sub_18011C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD v27[4];
  _QWORD v28[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v27[-1] - v9;
  v11 = *(_QWORD *)(v0 + qword_3D96A8);
  if (v11 && (v12 = swift_retain(v11), v13 = UpsellBanner.subtitleAction.getter(v12), swift_release(v11), v13))
  {
    v14 = static Logger.purchases.getter(v8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "Performing OAuth action on Upsell Banner subtitle click.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    v28[3] = type metadata accessor for Action(0);
    v28[4] = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v28[0] = v13;
    swift_retain(v13);
    v18 = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
    v27[3] = type metadata accessor for DynamicTypeLabel();
    v27[0] = v18;
    v19 = sub_89A0(&qword_3D9990, type metadata accessor for UpsellBannerView, (uint64_t)&unk_2FAB84);
    v20 = DependencyBindableView.perform(_:from:in:)(v28, v27, v1, ObjectType, v19);
    swift_release(v20);
    swift_release(v13);
    sub_D1D4((uint64_t)v27, &qword_3D1A70);
    return __swift_destroy_boxed_opaque_existential_0(v28);
  }
  else
  {
    v22 = static Logger.purchases.getter(v8);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "User clicked on OAuth but there was no action available.", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_1803C0(void *a1)
{
  id v1;

  v1 = a1;
  sub_18011C();

}

char *sub_1803F4(unsigned __int8 *a1)
{
  int v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;

  v1 = a1[qword_3D96B0];
  v2 = a1;
  if (v1 == 1)
  {
    if ((sub_17F5DC() & 1) != 0)
      v3 = (unsigned __int8 *)sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);
    else
      v3 = (unsigned __int8 *)*(id *)&v2[qword_3D96E8];
    v4 = v3;

    v2 = v4;
  }
  return (char *)v2;
}

unsigned __int8 *sub_180468(unsigned __int8 *a1)
{
  int v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;

  v1 = a1[qword_3D96B0];
  v2 = a1;
  if (v1 == 1)
  {
    v3 = (unsigned __int8 *)sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);

    v2 = v3;
  }
  return v2;
}

id sub_1804C0(id a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  id v14;
  id result;
  void *v16;
  void *v17;
  double v18;
  double v19;
  void *v20;
  objc_super v21;

  v2 = v1;
  v21.receiver = v2;
  v21.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, "traitCollectionDidChange:", a1);
  if (a1)
    a1 = objc_msgSend(a1, "preferredContentSizeCategory");
  v4 = objc_msgSend(v2, "traitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  if (a1)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    if (v6 == v9 && v8 == v10)
    {

      swift_bridgeObjectRelease_n(v8, 2);
      goto LABEL_14;
    }
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);

    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) != 0)
      goto LABEL_14;
  }
  else
  {

  }
  v14 = sub_451F4(&qword_3D9700, (uint64_t (*)(uint64_t))sub_17EA24);
  result = objc_msgSend(*(id *)&v2[qword_3D96F0], "font");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v16 = result;
  v17 = (void *)UIFont.metrics.getter(result);

  objc_msgSend(v17, "scaledValueForValue:", *(double *)&v2[qword_3D9698]);
  v19 = v18;

  objc_msgSend(v14, "setSpacing:", v19);
LABEL_14:
  objc_msgSend(*(id *)&v2[qword_3D96E8], "setHidden:", sub_17F5DC() & 1);
  v20 = *(void **)&v2[qword_3D96D8];
  if (qword_3CF758 != -1)
    swift_once(&qword_3CF758, sub_17D3AC);
  return objc_msgSend(v20, "setLayoutMargins:", *(double *)&qword_3D9688, 16.0, *(double *)&qword_3D9688, 16.0);
}

void sub_180708(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_1804C0(a3);

}

void sub_180760(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1816C0();
}

id sub_180784(void *a1)
{
  id v1;
  char *v2;
  id v3;

  v1 = a1;
  v2 = (char *)sub_451F4(&qword_3D9708, (uint64_t (*)(uint64_t))sub_17EBA4);
  v3 = *(id *)&v2[qword_3D5D10];

  return v3;
}

id sub_1807E8(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = sub_451F4(&qword_3D96F8, (uint64_t (*)(uint64_t))sub_17E7A0);

  return v2;
}

uint64_t sub_180828()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_3D96A8));
  swift_release(*(_QWORD *)(v0 + qword_3D96C8));

  return swift_release(*(_QWORD *)(v0 + qword_3D9750));
}

uint64_t sub_180944(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_3D96A8));
  swift_release(*(_QWORD *)(a1 + qword_3D96C8));

  return swift_release(*(_QWORD *)(a1 + qword_3D9750));
}

uint64_t type metadata accessor for UpsellBannerView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D9780;
  if (!qword_3D9780)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UpsellBannerView);
  return result;
}

uint64_t sub_180AA8(uint64_t a1)
{
  _QWORD v2[24];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[2] = "\b";
  v2[3] = &unk_2FAAD0;
  v2[4] = &unk_2FAAD0;
  v2[5] = &unk_2FAAE8;
  v2[6] = "\b";
  v2[7] = &unk_2FAAD0;
  v2[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[12] = "\b";
  v2[13] = "\b";
  v2[14] = "\b";
  v2[15] = "\b";
  v2[16] = &unk_2FAAD0;
  v2[17] = "\b";
  v2[18] = "\b";
  v2[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[20] = "\b";
  v2[21] = "\b";
  v2[22] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[23] = "\b";
  return swift_initClassMetadata2(a1, 256, 24, v2, a1 + 248);
}

uint64_t sub_180B3C()
{
  return type metadata accessor for UpsellBannerView(0);
}

uint64_t storeEnumTagSinglePayload for UpsellBannerView.LayoutStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_180B90 + 4 * byte_2FAA65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_180BC4 + 4 * byte_2FAA60[v4]))();
}

uint64_t sub_180BC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_180BCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x180BD4);
  return result;
}

uint64_t sub_180BE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x180BE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_180BEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_180BF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpsellBannerView.LayoutStyle()
{
  return &type metadata for UpsellBannerView.LayoutStyle;
}

unint64_t sub_180C14()
{
  unint64_t result;

  result = qword_3D9980;
  if (!qword_3D9980)
  {
    result = swift_getWitnessTable(&unk_2FAB4C, &type metadata for UpsellBannerView.LayoutStyle);
    atomic_store(result, (unint64_t *)&qword_3D9980);
  }
  return result;
}

id sub_180C58()
{
  uint64_t v0;

  return *(id *)(v0 + qword_3D9730);
}

double sub_180C68()
{
  uint64_t v0;
  double result;

  result = 57.0;
  if (*(_BYTE *)(v0 + qword_3D96D0))
    return 23.0;
  return result;
}

uint64_t sub_180C94()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + qword_3D9750));
}

void sub_180CA8()
{
  uint64_t v0;
  char v1;
  char *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  char v35;
  __int16 v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int16 v46;
  unsigned int v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  __int16 v71;
  char *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  unsigned __int16 v83;
  unsigned int v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  __int16 v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  unsigned __int8 v121;
  uint64_t v122;
  unsigned __int8 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  __int128 v148;
  uint64_t v149;
  unsigned __int8 v150;
  void *v151;
  uint64_t v152;
  char *v153;
  objc_super v154;
  objc_super v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __int16 v167;

  v1 = sub_17EF30();
  v2 = *(char **)(v0 + qword_3D96F0);
  v153 = v2;
  if ((v1 & 1) != 0)
  {
    if (qword_3CF4B0 != -1)
      swift_once(&qword_3CF4B0, sub_13FC60);
    v3 = *((_QWORD *)&xmmword_3FB460 + 1);
    v4 = (void *)xmmword_3FB460;
    v5 = *((_QWORD *)&xmmword_3FB470 + 1);
    v6 = xmmword_3FB470;
    v7 = qword_3FB480;
    v8 = word_3FB488;
    LODWORD(v9) = HIBYTE(word_3FB488);
    v144 = *(_QWORD *)algn_3FB438;
    v147 = (void *)qword_3FB430;
    v139 = qword_3FB448;
    v142 = qword_3FB440;
    v137 = qword_3FB450;
    v150 = qword_3FB458;
    sub_DDA0((void *)qword_3FB430, *(uint64_t *)algn_3FB438, qword_3FB440, qword_3FB448, qword_3FB450, qword_3FB458, (void *)xmmword_3FB460, *((uint64_t *)&xmmword_3FB460 + 1), xmmword_3FB470, *((uint64_t *)&xmmword_3FB470 + 1), qword_3FB480, word_3FB488, SHIBYTE(word_3FB488));
    if (qword_3CF4C0 != -1)
      swift_once(&qword_3CF4C0, sub_13FD20);
    v10 = qword_3FB4F8;
    v11 = qword_3FB508;
    v12 = qword_3FB518;
    v134 = HIBYTE(word_3FB548);
    v126 = qword_3FB530;
    v127 = (void *)xmmword_3FB520;
    v124 = qword_3FB540;
    v125 = qword_3FB538;
    v123 = word_3FB548;
    v122 = *((_QWORD *)&xmmword_3FB520 + 1);
    v129 = qword_3FB500;
    v131 = (void *)qword_3FB4F0;
    v128 = qword_3FB510;
    if ((_DWORD)v9)
    {
      sub_DDA0((void *)qword_3FB4F0, qword_3FB4F8, qword_3FB500, qword_3FB508, qword_3FB510, qword_3FB518, (void *)xmmword_3FB520, *((uint64_t *)&xmmword_3FB520 + 1), qword_3FB530, qword_3FB538, qword_3FB540, word_3FB548, SHIBYTE(word_3FB548));
      sub_DE20(v147, v144, v142, v139, v137, v150);
      sub_DE20(v4, v3, v6, v5, v7, v8);
      sub_DD48(v4, v3, v6, v5, v7, v8);
      if (!v134)
      {
LABEL_8:
        v112 = v9;
        v108 = v8;
        v101 = v5;
        v104 = v7;
        v97 = v6;
        v14 = v144;
        v13 = v147;
        v15 = v12;
        v17 = v139;
        v16 = v142;
        v18 = v137;
        sub_DCC8(v147, v144, v142, v139, v137, v150, v4, v3, v97, v101, v104, v108, v112);
        v20 = v129;
        v19 = v131;
        v21 = v11;
        v22 = v128;
        v23 = v15;
        goto LABEL_18;
      }
    }
    else
    {
      v109 = v8;
      v102 = v5;
      v105 = v7;
      v98 = v6;
      v117 = qword_3FB4F8;
      v55 = qword_3FB4F0;
      v114 = qword_3FB518;
      v115 = qword_3FB508;
      v56 = qword_3FB500;
      v57 = qword_3FB510;
      v58 = v4;
      v59 = v3;
      v120 = v4;
      v116 = v3;
      v60 = (void *)xmmword_3FB520;
      v121 = v8;
      v118 = v7;
      v119 = v5;
      v61 = v6;
      v62 = *((_QWORD *)&xmmword_3FB520 + 1);
      v9 = qword_3FB530;
      v63 = qword_3FB538;
      v64 = qword_3FB540;
      v65 = word_3FB548;
      sub_DDA0(v147, v144, v142, v139, v137, v150, v58, v59, v98, v102, v105, v109, SHIBYTE(v109));
      v110 = v65;
      v103 = v63;
      v106 = v64;
      v99 = v9;
      v66 = (void *)v55;
      v3 = v116;
      v10 = v117;
      v67 = v56;
      v11 = v115;
      v68 = v57;
      v12 = v114;
      v69 = v60;
      v4 = v120;
      LOBYTE(v9) = 0;
      v70 = v62;
      v6 = v61;
      v7 = v118;
      v5 = v119;
      v8 = v121;
      sub_DDA0(v66, v117, v67, v115, v68, v114, v69, v70, v99, v103, v106, v110, v134);
      if (!v134)
        goto LABEL_8;
    }
    sub_DD48(v131, v10, v129, v11, v128, v12);
    v113 = v9;
    v111 = v8;
    v107 = v7;
    v100 = v6;
    v14 = v144;
    v13 = v147;
    v17 = v139;
    v16 = v142;
    v18 = v137;
    sub_DCC8(v147, v144, v142, v139, v137, v150, v4, v3, v100, v5, v107, v111, v113);
    v20 = v126;
    v19 = v127;
    v10 = v122;
    v22 = v124;
    v21 = v125;
    v23 = v123;
LABEL_18:
    v71 = v23 | 0x100;
    v72 = &v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
    v73 = *(void **)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
    v74 = *(_QWORD *)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 8];
    v75 = *(_QWORD *)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 16];
    v76 = *(_QWORD *)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 24];
    v77 = *(_QWORD *)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 32];
    v78 = *(_QWORD *)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 40];
    v79 = *(void **)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 48];
    v80 = *(_QWORD *)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 56];
    v81 = *(_OWORD *)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 64];
    v82 = *(_QWORD *)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 80];
    v83 = *(_WORD *)&v153[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 88];
    *(_QWORD *)v72 = v13;
    *((_QWORD *)v72 + 1) = v14;
    *((_QWORD *)v72 + 2) = v16;
    *((_QWORD *)v72 + 3) = v17;
    *((_QWORD *)v72 + 4) = v18;
    *((_QWORD *)v72 + 5) = v150;
    *((_QWORD *)v72 + 6) = v19;
    *((_QWORD *)v72 + 7) = v10;
    *((_QWORD *)v72 + 8) = v20;
    *((_QWORD *)v72 + 9) = v21;
    *((_QWORD *)v72 + 10) = v22;
    *((_WORD *)v72 + 44) = v71;
    sub_DC94(v73, v74, v75, v76, v77, v78, v79, v80, v81, *((uint64_t *)&v81 + 1), v82, v83);
    v84 = *((unsigned __int16 *)v72 + 44);
    if (v84 >> 8 <= 0xFE)
    {
      v133 = *((_QWORD *)v72 + 9);
      v136 = *((_QWORD *)v72 + 10);
      v130 = *((_QWORD *)v72 + 8);
      v85 = *((_QWORD *)v72 + 5);
      v86 = (void *)*((_QWORD *)v72 + 6);
      v88 = *((_QWORD *)v72 + 3);
      v87 = *((_QWORD *)v72 + 4);
      v90 = *((_QWORD *)v72 + 1);
      v89 = *((_QWORD *)v72 + 2);
      v91 = *(void **)v72;
      v141 = *(void **)v72;
      v146 = v89;
      v92 = *((_QWORD *)v72 + 7);
      sub_DDA0(v91, v90, v89, v88, v87, v85, v86, v92, v130, v133, v136, v84, (unsigned __int16)(v84 & 0x1FF) >> 8);
      v93 = objc_msgSend(v153, "traitCollection");
      v156 = v91;
      v157 = v90;
      v158 = v89;
      v159 = v88;
      v160 = v87;
      v161 = v85;
      LOBYTE(v89) = v85;
      v162 = v86;
      v163 = v92;
      v94 = v92;
      v164 = v130;
      v165 = v133;
      v166 = v136;
      v167 = v84 & 0x1FF;
      v95 = sub_1D5728((uint64_t)&v156, v93);
      v96 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v95, 0.0);

      v154.receiver = v153;
      v154.super_class = (Class)type metadata accessor for DynamicTypeLabel();
      objc_msgSendSuper2(&v154, "setFont:", v96);

      sub_DC94(v141, v90, v146, v88, v87, v89, v86, v94, v130, v133, v136, v84);
    }
    return;
  }
  if (qword_3CF4C0 != -1)
    swift_once(&qword_3CF4C0, sub_13FD20);
  v24 = (void *)qword_3FB4F0;
  v25 = qword_3FB4F8;
  v26 = qword_3FB500;
  v27 = qword_3FB508;
  v28 = qword_3FB510;
  v29 = qword_3FB518;
  v30 = xmmword_3FB520;
  v31 = qword_3FB530;
  v32 = qword_3FB538;
  v33 = qword_3FB540;
  v34 = word_3FB548;
  v35 = HIBYTE(word_3FB548);
  if (HIBYTE(word_3FB548))
    v36 = 256;
  else
    v36 = 0;
  v37 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v38 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 8];
  v151 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v39 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 16];
  v40 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 24];
  v41 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 32];
  v42 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 40];
  v43 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 48];
  v44 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 56];
  v148 = *(_OWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 64];
  v45 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 80];
  v46 = *(_WORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 88];
  *(_QWORD *)v37 = qword_3FB4F0;
  *((_QWORD *)v37 + 1) = v25;
  *((_QWORD *)v37 + 2) = v26;
  *((_QWORD *)v37 + 3) = v27;
  *((_QWORD *)v37 + 4) = v28;
  *((_QWORD *)v37 + 5) = v29;
  *((_OWORD *)v37 + 3) = v30;
  *((_QWORD *)v37 + 8) = v31;
  *((_QWORD *)v37 + 9) = v32;
  *((_QWORD *)v37 + 10) = v33;
  *((_WORD *)v37 + 44) = v36 | v34;
  sub_DDA0(v24, v25, v26, v27, v28, v29, (void *)v30, *((uint64_t *)&v30 + 1), v31, v32, v33, v34, v35);
  sub_DC94(v151, v38, v39, v40, v41, v42, v43, v44, v148, *((uint64_t *)&v148 + 1), v45, v46);
  v47 = *((unsigned __int16 *)v37 + 44);
  if (v47 >> 8 <= 0xFE)
  {
    v135 = *((_QWORD *)v37 + 9);
    v138 = *((_QWORD *)v37 + 10);
    v132 = *((_QWORD *)v37 + 8);
    v49 = *((_QWORD *)v37 + 5);
    v48 = (void *)*((_QWORD *)v37 + 6);
    v50 = *((_QWORD *)v37 + 4);
    v143 = *(void **)v37;
    v145 = *((_QWORD *)v37 + 1);
    v149 = *((_QWORD *)v37 + 2);
    v152 = *((_QWORD *)v37 + 3);
    v140 = *((_QWORD *)v37 + 7);
    sub_DDA0(*(void **)v37, v145, v149, v152, v50, v49, v48, v140, v132, v135, v138, v47, (unsigned __int16)(v47 & 0x1FF) >> 8);
    v156 = v143;
    v157 = v145;
    v158 = v149;
    v159 = v152;
    v160 = v50;
    v161 = v49;
    v51 = v50;
    v162 = v48;
    v163 = v140;
    v164 = v132;
    v165 = v135;
    v166 = v138;
    v167 = v47 & 0x1FF;
    v52 = objc_msgSend(v153, "traitCollection");
    v53 = sub_1D5728((uint64_t)&v156, v52);
    v54 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v53, 0.0);

    v155.receiver = v153;
    v155.super_class = (Class)type metadata accessor for DynamicTypeLabel();
    objc_msgSendSuper2(&v155, "setFont:", v54);

    sub_DC94(v143, v145, v149, v152, v51, v49, v48, v140, v132, v135, v138, v47);
  }
}

void sub_181414(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  double v10;
  _QWORD v11[5];
  uint64_t v12;

  v2 = *(_QWORD *)&v1[qword_3D96A8];
  *(_QWORD *)&v1[qword_3D96A8] = a1;
  swift_retain(a1);
  swift_release(v2);
  if (v1[qword_3D96C0] != 8)
  {
    sub_180CA8();
    sub_17E248();
    objc_msgSend(*(id *)&v1[qword_3D96E8], "setHidden:", sub_17F5DC() & 1);
    v3 = *(void **)&v1[qword_3D96D8];
    if (qword_3CF758 != -1)
      swift_once(&qword_3CF758, sub_17D3AC);
    objc_msgSend(v3, "setLayoutMargins:", *(double *)&qword_3D9688, 16.0, *(double *)&qword_3D9688, 16.0);
    v4 = objc_opt_self(UIView);
    v5 = swift_allocObject(&unk_386B38, 24, 7);
    *(_QWORD *)(v5 + 16) = v1;
    v6 = swift_allocObject(&unk_386B60, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_181678;
    *(_QWORD *)(v6 + 24) = v5;
    v11[4] = sub_101EC;
    v12 = v6;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_920D4;
    v11[3] = &block_descriptor_37;
    v7 = _Block_copy(v11);
    v8 = v12;
    v9 = v1;
    swift_retain(v6);
    objc_msgSend((id)v4, "performWithoutAnimation:", v7, swift_release(v8).n128_f64[0]);
    _Block_release(v7);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v6, "", 128, 500, 40, 1);
    *(_QWORD *)&v10 = swift_release(v6).n128_u64[0];
    if ((v4 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v9, "setNeedsLayout", v10);
      objc_msgSend(v9, "layoutIfNeeded");
      swift_release(v5);
    }
  }
}

uint64_t sub_181620()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_181644(uint64_t a1)
{
  uint64_t v1;

  sub_49688(a1, v1);
}

void sub_18164C(uint64_t a1)
{
  uint64_t v1;

  sub_496F8(a1, v1);
}

uint64_t sub_181654()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_181678()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "invalidateIntrinsicContentSize");
}

uint64_t sub_181688()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_37(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1816B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1816C0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  double v9;
  uint64_t v10;
  void *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSString v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;

  v1 = v0;
  *(_QWORD *)&v0[qword_3D9698] = 0x4033000000000000;
  *(_QWORD *)&v0[qword_3D96A0] = 0x401C000000000000;
  *(_QWORD *)&v0[qword_3D96A8] = 0;
  v0[qword_3D96B0] = 1;
  v0[qword_3D96B8] = 1;
  v0[qword_3D96C0] = 8;
  *(_QWORD *)&v0[qword_3D96C8] = 0;
  v2 = qword_3D96D8;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v3, "setAxis:", 1);
  objc_msgSend(v3, "setDistribution:", 0);
  v4 = objc_msgSend(v3, "layer");
  objc_msgSend(v4, "setAllowsGroupBlending:", 0);

  objc_msgSend(v3, "setAlignment:", 0);
  objc_msgSend(v3, "setLayoutMarginsRelativeArrangement:", 1);
  *(_QWORD *)&v1[v2] = v3;
  v5 = qword_3D96E0;
  *(_QWORD *)&v1[v5] = sub_17E690();
  v6 = qword_3D96E8;
  v7 = type metadata accessor for SubscriptionNameAreaView();
  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "init");
  LODWORD(v9) = 1148846080;
  objc_msgSend(v8, "setContentCompressionResistancePriority:forAxis:", 1, v9);
  *(_QWORD *)&v1[v6] = v8;
  v10 = qword_3D96F0;
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF4C0 != -1)
    swift_once(&qword_3CF4C0, sub_13FD20);
  v20 = qword_3FB4F0;
  v21 = qword_3FB4F8;
  v22 = qword_3FB500;
  v23 = qword_3FB508;
  v24 = qword_3FB510;
  v25 = qword_3FB518;
  v26 = xmmword_3FB520;
  v27 = qword_3FB530;
  v28 = qword_3FB538;
  v29 = qword_3FB540;
  v30 = word_3FB548;
  sub_DDA0((void *)qword_3FB4F0, qword_3FB4F8, qword_3FB500, qword_3FB508, qword_3FB510, qword_3FB518, (void *)xmmword_3FB520, *((uint64_t *)&xmmword_3FB520 + 1), qword_3FB530, qword_3FB538, qword_3FB540, word_3FB548, SHIBYTE(word_3FB548));
  v11 = sub_A96AC((uint64_t)&v20, 2, 0, 1);
  objc_msgSend(v11, "setNumberOfLines:", 3);
  objc_msgSend(v11, "setLineBreakMode:", 4);
  LODWORD(v12) = 1148846080;
  objc_msgSend(v11, "setContentCompressionResistancePriority:forAxis:", 1, v12);
  *(_QWORD *)&v1[v10] = v11;
  *(_QWORD *)&v1[qword_3D96F8] = 0;
  *(_QWORD *)&v1[qword_3D9700] = 0;
  *(_QWORD *)&v1[qword_3D9708] = 0;
  *(_QWORD *)&v1[qword_3D9710] = 0;
  v1[qword_3D9718] = 0;
  *(_QWORD *)&v1[qword_3D9720] = 0;
  *(_QWORD *)&v1[qword_3D9728] = 0;
  v13 = qword_3D9730;
  v14 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v1[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");
  *(_QWORD *)&v1[qword_3D9738] = 0;
  *(_QWORD *)&v1[qword_3D9740] = 0;
  v15 = qword_3D9748;
  v16 = (void *)objc_opt_self(UIImage);
  v17 = String._bridgeToObjectiveC()();
  if (qword_3CF770 != -1)
    swift_once(&qword_3CF770, sub_17F440);
  v18 = objc_msgSend(v16, "__systemImageNamed:withConfiguration:", v17, qword_3D9690);

  v19 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v18);
  *(_QWORD *)&v1[v15] = v19;
  *(_QWORD *)&v1[qword_3D9750] = 0;

  v20 = 0;
  v21 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v21);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UpsellBannerView.swift", 46, 2, 659, 0);
  __break(1u);
}

uint64_t sub_181ADC(uint64_t a1)
{
  return sub_59FB4(a1, qword_3D9998, (uint64_t (*)(void))&static Glyph.HeaderButtons.suggestLess.getter);
}

uint64_t sub_181AF0(uint64_t a1)
{
  return sub_59FB4(a1, qword_3D99B0, (uint64_t (*)(void))&static Glyph.HeaderButtons.suggestedLess.getter);
}

id sub_181B04(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  __n128 v32;
  id v33;
  NSString v34;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  __int128 v39[2];

  v37 = a3 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v6);
  v8 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Glyph(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v36[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_adamID] = a1;
  v14 = type metadata accessor for InterestRepository(0, v11);
  v15 = v3;
  BaseObjectGraph.inject<A>(_:)(v39, v14, v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_interestRepository] = *(_QWORD *)&v39[0];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2B20);
  BaseObjectGraph.inject<A>(_:)(v39, v16, v16);
  sub_1B738(v39, (uint64_t)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_headerButtonTipProvider]);
  v17 = type metadata accessor for MetricsController(0);
  BaseObjectGraph.inject<A>(_:)(v39, v17, v17);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_metricsController] = *(_QWORD *)&v39[0];
  v18 = type metadata accessor for InterestStateController(0);
  BaseObjectGraph.inject<A>(_:)(v39, v18, v18);
  v38 = *(_QWORD *)&v39[0];
  v19 = InterestStateController.stateMachine(for:)(a1);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_stateMachine] = v19;
  v20 = swift_retain(v19);
  v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_currentState] = InterestStateMachine.currentState.getter(v20);

  if (qword_3CF778 != -1)
    swift_once(&qword_3CF778, sub_181ADC);
  v21 = __swift_project_value_buffer(v9, (uint64_t)qword_3D9998);
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
  v22(v13, v21, v9);
  v23 = type metadata accessor for Glyph.Color(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v13, (uint64_t)v8, 2, 0, v37, 0.0, 0.0, 0.0, 0.0);
  v25 = v24;
  if (*((_BYTE *)v24 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_currentState))
  {
    v22(v13, v21, v9);
    v26 = v25;
  }
  else
  {
    v27 = qword_3CF780;
    v28 = v24;
    if (v27 != -1)
      swift_once(&qword_3CF780, sub_181AF0);
    v29 = __swift_project_value_buffer(v9, (uint64_t)qword_3D99B0);
    v22(v13, v29, v9);
  }
  sub_1E2B60(v13);
  v30 = swift_allocObject(&unk_386C98, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, v25);
  v31 = v25;
  v32 = swift_retain(v30);
  InterestStateMachine.addStateTransitionObserver(_:action:)(v31, sub_182828, v30, v32);

  swift_release_n(v30, 2);
  objc_msgSend(v31, "addTarget:action:forControlEvents:", v31, "primaryActionTriggered", 64);
  v33 = v31;
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setAccessibilityIdentifier:", v34);
  swift_release(v38);
  swift_release(v19);

  swift_release(a2);
  return v33;
}

void sub_181EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  __n128 v8;
  _BYTE *v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  _BYTE v14[24];

  v3 = type metadata accessor for Glyph(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (_BYTE *)Strong;
    v10 = InterestStateMachine.currentState.getter(v8);
    v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_currentState] = v10;
    if (v10)
    {
      if (qword_3CF778 != -1)
        swift_once(&qword_3CF778, sub_181ADC);
      v11 = qword_3D9998;
    }
    else
    {
      if (qword_3CF780 != -1)
        swift_once(&qword_3CF780, sub_181AF0);
      v11 = qword_3D99B0;
    }
    v12 = __swift_project_value_buffer(v3, (uint64_t)v11);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v12, v3);
    sub_1E2B60(v6);

  }
}

void sub_18203C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v24 - v6;
  static Logger.interests.getter(v8);
  v9 = v0;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = (char *)&xmmword_3FBFF8 + 8;
  if (os_log_type_enabled(v10, v11))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v24[1] = v4;
    v15 = v14;
    *(_DWORD *)v13 = 136315394;
    v25 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_adamID];
    v26 = v14;
    v16 = sub_5AE80();
    v24[0] = v2;
    v17 = BinaryInteger.description.getter(&type metadata for UInt64, v16);
    v19 = v18;
    v25 = sub_37E78(v17, v18, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);

    v20 = swift_bridgeObjectRelease(v19);
    *(_WORD *)(v13 + 12) = 2080;
    v21 = InterestState.rawValue.getter(v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_currentState], v20);
    v23 = v22;
    v25 = sub_37E78(v21, v22, &v26);
    v12 = (_BYTE *)(&xmmword_3FBFF8 + 8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);

    swift_bridgeObjectRelease(v23);
    _os_log_impl(&dword_0, v10, v11, "User tapped on the Suggest Less button for interest with adamID: %s. The current state of the interest when the user tapped: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v24[0] + 8))(v7, v1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  }
  __asm { BR              X10 }
}

uint64_t sub_1822A0()
{
  uint64_t v0;

  return ((uint64_t (*)(_QWORD))InterestRepository.suggestLess(forAdamID:))(*(_QWORD *)(v0
                                                                                                + OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_adamID));
}

uint64_t sub_1825A8()
{
  uint64_t v0;
  int v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t countAndFlagsBits;
  unint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_currentState);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v1)
  {
    v3 = 0xD000000000000024;
    v9 = 0xE000000000000000;
    v4 = 0x8000000000311C70;
  }
  else
  {
    v9 = 0xE000000000000000;
    v4 = 0x8000000000311CA0;
    v3 = 0xD000000000000023;
  }
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v6 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, (NSBundle)v2, v5, *(Swift::String *)(&v9 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_182688()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.SuggestLessButton", 41, "init(frame:glyph:color:style:layout:autolayoutMode:)", 52, 0);
  __break(1u);
}

double sub_1826B4()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_interestRepository));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_headerButtonTipProvider));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_metricsController));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0
                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews17SuggestLessButton_stateMachine)).n128_u64[0];
  return result;
}

uint64_t sub_182758()
{
  return type metadata accessor for SuggestLessButton(0);
}

uint64_t type metadata accessor for SuggestLessButton(uint64_t a1)
{
  uint64_t result;

  result = qword_3D9A18;
  if (!qword_3D9A18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SuggestLessButton);
  return result;
}

uint64_t sub_18279C(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = "(";
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = &unk_2FAC30;
  return swift_updateClassMetadata2(a1, 256, 6, v2, a1 + 880);
}

uint64_t sub_182804()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_182828(uint64_t a1)
{
  uint64_t v1;

  sub_181EA4(a1, v1);
}

void sub_182830()
{
  qword_3D9A28 = 0x4020000000000000;
}

void sub_182840()
{
  qword_3D9A30 = 0x4010000000000000;
}

id sub_182850(uint64_t a1)
{
  return sub_E4E4(a1, &qword_3CF060, (void **)&qword_3FA8C0, (void **)&qword_3D9A38, (uint64_t)sub_E434);
}

id sub_182874(uint64_t a1)
{
  return sub_E4E4(a1, &qword_3CF068, (void **)&qword_3FA8C8, (void **)&qword_3D9A40, (uint64_t)sub_E448);
}

char *sub_182898(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  objc_super v27;

  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView__progress];
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor] = 0;
  v10 = qword_3CF788;
  v11 = v4;
  if (v10 != -1)
    swift_once(&qword_3CF788, sub_182830);
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight] = qword_3D9A28;
  if (qword_3CF790 != -1)
    swift_once(&qword_3CF790, sub_182840);
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius] = qword_3D9A30;
  if (qword_3CF798 != -1)
    swift_once(&qword_3CF798, sub_182850);
  v12 = (void *)qword_3D9A38;
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor] = qword_3D9A38;
  v13 = qword_3CF7A0;
  v14 = v12;
  if (v13 != -1)
    swift_once(&qword_3CF7A0, sub_182874);
  v15 = (void *)qword_3D9A40;
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor] = qword_3D9A40;
  v16 = objc_allocWithZone((Class)CAShapeLayer);
  v17 = v15;
  v18 = objc_msgSend(v16, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer] = v18;
  v19 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_foregroundShapeLayer] = v19;
  v20 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderShapeLayer] = v20;
  v21 = v20;
  objc_msgSend(v21, "setFillColor:", 0);

  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for EpisodePlayProgressView();
  v22 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v22, "setOpaque:", 0);
  v23 = objc_msgSend(v22, "layer");
  objc_msgSend(v23, "addSublayer:", *(_QWORD *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer]);

  v24 = objc_msgSend(v22, "layer");
  v25 = *(id *)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_foregroundShapeLayer];
  objc_msgSend(v24, "addSublayer:", v25);

  return v22;
}

double sub_182B94()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight, v3, 0, 0);
  return *(double *)v1;
}

id sub_182BD8(double a1)
{
  return sub_182C80(&OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight, a1);
}

uint64_t (*sub_182BE4(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight, a1, 33, 0);
  return sub_182C2C;
}

double sub_182C30()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius, v3, 0, 0);
  return *(double *)v1;
}

id sub_182C74(double a1)
{
  return sub_182C80(&OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius, a1);
}

id sub_182C80(_QWORD *a1, double a2)
{
  char *v2;
  double *v4;
  double v5;
  _BYTE v7[24];

  v4 = (double *)&v2[*a1];
  *(_QWORD *)&v5 = swift_beginAccess(v4, v7, 1, 0).n128_u64[0];
  *v4 = a2;
  return objc_msgSend(v2, "setNeedsLayout", v5);
}

uint64_t (*sub_182CDC(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius, a1, 33, 0);
  return sub_182C2C;
}

id sub_182D24(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 24), "setNeedsLayout");
  return result;
}

id sub_182D64()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor, v3, 0, 0);
  return *v1;
}

void sub_182DA8(void *a1)
{
  sub_182F28(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_foregroundShapeLayer);
}

void (*sub_182DBC(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_182E14;
}

void sub_182E14(_QWORD *a1, char a2)
{
  sub_183034(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_foregroundShapeLayer);
}

void sub_182E20(void **a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5, _QWORD *a6)
{
  void *v7;
  uint64_t v8;
  id *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  _BYTE v14[24];

  v7 = *a1;
  v8 = *a2;
  v9 = (id *)(*a2 + *a5);
  swift_beginAccess(v9, v14, 1, 0);
  v10 = *v9;
  *v9 = v7;
  v11 = v7;

  v12 = *(void **)(v8 + *a6);
  v13 = objc_msgSend(*v9, "CGColor");
  objc_msgSend(v12, "setFillColor:", v13);

}

id sub_182ED0()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor, v3, 0, 0);
  return *v1;
}

void sub_182F14(void *a1)
{
  sub_182F28(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer);
}

void sub_182F28(void *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  id *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v11[24];

  v6 = (id *)(v3 + *a2);
  swift_beginAccess(v6, v11, 1, 0);
  v7 = *v6;
  *v6 = a1;
  v8 = a1;

  v9 = *(void **)(v3 + *a3);
  v10 = objc_msgSend(*v6, "CGColor");
  objc_msgSend(v9, "setFillColor:", v10);

}

void (*sub_182FD0(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_183028;
}

void sub_183028(_QWORD *a1, char a2)
{
  sub_183034(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer);
}

void sub_183034(_QWORD *a1, char a2, _QWORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v5 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v6 = v5[3];
    v7 = *(void **)(v6 + *a3);
    v8 = objc_msgSend(*(id *)(v6 + v5[4]), "CGColor");
    objc_msgSend(v7, "setFillColor:", v8);

  }
  free(v5);
}

void *sub_1830B0()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1830FC(void *a1)
{
  sub_183C30(a1);

}

void (*sub_183120(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_183178;
}

void sub_183178(_QWORD *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v3 = *a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(v3 + 24);
    v4 = *(_QWORD *)(v3 + 32);
    v6 = *(void **)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderShapeLayer);
    v7 = *(void **)(v5 + v4);
    if (v7)
    {
      v8 = objc_msgSend(v7, "CGColor");
      v5 = *(_QWORD *)(v3 + 24);
      v4 = *(_QWORD *)(v3 + 32);
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v6, "setStrokeColor:", v8);

    if (*(_QWORD *)(v5 + v4))
    {
      v9 = objc_msgSend(*(id *)(v3 + 24), "layer");
      objc_msgSend(v9, "addSublayer:", v6);

    }
    else
    {
      objc_msgSend(v6, "removeFromSuperlayer");
    }
  }
  free((void *)v3);
}

double sub_183258(double a1)
{
  uint64_t v1;
  _BYTE v4[24];

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight, v4, 0, 0);
  return a1;
}

id sub_183300()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id *v6;
  double v7;
  id v8;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for EpisodePlayProgressView();
  objc_msgSendSuper2(&v13, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_foregroundShapeLayer];
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor], "CGColor", swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor], v12, 0, 0).n128_f64[0]);
  objc_msgSend(v1, "setFillColor:", v2);

  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer];
  v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor], "CGColor", swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor], v11, 0, 0).n128_f64[0]);
  objc_msgSend(v3, "setFillColor:", v4);

  v5 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderShapeLayer];
  v6 = (id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor];
  *(_QWORD *)&v7 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor], v10, 0, 0).n128_u64[0];
  if (*v6)
    v8 = objc_msgSend(*v6, "CGColor", v7);
  else
    v8 = 0;
  objc_msgSend(v5, "setStrokeColor:", v8);

  sub_1834A8();
  sub_18364C();
  return sub_18387C();
}

void sub_1834A8()
{
  char *v0;
  char *v1;
  double v2;
  id v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double x;
  double y;
  double width;
  double height;
  double *v12;
  id v13;
  id v14;
  uint64_t v15;
  char v16[24];
  CGRect v17;
  CGRect v18;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor];
  *(_QWORD *)&v2 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor], v16, 0, 0).n128_u64[0];
  if (*(_QWORD *)v1)
  {
    v3 = objc_msgSend(v0, "traitCollection", v2);
    objc_msgSend(v3, "displayScale");
    v5 = v4;

    v6 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderShapeLayer];
    v7 = 1.0 / v5;
    objc_msgSend(v0, "bounds");
    v18 = CGRectInset(v17, v7 * 0.5, v7 * 0.5);
    x = v18.origin.x;
    y = v18.origin.y;
    width = v18.size.width;
    height = v18.size.height;
    v12 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius];
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius], &v15, 0, 0);
    v13 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", x, y, width, height, *v12);
    v14 = objc_msgSend(v13, "CGPath");

    objc_msgSend(v6, "setPath:", v14);
    objc_msgSend(v6, "setLineWidth:", v7);
    objc_msgSend(v0, "bounds");
    objc_msgSend(v6, "setFrame:");
  }
}

id sub_18364C()
{
  char *v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  char *v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  double x;
  double y;
  double width;
  double height;
  void *v23;
  double *v24;
  id v25;
  id v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v37;
  char v38[24];
  CGRect v39;
  CGRect v40;

  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor];
  *(_QWORD *)&v10 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor], v38, 0, 0).n128_u64[0];
  v11 = 0.0;
  if (*(_QWORD *)v9)
  {
    v12 = objc_msgSend(v0, "traitCollection", v10);
    objc_msgSend(v12, "displayScale");
    v14 = v13;

    v15 = 1.0 / v14;
    if (*(_QWORD *)v9)
    {
      v16 = objc_msgSend(v0, "traitCollection");
      objc_msgSend(v16, "displayScale");
      v18 = v17;

      v11 = 1.0 / v18;
    }
  }
  else
  {
    v15 = 0.0;
  }
  v39.origin.x = v2;
  v39.origin.y = v4;
  v39.size.width = v6;
  v39.size.height = v8;
  v40 = CGRectInset(v39, v15, v11);
  x = v40.origin.x;
  y = v40.origin.y;
  width = v40.size.width;
  height = v40.size.height;
  v23 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer];
  v24 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius], &v37, 0, 0);
  v25 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", x, y, width, height, *v24);
  v26 = objc_msgSend(v25, "CGPath");

  objc_msgSend(v23, "setPath:", v26);
  v27 = objc_msgSend(v0, "layer");
  objc_msgSend(v27, "bounds");
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;

  return objc_msgSend(v23, "setFrame:", v29, v31, v33, v35);
}

id sub_18387C()
{
  _BYTE *v0;
  float *v1;
  double v2;
  float v3;
  double v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  _QWORD *v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double MinX;
  double MinY;
  double v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v48;
  _BYTE v49[24];
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;

  v1 = (float *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView__progress];
  v2 = 0.5;
  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView__progress + 4] & 1) == 0)
  {
    v3 = 0.0;
    if (*v1 >= 0.0)
      v3 = *v1;
    v4 = v3;
    if (*v1 < 1.0)
      v2 = v4;
    else
      v2 = 1.0;
  }
  objc_msgSend(v0, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor];
  *(_QWORD *)&v14 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor], v49, 0, 0).n128_u64[0];
  v15 = 0.0;
  if (*v13)
  {
    v16 = objc_msgSend(v0, "traitCollection", v14);
    objc_msgSend(v16, "displayScale");
    v18 = v17;

    v19 = 1.0 / v18;
    if (*v13)
    {
      v20 = objc_msgSend(v0, "traitCollection");
      objc_msgSend(v20, "displayScale");
      v22 = v21;

      v15 = 1.0 / v22;
    }
  }
  else
  {
    v19 = 0.0;
  }
  v50.origin.x = v6;
  v50.origin.y = v8;
  v50.size.width = v10;
  v50.size.height = v12;
  v51 = CGRectInset(v50, v19, v15);
  x = v51.origin.x;
  y = v51.origin.y;
  width = v51.size.width;
  height = v51.size.height;
  v27 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius], &v48, 0, 0);
  v28 = ceil(*v27 + *v27);
  v52.origin.x = x;
  v52.origin.y = y;
  v52.size.width = width;
  v52.size.height = height;
  v29 = CGRectGetWidth(v52) - v28;
  v53.origin.x = x;
  v53.origin.y = y;
  v53.size.width = width;
  v53.size.height = height;
  v30 = ceil(v2 * CGRectGetWidth(v53));
  if (v30 <= v28)
    v30 = v28;
  if (v29 >= v30)
    v31 = v30;
  else
    v31 = v29;
  v54.origin.x = x;
  v54.origin.y = y;
  v54.size.width = width;
  v54.size.height = height;
  MinX = CGRectGetMinX(v54);
  v55.origin.x = x;
  v55.origin.y = y;
  v55.size.width = width;
  v55.size.height = height;
  MinY = CGRectGetMinY(v55);
  v56.origin.x = x;
  v56.origin.y = y;
  v56.size.width = width;
  v56.size.height = height;
  v34 = CGRectGetHeight(v56);
  v35 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_foregroundShapeLayer];
  v36 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", 5, MinX, MinY, v31, v34, *v27, *v27);
  v37 = objc_msgSend(v36, "CGPath");

  objc_msgSend(v35, "setPath:", v37);
  v38 = objc_msgSend(v0, "layer");
  objc_msgSend(v38, "bounds");
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;

  return objc_msgSend(v35, "setFrame:", v40, v42, v44, v46);
}

id EpisodePlayProgressView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodePlayProgressView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_183C30(void *a1)
{
  char *v1;
  id *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  _BYTE v9[24];

  v3 = (id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor], v9, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderShapeLayer];
  if (*v3)
    v7 = objc_msgSend(*v3, "CGColor");
  else
    v7 = 0;
  objc_msgSend(v6, "setStrokeColor:", v7);

  if (*v3)
  {
    v8 = objc_msgSend(v1, "layer");
    objc_msgSend(v8, "addSublayer:", v6);

  }
  else
  {
    objc_msgSend(v6, "removeFromSuperlayer");
  }
}

void _s23ShelfKitCollectionViews23EpisodePlayProgressViewC5coderACSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView__progress];
  *(_DWORD *)v1 = 0;
  v1[4] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor] = 0;

  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001CLL, 0x8000000000311E40, "ShelfKitCollectionViews/EpisodePlayProgressView.swift", 53, 2, 41, 0);
  __break(1u);
}

uint64_t type metadata accessor for EpisodePlayProgressView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23EpisodePlayProgressView);
}

double sub_183DE4@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight, a2);
}

id sub_183DF0(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight);
}

double sub_183DFC@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius, a2);
}

double keypath_getTm@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  double *v4;
  double result;
  _BYTE v6[24];

  v4 = (double *)(*a1 + *a2);
  swift_beginAccess(v4, v6, 0, 0);
  result = *v4;
  *a3 = *(_QWORD *)v4;
  return result;
}

id sub_183E54(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_cornerRadius);
}

id keypath_setTm_0(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  double v8;
  _BYTE v10[24];

  v5 = *a1;
  v6 = *a2;
  v7 = (char *)*a2 + *a5;
  *(_QWORD *)&v8 = swift_beginAccess(v7, v10, 1, 0).n128_u64[0];
  *v7 = v5;
  return objc_msgSend(v6, "setNeedsLayout", v8);
}

id sub_183EC0@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor, a2);
}

void sub_183ECC(void **a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_182E20(a1, a2, a3, a4, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_progressColor, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_foregroundShapeLayer);
}

id sub_183EF0@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor, a2);
}

id keypath_get_3Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, void **a3@<X8>)
{
  void **v4;
  void *v5;
  _BYTE v7[24];

  v4 = (void **)(*a1 + *a2);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  *a3 = *v4;
  return v5;
}

void sub_183F48(void **a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_182E20(a1, a2, a3, a4, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor, &OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer);
}

id sub_183F6C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_borderColor);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_183FBC(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_183C30(v1);

}

uint64_t method lookup function for EpisodePlayProgressView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for EpisodePlayProgressView);
}

uint64_t dispatch thunk of EpisodePlayProgressView.barHeight.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of EpisodePlayProgressView.barHeight.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of EpisodePlayProgressView.barHeight.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of EpisodePlayProgressView.cornerRadius.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EpisodePlayProgressView.cornerRadius.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EpisodePlayProgressView.cornerRadius.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EpisodePlayProgressView.progressColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EpisodePlayProgressView.trackColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of EpisodePlayProgressView.borderColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of EpisodePlayProgressView.borderColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.size + (swift_isaMask & *v0)))();
}

void sub_18411C()
{
  qword_3FCAA8 = 0x4059000000000000;
}

void sub_18412C()
{
  qword_3FCAB0 = 0x4010000000000000;
}

char *sub_18413C()
{
  char *v0;
  id v1;
  Swift::String v2;
  Swift::String v3;
  void *object;
  NSString v5;
  id v6;
  char *v7;
  NSString v8;
  _QWORD v10[6];
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  Swift::String v16;

  type metadata accessor for DynamicTypeButton();
  if (qword_3CF4D8 != -1)
    swift_once(&qword_3CF4D8, sub_13FE40);
  v10[0] = qword_3FB610;
  v10[1] = qword_3FB618;
  v10[2] = qword_3FB620;
  v10[3] = qword_3FB628;
  v10[4] = qword_3FB630;
  v10[5] = qword_3FB638;
  v11 = xmmword_3FB640;
  v12 = qword_3FB650;
  v13 = qword_3FB658;
  v14 = qword_3FB660;
  v15 = word_3FB668;
  sub_DDA0((void *)qword_3FB610, qword_3FB618, qword_3FB620, qword_3FB628, qword_3FB630, qword_3FB638, (void *)xmmword_3FB640, *((uint64_t *)&xmmword_3FB640 + 1), qword_3FB650, qword_3FB658, qword_3FB660, word_3FB668, SHIBYTE(word_3FB668));
  v0 = sub_2D5CD4((uint64_t)v10);
  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16._countAndFlagsBits = 0xD000000000000034;
  v16._object = (void *)0x8000000000311F50;
  v2._object = (void *)0x8000000000311F30;
  v2._countAndFlagsBits = 0xD00000000000001DLL;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v16)._object;

  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setTitle:forState:", v5, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v0, "setTitleColor:forState:", v6, 0);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = v0;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setAccessibilityIdentifier:", v8);

  return v7;
}

char *sub_184354(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  double v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  double leading;
  double bottom;
  double trailing;
  char *v49;
  id v50;
  uint64_t v51;
  void *v52;
  Class isa;
  objc_super v55;
  char v56[24];

  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_fadeLength;
  v10 = qword_3CF7A8;
  v11 = v4;
  if (v10 != -1)
    swift_once(&qword_3CF7A8, sub_18411C);
  *(_QWORD *)&v4[v9] = qword_3FCAA8;
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_safetyPadding;
  if (qword_3CF7B0 != -1)
    swift_once(&qword_3CF7B0, sub_18412C);
  *(_QWORD *)&v11[v12] = qword_3FCAB0;
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_moreButton;
  *(_QWORD *)&v11[v13] = sub_18413C();
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel;
  v15 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v15, "setNumberOfLines:", 3);
  v16 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v17 = (void *)static UIFont.subhead.getter(v16);
  objc_msgSend(v15, "setFont:", v17);

  objc_msgSend(v15, "setLineBreakMode:", 4);
  *(_QWORD *)&v11[v14] = v15;
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionMask;
  v19 = type metadata accessor for CornerFadeView();
  v20 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v19)), "init");
  v21 = qword_3FCAA8;
  v22 = (uint64_t *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength];
  *(_QWORD *)&v23 = swift_beginAccess(&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength], v56, 1, 0).n128_u64[0];
  *v22 = v21;
  objc_msgSend(v20, "setNeedsDisplay", v23);
  *(_QWORD *)&v11[v18] = v20;

  v55.receiver = v11;
  v55.super_class = (Class)type metadata accessor for FadingDescriptionLabel();
  v24 = (char *)objc_msgSendSuper2(&v55, "initWithFrame:", a1, a2, a3, a4);
  v25 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel;
  v26 = *(void **)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel];
  v27 = *(_QWORD *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionMask];
  v28 = v24;
  objc_msgSend(v26, "setMaskView:", v27);
  objc_msgSend(v28, "addSubview:", v26);
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_moreButton;
  v30 = *(void **)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_moreButton];
  objc_msgSend(v28, "addSubview:", v30);
  objc_msgSend(v28, "bringSubviewToFront:", v30);
  objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v31 = objc_msgSend(v30, "lastBaselineAnchor");
  v32 = objc_msgSend(v26, "lastBaselineAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
  v36 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v35 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v36 >= v35 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
  v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v33);
  specialized Array._endMutation()(v37);
  v38 = objc_msgSend(*(id *)&v28[v29], "trailingAnchor");
  v39 = objc_msgSend(*(id *)&v24[v25], "trailingAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
  v43 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v42 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v43 >= v42 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
  v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v40);
  specialized Array._endMutation()(v44);
  v45 = *(void **)&v24[v25];
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v49 = v28;
  v50 = v45;
  v51 = UIView.fullSizeSubviewConstraints(_:insets:)(NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  sub_1F6D9C(v51);
  v52 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v52, "activateConstraints:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return v49;
}

id sub_18488C()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double Width;
  uint64_t v10;
  uint64_t inited;
  NSString *v12;
  id result;
  unint64_t v14;
  double Height;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  NSString *v23;
  unint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat MaxX;
  CGFloat MaxY;
  __n128 v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  void *v54;
  double v55;
  double v56;
  void *v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double MinY;
  CGFloat v63;
  double v64;
  double v65;
  double v66;
  double *v67;
  unint64_t v68;
  char *v69;
  __int128 v70;
  char v71[24];
  char v72[64];
  _BYTE v73[24];
  char v74[48];
  char v75[48];
  objc_super v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;

  v76.receiver = v0;
  v76.super_class = (Class)type metadata accessor for FadingDescriptionLabel();
  objc_msgSendSuper2(&v76, "layoutSubviews");
  v1 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionMask];
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel];
  objc_msgSend(v2, "bounds");
  objc_msgSend(v1, "setFrame:");
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_moreButton];
  v4 = objc_msgSend(v2, "text");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  objc_msgSend(v2, "bounds");
  Width = CGRectGetWidth(v77);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
  inited = swift_initStackObject(v10, v75);
  *(_OWORD *)(inited + 16) = xmmword_2F03C0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v12 = NSFontAttributeName;
  result = objc_msgSend(v2, "font");
  if (!result)
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  *(_QWORD *)(inited + 40) = result;
  v14 = sub_D47A0(inited);
  v78.origin.x = sub_21A7CC(v6, v8, 1uLL, v14, 0, Width, 1.79769313e308);
  Height = CGRectGetHeight(v78);
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v2, "bounds", swift_bridgeObjectRelease(v8).n128_f64[0]);
  objc_msgSend(v3, "setHidden:", CGRectGetHeight(v79) >= Height);
  v16 = objc_msgSend(v2, "text");
  if (v16)
  {
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  objc_msgSend(v2, "bounds", 1, 2);
  v21 = CGRectGetWidth(v80);
  v22 = swift_initStackObject(v10, v74);
  *(_OWORD *)(v22 + 16) = v70;
  *(_QWORD *)(v22 + 32) = v12;
  v23 = v12;
  result = objc_msgSend(v2, "font");
  if (!result)
    goto LABEL_20;
  *(_QWORD *)(v22 + 40) = result;
  v24 = sub_D47A0(v22);
  v81.origin.x = sub_21A7CC(v18, v20, 1uLL, v24, 0, v21, 1.79769313e308);
  v25 = CGRectGetHeight(v81);
  swift_bridgeObjectRelease(v24);
  objc_msgSend(v2, "bounds", swift_bridgeObjectRelease(v20).n128_f64[0]);
  if (CGRectGetHeight(v82) >= v25)
  {
    v69 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize];
    v68 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize], v73, 1, 0).n128_u64[0];
    *(_QWORD *)v69 = 0;
    *((_QWORD *)v69 + 1) = 0;
    return objc_msgSend(v1, "setNeedsDisplay", *(double *)&v68);
  }
  objc_msgSend(v3, "bounds");
  objc_msgSend(v3, "convertRect:toCoordinateSpace:", v2);
  v27 = v26;
  v29 = v28;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D42D8);
  v31 = swift_initStackObject(v30, v72);
  *(_OWORD *)(v31 + 16) = xmmword_2EFA20;
  *(_QWORD *)(v31 + 32) = v27;
  *(_QWORD *)(v31 + 40) = v29;
  v32 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment];
  *(_QWORD *)&v33 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment], v73, 0, 0).n128_u64[0];
  LODWORD(v32) = *v32;
  objc_msgSend(v1, "bounds", v33);
  v38 = v34;
  v39 = v35;
  v40 = v36;
  v41 = v37;
  MaxX = v34;
  if ((_DWORD)v32 == 1)
    MaxX = CGRectGetMaxX(*(CGRect *)&v34);
  v83.origin.x = v38;
  v83.origin.y = v39;
  v83.size.width = v40;
  v83.size.height = v41;
  MaxY = CGRectGetMaxY(v83);
  *(CGFloat *)(v31 + 48) = MaxX;
  *(CGFloat *)(v31 + 56) = MaxY;
  v44.n128_f64[0] = _sSo6CGRectV23ShelfKitCollectionViewsE10containing6pointsABSo7CGPointVd_tFZ_0((double *)v31);
  v45 = v44.n128_f64[0];
  v47 = v46;
  v49 = v48;
  v51 = v50;
  swift_setDeallocating(v31, v44);
  objc_msgSend(v2, "lastBaselineMaxY");
  v53 = v52;
  result = objc_msgSend(v2, "font");
  if (!result)
    goto LABEL_21;
  v54 = result;
  objc_msgSend(result, "descender");
  v56 = v55;

  result = objc_msgSend(v2, "font");
  if (result)
  {
    v57 = result;
    v58 = v53 - v56;
    objc_msgSend(result, "lineHeight");
    v60 = v59;

    v61 = ceil(v58 - v60);
    v84.origin.x = v45;
    v84.origin.y = v47;
    v84.size.width = v49;
    v84.size.height = v51;
    MinY = CGRectGetMinY(v84);
    if (v61 <= MinY)
      v61 = MinY;
    v85.origin.x = v45;
    v85.origin.y = v47;
    v85.size.width = v49;
    v85.size.height = v51;
    v63 = CGRectGetMinY(v85);
    v64 = UIEdgeInsetsInsetRect_1(v45, v47, v49, v51, v61 - v63, 0.0, 0.0, 0.0)
        + *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_safetyPadding];
    v66 = v65 + 0.0;
    v67 = (double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize];
    v68 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize], v71, 1, 0).n128_u64[0];
    *v67 = v64;
    v67[1] = v66;
    return objc_msgSend(v1, "setNeedsDisplay", *(double *)&v68);
  }
LABEL_22:
  __break(1u);
  return result;
}

id sub_184E94()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FadingDescriptionLabel();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FadingDescriptionLabel()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews22FadingDescriptionLabel);
}

double UIEdgeInsetsInsetRect_1(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return a3 - (a6 + a8);
}

void sub_184F40()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  double v14;
  char v15[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_fadeLength;
  if (qword_3CF7A8 != -1)
    swift_once(&qword_3CF7A8, sub_18411C);
  *(_QWORD *)&v1[v2] = qword_3FCAA8;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_safetyPadding;
  if (qword_3CF7B0 != -1)
    swift_once(&qword_3CF7B0, sub_18412C);
  *(_QWORD *)&v1[v3] = qword_3FCAB0;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_moreButton;
  *(_QWORD *)&v1[v4] = sub_18413C();
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel;
  v6 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v6, "setNumberOfLines:", 3);
  v7 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v8 = (void *)static UIFont.subhead.getter(v7);
  objc_msgSend(v6, "setFont:", v8);

  objc_msgSend(v6, "setLineBreakMode:", 4);
  *(_QWORD *)&v1[v5] = v6;
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionMask;
  v10 = type metadata accessor for CornerFadeView();
  v11 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10)), "init");
  v12 = qword_3FCAA8;
  v13 = (uint64_t *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength];
  *(_QWORD *)&v14 = swift_beginAccess(&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength], v15, 1, 0).n128_u64[0];
  *v13 = v12;
  objc_msgSend(v11, "setNeedsDisplay", v14);
  *(_QWORD *)&v1[v9] = v11;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/FadingDescriptionLabel.swift", 52, 2, 88, 0);
  __break(1u);
}

uint64_t sub_185120(uint64_t a1)
{
  return sub_185150(20.0, a1, qword_3FCAB8);
}

uint64_t sub_185130(uint64_t a1)
{
  return sub_185150(3.0, a1, qword_3FCAD0);
}

uint64_t sub_185140(uint64_t a1)
{
  return sub_185150(8.0, a1, qword_3FCAE8);
}

uint64_t sub_185150(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *boxed_opaque_existential_0;
  _QWORD v16[5];

  v5 = type metadata accessor for FontSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StaticDimension(0, v7);
  __swift_allocate_value_buffer(v10, a3);
  __swift_project_value_buffer(v10, (uint64_t)a3);
  if (qword_3CF7D0 != -1)
    swift_once(&qword_3CF7D0, sub_1852A4);
  v11 = type metadata accessor for FontUseCase(0);
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_3FCB00);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v12, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for FontSource.useCase(_:), v5);
  v16[3] = v5;
  v16[4] = &protocol witness table for FontSource;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(boxed_opaque_existential_0, v9, v5);
  StaticDimension.init(_:scaledLike:)(v16, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

UIFontTextStyle sub_1852A4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for FontUseCase(0);
  __swift_allocate_value_buffer(v0, qword_3FCB00);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3FCB00);
  *(_QWORD *)v1 = UIFontTextStyleFootnote;
  *(_DWORD *)(v1 + 8) = 0;
  (*(void (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
  return UIFontTextStyleFootnote;
}

id sub_185324()
{
  if (qword_3CF578 != -1)
    swift_once(&qword_3CF578, sub_14074C);
  qword_3FCB18 = qword_3FBD90;
  unk_3FCB20 = *(_QWORD *)algn_3FBD98;
  qword_3FCB28 = qword_3FBDA0;
  unk_3FCB30 = qword_3FBDA8;
  qword_3FCB38 = qword_3FBDB0;
  unk_3FCB40 = *(_QWORD *)byte_3FBDB8;
  qword_3FCB48 = qword_3FBDC0;
  unk_3FCB50 = qword_3FBDC8;
  qword_3FCB58 = qword_3FBDD0;
  unk_3FCB60 = qword_3FBDD8;
  qword_3FCB68 = qword_3FBDE0;
  word_3FCB70 = word_3FBDE8;
  return sub_DDA0((void *)qword_3FBD90, *(uint64_t *)algn_3FBD98, qword_3FBDA0, qword_3FBDA8, qword_3FBDB0, byte_3FBDB8[0], (void *)qword_3FBDC0, qword_3FBDC8, qword_3FBDD0, qword_3FBDD8, qword_3FBDE0, word_3FBDE8, SHIBYTE(word_3FBDE8));
}

uint64_t sub_1853C8(uint64_t a1)
{
  return sub_1853F0(a1, qword_3FCB78, &enum case for Separator.Position.top(_:));
}

uint64_t sub_1853DC(uint64_t a1)
{
  return sub_1853F0(a1, qword_3FCB90, (unsigned int *)&enum case for Separator.Position.bottom(_:));
}

uint64_t sub_1853F0(uint64_t a1, uint64_t *a2, unsigned int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v13[5];

  v5 = type metadata accessor for Separator.Position(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Separator(0, v9);
  __swift_allocate_value_buffer(v10, a2);
  __swift_project_value_buffer(v10, (uint64_t)a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *a3, v5);
  v13[3] = type metadata accessor for ZeroDimension(0);
  v13[4] = &protocol witness table for ZeroDimension;
  __swift_allocate_boxed_opaque_existential_0(v13);
  static ZeroDimension.zero.getter();
  return Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v8, v13, 0.0, 0.0);
}

void sub_1854D4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = type metadata accessor for StaticDimension(0, a1);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_titleLabel);
  if (v6)
  {
    v7 = qword_3CF7B8;
    v8 = v6;
    if (v7 != -1)
      swift_once(&qword_3CF7B8, sub_185120);
    v9 = __swift_project_value_buffer(v2, (uint64_t)qword_3FCAB8);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
    v10 = objc_msgSend(v8, "traitCollection");
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v11 = type metadata accessor for FloatingPointRoundingRule(0);
    v12 = __swift_project_value_buffer(v11, (uint64_t)qword_3FCFB0);
    StaticDimension.value(compatibleWith:rounded:)(v10, v12);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v8, "firstBaselineFromTop");

  }
}

void sub_185648()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  id v16;
  char v17;
  uint64_t v18;
  NSString *v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  void *v23;
  NSString *v24;
  id v25;
  char v26;
  NSString *v27;
  id v28;
  id v29;
  char v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  NSString v36;
  Class isa;
  NSString v38;
  char **v39;
  uint64_t v40;
  id v41;
  _OWORD v42[2];
  __int128 v43;
  uint64_t v44;
  char v45[72];
  unint64_t v46;

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_titleLabel];
  if (!v1)
    return;
  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
  inited = swift_initStackObject(v3, v45);
  *(_OWORD *)(inited + 16) = xmmword_2F03C0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v5 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v6 = qword_3CF7D0;
  v7 = v1;
  v8 = NSFontAttributeName;
  if (v6 != -1)
    swift_once(&qword_3CF7D0, sub_1852A4);
  v9 = type metadata accessor for FontUseCase(0);
  v10 = __swift_project_value_buffer(v9, (uint64_t)qword_3FCB00);
  v11 = objc_msgSend(v2, "traitCollection");
  v12 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v10, v11);

  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 40) = v12;
  v13 = sub_D4784(inited);
  v14 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  v15 = v14;
  if (v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_isCentered] == 1)
  {
    objc_msgSend(v14, "setAlignment:", 1);
  }
  else
  {
    v16 = objc_msgSend(v2, "traitCollection");
    v17 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v17 & 1) != 0)
      v18 = 2;
    else
      v18 = 0;
    objc_msgSend(v15, "setAlignment:", v18);
  }
  v44 = sub_E710(0, &qword_3D4E10, NSMutableParagraphStyle_ptr);
  *(_QWORD *)&v43 = v15;
  sub_1D65C(&v43, v42);
  v19 = NSParagraphStyleAttributeName;
  v20 = v15;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
  sub_15EB78(v42, v19, isUniquelyReferenced_nonNull_native);
  v22 = v13;
  v46 = v13;

  swift_bridgeObjectRelease(0x8000000000000000);
  if (v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_displayType])
  {
    v23 = (void *)objc_opt_self(UIColor);
    v24 = NSForegroundColorAttributeName;
    v25 = objc_msgSend(v23, "secondaryLabelColor");
    v44 = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
    *(_QWORD *)&v43 = v25;
    sub_1D65C(&v43, v42);
    v26 = swift_isUniquelyReferenced_nonNull_native(v13);
    sub_15EB78(v42, v24, v26);
    v46 = v13;

  }
  else
  {
    v27 = NSForegroundColorAttributeName;
    v28 = objc_msgSend(v2, "tintColor");
    if (!v28)
    {
      sub_186E64((uint64_t)v27, v42);

      sub_1FE78((uint64_t)v42);
      goto LABEL_15;
    }
    v29 = v28;
    v44 = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
    *(_QWORD *)&v43 = v29;
    sub_1D65C(&v43, v42);
    v30 = swift_isUniquelyReferenced_nonNull_native(v22);
    sub_15EB78(v42, v27, v30);
    v46 = v22;

  }
  swift_bridgeObjectRelease(0x8000000000000000);
LABEL_15:
  v31 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_text];
  v32 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_text + 8];
  if (v32)
  {
    v33 = v46;
    v34 = objc_allocWithZone((Class)NSAttributedString);
    v35 = v7;
    swift_bridgeObjectRetain(v32);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    type metadata accessor for Key(0);
    sub_152348();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v38 = objc_msgSend(v34, "initWithString:attributes:", v36, isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

    v39 = &selRef_setAttributedText_;
  }
  else
  {
    swift_bridgeObjectRelease(v46);
    v40 = *((_QWORD *)v31 + 1);
    v41 = v7;
    if (v40)
    {
      swift_bridgeObjectRetain(v40);
      v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v40);
    }
    else
    {
      v38 = 0;
    }
    v39 = &selRef_setText_;
  }
  objc_msgSend(v7, *v39, v38);

  objc_msgSend(v2, "setNeedsLayout");
}

void sub_185B00(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __n128 v11;
  void **v12;
  id v13;
  id v14;
  char *v15;
  char v16;
  void *v17;
  id v18;
  void *v19;
  char *v20;
  void *v21;
  id v22;
  char v23;
  id v24;
  id v25;
  _BYTE v27[24];

  v3 = v2;
  v4 = type metadata accessor for Separator(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasTopSeparator] & 1) == 0)
  {
    v12 = (void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_topSeparatorView];
    v13 = *(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_topSeparatorView];
LABEL_10:
    if (!v13)
    {
      v9 = 0;
      goto LABEL_14;
    }
    v18 = v13;
    v9 = 0;
    v17 = v13;
LABEL_12:
    objc_msgSend(v17, "removeFromSuperview");
    goto LABEL_14;
  }
  if (qword_3CF7E0 != -1)
    swift_once(&qword_3CF7E0, sub_1853C8);
  v8 = __swift_project_value_buffer(v4, (uint64_t)qword_3FCB78);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorSupplementaryView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_separator];
  v11 = swift_beginAccess(&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_separator], v27, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v5 + 40))(v10, v7, v4, v11);
  swift_endAccess(v27);
  v12 = (void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_topSeparatorView];
  v13 = *(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_topSeparatorView];
  if (!v9)
    goto LABEL_10;
  if (v13)
  {
    v14 = v13;
    v15 = v9;
    v16 = static NSObject.== infix(_:_:)(v15, v14);

    if ((v16 & 1) == 0)
    {
      v17 = *v12;
      if (*v12)
        goto LABEL_12;
    }
  }
LABEL_14:
  v19 = *v12;
  *v12 = v9;
  v20 = v9;

  v21 = *v12;
  if (v13)
  {
    if (!v21)
      goto LABEL_22;
    type metadata accessor for SeparatorSupplementaryView(0);
    v13 = v13;
    v22 = v21;
    v23 = static NSObject.== infix(_:_:)(v13, v22);

    if ((v23 & 1) != 0)
      goto LABEL_22;
    v21 = *v12;
    if (!*v12)
      goto LABEL_22;
    goto LABEL_21;
  }
  if (v21)
  {
    v13 = 0;
LABEL_21:
    v24 = v21;
    v25 = objc_msgSend(v3, "contentView");
    objc_msgSend(v25, "addSubview:", v24);

    v13 = v24;
    v20 = (char *)v25;
LABEL_22:

  }
}

void sub_185D80(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __n128 v11;
  void **v12;
  id v13;
  id v14;
  char *v15;
  char v16;
  void *v17;
  id v18;
  void *v19;
  char *v20;
  void *v21;
  id v22;
  char v23;
  id v24;
  id v25;
  _BYTE v27[24];

  v3 = v2;
  v4 = type metadata accessor for Separator(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasBottomSeparator] & 1) == 0)
  {
    v12 = (void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_bottomSeparatorView];
    v13 = *(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_bottomSeparatorView];
LABEL_10:
    if (!v13)
    {
      v9 = 0;
      goto LABEL_14;
    }
    v18 = v13;
    v9 = 0;
    v17 = v13;
LABEL_12:
    objc_msgSend(v17, "removeFromSuperview");
    goto LABEL_14;
  }
  if (qword_3CF7E8 != -1)
    swift_once(&qword_3CF7E8, sub_1853DC);
  v8 = __swift_project_value_buffer(v4, (uint64_t)qword_3FCB90);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorSupplementaryView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_separator];
  v11 = swift_beginAccess(&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_separator], v27, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v5 + 40))(v10, v7, v4, v11);
  swift_endAccess(v27);
  v12 = (void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_bottomSeparatorView];
  v13 = *(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_bottomSeparatorView];
  if (!v9)
    goto LABEL_10;
  if (v13)
  {
    v14 = v13;
    v15 = v9;
    v16 = static NSObject.== infix(_:_:)(v15, v14);

    if ((v16 & 1) == 0)
    {
      v17 = *v12;
      if (*v12)
        goto LABEL_12;
    }
  }
LABEL_14:
  v19 = *v12;
  *v12 = v9;
  v20 = v9;

  v21 = *v12;
  if (v13)
  {
    if (!v21)
      goto LABEL_22;
    type metadata accessor for SeparatorSupplementaryView(0);
    v13 = v13;
    v22 = v21;
    v23 = static NSObject.== infix(_:_:)(v13, v22);

    if ((v23 & 1) != 0)
      goto LABEL_22;
    v21 = *v12;
    if (!*v12)
      goto LABEL_22;
    goto LABEL_21;
  }
  if (v21)
  {
    v13 = 0;
LABEL_21:
    v24 = v21;
    v25 = objc_msgSend(v3, "contentView");
    objc_msgSend(v25, "addSubview:", v24);

    v13 = v24;
    v20 = (char *)v25;
LABEL_22:

  }
}

void sub_186110(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  char *v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  char *v19;
  id v20;
  objc_super v21;
  _QWORD v22[11];
  __int16 v23;

  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_tapGestureRecognizer] = 0;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_isCentered] = 0;
  v4 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_text];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_buttonAction];
  *v5 = 0;
  v5[1] = 0;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_displayType] = 1;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasTopSeparator] = 0;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasBottomSeparator] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_topSeparatorView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_bottomSeparatorView] = 0;
  type metadata accessor for DynamicTypeLabel();
  v6 = qword_3CF7D8;
  v7 = v2;
  if (v6 != -1)
    swift_once(&qword_3CF7D8, sub_185324);
  v22[0] = qword_3FCB18;
  v22[1] = qword_3FCB20;
  v22[2] = qword_3FCB28;
  v22[3] = qword_3FCB30;
  v22[4] = qword_3FCB38;
  v22[5] = *(_QWORD *)byte_3FCB40;
  v22[6] = qword_3FCB48;
  v22[7] = qword_3FCB50;
  v22[8] = qword_3FCB58;
  v22[9] = qword_3FCB60;
  v22[10] = qword_3FCB68;
  v23 = word_3FCB70;
  sub_DDA0((void *)qword_3FCB18, qword_3FCB20, qword_3FCB28, qword_3FCB30, qword_3FCB38, byte_3FCB40[0], (void *)qword_3FCB48, qword_3FCB50, qword_3FCB58, qword_3FCB60, qword_3FCB68, word_3FCB70, SHIBYTE(word_3FCB70));
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_titleLabel] = sub_A96AC((uint64_t)v22, 0, 0, 1);

  if (a2)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v8 = 0;
  }
  v21.receiver = v7;
  v21.super_class = (Class)type metadata accessor for AccountSectionSupplementaryView();
  v9 = (char *)objc_msgSendSuper2(&v21, "initWithReuseIdentifier:", v8);

  v10 = *(void **)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_titleLabel];
  if (!v10)
  {
    v17 = v9;
    goto LABEL_10;
  }
  v11 = v9;
  v12 = v10;
  v13 = objc_msgSend(v11, "contentView");
  objc_msgSend(v13, "addSubview:", v12);

  v14 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v11, "buttonTapped");
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_tapGestureRecognizer;
  v16 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_tapGestureRecognizer];
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_tapGestureRecognizer] = v14;

  if (*(_QWORD *)&v11[v15])
  {
    objc_msgSend(v12, "addGestureRecognizer:");
    objc_msgSend(v12, "setUserInteractionEnabled:", 1);

LABEL_10:
    v18 = objc_allocWithZone((Class)UIView);
    v19 = v9;
    v20 = objc_msgSend(v18, "init");
    objc_msgSend(v19, "setBackgroundView:", v20);

    return;
  }
  __break(1u);
}

void sub_18643C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[5];
  uint64_t v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for AccountSectionSupplementaryView();
  objc_msgSendSuper2(&v10, "layoutSubviews");
  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_386DB0, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_386DD8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1876B0;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_101EC;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_920D4;
  v8[3] = &block_descriptor_38;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 143, 187, 40, 1);
  swift_release(v2);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_186588(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  __n128 v51;
  id v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  void *v64;
  char *v65;
  double MinY;
  double Width;
  double Height;
  char *v69;
  __n128 v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  void *v78;
  char *v79;
  double v80;
  double v81;
  double v82;
  char *v83;
  __n128 v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  _BYTE v92[24];
  char v93[24];
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;

  v3 = type metadata accessor for Separator(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v92[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_titleLabel];
  if (v7)
  {
    v8 = v7;
    objc_msgSend(a1, "bounds");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;
    objc_msgSend(a1, "layoutMargins");
    UIEdgeInsetsInsetRect(v10, v12, v14, v16, v17, v18);
    objc_msgSend(v8, "sizeThatFits:", v19, v20);
    objc_msgSend(a1, "bounds");
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;
    objc_msgSend(a1, "layoutMargins");
    v94.origin.x = UIEdgeInsetsInsetRect(v22, v24, v26, v28, v29, v30);
    CGRectGetWidth(v94);
    objc_msgSend(a1, "bounds");
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v38 = v37;
    objc_msgSend(a1, "layoutMargins");
    v95.origin.x = UIEdgeInsetsInsetRect(v32, v34, v36, v38, v39, v40);
    CGRectGetMinX(v95);
    objc_msgSend(a1, "bounds");
    v42 = v41;
    v44 = v43;
    v46 = v45;
    v48 = v47;
    objc_msgSend(a1, "layoutMargins");
    v96.origin.x = UIEdgeInsetsInsetRect(v42, v44, v46, v48, v49, v50);
    v51.n128_f64[0] = CGRectGetMinY(v96);
    sub_1854D4(v51);
    v52 = v8;
    objc_msgSend(a1, "bounds");
    v54 = v53;
    v56 = v55;
    v58 = v57;
    v60 = v59;
    objc_msgSend(a1, "layoutMargins");
    v63 = UIEdgeInsetsInsetRect(v54, v56, v58, v60, v61, v62);
    CGRect.withLayoutDirection(in:relativeTo:)(a1, v63);
    objc_msgSend(v52, "setFrame:");

  }
  v64 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_topSeparatorView];
  if (v64)
  {
    v65 = v64;
    objc_msgSend(a1, "bounds");
    MinY = CGRectGetMinY(v97);
    objc_msgSend(a1, "bounds");
    Width = CGRectGetWidth(v98);
    objc_msgSend(a1, "bounds");
    Height = CGRectGetHeight(v99);
    v69 = &v65[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_separator];
    v70 = swift_beginAccess(&v65[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_separator], v92, 0, 0);
    (*(void (**)(_BYTE *, char *, uint64_t, __n128))(v4 + 16))(v6, v69, v3, v70);
    v71 = Separator.frame(forBoundingRect:in:)(v65, 0.0, MinY, Width, Height);
    v73 = v72;
    v75 = v74;
    v77 = v76;
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    objc_msgSend(v65, "setFrame:", v71, v73, v75, v77);

  }
  v78 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_bottomSeparatorView];
  if (v78)
  {
    v79 = v78;
    objc_msgSend(a1, "bounds");
    v80 = CGRectGetMinY(v100);
    objc_msgSend(a1, "bounds");
    v81 = CGRectGetWidth(v101);
    objc_msgSend(a1, "bounds");
    v82 = CGRectGetHeight(v102);
    v83 = &v79[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_separator];
    v84 = swift_beginAccess(&v79[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_separator], v93, 0, 0);
    (*(void (**)(_BYTE *, char *, uint64_t, __n128))(v4 + 16))(v6, v83, v3, v84);
    v85 = Separator.frame(forBoundingRect:in:)(v79, 0.0, v80, v81, v82);
    v87 = v86;
    v89 = v88;
    v91 = v90;
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    objc_msgSend(v79, "setFrame:", v85, v87, v89, v91);

  }
}

id sub_186AA4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for AccountSectionSupplementaryView();
  objc_msgSendSuper2(&v11, "prepareForReuse");
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_text];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_text + 8];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  swift_bridgeObjectRelease(v2);
  sub_185648();
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_isCentered] = 0;
  sub_185648();
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_buttonAction];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_buttonAction];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_buttonAction + 8];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v6 = sub_1D618(v4, v5);
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasTopSeparator] = 0;
  sub_185B00(v6, v7);
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasBottomSeparator] = 0;
  sub_185D80(v8, v9);
  return objc_msgSend(v0, "setBackgroundColor:", 0);
}

id sub_186B90()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountSectionSupplementaryView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AccountSectionSupplementaryView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView);
}

uint64_t storeEnumTagSinglePayload for AccountSectionSupplementaryView.DisplayType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_186CAC + 4 * byte_2FAD75[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_186CE0 + 4 * asc_2FAD70[v4]))();
}

uint64_t sub_186CE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_186CE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x186CF0);
  return result;
}

uint64_t sub_186CFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x186D04);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_186D08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_186D10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountSectionSupplementaryView.DisplayType()
{
  return &type metadata for AccountSectionSupplementaryView.DisplayType;
}

unint64_t sub_186D30()
{
  unint64_t result;

  result = qword_3D9B80;
  if (!qword_3D9B80)
  {
    result = swift_getWitnessTable(&unk_2FAE0C, &type metadata for AccountSectionSupplementaryView.DisplayType);
    atomic_store(result, (unint64_t *)&qword_3D9B80);
  }
  return result;
}

double sub_186D74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_36BA4(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_160354();
      v12 = v15;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    sub_1D65C((_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v9), a3);
    sub_B7D28(v9, v12);
    v13 = *v4;
    *v4 = v12;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_186E64@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_36C54(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_160538();
      v10 = v13;
    }

    sub_1D65C((_OWORD *)(*(_QWORD *)(v10 + 56) + 32 * v7), a2);
    sub_B7EFC(v7, v10);
    v11 = *v3;
    *v3 = v10;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_186F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_36E94(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v21 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_160A24();
      v10 = v21;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for ModernShelf.ItemPresentation(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for ShelfCellHeight(0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a2, v13 + *(_QWORD *)(v15 + 72) * v7, v14);
    sub_B82A4(v7, v10);
    v16 = *v3;
    *v3 = v10;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a2, 0, 1, v14, v17);
  }
  else
  {
    v19 = type metadata accessor for ShelfCellHeight(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19, v20);
  }
}

uint64_t sub_187084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_36BA4(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v21 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_160D04();
      v12 = v21;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    v13 = *(_QWORD *)(v12 + 56);
    v14 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
    v15 = *(_QWORD *)(v14 - 8);
    sub_3B38C(v13 + *(_QWORD *)(v15 + 72) * v9, a3);
    sub_B857C(v9, v12);
    v16 = *v4;
    *v4 = v12;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a3, 0, 1, v14, v17);
  }
  else
  {
    v19 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19, v20);
  }
}

void sub_1871AC()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_tapGestureRecognizer] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_isCentered] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_text];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_buttonAction];
  *v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_displayType] = 1;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasTopSeparator] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_hasBottomSeparator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_topSeparatorView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31AccountSectionSupplementaryView_bottomSeparatorView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/AccountSectionSupplementaryView.swift", 61, 2, 180, 0);
  __break(1u);
}

double sub_187280(uint64_t a1, uint64_t a2, unsigned __int8 a3, int a4, int a5, void *a6, __n128 a7, double a8, double a9, double a10, double a11, double a12)
{
  double v18;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::Int v37;
  double v38;
  BOOL v39;
  double v40;
  __n128 v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  double v50;
  uint64_t *v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  int v61;
  int v62;

  v18 = a7.n128_f64[0];
  v24 = a3;
  v25 = type metadata accessor for TextMeasurable(0, a7);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v29 = (char *)&v60 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v24 != 3 && a2)
  {
    v61 = a4;
    v62 = a5;
    sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v30 = qword_3CF7D0;
    swift_bridgeObjectRetain(a2);
    if (v30 != -1)
      swift_once(&qword_3CF7D0, sub_1852A4);
    v31 = type metadata accessor for FontUseCase(0);
    v32 = __swift_project_value_buffer(v31, (uint64_t)qword_3FCB00);
    v33 = objc_msgSend(a6, "traitCollection");
    v34 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v32, v33);

    v35 = static TextMeasurable.defaultTextAlignment.getter();
    v36 = static TextMeasurable.defaultLineBreakMode.getter();
    TextMeasurable.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:)(a1, a2, v34, v35, v36, 0, 0, 0);
    v37 = sub_F387C((uint64_t)&off_37A240);
    if (sub_310B0(0, v37))
      v38 = v18 - a10 - a12;
    else
      v38 = v18;
    v39 = sub_310B0(1uLL, v37);
    swift_bridgeObjectRelease(v37);
    if (v39)
      v40 = a8 - a9 - a11;
    else
      v40 = a8;
    v41.n128_f64[0] = TextMeasurable.measurements(fitting:in:)(a6, v38, v40);
    v42 = v41.n128_f64[0];
    v44 = v43;
    v46 = v45;
    v48 = v47;
    if (qword_3CF7B8 != -1)
      swift_once(&qword_3CF7B8, sub_185120);
    v49 = type metadata accessor for StaticDimension(0, v41);
    __swift_project_value_buffer(v49, (uint64_t)qword_3FCAB8);
    v50 = AnyDimension.topMargin(from:in:)(a6, v49, &protocol witness table for StaticDimension, v42, v44, v46, v48);
    LOBYTE(a5) = v62;
    if (a3 == 2)
    {
      LOBYTE(a4) = v61;
      if (qword_3CF7C8 != -1)
        swift_once(&qword_3CF7C8, sub_185140);
      v51 = qword_3FCAE8;
    }
    else
    {
      LOBYTE(a4) = v61;
      if (qword_3CF7C0 != -1)
        swift_once(&qword_3CF7C0, sub_185130);
      v51 = qword_3FCAD0;
    }
    __swift_project_value_buffer(v49, (uint64_t)v51);
    v52 = AnyDimension.bottomMargin(from:in:)(a6, v49, &protocol witness table for StaticDimension, v42, v44, v46, v48);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    a9 = v44 + v50 + v52 + a9;
  }
  v53 = a9 + a11;
  if ((a4 & 1) != 0)
  {
    if (qword_3CF7E0 != -1)
      swift_once(&qword_3CF7E0, sub_1853C8);
    v54 = type metadata accessor for Separator(0, v27);
    v55 = __swift_project_value_buffer(v54, (uint64_t)qword_3FCB78);
    v18 = CGSize.adding(separator:in:)(v55, a6, v18, v53);
    v53 = v56;
  }
  if ((a5 & 1) != 0)
  {
    if (qword_3CF7E8 != -1)
      swift_once(&qword_3CF7E8, sub_1853DC);
    v57 = type metadata accessor for Separator(0, v27);
    v58 = __swift_project_value_buffer(v57, (uint64_t)qword_3FCB90);
    return CGSize.adding(separator:in:)(v58, a6, v18, v53);
  }
  return v18;
}

uint64_t sub_18768C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1876B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_186588(*(char **)(v2 + 16), a2);
}

uint64_t sub_1876B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_38(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t *sub_1876E0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_187728(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MetricsData, (void (*)(BOOL, unint64_t, uint64_t))sub_F341C);
}

unint64_t *sub_187704(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_187728(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for CategorySection, (void (*)(BOOL, unint64_t, uint64_t))sub_F3438);
}

unint64_t *sub_187728(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v22)(BOOL, unint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  unint64_t *v28;

  v8 = v6;
  v26 = a1;
  v27 = a2;
  v25 = a5(0);
  v10 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v12 = (char *)&v22 - v11;
  v13 = *(_QWORD *)(a3 + 16);
  v14 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (v13)
  {
    v28 = (unint64_t *)&_swiftEmptyArrayStorage;
    v22 = a6;
    a6(0, v13, 0);
    v14 = v28;
    v24 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v15 = a3 + v24;
    v23 = *(_QWORD *)(v10 + 72);
    while (1)
    {
      v26(v15);
      if (v8)
        break;
      v8 = 0;
      v16 = v10;
      v28 = v14;
      v18 = v14[2];
      v17 = v14[3];
      if (v18 >= v17 >> 1)
      {
        v22(v17 > 1, v18 + 1, 1);
        v14 = v28;
      }
      v14[2] = v18 + 1;
      v19 = v23;
      v20 = (char *)v14 + v24 + v18 * v23;
      v10 = v16;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v12, v25);
      v15 += v19;
      if (!--v13)
        return v14;
    }
    swift_release(v14);
  }
  return v14;
}

void sub_187898(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v5 = v4;
  v20 = a1;
  v21 = a2;
  v8 = type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a3;
  v12 = a4 - a3;
  if (__OFSUB__(a4, a3))
    goto LABEL_21;
  if (v12)
  {
    v24 = _swiftEmptyArrayStorage;
    sub_F3588(0, v12 & ~(v12 >> 63), 0);
    if (v12 < 0)
    {
LABEL_22:
      __break(1u);
      return;
    }
    v13 = v24;
    v14 = v22;
    if (a4 <= v22)
      v15 = v22;
    else
      v15 = a4;
    v19 = v15;
    while (a4 != v14)
    {
      v23 = v14;
      v20(&v23);
      if (v5)
      {
        swift_release(v13);
        return;
      }
      v5 = 0;
      v24 = v13;
      v17 = v13[2];
      v16 = v13[3];
      if (v17 >= v16 >> 1)
      {
        sub_F3588(v16 > 1, v17 + 1, 1);
        v13 = v24;
      }
      v13[2] = v17 + 1;
      sub_1B79C((uint64_t)v11, (uint64_t)v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v17, type metadata accessor for CategorySelectionGridLayout.SubviewPlacement);
      if (a4 < v22)
        goto LABEL_19;
      if (v19 == v14)
        goto LABEL_20;
      if (a4 == ++v14)
        return;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
}

uint64_t sub_187A3C(void (*a1)(_OWORD *__return_ptr, uint64_t *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _OWORD v17[2];
  _QWORD *v18;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    v7 = _swiftEmptyArrayStorage;
    if (!v6)
      return (uint64_t)v7;
    v18 = _swiftEmptyArrayStorage;
    result = sub_F3400(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
      break;
    v9 = 0;
    v7 = v18;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a3);
      }
      else
      {
        v10 = *(_QWORD *)(a3 + 8 * v9 + 32);
        v11 = swift_retain(v10);
      }
      v16 = v10;
      a1(v17, &v16, v11);
      if (v4)
      {
        swift_release(v7);
        swift_release(v10);
        return (uint64_t)v7;
      }
      v4 = 0;
      swift_release(v10);
      v18 = v7;
      v13 = v7[2];
      v12 = v7[3];
      if (v13 >= v12 >> 1)
      {
        sub_F3400(v12 > 1, v13 + 1, 1);
        v7 = v18;
      }
      ++v9;
      v7[2] = v13 + 1;
      sub_1D65C(v17, &v7[4 * v13 + 4]);
      if (v6 == v9)
        return (uint64_t)v7;
    }
    __break(1u);
LABEL_18:
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v6 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a3);
  }
  __break(1u);
  return result;
}

uint64_t SidebarMenuController.selectTab(_:userInitiated:)(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char v37;
  id *v38;
  double v39;
  id v40;
  void *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __n128 v46;
  char *v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t, __n128);
  id v49;
  Class v50;
  void **v51;
  void *v52;
  void **v53;
  void *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  void (*v72)(char *, unint64_t, uint64_t, __n128);
  __n128 v73;
  char *v74;
  char *v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  Class v77;
  Class isa;
  id v79;
  void *v80;
  id v81;
  char v82;
  char *v83;
  id v84;
  id v85;
  uint64_t v86;
  char *v87;
  char *v88;
  unsigned int (**v89)(id, uint64_t, id);
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  _QWORD v94[3];
  uint64_t v95;
  uint64_t v96;
  char v97[24];
  char v98[32];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v6);
  v91 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (char *)type metadata accessor for OutlineItem(0);
  v89 = (unsigned int (**)(id, uint64_t, id))*((_QWORD *)v8 - 1);
  v90 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v92 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v86 - v15;
  __chkstk_darwin(v17);
  v87 = (char *)&v86 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v19);
  v93 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v88 = (char *)&v86 - v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v86 - v24;
  if ((static NavigationTab.== infix(_:_:)(a1, 12) & 1) == 0)
  {
    v26 = (uint64_t)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController];
    swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController], v98, 0, 0);
    if (*(_QWORD *)(v26 + 24))
    {
      sub_1D5D4(v26, (uint64_t)v94);
      v86 = a1;
      v27 = v16;
      v28 = v11;
      v29 = v3;
      v30 = v12;
      v31 = a2;
      v32 = v10;
      v34 = v95;
      v33 = v96;
      __swift_project_boxed_opaque_existential_1(v94, v95);
      v35 = v34;
      v10 = v32;
      a2 = v31;
      v12 = v30;
      v3 = v29;
      v11 = v28;
      v16 = v27;
      a1 = v86;
      (*(void (**)(uint64_t, uint64_t))(v33 + 64))(v35, v33);
      __swift_destroy_boxed_opaque_existential_0(v94);
    }
  }
  if ((static NavigationTab.== infix(_:_:)(a1, 12) & 1) == 0
    || (v36 = objc_msgSend(v3, "traitCollection"),
        v37 = UITraitCollection.interfaceIdiomIsMac.getter(),
        v36,
        (v37 & 1) == 0))
  {
    v51 = (void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource];
    swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource], v94, 0, 0);
    v52 = *v51;
    if (*v51)
    {
      v53 = (void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView];
      swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView], v97, 0, 0);
      v54 = *v53;
      if (v54)
      {
        LODWORD(v87) = a2;
        v55 = v52;
        v56 = a1;
        v57 = v54;
        v58 = v91;
        sub_18FEDC(v56, (uint64_t)v91);
        if (v89[6](v58, 1, v90) != 1)
        {
          sub_1B79C((uint64_t)v58, (uint64_t)v10, type metadata accessor for OutlineItem);
          v62 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_previousNavigationTab];
          *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_previousNavigationTab] = v56;
          sub_91F0C(v62);
          sub_3D600(v56);
          v63 = (uint64_t)v88;
          v90 = v55;
          dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v10);
          v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
          if (v64(v63, 1, v11) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v16, v63, v11);
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v57, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

            v79 = objc_msgSend(v3, "splitViewController");
            if (v79)
            {
              v80 = v79;
              v91 = v57;
              v81 = v90;
              v82 = (char)v87;
              v83 = (char *)objc_msgSend(v79, "displayMode");

              if (v83 == (_BYTE *)&dword_0 + 3
                && (v82 & 1) != 0
                && (v84 = objc_msgSend(v3, "splitViewController")) != 0)
              {
                v85 = v84;
                objc_msgSend(v84, "hideColumn:", 0);

              }
              else
              {
                v85 = v81;
              }
              v57 = v91;
            }
            else
            {
              v85 = v90;
            }

            (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
            sub_190398((uint64_t)v10);
            return 1;
          }
          sub_D1D4(v63, (uint64_t *)&unk_3D1A00);
          v65 = objc_msgSend(v57, "indexPathsForSelectedItems");
          if (v65)
          {
            v66 = v65;
            v91 = v57;
            v89 = (unsigned int (**)(id, uint64_t, id))v10;
            v67 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v65, v11);

            v68 = *(_QWORD *)(v67 + 16);
            v88 = (char *)v67;
            if (v68)
            {
              v69 = v67;
              v70 = v67 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
              v71 = *(_QWORD *)(v12 + 72);
              v72 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v12 + 16);
              v73 = swift_bridgeObjectRetain(v69);
              v75 = v92;
              v74 = v93;
              while (1)
              {
                v72(v74, v70, v11, v73);
                v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
                v76(v74, 0, 1, v11);
                if (v64((uint64_t)v74, 1, v11) == 1)
                  break;
                (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v75, v74, v11);
                v77 = IndexPath._bridgeToObjectiveC()().super.isa;
                objc_msgSend(v91, "deselectItemAtIndexPath:animated:", v77, 0);

                v74 = v93;
                (*(void (**)(char *, uint64_t))(v12 + 8))(v75, v11);
                v70 += v71;
                if (!--v68)
                  goto LABEL_44;
              }
            }
            else
            {
              v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
              swift_bridgeObjectRetain(v67);
              v74 = v93;
LABEL_44:
              v76(v74, 1, 1, v11);
            }

            swift_bridgeObjectRelease_n(v88, 2);
            v10 = (char *)v89;
            v57 = v90;
          }
          else
          {

          }
          sub_190398((uint64_t)v10);
          return 0;
        }

        sub_D1D4((uint64_t)v58, (uint64_t *)&unk_3D9B90);
        a1 = v56;
      }
    }
    v59 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection];
    *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection] = a1;
    sub_91F0C(v59);
    sub_3D600(a1);
    return 0;
  }
  v38 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView];
  *(_QWORD *)&v39 = swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView], v94, 0, 0).n128_u64[0];
  if (!*v38)
    return 1;
  v40 = objc_msgSend(*v38, "indexPathsForSelectedItems", v39);
  if (!v40)
    return 1;
  v41 = v40;
  v42 = (char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v11);

  v43 = *((_QWORD *)v42 + 2);
  if (v43)
  {
    v44 = &v42[(*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)];
    v45 = *(char **)(v12 + 16);
    v92 = *(char **)(v12 + 72);
    v93 = v45;
    v91 = v42;
    v46 = swift_bridgeObjectRetain(v42);
    v47 = v87;
    do
    {
      ((void (*)(char *, char *, uint64_t, __n128))v93)(v25, v44, v11, v46);
      v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v48)(v25, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v25, 1, v11) == 1)
      {
        swift_bridgeObjectRelease_n(v91, 2);
        return 1;
      }
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v47, v25, v11);
      if (*v38)
      {
        v49 = *v38;
        v50 = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v49, "deselectItemAtIndexPath:animated:", v50, 0);

      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v47, v11);
      v44 = &v92[(_QWORD)v44];
      --v43;
    }
    while (v43);
    v42 = v91;
  }
  else
  {
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56);
    v46 = swift_bridgeObjectRetain(v42);
  }
  v60 = 1;
  v48(v25, 1, 1, v11, v46);
  swift_bridgeObjectRelease_n(v42, 2);
  return v60;
}

uint64_t type metadata accessor for OutlineItem(uint64_t a1)
{
  return sub_AE00(a1, qword_3D9DB0, (uint64_t)&nominal type descriptor for OutlineItem);
}

id SidebarMenuController.__allocating_init(asPartOf:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_194614(a1);
  swift_release(a1);
  return v4;
}

uint64_t SidebarMenuController.searchSuggestionsController.setter(uint64_t a1)
{
  char *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD *, uint64_t, uint64_t);
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];
  _BYTE v13[24];

  ObjectType = swift_getObjectType();
  v4 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController], v13, 33, 0);
  sub_194874(a1, v4);
  v5 = *(_QWORD *)(v4 + 24);
  if (v5)
  {
    v12[3] = ObjectType;
    v12[4] = &protocol witness table for SidebarMenuController;
    v12[0] = v1;
    v6 = *(_QWORD *)(v4 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
    v7 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v6 + 24);
    v8 = v1;
    v7(v12, v5, v6);
    if (*(_QWORD *)(v4 + 24))
    {
      sub_1D5D4((uint64_t)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_storeDataProvider], (uint64_t)v12);
      v9 = *(_QWORD *)(v4 + 24);
      v10 = *(_QWORD *)(v4 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v4, v9);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v12, v9, v10);
    }
  }
  swift_endAccess(v13);
  return sub_D1D4(a1, &qword_3D8CC8);
}

Swift::Void __swiftcall SidebarMenuController.makeSearchFieldFirstResponder()()
{
  uint64_t v0;
  id *v1;
  double v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView);
  *(_QWORD *)&v2 = swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView, v15, 0, 0).n128_u64[0];
  if (!*v1)
    return;
  v3 = objc_msgSend(*v1, "visibleSupplementaryViewsOfKind:", UICollectionElementKindSectionHeader, v2);
  v4 = sub_E710(0, &qword_3D8CE8, UICollectionReusableView_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v13 = v5;
    else
      v13 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v5);
    if (v14)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease(v5);
    return;
  }
  if (!*(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_16;
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      return;
    }
    v6 = *(id *)(v5 + 32);
  }
  v7 = v6;
  swift_bridgeObjectRelease(v5);
  v8 = type metadata accessor for SearchFieldHeaderView();
  v9 = swift_dynamicCastClass(v7, v8);
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchFieldHeaderView_contentView);
    if (v10)
    {
      v11 = objc_opt_self(UIControl);
      v12 = (void *)swift_dynamicCastObjCClass(v10, v11);
      if (v12)
        objc_msgSend(v12, "becomeFirstResponder");
    }
  }

}

id sub_18868C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SidebarMenuController.SidebarDataSource(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1886C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;

  v6 = objc_allocWithZone((Class)type metadata accessor for SidebarMenuController.SidebarDataSource(0));
  return UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(a1, a2, a3);
}

uint64_t SidebarMenuController.searchSuggestionsController.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_D184(v3, a1, &qword_3D8CC8);
}

void (*SidebarMenuController.searchSuggestionsController.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t ObjectType;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[8] = v1;
  ObjectType = swift_getObjectType();
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController;
  v3[9] = ObjectType;
  v3[10] = v5;
  swift_beginAccess(v1 + v5, v3, 33, 0);
  return sub_1887D8;
}

void sub_1887D8(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[8] + v3[10];
    swift_beginAccess(v4, v3 + 5, 33, 0);
    v5 = *(_QWORD *)(v4 + 24);
    if (v5)
    {
      v6 = (void *)v3[8];
      v7 = (uint64_t)v6 + v3[10];
      v15[3] = v3[9];
      v15[4] = &protocol witness table for SidebarMenuController;
      v15[0] = v6;
      v8 = *(_QWORD *)(v7 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v7, v5);
      v9 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 24);
      v10 = v6;
      v9(v15, v5, v8);
      if (*(_QWORD *)(v4 + 24))
      {
        v11 = v3[8];
        v12 = v11 + v3[10];
        sub_1D5D4(v11 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_storeDataProvider, (uint64_t)v3);
        v13 = *(_QWORD *)(v4 + 24);
        v14 = *(_QWORD *)(v7 + 32);
        __swift_mutable_project_boxed_opaque_existential_1(v12, v13);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v3, v13, v14);
      }
    }
    swift_endAccess(v3 + 5);
  }
  free(v3);
}

uint64_t sub_188900()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2FAE40);
  v2 = swift_getKeyPath(&unk_2FAE68);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

id SidebarMenuController.init(asPartOf:)(uint64_t a1)
{
  id v2;

  v2 = sub_194614(a1);
  swift_release(a1);
  return v2;
}

Swift::Void __swiftcall SidebarMenuController.viewDidLoad()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  objc_super v27;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for AutomationSemantics(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27.receiver = v1;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "viewDidLoad", v5);
  v8 = objc_msgSend(v1, "view");
  if (!v8)
  {
    __break(1u);
    goto LABEL_18;
  }
  v9 = v8;
  v10 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v9, "setBackgroundColor:", v10);

  v11 = objc_msgSend(v1, "traitCollection");
  LOBYTE(v10) = UITraitCollection.interfaceIdiomIsMac.getter();

  v12 = objc_msgSend(v1, "navigationController");
  v13 = v12;
  if ((v10 & 1) == 0)
  {
    if (v12)
    {
      v17 = objc_msgSend(v12, "navigationBar");

      objc_msgSend(v17, "setPrefersLargeTitles:", 1);
    }
    v18 = objc_msgSend(v1, "navigationItem");
    v19 = objc_msgSend(v1, "editButtonItem");
    objc_msgSend(v18, "setRightBarButtonItem:animated:", v19, 1);

    v15 = objc_msgSend(v1, "editButtonItem");
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setAccessibilityIdentifier:", v16);
    goto LABEL_10;
  }
  if (v12)
  {
    objc_msgSend(v12, "setNavigationBarHidden:animated:", 1, 0);

  }
  v14 = objc_msgSend(v1, "view");
  if (!v14)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v15 = v14;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v1);
  objc_msgSend(v15, "addInteraction:", v16);
LABEL_10:

  v20 = objc_msgSend(v1, "navigationController");
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, "navigationBar");

    static AutomationSemantics.tabContainer()();
    UIView.setAutomationSemantics(_:)(v7);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  sub_188D28();
  if ((objc_msgSend(v1, "isEditing") & 1) == 0)
  {
    v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection;
    v24 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection];
    if (v24 != 18)
    {
      sub_3D600(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection]);
      v25 = SidebarMenuController.selectTab(_:userInitiated:)(v24, 0);
      sub_91F0C(v24);
      if ((v25 & 1) != 0)
      {
        v26 = *(_QWORD *)&v1[v23];
        *(_QWORD *)&v1[v23] = 18;
        sub_91F0C(v26);
      }
    }
  }
  sub_189584();
}

void sub_188D28()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  id v30;
  id v31;
  char v32;
  id v33;
  char v34;
  void **v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, char *, uint64_t);
  uint64_t v64;
  void (*v65)(uint64_t, char *, uint64_t);
  char *v66;
  id v67;
  char *v68;
  uint64_t v69;
  void **v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  id v83;
  __n128 v84;
  void *v85;
  unint64_t v86;
  uint64_t v87;
  id v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  void (*v93)(char *, uint64_t, __n128);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  id v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  _QWORD *v110;
  char *v111;
  char *v112;
  char *v113;
  _BYTE v114[24];
  char v115[24];
  char v116[32];

  v1 = v0;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9EA0);
  __chkstk_darwin(v99);
  v98 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9EA8);
  v110 = *(_QWORD **)(v3 - 8);
  v4 = v110[8];
  __chkstk_darwin(v3);
  v112 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v103 = (char *)&v94 - v6;
  __chkstk_darwin(v7);
  v107 = (char *)&v94 - v8;
  __chkstk_darwin(v9);
  v109 = (char *)&v94 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9EB0);
  v108 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v108 + 64);
  __chkstk_darwin(v11);
  v111 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v106 = (char *)&v94 - v14;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9EB8);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v97 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = v15;
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v113 = (char *)&v94 - v18;
  v19 = objc_msgSend(v0, "view", v17);
  if (!v19)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  v20 = v19;
  objc_msgSend(v19, "bounds");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;

  v29 = sub_18B790();
  v30 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v29, v22, v24, v26, v28);

  objc_msgSend(v30, "setAutoresizingMask:", 18);
  objc_msgSend(v30, "setDelegate:", v1);
  objc_msgSend(v30, "setAlwaysBounceVertical:", 1);
  objc_msgSend(v30, "setAllowsMultipleSelectionDuringEditing:", 1);
  v31 = objc_msgSend(v1, "traitCollection");
  v32 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v32 & 1) != 0)
    objc_msgSend(v30, "_setShouldBecomeFocusedOnSelection:", 0);
  v102 = v11;
  v33 = objc_msgSend(v1, "traitCollection");
  v34 = UITraitCollection.interfaceIdiomIsMac.getter();

  v35 = (void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView], v116, 1, 0);
  v36 = *v35;
  *v35 = v30;
  v37 = v30;

  v38 = objc_msgSend(v1, "view");
  if (!v38)
    goto LABEL_11;
  v39 = v38;
  objc_msgSend(v38, "addSubview:", v37);

  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v42 = v41;
  v43 = swift_allocObject(&unk_386FA8, 24, 7);
  swift_unknownObjectWeakInit(v43 + 16, v1);
  v44 = type metadata accessor for SearchFieldHeaderView();
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v40, v42, sub_196330, v43, v44);
  v45 = swift_allocObject(&unk_387020, 17, 7);
  *(_BYTE *)(v45 + 16) = v34 & 1;
  v46 = type metadata accessor for SidebarHeaderCell();
  v47 = type metadata accessor for OutlineItem(0);
  v48 = v106;
  UICollectionView.CellRegistration.init(handler:)(sub_196348, v45, v46, v47);
  v49 = sub_E710(0, &qword_3D9EC0, UICollectionViewListCell_ptr);
  v50 = v109;
  UICollectionView.CellRegistration.init(handler:)(sub_18C894, 0, v49, v47);
  v100 = v37;
  v51 = v107;
  v95 = v47;
  UICollectionView.CellRegistration.init(handler:)(sub_18DE84, 0, v49, v47);
  v52 = v110;
  v53 = (void (*)(char *, char *, uint64_t))v110[2];
  v54 = v103;
  v53(v103, v51, v3);
  v101 = v1;
  v55 = v108;
  v56 = v102;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v111, v48, v102);
  v53(v112, v50, v3);
  v57 = *((unsigned __int8 *)v52 + 80);
  v58 = (v57 + 16) & ~v57;
  v59 = *(unsigned __int8 *)(v55 + 80);
  v60 = (v4 + v59 + v58) & ~v59;
  v61 = (v12 + v57 + v60) & ~v57;
  v62 = swift_allocObject(&unk_387048, v61 + v4, v57 | v59 | 7);
  v63 = (void (*)(uint64_t, char *, uint64_t))v52[4];
  v64 = v56;
  v63(v62 + v58, v54, v3);
  v65 = *(void (**)(uint64_t, char *, uint64_t))(v55 + 32);
  v66 = v101;
  v65(v62 + v60, v111, v56);
  v63(v62 + v61, v112, v3);
  v67 = objc_allocWithZone((Class)type metadata accessor for SidebarMenuController.SidebarDataSource(0));
  v68 = (char *)v100;
  v69 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v68, sub_196430, v62);
  v70 = (void **)&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource];
  swift_beginAccess(&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource], v115, 1, 0);
  v71 = *v70;
  *v70 = (void *)v69;

  v72 = *v70;
  v73 = v105;
  v74 = v104;
  if (*v70)
  {
    v75 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
    v112 = v68;
    v76 = v66;
    v77 = v64;
    v78 = v97;
    v75(v97, v113, v105);
    v79 = *(unsigned __int8 *)(v74 + 80);
    v80 = (v79 + 16) & ~v79;
    v81 = swift_allocObject(&unk_387070, v80 + v96, v79 | 7);
    v82 = v78;
    v64 = v77;
    v66 = v76;
    v68 = v112;
    (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v81 + v80, v82, v73);
    v83 = v72;
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_196538, v81);

  }
  v84 = swift_beginAccess(v70, v114, 32, 0);
  v85 = *v70;
  if (v85)
  {
    swift_endAccess(v114);
    v86 = sub_196218();
    v87 = sub_89A0(&qword_3D9E38, type metadata accessor for OutlineItem, (uint64_t)&unk_2FB068);
    v88 = v85;
    v89 = v98;
    UICollectionViewDiffableDataSource.ReorderingHandlers.init()(&type metadata for TabMenu.Group, v95, v86, v87);
    v90 = v99;
    UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter(sub_18EB48, 0, v99);
    v91 = swift_allocObject(&unk_386FA8, 24, 7);
    swift_unknownObjectWeakInit(v91 + 16, v66);
    UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter(sub_1965A0, v91, v90);
    UICollectionViewDiffableDataSource.reorderingHandlers.setter(v89);

    v92 = (void (*)(char *, uint64_t))v110[1];
    v92(v107, v3);
    v92(v109, v3);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v106, v64);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v113, v73);
  }
  else
  {
    v93 = (void (*)(char *, uint64_t, __n128))v110[1];
    v93(v107, v3, v84);
    ((void (*)(char *, uint64_t))v93)(v109, v3);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v106, v64);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v113, v73);
    swift_endAccess(v114);

  }
}

double sub_189584()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void **v20;
  double result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  Swift::OpaquePointer v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  id v87[3];
  uint64_t v88;
  char v89[32];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  v2 = __chkstk_darwin(v1);
  v83 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0, v2);
  v82 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v81 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E08);
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E10);
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E18);
  v12 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v79 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E20);
  v85 = *(_QWORD *)(v14 - 8);
  v86 = v14;
  __chkstk_darwin(v14);
  v84 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E28);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource);
  *(_QWORD *)&result = swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource, v89, 0, 0).n128_u64[0];
  v22 = *v20;
  if (*v20)
  {
    v23 = type metadata accessor for OutlineItem(0);
    v73 = v16;
    v70 = v4;
    v24 = v23;
    v71 = v12;
    v25 = v0;
    v26 = sub_196218();
    v74 = v17;
    v27 = v26;
    v28 = sub_89A0(&qword_3D9E38, type metadata accessor for OutlineItem, (uint64_t)&unk_2FB068);
    v29 = v22;
    v72 = v19;
    v30 = NSDiffableDataSourceSnapshot.init()(&type metadata for TabMenu.Group, v24, v27, v28);
    v31._rawValue = (void *)static TabMenu.Group.allCases.getter(v30);
    NSDiffableDataSourceSnapshot.appendSections(_:)(v31);
    swift_bridgeObjectRelease(v31._rawValue);
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v19, 0, 0, 0);
    v69 = swift_allocObject(&unk_386F80, 17, 7);
    *(_BYTE *)(v69 + 16) = 0;
    type metadata accessor for TabMenuProvider(0);
    v32 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_objectGraph);
    v33 = (void *)objc_opt_self(NSUserDefaults);
    v34 = objc_msgSend(v33, "standardUserDefaults", swift_retain(v32).n128_f64[0]);
    v35 = TabMenuProvider.__allocating_init(asPartOf:userDefaults:interfaceMode:)(v32, v34, 1);
    v36 = dispatch thunk of TabMenuProvider.menuPublisher.getter();
    swift_release(v35);
    v88 = v36;
    v37 = v25;
    swift_beginAccess(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController__isEditingSidebar, v87, 33, 0);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E00);
    Published.projectedValue.getter(v38);
    swift_endAccess(v87);
    v39 = sub_10EDC(&qword_3D9E40, &qword_3D9E08, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v40 = v76;
    Publisher<>.removeDuplicates()(v76, v39, &protocol witness table for Bool);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v8, v40);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E48);
    v42 = sub_10EDC(&qword_3D9E50, &qword_3D9E48, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v43 = sub_10EDC((unint64_t *)&unk_3D9E58, &qword_3D9E10, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v44 = v79;
    v45 = v41;
    v46 = v78;
    Publisher.combineLatest<A>(_:)(v11, v45, v78, v42, v43);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v11, v46);
    swift_release(v88);
    v47 = v81;
    OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)(0.01);
    v48 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
    v87[0] = (id)static OS_dispatch_queue.main.getter(v49);
    v50 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v51 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v83, 1, 1, v50);
    v52 = sub_10EDC((unint64_t *)&unk_3D9E68, &qword_3D9E18, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
    v53 = sub_1E2DC();
    v54 = v84;
    v55 = v80;
    Publisher.debounce<A>(for:scheduler:options:)(v47, v87, v51, v80, v48, v52, v53);
    sub_D1D4(v51, &qword_3D2E70);

    (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v70);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v44, v55);
    v56 = swift_allocObject(&unk_386FA8, 24, 7);
    swift_unknownObjectWeakInit(v56 + 16, v37);
    v57 = (_QWORD *)swift_allocObject(&unk_386FD0, 40, 7);
    v57[2] = v56;
    v58 = v69;
    v57[3] = v69;
    v57[4] = v29;
    v59 = swift_allocObject(&unk_386FF8, 32, 7);
    *(_QWORD *)(v59 + 16) = sub_1962C4;
    *(_QWORD *)(v59 + 24) = v57;
    v60 = sub_10EDC(&qword_3D9E78, &qword_3D9E20, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
    v61 = v29;
    swift_retain(v58);
    v62 = v86;
    v63 = Publisher<>.sink(receiveValue:)(sub_1962F4, v59, v86, v60);
    v64 = swift_release(v59);
    (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v54, v62, v64);
    v65 = v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_subscriptions;
    swift_beginAccess(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_subscriptions, v87, 33, 0);
    v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
    v67 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v65, v66, v67);
    swift_endAccess(v87);

    v68 = swift_release(v63);
    (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v72, v73, v68);
    *(_QWORD *)&result = swift_release(v58).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall SidebarMenuController.viewDidLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  char v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  uint64_t v8;
  id v9;
  NSNumber v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  objc_super v15;

  v1 = v0;
  v15.receiver = v0;
  v15.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v15, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v3 & 1) != 0)
  {
    v4 = objc_msgSend(v1, "splitViewController");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "primaryColumnWidth");
      v7 = v6;
      v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_previousSidebarWidth;
      if (*(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_previousSidebarWidth] != v6)
      {
        v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v10.super.super.isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
        if (qword_3CFF00 != -1)
          swift_once(&qword_3CFF00, sub_2D725C);
        v11 = type metadata accessor for NSUserDefaults.Keys(0);
        __swift_project_value_buffer(v11, (uint64_t)qword_3E1DF0);
        NSUserDefaults.Keys.rawValue.getter();
        v13 = v12;
        v14 = String._bridgeToObjectiveC()();
        objc_msgSend(v9, "setObject:forKey:", v10.super.super.isa, v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

        v5 = v14;
      }

      *(double *)&v1[v8] = v7;
    }
  }
}

void sub_189E5C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _BYTE *v25;
  char *v26;
  id *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t (*v52)(char *, unint64_t, uint64_t, __n128);
  uint64_t j;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void **v61;
  __n128 v62;
  uint64_t v63;
  void *v64;
  id v65;
  Class isa;
  int v67;
  uint64_t v68;
  id v69;
  char v70;
  id v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BOOL4 v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  id *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  int v97;
  void **v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  id v113;
  uint64_t Strong;
  uint64_t (*v115)(char *, uint64_t, uint64_t, __n128);
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE v119[16];
  char v120[8];
  char v121[8];
  char v122[12];
  char v123[8];

  v97 = a2;
  v112 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v112);
  v111 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v10);
  v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for TabMenu.Item(0);
  v118 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v101 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E80);
  v107 = *(_QWORD *)(v108 - 8);
  v17 = __chkstk_darwin(v108);
  v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TabMenu.Section(0, v17);
  v117 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v95 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v89 - v23;
  a3 += 16;
  swift_beginAccess(a3, v123, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return;
  v104 = *(_QWORD *)(a1 + 16);
  if (!v104)
    goto LABEL_33;
  v105 = v13;
  v106 = v12;
  v25 = (_BYTE *)(a4 + 16);
  v26 = (char *)Strong;
  v27 = (id *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource);
  v98 = (void **)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView);
  v94 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems;
  v28 = v117;
  v103 = a1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  v89 = a1;
  swift_bridgeObjectRetain(a1);
  swift_beginAccess(v25, v122, 0, 0);
  v93 = v27;
  swift_beginAccess(v27, v121, 0, 0);
  v116 = v25;
  v29 = swift_beginAccess(v25, v120, 1, 0);
  v30 = 0;
  v102 = *(_QWORD *)(v28 + 72);
  v115 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v28 + 16);
  v99 = v15;
  v31 = v100;
  v109 = v19;
  v96 = v20;
  v92 = a5;
  v90 = v24;
  for (i = v115(v24, v103, v20, v29); ; i = v115(v24, v103 + v102 * v30, v20, v38))
  {
    v39 = TabMenu.Section.group.getter(i);
    if (!(_BYTE)v39)
    {
      v67 = TabMenu.Section.group.getter(v39);
      v68 = ((uint64_t (*)(void))TabMenu.Section.items.getter)();
      v69 = objc_msgSend(v26, "traitCollection");
      v70 = UITraitCollection.interfaceIdiomIsMac.getter();

      sub_18A72C(v67, v68, v70 & 1, (uint64_t)v109);
      v36 = v68;
      v19 = v109;
LABEL_6:
      swift_bridgeObjectRelease(v36);
      goto LABEL_7;
    }
    if (v39 == 1)
    {
      v40 = TabMenu.Section.group.getter(v39);
      v41 = v40;
      v42 = TabMenu.Section.items.getter(v40);
      sub_18A72C(v41, v42, 1, (uint64_t)v19);
      v43 = v42;
      v44 = v101;
      swift_bridgeObjectRelease(v43);
      if ((v97 & 1) != 0)
      {
        v45 = TabMenu.Section.items.getter(v33);
        if (*v93 && (v46 = *(_QWORD *)(v45 + 16)) != 0)
        {
          v47 = v118;
          v48 = v45 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
          v49 = v45;
          v113 = *v93;
          v91 = v49;
          v50 = swift_bridgeObjectRetain(v49);
          v51 = *(_QWORD *)(v47 + 72);
          v52 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v47 + 16);
          for (j = v52(v44, v48, v31, v50); ; j = v52(v44, v48, v31, v54))
          {
            if ((TabMenu.Item.enabled.getter(j) & 1) != 0)
            {
              v55 = (uint64_t)v111;
              ((void (*)(char *, char *, uint64_t))v52)(v111, v44, v31);
              swift_storeEnumTagMultiPayload(v55, v112, 1);
              v56 = (uint64_t)v106;
              dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v55);
              sub_190398(v55);
              v57 = v44;
              v58 = v105;
              v59 = v110;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v56, 1, v110) == 1)
              {
                (*(void (**)(char *, uint64_t))(v118 + 8))(v57, v31);
                sub_D1D4(v56, (uint64_t *)&unk_3D1A00);
                v26 = (char *)Strong;
                v44 = v57;
              }
              else
              {
                v60 = v99;
                (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v99, v56, v59);
                v61 = v98;
                v62 = swift_beginAccess(v98, v119, 32, 0);
                v63 = v59;
                v64 = *v61;
                if (*v61)
                {
                  swift_endAccess(v119);
                  v65 = v64;
                  isa = IndexPath._bridgeToObjectiveC()().super.isa;
                  objc_msgSend(v65, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

                  (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v63);
                  v44 = v101;
                  v31 = v100;
                  (*(void (**)(char *, uint64_t))(v118 + 8))(v101, v100);
                }
                else
                {
                  (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v60, v63, v62);
                  v44 = v101;
                  v31 = v100;
                  (*(void (**)(char *, uint64_t))(v118 + 8))(v101, v100);
                  v54 = swift_endAccess(v119);
                }
                v26 = (char *)Strong;
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v118 + 8))(v44, v31);
            }
            v48 += v51;
            if (!--v46)
              break;
          }

          swift_bridgeObjectRelease_n(v91, 2);
          v19 = v109;
          v20 = v96;
          v24 = v90;
        }
        else
        {
          swift_bridgeObjectRelease(v45);
        }
      }
      v34 = TabMenu.Section.items.getter(v33);
      v35 = *(_QWORD *)&v26[v94];
      *(_QWORD *)&v26[v94] = v34;
      v36 = v35;
      goto LABEL_6;
    }
    v71 = objc_msgSend(v26, "traitCollection");
    v72 = UITraitCollection.interfaceIdiomIsMac.getter();

    v73 = v95;
    v74 = ((uint64_t (*)(char *, char *, uint64_t))v115)(v95, v24, v20);
    if ((v72 & 1) != 0)
    {
      v75 = TabMenu.Section.items.getter(v74);
      v76 = *(_QWORD *)(v75 + 16);
      swift_bridgeObjectRelease(v75);
      v77 = v76 != 0;
    }
    else
    {
      v77 = 1;
    }
    v78 = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v73, v20);
    v79 = TabMenu.Section.group.getter(v78);
    v80 = v79;
    v81 = TabMenu.Section.items.getter(v79);
    v19 = v109;
    sub_18A72C(v80, v81, v77, (uint64_t)v109);
    v82 = v81;
    v20 = v96;
    swift_bridgeObjectRelease(v82);
    *v116 = 1;
LABEL_7:
    ++v30;
    v119[0] = TabMenu.Section.group.getter(v37);
    UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)(v19, v119, *v116, 0, 0);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v19, v108);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v24, v20);
    if (v30 == v104)
      break;
  }
  swift_bridgeObjectRelease(v89);
LABEL_33:
  v83 = (char *)Strong;
  if ((v97 & 1) == 0)
  {
    v84 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection;
    if (*(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection) == 18)
    {
      v85 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_previousNavigationTab);
      if (v85 != 18)
      {
        *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection) = v85;
        sub_3D600(v85);
        sub_91F0C(18);
      }
    }
    if ((objc_msgSend(v83, "isEditing") & 1) == 0)
    {
      v86 = *(_QWORD *)&v83[v84];
      if (v86 != 18)
      {
        sub_3D600(*(_QWORD *)&v83[v84]);
        v87 = SidebarMenuController.selectTab(_:userInitiated:)(v86, 0);
        sub_91F0C(v86);
        if ((v87 & 1) != 0)
        {
          v88 = *(_QWORD *)&v83[v84];
          *(_QWORD *)&v83[v84] = 18;
          sub_91F0C(v88);
        }
      }
    }
  }

}

uint64_t sub_18A72C@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  id v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  Swift::OpaquePointer v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  int v48;
  _BYTE *v49;
  __int128 v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  LODWORD(v50) = a1;
  v52 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v7);
  v51 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TabMenu.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for OutlineItem(0);
  v56 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v47 - v16;
  v18 = v4;
  swift_bridgeObjectRetain(a2);
  v20 = sub_194444(v19, v18);
  swift_bridgeObjectRelease(a2);

  v21 = *((_QWORD *)v20 + 2);
  if (v21)
  {
    v47[1] = v18;
    v48 = a3;
    v49 = v17;
    v57 = _swiftEmptyArrayStorage;
    sub_F3534(0, v21, 0);
    v22 = *(unsigned __int8 *)(v10 + 80);
    v47[0] = v20;
    v23 = &v20[(v22 + 32) & ~v22];
    v54 = *(_QWORD *)(v10 + 72);
    v55 = v10;
    v24 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v25 = v53;
    do
    {
      v24(v12, v23, v9);
      v24(v14, v12, v9);
      swift_storeEnumTagMultiPayload(v14, v25, 1);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v9);
      v26 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
      {
        sub_F3534(0, v26[2] + 1, 1);
        v25 = v53;
        v26 = v57;
      }
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
      {
        sub_F3534(v27 > 1, v28 + 1, 1);
        v25 = v53;
        v26 = v57;
      }
      v26[2] = v28 + 1;
      sub_1B79C((uint64_t)v14, (uint64_t)v26+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v28, type metadata accessor for OutlineItem);
      v23 += v54;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease(v47[0]);
    v17 = v49;
    LOBYTE(a3) = v48;
  }
  else
  {
    swift_bridgeObjectRelease(v20);
    v26 = _swiftEmptyArrayStorage;
  }
  v29 = v50;
  v30 = sub_18E6F0(v50);
  v57 = v26;
  sub_1F7550((uint64_t)v30);
  v31 = v57;
  *v17 = v29;
  v32 = v53;
  swift_storeEnumTagMultiPayload(v17, v53, 0);
  v33 = sub_89A0(&qword_3D9E38, type metadata accessor for OutlineItem, (uint64_t)&unk_2FB068);
  NSDiffableDataSourceSectionSnapshot.init()(v32, v33);
  if ((a3 & 1) != 0)
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E88);
    v35 = v56;
    v36 = *(unsigned __int8 *)(v56 + 80);
    v37 = (v36 + 32) & ~v36;
    v38 = v37 + *(_QWORD *)(v56 + 72);
    v54 = v36 | 7;
    v55 = v34;
    v39 = swift_allocObject(v34, v38, v36 | 7);
    v50 = xmmword_2F03C0;
    *(_OWORD *)(v39 + 16) = xmmword_2F03C0;
    sub_1948C4((uint64_t)v17, v39 + v37);
    v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    v41 = (uint64_t)v51;
    v40(v51, 1, 1, v32);
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E80);
    NSDiffableDataSourceSectionSnapshot.append(_:to:)(v39, v41, v42);
    swift_bridgeObjectRelease(v39);
    sub_D1D4(v41, (uint64_t *)&unk_3D9B90);
    sub_1948C4((uint64_t)v17, v41);
    v40((char *)v41, 0, 1, v32);
    NSDiffableDataSourceSectionSnapshot.append(_:to:)(v31, v41, v42);
    swift_bridgeObjectRelease(v31);
    sub_D1D4(v41, (uint64_t *)&unk_3D9B90);
    v43._rawValue = (void *)swift_allocObject(v55, v38, v54);
    *((_OWORD *)v43._rawValue + 1) = v50;
    sub_1948C4((uint64_t)v17, (uint64_t)v43._rawValue + v37);
    NSDiffableDataSourceSectionSnapshot.expand(_:)(v43);
    swift_bridgeObjectRelease(v43._rawValue);
  }
  else
  {
    v44 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v51, 1, 1, v32);
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E80);
    NSDiffableDataSourceSectionSnapshot.append(_:to:)(v31, v44, v45);
    swift_bridgeObjectRelease(v31);
    sub_D1D4(v44, (uint64_t *)&unk_3D9B90);
  }
  return sub_190398((uint64_t)v17);
}

Swift::Void __swiftcall SidebarMenuController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  unsigned int v7;
  id *v8;
  double v9;
  uint64_t KeyPath;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22[24];
  objc_super v23;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = objc_msgSend(v3, "isEditing");
  v23.receiver = v3;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "setEditing:animated:", _, animated);
  v8 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView];
  *(_QWORD *)&v9 = swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView], v22, 0, 0).n128_u64[0];
  if (*v8)
    objc_msgSend(*v8, "setEditing:", _, v9);
  KeyPath = swift_getKeyPath(&unk_2FAE40);
  v11 = swift_getKeyPath(&unk_2FAE68);
  v21 = 1;
  v12 = v3;
  static Published.subscript.setter(&v21, v12, KeyPath, v11);
  if (v7)
  {
    if (!_)
    {
      type metadata accessor for TabMenuProvider(0);
      v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_objectGraph];
      v14 = (void *)objc_opt_self(NSUserDefaults);
      v15 = objc_msgSend(v14, "standardUserDefaults", swift_retain(v13).n128_f64[0]);
      v16 = TabMenuProvider.__allocating_init(asPartOf:userDefaults:interfaceMode:)(v13, v15, 1);
      v17 = *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems];
      swift_bridgeObjectRetain(v17);
      dispatch thunk of TabMenuProvider.storeLibraryTabMenu(_:)(v18);
      swift_release(v16);
      swift_bridgeObjectRelease(v17);
      sub_18ADE0();
      v19 = swift_getKeyPath(&unk_2FAE40);
      v20 = swift_getKeyPath(&unk_2FAE68);
      v21 = 0;
      static Published.subscript.setter(&v21, v12, v19, v20);
    }
  }
}

void sub_18ADE0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, _QWORD *);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __n128 v52;
  uint64_t v53;
  char *v54;
  __n128 v55;
  __n128 v56;
  uint64_t (*v57)(uint64_t, uint64_t, _QWORD *, __n128);
  uint64_t (*v58)(char *, uint64_t, _QWORD *);
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  __n128 v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __n128 v82;
  uint64_t v83;
  void **v84;
  void *v85;
  id v86;
  void *v87;
  id v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  id v108;
  id v109;
  char *v110;
  uint64_t ObjectType;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  _QWORD *v116;
  _BYTE v117[32];
  _QWORD v118[5];
  char v119[24];
  _QWORD v120[4];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = type metadata accessor for ActionMetricsBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E0000);
  __chkstk_darwin(v9);
  v110 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v113 = (char *)&v100 - v12;
  v13 = (_QWORD *)type metadata accessor for TabMenu.Item(0);
  v14 = *(v13 - 1);
  __chkstk_darwin(v13);
  v115 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v114 = (char *)&v100 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v100 - v19;
  *(_QWORD *)&v22 = __chkstk_darwin(v21).n128_u64[0];
  v24 = (char *)&v100 - v23;
  v25 = objc_msgSend(v0, "splitViewController", v22);
  if (!v25)
    return;
  v26 = v25;
  v116 = objc_msgSend(v25, "viewControllerForColumn:", 2);

  if (!v116)
    return;
  v107 = v1;
  v27 = swift_getObjectType();
  v28 = swift_conformsToProtocol2(v27, &protocol descriptor for HostingViewController);
  if (v28)
    v29 = v28;
  else
    v29 = 0;
  if (v28)
    v30 = v116;
  else
    v30 = 0;
  if (!v30)
  {

    return;
  }
  v31 = swift_getObjectType();
  v109 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v31, v29);

  v32 = type metadata accessor for FlowNavigationController();
  v33 = (void *)swift_dynamicCastClass(v109, v32);
  if (!v33)
  {
    v38 = v109;
    goto LABEL_28;
  }
  v108 = objc_msgSend(v33, "topViewController");

  if (!v108)
    return;
  v34 = swift_getObjectType();
  v35 = swift_conformsToProtocol2(v34, &protocol descriptor for NavigationTabIdentifiable);
  v36 = v35 == 0;
  if (v35)
    v37 = (void *)v35;
  else
    v37 = 0;
  v109 = v37;
  v38 = v108;
  if (v36)
    v39 = 0;
  else
    v39 = v108;
  if (!v39)
  {
LABEL_28:

    return;
  }
  v101 = v2;
  v102 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems;
  v40 = *(_QWORD *)&v107[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems];
  v41 = *(_QWORD *)(v40 + 16);
  v116 = v13;
  v112 = v14;
  v100 = v8;
  v106 = v40;
  if (v41)
  {
    v104 = v24;
    v105 = v5;
    v103 = v3;
    v42 = v40 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v43 = swift_getObjectType();
    v44 = v14;
    v45 = *(_QWORD *)(v14 + 72);
    v46 = *(uint64_t (**)(char *, uint64_t, _QWORD *))(v44 + 16);
    swift_bridgeObjectRetain_n(v40, 2);
    do
    {
      v47 = v46(v20, v42, v13);
      v48 = TabMenu.Item.navigationTab.getter(v47);
      v49 = dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.getter(v43, v109);
      if (v49 == 18)
      {
        sub_7C28(v48);
      }
      else
      {
        v50 = v49;
        sub_3D600(v48);
        v51 = static NavigationTab.== infix(_:_:)(v48, v50);
        sub_91F0C(v50);
        sub_7C28(v48);
        sub_7C28(v48);
        if ((v51 & 1) != 0)
        {
          v52 = swift_bridgeObjectRelease(v106);
          v14 = v112;
          v53 = (uint64_t)v113;
          v13 = v116;
          (*(void (**)(char *, char *, _QWORD *, __n128))(v112 + 32))(v113, v20, v116, v52);
          v54 = *(char **)(v14 + 56);
          ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))v54)(v53, 0, 1, v13);
          v3 = v103;
          v5 = v105;
          v24 = v104;
          goto LABEL_32;
        }
      }
      v13 = v116;
      (*(void (**)(char *, _QWORD *))(v112 + 8))(v20, v116);
      v42 += v45;
      --v41;
    }
    while (v41);
    v55 = swift_bridgeObjectRelease(v106);
    v3 = v103;
    v5 = v105;
    v14 = v112;
    v24 = v104;
  }
  else
  {
    v55 = swift_bridgeObjectRetain(v40);
  }
  v54 = *(char **)(v14 + 56);
  v53 = (uint64_t)v113;
  ((void (*)(char *, uint64_t, uint64_t, _QWORD *, __n128))v54)(v113, 1, 1, v13, v55);
LABEL_32:
  v56 = swift_bridgeObjectRelease(v106);
  v57 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD *, __n128))(v14 + 48);
  if (v57(v53, 1, v13, v56) == 1)
  {

    sub_D1D4(v53, (uint64_t *)&unk_3E0000);
  }
  else
  {
    v113 = v54;
    v58 = *(uint64_t (**)(char *, uint64_t, _QWORD *))(v14 + 32);
    v59 = v58(v24, v53, v13);
    if ((TabMenu.Item.enabled.getter(v59) & 1) != 0)
    {
      (*(void (**)(char *, _QWORD *))(v14 + 8))(v24, v13);

    }
    else
    {
      v104 = v24;
      v105 = v5;
      v60 = *(_QWORD *)&v107[v102];
      v61 = _swiftEmptyArrayStorage;
      v118[0] = _swiftEmptyArrayStorage;
      v62 = *(_QWORD *)(v60 + 16);
      v63 = swift_bridgeObjectRetain(v60);
      if (v62)
      {
        v103 = v3;
        v64 = 0;
        v65 = v114;
        while (v64 < *(_QWORD *)(v60 + 16))
        {
          v66 = v14;
          v67 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
          v68 = v13;
          v69 = *(_QWORD *)(v66 + 72);
          v70 = (*(uint64_t (**)(char *, unint64_t, _QWORD *, __n128))(v66 + 16))(v65, v60 + v67 + v69 * v64, v68, v63);
          if ((TabMenu.Item.enabled.getter(v70) & 1) != 0)
          {
            v58(v115, (uint64_t)v65, v68);
            v71 = v118[0];
            if ((swift_isUniquelyReferenced_nonNull_native(v118[0]) & 1) == 0)
            {
              sub_F3550(0, *(_QWORD *)(v71 + 16) + 1, 1);
              v71 = v118[0];
            }
            v73 = *(_QWORD *)(v71 + 16);
            v72 = *(_QWORD *)(v71 + 24);
            if (v73 >= v72 >> 1)
            {
              sub_F3550(v72 > 1, v73 + 1, 1);
              v71 = v118[0];
            }
            *(_QWORD *)(v71 + 16) = v73 + 1;
            v74 = v71 + v67 + v73 * v69;
            v13 = v116;
            v58((char *)v74, (uint64_t)v115, v116);
            v118[0] = v71;
            v14 = v112;
            v65 = v114;
          }
          else
          {
            (*(void (**)(char *, _QWORD *))(v66 + 8))(v65, v68);
            v13 = v68;
            v14 = v66;
          }
          if (v62 == ++v64)
          {
            v61 = (_QWORD *)v118[0];
            v3 = v103;
            goto LABEL_48;
          }
        }
        __break(1u);
      }
      else
      {
LABEL_48:
        v75 = swift_bridgeObjectRelease(v60);
        v76 = (uint64_t)v110;
        if (v61[2])
        {
          (*(void (**)(char *, unint64_t, _QWORD *, __n128))(v14 + 16))(v110, (unint64_t)v61+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v13, v75);
          v77 = 0;
        }
        else
        {
          v77 = 1;
        }
        ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v113)(v76, v77, 1, v13);
        v78 = swift_release(v61);
        v79 = v57(v76, 1, v13, v78);
        if ((_DWORD)v79 == 1)
        {
          sub_D1D4(v76, (uint64_t *)&unk_3E0000);
          v80 = 8;
        }
        else
        {
          v80 = TabMenu.Item.navigationTab.getter(v79);
          (*(void (**)(uint64_t, _QWORD *))(v14 + 8))(v76, v13);
        }
        v81 = v107;
        type metadata accessor for ActionRunnerOptions(0);
        v82 = swift_retain(*(_QWORD *)&v81[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_objectGraph]);
        v83 = BaseObjectGraph.__allocating_init(_:)(v82);
        v120[3] = ObjectType;
        v120[0] = v81;
        v84 = (void **)&v81[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView];
        swift_beginAccess(&v81[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView], v119, 0, 0);
        v85 = *v84;
        sub_D184((uint64_t)v120, (uint64_t)v117, &qword_3D1A70);
        v86 = v85;
        v87 = v81;
        v88 = v86;
        v89 = v87;
        ActionOrigin.init(sender:view:)(v118, v117, v85);
        v90 = ActionRunnerOptions.withActionOrigin(_:)(v118);
        sub_D1D4((uint64_t)v118, (uint64_t *)&unk_3D30E0);

        swift_release(v83);
        sub_D1D4((uint64_t)v120, &qword_3D1A70);
        v91 = *(_QWORD *)&v89[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_actionRunner + 8];
        v92 = swift_getObjectType();
        sub_3D600(v80);
        v93 = Link.Presentation.init(rawValue:)(0);
        LOBYTE(v83) = v93;
        v94 = v100;
        static ActionMetrics.notInstrumented.getter(v93);
        v95 = type metadata accessor for TabChangeAction(0);
        swift_allocObject(v95, *(unsigned int *)(v95 + 48), *(unsigned __int16 *)(v95 + 52));
        v96 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, v80, _swiftEmptyArrayStorage, 0, 0, 0, 0, (_BYTE)v83, v94);
        v118[3] = v95;
        v118[4] = sub_89A0((unint64_t *)&unk_3DFFE0, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
        v118[0] = v96;
        v97 = v105;
        v98 = v101;
        (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v105, enum case for ActionMetricsBehavior.notProcessed(_:), v101);
        v99 = ActionRunner.perform(_:withMetrics:asPartOf:)(v118, v97, v90, v92, v91);
        swift_release(v90);
        swift_release(v99);

        sub_7C28(v80);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v97, v98);
        (*(void (**)(char *, _QWORD *))(v112 + 8))(v104, v13);
        __swift_destroy_boxed_opaque_existential_0(v118);
      }
    }
  }
}

id sub_18B790()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  char v6;
  uint64_t v7;
  id v8;
  void *v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  _QWORD v15[5];
  uint64_t v16;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController____lazy_storage___collectionViewLayout;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController____lazy_storage___collectionViewLayout];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController____lazy_storage___collectionViewLayout];
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(v0, "traitCollection");
    v6 = UITraitCollection.interfaceIdiomIsMac.getter();

    v7 = swift_allocObject(&unk_3870E8, 32, 7);
    *(_BYTE *)(v7 + 16) = v6 & 1;
    *(_QWORD *)(v7 + 24) = v4;
    v8 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
    v15[4] = sub_1967D8;
    v16 = v7;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_1777C8;
    v15[3] = &block_descriptor_54;
    v9 = _Block_copy(v15);
    v10 = v4;
    v11 = objc_msgSend(v8, "initWithSectionProvider:", v9);
    _Block_release(v9);
    swift_release(v16);
    v12 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v11;
    v3 = v11;

    v2 = 0;
  }
  v13 = v2;
  return v3;
}

void *sub_18B8C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  unsigned int *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  Class isa;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v7 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UICollectionLayoutListConfiguration(0, v14);
  v40 = *(_QWORD *)(v17 - 8);
  v41 = v17;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104))(v16, enum case for UICollectionLayoutListConfiguration.Appearance.sidebar(_:), v12, v18);
  UICollectionLayoutListConfiguration.init(appearance:)(v16);
  if ((a1 != 0) | a3 & 1)
    v21 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.firstItemInSection(_:);
  else
    v21 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *v21, v7);
  UICollectionLayoutListConfiguration.headerMode.setter(v11);
  v22 = swift_allocObject(&unk_386FA8, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, a4);
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(sub_1967E4, v22);
  sub_E710(0, &qword_3D9F20, NSCollectionLayoutSection_ptr);
  v23 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v20, v39);
  if (!a1 && (a3 & 1) != 0)
  {
    v24 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v25 = objc_msgSend(v24, "fractionalWidthDimension:", 1.0);
    v26 = objc_msgSend(v24, "estimatedDimension:", 44.0);
    v27 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v25, v26);

    static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    v29 = v28;
    v30 = v27;
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    v32 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v30, v31, 1);

    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v34 = swift_allocObject(v33, 40, 7);
    *(_OWORD *)(v34 + 16) = xmmword_2F11D0;
    *(_QWORD *)(v34 + 32) = v32;
    v42 = v34;
    specialized Array._endMutation()(v34);
    v35 = v42;
    sub_E710(0, &qword_3D1A20, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    v36 = v32;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v23, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v41);
  return v23;
}

id sub_18BC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  void *v19;
  id *v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  char v30[24];
  char v31[24];

  v4 = type metadata accessor for TabMenu.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for OutlineItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v28 - v16;
  a2 += 16;
  swift_beginAccess(a2, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return objc_msgSend(objc_allocWithZone((Class)UISwipeActionsConfiguration), "init");
  v19 = (void *)Strong;
  v29 = v4;
  v20 = (id *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource);
  swift_beginAccess(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource, v30, 0, 0);
  if (!*v20)
  {

    return objc_msgSend(objc_allocWithZone((Class)UISwipeActionsConfiguration), "init");
  }
  v21 = *v20;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v10, a1, v22);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {

    sub_D1D4((uint64_t)v10, (uint64_t *)&unk_3D9B90);
    return objc_msgSend(objc_allocWithZone((Class)UISwipeActionsConfiguration), "init");
  }
  sub_1B79C((uint64_t)v10, (uint64_t)v17, type metadata accessor for OutlineItem);
  sub_1948C4((uint64_t)v17, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v11) != 1)
  {
    sub_190398((uint64_t)v14);
    goto LABEL_10;
  }
  v23 = v29;
  v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v29);
  v25 = TabMenu.Item.navigationTab.getter(v24);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  sub_7C28(v25);
  if ((unint64_t)(v25 - 1) < 0x11)
  {
LABEL_10:
    sub_190398((uint64_t)v17);

    return objc_msgSend(objc_allocWithZone((Class)UISwipeActionsConfiguration), "init");
  }
  v26 = sub_18BEBC((uint64_t)v17);

  sub_190398((uint64_t)v17);
  return v26;
}

id sub_18BEBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  Class isa;
  id v23;
  _QWORD aBlock[5];
  uint64_t v26;
  Swift::String v27;

  v3 = type metadata accessor for OutlineItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v27._object = (void *)0xE000000000000000;
  v7._object = (void *)0x8000000000312370;
  v7._countAndFlagsBits = 0xD00000000000001DLL;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v27._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v27)._object;

  v10 = swift_allocObject(&unk_386FA8, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v1);
  sub_1948C4(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 24) & ~v11;
  v13 = swift_allocObject(&unk_387138, v12 + v5, v11 | 7);
  *(_QWORD *)(v13 + 16) = v10;
  sub_1B79C((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for OutlineItem);
  swift_retain(v10);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  aBlock[4] = sub_196890;
  v26 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDC8;
  aBlock[3] = &block_descriptor_62_0;
  v15 = _Block_copy(aBlock);
  v16 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v14, v15);

  _Block_release(v15);
  v17 = v26;
  swift_release(v10);
  swift_release(v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_2F11D0;
  *(_QWORD *)(v19 + 32) = v16;
  aBlock[0] = v19;
  specialized Array._endMutation()(v19);
  v20 = aBlock[0];
  sub_E710(0, &qword_3D9F28, UIContextualAction_ptr);
  v21 = v16;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  v23 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  return v23;
}

void sub_18C174(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void *v18;
  id v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  v8 = (void *)Strong;
  if (Strong)
  {
    v9 = (_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController);
    swift_beginAccess(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController, v20, 0, 0);
    v10 = v9[3];
    if (v10)
    {
      v11 = v9[4];
      v12 = __swift_project_boxed_opaque_existential_1(v9, v9[3]);
      v13 = *(_QWORD *)(v10 - 8);
      v14 = __chkstk_darwin(v12);
      v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(_BYTE *, __n128))(v13 + 16))(v16, v14);

      v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v16, v10);
    }
    else
    {

      v8 = 0;
    }
  }
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchFieldHeaderView_contentView;
  v18 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchFieldHeaderView_contentView];
  *(_QWORD *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SearchFieldHeaderView_contentView] = v8;
  v19 = v8;

  if (*(_QWORD *)&a1[v17])
    objc_msgSend(a1, "addSubview:");

}

uint64_t sub_18C2CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  id v42;
  _BYTE *v43;
  int EnumCaseMultiPayload;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  _BYTE *v65;
  unsigned int v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _QWORD v84[3];
  void *v85;
  void *v86;

  LODWORD(v76) = a4;
  v75 = a1;
  v79 = type metadata accessor for AutomationSemantics(0);
  v81 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v80 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v82 = (char *)&v64 - v8;
  v71 = type metadata accessor for UICellAccessory.DisplayedState(0, v7);
  v78 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v77 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5468);
  __chkstk_darwin(v10);
  v74 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F10);
  v13 = __chkstk_darwin(v12);
  v73 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions(0, v13);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for UIListContentConfiguration(0);
  v22 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (unsigned __int8 *)&v64 - v29;
  sub_1948C4(a3, (uint64_t)&v64 - v29);
  if (swift_getEnumCaseMultiPayload(v30, v25))
    return sub_190398((uint64_t)v30);
  v64 = v25;
  v65 = v27;
  v67 = a3;
  v72 = v18;
  v70 = v16;
  v32 = *v30;
  UICollectionViewListCell.defaultContentConfiguration()();
  v66 = v32;
  v33 = TabMenu.Group.title.getter(v32);
  UIListContentConfiguration.text.setter(v33);
  v34 = v83;
  v85 = (void *)v83;
  v86 = &protocol witness table for UIListContentConfiguration;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v84);
  v68 = v24;
  v69 = v22;
  (*(void (**)(_QWORD *, char *, uint64_t))(v22 + 16))(boxed_opaque_existential_0, v24, v34);
  v36 = UICollectionViewCell.contentConfiguration.setter(v84);
  static UIBackgroundConfiguration.listSidebarHeader()(v36);
  v37 = type metadata accessor for UIBackgroundConfiguration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v21, 0, 1, v37);
  UICollectionViewCell.backgroundConfiguration.setter(v21);
  v38 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
  v39 = v73;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v73, 1, 1, v38);
  v40 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v41 = v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v74, 1, 1, v40);
  v42 = 0;
  if ((v76 & 1) != 0)
    v42 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v39, 2, v41, v42);
  v43 = v65;
  sub_1948C4(v67, (uint64_t)v65);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v43, v64);
  v46 = v80;
  v45 = v81;
  v76 = v15;
  v47 = v77;
  v48 = v78;
  if (EnumCaseMultiPayload)
  {
    sub_190398((uint64_t)v43);
    v49 = _swiftEmptyArrayStorage;
    v50 = v79;
    v51 = v82;
    v52 = v70;
  }
  else
  {
    v51 = v82;
    v52 = v70;
    if (*v43)
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5480);
      v54 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
      v49 = (_QWORD *)swift_allocObject(v53, ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72), *(unsigned __int8 *)(v54 + 80) | 7);
      *((_OWORD *)v49 + 1) = xmmword_2F03C0;
      v55 = *(void (**)(char *, _QWORD, uint64_t))(v48 + 104);
      v56 = v48;
      v57 = v71;
      v55(v47, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v71);
      static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v47, v72, 0, 0);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v47, v57);
    }
    else
    {
      v49 = _swiftEmptyArrayStorage;
    }
    v50 = v79;
  }
  UICollectionViewListCell.accessories.setter(v49);
  v58 = TabMenu.Group.accessibilityIdentifier.getter(v66);
  v85 = &type metadata for String;
  v84[0] = v58;
  v84[1] = v59;
  static AutomationSemantics.tabBar(tabName:)(v84);
  v60 = __swift_destroy_boxed_opaque_existential_0(v84);
  v61 = v72;
  v62 = UICellAccessory.OutlineDisclosureOptions.isHidden.getter(v60);
  v85 = &type metadata for Bool;
  LOBYTE(v84[0]) = v62 & 1;
  AutomationSemantics.attribute(key:value:)(0x657370616C6C6F63, 0xE900000000000064, v84);
  v63 = *(void (**)(char *, uint64_t))(v45 + 8);
  v63(v46, v50);
  sub_D1D4((uint64_t)v84, &qword_3D1A70);
  UIView.setAutomationSemantics(_:)(v51);
  v63(v51, v50);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v61, v76);
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v68, v83);
}

uint64_t sub_18C894(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  __n128 v55;
  uint64_t v56;
  int EnumCaseMultiPayload;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  char v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  __n128 v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD v155[2];
  void *v156;

  v146 = a2;
  v150 = a1;
  v149 = type metadata accessor for AutomationSemantics(0);
  v144 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v143 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v145 = (char *)&v118 - v6;
  __chkstk_darwin(v7);
  v147 = (char *)&v118 - v8;
  v10 = __chkstk_darwin(v9);
  v148 = (char *)&v118 - v11;
  v129 = type metadata accessor for UICellAccessory.LabelOptions(0, v10);
  v128 = *(_QWORD *)(v129 - 8);
  v12 = __chkstk_darwin(v129);
  v127 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for UICellAccessory.MultiselectOptions(0, v12);
  v135 = *(_QWORD *)(v136 - 8);
  v14 = __chkstk_darwin(v136);
  v134 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for UICellAccessory.ReorderOptions(0, v14);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5468);
  v18 = __chkstk_darwin(v17);
  v141 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for UICellAccessory.DeleteOptions(0, v18);
  v124 = *(_QWORD *)(v125 - 8);
  v20 = __chkstk_darwin(v125);
  v122 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for UICellAccessory.DisplayedState(0, v20);
  v153 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v152 = (char *)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for UICellAccessory(0);
  v154 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v126 = (char *)&v118 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v140 = (char *)&v118 - v25;
  __chkstk_darwin(v26);
  v139 = (char *)&v118 - v27;
  __chkstk_darwin(v28);
  v123 = (char *)&v118 - v29;
  v30 = type metadata accessor for OutlineItem(0);
  v137 = *(_QWORD *)(v30 - 8);
  v31 = *(_QWORD *)(v137 + 64);
  __chkstk_darwin(v30);
  v138 = (uint64_t)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v118 - v33;
  __chkstk_darwin(v35);
  v37 = (char *)&v118 - v36;
  v38 = type metadata accessor for TabMenu.Item(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(_QWORD *)(v39 + 64);
  __chkstk_darwin(v38);
  v130 = (char *)&v118 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v43 = (char *)&v118 - v42;
  __chkstk_darwin(v44);
  v46 = (char *)&v118 - v45;
  sub_1948C4(a3, (uint64_t)v37);
  if (swift_getEnumCaseMultiPayload(v37, v30) != 1)
    return sub_190398((uint64_t)v37);
  v119 = v30;
  v47 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  v47(v46, v37, v38);
  v48 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v118 = v46;
  v48(v43, v46, v38);
  sub_1948C4(a3, (uint64_t)v34);
  v49 = *(unsigned __int8 *)(v39 + 80);
  v50 = (v49 + 16) & ~v49;
  v51 = *(unsigned __int8 *)(v137 + 80);
  v52 = (v40 + v51 + v50) & ~v51;
  v53 = swift_allocObject(&unk_3870C0, v52 + v31, v49 | v51 | 7);
  v47((char *)(v53 + v50), v43, v38);
  sub_1B79C((uint64_t)v34, v53 + v52, type metadata accessor for OutlineItem);
  v54 = v150;
  UICollectionViewCell.configurationUpdateHandler.setter(sub_19673C, v53, v55);
  v56 = v138;
  sub_1948C4(a3, v138);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v56, v119);
  v58 = a3;
  v121 = v38;
  if (EnumCaseMultiPayload == 1)
  {
    v59 = v130;
    v60 = ((uint64_t (*)(char *, uint64_t, uint64_t))v47)(v130, v56, v38);
    v61 = TabMenu.Item.navigationTab.getter(v60);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v59, v38);
    sub_7C28(v61);
    v62 = v39;
    v63 = v151;
    v64 = v142;
    if ((unint64_t)(v61 - 1) >= 0x11)
    {
      v69 = v152;
      v68 = v153;
      (*(void (**)(char *, _QWORD, uint64_t))(v153 + 104))(v152, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v142);
      v70 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      v66 = v141;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v141, 1, 1, v70);
      v71 = v122;
      UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(2, v66, 0, 0);
      v72 = v123;
      static UICellAccessory.delete(displayed:options:actionHandler:)(v69, v71, 0, 0);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v71, v125);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v64);
      v65 = (_QWORD *)sub_20F04C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      v74 = v65[2];
      v73 = v65[3];
      if (v74 >= v73 >> 1)
        v65 = (_QWORD *)sub_20F04C(v73 > 1, v74 + 1, 1, (unint64_t)v65);
      v65[2] = v74 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v154 + 32))((unint64_t)v65+ ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80))+ *(_QWORD *)(v154 + 72) * v74, v72, v63);
    }
    else
    {
      v65 = _swiftEmptyArrayStorage;
      v66 = v141;
    }
  }
  else
  {
    sub_190398(v56);
    v65 = _swiftEmptyArrayStorage;
    v62 = v39;
    v63 = v151;
    v66 = v141;
    v64 = v142;
  }
  if ((sub_18D99C() & 1) != 0)
  {
    v76 = v152;
    v75 = v153;
    (*(void (**)(char *, _QWORD, uint64_t))(v153 + 104))(v152, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v64);
    v77 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v66, 1, 1, v77);
    v78 = v131;
    UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)(2, v66, 0, 2);
    static UICellAccessory.reorder(displayed:options:)(v76, v78);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v78, v133);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v64);
    if ((swift_isUniquelyReferenced_nonNull_native(v65) & 1) == 0)
      v65 = (_QWORD *)sub_20F04C(0, v65[2] + 1, 1, (unint64_t)v65);
    v80 = v65[2];
    v79 = v65[3];
    if (v80 >= v79 >> 1)
      v65 = (_QWORD *)sub_20F04C(v79 > 1, v80 + 1, 1, (unint64_t)v65);
    v65[2] = v80 + 1;
    v63 = v151;
    (*(void (**)(unint64_t, char *, uint64_t))(v154 + 32))((unint64_t)v65+ ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80))+ *(_QWORD *)(v154 + 72) * v80, v139, v151);
  }
  if ((sub_18DB5C() & 1) != 0)
  {
    v82 = v152;
    v81 = v153;
    (*(void (**)(char *, _QWORD, uint64_t))(v153 + 104))(v152, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v64);
    v83 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v66, 1, 1, v83);
    v84 = v134;
    UICellAccessory.MultiselectOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(2, v66, 0, 0);
    static UICellAccessory.multiselect(displayed:options:)(v82, v84);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v84, v136);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v64);
    if ((swift_isUniquelyReferenced_nonNull_native(v65) & 1) == 0)
      v65 = (_QWORD *)sub_20F04C(0, v65[2] + 1, 1, (unint64_t)v65);
    v86 = v65[2];
    v85 = v65[3];
    if (v86 >= v85 >> 1)
      v65 = (_QWORD *)sub_20F04C(v85 > 1, v86 + 1, 1, (unint64_t)v65);
    v65[2] = v86 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v154 + 32))((unint64_t)v65+ ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80))+ *(_QWORD *)(v154 + 72) * v86, v140, v63);
  }
  v87 = sub_18DCEC();
  v120 = v58;
  if (v88)
  {
    v89 = v87;
    v90 = v88;
    v142 = v62;
    v91 = objc_msgSend(v54, "traitCollection");
    v92 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v92 & 1) == 0)
    {
      v95 = v63;
      v97 = v152;
      v96 = v153;
      (*(void (**)(char *, _QWORD, uint64_t))(v153 + 104))(v152, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v64);
      v98 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v66, 1, 1, v98);
      v99 = v127;
      UICellAccessory.LabelOptions.init(isHidden:reservedLayoutWidth:tintColor:font:adjustsFontForContentSizeCategory:)(2, v66, 0, 0, 2);
      v100 = v126;
      static UICellAccessory.label(text:displayed:options:)(v89, v90, v97, v99);
      v101 = swift_bridgeObjectRelease(v90);
      (*(void (**)(char *, uint64_t, __n128))(v128 + 8))(v99, v129, v101);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v64);
      if ((swift_isUniquelyReferenced_nonNull_native(v65) & 1) == 0)
        v65 = (_QWORD *)sub_20F04C(0, v65[2] + 1, 1, (unint64_t)v65);
      v94 = v118;
      v103 = v65[2];
      v102 = v65[3];
      if (v103 >= v102 >> 1)
        v65 = (_QWORD *)sub_20F04C(v102 > 1, v103 + 1, 1, (unint64_t)v65);
      v93 = v142;
      v65[2] = v103 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v154 + 32))((unint64_t)v65+ ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80))+ *(_QWORD *)(v154 + 72) * v103, v100, v95);
      goto LABEL_32;
    }
    v93 = v142;
    swift_bridgeObjectRelease(v90);
  }
  else
  {
    v93 = v62;
  }
  v94 = v118;
LABEL_32:
  v104 = UICollectionViewListCell.accessories.setter(v65);
  v105 = TabMenu.Item.accessibilityIdentifier.getter(v104);
  v156 = &type metadata for String;
  v155[0] = v105;
  v155[1] = v106;
  v107 = v143;
  static AutomationSemantics.tabBar(tabName:)(v155);
  v108 = __swift_destroy_boxed_opaque_existential_0(v155);
  v109 = IndexPath.item.getter(v108);
  v156 = &type metadata for Int;
  v155[0] = v109;
  v110 = v145;
  AutomationSemantics.attribute(key:value:)(0x7865646E69, 0xE500000000000000, v155);
  v111 = *(void (**)(char *, uint64_t))(v144 + 8);
  v112 = v149;
  v111(v107, v149);
  v113 = sub_D1D4((uint64_t)v155, &qword_3D1A70);
  v114 = IndexPath.section.getter(v113);
  v156 = &type metadata for Int;
  v155[0] = v114;
  v115 = v147;
  AutomationSemantics.attribute(key:value:)(0x6E6F6974636573, 0xE700000000000000, v155);
  v111(v110, v112);
  sub_D1D4((uint64_t)v155, &qword_3D1A70);
  v116 = sub_18D99C();
  v156 = &type metadata for Bool;
  LOBYTE(v155[0]) = v116 & 1;
  v117 = v148;
  AutomationSemantics.attribute(key:value:)(0x6564726F65527369, 0xED0000656C626172, v155);
  v111(v115, v112);
  sub_D1D4((uint64_t)v155, &qword_3D1A70);
  UIView.setAutomationSemantics(_:)(v117);
  v111(v117, v112);
  return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v94, v121);
}

uint64_t sub_18D574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  id v31;
  void (*v32)(_QWORD *, _QWORD);
  char v33;
  char v34;
  id v35;
  void (*v36)(_QWORD *, _QWORD);
  id v37;
  void (*v38)(_QWORD *, _QWORD);
  _QWORD *boxed_opaque_existential_0;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[5];

  v44[1] = a2;
  v45 = a4;
  v47 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v4);
  v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v7);
  v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Glyph(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9F00);
  __chkstk_darwin(v14);
  v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UIListContentConfiguration(0);
  v46 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = static UIListContentConfiguration.sidebarCell()(v18);
  v22 = TabMenu.Item.title.getter(v21);
  v23 = UIListContentConfiguration.text.setter(v22);
  if ((TabMenu.Item.useAlternateGlyph.getter(v23) & 1) != 0)
  {
    TabMenu.Item.alternateGlyph.getter();
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10);
    if ((_DWORD)v24 == 1)
    {
      sub_D1D4((uint64_t)v16, (uint64_t *)&unk_3D9F00);
      v25 = 0;
    }
    else
    {
      v25 = Glyph.image.getter(v24);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }
  }
  else
  {
    v26 = TabMenu.Item.glyph.getter();
    v25 = Glyph.image.getter(v26);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v27 = UIListContentConfiguration.image.setter(v25);
  v28 = TabMenu.Item.glyphTint.getter(v27);
  v29 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v29) & 1) != 0)
  {
    if ((v28 & 1) != 0)
    {
      v30 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
      if (!v30)
        goto LABEL_15;
    }
    else
    {
      if (qword_3CF008 != -1)
        swift_once(&qword_3CF008, sub_E0B4);
      v30 = (id)qword_3D08B0;
    }
    if ((UICellConfigurationState.isFocused.getter() & 1) == 0)
    {
      v31 = v30;
      v32 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v48);
      UIListContentConfiguration.ImageProperties.tintColor.setter(v30);
      v32(v48, 0);
    }

  }
LABEL_15:
  v33 = UICellConfigurationState.isEditing.getter();
  sub_1948C4(v45, (uint64_t)v9);
  if ((v33 & 1) != 0)
  {
    v34 = sub_18D99C();
    sub_190398((uint64_t)v9);
    if ((v34 & 1) == 0)
    {
      v35 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
      v36 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v48);
      UIListContentConfiguration.TextProperties.color.setter(v35);
      v36(v48, 0);
      v37 = v35;
      v38 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v48);
      UIListContentConfiguration.ImageProperties.tintColor.setter(v35);
      v38(v48, 0);

    }
  }
  else
  {
    sub_190398((uint64_t)v9);
  }
  v48[3] = v17;
  v48[4] = &protocol witness table for UIListContentConfiguration;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v48);
  v40 = v46;
  (*(void (**)(_QWORD *, char *, uint64_t))(v46 + 16))(boxed_opaque_existential_0, v20, v17);
  v41 = UICollectionViewCell.contentConfiguration.setter(v48);
  static UIBackgroundConfiguration.listSidebarCell()(v41);
  v42 = type metadata accessor for UIBackgroundConfiguration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v6, 0, 1, v42);
  UICollectionViewCell.backgroundConfiguration.setter(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v20, v17);
}

uint64_t sub_18D99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for TabMenu.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1948C4(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v10 = TabMenu.Item.navigationTab.getter(v9);
    v11 = v10 - 1;
    v12 = sub_7C28(v10);
    if (v11 >= 0x11)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 1;
    }
    else
    {
      v13 = TabMenu.Item.navigationTab.getter(v12);
      v14 = TabMenu.Group.items(for:)(1, 1);
      v15 = v14;
      v16 = *(_QWORD *)(v14 + 16);
      if (v16)
      {
        v17 = v14 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
        v18 = *(_QWORD *)(v3 + 72);
        while (1)
        {
          v19 = TabMenu.Item.navigationTab.getter(v14);
          v20 = static NavigationTab.== infix(_:_:)(v19, v13);
          v14 = sub_7C28(v19);
          if ((v20 & 1) != 0)
            break;
          v17 += v18;
          if (!--v16)
            goto LABEL_7;
        }
        swift_bridgeObjectRelease(v15);
        v21 = 1;
      }
      else
      {
LABEL_7:
        swift_bridgeObjectRelease(v15);
        v21 = 0;
      }
      sub_7C28(v13);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_190398((uint64_t)v8);
    return 0;
  }
  return v21;
}

uint64_t sub_18DB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for TabMenu.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1948C4(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v10 = TabMenu.Item.navigationTab.getter(v9);
    v11 = TabMenu.Group.items(for:)(1, 1);
    v12 = v11;
    v13 = *(_QWORD *)(v11 + 16);
    if (v13)
    {
      v14 = v11 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      v15 = *(_QWORD *)(v3 + 72);
      while (1)
      {
        v16 = TabMenu.Item.navigationTab.getter(v11);
        v17 = static NavigationTab.== infix(_:_:)(v16, v10);
        v11 = sub_7C28(v16);
        if ((v17 & 1) != 0)
          break;
        v14 += v15;
        if (!--v13)
          goto LABEL_6;
      }
      swift_bridgeObjectRelease(v12);
      v18 = 1;
    }
    else
    {
LABEL_6:
      swift_bridgeObjectRelease(v12);
      v18 = 0;
    }
    sub_7C28(v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_190398((uint64_t)v8);
    return 0;
  }
  return v18;
}

uint64_t sub_18DCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = type metadata accessor for TabMenu.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1948C4(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) != 1)
  {
    sub_190398((uint64_t)v8);
    return 0;
  }
  v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v10 = TabMenu.Item.navigationTab.getter(v9);
  v11 = v10;
  if ((unint64_t)(v10 - 1) <= 0x10)
  {
    sub_7C28(v10);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  if (!v10)
    goto LABEL_8;
  v12 = StationDetail.episodeCount.getter();
  if (v12 <= 0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_7C28(v11);
    return 0;
  }
  v15[1] = v12;
  v13 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  sub_7C28(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v13;
}

uint64_t sub_18DE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;

  v4 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TabMenu.ActionItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v20 - v12;
  sub_1948C4(a3, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload(v6, v4) != 2)
    return sub_190398((uint64_t)v6);
  v14 = *(double (**)(char *, char *, uint64_t))(v8 + 32);
  v14(v13, v6, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = *(unsigned __int8 *)(v8 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(&unk_387098, v16 + v9, v15 | 7);
  v18.n128_f64[0] = v14((char *)(v17 + v16), v10, v7);
  UICollectionViewCell.configurationUpdateHandler.setter(sub_196608, v17, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_18DFFC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *boxed_opaque_existential_0;
  void (*v24)(_QWORD *, uint64_t, uint64_t);
  uint64_t (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t (*v43)(_QWORD *, _QWORD);
  uint64_t v44;
  id v45;
  void (*v46)(_QWORD *, _QWORD);
  id v47;
  void (*v48)(_QWORD *, _QWORD);
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  NSString v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  _QWORD v71[3];
  uint64_t v72;
  void *v73;

  v70 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v5);
  v67 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for UIBackgroundConfiguration(0);
  v62 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v63 = (char *)&v60 - v10;
  v11 = type metadata accessor for Glyph(0);
  v60 = *(_QWORD *)(v11 - 8);
  v61 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIListContentConfiguration(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v60 - v20;
  static UIListContentConfiguration.sidebarCell()(v19);
  v22 = type metadata accessor for UICellConfigurationState(0);
  v72 = v22;
  v73 = &protocol witness table for UICellConfigurationState;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v71);
  v24 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(boxed_opaque_existential_0, a2, v22);
  UIListContentConfiguration.updated(for:)(v71);
  v25 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  v68 = v14;
  v65 = v15;
  v66 = v25;
  v25(v17, v14);
  v26 = __swift_destroy_boxed_opaque_existential_0(v71);
  v27 = TabMenu.ActionItem.title.getter(v26);
  v28 = UIListContentConfiguration.text.setter(v27);
  v69 = a3;
  v29 = v62;
  v30 = TabMenu.ActionItem.glyph.getter(v28);
  v31 = Glyph.image.getter(v30);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v61);
  v32 = UIListContentConfiguration.image.setter(v31);
  static UIBackgroundConfiguration.listSidebarCell()(v32);
  v72 = v22;
  v73 = &protocol witness table for UICellConfigurationState;
  v33 = __swift_allocate_boxed_opaque_existential_0(v71);
  v24(v33, a2, v22);
  v35 = v63;
  v34 = v64;
  UIBackgroundConfiguration.updated(for:)(v71);
  v36 = v8;
  v37 = *(void (**)(char *, uint64_t))(v29 + 8);
  v37(v36, v34);
  v38 = __swift_destroy_boxed_opaque_existential_0(v71);
  v39 = (void *)UIBackgroundConfiguration.backgroundColor.getter(v38);

  v40 = (void *)objc_opt_self(UIColor);
  if (v39)
    v41 = objc_msgSend(v40, "tintColor");
  else
    v41 = objc_msgSend(v40, "whiteColor");
  v42 = v41;
  v43 = (uint64_t (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v71);
  UIListContentConfiguration.TextProperties.color.setter(v42);
  v44 = v43(v71, 0);
  if ((UICellConfigurationState.isEditing.getter(v44) & 1) != 0)
  {
    v45 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
    v46 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v71);
    UIListContentConfiguration.TextProperties.color.setter(v45);
    v46(v71, 0);
    v47 = v45;
    v48 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v71);
    UIListContentConfiguration.ImageProperties.tintColor.setter(v45);
    v48(v71, 0);

  }
  v49 = v68;
  v72 = v68;
  v73 = &protocol witness table for UIListContentConfiguration;
  v50 = __swift_allocate_boxed_opaque_existential_0(v71);
  (*(void (**)(_QWORD *, char *, uint64_t))(v65 + 16))(v50, v21, v49);
  v51 = v70;
  v52 = UICollectionViewCell.contentConfiguration.setter(v71);
  v53 = v67;
  static UIBackgroundConfiguration.listSidebarCell()(v52);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v53, 0, 1, v34);
  v54 = UICollectionViewCell.backgroundConfiguration.setter(v53);
  TabMenu.ActionItem.accessibilityIdentifier.getter(v54);
  if (v55)
  {
    v57 = v55;
    v58 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v56 = swift_bridgeObjectRelease(v57).n128_u64[0];
  }
  else
  {
    v58 = 0;
  }
  objc_msgSend(v51, "setAccessibilityIdentifier:", v58, v56);

  v37(v35, v34);
  return v66(v21, v49);
}

uint64_t sub_18E440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OutlineItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1948C4(a3, (uint64_t)v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v14);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1948C4(a3, (uint64_t)v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
      v19 = sub_E710(0, &qword_3D9EC0, UICollectionViewListCell_ptr);
      v20 = a6;
    }
    else
    {
      sub_1948C4(a3, (uint64_t)v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
      v19 = sub_E710(0, &qword_3D9EC0, UICollectionViewListCell_ptr);
      v20 = a4;
    }
    v22 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v20, a2, v13, v19, v14);
    sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D9B90);
    sub_190398((uint64_t)v17);
  }
  else
  {
    sub_1948C4(a3, (uint64_t)v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    v21 = type metadata accessor for SidebarHeaderCell();
    v22 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a5, a2, v13, v21, v14);
    sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D9B90);
  }
  return v22;
}

uint64_t sub_18E640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v9 == a2 && v10 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v9, v10, 0);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) == 0)
      return 0;
  }
  v15 = type metadata accessor for SearchFieldHeaderView();
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(a5, a4, v15);
}

_QWORD *sub_18E6F0(unsigned __int8 a1)
{
  void *v1;
  void *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  char v13;
  uint64_t v14;
  void *v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  id v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  __n128 v33;
  unsigned int v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *object;
  uint64_t countAndFlagsBits;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;

  v2 = v1;
  v3 = a1;
  v4 = type metadata accessor for Glyph(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TabMenu.ActionItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3 != 2)
    return _swiftEmptyArrayStorage;
  v12 = objc_msgSend(v2, "traitCollection", v9);
  v13 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v13 & 1) != 0)
    return _swiftEmptyArrayStorage;
  static Glyph.Sidebar.newStation.getter();
  v15 = (void *)objc_opt_self(NSBundle);
  v16 = objc_msgSend(v15, "mainBundle");
  v58._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0x544154535F57454ELL;
  v17._object = (void *)0xEB000000004E4F49;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v58._countAndFlagsBits = 0;
  v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v58);
  object = v19._object;
  countAndFlagsBits = v19._countAndFlagsBits;

  v20 = objc_msgSend(v15, "mainBundle");
  v59._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0x544154535F57454ELL;
  v21._object = (void *)0xEB000000004E4F49;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v59._countAndFlagsBits = 0;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v59);
  v54 = v23._object;
  v55 = v23._countAndFlagsBits;

  v24 = objc_msgSend(v15, "mainBundle");
  v60._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0x4154535F45564153;
  v25._object = (void *)0xEC0000004E4F4954;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v60._countAndFlagsBits = 0;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v60);
  v52 = v27._object;
  v53 = v27._countAndFlagsBits;

  v28 = objc_msgSend(v15, "mainBundle");
  v29._countAndFlagsBits = 0xD00000000000001DLL;
  v61._object = (void *)0xE000000000000000;
  v29._object = (void *)0x8000000000312310;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v61._countAndFlagsBits = 0;
  v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v61);

  v32 = swift_allocObject(&unk_386FA8, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, v2);
  v33 = swift_retain(v32);
  v34 = static Link.Presentation.textFollowsTintColor.getter(v33);
  v35 = Link.Presentation.init(rawValue:)(0);
  v36 = v35;
  v37 = Link.Presentation.init(rawValue:)(v35);
  if (Link.Presentation.init(rawValue:)(v37 & v34) != v34)
    LOBYTE(v36) = Link.Presentation.init(rawValue:)(v36 | v34);
  v38 = type metadata accessor for TextFieldAction(0);
  swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  BYTE2(v51) = v36;
  LOWORD(v51) = 1;
  v39 = TextFieldAction.init(title:message:okButtonTitle:placeholder:textFieldContent:isCancelable:keyboardStyle:presentationStyle:okClosure:)(v55, v54, 0, 0, v53, v52, v31._countAndFlagsBits, v31._object, 0, 0, v51, sub_196320, v32);
  swift_release(v32);
  v40 = swift_allocObject(&unk_386FA8, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16, v2);
  v41 = swift_retain(v40);
  TextFieldAction.cancelClosure.setter(sub_196328, v40, v41);
  v42 = swift_release(v40);
  TabMenu.ActionItem.init(glyph:title:action:accessibilityIdentifier:)(v6, countAndFlagsBits, object, v39, 0xD000000000000011, 0x8000000000312330, v42);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E88);
  v44 = type metadata accessor for OutlineItem(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(_QWORD *)(v45 + 72);
  v47 = *(unsigned __int8 *)(v45 + 80);
  v48 = (v47 + 32) & ~v47;
  v14 = swift_allocObject(v43, v48 + v46, v47 | 7);
  *(_OWORD *)(v14 + 16) = xmmword_2F03C0;
  v49 = v14 + v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v49, v11, v7);
  swift_storeEnumTagMultiPayload(v49, v44, 2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return (_QWORD *)v14;
}

uint64_t sub_18EB48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v23;

  v2 = type metadata accessor for TabMenu.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1948C4(a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v10 = TabMenu.Item.navigationTab.getter(v9);
    v11 = v10 - 1;
    v12 = sub_7C28(v10);
    if (v11 >= 0x11)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 1;
    }
    else
    {
      v13 = TabMenu.Item.navigationTab.getter(v12);
      v14 = TabMenu.Group.items(for:)(1, 1);
      v15 = v14;
      v16 = *(_QWORD *)(v14 + 16);
      if (v16)
      {
        v17 = v14 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
        v18 = *(_QWORD *)(v3 + 72);
        while (1)
        {
          v19 = TabMenu.Item.navigationTab.getter(v14);
          v20 = static NavigationTab.== infix(_:_:)(v19, v13);
          v14 = sub_7C28(v19);
          if ((v20 & 1) != 0)
            break;
          v17 += v18;
          if (!--v16)
            goto LABEL_7;
        }
        swift_bridgeObjectRelease(v15);
        v21 = 1;
      }
      else
      {
LABEL_7:
        swift_bridgeObjectRelease(v15);
        v21 = 0;
      }
      sub_7C28(v13);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_190398((uint64_t)v8);
    return 0;
  }
  return v21;
}

void sub_18ED08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  unint64_t v69;
  unint64_t v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  __n128 v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t, __n128);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  __n128 v116;
  int v117;
  void (*v118)(char *, uint64_t, uint64_t);
  unint64_t v119;
  unint64_t v120;
  id v121;
  uint64_t v122;
  id v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  double v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  unint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  unint64_t v163;
  char *Strong;
  uint64_t v165;
  unint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char v175[8];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E0000);
  __chkstk_darwin(v3);
  v160 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v131 - v6;
  v171 = type metadata accessor for TabMenu.Item(0);
  v8 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v10 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v159 = (char *)&v131 - v12;
  __chkstk_darwin(v13);
  v153 = (char *)&v131 - v14;
  __chkstk_darwin(v15);
  v172 = (char *)&v131 - v16;
  __chkstk_darwin(v17);
  v161 = (char *)&v131 - v18;
  __chkstk_darwin(v19);
  v149 = (char *)&v131 - v20;
  v170 = type metadata accessor for OutlineItem(0);
  v135 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v22 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v169 = (uint64_t)&v131 - v24;
  __chkstk_darwin(v25);
  v152 = (char *)&v131 - v26;
  __chkstk_darwin(v27);
  v168 = (uint64_t)&v131 - v28;
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E80);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v134 = (char *)&v131 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v133 = (char *)&v131 - v31;
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9EC8);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v145 = (char *)&v131 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9ED0);
  v139 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v154 = (char *)&v131 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9ED8);
  __chkstk_darwin(v34);
  v148 = (char *)&v131 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a2 + 16, v175, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (!Strong)
    return;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9EE0);
  v37 = NSDiffableDataSourceTransaction.sectionTransactions.getter(v36);
  v38 = v37;
  v142 = *(_QWORD *)(v37 + 16);
  if (!v142)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56))(v148, 1, 1, v143);
LABEL_77:

    v130 = v38;
    goto LABEL_78;
  }
  v39 = 0;
  v132 = &Strong[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryActionController];
  v162 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems;
  v131 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_objectGraph;
  v40 = v139;
  v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v144 = v37;
  v141 = v37 + v41;
  v136 = v7;
  v155 = v10;
  v42 = v153;
  v151 = v22;
  v43 = v143;
  v44 = v154;
  while (1)
  {
    if (v39 >= *(_QWORD *)(v144 + 16))
      goto LABEL_81;
    v45 = *(_QWORD *)(v40 + 72);
    v150 = v39;
    v46 = v148;
    (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v148, v141 + v45 * v39, v43);
    v140 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
    v140(v46, 0, 1, v43);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v46, 1, v43) == 1)
    {

      v130 = v144;
LABEL_78:
      swift_bridgeObjectRelease(v130);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v44, v46, v43);
    v47 = v145;
    v48 = v40;
    NSDiffableDataSourceSectionTransaction.difference.getter(v43);
    v49 = v44;
    v50 = sub_10EDC(&qword_3D9EE8, &qword_3D9EC8, (uint64_t)&protocol conformance descriptor for CollectionDifference<A>);
    v51 = v147;
    dispatch thunk of Collection.startIndex.getter(v147, v50);
    dispatch thunk of Collection.endIndex.getter(&v173, v51, v50);
    v53 = v173;
    v52 = v174;
    (*(void (**)(char *, uint64_t))(v146 + 8))(v47, v51);
    if (v52 != v53)
      break;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v43);
    v40 = v48;
    v44 = v49;
LABEL_5:
    v39 = v150 + 1;
    if (v150 + 1 == v142)
    {
      v38 = v144;
      v140(v148, 1, 1, v43);
      goto LABEL_77;
    }
  }
  NSDiffableDataSourceSectionTransaction.sectionIdentifier.getter(&v174, v43);
  if (!(_BYTE)v174)
  {
    v44 = v49;
    v40 = v139;
    v71 = *(void (**)(char *, uint64_t))(v139 + 8);
LABEL_73:
    v43 = v143;
    v71(v44, v143);
    goto LABEL_5;
  }
  v54 = (uint64_t)v152;
  v55 = (uint64_t)v151;
  v56 = (uint64_t)v136;
  if (v174 != 1)
  {
    v72 = v134;
    v44 = v154;
    NSDiffableDataSourceSectionTransaction.finalSnapshot.getter(v143);
    v73 = v138;
    v74 = NSDiffableDataSourceSectionSnapshot.items.getter(v138);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v72, v73);
    v75 = *(_QWORD *)(v74 + 16);
    if (v75)
    {
      v76 = v135;
      v77 = v74 + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
      swift_bridgeObjectRetain(v74);
      v78 = *(_QWORD *)(v76 + 72);
      v79 = _swiftEmptyArrayStorage;
      v80 = v171;
      while (1)
      {
        v81 = v169;
        sub_1948C4(v77, v169);
        sub_1948C4(v81, v55);
        if (swift_getEnumCaseMultiPayload(v55, v170) == 1)
        {
          v82 = v155;
          v83 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32))(v155, v55, v80);
          v84 = TabMenu.Item.navigationTab.getter(v83);
          v85 = v84;
          if ((unint64_t)(v84 - 1) >= 0x11)
          {
            if (v84)
            {
              v86 = StationDetail.uuid.getter(v84);
              v88 = v87;
              sub_7C28(v85);
              (*(void (**)(char *, uint64_t))(v8 + 8))(v155, v171);
              sub_190398(v169);
              if ((swift_isUniquelyReferenced_nonNull_native(v79) & 1) == 0)
                v79 = sub_20FBCC(0, v79[2] + 1, 1, v79);
              v90 = v79[2];
              v89 = v79[3];
              if (v90 >= v89 >> 1)
                v79 = sub_20FBCC((_QWORD *)(v89 > 1), v90 + 1, 1, v79);
              v79[2] = v90 + 1;
              v91 = &v79[2 * v90];
              v91[4] = v86;
              v91[5] = v88;
              v80 = v171;
              v55 = (uint64_t)v151;
              v44 = v154;
              goto LABEL_30;
            }
            v80 = v171;
            (*(void (**)(char *, uint64_t))(v8 + 8))(v155, v171);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v8 + 8))(v82, v80);
            sub_7C28(v85);
          }
          v55 = (uint64_t)v151;
          v44 = v154;
        }
        else
        {
          sub_190398(v55);
        }
        sub_190398(v169);
LABEL_30:
        v77 += v78;
        if (!--v75)
        {
          v94 = swift_bridgeObjectRelease_n(v74, 2);
          if (v79[2])
            goto LABEL_44;
LABEL_67:
          v40 = v139;
          v43 = v143;
          (*(void (**)(char *, uint64_t, __n128))(v139 + 8))(v44, v143, v94);
          swift_bridgeObjectRelease(v79);
          goto LABEL_68;
        }
      }
    }
    v94 = swift_bridgeObjectRelease(v74);
    v79 = _swiftEmptyArrayStorage;
    if (!_swiftEmptyArrayStorage[2])
      goto LABEL_67;
LABEL_44:
    v95 = *((_QWORD *)v132 + 3);
    v96 = *((_QWORD *)v132 + 4);
    __swift_project_boxed_opaque_existential_1(v132, v95);
    v97 = v96;
    v44 = v154;
    dispatch thunk of LibraryActionControllerProtocol.changeOrder(stations:)(v79, v95, v97);
    v98 = swift_bridgeObjectRelease(v79);
    v40 = v139;
    v43 = v143;
    (*(void (**)(char *, uint64_t, __n128))(v139 + 8))(v44, v143, v98);
LABEL_68:
    v42 = v153;
    goto LABEL_5;
  }
  v57 = v133;
  NSDiffableDataSourceSectionTransaction.finalSnapshot.getter(v143);
  v58 = v138;
  v59 = NSDiffableDataSourceSectionSnapshot.items.getter(v138);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v57, v58);
  v60 = *(_QWORD *)(v59 + 16);
  if (v60)
  {
    v61 = v135;
    v62 = v59 + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
    swift_bridgeObjectRetain(v59);
    v63 = *(_QWORD *)(v61 + 72);
    v64 = (char *)_swiftEmptyArrayStorage;
    do
    {
      v65 = v168;
      sub_1948C4(v62, v168);
      sub_1948C4(v65, v54);
      if (swift_getEnumCaseMultiPayload(v54, v170) == 1)
      {
        v66 = v171;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v56, v54, v171);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v56, 0, 1, v66);
      }
      else
      {
        v66 = v171;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v56, 1, 1, v171);
        sub_190398(v54);
      }
      sub_190398(v168);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v56, 1, v66) == 1)
      {
        sub_D1D4(v56, (uint64_t *)&unk_3E0000);
      }
      else
      {
        v67 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
        v68 = v149;
        v67(v149, v56, v66);
        v67(v161, (uint64_t)v68, v66);
        if ((swift_isUniquelyReferenced_nonNull_native(v64) & 1) == 0)
          v64 = (char *)sub_20FCD8(0, *((_QWORD *)v64 + 2) + 1, 1, (unint64_t)v64);
        v70 = *((_QWORD *)v64 + 2);
        v69 = *((_QWORD *)v64 + 3);
        if (v70 >= v69 >> 1)
          v64 = (char *)sub_20FCD8(v69 > 1, v70 + 1, 1, (unint64_t)v64);
        *((_QWORD *)v64 + 2) = v70 + 1;
        v67(&v64[((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v70], (uint64_t)v161, v171);
        v54 = (uint64_t)v152;
      }
      v62 += v63;
      --v60;
    }
    while (v60);
    v92 = swift_bridgeObjectRelease_n(v59, 2);
    v93 = v171;
    v42 = v153;
  }
  else
  {
    v92 = swift_bridgeObjectRelease(v59);
    v64 = (char *)_swiftEmptyArrayStorage;
    v93 = v171;
  }
  v158 = *((_QWORD *)v64 + 2);
  if (!v158)
  {
    swift_bridgeObjectRelease(v64);
    v100 = _swiftEmptyArrayStorage;
LABEL_70:
    v121 = Strong;
    v122 = *(_QWORD *)&Strong[v162];
    *(_QWORD *)&Strong[v162] = v100;
    swift_bridgeObjectRetain(v100);
    v123 = objc_msgSend(v121, "traitCollection", swift_bridgeObjectRelease(v122).n128_f64[0]);
    v124 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v124 & 1) != 0)
    {
      type metadata accessor for TabMenuProvider(0);
      v125 = *(_QWORD *)&Strong[v131];
      v126 = objc_opt_self(NSUserDefaults);
      *(_QWORD *)&v127 = swift_retain(v125).n128_u64[0];
      v128 = (void *)v126;
      v42 = v153;
      v129 = TabMenuProvider.__allocating_init(asPartOf:userDefaults:interfaceMode:)(v125, objc_msgSend(v128, "standardUserDefaults", v127), 1);
      dispatch thunk of TabMenuProvider.storeLibraryTabMenu(_:)(v100);
      swift_release(v129);
    }
    swift_bridgeObjectRelease(v100);
    v40 = v139;
    v71 = *(void (**)(char *, uint64_t))(v139 + 8);
    v44 = v154;
    goto LABEL_73;
  }
  v99 = 0;
  v163 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v156 = &v64[v163];
  v100 = _swiftEmptyArrayStorage;
  v157 = v64;
  while (v99 < *((_QWORD *)v64 + 2))
  {
    v101 = *(_QWORD *)(v8 + 72);
    v102 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
    v102(v172, &v156[v101 * v99], v93, v92);
    v103 = *(_QWORD *)&Strong[v162];
    v104 = *(_QWORD *)(v103 + 16);
    if (v104)
    {
      v166 = v99;
      v167 = v100;
      v105 = v8;
      v106 = v103 + v163;
      v165 = v103;
      swift_bridgeObjectRetain_n(v103, 2);
      while (1)
      {
        v107 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v42, v106, v93);
        v108 = v93;
        v109 = TabMenu.Item.navigationTab.getter(v107);
        v110 = TabMenu.Item.navigationTab.getter(v109);
        v111 = static NavigationTab.== infix(_:_:)(v109, v110);
        sub_7C28(v110);
        sub_7C28(v109);
        if ((v111 & 1) != 0)
          break;
        (*(void (**)(char *, uint64_t))(v105 + 8))(v42, v108);
        v106 += v101;
        --v104;
        v93 = v108;
        if (!v104)
        {
          v103 = v165;
          v112 = swift_bridgeObjectRelease(v165);
          v113 = 1;
          v114 = (uint64_t)v160;
          goto LABEL_58;
        }
      }
      v103 = v165;
      v115 = swift_bridgeObjectRelease(v165);
      v114 = (uint64_t)v160;
      (*(void (**)(char *, char *, uint64_t, __n128))(v105 + 32))(v160, v42, v108, v115);
      v113 = 0;
      v93 = v108;
LABEL_58:
      v8 = v105;
      v99 = v166;
      v100 = v167;
    }
    else
    {
      v112 = swift_bridgeObjectRetain(*(_QWORD *)&Strong[v162]);
      v113 = 1;
      v114 = (uint64_t)v160;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v114, v113, 1, v93, v112);
    v116 = swift_bridgeObjectRelease(v103);
    v117 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v114, 1, v93, v116);
    v64 = v157;
    if (v117 == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v172, v93);
      sub_D1D4(v114, (uint64_t *)&unk_3E0000);
    }
    else
    {
      v118 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
      v118(v159, v114, v93);
      if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0)
        v100 = (_QWORD *)sub_20FCD8(0, v100[2] + 1, 1, (unint64_t)v100);
      v120 = v100[2];
      v119 = v100[3];
      if (v120 >= v119 >> 1)
        v100 = (_QWORD *)sub_20FCD8(v119 > 1, v120 + 1, 1, (unint64_t)v100);
      v100[2] = v120 + 1;
      v93 = v171;
      v118((char *)v100 + v163 + v120 * v101, (uint64_t)v159, v171);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v172, v93);
      v42 = v153;
    }
    if (++v99 == v158)
    {
      swift_bridgeObjectRelease(v64);
      goto LABEL_70;
    }
  }
  __break(1u);
LABEL_81:
  __break(1u);
}

void sub_18FC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[24];

  v8 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v8);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for TabMenu.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a5 += 16;
  swift_beginAccess(a5, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v16 = (char *)Strong;
    sub_1948C4(a6, (uint64_t)v10);
    if (swift_getEnumCaseMultiPayload(v10, v8) != 1)
    {
      sub_190398((uint64_t)v10);
      goto LABEL_9;
    }
    v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v18 = TabMenu.Item.navigationTab.getter(v17);
    v19 = v18;
    if ((unint64_t)(v18 - 1) >= 0x11)
    {
      if (!v18)
      {
LABEL_7:
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_9:

        return;
      }
      __swift_project_boxed_opaque_existential_1(&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryActionController], *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryActionController + 24]);
      swift_retain(v19);
      v21 = StationDetail.uuid.getter(v20);
      v23 = v22;
      dispatch thunk of LibraryActionControllerProtocol.delete(station:)(v21);
      swift_bridgeObjectRelease(v23);
      sub_7C28(v19);
    }
    sub_7C28(v19);
    goto LABEL_7;
  }
}

void sub_18FDC8(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6;
  void (*v7)(id, id, uint64_t (*)(char), uint64_t);
  void *v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject(&unk_387188, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain(v6);
  v11 = a2;
  v10 = a3;
  v7(v11, v10, sub_19691C, v9);
  swift_release(v6);
  swift_release(v9);

}

id SidebarMenuController.selectedViewController.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, "splitViewController");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "viewControllerForColumn:", 2);

  return v3;
}

uint64_t sub_18FEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  __n128 v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  _BYTE v50[12];
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[24];

  v61 = a1;
  v59 = a2;
  v3 = type metadata accessor for TabMenu.Item(0);
  v62 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = &v50[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for OutlineItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v50[-v11];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F38);
  __chkstk_darwin(v13);
  v15 = &v50[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E28);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v58 = &v50[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = (id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource);
  v20 = swift_beginAccess(v19, v63, 0, 0);
  if (!*v19)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(v15, 1, 1, v16, v20);
    goto LABEL_21;
  }
  v21 = *v19;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v22);

  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
LABEL_21:
    sub_D1D4((uint64_t)v15, &qword_3D9F38);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v59, 1, 1, v6);
  }
  v55 = v17;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v58, v15, v16);
  v56 = v16;
  v23 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v16);
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24)
  {
    v44 = 1;
    v47 = v55;
    v46 = v56;
    v42 = v23;
    v43 = v59;
    goto LABEL_25;
  }
  v25 = v23 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v57 = v61 - 1;
  v52 = v23;
  v53 = v7;
  v26 = *(_QWORD *)(v7 + 72);
  swift_bridgeObjectRetain(v23);
  v60 = v6;
  do
  {
    sub_1948C4(v25, (uint64_t)v12);
    sub_1948C4((uint64_t)v12, (uint64_t)v9);
    if (swift_getEnumCaseMultiPayload(v9, v6) != 1)
    {
      sub_190398((uint64_t)v9);
      goto LABEL_6;
    }
    v27 = v3;
    v28 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v62 + 32))(v5, v9, v3);
    v29 = TabMenu.Item.navigationTab.getter(v28);
    v30 = v29;
    if ((unint64_t)(v29 - 1) < 0x11)
      goto LABEL_17;
    if (!v29)
      goto LABEL_18;
    if (v57 < 0x11)
      goto LABEL_17;
    if (!v61)
    {
      sub_3D600(0);
LABEL_17:
      v29 = sub_7C28(v30);
LABEL_18:
      v40 = TabMenu.Item.navigationTab.getter(v29);
      v41 = static NavigationTab.== infix(_:_:)(v40, v61);
      sub_7C28(v40);
      v3 = v27;
      (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v5, v27);
      v6 = v60;
      if ((v41 & 1) != 0)
        goto LABEL_19;
      goto LABEL_6;
    }
    v31 = swift_retain_n(v61, 2);
    v32 = StationDetail.uuid.getter(v31);
    v54 = v33;
    v35 = StationDetail.uuid.getter(v32);
    v36 = v34;
    if (v32 == v35 && v54 == v34)
    {
      swift_bridgeObjectRelease_n(v54, 2);
      v49 = v61;
      sub_7C28(v61);
      sub_7C28(v49);
      sub_7C28(v30);
      (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v5, v27);
      v6 = v60;
LABEL_19:
      v42 = v52;
      swift_bridgeObjectRelease(v52);
      v43 = v59;
      sub_1B79C((uint64_t)v12, v59, type metadata accessor for OutlineItem);
      v44 = 0;
      goto LABEL_23;
    }
    v37 = v32;
    v38 = v54;
    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v54, v35, v34, 0);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v36);
    v39 = v61;
    sub_7C28(v61);
    sub_7C28(v39);
    sub_7C28(v30);
    v3 = v27;
    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v5, v27);
    v6 = v60;
    if ((v51 & 1) != 0)
      goto LABEL_19;
LABEL_6:
    sub_190398((uint64_t)v12);
    v25 += v26;
    --v24;
  }
  while (v24);
  v42 = v52;
  swift_bridgeObjectRelease(v52);
  v44 = 1;
  v43 = v59;
LABEL_23:
  v7 = v53;
  v47 = v55;
  v46 = v56;
LABEL_25:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v43, v44, 1, v6);
  v48 = swift_bridgeObjectRelease(v42);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v47 + 8))(v58, v46, v48);
}

uint64_t sub_190398(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OutlineItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SidebarMenuController.sidebarItem(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OutlineItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v19 - v12;
  sub_18FEDC(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_D1D4((uint64_t)v6, (uint64_t *)&unk_3D9B90);
  }
  else
  {
    sub_1B79C((uint64_t)v6, (uint64_t)v13, type metadata accessor for OutlineItem);
    sub_1B79C((uint64_t)v13, (uint64_t)v10, type metadata accessor for OutlineItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v7);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v15 = type metadata accessor for TabMenu.Item(0);
        v16 = *(_QWORD *)(v15 - 8);
        (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v10, v15);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v15);
      }
      sub_190398((uint64_t)v10);
    }
  }
  v18 = type metadata accessor for TabMenu.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
}

uint64_t SidebarMenuController.selectedNavigationTab.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void **v18;
  void *v19;
  void **v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  int v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];
  char v52[24];

  v1 = type metadata accessor for TabMenu.Item(0);
  v47 = *(_QWORD *)(v1 - 8);
  v48 = v1;
  __chkstk_darwin(v1);
  v46 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v3);
  v5 = (id *)((char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for OutlineItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v49 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v50 = (uint64_t)&v45 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource, v52, 0, 0);
  v19 = *v18;
  if (!*v18)
    return 18;
  v20 = (void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView, v51, 0, 0);
  v21 = *v20;
  if (!v21)
    return 18;
  v22 = v19;
  v23 = v21;
  v24 = objc_msgSend(v23, "indexPathsForSelectedItems");
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_9:

    v30 = (uint64_t *)&unk_3D1A00;
    v31 = (uint64_t)v13;
LABEL_10:
    sub_D1D4(v31, v30);
    return 18;
  }
  v25 = v24;
  v45 = v22;
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v14);

  if (*(_QWORD *)(v26 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v13, v26 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
    v27 = 0;
  }
  else
  {
    v27 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v27, 1, v14);
  v28 = swift_bridgeObjectRelease(v26);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v15 + 48))(v13, 1, v14, v28);
  v22 = v45;
  if (v29 == 1)
    goto LABEL_9;
  v34.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v5, v17, v34);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);

    v30 = (uint64_t *)&unk_3D9B90;
    v31 = (uint64_t)v5;
    goto LABEL_10;
  }
  v35 = (uint64_t)v5;
  v36 = v50;
  sub_1B79C(v35, v50, type metadata accessor for OutlineItem);
  v37 = v49;
  sub_1948C4(v36, v49);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v37, v6);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v39 = v47;
      v40 = v23;
      v41 = v46;
      v42 = v37;
      v43 = v48;
      v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 32))(v46, v42, v48);
      v32 = TabMenu.Item.navigationTab.getter(v44);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v43);
      sub_190398(v36);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return v32;
    }

    sub_190398(v36);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_190398(v37);
  }
  else
  {

    sub_190398(v36);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return 18;
}

uint64_t sub_1909A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t Strong;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  __n128 v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  int v36;
  unsigned __int8 v37;
  char *v38;
  int v39;
  unsigned __int8 v40;
  char *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v52;
  void *object;
  uint64_t countAndFlagsBits;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char v60[24];
  Swift::String v61;

  v6 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v6);
  v8 = (char *)&object - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowDestinationPageHeader(0);
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&object - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FlowPresentationContext(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = (char *)&object - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FlowDestination(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (void **)((char *)&object - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  a3 += 16;
  swift_beginAccess(a3, v60, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return 0;
  v20 = (char *)Strong;
  if (!a2
    || String.count.getter(a1, a2) <= 0
    || (v55 = v11,
        v56 = v8,
        v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryActionController
                            + 24],
        v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryActionController
                            + 32],
        __swift_project_boxed_opaque_existential_1(&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryActionController], v21), (v23 = dispatch thunk of LibraryActionControllerProtocol.create(station:)(a1, a2, v21, v22)) == 0))
  {

    return 0;
  }
  v24 = v23;
  v25 = *(_QWORD *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection];
  *(_QWORD *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection] = v23;
  swift_retain(v23);
  v26 = sub_91F0C(v25);
  *v18 = StationDetail.uuid.getter(v26);
  v18[1] = v27;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for FlowDestination.stationSettings(_:), v15);
  v28 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v61._object = (void *)0xE000000000000000;
  v29._object = (void *)0x8000000000312350;
  v29._countAndFlagsBits = 0xD000000000000010;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v61._countAndFlagsBits = 0;
  v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v61);
  object = v31._object;
  countAndFlagsBits = v31._countAndFlagsBits;

  v32.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v13 + 104))(v59, enum case for FlowPresentationContext.infer(_:), v12);
  v33 = static Link.Presentation.textFollowsTintColor.getter(v32);
  v34 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  v35 = Link.Presentation.init(rawValue:)(0);
  v36 = Link.Presentation.init(rawValue:)(v35);
  v37 = Link.Presentation.init(rawValue:)(v36 & v33);
  v38 = v55;
  if (v37 != v33)
    v35 = Link.Presentation.init(rawValue:)(v35 | v33);
  v39 = Link.Presentation.init(rawValue:)(v35);
  v40 = Link.Presentation.init(rawValue:)(v39 & v34);
  v41 = v56;
  if (v40 != v34)
    v35 = Link.Presentation.init(rawValue:)(v35 | v34);
  v42 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v57 + 104))(v38, enum case for FlowDestinationPageHeader.standard(_:), v58);
  static ActionMetrics.notInstrumented.getter(v42);
  v44 = type metadata accessor for FlowAction(0, v43);
  swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
  v45 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v18, 0, 0, countAndFlagsBits, object, v59, 0, v35, v38, v41);
  v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9E90);
  v47 = swift_allocObject(v46, 72, 7);
  *(_OWORD *)(v47 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v47 + 56) = v44;
  *(_QWORD *)(v47 + 64) = sub_89A0(&qword_3D22B0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
  *(_QWORD *)(v47 + 32) = v45;
  swift_retain(v24);
  swift_retain(v45);
  v48 = Link.Presentation.init(rawValue:)(0);
  LOBYTE(v44) = v48;
  static ActionMetrics.notInstrumented.getter(v48);
  v49 = type metadata accessor for TabChangeAction(0);
  swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
  LOBYTE(v52) = v44;
  v50 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, v24, v47, 0, 0, 0, 0, v52, v41);

  swift_release(v45);
  swift_release(v24);
  return v50;
}

uint64_t sub_190DE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE v13[24];

  v2 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong
    || (v6 = (void *)Strong,
        v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_previousNavigationTab),
        sub_91F1C(v7),
        v6,
        v7 == 18))
  {
    v7 = 8;
  }
  v8 = Link.Presentation.init(rawValue:)(0);
  v9 = v8;
  static ActionMetrics.notInstrumented.getter(v8);
  v10 = type metadata accessor for TabChangeAction(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  return TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, v7, _swiftEmptyArrayStorage, 0, 0, 0, 0, v9, v4);
}

void SidebarMenuController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.SidebarMenuController", 45, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

void SidebarMenuController.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id *v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  uint64_t (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  int EnumCaseMultiPayload;
  char *v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  id ObjectType;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char v69[16];
  _BYTE v70[32];
  _QWORD v71[5];
  _QWORD v72[4];
  char v73[32];

  v3 = v2;
  v62 = a1;
  ObjectType = (id)swift_getObjectType();
  v65 = type metadata accessor for ActionMetricsBehavior(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v63 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TabMenu.Item(0);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  __chkstk_darwin(v9);
  v66 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for OutlineItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v60 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v60 - v22;
  v24 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource];
  swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource], v73, 0, 0);
  if (*v24)
  {
    v25 = *v24;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v13, a2, v26);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {

      sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D9B90);
      return;
    }
    sub_1B79C((uint64_t)v13, (uint64_t)v23, type metadata accessor for OutlineItem);
    if ((objc_msgSend(v3, "isEditing") & 1) != 0)
    {
      sub_1948C4((uint64_t)v23, (uint64_t)v17);
      if (swift_getEnumCaseMultiPayload(v17, v14) == 1)
      {
        v27 = v67;
        v28 = *(uint64_t (**)(char *, char *, uint64_t))(v67 + 32);
        ObjectType = v25;
        v29 = v66;
        v30 = v68;
        v31 = v28(v66, v17, v68);
        v32 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems;
        v33 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems];
        __chkstk_darwin(v31);
        v58 = v29;
        LOBYTE(v59) = 1;
        swift_bridgeObjectRetain(v33);
        v34 = sub_187728((void (*)(uint64_t))sub_194908, (uint64_t)(&v60 - 4), v33, (uint64_t)v69, (uint64_t (*)(_QWORD))&type metadata accessor for TabMenu.Item, (void (*)(BOOL, unint64_t, uint64_t))sub_F3550);
        swift_bridgeObjectRelease(v33);
        v35 = *(_QWORD *)&v3[v32];
        *(_QWORD *)&v3[v32] = v34;

        v36 = swift_bridgeObjectRelease(v35);
        (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v29, v30, v36);
        v37 = (uint64_t)v23;
      }
      else
      {
        sub_190398((uint64_t)v23);

        v37 = (uint64_t)v17;
      }
    }
    else
    {
      sub_1948C4((uint64_t)v23, (uint64_t)v20);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v14);
      if (!EnumCaseMultiPayload)
      {
        sub_190398((uint64_t)v23);

        return;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v39 = v66;
        (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v20, v68);
        type metadata accessor for ActionRunnerOptions(0);
        v40 = swift_retain(*(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_objectGraph]);
        v41 = BaseObjectGraph.__allocating_init(_:)(v40);
        v72[3] = ObjectType;
        v72[0] = v3;
        sub_D184((uint64_t)v72, (uint64_t)v70, &qword_3D1A70);
        v42 = v3;
        ObjectType = v25;
        v43 = v42;
        v44 = v62;
        v45 = v62;
        ActionOrigin.init(sender:view:)(v71, v70, v44);
        v46 = ActionRunnerOptions.withActionOrigin(_:)(v71);
        sub_D1D4((uint64_t)v71, (uint64_t *)&unk_3D30E0);
        swift_release(v41);
        sub_D1D4((uint64_t)v72, &qword_3D1A70);
        v47 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_actionRunner + 8];
        v48 = swift_getObjectType();
        v49 = TabMenu.Item.navigationTab.getter(v48);
        v50 = Link.Presentation.init(rawValue:)(0);
        LOBYTE(v43) = v50;
        static ActionMetrics.notInstrumented.getter(v50);
        v51 = type metadata accessor for TabChangeAction(0);
        swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
        LOBYTE(v58) = (_BYTE)v43;
        v52 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, v49, _swiftEmptyArrayStorage, 0, 0, 1, 0, (_DWORD)v58, v8);
        v71[3] = v51;
        v71[4] = sub_89A0((unint64_t *)&unk_3DFFE0, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
        v71[0] = v52;
        v53 = v64;
        v54 = v63;
        v55 = v65;
        (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, enum case for ActionMetricsBehavior.notProcessed(_:), v65);
        v56 = ActionRunner.perform(_:withMetrics:asPartOf:)(v71, v54, v46, v48, v47);

        swift_release(v46);
        v57 = swift_release(v56);
        (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v54, v55, v57);
        (*(void (**)(char *, uint64_t))(v67 + 8))(v39, v68);
        sub_190398((uint64_t)v23);
        __swift_destroy_boxed_opaque_existential_0(v71);
        return;
      }
      sub_190398((uint64_t)v23);

      v37 = (uint64_t)v20;
    }
    sub_190398(v37);
  }
}

uint64_t SidebarMenuController.collectionView(_:shouldSelectItemAt:)(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id *v20;
  id v21;
  __n128 v22;
  int EnumCaseMultiPayload;
  char v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v40;
  uint64_t ObjectType;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[32];
  _QWORD v48[5];
  _QWORD v49[4];
  char v50[32];

  v3 = v2;
  v42 = a1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for ActionMetricsBehavior(0);
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  __chkstk_darwin(v5);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for TabMenu.ActionItem(0);
  v7 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for OutlineItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v40 - v18;
  v20 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource];
  swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource], v50, 0, 0);
  if (!*v20)
    goto LABEL_13;
  v21 = *v20;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v12, a2, v22);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {

    sub_D1D4((uint64_t)v12, (uint64_t *)&unk_3D9B90);
LABEL_13:
    v24 = 0;
    return v24 & 1;
  }
  sub_1B79C((uint64_t)v12, (uint64_t)v19, type metadata accessor for OutlineItem);
  sub_1948C4((uint64_t)v19, (uint64_t)v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v13);
  if (!EnumCaseMultiPayload)
  {
    sub_190398((uint64_t)v19);

    goto LABEL_13;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v25 = v46;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v16, v46);
    if ((objc_msgSend(v3, "isEditing") & 1) != 0)
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v25);
      sub_190398((uint64_t)v19);
    }
    else
    {
      type metadata accessor for ActionRunnerOptions(0);
      v40 = v7;
      v26 = swift_retain(*(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_objectGraph]);
      v27 = BaseObjectGraph.__allocating_init(_:)(v26);
      v49[3] = ObjectType;
      v49[0] = v3;
      sub_D184((uint64_t)v49, (uint64_t)v47, &qword_3D1A70);
      v28 = v3;
      v29 = v42;
      v30 = v42;
      ActionOrigin.init(sender:view:)(v48, v47, v29);
      v31 = ActionRunnerOptions.withActionOrigin(_:)(v48);
      sub_D1D4((uint64_t)v48, (uint64_t *)&unk_3D30E0);
      swift_release(v27);
      sub_D1D4((uint64_t)v49, &qword_3D1A70);
      v42 = *(id *)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_actionRunner + 8];
      v32 = swift_getObjectType();
      v33 = TabMenu.ActionItem.action.getter();
      v48[3] = type metadata accessor for Action(0);
      v48[4] = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v48[0] = v33;
      v35 = v43;
      v34 = v44;
      v36 = v45;
      (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, enum case for ActionMetricsBehavior.notProcessed(_:), v45);
      v37 = ActionRunner.perform(_:withMetrics:asPartOf:)(v48, v35, v31, v32, v42);

      swift_release(v31);
      v38 = swift_release(v37);
      (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v35, v36, v38);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v46);
      sub_190398((uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_0(v48);
    }
    goto LABEL_13;
  }
  if ((objc_msgSend(v3, "isEditing") & 1) != 0)
  {
    v24 = sub_18DB5C();

    sub_190398((uint64_t)v19);
    sub_190398((uint64_t)v16);
  }
  else
  {
    sub_190398((uint64_t)v19);

    sub_190398((uint64_t)v16);
    v24 = 1;
  }
  return v24 & 1;
}

uint64_t SidebarMenuController.collectionView(_:canFocusItemAt:)(uint64_t a1, uint64_t a2)
{
  return sub_194AB0(a2);
}

uint64_t sub_191CD0@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v6 = TabMenu.Item.navigationTab.getter(a1);
  v7 = TabMenu.Item.navigationTab.getter(v6);
  v8 = static NavigationTab.== infix(_:_:)(v6, v7);
  sub_7C28(v7);
  sub_7C28(v6);
  if ((v8 & 1) != 0)
    return TabMenu.Item.makingEnabled(_:)(a2 & 1);
  v10 = type metadata accessor for TabMenu.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a3, a1, v10);
}

void SidebarMenuController.collectionView(_:didDeselectItemAt:)(uint64_t a1, uint64_t a2)
{
  sub_194C44(a2);
}

uint64_t SidebarMenuController.collectionView(_:targetIndexPathForMoveFromItemAt:toProposedIndexPath:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id *v17;
  id v18;
  __n128 v19;
  uint64_t EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v30[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v7);
  v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for OutlineItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v14);
  v16 = &v30[-v15 - 8];
  v17 = (id *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource);
  swift_beginAccess(v17, v30, 0, 0);
  if (!*v17)
    goto LABEL_11;
  v18 = *v17;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v9, a2, v19);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {

    sub_D1D4((uint64_t)v9, (uint64_t *)&unk_3D9B90);
LABEL_11:
    v27 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a3, a1, v27);
  }
  sub_1B79C((uint64_t)v9, (uint64_t)v16, type metadata accessor for OutlineItem);
  sub_1948C4((uint64_t)v16, (uint64_t)v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v10);
  if (!(_DWORD)EnumCaseMultiPayload)
  {
    sub_190398((uint64_t)v16);

    goto LABEL_11;
  }
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v21 = IndexPath.section.getter(EnumCaseMultiPayload);
    v22 = IndexPath.section.getter(v21);

    sub_190398((uint64_t)v16);
    v23 = type metadata accessor for IndexPath(0);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    if (v21 == v22)
      v25 = a2;
    else
      v25 = a1;
    v26 = a3;
  }
  else
  {
    sub_190398((uint64_t)v16);

    v23 = type metadata accessor for IndexPath(0);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    v26 = a3;
    v25 = a1;
  }
  v24(v26, v25, v23);
  return sub_190398((uint64_t)v13);
}

id SidebarMenuController.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2)
{
  return sub_194EE8(a2);
}

id sub_1921A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD aBlock[5];
  uint64_t v26;

  v8 = type metadata accessor for ActionMenuBuilder(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a3, v8, v11);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_386F30, v16 + 8, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v14, v12, v8);
  v18 = (_QWORD *)(v17 + v15);
  *v18 = a1;
  v18[1] = a2;
  *(_QWORD *)(v17 + v16) = a4;
  v19 = (void *)objc_opt_self(UIContextMenuConfiguration);
  aBlock[4] = sub_1961B8;
  v26 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1FB208;
  aBlock[3] = &block_descriptor_16_1;
  v20 = _Block_copy(aBlock);
  v21 = v26;
  swift_retain(a2);
  v22 = a4;
  swift_retain(v17);
  v23 = objc_msgSend(v19, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v20, swift_release(v21).n128_f64[0]);
  swift_release(v17);
  _Block_release(v20);
  return v23;
}

uint64_t sub_19234C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v7 = type metadata accessor for ActionMenu(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v9);
  v12 = ActionMenuBuilder.buildMenu(_:asPartOf:)(v11, *(_QWORD *)(a5 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_objectGraph));
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return v12;
}

uint64_t SidebarMenuController.performAction(_:)(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  _BYTE v21[32];
  _QWORD v22[5];
  _QWORD v23[4];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for ActionMetricsBehavior(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for ActionRunnerOptions(0);
  v9 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_objectGraph]);
  v10 = BaseObjectGraph.__allocating_init(_:)(v9);
  v23[3] = ObjectType;
  v23[0] = v2;
  v11 = v2;
  v12 = objc_msgSend(v11, "view");
  sub_D184((uint64_t)v23, (uint64_t)v21, &qword_3D1A70);
  v13 = v12;
  ActionOrigin.init(sender:view:)(v22, v21, v12);
  v14 = ActionRunnerOptions.withActionOrigin(_:)(v22);
  sub_D1D4((uint64_t)v22, (uint64_t *)&unk_3D30E0);

  swift_release(v10);
  sub_D1D4((uint64_t)v23, &qword_3D1A70);
  v15 = *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_actionRunner + 8];
  v16 = swift_getObjectType();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionMetricsBehavior.fromAction(_:), v5);
  v17 = ActionRunner.perform(_:withMetrics:asPartOf:)(a1, v8, v14, v16, v15);
  swift_release(v14);
  v18 = swift_release(v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v8, v5, v18);
}

uint64_t sub_192664(uint64_t a1)
{
  return SidebarMenuController.performAction(_:)(a1);
}

uint64_t sub_192688(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = type metadata accessor for ActionMenu(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_episodeController + 24);
  v8 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_episodeController + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_episodeController), v7);
  dispatch thunk of EpisodeControllerProtocol.createNewStationContextMenu()(v7, v8);
  v9 = ActionMenuBuilder.buildMenu(_:asPartOf:)(v6, *(_QWORD *)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_objectGraph));
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_1927B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for TabMenu.ActionItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TabMenu.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v10);
  v12 = (unsigned __int8 *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1948C4(v1, (uint64_t)v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v10);
  if (!EnumCaseMultiPayload)
    return TabMenu.Group.title.getter(*v12);
  if (EnumCaseMultiPayload == 1)
  {
    v14 = (*(uint64_t (**)(char *, unsigned __int8 *, uint64_t))(v7 + 32))(v9, v12, v6);
    v15 = TabMenu.Item.title.getter(v14);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v16 = (*(uint64_t (**)(char *, unsigned __int8 *, uint64_t))(v3 + 32))(v5, v12, v2);
    v15 = TabMenu.ActionItem.title.getter(v16);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v15;
}

void sub_192944(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  Swift::UInt v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for TabMenu.ActionItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TabMenu.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v12);
  v14 = (unsigned __int8 *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1948C4(v2, (uint64_t)v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v12);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v16 = (*(uint64_t (**)(char *, unsigned __int8 *, uint64_t))(v9 + 32))(v11, v14, v8);
      v17 = TabMenu.Item.sidebarUniqueID.getter(v16);
      v19 = v18;
      String.hash(into:)(a1, v17, v18);
      v20 = swift_bridgeObjectRelease(v19);
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v20);
    }
    else
    {
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 32))(v7, v14, v4);
      v22 = sub_89A0(&qword_3D9DF0, (uint64_t (*)(uint64_t))&type metadata accessor for TabMenu.ActionItem, (uint64_t)&protocol conformance descriptor for TabMenu.ActionItem);
      dispatch thunk of Hashable.hash(into:)(a1, v4, v22);
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v23);
    }
  }
  else
  {
    v21 = TabMenu.Group.rawValue.getter(*v14);
    Hasher._combine(_:)(v21);
  }
}

Swift::Int sub_192B04()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_192944((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_192B44(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_192944((uint64_t)v2);
  return Hasher._finalize()();
}

void sub_192B84()
{
  SidebarMenuController.makeSearchFieldFirstResponder()();
}

void sub_192BA4(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_21D1B0(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_192D0C(v5);
  *a1 = v3;
}

uint64_t sub_192C24@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2FAE40);
  v5 = swift_getKeyPath(&unk_2FAE68);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_192CA0(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_2FAE40);
  v5 = swift_getKeyPath(&unk_2FAE68);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_192D0C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  Swift::Int v25;
  Swift::Int v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  Swift::Int v32;
  char *v33;
  Swift::Int v34;
  unint64_t v35;
  _QWORD *v36;
  Swift::Int v37;
  Swift::Int v38;
  Swift::Int v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  Swift::Int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  Swift::Int v54;
  void (*v55)(char *, uint64_t);
  Swift::Int v56;
  Swift::Int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::Int v73;
  uint64_t v74;
  Swift::Int v75;
  Swift::Int v76;
  Swift::Int v77;
  Swift::Int v78;
  unint64_t v79;
  Swift::Int v80;
  Swift::Int v81;
  uint64_t v82;
  Swift::Int v83;
  Swift::Int v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  Swift::Int v88;
  uint64_t v89;
  char *v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  char *v101;
  _BOOL4 v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  void (*v108)(char *, uint64_t, uint64_t);
  unint64_t v109;
  unint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  char v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  unint64_t v158;
  char *v159;
  uint64_t v160;
  unint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  unint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  _QWORD *v170;
  Swift::Int v171;
  char *v172;
  Swift::Int v173;
  char *v174;
  char *v175;
  char *v176;
  Swift::Int v177;
  unint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  Swift::Int v183;
  char *v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v187 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v176 = (char *)&v167 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v184 = (char *)&v167 - v7;
  __chkstk_darwin(v8);
  v181 = (char *)&v167 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v167 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v167 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v167 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v167 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v167 - v23;
  v186 = a1;
  v25 = a1[1];
  v26 = _minimumMergeRunLength(_:)(v25);
  if (v26 >= v25)
  {
    if ((v25 & 0x8000000000000000) == 0)
    {
      if (v25)
        sub_193874(0, v25, 1, v186);
      return;
    }
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  if (v25 >= 0)
    v27 = v25;
  else
    v27 = v25 + 1;
  if (v25 < -1)
    goto LABEL_162;
  v28 = v26;
  v188 = v4;
  v183 = v25;
  if (v25 < 2)
  {
    v178 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80));
    if (v25 != 1)
    {
      v35 = _swiftEmptyArrayStorage[2];
      v33 = (char *)_swiftEmptyArrayStorage;
      v36 = _swiftEmptyArrayStorage;
LABEL_119:
      if (v35 < 2)
      {
LABEL_130:
        v159 = v33;
        goto LABEL_131;
      }
      v160 = *v186;
      while (1)
      {
        v161 = v35 - 2;
        if (v35 < 2)
          goto LABEL_149;
        if (!v160)
          goto LABEL_161;
        v153 = v33;
        v162 = v33 + 32;
        v163 = *(_QWORD *)&v33[16 * v161 + 32];
        v164 = *(_QWORD *)&v33[16 * v35 + 24];
        sub_193B18(v160 + *(_QWORD *)(v187 + 72) * v163, v160 + *(_QWORD *)(v187 + 72) * *(_QWORD *)&v162[16 * v35 - 16], v160 + *(_QWORD *)(v187 + 72) * v164, v178);
        if (v2)
          goto LABEL_117;
        if (v164 < v163)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v153) & 1) == 0)
          v153 = sub_21E728((uint64_t)v153);
        if (v161 >= *((_QWORD *)v153 + 2))
          goto LABEL_151;
        v165 = &v153[16 * v161 + 32];
        *(_QWORD *)v165 = v163;
        *((_QWORD *)v165 + 1) = v164;
        v166 = *((_QWORD *)v153 + 2);
        if (v35 > v166)
          goto LABEL_152;
        v33 = v153;
        memmove(&v153[16 * v35 + 16], &v153[16 * v35 + 32], 16 * (v166 - v35));
        *((_QWORD *)v153 + 2) = v166 - 1;
        v35 = v166 - 1;
        if (v166 <= 2)
          goto LABEL_130;
      }
    }
    v167 = v21;
    v174 = v18;
    v175 = v15;
    v180 = v12;
    v31 = _swiftEmptyArrayStorage;
  }
  else
  {
    v167 = v21;
    v174 = v18;
    v175 = v15;
    v180 = v12;
    v29 = v4;
    v30 = v27 >> 1;
    v31 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(v27 >> 1, v29);
    v31[2] = v30;
    v178 = (unint64_t)v31
         + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80));
  }
  v32 = 0;
  v33 = (char *)_swiftEmptyArrayStorage;
  v169 = v24;
  v170 = v31;
  v171 = v28;
  v34 = v183;
  while (1)
  {
    v172 = v33;
    v37 = v32;
    v38 = v32 + 1;
    v177 = v32;
    if (v32 + 1 >= v34)
    {
      v52 = v32 + 1;
      v33 = v172;
      v53 = v188;
      v54 = v32;
    }
    else
    {
      v39 = *v186;
      v40 = *(_QWORD *)(v187 + 72);
      v41 = *(void (**)(char *, uint64_t, uint64_t))(v187 + 16);
      v42 = v188;
      v41(v24, *v186 + v40 * v38, v188);
      v173 = v39;
      v185 = v40;
      v43 = v39 + v40 * v37;
      v44 = v167;
      v45 = ((uint64_t (*)(char *, Swift::Int, uint64_t))v41)(v167, v43, v42);
      v46 = IndexPath.section.getter(v45);
      v47 = IndexPath.section.getter(v46);
      v183 = v34;
      if (v46 == v47)
      {
        v49 = IndexPath.row.getter(v48);
        v51 = IndexPath.row.getter(v50);
      }
      else
      {
        v49 = IndexPath.section.getter(v47);
        v51 = IndexPath.section.getter(v49);
      }
      LODWORD(v182) = v49 < v51;
      v55 = *(void (**)(char *, uint64_t))(v187 + 8);
      v53 = v188;
      v55(v44, v188);
      v55(v24, v53);
      v54 = v177;
      v52 = v177 + 2;
      if (v177 + 2 < v183)
      {
        v168 = v2;
        v179 = v185 * v38;
        v56 = v173;
        v57 = v177 + 2;
        v58 = v185 * v52;
        while (1)
        {
          v59 = v174;
          v41(v174, v56 + v58, v53);
          v60 = v175;
          v61 = ((uint64_t (*)(char *, Swift::Int, uint64_t))v41)(v175, v56 + v179, v53);
          v62 = IndexPath.section.getter(v61);
          v63 = IndexPath.section.getter(v62);
          if (v62 == v63)
          {
            v65 = IndexPath.row.getter(v64);
            v67 = IndexPath.row.getter(v66);
          }
          else
          {
            v65 = IndexPath.section.getter(v63);
            v67 = IndexPath.section.getter(v65);
          }
          v68 = v65 < v67;
          v69 = v188;
          v55(v60, v188);
          v55(v59, v69);
          if ((_DWORD)v182 != v68)
            break;
          v56 += v185;
          ++v57;
          v53 = v188;
          if (v183 == v57)
          {
            v34 = v183;
            v52 = v183;
            v2 = v168;
            v54 = v177;
            goto LABEL_31;
          }
        }
        v2 = v168;
        v53 = v188;
        v52 = v57;
        v54 = v177;
      }
      v34 = v183;
LABEL_31:
      v28 = v171;
      v33 = v172;
      if ((_DWORD)v182)
      {
        if (v52 < v54)
          goto LABEL_155;
        if (v54 < v52)
        {
          v168 = v2;
          v70 = 0;
          v71 = v185 * (v52 - 1);
          v72 = v52 * v185;
          v73 = v54;
          v74 = v54 * v185;
          do
          {
            if (v73 != v52 + v70 - 1)
            {
              v77 = v173;
              if (!v173)
                goto LABEL_160;
              v78 = v52;
              v79 = v173 + v74;
              v80 = v173 + v71;
              v182 = *(_QWORD *)(v187 + 32);
              ((void (*)(char *, Swift::Int, uint64_t))v182)(v176, v173 + v74, v188);
              if (v74 < v71 || v79 >= v77 + v72)
              {
                v75 = v77 + v74;
                v76 = v77 + v71;
                v53 = v188;
                swift_arrayInitWithTakeFrontToBack(v75, v76, 1, v188);
              }
              else
              {
                v53 = v188;
                if (v74 != v71)
                  swift_arrayInitWithTakeBackToFront(v79, v80);
              }
              ((void (*)(Swift::Int, char *, uint64_t))v182)(v80, v176, v53);
              v52 = v78;
            }
            ++v73;
            --v70;
            v71 -= v185;
            v72 -= v185;
            v74 += v185;
          }
          while (v73 < v52 + v70);
          v2 = v168;
          v28 = v171;
          v33 = v172;
          v54 = v177;
          v34 = v183;
        }
      }
    }
    if (v52 < v34)
    {
      if (__OFSUB__(v52, v54))
        goto LABEL_153;
      if (v52 - v54 < v28)
      {
        if (__OFADD__(v54, v28))
          goto LABEL_156;
        if (v54 + v28 >= v34)
          v81 = v34;
        else
          v81 = v54 + v28;
        if (v81 < v54)
          goto LABEL_157;
        if (v52 != v81)
        {
          v168 = v2;
          v82 = *(_QWORD *)(v187 + 72);
          v179 = *(_QWORD *)(v187 + 16);
          v185 = v82 * (v52 - 1);
          v182 = v82;
          v83 = v52 * v82;
          v173 = v81;
          do
          {
            v85 = 0;
            v183 = v52;
            while (1)
            {
              v87 = *v186;
              v88 = v83;
              v89 = v83 + v85 + *v186;
              v91 = (uint64_t (*)(char *, uint64_t, uint64_t))v179;
              v90 = v180;
              ((void (*)(char *, uint64_t, uint64_t))v179)(v180, v89, v53);
              v92 = v185 + v85 + v87;
              v93 = v181;
              v94 = v91(v181, v92, v53);
              v95 = IndexPath.section.getter(v94);
              v96 = IndexPath.section.getter(v95);
              if (v95 == v96)
              {
                v98 = IndexPath.row.getter(v97);
                v100 = IndexPath.row.getter(v99);
              }
              else
              {
                v98 = IndexPath.section.getter(v96);
                v100 = IndexPath.section.getter(v98);
              }
              v141 = v98 < v100;
              v101 = v93;
              v102 = v141;
              v103 = *(void (**)(char *, uint64_t))(v187 + 8);
              v104 = v188;
              v103(v101, v188);
              v103(v90, v104);
              if (!v102)
                break;
              v105 = *v186;
              if (!*v186)
                goto LABEL_158;
              v83 = v88;
              v106 = v105 + v88 + v85;
              v107 = (char *)(v105 + v185 + v85);
              v108 = *(void (**)(char *, uint64_t, uint64_t))(v187 + 32);
              v108(v184, v106, v188);
              swift_arrayInitWithTakeFrontToBack(v106, v107, 1, v188);
              v86 = v107;
              v53 = v188;
              v108(v86, (uint64_t)v184, v188);
              v84 = v183;
              v85 -= v182;
              if (v183 == ++v54)
                goto LABEL_56;
            }
            v53 = v188;
            v84 = v183;
            v83 = v88;
LABEL_56:
            v52 = v84 + 1;
            v185 += v182;
            v83 += v182;
            v54 = v177;
          }
          while (v52 != v173);
          v52 = v173;
          v2 = v168;
          v33 = v172;
        }
      }
    }
    if (v52 < v54)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
      goto LABEL_154;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0)
      v33 = sub_21E2F8(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
    v110 = *((_QWORD *)v33 + 2);
    v109 = *((_QWORD *)v33 + 3);
    v35 = v110 + 1;
    if (v110 >= v109 >> 1)
      v33 = sub_21E2F8((char *)(v109 > 1), v110 + 1, 1, v33);
    *((_QWORD *)v33 + 2) = v35;
    v111 = v33 + 32;
    v112 = &v33[16 * v110 + 32];
    *(_QWORD *)v112 = v54;
    *((_QWORD *)v112 + 1) = v52;
    v183 = v52;
    if (v110)
      break;
    v35 = 1;
LABEL_15:
    v34 = v186[1];
    v32 = v183;
    v24 = v169;
    v36 = v170;
    v28 = v171;
    if (v183 >= v34)
      goto LABEL_119;
  }
  while (1)
  {
    v113 = v35 - 1;
    if (v35 >= 4)
    {
      v118 = &v111[16 * v35];
      v119 = *((_QWORD *)v118 - 8);
      v120 = *((_QWORD *)v118 - 7);
      v124 = __OFSUB__(v120, v119);
      v121 = v120 - v119;
      if (v124)
        goto LABEL_137;
      v123 = *((_QWORD *)v118 - 6);
      v122 = *((_QWORD *)v118 - 5);
      v124 = __OFSUB__(v122, v123);
      v116 = v122 - v123;
      v117 = v124;
      if (v124)
        goto LABEL_138;
      v125 = v35 - 2;
      v126 = &v111[16 * v35 - 32];
      v128 = *(_QWORD *)v126;
      v127 = *((_QWORD *)v126 + 1);
      v124 = __OFSUB__(v127, v128);
      v129 = v127 - v128;
      if (v124)
        goto LABEL_140;
      v124 = __OFADD__(v116, v129);
      v130 = v116 + v129;
      if (v124)
        goto LABEL_143;
      if (v130 >= v121)
      {
        v148 = &v111[16 * v113];
        v150 = *(_QWORD *)v148;
        v149 = *((_QWORD *)v148 + 1);
        v124 = __OFSUB__(v149, v150);
        v151 = v149 - v150;
        if (v124)
          goto LABEL_147;
        v141 = v116 < v151;
        goto LABEL_106;
      }
    }
    else
    {
      if (v35 != 3)
      {
        v142 = *((_QWORD *)v33 + 4);
        v143 = *((_QWORD *)v33 + 5);
        v124 = __OFSUB__(v143, v142);
        v135 = v143 - v142;
        v136 = v124;
        goto LABEL_100;
      }
      v115 = *((_QWORD *)v33 + 4);
      v114 = *((_QWORD *)v33 + 5);
      v124 = __OFSUB__(v114, v115);
      v116 = v114 - v115;
      v117 = v124;
    }
    if ((v117 & 1) != 0)
      goto LABEL_139;
    v125 = v35 - 2;
    v131 = &v111[16 * v35 - 32];
    v133 = *(_QWORD *)v131;
    v132 = *((_QWORD *)v131 + 1);
    v134 = __OFSUB__(v132, v133);
    v135 = v132 - v133;
    v136 = v134;
    if (v134)
      goto LABEL_142;
    v137 = &v111[16 * v113];
    v139 = *(_QWORD *)v137;
    v138 = *((_QWORD *)v137 + 1);
    v124 = __OFSUB__(v138, v139);
    v140 = v138 - v139;
    if (v124)
      goto LABEL_145;
    if (__OFADD__(v135, v140))
      goto LABEL_146;
    if (v135 + v140 >= v116)
    {
      v141 = v116 < v140;
LABEL_106:
      if (v141)
        v113 = v125;
      goto LABEL_108;
    }
LABEL_100:
    if ((v136 & 1) != 0)
      goto LABEL_141;
    v144 = &v111[16 * v113];
    v146 = *(_QWORD *)v144;
    v145 = *((_QWORD *)v144 + 1);
    v124 = __OFSUB__(v145, v146);
    v147 = v145 - v146;
    if (v124)
      goto LABEL_144;
    if (v147 < v135)
      goto LABEL_15;
LABEL_108:
    v152 = v113 - 1;
    if (v113 - 1 >= v35)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    if (!*v186)
      goto LABEL_159;
    v153 = v33;
    v154 = &v111[16 * v152];
    v155 = *(_QWORD *)v154;
    v156 = &v111[16 * v113];
    v157 = *((_QWORD *)v156 + 1);
    sub_193B18(*v186 + *(_QWORD *)(v187 + 72) * *(_QWORD *)v154, *v186 + *(_QWORD *)(v187 + 72) * *(_QWORD *)v156, *v186 + *(_QWORD *)(v187 + 72) * v157, v178);
    if (v2)
      break;
    if (v157 < v155)
      goto LABEL_134;
    if (v113 > *((_QWORD *)v153 + 2))
      goto LABEL_135;
    *(_QWORD *)v154 = v155;
    *(_QWORD *)&v111[16 * v152 + 8] = v157;
    v158 = *((_QWORD *)v153 + 2);
    if (v113 >= v158)
      goto LABEL_136;
    v33 = v153;
    v35 = v158 - 1;
    memmove(&v111[16 * v113], v156 + 16, 16 * (v158 - 1 - v113));
    *((_QWORD *)v153 + 2) = v158 - 1;
    if (v158 <= 2)
      goto LABEL_15;
  }
  v36 = v170;
LABEL_117:
  v159 = v153;
LABEL_131:
  swift_bridgeObjectRelease(v159);
  v36[2] = 0;
  swift_bridgeObjectRelease(v36);
}

uint64_t sub_193874(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;

  v37 = a1;
  v7 = type metadata accessor for IndexPath(0);
  v44 = *(_QWORD **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v41 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  result = __chkstk_darwin(v10);
  v14 = (char *)&v35 - v13;
  v40 = a3;
  v36 = a2;
  if (a3 != a2)
  {
    v15 = v12;
    v16 = v44[9];
    v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v44[2];
    v39 = v16;
    v46 = v16 * (v40 - 1);
    v45 = v16 * v40;
LABEL_5:
    v17 = 0;
    v18 = v37;
    while (1)
    {
      v19 = *a4;
      v43 = v45 + v17;
      v20 = v38;
      v38((uint64_t)v14, v45 + v17 + v19, v7);
      v42 = v46 + v17;
      v21 = v20(v15, v46 + v17 + v19, v7);
      v22 = IndexPath.section.getter(v21);
      v23 = IndexPath.section.getter(v22);
      if (v22 == v23)
      {
        v24 = IndexPath.row.getter();
        v25 = IndexPath.row.getter();
      }
      else
      {
        v24 = IndexPath.section.getter(v23);
        v25 = IndexPath.section.getter(v24);
      }
      v26 = v24 < v25;
      v27 = (void (*)(uint64_t, uint64_t))v44[1];
      v27(v15, v7);
      result = ((uint64_t (*)(char *, uint64_t))v27)(v14, v7);
      if (!v26)
      {
LABEL_4:
        v46 += v39;
        v45 += v39;
        if (++v40 == v36)
          return result;
        goto LABEL_5;
      }
      v28 = *a4;
      if (!*a4)
        break;
      v29 = v14;
      v30 = v15;
      v31 = a4;
      v32 = v28 + v45 + v17;
      v33 = v28 + v46 + v17;
      v34 = (void (*)(char *, uint64_t, uint64_t))v44[4];
      v34(v41, v32, v7);
      swift_arrayInitWithTakeFrontToBack(v32, v33, 1, v7);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v34)(v33, v41, v7);
      v17 -= v39;
      ++v18;
      a4 = v31;
      v15 = v30;
      v14 = v29;
      if (v40 == v18)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_193B18(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  _BOOL4 v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v41;
  uint64_t (*v42)(char *, unint64_t, uint64_t);
  char *v43;
  uint64_t (*v44)(char *, unint64_t, uint64_t);
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  BOOL v54;
  char *v55;
  int v56;
  unint64_t v57;
  unint64_t v58;
  void (*v59)(char *, uint64_t);
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t result;
  uint64_t v65;
  unint64_t v66;
  uint64_t (*v67)(char *, unint64_t, uint64_t);
  unint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;

  v72 = a3;
  v7 = type metadata accessor for IndexPath(0);
  __chkstk_darwin(v7);
  v70 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v69 = (char *)&v65 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v65 - v12;
  __chkstk_darwin(v14);
  v17 = (char *)&v65 - v16;
  v71 = v15;
  v18 = *(_QWORD *)(v15 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v19 = *(_QWORD *)(v15 + 72);
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_71;
  v20 = v72 - a2;
  if (v72 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_72;
  v21 = (uint64_t)(a2 - a1) / v18;
  v75 = a1;
  v74 = a4;
  v22 = v20 / v18;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v22, v7);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v39 = a4 + v24;
      v73 = a4 + v24;
      v75 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v41 = -v19;
        v42 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v71 + 16);
        v66 = a1;
        v67 = v42;
        v68 = a4;
        do
        {
          v43 = v69;
          v44 = v67;
          v67(v69, v39 + v41, v7);
          v45 = a2 + v41;
          v46 = v70;
          v47 = v44(v70, a2 + v41, v7);
          v48 = IndexPath.section.getter(v47);
          v49 = IndexPath.section.getter(v48);
          if (v48 == v49)
          {
            v51 = IndexPath.row.getter(v50);
            v53 = IndexPath.row.getter(v52);
          }
          else
          {
            v51 = IndexPath.section.getter(v49);
            v53 = IndexPath.section.getter(v51);
          }
          v54 = v51 < v53;
          v55 = v46;
          v56 = v54;
          v57 = v72;
          v58 = v72 + v41;
          v59 = *(void (**)(char *, uint64_t))(v71 + 8);
          v59(v55, v7);
          v59(v43, v7);
          if (v56)
          {
            v60 = v68;
            if (v57 < a2 || v58 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v57 + v41, a2 + v41, 1, v7);
              v61 = v66;
            }
            else
            {
              v61 = v66;
              if (v57 != a2)
                swift_arrayInitWithTakeBackToFront(v57 + v41, a2 + v41);
            }
            v75 += v41;
          }
          else
          {
            v62 = v73;
            v63 = v73 + v41;
            v73 += v41;
            v60 = v68;
            if (v57 < v62 || v58 >= v62)
            {
              swift_arrayInitWithTakeFrontToBack(v57 + v41, v63, 1, v7);
            }
            else if (v57 != v62)
            {
              swift_arrayInitWithTakeBackToFront(v57 + v41, v63);
            }
            v45 = a2;
            v61 = v66;
          }
          v39 = v73;
          if (v73 <= v60)
            break;
          a2 = v45;
          v72 = v58;
        }
        while (v45 > v61);
      }
      goto LABEL_69;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v21, v7);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v70 = (char *)(a4 + v23);
    v73 = a4 + v23;
    if (v23 >= 1 && a2 < v72)
    {
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v71 + 16);
      do
      {
        v26(v17, a2, v7);
        v27 = ((uint64_t (*)(char *, unint64_t, uint64_t))v26)(v13, a4, v7);
        v28 = IndexPath.section.getter(v27);
        v29 = IndexPath.section.getter(v28);
        if (v28 == v29)
        {
          v31 = IndexPath.row.getter(v30);
          v33 = IndexPath.row.getter(v32);
        }
        else
        {
          v31 = IndexPath.section.getter(v29);
          v33 = IndexPath.section.getter(v31);
        }
        v34 = v31 < v33;
        v35 = *(void (**)(char *, uint64_t))(v71 + 8);
        v35(v13, v7);
        v35(v17, v7);
        v36 = v75;
        if (v34)
        {
          v37 = a2 + v19;
          if (v75 < a2 || v75 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack(v75, a2, 1, v7);
          }
          else if (v75 == a2)
          {
            v36 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v75, a2);
          }
        }
        else
        {
          v38 = v74 + v19;
          if (v75 < v74 || v75 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack(v75, v74, 1, v7);
          }
          else if (v75 != v74)
          {
            swift_arrayInitWithTakeBackToFront(v75, v74);
          }
          v74 = v38;
          v37 = a2;
        }
        v75 = v36 + v19;
        a4 = v74;
        if (v74 >= (unint64_t)v70)
          break;
        a2 = v37;
      }
      while (v37 < v72);
    }
LABEL_69:
    sub_21E55C(&v75, &v74, (uint64_t *)&v73);
    return 1;
  }
LABEL_73:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_194090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  void (*v46)(char *, uint64_t);
  __n128 v47;
  void (*v48)(char *, uint64_t, __n128);
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = type metadata accessor for TabMenu.ActionItem(0);
  v53 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v50 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - v7;
  v9 = type metadata accessor for TabMenu.Item(0);
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  __chkstk_darwin(v9);
  v52 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v51 = (char *)&v50 - v12;
  v13 = type metadata accessor for OutlineItem(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - v17;
  __chkstk_darwin(v19);
  v21 = (unsigned __int8 *)&v50 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9DF8);
  __chkstk_darwin(v22);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = &v24[*(int *)(v25 + 48)];
  sub_1948C4(a1, (uint64_t)v24);
  sub_1948C4(a2, (uint64_t)v26);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v13);
  if (!EnumCaseMultiPayload)
  {
    sub_1948C4((uint64_t)v24, (uint64_t)v21);
    if (swift_getEnumCaseMultiPayload(v26, v13))
      goto LABEL_13;
    v41 = *v26;
    v42 = TabMenu.Group.rawValue.getter(*v21);
    v40 = v42 == TabMenu.Group.rawValue.getter(v41);
LABEL_16:
    sub_190398((uint64_t)v24);
    return v40 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1948C4((uint64_t)v24, (uint64_t)v15);
    if (swift_getEnumCaseMultiPayload(v26, v13) != 2)
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v15, v4);
      goto LABEL_13;
    }
    v43 = v53;
    v44 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    v44(v8, v15, v4);
    v45 = v50;
    v44(v50, v26, v4);
    v40 = static TabMenu.ActionItem.== infix(_:_:)(v8, v45);
    v46 = *(void (**)(char *, uint64_t))(v43 + 8);
    v46(v45, v4);
    v46(v8, v4);
    goto LABEL_16;
  }
  sub_1948C4((uint64_t)v24, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload(v26, v13) == 1)
  {
    v29 = v54;
    v28 = v55;
    v30 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v31 = v51;
    v30(v51, v18, v55);
    v32 = v52;
    v33 = ((uint64_t (*)(char *, char *, uint64_t))v30)(v52, v26, v28);
    v34 = TabMenu.Item.sidebarUniqueID.getter(v33);
    v36 = v35;
    v38 = TabMenu.Item.sidebarUniqueID.getter(v34);
    v39 = v37;
    if (v34 == v38 && v36 == v37)
    {
      v40 = 1;
      v39 = v36;
    }
    else
    {
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36, v38, v37, 0);
    }
    swift_bridgeObjectRelease(v36);
    v47 = swift_bridgeObjectRelease(v39);
    v48 = *(void (**)(char *, uint64_t, __n128))(v29 + 8);
    v48(v32, v28, v47);
    ((void (*)(char *, uint64_t))v48)(v31, v28);
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v54 + 8))(v18, v55);
LABEL_13:
  sub_D1D4((uint64_t)v24, &qword_3D9DF8);
  v40 = 0;
  return v40 & 1;
}

char *sub_194444(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  char *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t, __n128);
  uint64_t i;
  __n128 v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t, __n128);
  char *v29;

  v24 = a2;
  v4 = type metadata accessor for TabMenu.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v23 - v10;
  result = (char *)_swiftEmptyArrayStorage;
  v29 = (char *)_swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v23 = v2;
    v14 = *(_QWORD *)(v5 + 72);
    v25 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v26 = v7;
    v15 = a1 + v25;
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
    v27 = v5;
    v28 = v16;
    for (i = v16(v11, a1 + v25, v4, v9); ; i = v28(v11, v15, v4, v18))
    {
      if ((TabMenu.Item.enabled.getter(i) & 1) != 0 || objc_msgSend(v24, "isEditing"))
      {
        v19 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v19(v7, v11, v4);
        v20 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
        {
          sub_F3550(0, *((_QWORD *)v20 + 2) + 1, 1);
          v20 = v29;
        }
        v22 = *((_QWORD *)v20 + 2);
        v21 = *((_QWORD *)v20 + 3);
        if (v22 >= v21 >> 1)
        {
          sub_F3550(v21 > 1, v22 + 1, 1);
          v20 = v29;
        }
        *((_QWORD *)v20 + 2) = v22 + 1;
        v7 = v26;
        v19(&v20[v25 + v22 * v14], v26, v4);
        v29 = v20;
        v5 = v27;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      }
      v15 += v14;
      if (!--v13)
        break;
    }
    return v29;
  }
  return result;
}

id sub_194614(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v18;
  __int128 v19[3];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E00);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_subscriptions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_previousNavigationTab] = 18;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection] = 8;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_previousSidebarWidth] = 0;
  v9 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController__isEditingSidebar];
  LOBYTE(v19[0]) = 0;
  v11 = v2;
  Published.init(initialValue:)(v19, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v8, v5);
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController____lazy_storage___collectionViewLayout] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_objectGraph] = a1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v19, v12, v12);
  *(_OWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_actionRunner] = v19[0];
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D80);
  BaseObjectGraph.inject<A>(_:)(v19, v13, v13);
  *(_OWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryDataProvider] = v19[0];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9F30);
  BaseObjectGraph.inject<A>(_:)(v19, v14, v14);
  sub_1B738(v19, (uint64_t)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryActionController]);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B70);
  BaseObjectGraph.inject<A>(_:)(v19, v15, v15);
  sub_1B738(v19, (uint64_t)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_storeDataProvider]);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  BaseObjectGraph.inject<A>(_:)(v19, v16, v16);
  sub_1B738(v19, (uint64_t)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_episodeController]);

  v18.receiver = v11;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
}

uint64_t sub_194874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1948C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OutlineItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_194908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_191CD0(a1, *(_BYTE *)(v2 + 24), a2);
}

void sub_194928()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9E00);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_subscriptions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_previousNavigationTab] = 18;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_pendingTabSelection] = 8;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_previousSidebarWidth] = 0;
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v6 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController__isEditingSidebar];
  LOBYTE(v7) = 0;
  Published.init(initialValue:)(&v7, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v6, v4, v1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController____lazy_storage___collectionViewLayout] = 0;

  v7 = 0;
  v8 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v8);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/SidebarMenuController.swift", 51, 2, 71, 0);
  __break(1u);
}

uint64_t sub_194AB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id *v13;
  id v14;
  __n128 v15;
  int EnumCaseMultiPayload;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v3);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for OutlineItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v19[-v11 - 8];
  v13 = (id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource);
  swift_beginAccess(v13, v19, 0, 0);
  if (!*v13)
    return 0;
  v14 = *v13;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v5, a1, v15);

  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    sub_1B79C((uint64_t)v5, (uint64_t)v12, type metadata accessor for OutlineItem);
    sub_1B79C((uint64_t)v12, (uint64_t)v9, type metadata accessor for OutlineItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v6);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        sub_190398((uint64_t)v9);
        return 0;
      }
      sub_190398((uint64_t)v9);
    }
    return 1;
  }
  sub_D1D4((uint64_t)v5, (uint64_t *)&unk_3D9B90);
  return 0;
}

void sub_194C44(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id *v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29[16];
  char v30[24];

  v2 = v1;
  v28 = type metadata accessor for TabMenu.Item(0);
  v4 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v7);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for OutlineItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v14);
  v16 = &v29[-v15 - 8];
  v17 = (id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource];
  swift_beginAccess(v17, v30, 0, 0);
  if (*v17)
  {
    v18 = *v17;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v9, a1, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {

      sub_D1D4((uint64_t)v9, (uint64_t *)&unk_3D9B90);
    }
    else
    {
      sub_1B79C((uint64_t)v9, (uint64_t)v16, type metadata accessor for OutlineItem);
      if (objc_msgSend(v2, "isEditing"))
      {
        sub_1948C4((uint64_t)v16, (uint64_t)v13);
        if (swift_getEnumCaseMultiPayload(v13, v10) == 1)
        {
          v20 = v28;
          v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v28);
          v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems;
          v23 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_libraryItems];
          __chkstk_darwin(v21);
          *(&v28 - 2) = (uint64_t)v6;
          *((_BYTE *)&v28 - 8) = 0;
          swift_bridgeObjectRetain(v23);
          v24 = sub_187728((void (*)(uint64_t))sub_196930, (uint64_t)(&v28 - 4), v23, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TabMenu.Item, (void (*)(BOOL, unint64_t, uint64_t))sub_F3550);
          swift_bridgeObjectRelease(v23);
          v25 = *(_QWORD *)&v2[v22];
          *(_QWORD *)&v2[v22] = v24;

          v26 = swift_bridgeObjectRelease(v25);
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v20, v26);
          v27 = (uint64_t)v16;
        }
        else
        {
          sub_190398((uint64_t)v16);

          v27 = (uint64_t)v13;
        }
        sub_190398(v27);
      }
      else
      {
        sub_190398((uint64_t)v16);

      }
    }
  }
}

id sub_194EE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id *v28;
  __n128 v29;
  id v30;
  __n128 v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int EnumCaseMultiPayload;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  char v53;
  uint64_t v54;
  __n128 v55;
  void (*v56)(uint64_t, uint64_t, __n128);
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  id v60;
  void (*v61)(uint64_t, uint64_t);
  void (*v62)(uint64_t, uint64_t);
  void (*v63)(uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char v74[24];

  v2 = type metadata accessor for TabMenu.Item(0);
  v68 = *(_QWORD *)(v2 - 8);
  v69 = v2;
  __chkstk_darwin(v2);
  v70 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ActionMenuBuilder(0);
  v5 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v72 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v65 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9B90);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for OutlineItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v65 - v19;
  v22 = IndexPath.section.getter(v21);
  v23 = 0;
  if (v22 != TabMenu.Group.rawValue.getter(2))
    return v23;
  v24 = v14;
  v66 = v17;
  v67 = v7;
  v25 = (uint64_t)v20;
  v26 = v72;
  v27 = v73;
  v28 = (id *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource];
  v29 = swift_beginAccess(&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_datasource], v74, 0, 0);
  if (!*v28)
  {
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56))(v13, 1, 1, v24, v29);
    goto LABEL_9;
  }
  v30 = *v28;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v13, a1, v31);

  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v24) == 1)
  {
LABEL_9:
    sub_D1D4((uint64_t)v13, (uint64_t *)&unk_3D9B90);
    return 0;
  }
  v32 = v27;
  v33 = v25;
  v34 = sub_1B79C((uint64_t)v13, v25, type metadata accessor for OutlineItem);
  v35 = v10;
  ActionMenuBuilder.init()(v34);
  v36 = v26;
  v37 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v38 = (uint64_t)v67;
  v39 = v71;
  v40 = v33;
  v37(v67, v10, v71);
  v41 = v33;
  v42 = (uint64_t)v66;
  sub_1948C4(v41, (uint64_t)v66);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v42, v24);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v57 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v57(v38, v39);
      v57((uint64_t)v10, v39);
      sub_190398(v40);
      v58 = v42;
LABEL_17:
      sub_190398(v58);
      return 0;
    }
    v44 = v40;
    v46 = v68;
    v45 = v69;
    v47 = v70;
    v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 32))(v70, v42, v69);
    v49 = TabMenu.Item.navigationTab.getter(v48);
    v50 = v49;
    if ((unint64_t)(v49 - 1) <= 0x10)
    {
      sub_7C28(v49);
LABEL_15:
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
      v62 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v62(v38, v39);
      v62((uint64_t)v35, v39);
      v58 = v44;
      goto LABEL_17;
    }
    if (!v49)
      goto LABEL_15;
    v59 = swift_allocObject(&unk_386EE0, 32, 7);
    *(_QWORD *)(v59 + 16) = v32;
    *(_QWORD *)(v59 + 24) = v50;
    sub_3D600(v50);
    v60 = v32;
    sub_3D600(v50);
    v23 = sub_1921A8((uint64_t)sub_196054, v59, v38, v60);
    swift_release(v59);
    sub_7C28(v50);
    sub_7C28(v50);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v70, v45);
    v61 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v61(v38, v39);
    v61((uint64_t)v35, v39);
    sub_190398(v44);
  }
  else
  {
    v51 = v32;
    v52 = objc_msgSend(v32, "traitCollection");
    v53 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v53 & 1) == 0)
    {
      v63 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v63(v38, v39);
      v63((uint64_t)v35, v39);
      v58 = v40;
      goto LABEL_17;
    }
    v54 = swift_allocObject(&unk_386F08, 24, 7);
    *(_QWORD *)(v54 + 16) = v51;
    v23 = sub_1921A8((uint64_t)sub_1960D4, v54, v38, v51);
    v55 = swift_release(v54);
    v56 = *(void (**)(uint64_t, uint64_t, __n128))(v36 + 8);
    v56(v38, v39, v55);
    ((void (*)(char *, uint64_t))v56)(v35, v39);
    sub_190398(v40);
  }
  return v23;
}

void _s23ShelfKitCollectionViews21SidebarMenuControllerC07contextF11Interaction_016configurationForF10AtLocationSo09UIContextF13ConfigurationCSgSo0nfI0C_So7CGPointVtF_0(double a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void **v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  Class isa;
  id v30;
  id v31;
  void *v32;
  double v33;
  double v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  char *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD aBlock[5];
  uint64_t v52;
  char v53[24];
  CGRect v54;

  v3 = v2;
  v6 = type metadata accessor for ActionMenuBuilder(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v50 = (char *)&v47 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView];
  swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_collectionView], v53, 0, 0);
  v20 = *v19;
  if (*v19)
  {
    v48 = v6;
    v49 = v7;
    v21 = v20;
    v22 = objc_msgSend(v21, "indexPathsForVisibleItems");
    v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v15);

    aBlock[0] = v23;
    swift_bridgeObjectRetain(v23);
    sub_192BA4(aBlock);
    v24 = swift_bridgeObjectRelease(v23);
    v25 = aBlock[0];
    v26 = *(_QWORD *)(aBlock[0] + 16);
    if (v26)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v16 + 16))(v14, aBlock[0]+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * (v26 - 1), v15, v24);
      v27 = 0;
    }
    else
    {
      v27 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, v27, 1, v15);
    v28 = swift_release(v25);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48))(v14, 1, v15, v28) == 1)
    {

      sub_D1D4((uint64_t)v14, (uint64_t *)&unk_3D1A00);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v30 = objc_msgSend(v21, "layoutAttributesForItemAtIndexPath:", isa);

    if (v30)
    {
      v31 = objc_msgSend(v3, "view");
      if (!v31)
      {
        __break(1u);
        swift_release(aBlock[0]);
        __break(1u);
        return;
      }
      v32 = v31;
      objc_msgSend(v31, "convertPoint:toCoordinateSpace:", v21, a1, a2);
      v34 = v33;

      objc_msgSend(v30, "frame");
      if (CGRectGetMaxY(v54) < v34)
      {
        v36 = v50;
        ActionMenuBuilder.init()(v35);
        v37 = v49;
        v38 = *(void (**)(char *, char *))(v49 + 16);
        v47 = v30;
        v39 = v48;
        v38(v9, v36);
        v40 = *(unsigned __int8 *)(v37 + 80);
        v41 = (v40 + 24) & ~v40;
        v42 = swift_allocObject(&unk_386E90, v41 + v8, v40 | 7);
        *(_QWORD *)(v42 + 16) = v3;
        (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v42 + v41, v9, v39);
        v43 = (void *)objc_opt_self(UIContextMenuConfiguration);
        aBlock[4] = sub_195FD0;
        v52 = v42;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1FB208;
        aBlock[3] = &block_descriptor_39;
        v44 = _Block_copy(aBlock);
        v45 = v52;
        v46 = v3;
        swift_retain(v42);
        objc_msgSend(v43, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v44, swift_release(v45).n128_f64[0]);
        swift_release(v42);
        _Block_release(v44);

        (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v39);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        return;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }

  }
}

uint64_t sub_1957D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_searchSuggestionsController;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_D184(v3, a2, &qword_3D8CC8);
}

uint64_t sub_195830(uint64_t a1)
{
  _BYTE v2[40];

  sub_D184(a1, (uint64_t)v2, &qword_3D8CC8);
  return SidebarMenuController.searchSuggestionsController.setter((uint64_t)v2);
}

uint64_t sub_195870()
{
  return type metadata accessor for SidebarMenuController(0);
}

uint64_t type metadata accessor for SidebarMenuController(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D9C68, (uint64_t)&nominal type descriptor for SidebarMenuController);
}

void sub_19588C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[16];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_2FAF48;
  v4[2] = &unk_2FAF60;
  v4[3] = &unk_2FAF60;
  v4[4] = &unk_2FAF48;
  v4[5] = &unk_2FAF78;
  v4[6] = &unk_2FAF78;
  v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[8] = &unk_2FAF90;
  v4[9] = &unk_2FAF90;
  v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[11] = &unk_2FAF78;
  v4[12] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[13] = &unk_2FAFA8;
  sub_195968();
  if (v3 <= 0x3F)
  {
    v4[14] = *(_QWORD *)(v2 - 8) + 64;
    v4[15] = &unk_2FAF60;
    swift_updateClassMetadata2(a1, 256, 16, v4, a1 + 80);
  }
}

uint64_t method lookup function for SidebarMenuController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SidebarMenuController);
}

void sub_195968()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_3D9C78)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_3D9C78);
  }
}

uint64_t type metadata accessor for SidebarMenuController.SidebarDataSource(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D9C90, (uint64_t)&nominal type descriptor for SidebarMenuController.SidebarDataSource);
}

uint64_t sub_1959D0(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_3D9C80);
}

uint64_t sub_195A0C()
{
  return type metadata accessor for SidebarMenuController.SidebarDataSource(0);
}

uint64_t *sub_195A14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = type metadata accessor for TabMenu.ActionItem(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for TabMenu.Item(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_195B04(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = type metadata accessor for TabMenu.ActionItem(0);
  }
  else
  {
    if ((_DWORD)result != 1)
      return result;
    v4 = type metadata accessor for TabMenu.Item(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void *sub_195B64(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for TabMenu.ActionItem(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for TabMenu.Item(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_195C2C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_190398((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for TabMenu.ActionItem(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for TabMenu.Item(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_195D04(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for TabMenu.ActionItem(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for TabMenu.Item(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_195DCC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_190398((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for TabMenu.ActionItem(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for TabMenu.Item(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_195EA4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = &unk_2FB000;
  result = type metadata accessor for TabMenu.Item(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TabMenu.ActionItem(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
      return 0;
    }
  }
  return result;
}

uint64_t sub_195F30()
{
  return sub_89A0(&qword_3D9DE8, type metadata accessor for OutlineItem, (uint64_t)&unk_2FB018);
}

uint64_t sub_195F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ActionMenuBuilder(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_195FD0(uint64_t a1)
{
  uint64_t v1;

  type metadata accessor for ActionMenuBuilder(0);
  return sub_192688(a1, *(_QWORD *)(v1 + 16));
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_39(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_196028()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_196054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_episodeController + 24);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_episodeController + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_episodeController), v3);
  return dispatch thunk of EpisodeControllerProtocol.createStationContextMenu(for:)(v2, v3, v4);
}

uint64_t sub_1960B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1960D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16)
                + OBJC_IVAR____TtC23ShelfKitCollectionViews21SidebarMenuController_episodeController);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return dispatch thunk of EpisodeControllerProtocol.createNewStationContextMenu()(v2, v3);
}

uint64_t sub_196128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for ActionMenuBuilder(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));

  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1961B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for ActionMenuBuilder(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_19234C(a1, v1 + v4, *(void (**)(uint64_t))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_196218()
{
  unint64_t result;

  result = qword_3D9E30;
  if (!qword_3D9E30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabMenu.Group, &type metadata for TabMenu.Group);
    atomic_store(result, (unint64_t *)&qword_3D9E30);
  }
  return result;
}

uint64_t sub_19625C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_19626C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_196290()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1962C4(uint64_t a1, int a2)
{
  uint64_t *v2;

  sub_189E5C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1962D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1962F4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_196320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1909A0(a1, a2, v2);
}

uint64_t sub_196328()
{
  uint64_t v0;

  return sub_190DE4(v0);
}

void sub_196330(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_18C174(a1, a2, a3, a4, v4);
}

uint64_t sub_196338()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_196348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_18C2CC(a1, a2, a3, *(unsigned __int8 *)(v3 + 16));
}

uint64_t sub_196350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9EA8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9EB0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v13 = v3 | v8 | 7;
  v10 = (*(_QWORD *)(v7 + 64) + v3 + v9) & ~v3;
  v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  v11(v0 + v10, v1);
  return swift_deallocObject(v0, v10 + v5, v13);
}

uint64_t sub_196430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D9EA8) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D9EB0) - 8);
  v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_18E440(a1, a2, a3, v3 + v9, v3 + v12, v3 + ((*(_QWORD *)(v11 + 64) + v8 + v12) & ~v8));
}

uint64_t sub_1964D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9EB8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_196538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D9EB8) - 8) + 80);
  return sub_18E640(a1, a2, a3, a4, v4 + ((v9 + 16) & ~v9));
}

void sub_1965A0(uint64_t a1)
{
  uint64_t v1;

  sub_18ED08(a1, v1);
}

uint64_t sub_1965A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for TabMenu.ActionItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_196608(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TabMenu.ActionItem(0) - 8) + 80);
  return sub_18DFFC(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_196654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v14;

  v1 = type metadata accessor for TabMenu.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for OutlineItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v0 + v4;
  v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v9, v6);
  if (EnumCaseMultiPayload == 2)
  {
    v14 = type metadata accessor for TabMenu.ActionItem(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v0 + v9, v14);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v12(v0 + v9, v1);
  }
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

uint64_t sub_19673C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for TabMenu.Item(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for OutlineItem(0) - 8) + 80);
  return sub_18D574(a1, a2, v2 + v6, v2 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_1967B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void *sub_1967D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18B8C0(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

id sub_1967E4(uint64_t a1)
{
  uint64_t v1;

  return sub_18BC2C(a1, v1);
}

uint64_t sub_1967EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;

  v1 = type metadata accessor for OutlineItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v7 = type metadata accessor for TabMenu.ActionItem(0);
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for TabMenu.Item(0);
LABEL_5:
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_196890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for OutlineItem(0) - 8) + 80);
  sub_18FC20(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

uint64_t sub_1968F8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_19691C(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_196930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_194908(a1, a2);
}

id sub_1969F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CrossFadeAnimator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CrossFadeAnimator()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17CrossFadeAnimator);
}

void sub_196A40(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;

  v2 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (!v2)
    goto LABEL_8;
  v3 = v2;
  v4 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v4)
  {

LABEL_8:
    objc_msgSend(a1, "completeTransition:", 1);
    return;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "setAlpha:", 0.0);

    v8 = objc_msgSend(a1, "containerView");
    v9 = objc_msgSend(v3, "view");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v8, "addSubview:", v9);

      v11 = objc_msgSend(a1, "containerView");
      v12 = objc_msgSend(v5, "view");
      if (v12)
      {
        v13 = v12;
        objc_msgSend(v11, "addSubview:", v12);

        v14 = (void *)objc_opt_self(UIView);
        v15 = swift_allocObject(&unk_387210, 24, 7);
        *(_QWORD *)(v15 + 16) = v5;
        v26 = sub_E77E4;
        v27 = v15;
        v22 = _NSConcreteStackBlock;
        v23 = 1107296256;
        v24 = sub_24360;
        v25 = &block_descriptor_40;
        v16 = _Block_copy(&v22);
        v17 = v27;
        v18 = v5;
        swift_release(v17);
        v19 = swift_allocObject(&unk_387260, 24, 7);
        *(_QWORD *)(v19 + 16) = a1;
        v26 = sub_17B704;
        v27 = v19;
        v22 = _NSConcreteStackBlock;
        v23 = 1107296256;
        v24 = sub_1E3D64;
        v25 = &block_descriptor_7_2;
        v20 = _Block_copy(&v22);
        v21 = v27;
        swift_unknownObjectRetain(a1);
        swift_release(v21);
        objc_msgSend(v14, "animateWithDuration:animations:completion:", v16, v20, 0.1);
        _Block_release(v20);
        _Block_release(v16);

        return;
      }
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
}

uint64_t sub_196CFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_40(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_196D38()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_196D64(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 88);
}

id sub_196DA4()
{
  char *v0;
  id result;
  void *v2;
  char *v3;
  id v4;
  char v5;

  result = objc_msgSend(*(id *)&v0[qword_3D9F68], "superview");
  if (result)
  {
    v2 = result;
    sub_FA88();
    v3 = v0;
    v4 = v2;
    v5 = static NSObject.== infix(_:_:)(v4, v3);

    return (id)(v5 & 1);
  }
  return result;
}

void sub_196E28()
{
  sub_196FB8();
}

uint64_t sub_196E54(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void sub_196E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  id v6;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for TransitionViewContainer(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  objc_msgSendSuper2(&v7, "layoutSubviews");
  if ((sub_196DA4() & 1) != 0)
  {
    v6 = *(id *)((char *)v4 + qword_3D9F68);
    objc_msgSend(v4, "bounds");
    objc_msgSend(v6, "setFrame:");

  }
}

void sub_196F00(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_196E6C((uint64_t)v4, v1, v2, v3);

}

void sub_196F34()
{
  sub_197010();
}

id sub_196F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for TransitionViewContainer(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_196F9C(uint64_t a1)
{

}

uint64_t type metadata accessor for TransitionViewContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TransitionViewContainer);
}

void sub_196FB8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/TransitionViewContainer.swift", 53, 2, 35, 0);
  __break(1u);
}

void sub_197010()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.TransitionViewContainer", 47, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t dispatch thunk of ScrollCoordinatorProtocol.didScroll(visibleItems:layoutEnvironment:contentOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

double sub_197044(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v10;
  double result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators));
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 24);
      v10 = swift_unknownObjectRetain(v6);
      v9(a1, ObjectType, v7, v10);
      swift_unknownObjectRelease(v6);
      v5 += 2;
      --v3;
    }
    while (v3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  }
  return result;
}

double sub_197148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v10;
  double result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators));
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 8);
      v10 = swift_unknownObjectRetain(v6);
      v9(a1, ObjectType, v7, v10);
      swift_unknownObjectRelease(v6);
      v5 += 2;
      --v3;
    }
    while (v3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  }
  return result;
}

double sub_19724C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v10;
  double result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators));
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 16);
      v10 = swift_unknownObjectRetain(v6);
      v9(a1, ObjectType, v7, v10);
      swift_unknownObjectRelease(v6);
      v5 += 2;
      --v3;
    }
    while (v3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  }
  return result;
}

double sub_197350(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  double result;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators));
    v7 = (uint64_t *)(v3 + 40);
    v8 = a2 & 1;
    do
    {
      v9 = *(v7 - 1);
      v10 = *v7;
      ObjectType = swift_getObjectType();
      v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v10 + 32);
      v13 = swift_unknownObjectRetain(v9);
      v12(a1, v8, ObjectType, v10, v13);
      swift_unknownObjectRelease(v9);
      v7 += 2;
      --v4;
    }
    while (v4);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  }
  return result;
}

double sub_197474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v10;
  double result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators));
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 40);
      v10 = swift_unknownObjectRetain(v6);
      v9(a1, ObjectType, v7, v10);
      swift_unknownObjectRelease(v6);
      v5 += 2;
      --v3;
    }
    while (v3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  }
  return result;
}

void sub_197578(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, double, double);

  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v4
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator_scrollCoordinators));
    v11 = (uint64_t *)(v5 + 40);
    do
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      ObjectType = swift_getObjectType();
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v13 + 48);
      swift_unknownObjectRetain(v12);
      v15(a1, a2, ObjectType, v13, a3, a4);
      swift_unknownObjectRelease(v12);
      v11 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
  }
}

id sub_19771C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScrollViewDelegateCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ScrollViewDelegateCoordinator()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews29ScrollViewDelegateCoordinator);
}

uint64_t sub_19777C()
{
  unint64_t v0;
  uint64_t result;
  double v2;

  v0 = sub_1FEB8();
  result = static UITraitCollection.interfaceIdiomIsMac.getter(v0);
  v2 = 11.0;
  if ((result & 1) != 0)
    v2 = 14.0;
  qword_3DA020 = *(_QWORD *)&v2;
  return result;
}

uint64_t sub_1977BC()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  double v3;

  v0 = type metadata accessor for ShelfCellHeight(0);
  __swift_allocate_value_buffer(v0, qword_3DA028);
  __swift_project_value_buffer(v0, (uint64_t)qword_3DA028);
  v1 = sub_1FEB8();
  v2 = static UITraitCollection.interfaceIdiomIsMac.getter(v1);
  v3 = 118.0;
  if ((v2 & 1) == 0)
    v3 = 90.0;
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v3);
}

uint64_t sub_19783C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  _QWORD v52[39];
  _BYTE v53[288];
  _BYTE v54[304];
  _BYTE v55[320];

  v2 = v1;
  v50 = a1;
  v3 = type metadata accessor for SwipeActionsStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA068);
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA070);
  __chkstk_darwin(v45);
  v46 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static HorizontalAlignment.center.getter(v11);
  sub_197BB4(v2, (uint64_t)v53, v13);
  v54[296] = 1;
  memcpy(&v54[7], v53, 0x120uLL);
  v52[0] = v12;
  v52[1] = 0;
  LOBYTE(v52[2]) = 1;
  v14 = memcpy((char *)&v52[2] + 1, v54, 0x127uLL);
  static SwipeActionsStyle.standard.getter(v14);
  v51[2] = v2;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA078);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA080);
  v17 = sub_10EDC(&qword_3DA088, &qword_3DA078, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v18 = sub_1992AC();
  v47 = v9;
  View.swipeActions<A>(edge:allowsFullSwipe:style:content:)(1, 1, v6, sub_1992A4, v51, v15, v16, v17, v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  memcpy(v55, v52, 0x138uLL);
  v19 = sub_199328((uint64_t)v55);
  v20 = static Edge.Set.leading.getter(v19);
  v21 = static Edge.Set.trailing.getter();
  v22 = Edge.Set.init(rawValue:)(0);
  v23 = Edge.Set.init(rawValue:)(v22);
  if (Edge.Set.init(rawValue:)(v23 & v20) != v20)
    v22 = Edge.Set.init(rawValue:)(v22 | v20);
  v24 = Edge.Set.init(rawValue:)(v22);
  if (Edge.Set.init(rawValue:)(v24 & v21) != v21)
    LOBYTE(v22) = Edge.Set.init(rawValue:)(v22 | v21);
  v25 = *(_QWORD *)v2;
  v26 = *(_QWORD *)(v2 + 8);
  v27 = *(_BYTE *)(v2 + 16);
  sub_A304(*(_QWORD *)v2, v26, v27);
  v28 = sub_14874(v25, v26, v27);
  sub_A3A4(v25, v26, v27);
  v29 = SizeClass.init(width:)(v28);
  sub_A304(v25, v26, v27);
  v30 = sub_14874(v25, v26, v27);
  sub_A3A4(v25, v26, v27);
  v31 = SizeClass.margins(width:)(v29, v30);
  v32 = EdgeInsets.init(_all:)(v31);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v47;
  v39 = v48;
  v41 = (uint64_t)v46;
  v42 = v49;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v46, v47, v49);
  v43 = v41 + *(int *)(v45 + 36);
  *(_BYTE *)v43 = v22;
  *(double *)(v43 + 8) = v32;
  *(_QWORD *)(v43 + 16) = v34;
  *(_QWORD *)(v43 + 24) = v36;
  *(_QWORD *)(v43 + 32) = v38;
  *(_BYTE *)(v43 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v42);
  return sub_D210(v41, v50, &qword_3DA070);
}

void sub_197BB4(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __n128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  unsigned __int8 v53;
  char v54;
  _BYTE v55[7];
  _BYTE v56[7];
  _BYTE v57[7];
  _BYTE v58[7];
  _BYTE v59[7];
  _BYTE v60[7];
  _BYTE v61[7];
  int v62;
  __int16 v63;
  __int128 v64;
  uint64_t v65;
  __int16 v66;
  _BYTE v67[7];
  char v68;
  _BYTE v69[7];
  char v70;
  _BYTE v71[7];
  char v72;
  _BYTE v73[7];
  char v74;
  _BYTE v75[7];
  char v76;
  _BYTE v77[7];
  char v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  unsigned __int8 v96;
  char v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  char v105;
  __int128 v106;

  v3 = a1;
  if (qword_3CF7F0 != -1)
    a1 = swift_once(&qword_3CF7F0, sub_19777C);
  v5 = qword_3DA020;
  v6 = static Alignment.center.getter(a1, a3);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v80, 0, 1, 0, 1, 0, 1, v5, 0, 0, 1, 0, 1, v6, v7);
  v8 = v80;
  v9 = v82;
  v43 = v84;
  v45 = v86;
  v44 = v88;
  v47 = v90;
  v46 = v92;
  v48 = v93;
  v79 = 1;
  v78 = v81;
  v76 = v83;
  v74 = v85;
  v72 = v87;
  v70 = v89;
  v68 = v91;
  v10 = *(_QWORD *)(v3 + 40);
  v11 = type metadata accessor for LegacyEpisodeLockup(0);
  v12 = swift_dynamicCastClass(v10, v11);
  if (v12)
  {
    v13 = v12;
    KeyPath = swift_getKeyPath(&unk_2FB4D8);
    v64 = (unint64_t)KeyPath;
    v65 = v13;
    LOBYTE(v66) = 0;
    v15 = sub_1993CC();
    v16 = sub_199410();
    swift_retain_n(v10, 2);
    swift_retain(KeyPath);
    _ConditionalContent<>.init(storage:)(&v64, &type metadata for SearchEpisodeCell, &type metadata for TopResultChannelCell, v15, v16);
    v64 = v94;
    v65 = v95;
    v66 = v96;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA0A0);
    v18 = sub_19B6A4(&qword_3DA0A8, &qword_3DA0A0, (void (*)(void))sub_199410);
    v19 = sub_199454();
    _ConditionalContent<>.init(storage:)(&v64, v17, &type metadata for TopResultShowCell, v18, v19);
    swift_release(v10);
    v20 = KeyPath;
  }
  else
  {
    v21 = type metadata accessor for LegacyChannelLockup();
    v22 = swift_dynamicCastClass(v10, v21);
    if (!v22)
    {
      v65 = 0;
      v64 = (unint64_t)v10;
      v66 = 256;
      swift_retain(v10);
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA0A0);
      v39 = sub_19B6A4(&qword_3DA0A8, &qword_3DA0A0, (void (*)(void))sub_199410);
      v40 = sub_199454();
      v28 = _ConditionalContent<>.init(storage:)(&v64, v38, &type metadata for TopResultShowCell, v39, v40);
      goto LABEL_8;
    }
    v65 = 0;
    v64 = (unint64_t)v22;
    LOBYTE(v66) = 1;
    v23 = sub_1993CC();
    v24 = sub_199410();
    swift_retain_n(v10, 2);
    _ConditionalContent<>.init(storage:)(&v64, &type metadata for SearchEpisodeCell, &type metadata for TopResultChannelCell, v23, v24);
    v64 = v94;
    v65 = v95;
    v66 = v96;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA0A0);
    v26 = sub_19B6A4(&qword_3DA0A8, &qword_3DA0A0, (void (*)(void))sub_199410);
    v27 = sub_199454();
    _ConditionalContent<>.init(storage:)(&v64, v25, &type metadata for TopResultShowCell, v26, v27);
    v20 = v10;
  }
  v29 = swift_release(v20);
LABEL_8:
  v30 = v94;
  v31 = v95;
  v32 = v96;
  v33 = v97;
  v34 = qword_3DA020;
  v35 = static Alignment.center.getter(v28, v29);
  LOBYTE(v42) = 1;
  LOBYTE(v41) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v94, 0, 1, 0, 1, 0, 1, v34, 0, 0, v41, 0, v42, v35, v36);
  *(_DWORD *)(a2 + 268) = *(_DWORD *)&v55[3];
  *(_DWORD *)(a2 + 265) = *(_DWORD *)v55;
  v54 = BYTE8(v94);
  v53 = v96;
  v52 = v99;
  v51 = v101;
  v50 = v103;
  v49 = v105;
  *(_DWORD *)(a2 + 9) = v64;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)((char *)&v64 + 3);
  *(_DWORD *)(a2 + 25) = *(_DWORD *)v77;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)&v77[3];
  *(_DWORD *)(a2 + 41) = *(_DWORD *)v75;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v75[3];
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v73[3];
  *(_DWORD *)(a2 + 57) = *(_DWORD *)v73;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v71[3];
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v71;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v69[3];
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v69;
  *(_DWORD *)(a2 + 105) = *(_DWORD *)v67;
  *(_DWORD *)(a2 + 108) = *(_DWORD *)&v67[3];
  *(_BYTE *)(a2 + 8) = v79;
  *(_QWORD *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 24) = v78;
  *(_QWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 40) = v76;
  *(_QWORD *)(a2 + 48) = v43;
  *(_BYTE *)(a2 + 56) = v74;
  *(_QWORD *)(a2 + 64) = v45;
  *(_BYTE *)(a2 + 72) = v72;
  *(_QWORD *)(a2 + 80) = v44;
  *(_BYTE *)(a2 + 88) = v70;
  *(_QWORD *)(a2 + 96) = v47;
  *(_BYTE *)(a2 + 104) = v68;
  *(_QWORD *)(a2 + 112) = v46;
  *(_QWORD *)(a2 + 120) = v48;
  *(_DWORD *)(a2 + 154) = v62;
  *(_WORD *)(a2 + 158) = v63;
  *(_BYTE *)(a2 + 168) = 1;
  *(_DWORD *)(a2 + 169) = *(_DWORD *)v61;
  *(_DWORD *)(a2 + 172) = *(_DWORD *)&v61[3];
  *(_QWORD *)(a2 + 176) = v94;
  *(_BYTE *)(a2 + 184) = v54;
  *(_DWORD *)(a2 + 185) = *(_DWORD *)v60;
  *(_DWORD *)(a2 + 188) = *(_DWORD *)&v60[3];
  *(_QWORD *)(a2 + 192) = v95;
  *(_BYTE *)(a2 + 200) = v53;
  *(_DWORD *)(a2 + 204) = *(_DWORD *)&v59[3];
  *(_DWORD *)(a2 + 201) = *(_DWORD *)v59;
  *(_QWORD *)(a2 + 208) = v98;
  *(_BYTE *)(a2 + 216) = v52;
  *(_DWORD *)(a2 + 220) = *(_DWORD *)&v58[3];
  *(_DWORD *)(a2 + 217) = *(_DWORD *)v58;
  *(_QWORD *)(a2 + 224) = v100;
  *(_BYTE *)(a2 + 232) = v51;
  *(_DWORD *)(a2 + 236) = *(_DWORD *)&v57[3];
  *(_DWORD *)(a2 + 233) = *(_DWORD *)v57;
  *(_QWORD *)(a2 + 240) = v102;
  *(_BYTE *)(a2 + 248) = v50;
  *(_DWORD *)(a2 + 252) = *(_DWORD *)&v56[3];
  *(_DWORD *)(a2 + 249) = *(_DWORD *)v56;
  *(_QWORD *)(a2 + 256) = v104;
  *(_BYTE *)(a2 + 264) = v49;
  v37 = v106;
  *(_QWORD *)a2 = 0;
  *(_OWORD *)(a2 + 128) = v30;
  *(_QWORD *)(a2 + 144) = v31;
  *(_BYTE *)(a2 + 152) = v32;
  *(_BYTE *)(a2 + 153) = v33;
  *(_QWORD *)(a2 + 160) = 0;
  *(_OWORD *)(a2 + 272) = v37;
  sub_19B798(v30, *((uint64_t *)&v30 + 1), v31, v32, v33);
  sub_19B7E8(v30, *((uint64_t *)&v30 + 1), v31, v32, v33);
}

uint64_t sub_19829C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  char v26;
  Swift::String v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA098);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1[3] & 1) != 0)
  {
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v27._object = (void *)0xE000000000000000;
    v10._object = (void *)0x80000000003124E0;
    v10._countAndFlagsBits = 0xD00000000000001DLL;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v27._countAndFlagsBits = 0;
    v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v27);

    v22 = v12;
    static ButtonRole.destructive.getter(v13, v14);
    v15 = type metadata accessor for ButtonRole(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 0, 1, v15);
    v25 = *a1;
    v26 = *((_BYTE *)a1 + 16);
    v23 = *((_QWORD *)a1 + 3);
    v24 = *((_BYTE *)a1 + 32);
    v16 = *((_QWORD *)a1 + 5);
    v17 = swift_allocObject(&unk_387368, 65, 7);
    v18 = a1[1];
    *(_OWORD *)(v17 + 16) = *a1;
    *(_OWORD *)(v17 + 32) = v18;
    *(_OWORD *)(v17 + 48) = a1[2];
    *(_BYTE *)(v17 + 64) = *((_BYTE *)a1 + 48);
    sub_19939C((uint64_t)&v25);
    sub_50988(&v23);
    v19 = sub_D254();
    v20 = swift_retain(v16);
    Button<>.init<A>(_:role:action:)(&v22, v6, sub_199394, v17, &type metadata for String, v19, v20);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F18);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 0, 1, v21);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
}

double sub_1984B4(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  double result;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_BYTE *)(a1 + 32);
  swift_retain(v2);
  v5 = sub_14A78(v4, v3);
  swift_release(v2);
  v6 = type metadata accessor for RecentlySearchedStorage(0);
  BaseObjectGraph.inject<A>(_:)(&v10, v6, v6);
  v7 = swift_release(v5);
  v8 = v10;
  RecentlySearchedStorage.remove(_:)(*(_QWORD *)(a1 + 40), v7);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_198538@<X0>(uint64_t a1@<X8>)
{
  return sub_19783C(a1);
}

double sub_198578@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;
  char v9;

  v4 = *a2;
  sub_19AB74(a1, *a2, (uint64_t)v7);
  swift_release(v4);
  v5 = v7[1];
  *(_OWORD *)a3 = v7[0];
  *(_OWORD *)(a3 + 16) = v5;
  result = *(double *)&v8;
  *(_OWORD *)(a3 + 32) = v8;
  *(_BYTE *)(a3 + 48) = v9;
  return result;
}

uint64_t sub_1985D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_19AC7C();
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

uint64_t sub_198604()
{
  return ShelfCellEnvironment.isMac.getter() & 1;
}

void *sub_198638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  int v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *result;
  _BYTE v30[304];
  char v31;
  _BYTE __src[288];

  v9 = a3 & 1;
  v10 = static HorizontalAlignment.center.getter(a1);
  sub_198808(a1, a4, (uint64_t)__src, v11);
  v13 = static Edge.Set.leading.getter(v12);
  v14 = static Edge.Set.trailing.getter();
  v15 = Edge.Set.init(rawValue:)(0);
  v16 = Edge.Set.init(rawValue:)(v15);
  if (Edge.Set.init(rawValue:)(v16 & v13) != v13)
    v15 = Edge.Set.init(rawValue:)(v15 | v13);
  v17 = Edge.Set.init(rawValue:)(v15);
  if (Edge.Set.init(rawValue:)(v17 & v14) != v14)
    LOBYTE(v15) = Edge.Set.init(rawValue:)(v15 | v14);
  v30[296] = 1;
  memcpy(&v30[7], __src, 0x120uLL);
  sub_A304(a1, a2, v9);
  v18 = sub_14874(a1, a2, v9);
  sub_A3A4(a1, a2, v9);
  v19 = SizeClass.init(width:)(v18);
  sub_A304(a1, a2, v9);
  v20 = sub_14874(a1, a2, v9);
  sub_A3A4(a1, a2, v9);
  v21 = SizeClass.margins(width:)(v19, v20);
  v22 = EdgeInsets.init(_all:)(v21);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v31 = 0;
  *(_QWORD *)a5 = v10;
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 16) = 1;
  result = memcpy((void *)(a5 + 17), v30, 0x127uLL);
  *(_BYTE *)(a5 + 312) = v15;
  *(double *)(a5 + 320) = v22;
  *(_QWORD *)(a5 + 328) = v24;
  *(_QWORD *)(a5 + 336) = v26;
  *(_QWORD *)(a5 + 344) = v28;
  *(_BYTE *)(a5 + 352) = v31;
  return result;
}

void sub_198808(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>, __n128 a4@<Q0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __n128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  unsigned __int8 v53;
  char v54;
  _BYTE v55[7];
  _BYTE v56[7];
  _BYTE v57[7];
  _BYTE v58[7];
  _BYTE v59[7];
  _BYTE v60[7];
  _BYTE v61[7];
  int v62;
  __int16 v63;
  __int128 v64;
  uint64_t v65;
  __int16 v66;
  _BYTE v67[7];
  char v68;
  _BYTE v69[7];
  char v70;
  _BYTE v71[7];
  char v72;
  _BYTE v73[7];
  char v74;
  _BYTE v75[7];
  char v76;
  _BYTE v77[7];
  char v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  unsigned __int8 v96;
  char v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  char v105;
  __int128 v106;

  if (qword_3CF7F0 != -1)
    a1 = swift_once(&qword_3CF7F0, sub_19777C);
  v6 = qword_3DA020;
  v7 = static Alignment.center.getter(a1, a4);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v80, 0, 1, 0, 1, 0, 1, v6, 0, 0, 1, 0, 1, v7, v8);
  v9 = v80;
  v10 = v82;
  v43 = v84;
  v45 = v86;
  v44 = v88;
  v47 = v90;
  v46 = v92;
  v48 = v93;
  v79 = 1;
  v78 = v81;
  v76 = v83;
  v74 = v85;
  v72 = v87;
  v70 = v89;
  v68 = v91;
  v11 = type metadata accessor for LegacyEpisodeLockup(0);
  v12 = swift_dynamicCastClass(a2, v11);
  if (v12)
  {
    v13 = v12;
    KeyPath = swift_getKeyPath(&unk_2FB4D8);
    v64 = (unint64_t)KeyPath;
    v65 = v13;
    LOBYTE(v66) = 0;
    v15 = sub_1993CC();
    v16 = sub_19B710();
    swift_retain_n(a2, 2);
    swift_retain(KeyPath);
    _ConditionalContent<>.init(storage:)(&v64, &type metadata for SearchEpisodeCell, &type metadata for SearchChannelCell, v15, v16);
    v64 = v94;
    v65 = v95;
    v66 = v96;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA1A8);
    v18 = sub_19B6A4(&qword_3DA1B0, &qword_3DA1A8, (void (*)(void))sub_19B710);
    v19 = sub_19B754();
    _ConditionalContent<>.init(storage:)(&v64, v17, &type metadata for SearchShowCell, v18, v19);
    swift_release(a2);
    v20 = KeyPath;
  }
  else
  {
    v21 = type metadata accessor for LegacyChannelLockup();
    v22 = swift_dynamicCastClass(a2, v21);
    if (!v22)
    {
      v65 = 0;
      v64 = (unint64_t)a2;
      v66 = 256;
      swift_retain(a2);
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA1A8);
      v39 = sub_19B6A4(&qword_3DA1B0, &qword_3DA1A8, (void (*)(void))sub_19B710);
      v40 = sub_19B754();
      v28 = _ConditionalContent<>.init(storage:)(&v64, v38, &type metadata for SearchShowCell, v39, v40);
      goto LABEL_8;
    }
    v65 = 0;
    v64 = (unint64_t)v22;
    LOBYTE(v66) = 1;
    v23 = sub_1993CC();
    v24 = sub_19B710();
    swift_retain_n(a2, 2);
    _ConditionalContent<>.init(storage:)(&v64, &type metadata for SearchEpisodeCell, &type metadata for SearchChannelCell, v23, v24);
    v64 = v94;
    v65 = v95;
    v66 = v96;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA1A8);
    v26 = sub_19B6A4(&qword_3DA1B0, &qword_3DA1A8, (void (*)(void))sub_19B710);
    v27 = sub_19B754();
    _ConditionalContent<>.init(storage:)(&v64, v25, &type metadata for SearchShowCell, v26, v27);
    v20 = a2;
  }
  v29 = swift_release(v20);
LABEL_8:
  v30 = v94;
  v31 = v95;
  v32 = v96;
  v33 = v97;
  v34 = qword_3DA020;
  v35 = static Alignment.center.getter(v28, v29);
  LOBYTE(v42) = 1;
  LOBYTE(v41) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v94, 0, 1, 0, 1, 0, 1, v34, 0, 0, v41, 0, v42, v35, v36);
  *(_DWORD *)(a3 + 268) = *(_DWORD *)&v55[3];
  *(_DWORD *)(a3 + 265) = *(_DWORD *)v55;
  v54 = BYTE8(v94);
  v53 = v96;
  v52 = v99;
  v51 = v101;
  v50 = v103;
  v49 = v105;
  *(_DWORD *)(a3 + 9) = v64;
  *(_DWORD *)(a3 + 12) = *(_DWORD *)((char *)&v64 + 3);
  *(_DWORD *)(a3 + 25) = *(_DWORD *)v77;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)&v77[3];
  *(_DWORD *)(a3 + 41) = *(_DWORD *)v75;
  *(_DWORD *)(a3 + 44) = *(_DWORD *)&v75[3];
  *(_DWORD *)(a3 + 60) = *(_DWORD *)&v73[3];
  *(_DWORD *)(a3 + 57) = *(_DWORD *)v73;
  *(_DWORD *)(a3 + 76) = *(_DWORD *)&v71[3];
  *(_DWORD *)(a3 + 73) = *(_DWORD *)v71;
  *(_DWORD *)(a3 + 92) = *(_DWORD *)&v69[3];
  *(_DWORD *)(a3 + 89) = *(_DWORD *)v69;
  *(_DWORD *)(a3 + 105) = *(_DWORD *)v67;
  *(_DWORD *)(a3 + 108) = *(_DWORD *)&v67[3];
  *(_BYTE *)(a3 + 8) = v79;
  *(_QWORD *)(a3 + 16) = v9;
  *(_BYTE *)(a3 + 24) = v78;
  *(_QWORD *)(a3 + 32) = v10;
  *(_BYTE *)(a3 + 40) = v76;
  *(_QWORD *)(a3 + 48) = v43;
  *(_BYTE *)(a3 + 56) = v74;
  *(_QWORD *)(a3 + 64) = v45;
  *(_BYTE *)(a3 + 72) = v72;
  *(_QWORD *)(a3 + 80) = v44;
  *(_BYTE *)(a3 + 88) = v70;
  *(_QWORD *)(a3 + 96) = v47;
  *(_BYTE *)(a3 + 104) = v68;
  *(_QWORD *)(a3 + 112) = v46;
  *(_QWORD *)(a3 + 120) = v48;
  *(_DWORD *)(a3 + 154) = v62;
  *(_WORD *)(a3 + 158) = v63;
  *(_BYTE *)(a3 + 168) = 1;
  *(_DWORD *)(a3 + 169) = *(_DWORD *)v61;
  *(_DWORD *)(a3 + 172) = *(_DWORD *)&v61[3];
  *(_QWORD *)(a3 + 176) = v94;
  *(_BYTE *)(a3 + 184) = v54;
  *(_DWORD *)(a3 + 185) = *(_DWORD *)v60;
  *(_DWORD *)(a3 + 188) = *(_DWORD *)&v60[3];
  *(_QWORD *)(a3 + 192) = v95;
  *(_BYTE *)(a3 + 200) = v53;
  *(_DWORD *)(a3 + 204) = *(_DWORD *)&v59[3];
  *(_DWORD *)(a3 + 201) = *(_DWORD *)v59;
  *(_QWORD *)(a3 + 208) = v98;
  *(_BYTE *)(a3 + 216) = v52;
  *(_DWORD *)(a3 + 220) = *(_DWORD *)&v58[3];
  *(_DWORD *)(a3 + 217) = *(_DWORD *)v58;
  *(_QWORD *)(a3 + 224) = v100;
  *(_BYTE *)(a3 + 232) = v51;
  *(_DWORD *)(a3 + 236) = *(_DWORD *)&v57[3];
  *(_DWORD *)(a3 + 233) = *(_DWORD *)v57;
  *(_QWORD *)(a3 + 240) = v102;
  *(_BYTE *)(a3 + 248) = v50;
  *(_DWORD *)(a3 + 252) = *(_DWORD *)&v56[3];
  *(_DWORD *)(a3 + 249) = *(_DWORD *)v56;
  *(_QWORD *)(a3 + 256) = v104;
  *(_BYTE *)(a3 + 264) = v49;
  v37 = v106;
  *(_QWORD *)a3 = 0;
  *(_OWORD *)(a3 + 128) = v30;
  *(_QWORD *)(a3 + 144) = v31;
  *(_BYTE *)(a3 + 152) = v32;
  *(_BYTE *)(a3 + 153) = v33;
  *(_QWORD *)(a3 + 160) = 0;
  *(_OWORD *)(a3 + 272) = v37;
  sub_19B798(v30, *((uint64_t *)&v30 + 1), v31, v32, v33);
  sub_19B7E8(v30, *((uint64_t *)&v30 + 1), v31, v32, v33);
}

void *sub_198EEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_198638(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_198F04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t result;

  v5 = *a2;
  KeyPath = swift_getKeyPath(&unk_2FB508);
  v7 = type metadata accessor for ModernShelf.ItemPresentation(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  *(_QWORD *)a3 = KeyPath;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = v5;
  return result;
}

uint64_t sub_198F68(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  v3 = type metadata accessor for LegacyEpisodeLockup(0);
  if (swift_dynamicCastClass(v2, v3))
    return 2;
  else
    return 7;
}

uint64_t sub_198FA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_19ACC0();
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

uint64_t sub_198FD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3CF7F8 != -1)
    swift_once(&qword_3CF7F8, sub_1977BC);
  v2 = type metadata accessor for ShelfCellHeight(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_3DA028);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_199040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  __chkstk_darwin(v4);
  v6 = (_WORD *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = 1;
  (*(void (**)(_WORD *, _QWORD))(v7 + 104))(v6, enum case for ShelfCellListSeparatorMode.Placement.custom(_:));
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Layout.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v6, v3);
}

unint64_t sub_199130()
{
  unint64_t result;

  result = qword_3DA040;
  if (!qword_3DA040)
  {
    result = swift_getWitnessTable(&unk_2FB200, &type metadata for SearchResultCell);
    atomic_store(result, (unint64_t *)&qword_3DA040);
  }
  return result;
}

unint64_t sub_199178()
{
  unint64_t result;

  result = qword_3DA048;
  if (!qword_3DA048)
  {
    result = swift_getWitnessTable(&unk_2FB288, &type metadata for SearchResultCell);
    atomic_store(result, (unint64_t *)&qword_3DA048);
  }
  return result;
}

unint64_t sub_1991C0()
{
  unint64_t result;

  result = qword_3DA050;
  if (!qword_3DA050)
  {
    result = swift_getWitnessTable(&unk_2FB350, &type metadata for TopResultCell);
    atomic_store(result, (unint64_t *)&qword_3DA050);
  }
  return result;
}

unint64_t sub_199208()
{
  unint64_t result;

  result = qword_3DA058;
  if (!qword_3DA058)
  {
    result = swift_getWitnessTable(&unk_2FB3D8, &type metadata for TopResultCell);
    atomic_store(result, (unint64_t *)&qword_3DA058);
  }
  return result;
}

unint64_t sub_199250()
{
  unint64_t result;

  result = qword_3DA060;
  if (!qword_3DA060)
  {
    result = swift_getWitnessTable(&unk_2FB488, &type metadata for TopResultCell);
    atomic_store(result, (unint64_t *)&qword_3DA060);
  }
  return result;
}

uint64_t sub_199294(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32F944, 1);
}

uint64_t sub_1992A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19829C(*(__int128 **)(v1 + 16), a1);
}

unint64_t sub_1992AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA090;
  if (!qword_3DA090)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA080);
    sub_10EDC(&qword_3D0F30, &qword_3D0F18, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_3DA090);
  }
  return result;
}

uint64_t sub_199328(uint64_t a1)
{
  sub_19B7E8(*(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_BYTE *)(a1 + 176), *(_BYTE *)(a1 + 177));
  return a1;
}

uint64_t sub_19935C()
{
  uint64_t v0;

  sub_A3A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 65, 7);
}

double sub_199394()
{
  uint64_t v0;

  return sub_1984B4(v0 + 16);
}

uint64_t sub_19939C(uint64_t a1)
{
  sub_A304(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

unint64_t sub_1993CC()
{
  unint64_t result;

  result = qword_3DA0B0;
  if (!qword_3DA0B0)
  {
    result = swift_getWitnessTable(&unk_2FB704, &type metadata for SearchEpisodeCell);
    atomic_store(result, (unint64_t *)&qword_3DA0B0);
  }
  return result;
}

unint64_t sub_199410()
{
  unint64_t result;

  result = qword_3DA0B8;
  if (!qword_3DA0B8)
  {
    result = swift_getWitnessTable(&unk_2FB6B4, &type metadata for TopResultChannelCell);
    atomic_store(result, (unint64_t *)&qword_3DA0B8);
  }
  return result;
}

unint64_t sub_199454()
{
  unint64_t result;

  result = qword_3DA0C0;
  if (!qword_3DA0C0)
  {
    result = swift_getWitnessTable(&unk_2FB664, &type metadata for TopResultShowCell);
    atomic_store(result, (unint64_t *)&qword_3DA0C0);
  }
  return result;
}

uint64_t sub_1994A0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t OpaqueTypeConformance2;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[16];
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD v55[3];

  v50 = a4;
  v7 = type metadata accessor for AccessibilityChildBehavior(0);
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA0E8);
  __chkstk_darwin(v43);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA0F0);
  v13 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  v49 = v13;
  v14 = __chkstk_darwin(v12);
  v42 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TapGesture(0, v14);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA0F8);
  v44 = *(_QWORD *)(v20 - 8);
  v45 = v20;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  TapGesture.init(count:)(1, v21);
  v24 = swift_allocObject(&unk_387568, 40, 7);
  v25 = a1;
  *(_QWORD *)(v24 + 16) = a1;
  a2 &= 1u;
  *(_BYTE *)(v24 + 24) = a2;
  v26 = a3;
  *(_QWORD *)(v24 + 32) = a3;
  v27 = v25;
  swift_retain(v25);
  v28 = swift_retain(v26);
  v41 = v23;
  Gesture.onEnded(_:)(sub_19B4CC, v24, v16, &protocol witness table for TapGesture, v28);
  v29 = swift_release(v24);
  v30 = (*(uint64_t (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v29);
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v30);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA100);
  v32 = sub_199870(v27, a2, v26, (uint64_t)v23, (uint64_t *)&v11[*(int *)(v31 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v32);
  v33 = sub_10EDC(&qword_3DA108, &qword_3DA0E8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v35 = v42;
  v34 = v43;
  View.accessibilityElement(children:)(v9, v43, v33);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v47);
  sub_D1D4((uint64_t)v11, &qword_3DA0E8);
  v52 = v27;
  v53 = a2;
  v54 = v26;
  v36 = type metadata accessor for CompactPlayButton(0);
  v55[0] = v34;
  v55[1] = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v55, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v38 = sub_89A0(&qword_3DA110, type metadata accessor for CompactPlayButton, (uint64_t)&protocol conformance descriptor for CompactPlayButton);
  v39 = v48;
  View.accessibilityActions<A>(_:)(sub_19B4E4, v51, v48, v36, OpaqueTypeConformance2, v38);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v41, v45);
}

double sub_1997E8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  v6 = a3 & 1;
  swift_retain(a2);
  v7 = sub_14A78(a2, v6);
  swift_release(a2);
  v8 = type metadata accessor for RecentlySearchedStorage(0);
  BaseObjectGraph.inject<A>(_:)(&v11, v8, v8);
  swift_release(v7);
  v9 = v11;
  RecentlySearchedStorage.add(_:)(a4);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_199870@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  char v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t OpaqueTypeConformance2;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD v77[2];
  __int128 v78;
  __int128 v79;

  v60 = a4;
  v54 = a5;
  v7 = a2 & 1;
  v59 = type metadata accessor for CompactPlayButton(0);
  __chkstk_darwin(v59);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA118);
  v61 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA120);
  __chkstk_darwin(v12);
  v64 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v63 = (uint64_t)&v54 - v16;
  v17 = (void *)LegacyEpisodeLockup.transcript.getter(v15);
  if (v17)
  {

    swift_retain(a1);
    v19 = sub_14A78(v18, v7);
    swift_release(a1);
    v20 = type metadata accessor for EpisodeCaptionGenerator(0);
    swift_retain_n(a3, 2);
    swift_retain(v19);
    v22 = EpisodeCaptionGenerator.__allocating_init(asPartOf:episode:showsSubscriptionBadge:useSearchContext:)(v21, a3, 1, 1);
    v23 = sub_89A0(&qword_3DA148, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeCaptionGenerator, (uint64_t)&protocol conformance descriptor for EpisodeCaptionGenerator);
    v24 = ObservedObject.init(wrappedValue:)(v22, v20, v23);
    v65 = v19;
    v66 = v24;
    *(_QWORD *)&v67 = v25;
    *((_QWORD *)&v67 + 1) = a3;
    v26 = sub_19B4FC();
    v27 = sub_19B540();
    v68 = 0uLL;
    v69 = 0;
  }
  else
  {
    swift_retain(a1);
    v29 = sub_14A78(v28, v7);
    swift_release(a1);
    swift_retain(a3);
    sub_280FBC(v29, a3, v77);
    v65 = v77[0];
    v66 = v77[1];
    v67 = v78;
    v68 = v79;
    v69 = 1;
    v26 = sub_19B4FC();
    v27 = sub_19B540();
  }
  _ConditionalContent<>.init(storage:)(&v65, &type metadata for TranscriptSearchResultView, &type metadata for EyebrowSearchResultView, v26, v27);
  v58 = v70;
  v57 = v71;
  v56 = v72;
  v30 = v74;
  v55 = v73;
  v31 = v75;
  v32 = v76;
  swift_retain(a1);
  v34 = sub_14A78(v33, v7);
  swift_release(a1);
  v70 = 0;
  LOBYTE(v71) = 1;
  swift_retain(a3);
  v35 = sub_1A1BA8(v34, a3, &v70, (uint64_t)v9);
  v36 = static GestureMask.all.getter(v35);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA0F8);
  v38 = (uint64_t)v9;
  v39 = sub_89A0(&qword_3DA110, type metadata accessor for CompactPlayButton, (uint64_t)&protocol conformance descriptor for CompactPlayButton);
  v40 = sub_10EDC(&qword_3DA138, &qword_3DA0F8, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  v41 = v36;
  v42 = v59;
  View.simultaneousGesture<A>(_:including:)(v60, v41, v59, v37, v39, v40);
  sub_FA4C(v38, type metadata accessor for CompactPlayButton);
  v70 = v42;
  v71 = v37;
  v72 = v39;
  v73 = v40;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v70, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
  v44 = (uint64_t)v64;
  v45 = v62;
  View.accessibilityHidden(_:)(1, v62, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v11, v45);
  v46 = v63;
  sub_D210(v44, v63, &qword_3DA120);
  sub_19B584(v46, v44);
  v47 = v58;
  v48 = v54;
  v49 = v57;
  *v54 = v58;
  v48[1] = v49;
  v50 = v56;
  v51 = v55;
  v48[2] = v56;
  v48[3] = v51;
  v48[4] = v30;
  v48[5] = v31;
  *((_BYTE *)v48 + 48) = v32;
  v48[7] = 0;
  *((_BYTE *)v48 + 64) = 1;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA140);
  sub_19B584(v44, (uint64_t)v48 + *(int *)(v52 + 64));
  sub_19B5CC(v47, v49, v50, v51, v30, v31, v32);
  sub_D1D4(v46, &qword_3DA120);
  sub_D1D4(v44, &qword_3DA120);
  return sub_19B628(v47, v49, v50, v51, v30, v31, v32);
}

uint64_t sub_199D40@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  v7 = a2 & 1;
  swift_retain(a1);
  v9 = sub_14A78(v8, v7);
  swift_release(a1);
  v11 = 0;
  v12 = 1;
  swift_retain(a3);
  return sub_1A1BA8(v9, a3, &v11, a4);
}

uint64_t sub_199DB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1994A0(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_199DD0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];
  Swift::String v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51F0);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_2EFA20;
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = 0xE000000000000000;
  v13._object = (void *)0xE000000000000000;
  v4._object = (void *)0x8000000000312520;
  v4._countAndFlagsBits = 0xD000000000000014;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v2, v5, v13);

  *(Swift::String *)(v1 + 32) = v6;
  v7 = (_QWORD *)LegacyLockup.subtitles.getter();
  if (v7)
  {
    v8 = v7;
    if (v7[2])
    {
      v9 = v7[4];
      v3 = v7[5];
      swift_bridgeObjectRetain(v3);
    }
    else
    {
      v9 = 0;
    }
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v3;
  type metadata accessor for EyebrowBuilder(0);
  v12[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA198);
  v12[4] = sub_10EDC(&qword_3DA1A0, &qword_3DA198, (uint64_t)&protocol conformance descriptor for [A]);
  v12[0] = v1;
  v10 = static EyebrowBuilder.concatenate(captionElements:uppercased:)(v12, 0);
  __swift_destroy_boxed_opaque_existential_0(v12);
  return v10;
}

uint64_t sub_199F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char *v26;
  char *v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for StandardSearchResultView(0);
  __chkstk_darwin(v6);
  v35 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - v12;
  v15 = LegacyLockup.artwork.getter(v14);
  v16 = LegacyLockup.title.getter(v15);
  if (v17)
    v18 = v16;
  else
    v18 = 0;
  if (v17)
    v19 = v17;
  else
    v19 = 0xE000000000000000;
  v20 = sub_199DD0();
  if (v21)
    v23 = v20;
  else
    v23 = 0;
  if (v21)
    v24 = v21;
  else
    v24 = 0xE000000000000000;
  v25 = LegacyLockup.isExplicit.getter(v22);
  *(_QWORD *)v10 = swift_getKeyPath(&unk_2FB4D8);
  v10[8] = 0;
  sub_D210((uint64_t)v5, (uint64_t)&v10[v6[5]], &qword_3D0A58);
  v26 = &v10[v6[6]];
  *(_QWORD *)v26 = v18;
  *((_QWORD *)v26 + 1) = v19;
  v27 = &v10[v6[7]];
  *(_QWORD *)v27 = v23;
  *((_QWORD *)v27 + 1) = v24;
  v10[v6[8]] = v25 & 1;
  sub_1B79C((uint64_t)v10, (uint64_t)v13, type metadata accessor for StandardSearchResultView);
  KeyPath = swift_getKeyPath(&unk_2FB758);
  v29 = v35;
  sub_19C4C((uint64_t)v13, v35, type metadata accessor for StandardSearchResultView);
  v30 = v36;
  sub_19C4C(v29, v36, type metadata accessor for StandardSearchResultView);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA190);
  v32 = v30 + *(int *)(v31 + 48);
  *(_QWORD *)v32 = 0;
  *(_BYTE *)(v32 + 8) = 1;
  v33 = v30 + *(int *)(v31 + 64);
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = KeyPath;
  *(_BYTE *)(v33 + 16) = 0;
  swift_retain_n(a1, 2);
  swift_retain(KeyPath);
  sub_FA4C((uint64_t)v13, type metadata accessor for StandardSearchResultView);
  swift_release(KeyPath);
  swift_release(a1);
  return sub_FA4C(v29, type metadata accessor for StandardSearchResultView);
}

uint64_t sub_19A174(uint64_t a1, uint64_t a2)
{
  return sub_19A3FC(a1, a2, (uint64_t (*)(uint64_t))sub_199F3C);
}

uint64_t sub_19A180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __n128 v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  char *v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for StandardSearchResultView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - v14;
  v17 = LegacyLockup.artwork.getter(v16);
  v18 = LegacyLockup.title.getter(v17);
  v20 = v19;
  v21 = (_QWORD *)LegacyLockup.subtitles.getter();
  v36 = v9;
  v37 = a2;
  if (v21)
  {
    v23 = v21;
    if (v21[2])
    {
      v24 = v21[4];
      v25 = v21[5];
      swift_bridgeObjectRetain(v25);
    }
    else
    {
      v24 = 0;
      v25 = 0xE000000000000000;
    }
    v22 = swift_bridgeObjectRelease(v23);
  }
  else
  {
    v24 = 0;
    v25 = 0xE000000000000000;
  }
  if (!v20)
  {
    v20 = 0xE000000000000000;
    v18 = 0;
  }
  v26 = LegacyLockup.isExplicit.getter(v22);
  *(_QWORD *)v12 = swift_getKeyPath(&unk_2FB4D8);
  v12[8] = 0;
  sub_D210((uint64_t)v6, (uint64_t)&v12[v7[5]], &qword_3D0A58);
  v27 = (uint64_t *)&v12[v7[6]];
  *v27 = v18;
  v27[1] = v20;
  v28 = &v12[v7[7]];
  *(_QWORD *)v28 = v24;
  *((_QWORD *)v28 + 1) = v25;
  v12[v7[8]] = v26 & 1;
  sub_1B79C((uint64_t)v12, (uint64_t)v15, type metadata accessor for StandardSearchResultView);
  KeyPath = swift_getKeyPath(&unk_2FB758);
  v30 = (uint64_t)v36;
  sub_19C4C((uint64_t)v15, (uint64_t)v36, type metadata accessor for StandardSearchResultView);
  v31 = v37;
  sub_19C4C(v30, v37, type metadata accessor for StandardSearchResultView);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA190);
  v33 = v31 + *(int *)(v32 + 48);
  *(_QWORD *)v33 = 0;
  *(_BYTE *)(v33 + 8) = 1;
  v34 = v31 + *(int *)(v32 + 64);
  *(_QWORD *)v34 = a1;
  *(_QWORD *)(v34 + 8) = KeyPath;
  *(_BYTE *)(v34 + 16) = 0;
  swift_retain_n(a1, 2);
  swift_retain(KeyPath);
  sub_FA4C((uint64_t)v15, type metadata accessor for StandardSearchResultView);
  swift_release(KeyPath);
  swift_release(a1);
  return sub_FA4C(v30, type metadata accessor for StandardSearchResultView);
}

uint64_t sub_19A3F0(uint64_t a1, uint64_t a2)
{
  return sub_19A3FC(a1, a2, (uint64_t (*)(uint64_t))sub_19A180);
}

uint64_t sub_19A3FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA178);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v3;
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v13);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3DA180);
  v14 = a3(v12);
  static AccessibilityChildBehavior.combine.getter(v14);
  v15 = sub_10EDC(&qword_3DA188, &qword_3DA178, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v8, v9, v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_D1D4((uint64_t)v11, &qword_3DA178);
}

uint64_t sub_19A53C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;

  v28 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ChannelSearchResultView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - v11;
  v14 = LegacyLockup.artwork.getter(v13);
  v15 = LegacyLockup.title.getter(v14);
  if (v16)
    v17 = v15;
  else
    v17 = 0;
  if (v16)
    v18 = v16;
  else
    v18 = 0xE000000000000000;
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v29._object = (void *)0xE000000000000000;
  v20._object = (void *)0x8000000000312500;
  v20._countAndFlagsBits = 0xD000000000000017;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v29);

  sub_D210((uint64_t)v3, (uint64_t)v9, &qword_3D0A58);
  v23 = &v9[*(int *)(v4 + 20)];
  *(_QWORD *)v23 = v17;
  *((_QWORD *)v23 + 1) = v18;
  *(Swift::String *)&v9[*(int *)(v4 + 24)] = v22;
  sub_1B79C((uint64_t)v9, (uint64_t)v12, type metadata accessor for ChannelSearchResultView);
  sub_19C4C((uint64_t)v12, (uint64_t)v6, type metadata accessor for ChannelSearchResultView);
  v24 = v28;
  sub_19C4C((uint64_t)v6, v28, type metadata accessor for ChannelSearchResultView);
  v25 = v24 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DA170) + 48);
  *(_QWORD *)v25 = 0;
  *(_BYTE *)(v25 + 8) = 1;
  sub_FA4C((uint64_t)v12, type metadata accessor for ChannelSearchResultView);
  return sub_FA4C((uint64_t)v6, type metadata accessor for ChannelSearchResultView);
}

uint64_t sub_19A754@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_19A774(*v1, (uint64_t (*)(uint64_t))sub_19A53C, a1);
}

uint64_t sub_19A774@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];

  v24 = a2;
  v26 = a3;
  v27 = type metadata accessor for AccessibilityTraits(0);
  v25 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AccessibilityChildBehavior(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA150);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA158);
  v23 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v16);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3DA160);
  v17 = v24(a1);
  static AccessibilityChildBehavior.combine.getter(v17);
  v18 = sub_10EDC(&qword_3DA168, &qword_3DA150, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v9, v10, v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = sub_D1D4((uint64_t)v12, &qword_3DA150);
  static AccessibilityTraits.isButton.getter(v19);
  v28[0] = v10;
  v28[1] = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v28, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityAddTraits(_:)(v5, v13, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v15, v13);
}

uint64_t sub_19A998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ChannelSearchResultView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  v14 = LegacyLockup.artwork.getter(v13);
  v15 = LegacyLockup.title.getter(v14);
  if (v16)
    v17 = v15;
  else
    v17 = 0;
  v18 = 0xE000000000000000;
  if (v16)
    v19 = v16;
  else
    v19 = 0xE000000000000000;
  v20 = LegacyLockup.subtitle.getter(v15);
  if (v21)
    v22 = v20;
  else
    v22 = 0;
  if (v21)
    v18 = v21;
  sub_D210((uint64_t)v3, (uint64_t)v9, &qword_3D0A58);
  v23 = &v9[*(int *)(v4 + 20)];
  *(_QWORD *)v23 = v17;
  *((_QWORD *)v23 + 1) = v19;
  v24 = &v9[*(int *)(v4 + 24)];
  *(_QWORD *)v24 = v22;
  *((_QWORD *)v24 + 1) = v18;
  sub_1B79C((uint64_t)v9, (uint64_t)v12, type metadata accessor for ChannelSearchResultView);
  sub_19C4C((uint64_t)v12, (uint64_t)v6, type metadata accessor for ChannelSearchResultView);
  v25 = v29;
  sub_19C4C((uint64_t)v6, v29, type metadata accessor for ChannelSearchResultView);
  v26 = v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DA170) + 48);
  *(_QWORD *)v26 = 0;
  *(_BYTE *)(v26 + 8) = 1;
  sub_FA4C((uint64_t)v12, type metadata accessor for ChannelSearchResultView);
  return sub_FA4C((uint64_t)v6, type metadata accessor for ChannelSearchResultView);
}

uint64_t sub_19AB54@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_19A774(*v1, (uint64_t (*)(uint64_t))sub_19A998, a1);
}

uint64_t sub_19AB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t result;

  KeyPath = swift_getKeyPath(&unk_2FB508);
  v7 = swift_getKeyPath(&unk_2FB4D8);
  v8 = swift_retain(a2);
  v9 = ModernShelf.ItemPresentation.itemKind.getter(v8);
  v10 = ModernShelf.ItemKind.rawValue.getter(v9);
  v12 = v11;
  v14 = ModernShelf.ItemKind.rawValue.getter(58);
  v15 = v13;
  if (v10 == v14 && v12 == v13)
  {
    v16 = 1;
    v15 = v12;
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v13, 0);
  }
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v15);
  v17 = type metadata accessor for ModernShelf.ItemPresentation(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
  *(_QWORD *)a3 = KeyPath;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = v7;
  *(_BYTE *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = a2;
  *(_BYTE *)(a3 + 48) = v16 & 1;
  return result;
}

unint64_t sub_19AC7C()
{
  unint64_t result;

  result = qword_3DA0C8;
  if (!qword_3DA0C8)
  {
    result = swift_getWitnessTable(&unk_2FB438, &type metadata for TopResultCell);
    atomic_store(result, (unint64_t *)&qword_3DA0C8);
  }
  return result;
}

unint64_t sub_19ACC0()
{
  unint64_t result;

  result = qword_3DA0D0;
  if (!qword_3DA0D0)
  {
    result = swift_getWitnessTable(&unk_2FB614, &type metadata for SearchResultCell);
    atomic_store(result, (unint64_t *)&qword_3DA0D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TopResultShowCell()
{
  return &type metadata for TopResultShowCell;
}

ValueMetadata *type metadata accessor for TopResultChannelCell()
{
  return &type metadata for TopResultChannelCell;
}

uint64_t destroy for SearchEpisodeCell(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[2]);
}

uint64_t _s23ShelfKitCollectionViews17SearchEpisodeCellVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  swift_retain(v3);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for SearchEpisodeCell(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v5;
  swift_retain(v4);
  swift_release(v6);
  v7 = a2[2];
  v8 = a1[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

uint64_t *assignWithTake for SearchEpisodeCell(uint64_t *a1, uint64_t *a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_release(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEpisodeCell(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchEpisodeCell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchEpisodeCell()
{
  return &type metadata for SearchEpisodeCell;
}

double destroy for TopResultCell(uint64_t a1)
{
  double result;

  sub_A3A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 24));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for TopResultCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_A304(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_retain(v7);
  swift_retain(v9);
  return a1;
}

uint64_t assignWithCopy for TopResultCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_A304(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_A3A4(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a2 + 32);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 32) = v11;
  swift_retain(v10);
  swift_release(v12);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v13;
  swift_retain(v13);
  swift_release(v14);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for TopResultCell(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_A3A4(v5, v6, v7);
  v8 = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v8;
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v10);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TopResultCell(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TopResultCell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TopResultCell()
{
  return &type metadata for TopResultCell;
}

double destroy for SearchResultCell(uint64_t a1)
{
  double result;

  sub_A3A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 24)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SearchResultCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_A304(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  return a1;
}

uint64_t assignWithCopy for SearchResultCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_A304(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_A3A4(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for SearchResultCell(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_A3A4(v5, v6, v7);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultCell(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultCell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultCell()
{
  return &type metadata for SearchResultCell;
}

unint64_t sub_19B348()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_3DA0D8;
  if (!qword_3DA0D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA070);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA078);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA080);
    v2[2] = sub_10EDC(&qword_3DA088, &qword_3DA078, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v2[3] = sub_1992AC();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:style:content:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA0D8);
  }
  return result;
}

uint64_t sub_19B418(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32FA2C, 1);
}

unint64_t sub_19B42C()
{
  unint64_t result;

  result = qword_3DA0E0;
  if (!qword_3DA0E0)
  {
    result = swift_getWitnessTable(&unk_2FB5C4, &type metadata for SearchResultCell);
    atomic_store(result, (unint64_t *)&qword_3DA0E0);
  }
  return result;
}

uint64_t sub_19B470(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32FA04, 1);
}

uint64_t sub_19B480(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32F9DC, 1);
}

uint64_t sub_19B490(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32F9B4, 1);
}

uint64_t sub_19B4A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_19B4CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1997E8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_19B4E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_199D40(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_19B4FC()
{
  unint64_t result;

  result = qword_3DA128;
  if (!qword_3DA128)
  {
    result = swift_getWitnessTable(&unk_30165C, &type metadata for TranscriptSearchResultView);
    atomic_store(result, (unint64_t *)&qword_3DA128);
  }
  return result;
}

unint64_t sub_19B540()
{
  unint64_t result;

  result = qword_3DA130;
  if (!qword_3DA130)
  {
    result = swift_getWitnessTable(&unk_303B78, &type metadata for EyebrowSearchResultView);
    atomic_store(result, (unint64_t *)&qword_3DA130);
  }
  return result;
}

uint64_t sub_19B584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19B5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {
    swift_retain(a1);
    swift_retain(a3);
    a1 = a4;
    a3 = a5;
    a4 = a6;
  }
  swift_retain(a1);
  swift_retain(a3);
  return swift_retain(a4);
}

uint64_t sub_19B628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  swift_release(a1);
  swift_release(a3);
  result = swift_release(a4);
  if ((a7 & 1) != 0)
  {
    swift_release(a5);
    return swift_release(a6);
  }
  return result;
}

uint64_t sub_19B6A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_1993CC();
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19B710()
{
  unint64_t result;

  result = qword_3DA1B8;
  if (!qword_3DA1B8)
  {
    result = swift_getWitnessTable(&unk_2FB804, &type metadata for SearchChannelCell);
    atomic_store(result, (unint64_t *)&qword_3DA1B8);
  }
  return result;
}

unint64_t sub_19B754()
{
  unint64_t result;

  result = qword_3DA1C0;
  if (!qword_3DA1C0)
  {
    result = swift_getWitnessTable(&unk_2FB7B4, &type metadata for SearchShowCell);
    atomic_store(result, (unint64_t *)&qword_3DA1C0);
  }
  return result;
}

void sub_19B798(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if ((a5 & 1) != 0)
    swift_retain(a1);
  else
    sub_19B7B8(a1, a2, a3, a4 & 1);
}

uint64_t sub_19B7B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  if ((a4 & 1) != 0)
  {
    v4 = a1;
  }
  else
  {
    v4 = a3;
    swift_retain(a1);
  }
  return swift_retain(v4);
}

void sub_19B7E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if ((a5 & 1) != 0)
    swift_release(a1);
  else
    sub_19B808(a1, a2, a3, a4 & 1);
}

uint64_t sub_19B808(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
    swift_release(a3);
  return swift_release(a1);
}

ValueMetadata *type metadata accessor for SearchShowCell()
{
  return &type metadata for SearchShowCell;
}

ValueMetadata *type metadata accessor for SearchChannelCell()
{
  return &type metadata for SearchChannelCell;
}

uint64_t sub_19B854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA0F0);
  v1 = type metadata accessor for CompactPlayButton(255);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA0E8);
  v6 = sub_10EDC(&qword_3DA108, &qword_3DA0E8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v3 = sub_89A0(&qword_3DA110, type metadata accessor for CompactPlayButton, (uint64_t)&protocol conformance descriptor for CompactPlayButton);
  v5 = v0;
  v6 = v1;
  v7 = OpaqueTypeConformance2;
  v8 = v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.accessibilityActions<A>(_:)>>, 1);
}

unint64_t sub_19B928()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_3DA1C8;
  if (!qword_3DA1C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA1D0);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA150);
    v2[1] = sub_10EDC(&qword_3DA168, &qword_3DA150, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_89A0(&qword_3D0D28, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA1C8);
  }
  return result;
}

uint64_t sub_19B9F4()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA178);
  v1[1] = sub_10EDC(&qword_3DA188, &qword_3DA178, (uint64_t)&protocol conformance descriptor for HStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

unint64_t sub_19BA5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA1D8;
  if (!qword_3DA1D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA1E0);
    sub_10EDC(&qword_3DA1E8, &qword_3DA1F0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA1D8);
  }
  return result;
}

uint64_t sub_19BAE0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32FA7C, 1);
}

uint64_t sub_19BAF0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32FA54, 1);
}

void sub_19BB0C()
{
  qword_3DA1F8 = 0x4024000000000000;
}

uint64_t sub_19BB1C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v18);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a2[4];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = *(int *)(a3 + 24);
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    swift_bridgeObjectRetain(v7);
    swift_retain(v8);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = *(int *)(a3 + 28);
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    LOBYTE(v8) = *(_BYTE *)(v15 + 16);
    sub_A304(*(_QWORD *)v15, v17, v8);
    *(_QWORD *)v14 = v16;
    *(_QWORD *)(v14 + 8) = v17;
    *(_BYTE *)(v14 + 16) = v8;
  }
  return a1;
}

uint64_t sub_19BC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return sub_A3A4(*(_QWORD *)(a1 + *(int *)(a2 + 28)), *(_QWORD *)(a1 + *(int *)(a2 + 28) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 28) + 16));
}

uint64_t sub_19BC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  LOBYTE(v7) = *(_BYTE *)(v14 + 16);
  sub_A304(*(_QWORD *)v14, v16, v7);
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(v13 + 8) = v16;
  *(_BYTE *)(v13 + 16) = v7;
  return a1;
}

_QWORD *sub_19BD28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v8 = a1[4];
  v9 = a2[4];
  a1[4] = v9;
  swift_retain(v9);
  swift_release(v8);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = *(int *)(a3 + 28);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *((_QWORD *)v16 + 1);
  LOBYTE(v11) = v16[16];
  sub_A304(*(_QWORD *)v16, v18, (char)v11);
  v19 = *(_QWORD *)v15;
  v20 = *((_QWORD *)v15 + 1);
  v21 = v15[16];
  *(_QWORD *)v15 = v17;
  *((_QWORD *)v15 + 1) = v18;
  v15[16] = (char)v11;
  sub_A3A4(v19, v20, v21);
  return a1;
}

uint64_t sub_19BE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  return a1;
}

uint64_t sub_19BEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v8);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 16);
  v17 = *(_QWORD *)v14;
  v18 = *(_QWORD *)(v14 + 8);
  v19 = *(_BYTE *)(v14 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_BYTE *)(v14 + 16) = v16;
  sub_A3A4(v17, v18, v19);
  return a1;
}

uint64_t sub_19BF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19BF68);
}

uint64_t sub_19BF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_19BFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19C000);
}

uint64_t sub_19C000(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for HeroBorder(uint64_t a1)
{
  uint64_t result;

  result = qword_3DA2D0;
  if (!qword_3DA2D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeroBorder);
  return result;
}

void sub_19C0B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_2FB8B8;
  v4[1] = &unk_2FB8D0;
  sub_1930C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_2FB8E8;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_19C138(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32FAF0, 1);
}

void sub_19C148()
{
  qword_3DA200 = static Font.Weight.semibold.getter();
}

double sub_19C164()
{
  double result;

  result = 4.0;
  xmmword_3DA208 = xmmword_2FB860;
  *(_OWORD *)&qword_3DA218 = xmmword_2FB870;
  return result;
}

uint64_t sub_19C184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = static Color.white.getter();
  v1 = Color.opacity(_:)(0.4);
  result = swift_release(v0);
  qword_3DA228 = v1;
  return result;
}

uint64_t sub_19C1C4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for BlendMode(0);
  __swift_allocate_value_buffer(v0, qword_3DA230);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3DA230);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for BlendMode.plusLighter(_:), v0);
}

void sub_19C21C()
{
  qword_3DA248 = 0x4028000000000000;
}

uint64_t sub_19C22C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v3);
  v6 = (double *)((char *)&v19 - v5);
  v7 = type metadata accessor for UnevenRoundedRectangle(0, v4);
  __swift_allocate_value_buffer(v7, qword_3DA250);
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_3DA250);
  if (qword_3CF828 != -1)
    swift_once(&qword_3CF828, sub_19C21C);
  v9 = *(double *)&qword_3DA248;
  ((void (*)(void))static HeroContainer.cardShape.getter)();
  v10 = *v6;
  v11 = sub_FA4C((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  static HeroContainer.cardShape.getter(v11);
  v12 = &v2[*(int *)(v0 + 20)];
  *(double *)v8 = RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)(0.0, v10, 0.0, v9);
  *(_QWORD *)(v8 + 8) = v13;
  *(_QWORD *)(v8 + 16) = v14;
  *(_QWORD *)(v8 + 24) = v15;
  v16 = v8 + *(int *)(v7 + 20);
  v17 = type metadata accessor for RoundedCornerStyle(0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, v12, v17);
}

void sub_19C380()
{
  qword_3DA268 = 0x4024000000000000;
}

void sub_19C390()
{
  qword_3DA270 = 0x4010000000000000;
}

uint64_t sub_19C3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  void (*v41)(char *, uint64_t, uint64_t, __n128);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA310);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA318);
  __chkstk_darwin(v47);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA320);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA328);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA330);
  v17 = __chkstk_darwin(v46);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2[1];
  if (v20 && ((v20 & 0x2000000000000000) != 0 ? (v21 = HIBYTE(v20) & 0xF) : (v21 = *v2 & 0xFFFFFFFFFFFFLL), v21))
  {
    *v12 = static Alignment.center.getter(v16, v17);
    v12[1] = v22;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA370);
    v24 = sub_19C704(v2, (uint64_t)v12 + *(int *)(v23 + 44));
    v26 = static Alignment.center.getter(v24, v25);
    v44 = a2;
    v28 = v27;
    v29 = (uint64_t)&v15[*(int *)(v13 + 36)];
    sub_D184((uint64_t)v12, v29, &qword_3DA320);
    v30 = (uint64_t *)(v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DA358) + 36));
    *v30 = v26;
    v30[1] = v28;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, v45, v4);
    v31 = sub_D1D4((uint64_t)v12, &qword_3DA320);
    v32 = static Alignment.topTrailing.getter(v31);
    v34 = v33;
    v35 = v46;
    v36 = (uint64_t)&v19[*(int *)(v46 + 36)];
    sub_19CC90(v36);
    v37 = (uint64_t *)(v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3DA368) + 36));
    *v37 = v32;
    v37[1] = v34;
    sub_D210((uint64_t)v15, (uint64_t)v19, &qword_3DA328);
    sub_D184((uint64_t)v19, (uint64_t)v9, &qword_3DA330);
    swift_storeEnumTagMultiPayload(v9, v47, 0);
    v38 = sub_19D804();
    v39 = sub_10EDC(&qword_3DA348, &qword_3DA310, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    _ConditionalContent<>.init(storage:)(v9, v35, v4, v38, v39);
    return sub_D1D4((uint64_t)v19, &qword_3DA330);
  }
  else
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
    v41(v7, v45, v4, v17);
    ((void (*)(char *, char *, uint64_t))v41)(v9, v7, v4);
    swift_storeEnumTagMultiPayload(v9, v47, 1);
    v42 = sub_19D804();
    v43 = sub_10EDC(&qword_3DA348, &qword_3DA310, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    _ConditionalContent<>.init(storage:)(v9, v46, v4, v42, v43);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_19C704@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  double v27;
  double v28;
  CGFloat v29;
  double v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;

  v74 = a2;
  v71 = type metadata accessor for BlendMode(0);
  v3 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA388);
  __chkstk_darwin(v69);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA390);
  __chkstk_darwin(v70);
  v9 = (double *)((char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v72 = (uint64_t)&v67 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA398);
  __chkstk_darwin(v12);
  v73 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v67 - v15;
  v18 = a1[3];
  v19 = a1[4];
  *(_QWORD *)&v79 = a1[2];
  v17 = v79;
  *((_QWORD *)&v79 + 1) = v18;
  *(_QWORD *)&v80 = v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA380);
  State.wrappedValue.getter(&v75, v20);
  v21 = v75;
  v22 = *(double *)&v76;
  v23 = (char *)a1 + *(int *)(type metadata accessor for HeroBorder(0) + 28);
  v24 = *(_QWORD *)v23;
  v25 = *((_QWORD *)v23 + 1);
  v26 = v23[16];
  sub_A304(*(_QWORD *)v23, v25, v26);
  v27 = sub_14874(v24, v25, v26);
  v29 = v28;
  sub_A3A4(v24, v25, v26);
  *(_QWORD *)&v79 = v17;
  *((_QWORD *)&v79 + 1) = v18;
  *(_QWORD *)&v80 = v19;
  State.wrappedValue.getter(&v75, v20);
  v30 = *(double *)&v76;
  if (qword_3CF838 != -1)
    swift_once(&qword_3CF838, sub_19C380);
  sub_19D0E0((uint64_t)v16, v27, v29, v30, *(double *)&qword_3DA268, v30 + *(double *)&qword_3DA268, v21, v22);
  v32 = static Color.white.getter(v31);
  v33 = Color.opacity(_:)(0.5);
  swift_release(v32);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA3A0);
  v35 = swift_allocObject(v34, 80, 7);
  v67 = xmmword_2F5ED0;
  *(_OWORD *)(v35 + 16) = xmmword_2F5ED0;
  swift_retain(v33);
  *(_QWORD *)(v35 + 32) = Gradient.Stop.init(color:location:)(v36, 0.0);
  *(_QWORD *)(v35 + 40) = v37;
  swift_retain(v33);
  *(_QWORD *)(v35 + 48) = Gradient.Stop.init(color:location:)(v38, 0.299065421);
  *(_QWORD *)(v35 + 56) = v39;
  v40 = Color.opacity(_:)(0.0);
  *(_QWORD *)(v35 + 64) = Gradient.Stop.init(color:location:)(v40, 1.0);
  *(_QWORD *)(v35 + 72) = v41;
  Gradient.init(stops:)(v35);
  LinearGradient.init(gradient:startPoint:endPoint:)(&v75, v42, 0.0, 0.0, 0.0, 0.75);
  v43 = v75;
  v68 = v76;
  v44 = v77;
  v45 = v78;
  v46 = swift_release(v33);
  v47 = static Color.black.getter(v46);
  v48 = Color.opacity(_:)(0.3);
  swift_release(v47);
  v49 = swift_allocObject(v34, 80, 7);
  *(_OWORD *)(v49 + 16) = v67;
  swift_retain(v48);
  *(_QWORD *)(v49 + 32) = Gradient.Stop.init(color:location:)(v50, 0.0);
  *(_QWORD *)(v49 + 40) = v51;
  swift_retain(v48);
  *(_QWORD *)(v49 + 48) = Gradient.Stop.init(color:location:)(v52, 0.299065421);
  *(_QWORD *)(v49 + 56) = v53;
  v54 = Color.opacity(_:)(0.0);
  *(_QWORD *)(v49 + 64) = Gradient.Stop.init(color:location:)(v54, 1.0);
  *(_QWORD *)(v49 + 72) = v55;
  Gradient.init(stops:)(v49);
  LinearGradient.init(gradient:startPoint:endPoint:)(&v79, v56, 0.0, 0.0, 0.0, 0.75);
  v57 = swift_release(v48);
  v58 = v71;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v5, enum case for BlendMode.plusDarker(_:), v71, v57);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v7[*(int *)(v69 + 36)], v5, v58);
  v59 = v80;
  *(_OWORD *)v7 = v79;
  *((_OWORD *)v7 + 1) = v59;
  *((_QWORD *)v7 + 4) = v81;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v58);
  v60 = v70;
  sub_D184((uint64_t)v7, (uint64_t)v9 + *(int *)(v70 + 52), &qword_3DA388);
  *v9 = v21;
  v9[1] = v22;
  *(_WORD *)((char *)v9 + *(int *)(v60 + 56)) = 256;
  sub_D1D4((uint64_t)v7, &qword_3DA388);
  v61 = v72;
  sub_D210((uint64_t)v9, v72, &qword_3DA390);
  v62 = v73;
  sub_D184((uint64_t)v16, v73, &qword_3DA398);
  sub_D184(v61, (uint64_t)v9, &qword_3DA390);
  v63 = v74;
  sub_D184(v62, v74, &qword_3DA398);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA3A8);
  v65 = v63 + *(int *)(v64 + 48);
  *(double *)v65 = v21;
  *(double *)(v65 + 8) = v22;
  *(double *)(v65 + 16) = v43;
  *(_OWORD *)(v65 + 24) = v68;
  *(_QWORD *)(v65 + 40) = v44;
  *(_QWORD *)(v65 + 48) = v45;
  *(_WORD *)(v65 + 56) = 256;
  sub_D184((uint64_t)v9, v63 + *(int *)(v64 + 64), &qword_3DA390);
  swift_bridgeObjectRetain(*(_QWORD *)&v43);
  sub_D1D4(v61, &qword_3DA390);
  sub_D1D4((uint64_t)v16, &qword_3DA398);
  sub_D1D4((uint64_t)v9, &qword_3DA390);
  swift_bridgeObjectRelease(*(_QWORD *)&v43);
  return sub_D1D4(v62, &qword_3DA398);
}

uint64_t sub_19CC90@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD v55[2];

  v2 = v1;
  v4 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v4);
  v54 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HeroBorder(0);
  v53 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v53 + 64);
  __chkstk_darwin(v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E88);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2[1];
  if (v11)
  {
    v12 = *v2;
    v13 = v2[1];
  }
  else
  {
    v12 = 0;
    v13 = 0xE000000000000000;
  }
  v55[0] = v12;
  v55[1] = v13;
  v14 = sub_D254();
  swift_bridgeObjectRetain(v11);
  v15 = Text.init<A>(_:)(v55, &type metadata for String, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  ScaledMetric.wrappedValue.getter(v55, v22);
  v23 = *(double *)v55;
  if (qword_3CF808 != -1)
    swift_once(&qword_3CF808, sub_19C148);
  v24 = qword_3DA200;
  v25 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 1, 1, v25);
  v26 = static Font.system(size:weight:design:)(v24, 0, v10, v23);
  sub_D1D4((uint64_t)v10, &qword_3D0E88);
  v28 = Text.font(_:)(v27);
  v50 = v29;
  v51 = v28;
  v49 = v30;
  v52 = v31;
  swift_release(v26);
  sub_D170(v15, v17, v19 & 1);
  swift_bridgeObjectRelease(v21);
  if (qword_3CF810 != -1)
    v32 = swift_once(&qword_3CF810, sub_19C164);
  v33 = xmmword_3DA208;
  v34 = qword_3DA218;
  v48 = unk_3DA220;
  v35 = static Edge.Set.all.getter(v32);
  if (qword_3CF818 != -1)
    swift_once(&qword_3CF818, sub_19C184);
  v36 = qword_3DA228;
  sub_19C4C((uint64_t)v2, (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeroBorder);
  v37 = *(unsigned __int8 *)(v53 + 80);
  v38 = (v37 + 16) & ~v37;
  v39 = swift_allocObject(&unk_387720, v38 + v7, v37 | 7);
  sub_19D9D0((uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v39 + v38);
  v40 = qword_3CF820;
  swift_retain(v36);
  if (v40 != -1)
    swift_once(&qword_3CF820, sub_19C1C4);
  v41 = type metadata accessor for BlendMode(0);
  v42 = __swift_project_value_buffer(v41, (uint64_t)qword_3DA230);
  v43 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v54, v42, v41);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA378);
  sub_19C4C(v43, a1 + *(int *)(v44 + 36), (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  v45 = v50;
  *(_QWORD *)a1 = v51;
  *(_QWORD *)(a1 + 8) = v45;
  *(_BYTE *)(a1 + 16) = v49 & 1;
  *(_QWORD *)(a1 + 24) = v52;
  *(_BYTE *)(a1 + 32) = v35;
  *(_OWORD *)(a1 + 40) = v33;
  v46 = v48;
  *(_QWORD *)(a1 + 56) = v34;
  *(_QWORD *)(a1 + 64) = v46;
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v36;
  *(_QWORD *)(a1 + 88) = sub_19D068;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = sub_19DA14;
  *(_QWORD *)(a1 + 112) = v39;
  return sub_FA4C(v43, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
}

void sub_19D068(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = GeometryProxy.size.getter();
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_19D090(_OWORD *a1, uint64_t a2)
{
  __int128 v2;
  uint64_t v3;
  _OWORD v5[2];
  uint64_t v6;

  v2 = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v5[0] = *a1;
  v5[1] = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA380);
  return State.wrappedValue.setter(v5, v3);
}

uint64_t sub_19D0E0@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, double a4@<D2>, double a5@<D3>, CGFloat a6@<D4>, double a7@<D5>, double a8@<D6>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _BYTE *v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v54[12];
  int v55;
  __int128 v56;
  __int128 v57;
  _BYTE *v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  unsigned __int8 v71;

  v63 = a1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA3B0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v54[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA3B8);
  __chkstk_darwin(v19);
  v21 = &v54[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA3C0);
  __chkstk_darwin(v22);
  v24 = &v54[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA3C8);
  v28 = __chkstk_darwin(v25);
  v30 = &v54[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a3 <= 0.0 || a2 <= 0.0 || a5 >= a4 || a6 >= a3 || a6 <= 0.0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v27 + 56))(v63, 1, 1, v28);
  v60 = v30;
  v62 = v26;
  v61 = v27;
  v31 = sub_E710(0, &qword_3DA3D0, CABackdropLayer_ptr);
  _CALayerView.init(type:onUpdate:)(v31, sub_19D4E0, 0, v31);
  sub_19D5F0((uint64_t)&v64, a7, a8, a2, a3, a6, a4);
  v57 = v64;
  v32 = v65;
  v33 = v66;
  v58 = v24;
  v34 = *((_QWORD *)&v66 + 1);
  v56 = v67;
  v35 = v68;
  v36 = v69;
  v59 = v22;
  v37 = v70;
  v55 = v71;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16))(v21, v18, v15);
  v38 = &v21[*(int *)(v19 + 36)];
  *(_OWORD *)v38 = v57;
  *((_OWORD *)v38 + 1) = v32;
  v38[32] = v33;
  *((_QWORD *)v38 + 5) = v34;
  *((_OWORD *)v38 + 3) = v56;
  *((_QWORD *)v38 + 8) = v35;
  *((_QWORD *)v38 + 9) = v36;
  v38[80] = v37;
  v38[81] = v55;
  v39 = (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v15);
  v41 = static Alignment.center.getter(v39, v40);
  _FrameLayout.init(width:height:alignment:)(&v64, 0, 1, *(_QWORD *)&a6, 0, v41, v42);
  v43 = (uint64_t)v58;
  sub_D184((uint64_t)v21, (uint64_t)v58, &qword_3DA3B8);
  v44 = (_OWORD *)(v43 + *(int *)(v59 + 36));
  v45 = v65;
  *v44 = v64;
  v44[1] = v45;
  v44[2] = v66;
  v46 = sub_D1D4((uint64_t)v21, &qword_3DA3B8);
  v47 = static Alignment.topTrailing.getter(v46);
  v48 = (uint64_t)v60;
  sub_1A187C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v60, v50, 0.0, 1, INFINITY, 0, v47, v49);
  sub_D1D4(v43, &qword_3DA3C0);
  v51 = v48;
  v52 = v63;
  sub_D210(v51, v63, &qword_3DA3C8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v52, 0, 1, v62);
}

void sub_19D4E0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  Class isa;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_2F03C0;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterAverageColor);
  v5 = v4;
  v6 = objc_allocWithZone((Class)CAFilter);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithType:", v7, swift_bridgeObjectRelease(v5).n128_f64[0]);

  *(_QWORD *)(v3 + 56) = sub_E710(0, &qword_3DA3D8, CAFilter_ptr);
  *(_QWORD *)(v3 + 32) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setFilters:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

}

double sub_19D5F0@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>, double a7@<D5>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  CGPathRef v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  CGRect v46;

  v14 = type metadata accessor for CGPathFillRule(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19DA50(v38, 0.0, 0.0, a4, a5, a2, a3);
  v19 = (void *)Path.cgPath.getter(v18);
  sub_19DE08((uint64_t)v38);
  v46.size.height = a5 - a6;
  v46.origin.x = 0.0;
  v46.origin.y = a6;
  v46.size.width = a5;
  v20 = CGPathCreateWithRect(v46, 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for CGPathFillRule.winding(_:), v14);
  v21 = (void *)CGPathRef.subtracting(_:using:)(v20, v17);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v22 = v21;
  Path.init(_:)(&v39, v22);
  v37 = v39;
  v23 = v40;
  v24 = v41;
  LOBYTE(v15) = v42;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA3A0);
  v26 = swift_allocObject(v25, 80, 7);
  *(_OWORD *)(v26 + 16) = xmmword_2F5ED0;
  v27 = static Color.white.getter((__n128)xmmword_2F5ED0);
  *(_QWORD *)(v26 + 32) = Gradient.Stop.init(color:location:)(v27, 0.0);
  *(_QWORD *)(v26 + 40) = v28.n128_u64[0];
  v29 = static Color.white.getter(v28);
  *(_QWORD *)(v26 + 48) = Gradient.Stop.init(color:location:)(v29, a7 / a6);
  *(_QWORD *)(v26 + 56) = v30;
  v31 = static Color.clear.getter();
  *(_QWORD *)(v26 + 64) = Gradient.Stop.init(color:location:)(v31, 1.0);
  *(_QWORD *)(v26 + 72) = v32;
  v33 = Gradient.init(stops:)(v26);
  LinearGradient.init(gradient:startPoint:endPoint:)(&v43, v33, 0.0, 0.0, 0.0, 1.0);
  v34 = v43;

  *(_OWORD *)a1 = v37;
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v24;
  *(_BYTE *)(a1 + 32) = v15;
  *(_QWORD *)(a1 + 40) = v34;
  result = *(double *)&v44;
  v36 = v45;
  *(_OWORD *)(a1 + 48) = v44;
  *(_OWORD *)(a1 + 64) = v36;
  *(_WORD *)(a1 + 80) = 256;
  return result;
}

unint64_t sub_19D804()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA338;
  if (!qword_3DA338)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA330);
    sub_19D888();
    sub_10EDC(&qword_3DA360, &qword_3DA368, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA338);
  }
  return result;
}

unint64_t sub_19D888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA340;
  if (!qword_3DA340)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA328);
    sub_10EDC(&qword_3DA348, &qword_3DA310, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10EDC(&qword_3DA350, &qword_3DA358, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA340);
  }
  return result;
}

uint64_t sub_19D924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for HeroBorder(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v7 + 32));
  v8 = v7 + *(int *)(v1 + 24);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  sub_A3A4(*(_QWORD *)(v7 + *(int *)(v1 + 28)), *(_QWORD *)(v7 + *(int *)(v1 + 28) + 8), *(_BYTE *)(v7 + *(int *)(v1 + 28) + 16));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_19D9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeroBorder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19DA14(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeroBorder(0) - 8) + 80);
  return sub_19D090(a1, v1 + ((v3 + 16) & ~v3));
}

double sub_19DA50@<D0>(_OWORD *a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, double a6@<D4>, double a7@<D5>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  double v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  double v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  double result;
  __int128 v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  _QWORD v44[5];
  _OWORD v45[2];
  uint64_t v46;
  _QWORD v47[5];
  _OWORD v48[2];
  char v49;
  CGRect v50;

  v43 = a1;
  v42 = type metadata accessor for CGPathFillRule(0);
  v13 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for RoundedRectangle._Inset(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1060);
  __chkstk_darwin(v22);
  v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50.origin.x = a2;
  v50.origin.y = a3;
  v50.size.width = a4;
  v50.size.height = a5;
  v25.n128_f64[0] = CGRectGetMaxX(v50);
  v26 = v25.n128_f64[0] - a6;
  if (qword_3CF830 != -1)
    swift_once(&qword_3CF830, sub_19C22C);
  v27 = type metadata accessor for UnevenRoundedRectangle(0, v25);
  __swift_project_value_buffer(v27, (uint64_t)qword_3DA250);
  v28 = UnevenRoundedRectangle.path(in:)(v44, v26, 0.0, a6, a7);
  v29 = (void *)Path.cgPath.getter(v28);
  v30 = sub_19DE08((uint64_t)v44);
  static HeroContainer.cardShape.getter(v30);
  if (qword_3CF840 != -1)
    swift_once(&qword_3CF840, sub_19C390);
  v31 = *(double *)&qword_3DA270 * 0.5;
  sub_19C4C((uint64_t)v18, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(double *)&v21[*(int *)(v19 + 20)] = v31;
  sub_FA4C((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v45, 0, 0, _swiftEmptyArrayStorage, *(double *)&qword_3DA270, 10.0, 0.0);
  sub_19C4C((uint64_t)v21, (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  v32 = &v24[*(int *)(v22 + 36)];
  v33 = v45[1];
  *(_OWORD *)v32 = v45[0];
  *((_OWORD *)v32 + 1) = v33;
  *((_QWORD *)v32 + 4) = v46;
  sub_FA4C((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  _StrokedShape.path(in:)(v47, v22, a2, a3, a4, a5);
  v34 = sub_D1D4((uint64_t)v24, &qword_3D1060);
  v35 = (void *)Path.cgPath.getter(v34);
  sub_19DE08((uint64_t)v47);
  v36 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for CGPathFillRule.winding(_:), v42);
  v37 = CGPathRef.union(_:using:)(v35, v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v36);
  Path.init(_:)(v48, v37);

  result = *(double *)v48;
  v39 = v48[1];
  v40 = v43;
  *v43 = v48[0];
  v40[1] = v39;
  *((_BYTE *)v40 + 32) = v49;
  return result;
}

double sub_19DDC4@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double *v5;
  double result;
  __int128 v8;
  _OWORD v9[2];
  char v10;

  sub_19DA50(v9, a2, a3, a4, a5, *v5, v5[1]);
  result = *(double *)v9;
  v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_19DE08(uint64_t a1)
{
  sub_19DE3C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_19DE3C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3)
    return swift_release(result);
  return result;
}

ValueMetadata *type metadata accessor for HeroBorder.BorderShape()
{
  return &type metadata for HeroBorder.BorderShape;
}

unint64_t sub_19DE68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA3E0;
  if (!qword_3DA3E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA3E8);
    sub_19D804();
    sub_10EDC(&qword_3DA348, &qword_3DA310, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA3E0);
  }
  return result;
}

uint64_t sub_19DEEC()
{
  return sub_10EDC(&qword_3DA3F0, &qword_3DA3F8, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
}

uint64_t sub_19DF20()
{
  return Shape.sizeThatFits(_:)();
}

uint64_t sub_19DF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_19E0A0();
  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_19DF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_19E0A0();
  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_19DFD8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_19E0A0();
  return Shape.body.getter(a1, v2);
}

unint64_t sub_19E014()
{
  unint64_t result;

  result = qword_3DA400;
  if (!qword_3DA400)
  {
    result = swift_getWitnessTable(&unk_2FB9AC, &type metadata for HeroBorder.BorderShape);
    atomic_store(result, (unint64_t *)&qword_3DA400);
  }
  return result;
}

unint64_t sub_19E05C()
{
  unint64_t result;

  result = qword_3DA408;
  if (!qword_3DA408)
  {
    result = swift_getWitnessTable(&unk_2FB95C, &type metadata for HeroBorder.BorderShape);
    atomic_store(result, (unint64_t *)&qword_3DA408);
  }
  return result;
}

unint64_t sub_19E0A0()
{
  unint64_t result;

  result = qword_3DA410;
  if (!qword_3DA410)
  {
    result = swift_getWitnessTable(&unk_2FB9FC, &type metadata for HeroBorder.BorderShape);
    atomic_store(result, (unint64_t *)&qword_3DA410);
  }
  return result;
}

uint64_t sub_19E0E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19E1FC(a1, UITableViewCell_ptr, a2);
}

uint64_t sub_19E0F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19E1FC(a1, UITableViewCell_ptr, a2);
}

uint64_t sub_19E10C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(v1, "indexPathForRowAtPoint:");
  if (v3)
  {
    v4 = v3;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v3);

    v5 = type metadata accessor for IndexPath(0);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = type metadata accessor for IndexPath(0);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id sub_19E190()
{
  void *v0;
  void *v1;
  Class isa;
  id v3;

  v1 = v0;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(v1, "cellForRowAtIndexPath:", isa);

  return v3;
}

uint64_t sub_19E1F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19E1FC(a1, UICollectionViewCell_ptr, a2);
}

uint64_t sub_19E1FC@<X0>(void *a1@<X0>, _QWORD *a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_opt_self(*a2);
  v11 = swift_dynamicCastObjCClass(a1, v10);
  if (v11)
  {
    v12 = v11;
    v13 = a1;
    v14 = objc_msgSend(v3, "indexPathForCell:", v12);
    if (v14)
    {
      v15 = v14;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v14);

      v16 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 0, 1, v16);
    }
    else
    {

      v19 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
    }
    return sub_19E44C((uint64_t)v9, a3);
  }
  else
  {
    v17 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
  }
}

uint64_t sub_19E34C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19E1FC(a1, UICollectionViewCell_ptr, a2);
}

uint64_t sub_19E368@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(v1, "indexPathForItemAtPoint:");
  if (v3)
  {
    v4 = v3;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v3);

    v5 = type metadata accessor for IndexPath(0);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = type metadata accessor for IndexPath(0);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id sub_19E3EC()
{
  void *v0;
  void *v1;
  Class isa;
  id v3;

  v1 = v0;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(v1, "cellForItemAtIndexPath:", isa);

  return v3;
}

uint64_t sub_19E44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t JULoadingViewController.init(label:presentationContext:pageRenderController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  if (a4)
    v13 = PageRenderController.presenter.getter(v12);
  else
    v13 = 0;
  v14 = dispatch thunk of JULoadingViewController.__allocating_init(label:presentationContext:pageRenderMetrics:)(a1, a2, v11, v13);
  swift_release(a4);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  return v14;
}

uint64_t sub_19E57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v32;

  v1 = v0;
  v2 = type metadata accessor for FlowDestination(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - v7;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v32 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v13((char *)&v32 - v11, v1, v2, v10);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v12, v2);
  if (v14 == enum case for FlowDestination.searchResults(_:))
  {
    ((void (*)(uint64_t *, char *, uint64_t))v13)(v5, v12, v2);
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
    sub_E8C08((uint64_t)v5);
    v15 = 12;
  }
  else if (v14 == enum case for FlowDestination.page(_:) || v14 == enum case for FlowDestination.topLevelPage(_:))
  {
    ((void (*)(uint64_t *, char *, uint64_t))v13)(v5, v12, v2);
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
    swift_release(*v5);
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D0220);
    sub_E8C08((uint64_t)v5 + *(int *)(v16 + 48));
    v15 = 9;
  }
  else if (v14 == enum case for FlowDestination.modernTopCharts(_:))
  {
    ((void (*)(uint64_t *, char *, uint64_t))v13)(v5, v12, v2);
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
    swift_release(*v5);
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D0220);
    sub_E8C08((uint64_t)v5 + *(int *)(v18 + 48));
    v15 = 6;
  }
  else
  {
    if (v14 == enum case for FlowDestination.episodeList(_:))
    {
      ((void (*)(char *, char *, uint64_t))v13)(v8, v12, v2);
      (*(void (**)(char *, uint64_t))(v3 + 96))(v8, v2);
      v19 = *(_QWORD *)v8;
      v20 = *((_QWORD *)v8 + 1);
      v21 = *((_QWORD *)v8 + 2);
      v22 = *((_QWORD *)v8 + 3);
      v23 = *((_QWORD *)v8 + 4);
      v24 = *((_QWORD *)v8 + 5);
      v25 = *((_QWORD *)v8 + 6);
      v26 = *((_QWORD *)v8 + 7);
      if (v8[64] == 9)
      {
        v27 = v23 | v24 | v25;
        if (!(v21 | v20 | v19 | v22 | v27 | v26))
        {
          v15 = 4;
          goto LABEL_6;
        }
        v28 = v21 | v20 | v22 | v27 | v26;
        if (v19 == 3 && v28 == 0)
        {
          v15 = 16;
          goto LABEL_6;
        }
        if (v19 == 4 && v28 == 0)
        {
          v15 = 15;
          goto LABEL_6;
        }
      }
      sub_8D094(v19, v20, v21, v22, v23, v24, v25, v26, v8[64]);
    }
    else
    {
      if (v14 == enum case for FlowDestination.station(_:))
      {
        ((void (*)(uint64_t *, char *, uint64_t))v13)(v5, v12, v2);
        (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
        v15 = *v5;
        goto LABEL_6;
      }
      if (v14 == enum case for FlowDestination.listen(_:))
      {
        v15 = 8;
        goto LABEL_6;
      }
      if (v14 == enum case for FlowDestination.library(_:) || v14 == enum case for FlowDestination.libraryTab(_:))
      {
        v15 = 7;
        goto LABEL_6;
      }
      if (v14 == enum case for FlowDestination.recentlyAdded(_:))
        goto LABEL_39;
      if (v14 == enum case for FlowDestination.recentlyUpdated(_:))
      {
        v15 = 17;
        goto LABEL_6;
      }
      if (v14 == enum case for FlowDestination.shows(_:))
      {
LABEL_39:
        v15 = 1;
        goto LABEL_6;
      }
      if (v14 == enum case for FlowDestination.stationTab(_:))
      {
        v15 = 0;
        goto LABEL_6;
      }
    }
    v15 = 18;
  }
LABEL_6:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  return v15;
}

_QWORD *sub_19E914(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v11);
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    v7 = *(int *)(a3 + 44);
    v8 = (uint64_t)a2 + v7;
    v9 = a1 + v7;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v10 = type metadata accessor for UIColor.RGBAInterpolator(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v8, v10);
  }
  return v3;
}

uint64_t sub_19E9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 44);
  v3 = type metadata accessor for UIColor.RGBAInterpolator(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_19E9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 44);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = type metadata accessor for UIColor.RGBAInterpolator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v7, v9);
  return a1;
}

uint64_t sub_19EA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v4 = *(int *)(a3 + 44);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for UIColor.RGBAInterpolator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_19EB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 44);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = type metadata accessor for UIColor.RGBAInterpolator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t sub_19EB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 44);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = type metadata accessor for UIColor.RGBAInterpolator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v8, v7, v9);
  return a1;
}

uint64_t sub_19EBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19EC00);
}

uint64_t sub_19EC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 80);
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for UIColor.RGBAInterpolator(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_19EC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19EC80);
}

uint64_t sub_19EC80(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 80) = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for UIColor.RGBAInterpolator(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for UberScrollConfiguration(uint64_t a1)
{
  uint64_t result;

  result = qword_3DA470;
  if (!qword_3DA470)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UberScrollConfiguration);
  return result;
}

uint64_t sub_19ED2C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_2FBCC8;
  v4[1] = &unk_2FBCC8;
  v4[2] = &unk_2FBCC8;
  v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[5] = &unk_2FBCC8;
  v4[6] = &unk_2FBCE0;
  result = type metadata accessor for UIColor.RGBAInterpolator(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
    return 0;
  }
  return result;
}

double sub_19EDC0(double a1, double a2, double a3)
{
  unint64_t v3;
  double v5;
  double v6;
  double v7;
  double v8;

  v6 = a2;
  v7 = a1;
  v5 = a3;
  v3 = sub_101014();
  static InterpolateFloats.linearly<A>(_:_:_:)(&v8, &v7, &v6, &v5, &type metadata for CGFloat, v3);
  return v8;
}

void sub_19EE08(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void (*a8)(BOOL), uint64_t a9)
{
  double *v9;
  double v14;
  double v15;
  double v16;
  BOOL v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v23;
  double v24;
  double v25;
  double v26;
  BOOL v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  void *v40;
  uint64_t ObjectType;
  void (*v42)(void *, uint64_t, uint64_t);
  _BOOL8 v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  double v50;
  _BOOL8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  void *v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  id v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double *v84;
  uint64_t v85;
  id v86;

  v82 = a9;
  v15 = *v9;
  v14 = v9[1];
  v16 = 1.0;
  v17 = *v9 == 0.0 && v15 == v14;
  v18 = 1.0;
  if (!v17)
  {
    v19 = fmin((a1 - (a2 - (a2 - v15 * a2))) / (a2 - v15 * a2 - (a2 - v14 * a2)), 1.0);
    v18 = 0.0;
    if (v19 >= 0.0)
      v18 = v19;
  }
  v21 = v9[4];
  v20 = v9[5];
  if (v21 != 0.0 || v21 != v20)
  {
    v23 = fmin((a1 - (a2 - (a2 - v21 * a2))) / (a2 - v21 * a2 - (a2 - v20 * a2)), 1.0);
    v16 = 0.0;
    if (v23 >= 0.0)
      v16 = v23;
  }
  v25 = v9[2];
  v24 = v9[3];
  v26 = 1.0;
  v27 = v25 == 0.0 && v25 == v24;
  v28 = 1.0;
  if (!v27)
  {
    v29 = fmin((a1 - (a2 - (a2 - v25 * a2))) / (a2 - v25 * a2 - (a2 - v24 * a2)), 1.0);
    v28 = 0.0;
    if (v29 >= 0.0)
      v28 = v29;
  }
  v31 = v9[8];
  v30 = v9[9];
  if (v31 != 0.0 || v31 != v30)
  {
    v33 = fmin((a1 - (a2 - (a2 - v31 * a2))) / (a2 - v31 * a2 - (a2 - v30 * a2)), 1.0);
    v26 = 0.0;
    if (v33 >= 0.0)
      v26 = v33;
  }
  v34 = v9[6];
  v35 = 1.0;
  v36 = 1.0;
  if (v34 != 0.0)
  {
    v37 = fmin((a1 - (a2 - (a2 - v34 * a2))) / (a2 - v34 * a2 - (a2 - v34 * a2)), 1.0);
    v36 = 0.0;
    if (v37 >= 0.0)
      v36 = v37;
  }
  v38 = v9[7];
  if (v38 != 0.0)
  {
    v39 = fmin((a1 - (a2 - (a2 - v38 * a2))) / (a2 - v38 * a2 - (a2 - v38 * a2)), 1.0);
    v35 = 0.0;
    if (v39 >= 0.0)
      v35 = v39;
  }
  type metadata accessor for UberScrollConfiguration(0);
  v84 = v9;
  v40 = (void *)UIColor.RGBAInterpolator.value(forInput:)(v26);
  ObjectType = swift_getObjectType();
  v42 = *(void (**)(void *, uint64_t, uint64_t))(a6 + 64);
  v86 = v40;
  v42(v40, ObjectType, a6);
  (*(void (**)(uint64_t, uint64_t, double))(a6 + 16))(ObjectType, a6, v28);
  if (v18 <= 0.0)
  {
    v44 = swift_getObjectType();
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(v44, a4) == 2;
  }
  else
  {
    v43 = 0;
  }
  (*(void (**)(_BOOL8, uint64_t, uint64_t))(a6 + 168))(v43, ObjectType, a6);
  if (a7)
  {
    v45 = objc_msgSend(a7, "titleView");
    if (v45)
    {
      v46 = v45;
      v47 = type metadata accessor for UberNavigationTitleView();
      v48 = (void *)swift_dynamicCastClass(v46, v47);
      if (v48)
      {
        v49 = v48;
        objc_msgSend(v48, "floatingTabBarHeight");
        v51 = v50 <= 0.0 && v28 <= 0.0;
        objc_msgSend(v49, "setHideStandardTitle:", v51, v82);
        *((_BYTE *)v49 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UberNavigationTitleView_backButtonStyle) = v35 <= 0.0;
        sub_2657D8(v35 <= 0.0, 1);
      }

    }
  }
  (*(void (**)(void *, uint64_t, uint64_t, double))(a6 + 184))(a7, ObjectType, a6, v18);
  v52 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, double))(a4 + 24))(v52, a4, v16);
  if (a8)
    a8(v36 <= 0.0);
  v53 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(a6 + 192))(a7, ObjectType, a6);
  v54 = v53;
  if ((unint64_t)v53 >> 62)
  {
    v79 = ObjectType;
    if (v53 < 0)
      v80 = v53;
    else
      v80 = v53 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v53);
    v81 = v80;
    ObjectType = v79;
    v55 = _CocoaArrayWrapper.endIndex.getter(v81);
  }
  else
  {
    v55 = *(_QWORD *)((char *)&dword_10 + (v53 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v53);
  }
  v85 = a6;
  v83 = ObjectType;
  if (v55)
  {
    if (v55 < 1)
    {
      __break(1u);
      return;
    }
    v56 = 0;
    v57 = _swiftEmptyArrayStorage;
    do
    {
      if ((v54 & 0xC000000000000001) != 0)
        v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v56, v54);
      else
        v58 = *(id *)(v54 + 8 * v56 + 32);
      v59 = v58;
      v60 = objc_msgSend(v58, "customView", v82);
      if (v60)
      {
        v61 = v60;
        v62 = swift_getObjectType();
        v63 = swift_conformsToProtocol2(v62, &protocol descriptor for StyledHeaderButton);
        if (v63)
          v64 = v63;
        else
          v64 = 0;
        if (v63)
          v65 = v61;
        else
          v65 = 0;

        if (v65)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
            v57 = sub_20F814(0, v57[2] + 1, 1, v57);
          v67 = v57[2];
          v66 = v57[3];
          if (v67 >= v66 >> 1)
            v57 = sub_20F814((_QWORD *)(v66 > 1), v67 + 1, 1, v57);
          v57[2] = v67 + 1;
          v68 = &v57[2 * v67];
          v68[4] = v65;
          v68[5] = v64;
        }
        else
        {

        }
      }
      else
      {

      }
      ++v56;
    }
    while (v55 != v56);
  }
  else
  {
    v57 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease_n(v54, 2);
  v69 = v57[2];
  if (v69)
  {
    if (v35 <= 0.0)
      v70 = 1;
    else
      v70 = 2;
    swift_bridgeObjectRetain(v57);
    v71 = v57 + 5;
    do
    {
      v73 = (void *)*(v71 - 1);
      v74 = *v71;
      v75 = swift_getObjectType();
      v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 24);
      v77 = v73;
      v76(v70, v75, v74);
      if (v35 <= 0.0)
        v72 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
      else
        v72 = 0;
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v74 + 8))(v72, 1, v75, v74);

      objc_msgSend(v77, "setTintColor:", v86);
      v71 += 2;
      --v69;
    }
    while (v69);
    swift_bridgeObjectRelease(v57);
  }
  v78 = swift_bridgeObjectRelease(v57);
  v78.n128_u64[0] = 1.0;
  if (*((_BYTE *)v84 + 80))
    v78.n128_f64[0] = v28;
  (*(void (**)(uint64_t, __n128))(v85 + 40))(v83, v78);

}

uint64_t sub_19F434()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v0 = type metadata accessor for UberScrollConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_3FCBA8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3FCBA8);
  *(_OWORD *)v1 = xmmword_2FBBD0;
  *(_OWORD *)(v1 + 16) = xmmword_2FBBE0;
  *(_OWORD *)(v1 + 32) = xmmword_2FBBF0;
  *(_OWORD *)(v1 + 48) = xmmword_2FBC00;
  *(_OWORD *)(v1 + 64) = xmmword_2FBC10;
  *(_BYTE *)(v1 + 80) = 0;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  return UIColor.RGBAInterpolator.init(value1:value2:floatInterpolator:)(v2, (id)qword_3D0890, sub_19EDC0, 0);
}

uint64_t sub_19F534()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v0 = type metadata accessor for UberScrollConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_3FCBC0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3FCBC0);
  *(_OWORD *)v1 = xmmword_2FBC20;
  *(_OWORD *)(v1 + 16) = xmmword_2FBC20;
  *(_OWORD *)(v1 + 32) = xmmword_2FBC30;
  *(int64x2_t *)(v1 + 48) = vdupq_n_s64(0x3FE3333333333333uLL);
  *(_OWORD *)(v1 + 64) = xmmword_2FBC20;
  *(_BYTE *)(v1 + 80) = 0;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  return UIColor.RGBAInterpolator.init(value1:value2:floatInterpolator:)(v2, (id)qword_3D0890, sub_19EDC0, 0);
}

uint64_t sub_19F628()
{
  uint64_t v0;
  uint64_t v1;
  id v7;

  v0 = type metadata accessor for UberScrollConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_3FCBD8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3FCBD8);
  *(_OWORD *)v1 = xmmword_2FBC40;
  *(_OWORD *)(v1 + 16) = xmmword_2FBC50;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v1 + 32) = _Q0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_BYTE *)(v1 + 80) = 1;
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  return UIColor.RGBAInterpolator.init(value1:value2:floatInterpolator:)(v7, (id)qword_3D0890, sub_19EDC0, 0);
}

uint64_t sub_19F71C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v0 = type metadata accessor for UberScrollConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_3FCBF0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3FCBF0);
  *(_OWORD *)v1 = xmmword_2FBC10;
  *(_OWORD *)(v1 + 16) = xmmword_2FBC60;
  *(_OWORD *)(v1 + 32) = xmmword_2FBC70;
  *(int64x2_t *)(v1 + 48) = vdupq_n_s64(0x3FE6666666666666uLL);
  *(_OWORD *)(v1 + 64) = xmmword_2FBC10;
  *(_BYTE *)(v1 + 80) = 0;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  return UIColor.RGBAInterpolator.init(value1:value2:floatInterpolator:)(v2, (id)qword_3D0890, sub_19EDC0, 0);
}

uint64_t sub_19F818@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  Swift::String v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  double v29;
  double v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v41;
  char v42;
  double v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  double v48;
  uint64_t v49;
  double v50;
  __int128 v51;
  __int128 v52;

  v4 = type metadata accessor for UberScrollConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v7[*(int *)(v8 + 44)];
  v10 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  UIColor.RGBAInterpolator.init(value1:value2:floatInterpolator:)(v10, (id)qword_3D0890, sub_19EDC0, 0);
  v11 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  *(_QWORD *)&v51 = 0;
  *((_QWORD *)&v51 + 1) = 0xE000000000000000;
  LOBYTE(v50) = a1;
  _print_unlocked<A, B>(_:_:)(&v50, &v51, &type metadata for UberStyle, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12._countAndFlagsBits = 0x61426769666E6F43;
  v12._object = (void *)0xED000079654B6573;
  String.append(_:)(v12);
  v13 = *((_QWORD *)&v51 + 1);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v11, "dictionaryForKey:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  if (!v15)
  {
    v39 = type metadata accessor for UIColor.RGBAInterpolator(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v9, v39);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  }
  v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v17 = 0x3FB999999999999ALL;
  if (*(_QWORD *)(v16 + 16))
  {
    v18 = sub_36BA4(0xD000000000000023, 0x8000000000312540);
    if ((v19 & 1) != 0)
    {
      sub_1D66C(*(_QWORD *)(v16 + 56) + 32 * v18, (uint64_t)&v51);
      if (swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))v17 = *(_QWORD *)&v50;
    }
  }
  if (*(_QWORD *)(v16 + 16)
    && (v20 = sub_36BA4(0xD000000000000021, 0x8000000000312570), (v21 & 1) != 0)
    && (sub_1D66C(*(_QWORD *)(v16 + 56) + 32 * v20, (uint64_t)&v51),
        swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6)))
  {
    v22 = *(_QWORD *)&v50;
  }
  else
  {
    v22 = 0x3FD3333333333333;
  }
  *(_QWORD *)v7 = v17;
  *((_QWORD *)v7 + 1) = v22;
  v23 = 0x3FB999999999999ALL;
  if (*(_QWORD *)(v16 + 16))
  {
    v24 = sub_36BA4(0xD00000000000001BLL, 0x80000000003125A0);
    if ((v25 & 1) != 0)
    {
      sub_1D66C(*(_QWORD *)(v16 + 56) + 32 * v24, (uint64_t)&v51);
      if (swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))v23 = *(_QWORD *)&v50;
    }
  }
  if (*(_QWORD *)(v16 + 16)
    && (v26 = sub_36BA4(0xD000000000000019, 0x80000000003125C0), (v27 & 1) != 0)
    && (sub_1D66C(*(_QWORD *)(v16 + 56) + 32 * v26, (uint64_t)&v51),
        swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6)))
  {
    v28 = *(_QWORD *)&v50;
  }
  else
  {
    v28 = 0x3FD3333333333333;
  }
  *((_QWORD *)v7 + 2) = v23;
  *((_QWORD *)v7 + 3) = v28;
  v29 = 1.0;
  v30 = 1.0;
  if (*(_QWORD *)(v16 + 16))
  {
    v31 = sub_36BA4(0xD000000000000016, 0x80000000003125E0);
    if ((v32 & 1) != 0)
    {
      sub_1D66C(*(_QWORD *)(v16 + 56) + 32 * v31, (uint64_t)&v51);
      if (swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))v30 = v50;
    }
  }
  if (*(_QWORD *)(v16 + 16))
  {
    v33 = sub_36BA4(0xD000000000000014, 0x8000000000312600);
    if ((v34 & 1) != 0)
    {
      sub_1D66C(*(_QWORD *)(v16 + 56) + 32 * v33, (uint64_t)&v51);
      if (swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))v29 = v50;
    }
  }
  *((double *)v7 + 4) = v30;
  *((double *)v7 + 5) = v29;
  v35 = 0x3FB999999999999ALL;
  v36 = 0x3FB999999999999ALL;
  if (*(_QWORD *)(v16 + 16))
  {
    v37 = sub_36BA4(0xD00000000000001BLL, 0x8000000000312620);
    v36 = 0x3FB999999999999ALL;
    if ((v38 & 1) != 0)
    {
      sub_1D66C(*(_QWORD *)(v16 + 56) + 32 * v37, (uint64_t)&v51);
      if (swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))v36 = *(_QWORD *)&v50;
      else
        v36 = 0x3FB999999999999ALL;
    }
  }
  *((_QWORD *)v7 + 6) = v36;
  if (*(_QWORD *)(v16 + 16))
  {
    v41 = sub_36BA4(0xD000000000000018, 0x8000000000312640);
    if ((v42 & 1) != 0)
    {
      sub_1D66C(*(_QWORD *)(v16 + 56) + 32 * v41, (uint64_t)&v51);
      if (swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))v35 = *(_QWORD *)&v50;
    }
  }
  *((_QWORD *)v7 + 7) = v35;
  v43 = 1.0;
  if (*(_QWORD *)(v16 + 16))
  {
    v44 = sub_36BA4(0x6F6C6F43746E6974, 0xEE00747261745372);
    if ((v45 & 1) != 0)
    {
      sub_1D66C(*(_QWORD *)(v16 + 56) + 32 * v44, (uint64_t)&v51);
      if (swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))v43 = v50;
    }
  }
  if (*(_QWORD *)(v16 + 16) && (v46 = sub_36BA4(0x6F6C6F43746E6974, 0xEC000000646E4572), (v47 & 1) != 0))
  {
    sub_1D66C(*(_QWORD *)(v16 + 56) + 32 * v46, (uint64_t)&v51);
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  swift_bridgeObjectRelease(v16);
  if (!*((_QWORD *)&v52 + 1))
  {
    sub_1FE78((uint64_t)&v51);
    goto LABEL_52;
  }
  if (!swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))
  {
LABEL_52:
    v48 = 1.0;
    goto LABEL_53;
  }
  v48 = v50;
LABEL_53:
  *((double *)v7 + 8) = v43;
  *((double *)v7 + 9) = v48;
  v7[80] = 0;
  sub_1A0280((uint64_t)v7, a2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  return sub_1A02C4((uint64_t)v7);
}

uint64_t sub_19FE94(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  Swift::String v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  Swift::String v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  Swift::String v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;

  v2 = type metadata accessor for CharacterSet(0);
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0xE000000000000000;
  v52 = 0;
  v53 = 0xE000000000000000;
  v51 = a1;
  _print_unlocked<A, B>(_:_:)(&v51, &v52, &type metadata for UberStyle, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v6._countAndFlagsBits = 0x61426769666E6F43;
  v6._object = (void *)0xED000079654B6573;
  String.append(_:)(v6);
  v7 = v53;
  v50 = v52;
  v8 = v52 & 0xFFFFFFFFFFFFLL;
  v46 = v52 & 0xFFFFFFFFFFFFLL;
  v47 = HIBYTE(v53) & 0xF;
  if ((v53 & 0x2000000000000000) != 0)
    v8 = HIBYTE(v53) & 0xF;
  if (v8)
  {
    v9 = v8;
    v44 = (v53 & 0xFFFFFFFFFFFFFFFLL) + 32;
    v45 = v53 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain(v53);
    v10 = 0;
    v11 = 0;
    do
    {
      if ((v7 & 0x1000000000000000) != 0)
      {
        v20 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v10 << 16, v50, v7);
      }
      else
      {
        if ((v7 & 0x2000000000000000) != 0)
        {
          v52 = v50;
          v53 = v45;
          v18 = &v52;
          v19 = v47;
        }
        else
        {
          v18 = (uint64_t *)v44;
          v19 = v46;
          if ((v50 & 0x1000000000000000) == 0)
            v18 = (uint64_t *)_StringObject.sharedUTF8.getter(v50, v7);
        }
        v20 = _decodeScalar(_:startingAt:)(v18, v19, v10);
      }
      v22 = v20;
      v23 = v21;
      static CharacterSet.uppercaseLetters.getter();
      v24 = CharacterSet.contains(_:)(v22);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v4, v49);
      if ((v24 & 1) != 0)
      {
        v52 = v11;
        v53 = v5;
        v25 = sub_D254();
        v26 = StringProtocol.capitalized.getter(&type metadata for String, v25);
        v28 = v27;
        v52 = v26;
        v53 = v27;
        swift_bridgeObjectRetain(v27);
        v29._countAndFlagsBits = 32;
        v29._object = (void *)0xE100000000000000;
        String.append(_:)(v29);
        swift_bridgeObjectRelease(v28);
        if (v22 > 0x7F)
        {
          v38 = (v22 & 0x3F) << 8;
          if (v22 >= 0x800)
          {
            v41 = (v38 | (v22 >> 6) & 0x3F) << 8;
            v42 = (((v41 | (v22 >> 12) & 0x3F) << 8) | (v22 >> 18)) - 2122219023;
            v30 = (v41 | (v22 >> 12)) + 8487393;
            if (WORD1(v22))
              v30 = v42;
          }
          else
          {
            v30 = (v38 | (v22 >> 6)) + 33217;
          }
        }
        else
        {
          v30 = v22 + 1;
        }
        v31 = v52;
        v32 = v53;
        v52 = (v30 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v30) >> 3))));
        v33 = static String._uncheckedFromUTF8(_:)(&v52);
        v35 = v34;
        v52 = v31;
        v53 = v32;
        swift_bridgeObjectRetain(v32);
        v36._countAndFlagsBits = v33;
        v36._object = v35;
        String.append(_:)(v36);
        swift_bridgeObjectRelease(v5);
        swift_bridgeObjectRelease(v32);
        v17 = v35;
      }
      else
      {
        if (v22 > 0x7F)
        {
          v37 = (v22 & 0x3F) << 8;
          if (v22 >= 0x800)
          {
            v39 = (v37 | (v22 >> 6) & 0x3F) << 8;
            v40 = (((v39 | (v22 >> 12) & 0x3F) << 8) | (v22 >> 18)) - 2122219023;
            v12 = (v39 | (v22 >> 12)) + 8487393;
            if (WORD1(v22))
              v12 = v40;
          }
          else
          {
            v12 = (v37 | (v22 >> 6)) + 33217;
          }
        }
        else
        {
          v12 = v22 + 1;
        }
        v52 = (v12 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v12) >> 3))));
        v13 = static String._uncheckedFromUTF8(_:)(&v52);
        v15 = v14;
        v52 = v11;
        v53 = v5;
        swift_bridgeObjectRetain(v5);
        v16._countAndFlagsBits = v13;
        v16._object = v15;
        String.append(_:)(v16);
        swift_bridgeObjectRelease(v5);
        v17 = v15;
      }
      swift_bridgeObjectRelease(v17);
      v11 = v52;
      v5 = v53;
      v10 += v23;
    }
    while (v10 < v9);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v11 = 0;
  }
  swift_bridgeObjectRelease(v7);
  return v11;
}

uint64_t sub_1A0280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UberScrollConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A02C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UberScrollConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for UberScrollConfiguration.BarButtonsVisibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A034C + 4 * byte_2FBC85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A0380 + 4 * byte_2FBC80[v4]))();
}

uint64_t sub_1A0380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A0388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A0390);
  return result;
}

uint64_t sub_1A039C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A03A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A03A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A03B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UberScrollConfiguration.BarButtonsVisibility()
{
  return &type metadata for UberScrollConfiguration.BarButtonsVisibility;
}

unint64_t sub_1A03D0()
{
  unint64_t result;

  result = qword_3DA4C0;
  if (!qword_3DA4C0)
  {
    result = swift_getWitnessTable(&unk_2FBD58, &type metadata for UberScrollConfiguration.BarButtonsVisibility);
    atomic_store(result, (unint64_t *)&qword_3DA4C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArtworkPlaybackStatusStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A0460 + 4 * byte_2FBD85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A0494 + 4 * byte_2FBD80[v4]))();
}

uint64_t sub_1A0494(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A049C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A04A4);
  return result;
}

uint64_t sub_1A04B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A04B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A04BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A04C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkPlaybackStatusStyle()
{
  return &type metadata for ArtworkPlaybackStatusStyle;
}

unint64_t sub_1A04E4()
{
  unint64_t result;

  result = qword_3DA4C8;
  if (!qword_3DA4C8)
  {
    result = swift_getWitnessTable(&unk_2FBE2C, &type metadata for ArtworkPlaybackStatusStyle);
    atomic_store(result, (unint64_t *)&qword_3DA4C8);
  }
  return result;
}

char *sub_1A0528()
{
  char *v0;

  if (*(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_mainArtworkContainer]
                + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style) == 1)
    return (char *)*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_mainArtworkContainer];
  else
    return v0;
}

void sub_1A0554(uint64_t a1, uint64_t a2)
{
  sub_1A1228(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_internalArtworkContainer);
}

char *sub_1A0560()
{
  char *v0;

  if (*(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkContainer]
                + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style) == 1)
    return (char *)*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkContainer];
  else
    return v0;
}

void sub_1A058C(char a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  id v14;
  void *v15;
  uint64_t v16;

  ObjectType = swift_getObjectType();
  v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HoverableView);
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    v6 = v1;
  else
    v6 = 0;
  if (v6)
  {
    sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
    v7 = v1;
    if ((static UITraitCollection.supportsPointerDevice.getter() & 1) != 0)
    {
      v8 = swift_getObjectType();
      sub_1A09F0(a1 & 1, v8, v5);
    }

  }
  v9 = objc_msgSend(v1, "subviews");
  v10 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  if (!((unint64_t)v11 >> 62))
  {
    v12 = *(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8));
    if (v12)
      goto LABEL_13;
LABEL_23:
    swift_bridgeObjectRelease(v11);
    return;
  }
  if (v11 < 0)
    v16 = v11;
  else
    v16 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v12 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease(v11);
  if (!v12)
    goto LABEL_23;
LABEL_13:
  if (v12 >= 1)
  {
    for (i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v11);
      else
        v14 = *(id *)(v11 + 8 * i + 32);
      v15 = v14;
      sub_1A058C(a1 & 1);

    }
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_1A070C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = objc_msgSend(v0, "gestureRecognizers");
  if (v1)
  {
    v2 = v1;
    v3 = sub_E710(0, &qword_3D9988, UIGestureRecognizer_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    if ((unint64_t)v4 >> 62)
      goto LABEL_16;
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v4);
    for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v14))
    {
      v6 = 4;
      while (1)
      {
        v7 = (v4 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v4)
           : *(id *)(v4 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        v10 = objc_opt_self(UIHoverGestureRecognizer);
        v11 = swift_dynamicCastObjCClass(v8, v10);
        if (v11)
        {
          v12 = v11;
          swift_bridgeObjectRelease_n(v4, 2);
          return v12;
        }

        ++v6;
        if (v9 == v5)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      if (v4 < 0)
        v14 = v4;
      else
        v14 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
    }
LABEL_11:
    swift_bridgeObjectRelease_n(v4, 2);
  }
  return 0;
}

double sub_1A0858(char a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  double result;
  _QWORD v20[5];
  uint64_t v21;

  v11 = swift_allocObject(&unk_387AE8, 56, 7);
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  *(_BYTE *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = v5;
  *(_QWORD *)(v11 + 48) = a2;
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  v13 = a2;
  v14 = v5;
  if ((v12(a4, a5) & 1) != 0 && (a3 & 1) != 0)
  {
    v15 = (void *)objc_opt_self(UIView);
    v16 = swift_allocObject(&unk_387B10, 32, 7);
    *(_QWORD *)(v16 + 16) = sub_1A112C;
    *(_QWORD *)(v16 + 24) = v11;
    v20[4] = sub_1A12A4;
    v21 = v16;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_24360;
    v20[3] = &block_descriptor_41;
    v17 = _Block_copy(v20);
    v18 = v21;
    swift_retain(v11);
    swift_release(v18);
    objc_msgSend(v15, "animateWithDuration:delay:options:animations:completion:", 65574, v17, 0, 0.12, 0.0);
    swift_release(v11);
    _Block_release(v17);
  }
  else
  {
    sub_1A0B30(0, a1 & 1, v14, v13, a4, a5);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

void sub_1A09F0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  void *v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  id v21;
  CGPoint v22;
  CGRect v23;

  if (((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3) & 1) != 0)
  {
    v21 = (id)sub_1A070C();
    if (v21)
    {
      v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 32);
      v7 = (void *)v6(a2, a3);
      objc_msgSend(v7, "bounds");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v16 = (void *)v6(a2, a3);
      objc_msgSend(v21, "locationInView:", v16);
      v18 = v17;
      v20 = v19;

      v23.origin.x = v9;
      v23.origin.y = v11;
      v23.size.width = v13;
      v23.size.height = v15;
      v22.x = v18;
      v22.y = v20;
      if (!CGRectContainsPoint(v23, v22))
        sub_1A0858(0, v21, a1 & 1, a2, a3);

    }
  }
}

void sub_1A0B30(char a1, int a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  char v10;
  uint64_t ObjectType;
  char *v13;
  uint64_t v14;
  id v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  id v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  void *v49;
  char *v50;
  char *v51;
  __int16 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  __int16 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76[13];
  __int16 v77;

  v10 = a2;
  if ((((*(unsigned int (**)(uint64_t, uint64_t))(a6 + 8))(a5, a6) ^ a2) & 1) != 0)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(a6 + 16))(v10 & 1, a5, a6);
    ObjectType = swift_getObjectType();
    v13 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground) ? (char *)a3 : 0;
    if (v13 && *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    {
      v14 = swift_getObjectType();
      if (swift_conformsToProtocol2(v14, &protocol descriptor for SelectableCell))
      {
        if (*(_BYTE *)(*(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage]
                      + 16) == 1)
        {
          v15 = a3;
          v16 = 0;
        }
        else
        {
          v17 = swift_conformsToProtocol2(v14, &protocol descriptor for HoverableView);
          if (!v17)
          {
LABEL_37:
            __break(1u);
            return;
          }
          v18 = v17;
          v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
          v20 = a3;
          if ((v19(v14, v18) & 1) != 0)
            v16 = 1;
          else
            v16 = 2;
        }
        sub_B26B8(v16);
        v21 = swift_getObjectType();
        if (swift_conformsToProtocol2(v21, &protocol descriptor for CellWithBackgroundNeighbor))
        {
          v22 = v13;
          sub_B27F0(v16, 0);

          goto LABEL_16;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_37;
    }
  }
LABEL_16:
  (*(void (**)(_QWORD, void *, uint64_t, uint64_t))(a6 + 48))(v10 & 1, a4, a5, a6);
  v23 = swift_getObjectType();
  v24 = swift_conformsToProtocol2(v23, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (v24)
    v25 = v24;
  else
    v25 = 0;
  if (v24)
    v26 = a3;
  else
    v26 = 0;
  if (v26)
  {
    v27 = swift_getObjectType();
    v28 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 16);
    v29 = a3;
    v75 = (char *)v28(v27, v25);
    v30 = (v10 & 1) != 0 && sub_1A1034(a4, v27, v25);
    sub_2624F4(v10 & 1, a1 & 1);
    if (v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
      || *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
      || *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
    {
      v31 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
      v72 = v29;
      if (v30)
      {
        v69 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
        v70 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
        v32 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
        v68 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
        v33 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
        v34 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
        v35 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
        v36 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
        v37 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
        v38 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
        v39 = *(void **)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
        v60 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
        v59 = v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
        v71 = *(void **)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
        v40 = v71;
        v66 = v33;
        v67 = v32;
        v64 = v35;
        v65 = v34;
        v62 = v37;
        v63 = v36;
        v61 = v38;
        sub_B7A24(v32, v33, v34, v35, v36, v37, v38, v39);
      }
      else
      {
        v39 = *(void **)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
        v59 = *(_WORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
        v60 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
        v61 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
        v62 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
        v63 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
        v70 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
        v71 = *(void **)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
        v68 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
        v69 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
        v66 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
        v67 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
        v64 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
        v65 = *(_QWORD *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
        sub_B79AC((char *)v71, v70, v69, v68, v67, v66, v65, v64, v63, v62, v61, v39);
      }
      v41 = v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
      v42 = *(_QWORD *)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
      v55 = (char *)v42;
      v56 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
      v44 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
      v43 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
      v45 = *(_QWORD *)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
      v46 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
      v73 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
      v74 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
      v47 = *(_QWORD *)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
      v48 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
      v50 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
      v49 = *(void **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
      v51 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
      v52 = *(_WORD *)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
      *(_QWORD *)v41 = v71;
      *(_QWORD *)(v41 + 8) = v70;
      *(_QWORD *)(v41 + 16) = v69;
      *(_QWORD *)(v41 + 24) = v68;
      *(_QWORD *)(v41 + 32) = v67;
      *(_QWORD *)(v41 + 40) = v66;
      *(_QWORD *)(v41 + 48) = v65;
      *(_QWORD *)(v41 + 56) = v64;
      *(_QWORD *)(v41 + 64) = v63;
      *(_QWORD *)(v41 + 72) = v62;
      *(_QWORD *)(v41 + 80) = v61;
      *(_QWORD *)(v41 + 88) = v39;
      *(_QWORD *)(v41 + 96) = v60;
      *(_WORD *)(v41 + 104) = v59;
      v57 = (char *)v47;
      v53 = v47;
      v54 = (char *)v45;
      v58 = v45;
      sub_B79AC(v56, v42, (uint64_t)v44, (uint64_t)v43, (uint64_t)v74, v45, (uint64_t)v46, (uint64_t)v73, v47, (uint64_t)v48, (uint64_t)v50, v49);
      sub_B7A70(v56, (uint64_t)v55, (uint64_t)v44, (uint64_t)v43, (uint64_t)v74, (uint64_t)v54, (uint64_t)v46, (uint64_t)v73, v53, (uint64_t)v48, (uint64_t)v50, v49);
      v76[0] = v56;
      v76[1] = v55;
      v76[2] = v44;
      v76[3] = v43;
      v76[4] = v74;
      v76[5] = v54;
      v76[6] = v46;
      v76[7] = v73;
      v76[8] = v57;
      v76[9] = v48;
      v76[10] = v50;
      v76[11] = (char *)v49;
      v76[12] = v51;
      v77 = v52;
      sub_EA15C(v76);
      sub_B7A70(v56, (uint64_t)v55, (uint64_t)v44, (uint64_t)v43, (uint64_t)v74, v58, (uint64_t)v46, (uint64_t)v73, (uint64_t)v57, (uint64_t)v48, (uint64_t)v50, v49);

    }
    else
    {

    }
  }
}

BOOL sub_1A1034(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  void *v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  CGPoint v22;
  CGRect v23;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 24);
  v7 = (void *)v6(a2, a3);
  objc_msgSend(v7, "bounds");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  v16 = (void *)v6(a2, a3);
  objc_msgSend(a1, "locationInView:", v16);
  v18 = v17;
  v20 = v19;

  v23.origin.x = v9;
  v23.origin.y = v11;
  v23.size.width = v13;
  v23.size.height = v15;
  v22.x = v18;
  v22.y = v20;
  return CGRectContainsPoint(v23, v22);
}

uint64_t sub_1A1100()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

void sub_1A112C(char a1)
{
  uint64_t v1;

  sub_1A0B30(a1, *(unsigned __int8 *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A113C(uint64_t (*a1)(uint64_t))
{
  return a1(1);
}

id sub_1A1164(uint64_t a1, uint64_t a2)
{
  return sub_1A11A8(a1, a2, (uint64_t (*)(void))sub_1A8950);
}

char *sub_1A1170()
{
  char *v0;

  if (*(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkContainer]
                + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style) == 1)
    return (char *)*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkContainer];
  else
    return v0;
}

id sub_1A119C(uint64_t a1, uint64_t a2)
{
  return sub_1A11A8(a1, a2, (uint64_t (*)(void))sub_1AD06C);
}

id sub_1A11A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unsigned __int8 *v3;
  int v4;
  id v7;

  v3 = (unsigned __int8 *)a3();
  v4 = v3[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style];

  if (v4 == 1)
    return (id)a3();
  else
    return v7;
}

id sub_1A1204()
{
  return (id)Theme.deinit();
}

void sub_1A121C(uint64_t a1, uint64_t a2)
{
  sub_1A1228(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_internalArtworkContainer);
}

void sub_1A1228(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;

  v4 = *(_QWORD *)&v3[*a3];
  if (v4)
  {
    if (*(_BYTE *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style) == 1)
      v5 = *(id *)&v3[*a3];
    else
      v6 = v3;
  }
  else
  {
    __break(1u);
  }
}

char *sub_1A1254()
{
  char *v0;

  if (*(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkContainer]
                + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style) == 1)
    return (char *)*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkContainer];
  else
    return v0;
}

uint64_t sub_1A1280()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1A12A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_41(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_1A12E0@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20)
{
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  uint64_t v39;
  void *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  double result;
  unsigned int v45;
  unsigned int v46;
  unint64_t v47;
  double v48;
  unint64_t v49;
  double v50;
  _OWORD v51[7];

  v21 = a20;
  v22 = a19;
  v23 = a18;
  v25 = a15;
  v24 = a16;
  v26 = a13;
  v27 = a11;
  v28 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v28)
    a10.n128_f64[0] = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = a10.n128_f64[0];
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a14 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (a10.n128_f64[0] > v30 || v30 > v34)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v36 = a11;
  if ((a12 & 1) != 0)
    v36 = a10.n128_f64[0];
  v37 = a13;
  if ((a14 & 1) != 0)
    v37 = v36;
  if (a10.n128_f64[0] > v36 || v36 > v37)
  {
LABEL_22:
    v49 = a7;
    v50 = a5;
    v47 = a1;
    v48 = a3;
    v46 = v28;
    v45 = v29;
    v39 = static os_log_type_t.fault.getter(a10);
    v40 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v39, &dword_0, v40, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a14 & 1;
    v29 = v45;
    v25 = a15;
    v24 = a16;
    v28 = v46;
    v27 = a11;
    v26 = a13;
    a1 = v47;
    a3 = v48;
    a7 = v49;
    a5 = v50;
    v22 = a19;
    v21 = a20;
    v23 = a18;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, a1, v28, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, a7, v32, *(_QWORD *)&v27, a12 & 1, *(_QWORD *)&v26, v33, v25, v24);
  *(_QWORD *)a9 = a17;
  *(_QWORD *)(a9 + 8) = v23;
  *(_BYTE *)(a9 + 16) = v22 & 1;
  *(_QWORD *)(a9 + 24) = v21;
  v41 = v51[5];
  *(_OWORD *)(a9 + 96) = v51[4];
  *(_OWORD *)(a9 + 112) = v41;
  *(_OWORD *)(a9 + 128) = v51[6];
  v42 = v51[1];
  *(_OWORD *)(a9 + 32) = v51[0];
  *(_OWORD *)(a9 + 48) = v42;
  v43 = v51[3];
  *(_OWORD *)(a9 + 64) = v51[2];
  *(_OWORD *)(a9 + 80) = v43;
  sub_D130(a17, v23, v22 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v21).n128_u64[0];
  return result;
}

uint64_t sub_1A14C0@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  _OWORD *v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unsigned int v45;
  double v46;
  unint64_t v47;
  double v48;
  unint64_t v49;
  _OWORD v50[7];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v49 = a7;
    v47 = a1;
    v48 = a5;
    v46 = a3;
    v45 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &dword_0, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v20 = a11;
    v21 = v45;
    a3 = v46;
    a1 = v47;
    a5 = v48;
    v19 = a13;
    a7 = v49;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v50, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = v16[7];
  a9[6] = v16[6];
  a9[7] = v33;
  v34 = v16[8];
  v35 = v16[3];
  a9[2] = v16[2];
  a9[3] = v35;
  v36 = v16[5];
  a9[4] = v16[4];
  a9[5] = v36;
  v37 = v16[1];
  *a9 = *v16;
  a9[1] = v37;
  v38 = v50[4];
  v39 = v50[5];
  v40 = v50[2];
  a9[12] = v50[3];
  a9[13] = v38;
  v41 = v50[6];
  a9[14] = v39;
  a9[15] = v41;
  v42 = v50[0];
  v43 = v50[1];
  a9[8] = v34;
  a9[9] = v42;
  a9[10] = v43;
  a9[11] = v40;
  return sub_50CD8((uint64_t)v16);
}

uint64_t sub_1A1678@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  _OWORD *v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unsigned int v39;
  unint64_t v40;
  double v41;
  double v42;
  unint64_t v43;
  _OWORD v44[7];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v42 = a5;
    v43 = a7;
    v41 = a3;
    v40 = a1;
    v39 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &dword_0, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v21 = v39;
    v20 = a11;
    a1 = v40;
    a3 = v41;
    v19 = a13;
    a5 = v42;
    a7 = v43;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v44, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = v16[3];
  a9[2] = v16[2];
  a9[3] = v33;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v16 + 57);
  v34 = v16[1];
  *a9 = *v16;
  a9[1] = v34;
  v35 = v44[5];
  a9[9] = v44[4];
  a9[10] = v35;
  a9[11] = v44[6];
  v36 = v44[1];
  a9[5] = v44[0];
  a9[6] = v36;
  v37 = v44[3];
  a9[7] = v44[2];
  a9[8] = v37;
  return sub_9A894((uint64_t)v16);
}

double sub_1A1824@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_1A18D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_3D6900, &qword_3D6908).n128_u64[0];
  return result;
}

double sub_1A187C@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_1A18D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_3DA3C0, &qword_3DA3C8).n128_u64[0];
  return result;
}

__n128 sub_1A18D4@<Q0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16, uint64_t *a17, uint64_t *a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __n128 result;
  unsigned int v44;
  unsigned int v45;
  double v46;
  unint64_t v47;
  double v48;
  unint64_t v49;
  _OWORD v50[7];

  v19 = v18;
  v20 = a9;
  v21 = a18;
  v23 = a15;
  v22 = a16;
  v24 = a13;
  v25 = a11;
  v26 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v26)
    a10.n128_f64[0] = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = a10.n128_f64[0];
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v31)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v33 = a11;
  if ((a12 & 1) != 0)
    v33 = a10.n128_f64[0];
  v34 = a13;
  if ((a14 & 1) != 0)
    v34 = v33;
  if (a10.n128_f64[0] > v33 || v33 > v34)
  {
LABEL_22:
    v48 = a5;
    v49 = a7;
    v46 = a3;
    v47 = a1;
    v45 = v26;
    v44 = v27;
    v37 = static os_log_type_t.fault.getter(a10);
    v38 = (void *)static Log.runtimeIssuesLog.getter();
    v39 = v37;
    v20 = a9;
    os_log(_:dso:log:_:_:)(v39, &dword_0, v38, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v44;
    v23 = a15;
    v22 = a16;
    v26 = v45;
    v25 = a11;
    v24 = a13;
    a3 = v46;
    a1 = v47;
    a5 = v48;
    a7 = v49;
    v21 = a18;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v50, a1, v26, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, a7, v30, *(_QWORD *)&v25, a12 & 1, *(_QWORD *)&v24, a14 & 1, v23, v22);
  sub_D184(v19, v20, a17);
  v40 = v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v21) + 36);
  v41 = v50[5];
  *(_OWORD *)(v40 + 64) = v50[4];
  *(_OWORD *)(v40 + 80) = v41;
  *(_OWORD *)(v40 + 96) = v50[6];
  v42 = v50[1];
  *(_OWORD *)v40 = v50[0];
  *(_OWORD *)(v40 + 16) = v42;
  result = (__n128)v50[3];
  *(_OWORD *)(v40 + 32) = v50[2];
  *(__n128 *)(v40 + 48) = result;
  return result;
}

double sub_1A1AA0@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_1A18D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_3DA6B0, &qword_3DA6B8).n128_u64[0];
  return result;
}

double sub_1A1AF8@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_1A18D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_3DA6C0, &qword_3DA6C8).n128_u64[0];
  return result;
}

double sub_1A1B50@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_1A18D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_3DA6D0, &qword_3DA6D8).n128_u64[0];
  return result;
}

uint64_t sub_1A1BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  __n128 v35;
  _BYTE v36[4];
  unsigned int v37;
  _BYTE *v38;
  __int128 v39;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v8);
  v10 = &v36[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for PlayButtonPresenter.Data(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v38 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *a3;
  v15 = *((_BYTE *)a3 + 8);
  *(_QWORD *)a4 = a1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v39, v16, v16);
  *(_OWORD *)(a4 + 8) = v39;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  v18 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(&v39, v17, a1, v17, v18, v19);
  v20 = v39;
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = v14;
  *(_BYTE *)(a4 + 40) = v15;
  v21 = type metadata accessor for LegacyEpisodeLockup(0);
  v22 = swift_dynamicCastClass(a2, v21);
  if (!v22)
  {
    swift_release(v20);
    swift_release(a1);
    goto LABEL_5;
  }
  v23 = v22;
  swift_retain_n(a2, 3);
  PlayButtonPresenter.Data.init(lockup:)(v23);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_release(v20);
    swift_release(a1);
    swift_release_n(a2, 2);
    sub_D1D4((uint64_t)v10, (uint64_t *)&unk_3D6D90);
LABEL_5:
    *(_QWORD *)(a4 + 48) = 0;
    v24 = type metadata accessor for CompactPlayButton(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a4 + *(int *)(v24 + 36), 1, 1, v11);
  }
  v26 = v38;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v38, v10, v11);
  v27 = a4 + *(int *)(type metadata accessor for CompactPlayButton(0) + 36);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v12 + 16))(v27, v26, v11);
  v28 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
  v29 = PlayButtonPresenter.Data.episodeIdentifier.getter(v28);
  if (v31 == 0xFF)
  {
    swift_release(a1);
    swift_release_n(a2, 2);
    v35 = swift_release(v20);
    result = (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v12 + 8))(v38, v11, v35);
    *(_QWORD *)(a4 + 48) = 0;
  }
  else
  {
    v32 = v29;
    v33 = v30;
    v34 = v31;
    v37 = v31 & 1;
    *(_QWORD *)(a4 + 48) = dispatch thunk of EpisodeStateController.stateMachine(for:)();
    dispatch thunk of EpisodeStateController.refreshState(for:)(v32, v33, v37);
    swift_release(v20);
    sub_1A4774(v32, v33, v34);
    swift_release(a1);
    swift_release_n(a2, 2);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v38, v11);
  }
  return result;
}

void sub_1A1EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = type metadata accessor for Glyph(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Glyph.PlayControls.play.getter(v2);
  v6 = (void *)Glyph.image.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  objc_msgSend(v6, "size");
  v8 = v7;

  qword_3DA4D0 = v8;
}

void sub_1A1F50()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray5Color");
  v1 = UIColor.swiftUIColor.getter();

  qword_3DA4D8 = v1;
}

uint64_t sub_1A1FA0()
{
  uint64_t result;

  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  result = UIColor.swiftUIColor.getter();
  qword_3DA4E0 = result;
  return result;
}

uint64_t sub_1A1FF4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = type metadata accessor for Color.RGBColorSpace(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, enum case for Color.RGBColorSpace.sRGB(_:));
  result = Color.init(_:red:green:blue:opacity:)(v2, 0.51, 0.51, 0.51, 0.3);
  qword_3DA4E8 = result;
  return result;
}

uint64_t static CompactPlayButton.Style.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_1A20BC(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

double sub_1A20EC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CompactPlayButton(0);
  sub_D184(v1 + *(int *)(v6 + 36), (uint64_t)v5, (uint64_t *)&unk_3D6D90);
  v7 = type metadata accessor for PlayButtonPresenter.Data(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    v11 = PlayButtonPresenter.Data.triggerAction()();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_5;
  }
  v9 = sub_D1D4((uint64_t)v5, (uint64_t *)&unk_3D6D90);
  v10 = dispatch thunk of LegacyLockup.playAction.getter(v9);
  if (v10)
  {
    v11 = v10;
LABEL_5:
    *(_QWORD *)(a1 + 24) = type metadata accessor for Action(0);
    *(_QWORD *)(a1 + 32) = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)a1 = v11;
    return result;
  }
  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1A2220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _BYTE v20[24];
  uint64_t v21;

  v0 = type metadata accessor for EpisodeOffer(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1A20EC((uint64_t)v20);
  if (v21)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
    v5 = type metadata accessor for PlayAction(0);
    if ((swift_dynamicCast(&v19, v20, v4, v5, 6) & 1) != 0)
    {
      v7 = v19;
      v8 = PlayAction.episodeOffer.getter(v6);
      v9 = EpisodeOffer.mediaType.getter(v8);
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
      if (v9 == 3)
      {
        swift_release(v7);
      }
      else
      {
        v11 = EpisodeMediaType.rawValue.getter(v9);
        v13 = v12;
        v14 = EpisodeMediaType.rawValue.getter(2);
        if (v11 == v14 && v13 == v15)
        {
          swift_release(v7);
          swift_bridgeObjectRelease_n(v13, 2);
          return 1;
        }
        v17 = v15;
        v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
        swift_release(v7);
        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(v17);
        if ((v18 & 1) != 0)
          return 1;
      }
    }
  }
  else
  {
    sub_D1D4((uint64_t)v20, (uint64_t *)&unk_3D30D0);
  }
  return 0;
}

uint64_t CompactPlayButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA4F0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA4F8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v6 = static Alignment.center.getter(v11, v8);
  v6[1] = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA500);
  v14 = sub_1A2528(v2, (uint64_t)v6 + *(int *)(v13 + 44));
  if (*(_BYTE *)(v2 + 40) == 1)
  {
    if (qword_3CF868 != -1)
      v14 = swift_once(&qword_3CF868, sub_1A1EAC);
    v16 = *(double *)&qword_3DA4D0;
  }
  else
  {
    v16 = INFINITY;
  }
  v17 = static Alignment.center.getter(v14, v15);
  sub_1A18D4(0, 0, 0.0, 1, v16, 0, 0, 0, (uint64_t)v10, v19, 0.0, 1, v16, 0, v17, v18, &qword_3DA4F0, &qword_3DA4F8);
  sub_D1D4((uint64_t)v6, &qword_3DA4F0);
  return sub_D210((uint64_t)v10, a1, &qword_3DA4F8);
}

uint64_t sub_1A2528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v99 = a2;
  v3 = type metadata accessor for LiftHoverEffect(0);
  v97 = *(_QWORD *)(v3 - 8);
  v98 = v3;
  __chkstk_darwin(v3);
  v96 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BorderlessButtonStyle(0);
  v92 = *(_QWORD *)(v5 - 8);
  v93 = v5;
  __chkstk_darwin(v5);
  v90 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CompactPlayButton(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v79 = v9;
  v80 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA5B8);
  v86 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v83 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA5C0);
  v85 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v82 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA5C8);
  __chkstk_darwin(v89);
  v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA5D0);
  v94 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v95 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v84 = (char *)&v77 - v17;
  __chkstk_darwin(v18);
  v91 = (char *)&v77 - v19;
  v20 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v20);
  v22 = (uint64_t *)((char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA5D8);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA5E0);
  __chkstk_darwin(v27);
  v81 = (uint64_t)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v77 - v31;
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v33 = 1;
  }
  else
  {
    v77 = v8;
    v78 = a1;
    v34 = *(_QWORD *)(a1 + 32);
    v35 = (char *)v22 + *(int *)(v20 + 20);
    v36 = enum case for RoundedCornerStyle.continuous(_:);
    v37 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
    *v22 = v34;
    v22[1] = v34;
    if (qword_3CF880 != -1)
      swift_once(&qword_3CF880, sub_1A1FF4);
    v38 = qword_3DA4E8;
    KeyPath = swift_getKeyPath(&unk_2FC038);
    sub_19C4C((uint64_t)v22, (uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v40 = (uint64_t *)&v26[*(int *)(v23 + 36)];
    *v40 = KeyPath;
    v40[1] = v38;
    swift_retain(v38);
    sub_FA4C((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    sub_D210((uint64_t)v26, (uint64_t)v32, &qword_3DA5D8);
    v33 = 0;
    a1 = v78;
    v8 = v77;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v24 + 56))(v32, v33, 1, v23, v30);
  v41 = v80;
  sub_19C4C(a1, v80, type metadata accessor for CompactPlayButton);
  v42 = *(unsigned __int8 *)(v8 + 80);
  v43 = (v42 + 16) & ~v42;
  v44 = a1;
  v45 = swift_allocObject(&unk_387C70, v43 + v79, v42 | 7);
  v46 = sub_1A41DC(v41, v45 + v43);
  __chkstk_darwin(v46);
  *(&v77 - 2) = v44;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA5E8);
  v48 = sub_1A4254();
  v49 = v83;
  v50 = Button.init(action:label:)(sub_1A4220, v45, sub_1A424C, &v77 - 4, v47, v48);
  v51 = v90;
  BorderlessButtonStyle.init()(v50);
  v52 = sub_10EDC(&qword_3DA660, &qword_3DA5B8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v53 = sub_89A0(&qword_3D8750, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v54 = v82;
  v55 = v88;
  v56 = v93;
  View.buttonStyle<A>(_:)(v51, v88, v93, v52, v53);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v51, v56);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v49, v55);
  if (*(_BYTE *)(v44 + 40))
    v57 = 1.0;
  else
    v57 = 0.0;
  v58 = v85;
  v59 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v13, v54, v87);
  v60 = v89;
  *(double *)&v13[*(int *)(v89 + 36)] = v57;
  v61 = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v54, v59);
  v62 = v96;
  static CustomHoverEffect<>.lift.getter(v61);
  v63 = sub_1A4504();
  v64 = sub_89A0(&qword_3DA680, (uint64_t (*)(uint64_t))&type metadata accessor for LiftHoverEffect, (uint64_t)&protocol conformance descriptor for LiftHoverEffect);
  v65 = v84;
  v66 = v60;
  v67 = v98;
  View.hoverEffect<A>(_:isEnabled:)(v62, 1, v66, v98, v63, v64);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v62, v67);
  sub_D1D4((uint64_t)v13, &qword_3DA5C8);
  v68 = v94;
  v69 = v91;
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v91, v65, v14);
  v70 = v81;
  sub_D184((uint64_t)v32, v81, &qword_3DA5E0);
  v71 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v72 = v95;
  v71(v95, v69, v14);
  v73 = v99;
  sub_D184(v70, v99, &qword_3DA5E0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA688);
  v71((char *)(v73 + *(int *)(v74 + 48)), v72, v14);
  v75 = *(void (**)(char *, uint64_t))(v68 + 8);
  v75(v69, v14);
  sub_D1D4((uint64_t)v32, &qword_3DA5E0);
  v75(v72, v14);
  return sub_D1D4(v70, &qword_3DA5E0);
}

uint64_t sub_1A2C38(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of CompactPlayButton.body>>, 1);
}

uint64_t sub_1A2C48(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  __n128 v9;
  __int128 v11;
  uint64_t v12;
  _QWORD v13[5];

  v2 = type metadata accessor for ActionMetricsBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A20EC((uint64_t)&v11);
  if (!v12)
    return sub_D1D4((uint64_t)&v11, (uint64_t *)&unk_3D30D0);
  sub_1B738(&v11, (uint64_t)v13);
  v6 = a1[2];
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionMetricsBehavior.fromAction(_:), v2);
  v8 = ActionRunner.perform(_:withMetrics:asPartOf:)(v13, v5, *a1, ObjectType, v6);
  v9 = swift_release(v8);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v9);
  return __swift_destroy_boxed_opaque_existential_0(v13);
}

uint64_t sub_1A2D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t KeyPath;
  __n128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  __int128 v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;

  v66 = a2;
  v3 = type metadata accessor for SymbolVariants(0);
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  __chkstk_darwin(v3);
  v53 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v62 = (char *)&v52 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA648);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA690);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA610);
  __chkstk_darwin(v54);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA5F8);
  __chkstk_darwin(v55);
  v56 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA698);
  v60 = *(_QWORD *)(v16 - 8);
  v61 = v16;
  __chkstk_darwin(v16);
  v59 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA5E8);
  __chkstk_darwin(v57);
  v58 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A3280(a1, (uint64_t)&v67);
  v20 = v67;
  v21 = v68;
  v22 = BYTE8(v68);
  v23 = BYTE9(v68);
  v65 = a1;
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    static SymbolRenderingMode.palette.getter(v19);
  else
    static SymbolRenderingMode.monochrome.getter(v19);
  v24 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 0, 1, v24);
  KeyPath = swift_getKeyPath(&unk_2FC068);
  sub_D184((uint64_t)v12, (uint64_t)v9 + *(int *)(v7 + 28), &qword_3DA690);
  *v9 = KeyPath;
  sub_D184((uint64_t)v9, (uint64_t)&v14[*(int *)(v54 + 36)], &qword_3DA648);
  *(_OWORD *)v14 = v20;
  *((_QWORD *)v14 + 2) = v21;
  v14[24] = v22;
  v14[25] = v23;
  sub_1A4750(v20, *((uint64_t *)&v20 + 1), v21, v22, v23);
  sub_D1D4((uint64_t)v9, &qword_3DA648);
  sub_D1D4((uint64_t)v12, &qword_3DA690);
  sub_1A475C(v20, *((uint64_t *)&v20 + 1), v21, v22, v23);
  v27 = v65;
  if ((*(_BYTE *)(v65 + 40) & 1) != 0)
  {
    v28 = v62;
    v29 = v59;
    v31 = v55;
    v30 = (uint64_t)v56;
    if (qword_3CF878 != -1)
      swift_once(&qword_3CF878, sub_1A1FA0);
    v32 = qword_3DA4E0;
    swift_retain(qword_3DA4E0);
  }
  else
  {
    v32 = static Color.white.getter(v26);
    v28 = v62;
    v29 = v59;
    v31 = v55;
    v30 = (uint64_t)v56;
  }
  if (qword_3CF870 != -1)
    swift_once(&qword_3CF870, sub_1A1F50);
  v33 = qword_3DA4D8;
  sub_D184((uint64_t)v14, v30, &qword_3DA610);
  v34 = (uint64_t *)(v30 + *(int *)(v31 + 36));
  *v34 = v32;
  v34[1] = v33;
  swift_retain(v33);
  v35 = sub_D1D4((uint64_t)v14, &qword_3DA610);
  if ((*(_BYTE *)(v27 + 40) & 1) != 0)
  {
    v36 = v53;
    v37 = static SymbolVariants.circle.getter(v35);
    SymbolVariants.fill.getter(v37);
    v39 = v63;
    v38 = v64;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v64);
  }
  else
  {
    static SymbolVariants.fill.getter(v35);
    v39 = v63;
    v38 = v64;
  }
  v40 = sub_1A42E8();
  View.symbolVariant(_:)(v28, v31, v40);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v38);
  v41 = sub_D1D4(v30, &qword_3DA5F8);
  if (*(_BYTE *)(v27 + 40) == 1)
  {
    if (qword_3CF868 != -1)
      v41 = swift_once(&qword_3CF868, sub_1A1EAC);
    v43 = qword_3DA4D0;
  }
  else
  {
    v43 = 0x4034000000000000;
  }
  v44 = static Alignment.center.getter(v41, v42);
  _FrameLayout.init(width:height:alignment:)(&v67, v43, 0, v43, 0, v44, v45);
  v47 = v60;
  v46 = v61;
  v48 = (uint64_t)v58;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v58, v29, v61);
  v49 = (_OWORD *)(v48 + *(int *)(v57 + 36));
  v50 = v68;
  *v49 = v67;
  v49[1] = v50;
  v49[2] = v69;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v46);
  return sub_D210(v48, v66, &qword_3DA5E8);
}

double sub_1A3280@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  char v36;

  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 48);
  if (v8)
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = *(_BYTE *)(a1 + 40);
    swift_retain_n(v8, 2);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA6A0);
    v12 = sub_10EDC(&qword_3DA6A8, &qword_3DA6A0, (uint64_t)&protocol conformance descriptor for EpisodeStateMachine<A, B>);
    v13 = ObservedObject.init(wrappedValue:)(v8, v11, v12);
    v15 = v14;
    v29 = v13;
    v30 = v14;
    v31 = v9;
    v32 = v10;
    v16 = sub_1A44C0();
    swift_retain(v15);
    _ConditionalContent<>.init(storage:)(&v29, &type metadata for PlaybackObservingImage, &type metadata for Image, v16, &protocol witness table for Image);
    swift_release(v15);
    swift_release(v8);
  }
  else
  {
    v17 = sub_1A2220();
    v18 = (v17 & 1) == 0;
    if ((v17 & 1) != 0)
      v19 = 6516580;
    else
      v19 = 2036427888;
    if (v18)
      v20 = 0xE400000000000000;
    else
      v20 = 0xE300000000000000;
    v21 = Image.init(systemName:)(v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    v22 = Image.resizable(capInsets:resizingMode:)(v7, v21, 0.0, 0.0, 0.0, 0.0);
    v23 = swift_release(v21);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v23);
    v30 = 0;
    v31 = 0;
    v29 = v22;
    v32 = 256;
    v24 = sub_1A44C0();
    _ConditionalContent<>.init(storage:)(&v29, &type metadata for PlaybackObservingImage, &type metadata for Image, v24, &protocol witness table for Image);
  }
  result = *(double *)&v33;
  v26 = v34;
  v27 = v35;
  v28 = v36;
  *(_OWORD *)a2 = v33;
  *(_QWORD *)(a2 + 16) = v26;
  *(_BYTE *)(a2 + 24) = v27;
  *(_BYTE *)(a2 + 25) = v28;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CompactPlayButton(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  __int128 v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v18 = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 8) = v18;
    v7 = a2[3];
    v6 = a2[4];
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v8 = a2[6];
    v9 = *(int *)(a3 + 36);
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    *(_QWORD *)(a1 + 48) = v8;
    v12 = type metadata accessor for PlayButtonPresenter.Data(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v13 + 48);
    swift_retain(v4);
    swift_unknownObjectRetain(v18);
    swift_retain(v7);
    v15 = swift_retain(v8);
    if (v14(v11, 1, v12, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return v5;
}

uint64_t destroy for CompactPlayButton(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_release(*a1);
  swift_unknownObjectRelease(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[6]);
  v4 = (char *)a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for PlayButtonPresenter.Data(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for CompactPlayButton(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  __int128 v17;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v17 = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = v17;
  v6 = a2[3];
  v5 = a2[4];
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  v7 = a2[6];
  v8 = *(int *)(a3 + 36);
  v9 = (void *)(a1 + v8);
  v10 = (char *)a2 + v8;
  *(_QWORD *)(a1 + 48) = v7;
  v11 = type metadata accessor for PlayButtonPresenter.Data(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v12 + 48);
  swift_retain(v4);
  swift_unknownObjectRetain(v17);
  swift_retain(v6);
  v14 = swift_retain(v7);
  if (v13(v10, 1, v11, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t *assignWithCopy for CompactPlayButton(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[1];
  v9 = a2[2];
  v10 = a1[1];
  a1[1] = v8;
  swift_unknownObjectRetain(v8);
  swift_unknownObjectRelease(v10);
  a1[2] = v9;
  v11 = a2[3];
  v12 = a1[3];
  a1[3] = v11;
  swift_retain(v11);
  swift_release(v12);
  v13 = a2[4];
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  a1[4] = v13;
  v14 = a1[6];
  v15 = a2[6];
  a1[6] = v15;
  swift_retain(v15);
  swift_release(v14);
  v16 = *(int *)(a3 + 36);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for PlayButtonPresenter.Data(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v9) = v21(v17, 1, v19);
  v22 = v21(v18, 1, v19);
  if (!(_DWORD)v9)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t initializeWithTake for CompactPlayButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 36);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = type metadata accessor for PlayButtonPresenter.Data(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t *assignWithTake for CompactPlayButton(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a2[2];
  v8 = a1[1];
  a1[1] = a2[1];
  swift_unknownObjectRelease(v8);
  v9 = a2[3];
  v10 = a1[3];
  a1[2] = v7;
  a1[3] = v9;
  swift_release(v10);
  a1[4] = a2[4];
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  v11 = a1[6];
  a1[6] = a2[6];
  swift_release(v11);
  v12 = *(int *)(a3 + 36);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PlayButtonPresenter.Data(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for CompactPlayButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A3B38);
}

uint64_t sub_1A3B38(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CompactPlayButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A3BC4);
}

char *sub_1A3BC4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CompactPlayButton(uint64_t a1)
{
  uint64_t result;

  result = qword_3DA560;
  if (!qword_3DA560)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CompactPlayButton);
  return result;
}

void sub_1A3C78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_2FBF78;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = &unk_2FBF90;
  v4[4] = &unk_2FBFA8;
  sub_99164(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for CompactPlayButton.Style()
{
  return &type metadata for CompactPlayButton.Style;
}

unint64_t sub_1A3D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA5A8;
  if (!qword_3DA5A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA4F8);
    sub_10EDC(&qword_3DA5B0, &qword_3DA4F0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA5A8);
  }
  return result;
}

uint64_t initializeWithCopy for PlaybackObservingImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for PlaybackObservingImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PlaybackObservingImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackObservingImage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackObservingImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackObservingImage()
{
  return &type metadata for PlaybackObservingImage;
}

uint64_t sub_1A3F34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32FD94, 1);
}

uint64_t sub_1A3F44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t result;
  uint64_t v26;

  v3 = 0x6573756170;
  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - v12;
  v14 = *(_QWORD *)(v1 + 8);
  v15 = swift_retain(v14);
  dispatch thunk of EpisodeStateMachine.currentState.getter(v15);
  swift_release(v14);
  v17 = EpisodePlayState.isEpisodePlaying.getter(v16);
  sub_FA4C((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  v18 = 0xE500000000000000;
  if ((v17 & 1) == 0)
  {
    v19 = swift_retain(v14);
    dispatch thunk of EpisodeStateMachine.currentState.getter(v19);
    swift_release(v14);
    v21 = EpisodePlayState.isPending.getter(v20);
    sub_FA4C((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    if ((v21 & 1) == 0)
    {
      v3 = 2036427888;
      v18 = 0xE400000000000000;
    }
  }
  v22 = Image.init(systemName:)(v3, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  v23 = Image.resizable(capInsets:resizingMode:)(v7, v22, 0.0, 0.0, 0.0, 0.0);
  v24 = swift_release(v22);
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v24);
  *a1 = v23;
  return result;
}

uint64_t sub_1A411C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for CompactPlayButton(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  v6 = v0 + v4 + *(int *)(v1 + 36);
  v7 = type metadata accessor for PlayButtonPresenter.Data(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1A41DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CompactPlayButton(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A4220()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CompactPlayButton(0) - 8) + 80);
  return sub_1A2C48((_QWORD *)(v0 + ((v1 + 16) & ~v1)));
}

uint64_t sub_1A424C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A2D50(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1A4254()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_3DA5F0;
  if (!qword_3DA5F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA5E8);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA5F8);
    v2[1] = sub_1A42E8();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.symbolVariant(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA5F0);
  }
  return result;
}

unint64_t sub_1A42E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA600;
  if (!qword_3DA600)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA5F8);
    sub_1A436C();
    sub_10EDC(&qword_3DA650, &qword_3DA658, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier2<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA600);
  }
  return result;
}

unint64_t sub_1A436C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA608;
  if (!qword_3DA608)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA610);
    sub_1A43F0();
    sub_10EDC(&qword_3DA640, &qword_3DA648, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA608);
  }
  return result;
}

unint64_t sub_1A43F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA618;
  if (!qword_3DA618)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA620);
    sub_1A4454();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA618);
  }
  return result;
}

unint64_t sub_1A4454()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3DA628;
  if (!qword_3DA628)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA630);
    sub_1A44C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA628);
  }
  return result;
}

unint64_t sub_1A44C0()
{
  unint64_t result;

  result = qword_3DA638;
  if (!qword_3DA638)
  {
    result = swift_getWitnessTable(&unk_2FBFE8, &type metadata for PlaybackObservingImage);
    atomic_store(result, (unint64_t *)&qword_3DA638);
  }
  return result;
}

unint64_t sub_1A4504()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_3DA668;
  if (!qword_3DA668)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA5C8);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3DA5B8);
    v2[1] = type metadata accessor for BorderlessButtonStyle(255);
    v2[2] = sub_10EDC(&qword_3DA660, &qword_3DA5B8, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_89A0(&qword_3D8750, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10EDC(&qword_3DA670, &qword_3DA678, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3DA668);
  }
  return result;
}

uint64_t sub_1A460C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1A4634@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1A465C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1A4684(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1A46AC()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_1A46CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA690);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D184(a1, (uint64_t)v4, &qword_3DA690);
  return EnvironmentValues.symbolRenderingMode.setter(v4);
}

uint64_t sub_1A4750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
    a1 = a2;
  return swift_retain(a1);
}

uint64_t sub_1A475C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
    a1 = a2;
  return swift_release(a1);
}

void *sub_1A4768()
{
  return &protocol witness table for Image;
}

double sub_1A4774(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  double result;

  if (a3 != 255)
    return sub_1A478C(a1, a2, a3 & 1);
  return result;
}

double sub_1A478C(uint64_t a1, uint64_t a2, char a3)
{
  double result;

  if ((a3 & 1) != 0)
    *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
  return result;
}

void sub_1A479C(_QWORD *a1@<X8>)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[10];

  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants];
  if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants
         + 80] & 1) != 0)
  {
    sub_1A4840(v1, (uint64_t)v14);
    v5 = v14[0];
    v4 = v14[1];
    v7 = v14[2];
    v6 = v14[3];
    v9 = v14[4];
    v8 = v14[5];
    v11 = v14[6];
    v10 = v14[7];
    v13 = v14[8];
    v12 = v14[9];
    *(_QWORD *)v3 = v14[0];
    *((_QWORD *)v3 + 1) = v4;
    *((_QWORD *)v3 + 2) = v7;
    *((_QWORD *)v3 + 3) = v6;
    *((_QWORD *)v3 + 4) = v9;
    *((_QWORD *)v3 + 5) = v8;
    *((_QWORD *)v3 + 6) = v11;
    *((_QWORD *)v3 + 7) = v10;
    *((_QWORD *)v3 + 8) = v13;
    *((_QWORD *)v3 + 9) = v12;
    v3[80] = 0;
  }
  else
  {
    v13 = *((_QWORD *)v3 + 8);
    v12 = *((_QWORD *)v3 + 9);
    v11 = *((_QWORD *)v3 + 6);
    v10 = *((_QWORD *)v3 + 7);
    v9 = *((_QWORD *)v3 + 4);
    v8 = *((_QWORD *)v3 + 5);
    v7 = *((_QWORD *)v3 + 2);
    v6 = *((_QWORD *)v3 + 3);
    v5 = *(_QWORD *)v3;
    v4 = *((_QWORD *)v3 + 1);
  }
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v7;
  a1[3] = v6;
  a1[4] = v9;
  a1[5] = v8;
  a1[6] = v11;
  a1[7] = v10;
  a1[8] = v13;
  a1[9] = v12;
}

int8x16_t sub_1A4840@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  int32x2_t v8;
  int64x2_t v9;
  int8x16_t result;

  v3 = objc_msgSend(a1, "traitCollection");
  v4 = (char *)objc_msgSend(v3, "userInterfaceIdiom");

  v5 = 234.0;
  if (v4 == (_BYTE *)&dword_4 + 1)
    v5 = 230.0;
  v6 = 200.0;
  if (v4 == (_BYTE *)&dword_4 + 1)
    v6 = 175.0;
  v7 = 12.0;
  if (v4 == (_BYTE *)&dword_4 + 1)
    v7 = 14.0;
  *(double *)a2 = v5;
  *(double *)(a2 + 8) = v5;
  *(int64x2_t *)(a2 + 16) = vdupq_n_s64(0x4072C00000000000uLL);
  *(double *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = 0x4080400000000000;
  v8 = vdup_n_s32(v4 == (_BYTE *)&dword_4 + 1);
  v9.i64[0] = v8.u32[0];
  v9.i64[1] = v8.u32[1];
  result = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v9, 0x3FuLL)), (int8x16_t)xmmword_2FC0B0, (int8x16_t)xmmword_2FC0A0);
  *(int8x16_t *)(a2 + 48) = result;
  *(_QWORD *)(a2 + 64) = 0x4044000000000000;
  *(double *)(a2 + 72) = v7;
  return result;
}

id sub_1A4930()
{
  id v0;
  _QWORD v2[10];

  v0 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, "setAxis:", 0);
  objc_msgSend(v0, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v0, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setLayoutMargins:", 0.0, 0.0, 33.0, 0.0);
  sub_1A479C(v2);
  objc_msgSend(v0, "setSpacing:", *(double *)&v2[8]);
  return v0;
}

id sub_1A4A14()
{
  objc_class *v0;
  _BYTE *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  objc_super v11;

  v0 = (objc_class *)type metadata accessor for EpisodeHeaderSubtitle();
  v1 = objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_presenter] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_style] = 1;
  v11.receiver = v1;
  v11.super_class = v0;
  v2 = objc_msgSendSuper2(&v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v3 = v2;
  v4 = (void *)static UIFont.footnoteEmph.getter();
  v5 = (void *)static UIFont.subheadEmph.getter();
  v6 = (void *)static UIFont.preferredFont(iOS:mac:)(v4, v5);

  objc_msgSend(v3, "setFont:", v6);
  objc_msgSend(v3, "setNumberOfLines:", 1);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v3;
  v9 = objc_msgSend(v7, "secondaryLabelColor");
  objc_msgSend(v8, "setTextColor:", v9);

  return v8;
}

id sub_1A4B68()
{
  objc_class *v0;
  _BYTE *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  objc_super v9;

  v0 = (objc_class *)type metadata accessor for EpisodeHeaderEntitlementDisplay();
  v1 = objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay_presenter] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay_style] = 1;
  v9.receiver = v1;
  v9.super_class = v0;
  v2 = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v4, "setTextColor:", v5);

  objc_msgSend(v4, "setNumberOfLines:", 2);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v6 = v4;
  v7 = (void *)static UIFont.subhead.getter(v6);
  objc_msgSend(v6, "setFont:", v7);

  objc_msgSend(v6, "setTextAlignment:", 4);
  return v6;
}

void *sub_1A4CC0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int16 v34;
  char v35;
  unsigned __int8 v36;
  void *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  void *v48;
  void *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  _QWORD v59[11];
  char v60;
  char v61;

  if (qword_3CF500 != -1)
    swift_once(&qword_3CF500, sub_140020);
  v0 = qword_3FB830;
  v1 = qword_3FB840;
  v2 = word_3FB848;
  v51 = HIBYTE(word_3FB848);
  v50 = unk_3FB838;
  v58 = (void *)qword_3FB7F0;
  v56 = qword_3FB800;
  v57 = *(_QWORD *)algn_3FB7F8;
  v54 = qword_3FB810;
  v55 = qword_3FB808;
  v52 = *((_QWORD *)&xmmword_3FB820 + 1);
  v53 = qword_3FB818;
  v49 = (void *)xmmword_3FB820;
  sub_DDA0((void *)qword_3FB7F0, *(uint64_t *)algn_3FB7F8, qword_3FB800, qword_3FB808, qword_3FB810, qword_3FB818, (void *)xmmword_3FB820, *((uint64_t *)&xmmword_3FB820 + 1), qword_3FB830, unk_3FB838, qword_3FB840, word_3FB848, SHIBYTE(word_3FB848));
  if (qword_3CF468 != -1)
    swift_once(&qword_3CF468, sub_13F900);
  v3 = (void *)qword_3FB0D0;
  v4 = *(_QWORD *)algn_3FB0D8;
  v5 = qword_3FB0E0;
  v7 = qword_3FB0F0;
  v6 = qword_3FB0F8;
  v8 = *((_QWORD *)&xmmword_3FB100 + 1);
  v47 = byte_3FB129;
  v45 = qword_3FB0E8;
  v46 = qword_3FB110;
  v40 = qword_3FB120;
  v41 = unk_3FB118;
  v39 = byte_3FB128;
  v42 = qword_3FB0F8;
  v43 = qword_3FB0F0;
  v44 = *((_QWORD *)&xmmword_3FB100 + 1);
  v48 = (void *)xmmword_3FB100;
  if (!v51)
  {
    v34 = v2;
    v31 = v1;
    v28 = v0;
    v20 = qword_3FB110;
    v37 = (void *)qword_3FB0D0;
    v38 = v0;
    v21 = unk_3FB118;
    v36 = v2;
    v22 = v1;
    v23 = qword_3FB120;
    v24 = qword_3FB0E0;
    v25 = *(_QWORD *)algn_3FB0D8;
    v26 = byte_3FB128;
    sub_DDA0(v58, v57, v56, v55, v54, v53, v49, v52, v28, v50, v31, v34, SHIBYTE(v34));
    v35 = v26;
    v4 = v25;
    v5 = v24;
    v29 = v21;
    v32 = v23;
    v1 = v22;
    v2 = v36;
    v3 = v37;
    v0 = v38;
    sub_DDA0(v37, v4, v5, v45, v7, v6, v48, v8, v20, v29, v32, v35, v47);
    if (!v47)
      goto LABEL_7;
LABEL_9:
    sub_DD48(v3, v4, v5, v45, v43, v42);
    v9 = v58;
    v11 = v56;
    v10 = v57;
    v16 = v54;
    v13 = v55;
    v15 = v53;
    sub_DCC8(v58, v57, v56, v55, v54, v53, v49, v52, v0, v50, v1, v2, v51);
    v18 = v40;
    v17 = v41;
    v19 = v39;
    goto LABEL_10;
  }
  sub_DDA0((void *)qword_3FB0D0, *(uint64_t *)algn_3FB0D8, qword_3FB0E0, qword_3FB0E8, qword_3FB0F0, qword_3FB0F8, (void *)xmmword_3FB100, *((uint64_t *)&xmmword_3FB100 + 1), qword_3FB110, unk_3FB118, qword_3FB120, byte_3FB128, byte_3FB129);
  sub_DE20(v58, v57, v56, v55, v54, v53);
  sub_DE20(v49, v52, v0, v50, v1, v2);
  sub_DD48(v49, v52, v0, v50, v1, v2);
  if (v47)
    goto LABEL_9;
LABEL_7:
  v33 = v2;
  v30 = v1;
  v9 = v58;
  v11 = v56;
  v10 = v57;
  v12 = v4;
  v13 = v55;
  v14 = v5;
  v15 = v53;
  v16 = v54;
  sub_DCC8(v58, v57, v56, v55, v54, v53, v49, v52, v0, v50, v30, v33, v51);
  v48 = v3;
  v44 = v12;
  v46 = v14;
  v17 = v45;
  v18 = v43;
  v19 = v42;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v59[0] = v9;
  v59[1] = v10;
  v59[2] = v11;
  v59[3] = v13;
  v59[4] = v16;
  v59[5] = v15;
  v59[6] = v48;
  v59[7] = v44;
  v59[8] = v46;
  v59[9] = v17;
  v59[10] = v18;
  v60 = v19;
  v61 = 1;
  return sub_A96AC((uint64_t)v59, 2, 4, 0);
}

char *sub_1A5048()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___showSubtitleButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___showSubtitleButton);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___showSubtitleButton);
  }
  else
  {
    v4 = sub_1A50A4();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_1A50A4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char *v27;
  id v28;
  double v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int16 v38;
  char v39;
  unsigned __int8 v40;
  void *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  void *v52;
  void *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  _QWORD v63[11];
  char v64;
  char v65;

  if (qword_3CF4F8 != -1)
    swift_once(&qword_3CF4F8, sub_13FFC0);
  v0 = qword_3FB7D0;
  v1 = qword_3FB7E0;
  v2 = word_3FB7E8;
  v55 = HIBYTE(word_3FB7E8);
  v54 = unk_3FB7D8;
  v62 = (void *)qword_3FB790;
  v60 = qword_3FB7A0;
  v61 = *(_QWORD *)algn_3FB798;
  v58 = qword_3FB7B0;
  v59 = qword_3FB7A8;
  v56 = *((_QWORD *)&xmmword_3FB7C0 + 1);
  v57 = qword_3FB7B8;
  v53 = (void *)xmmword_3FB7C0;
  sub_DDA0((void *)qword_3FB790, *(uint64_t *)algn_3FB798, qword_3FB7A0, qword_3FB7A8, qword_3FB7B0, qword_3FB7B8, (void *)xmmword_3FB7C0, *((uint64_t *)&xmmword_3FB7C0 + 1), qword_3FB7D0, unk_3FB7D8, qword_3FB7E0, word_3FB7E8, SHIBYTE(word_3FB7E8));
  if (qword_3CF460 != -1)
    swift_once(&qword_3CF460, sub_13F8A0);
  v3 = (void *)qword_3FB070;
  v4 = *(_QWORD *)algn_3FB078;
  v5 = qword_3FB080;
  v7 = qword_3FB090;
  v6 = qword_3FB098;
  v8 = *((_QWORD *)&xmmword_3FB0A0 + 1);
  v51 = byte_3FB0C9;
  v49 = qword_3FB088;
  v50 = qword_3FB0B0;
  v44 = qword_3FB0C0;
  v45 = unk_3FB0B8;
  v43 = byte_3FB0C8;
  v46 = qword_3FB098;
  v47 = qword_3FB090;
  v48 = *((_QWORD *)&xmmword_3FB0A0 + 1);
  v52 = (void *)xmmword_3FB0A0;
  if (v55)
  {
    sub_DDA0((void *)qword_3FB070, *(uint64_t *)algn_3FB078, qword_3FB080, qword_3FB088, qword_3FB090, qword_3FB098, (void *)xmmword_3FB0A0, *((uint64_t *)&xmmword_3FB0A0 + 1), qword_3FB0B0, unk_3FB0B8, qword_3FB0C0, byte_3FB0C8, byte_3FB0C9);
    sub_DE20(v62, v61, v60, v59, v58, v57);
    sub_DE20(v53, v56, v0, v54, v1, v2);
    sub_DD48(v53, v56, v0, v54, v1, v2);
    if (!v51)
    {
LABEL_7:
      v37 = v2;
      v34 = v1;
      v9 = v62;
      v11 = v60;
      v10 = v61;
      v12 = v4;
      v13 = v59;
      v14 = v5;
      v15 = v57;
      v16 = v58;
      sub_DCC8(v62, v61, v60, v59, v58, v57, v53, v56, v0, v54, v34, v37, v55);
      v52 = v3;
      v48 = v12;
      v50 = v14;
      v17 = v49;
      v18 = v47;
      v19 = v46;
      goto LABEL_10;
    }
  }
  else
  {
    v38 = v2;
    v35 = v1;
    v32 = v0;
    v20 = qword_3FB0B0;
    v41 = (void *)qword_3FB070;
    v42 = v0;
    v21 = unk_3FB0B8;
    v40 = v2;
    v22 = v1;
    v23 = qword_3FB0C0;
    v24 = qword_3FB080;
    v25 = *(_QWORD *)algn_3FB078;
    v26 = byte_3FB0C8;
    sub_DDA0(v62, v61, v60, v59, v58, v57, v53, v56, v32, v54, v35, v38, SHIBYTE(v38));
    v39 = v26;
    v4 = v25;
    v5 = v24;
    v33 = v21;
    v36 = v23;
    v1 = v22;
    v2 = v40;
    v3 = v41;
    v0 = v42;
    sub_DDA0(v41, v4, v5, v49, v7, v6, v52, v8, v20, v33, v36, v39, v51);
    if (!v51)
      goto LABEL_7;
  }
  sub_DD48(v3, v4, v5, v49, v47, v46);
  v9 = v62;
  v11 = v60;
  v10 = v61;
  v16 = v58;
  v13 = v59;
  v15 = v57;
  sub_DCC8(v62, v61, v60, v59, v58, v57, v53, v56, v0, v54, v1, v2, v55);
  v18 = v44;
  v17 = v45;
  v19 = v43;
LABEL_10:
  type metadata accessor for DynamicTypeButton();
  v63[0] = v9;
  v63[1] = v10;
  v63[2] = v11;
  v63[3] = v13;
  v63[4] = v16;
  v63[5] = v15;
  v63[6] = v52;
  v63[7] = v48;
  v63[8] = v50;
  v63[9] = v17;
  v63[10] = v18;
  v64 = v19;
  v65 = 1;
  v27 = sub_2D5CD4((uint64_t)v63);
  v28 = objc_msgSend(v27, "titleLabel");
  if (v28)
  {
    v30 = v28;
    objc_msgSend(v28, "setTextAlignment:", 4);

  }
  LODWORD(v29) = 1148846080;
  objc_msgSend(v27, "setContentCompressionResistancePriority:forAxis:", 1, v29);
  return v27;
}

id sub_1A5474(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  id v23;
  double v24;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29[10];

  v2 = type metadata accessor for Glyph(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "traitCollection", v4);
  v8 = (char *)objc_msgSend(v7, "userInterfaceIdiom");

  if (v8 == (_BYTE *)&dword_0 + 1)
  {
    v9 = type metadata accessor for RoundHeaderButton();
    v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
    v26 = 0;
    v11 = Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(0x6C69662E79616C70, 0xE90000000000006CLL, 0x4031000000000000, 0, 5, -1, 0, 0, v26);
    v12 = (void *)Glyph.image.getter(v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    objc_msgSend(v10, "setImage:forState:", v12, 0);

    v13 = (void *)objc_opt_self(NSLayoutConstraint);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v15 = swift_allocObject(v14, 48, 7);
    *(_OWORD *)(v15 + 16) = xmmword_2EFC90;
    v16 = objc_msgSend(v10, "heightAnchor");
    v17 = objc_msgSend(v16, "constraintEqualToConstant:", 48.0);

    *(_QWORD *)(v15 + 32) = v17;
    v18 = objc_msgSend(v10, "widthAnchor");

    sub_1A479C(v29);
    v19 = objc_msgSend(v18, "constraintGreaterThanOrEqualToConstant:", *(double *)&v29[4]);

    *(_QWORD *)(v15 + 40) = v19;
    v27 = v15;
    specialized Array._endMutation()(v20);
    v21 = v27;
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, "activateConstraints:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

  }
  else
  {
    LOBYTE(v27) = 1;
    v29[0] = 0;
    v28 = 0;
    v23 = objc_allocWithZone((Class)type metadata accessor for MacButton());
    v10 = sub_F3EC0((char *)&v27, v29, &v28);
    *((_BYTE *)v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_usesBoundsForBaselineGuide) = 1;
    LODWORD(v24) = 1148846080;
    objc_msgSend(v10, "setContentHuggingPriority:forAxis:", 0, v24);
  }
  return v10;
}

uint64_t sub_1A5744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  char v11;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell__primaryButtonController;
  v3 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell__primaryButtonController);
  v4 = v3;
  if (!v3)
  {
    v5 = *(_QWORD *)(v1
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_objectGraph);
    if (v5)
    {
      swift_retain(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_objectGraph));
      v6 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_1A5474);
      v11 = 0;
      v10 = 1;
      v7 = type metadata accessor for SmartPlayButtonController(0);
      swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
      v4 = SmartPlayButtonController.init(button:context:platform:objectGraph:)(v6, &v11, &v10, v5);
      v8 = *(_QWORD *)(v1 + v2);
      *(_QWORD *)(v1 + v2) = v4;
      swift_retain(v4);
      swift_release(v8);
    }
    else
    {
      v4 = 0;
    }
  }
  swift_retain(v3);
  return v4;
}

id sub_1A5828(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v22;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *((_OWORD *)v11 + 3) = 0u;
  *((_OWORD *)v11 + 4) = 0u;
  v11[80] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkWidthConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___horizontalStack] = 0;
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_verticalStack;
  v13 = objc_allocWithZone((Class)UIStackView);
  v14 = v4;
  v15 = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, "setAxis:", 1);
  objc_msgSend(v15, "setDistribution:", 0);
  objc_msgSend(v15, "setAlignment:", 1);
  objc_msgSend(v15, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v15, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v12] = v15;
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_buttonStackView;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v17, "setAxis:", 0);
  objc_msgSend(v17, "setAlignment:", 3);
  objc_msgSend(v17, "setSpacing:", 10.0);
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v16] = v17;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter] = 0;
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitle;
  *(_QWORD *)&v14[v18] = sub_1A4A14();
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter] = 0;
  v19 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplay;
  *(_QWORD *)&v14[v19] = sub_1A4B68();
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeTitle;
  *(_QWORD *)&v14[v20] = sub_1A4CC0();
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___showSubtitleButton] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___primaryButton] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell__primaryButtonController] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_primaryButtonAction] = 0;
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_hasSetupButtons] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodePlayStateController] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_objectGraph] = 0;

  v22.receiver = v14;
  v22.super_class = ObjectType;
  return objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
}

void sub_1A5AEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_objectGraph) = a1;
  swift_release(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v9, v5, v5);
  v6 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodePlayStateController);
  *(_QWORD *)(v2
            + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodePlayStateController) = v9;
  swift_release(v6);
  sub_1A5BA8(a1);
  v7 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkView);
  if (v7)
  {
    v8 = v7;
    sub_1D6A8(a1);

  }
  else
  {
    __break(1u);
  }
}

void sub_1A5BA8(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  char *v15;
  id v16;
  char *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  char *v38;
  void *v39;
  double v40;
  double *v41;
  double *v42;
  id v43;
  double v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  __C::UILayoutPriority v72;
  Class isa;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  void *v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  __C::UILayoutPriority v100;
  Class v101;
  uint64_t v102;
  Class v103;
  id v104;
  double *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  id v109;
  double v110[11];

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkView;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkView])
  {
    v3 = v1;
    v5 = objc_msgSend(v1, "contentView");
    objc_msgSend(v5, "setLayoutMargins:", UIEdgeInsets.init(topBottom:sides:)(8.0, 0.0));

    v6 = objc_msgSend(v3, "contentView");
    v7 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___horizontalStack, (uint64_t (*)(uint64_t))sub_1A4930);
    objc_msgSend(v6, "addSubview:", v7);

    v8 = type metadata accessor for SeparatorView();
    v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
    objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v10 = objc_msgSend(v3, "contentView");
    objc_msgSend(v10, "addSubview:", v9);

    v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkWithPlaybackStatusView(0)), "init");
    v12 = *(void **)&v3[v2];
    *(_QWORD *)&v3[v2] = v11;

    v13 = *(void **)&v3[v2];
    if (v13)
    {
      v14 = objc_allocWithZone((Class)UIColor);
      v15 = v13;
      v16 = objc_msgSend(v14, "initWithWhite:alpha:", 0.0, 0.15);
      v17 = &v15[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
      v18 = *(void **)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
      *(_QWORD *)v17 = v16;
      *(_OWORD *)(v17 + 8) = xmmword_2F5080;
      *((_QWORD *)v17 + 3) = 0x4024000000000000;
      v19 = v16;

      sub_E9020();
      v20 = *(void **)&v3[v2];
      if (v20)
      {
        v21 = objc_msgSend(v20, "widthAnchor");
        sub_1A479C(v110);
        v22 = objc_msgSend(v21, "constraintEqualToConstant:", v110[0]);

        v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkWidthConstraint;
        v24 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkWidthConstraint];
        *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkWidthConstraint] = v22;

        v25 = *(void **)&v3[v2];
        if (v25)
        {
          v26 = objc_msgSend(v25, "heightAnchor");
          v27 = *(void **)&v3[v2];
          if (v27)
          {
            v107 = v23;
            v108 = v9;
            v106 = a1;
            v28 = objc_msgSend(v27, "widthAnchor");
            v29 = objc_msgSend(v26, "constraintEqualToAnchor:", v28);

            v109 = v29;
            v30 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___horizontalStack, (uint64_t (*)(uint64_t))sub_1A4930);
            if (*(_QWORD *)&v3[v2])
            {
              v31 = v30;
              objc_msgSend(v30, "addArrangedSubview:");

              v32 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___horizontalStack, (uint64_t (*)(uint64_t))sub_1A4930);
              v33 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_verticalStack];
              objc_msgSend(v32, "addArrangedSubview:", v33);

              v34 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
              v35 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
              v104 = v34;
              objc_msgSend(v33, "addArrangedSubview:", v34);
              v36 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitle;
              objc_msgSend(v33, "addArrangedSubview:", *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitle]);
              v37 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeTitle];
              objc_msgSend(v33, "addArrangedSubview:", v37);
              v38 = sub_1A5048();
              objc_msgSend(v33, "addArrangedSubview:", v38);

              objc_msgSend(v33, "addArrangedSubview:", v35);
              v39 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_buttonStackView];
              objc_msgSend(v33, "addArrangedSubview:", v39);
              LODWORD(v40) = 1148846080;
              objc_msgSend(v37, "setContentHuggingPriority:forAxis:", 1, v40);
              v41 = (double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants];
              objc_msgSend(v33, "setCustomSpacing:afterView:", *(_QWORD *)&v3[v36], *(double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants+ 48]);
              v42 = v41;
              v105 = v41;
              objc_msgSend(v33, "setCustomSpacing:afterView:", v37, v41[7]);
              v43 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_1A5474);
              objc_msgSend(v39, "addArrangedSubview:", v43);

              objc_msgSend(v39, "addArrangedSubview:", *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplay]);
              v44 = v42[9];
              v45 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_1A5474);
              objc_msgSend(v39, "setCustomSpacing:afterView:", v45, v44);

              v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
              v47 = swift_allocObject(v46, 128, 7);
              *(_OWORD *)(v47 + 16) = xmmword_2F4A70;
              v48 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___horizontalStack, (uint64_t (*)(uint64_t))sub_1A4930);
              v49 = objc_msgSend(v48, "leadingAnchor");

              v50 = objc_msgSend(v3, "contentView");
              v51 = objc_msgSend(v50, "layoutMarginsGuide");

              v52 = objc_msgSend(v51, "leadingAnchor");
              v53 = objc_msgSend(v49, "constraintEqualToAnchor:", v52);

              *(_QWORD *)(v47 + 32) = v53;
              v54 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___horizontalStack, (uint64_t (*)(uint64_t))sub_1A4930);
              v55 = objc_msgSend(v54, "trailingAnchor");

              v56 = objc_msgSend(v3, "contentView");
              v57 = objc_msgSend(v56, "layoutMarginsGuide");

              v58 = objc_msgSend(v57, "trailingAnchor");
              v59 = objc_msgSend(v55, "constraintEqualToAnchor:", v58);

              *(_QWORD *)(v47 + 40) = v59;
              v60 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___horizontalStack, (uint64_t (*)(uint64_t))sub_1A4930);
              v61 = objc_msgSend(v60, "topAnchor");

              v62 = objc_msgSend(v3, "contentView");
              v63 = objc_msgSend(v62, "layoutMarginsGuide");

              v64 = objc_msgSend(v63, "topAnchor");
              v65 = objc_msgSend(v61, "constraintEqualToAnchor:", v64);

              *(_QWORD *)(v47 + 48) = v65;
              v66 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___horizontalStack, (uint64_t (*)(uint64_t))sub_1A4930);
              v67 = objc_msgSend(v66, "bottomAnchor");

              v68 = objc_msgSend(v3, "contentView");
              v69 = objc_msgSend(v68, "layoutMarginsGuide");

              v70 = objc_msgSend(v69, "bottomAnchor");
              v71 = objc_msgSend(v67, "constraintEqualToAnchor:", v70);

              v72.rawValue = static UILayoutPriority.highestBreakable.getter();
              isa = NSLayoutConstraint.withPriority(priority:)(v72).super.isa;

              *(_QWORD *)(v47 + 56) = isa;
              v74 = objc_msgSend(v108, "leadingAnchor");
              v75 = objc_msgSend(v3, "contentView");
              v76 = objc_msgSend(v75, "layoutMarginsGuide");

              v77 = objc_msgSend(v76, "leadingAnchor");
              v78 = objc_msgSend(v74, "constraintEqualToAnchor:", v77);

              *(_QWORD *)(v47 + 64) = v78;
              v79 = objc_msgSend(v108, "trailingAnchor");
              v80 = objc_msgSend(v3, "contentView");
              v81 = objc_msgSend(v80, "layoutMarginsGuide");

              v82 = objc_msgSend(v81, "trailingAnchor");
              v83 = objc_msgSend(v79, "constraintEqualToAnchor:", v82);

              *(_QWORD *)(v47 + 72) = v83;
              v84 = objc_msgSend(v108, "bottomAnchor");
              v85 = objc_msgSend(v3, "contentView");
              v86 = objc_msgSend(v85, "bottomAnchor");

              v87 = objc_msgSend(v84, "constraintEqualToAnchor:constant:", v86, -1.0);
              *(_QWORD *)(v47 + 80) = v87;
              v88 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_1A5474);
              v89 = objc_msgSend(v88, "widthAnchor");

              v90 = objc_msgSend(v89, "constraintGreaterThanOrEqualToConstant:", v105[4]);
              *(_QWORD *)(v47 + 88) = v90;
              v91 = *(void **)&v3[v107];
              if (v91)
              {
                v92 = (void *)objc_opt_self(NSLayoutConstraint);
                *(_QWORD *)(v47 + 96) = v91;
                *(_QWORD *)(v47 + 104) = v109;
                v93 = v91;
                v94 = objc_msgSend(v39, "trailingAnchor");
                v95 = objc_msgSend(v33, "trailingAnchor");
                v96 = objc_msgSend(v94, "constraintEqualToAnchor:", v95);

                *(_QWORD *)(v47 + 112) = v96;
                v97 = objc_msgSend(v104, "heightAnchor");
                v98 = objc_msgSend(v35, "heightAnchor");
                v99 = objc_msgSend(v97, "constraintEqualToAnchor:", v98);

                v100.rawValue = static UILayoutPriority.highestBreakable.getter();
                v101 = NSLayoutConstraint.withPriority(priority:)(v100).super.isa;

                *(_QWORD *)(v47 + 120) = v101;
                specialized Array._endMutation()(v102);
                sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
                v103 = Array._bridgeToObjectiveC()().super.isa;
                objc_msgSend(v92, "activateConstraints:", v103, swift_bridgeObjectRelease(v47).n128_f64[0]);

                sub_1A6750(v106);
                return;
              }
              goto LABEL_14;
            }
LABEL_13:
            __break(1u);
LABEL_14:
            __break(1u);
            return;
          }
LABEL_12:
          __break(1u);
          goto LABEL_13;
        }
LABEL_11:
        __break(1u);
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

void sub_1A6750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v2 = v1;
  v4 = type metadata accessor for EpisodeHeaderSubtitlePresenter();
  swift_allocObject(v4, 104, 7);
  swift_retain(a1);
  v6 = sub_138244(v5);
  swift_release(a1);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter;
  v8 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter);
  *(_QWORD *)(v2
            + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter) = v6;
  swift_release(v8);
  v9 = *(char **)(v2
                + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitle);
  v10 = *(_QWORD *)(v2 + v7);
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_presenter;
  v12 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_presenter];
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_presenter] = v10;
  v13 = v9;
  swift_retain(v10);
  swift_release(v12);
  v14 = *(_QWORD *)&v9[v11];
  if (v14)
  {
    *(_QWORD *)(v14 + 24) = &off_384738;
    swift_unknownObjectWeakAssign(v14 + 16, v13);
  }

  v15 = type metadata accessor for EpisodeHeaderEntitlementDisplayPresenter();
  v16 = (_QWORD *)swift_allocObject(v15, 56, 7);
  v16[3] = 0;
  swift_unknownObjectWeakInit(v16 + 2, 0);
  v16[4] = 0;
  v16[5] = 0;
  v16[6] = a1;
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter;
  v18 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter);
  *(_QWORD *)(v2
            + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter) = v16;
  swift_retain(a1);
  swift_release(v18);
  v19 = *(char **)(v2
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplay);
  v20 = *(_QWORD *)(v2 + v17);
  v21 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay_presenter;
  v22 = *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay_presenter];
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay_presenter] = v20;
  v24 = v19;
  swift_retain(v20);
  swift_release(v22);
  v23 = *(_QWORD *)&v19[v21];
  if (v23)
  {
    *(_QWORD *)(v23 + 24) = &off_389F10;
    swift_unknownObjectWeakAssign(v23 + 16, v24);
  }

}

void sub_1A68E4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  __n128 v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  NSString v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  NSString v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  Swift::String v43;
  unint64_t v44;
  NSString v45;
  void *v46;
  id v47;
  Swift::String v48;
  Swift::String v49;
  unint64_t v50;
  NSString v51;
  id v52;
  Swift::String v53;
  Swift::String v54;
  unint64_t v55;
  NSString v56;
  char *v57;
  Swift::String v58;
  Swift::String v59;
  unint64_t v60;
  NSString v61;
  char *v62;
  NSString v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  double v76;
  char *v77;
  uint64_t v78;
  void *v79;
  id v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  void *v88;
  int v89;
  void *v90;
  id v91;
  __n128 v92;
  void *v93;
  uint64_t v94;
  __n128 v95;
  void *v96;
  int v97;
  void *v98;
  id v99;
  __n128 v100;
  void *v101;
  id v102;
  uint64_t v103;
  void *v104;
  double v105;
  double v106;
  void *v107;
  void *v108;
  double v109;
  double v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  void *v115;
  double v116;
  double v117;
  void *v118;
  void *v119;
  id v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  _OWORD v145[2];
  uint64_t v146;
  double v147;
  unint64_t v148;
  double v149;
  uint64_t v150;
  uint64_t v151;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v4);
  v6 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkRequest(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v11);
  v13 = (char *)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v143 = (char *)&v133 - v15;
  v16 = type metadata accessor for ArtworkModel(0);
  v144 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  v138 = (uint64_t)&v133 - v23;
  v24 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_objectGraph];
  if (!v24)
    return;
  v139 = v21;
  v133 = v22;
  v134 = v10;
  v135 = v6;
  v25 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeTitle];
  v26 = swift_retain(v24);
  EpisodeHeader.title.getter(v26);
  v137 = v7;
  v141 = v18;
  if (v27)
  {
    v29 = v27;
    v30 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  else
  {
    v30 = 0;
  }
  objc_msgSend(v25, "setText:", v30, v28);

  v31 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_1A5474);
  v33 = EpisodeHeader.primaryButtonAction.getter(v32);
  Action.title.getter(v34);
  v36 = v35;
  v37 = swift_release(v33).n128_u64[0];
  v142 = v24;
  v136 = v8;
  v140 = v13;
  if (v36)
  {
    v38 = String._bridgeToObjectiveC()();
    v37 = swift_bridgeObjectRelease(v36).n128_u64[0];
  }
  else
  {
    v38 = 0;
  }
  objc_msgSend(v31, "setTitle:forState:", v38, 0, *(double *)&v37);

  v40 = EpisodeHeader.primaryButtonAction.getter(v39);
  v41 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_primaryButtonAction];
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_primaryButtonAction] = v40;
  swift_release(v41);
  v147 = 0.0;
  v148 = 0xE000000000000000;
  v42._countAndFlagsBits = 0xD000000000000014;
  v42._object = (void *)0x8000000000308A30;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 46;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  LOBYTE(v145[0]) = 16;
  _print_unlocked<A, B>(_:_:)(v145, &v147, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v44 = v148;
  v45 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setAccessibilityIdentifier:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

  v46 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitle];
  v147 = 0.0;
  v148 = 0xE000000000000000;
  v47 = v46;
  v48._countAndFlagsBits = 0xD000000000000014;
  v48._object = (void *)0x8000000000308A30;
  String.append(_:)(v48);
  v49._countAndFlagsBits = 46;
  v49._object = (void *)0xE100000000000000;
  String.append(_:)(v49);
  LOBYTE(v145[0]) = 17;
  _print_unlocked<A, B>(_:_:)(v145, &v147, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v50 = v148;
  v51 = String._bridgeToObjectiveC()();
  objc_msgSend(v47, "setAccessibilityIdentifier:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

  v52 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___primaryButton, (uint64_t (*)(uint64_t))sub_1A5474);
  v147 = 0.0;
  v148 = 0xE000000000000000;
  v53._countAndFlagsBits = 0xD000000000000014;
  v53._object = (void *)0x8000000000308A30;
  String.append(_:)(v53);
  v54._countAndFlagsBits = 46;
  v54._object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  LOBYTE(v145[0]) = 3;
  _print_unlocked<A, B>(_:_:)(v145, &v147, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v55 = v148;
  v56 = String._bridgeToObjectiveC()();
  objc_msgSend(v52, "setAccessibilityIdentifier:", v56, swift_bridgeObjectRelease(v55).n128_f64[0]);

  v57 = sub_1A5048();
  v147 = 0.0;
  v148 = 0xE000000000000000;
  v58._countAndFlagsBits = 0xD000000000000014;
  v58._object = (void *)0x8000000000308A30;
  String.append(_:)(v58);
  v59._countAndFlagsBits = 46;
  v59._object = (void *)0xE100000000000000;
  String.append(_:)(v59);
  LOBYTE(v145[0]) = 1;
  _print_unlocked<A, B>(_:_:)(v145, &v147, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v60 = v148;
  v61 = String._bridgeToObjectiveC()();
  objc_msgSend(v57, "setAccessibilityIdentifier:", v61, swift_bridgeObjectRelease(v60).n128_f64[0]);

  v62 = sub_1A5048();
  v63 = (NSString)EpisodeHeader.providerAction.getter();
  if (v63)
  {
    Action.title.getter(v64);
    v66 = v65;
    swift_release(v63);
    v67 = (uint64_t)v141;
    if (v66)
    {
      v63 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v66);
    }
    else
    {
      v63 = 0;
    }
    v68 = v142;
  }
  else
  {
    v68 = v142;
    v67 = (uint64_t)v141;
  }
  v69 = (uint64_t)v140;
  objc_msgSend(v62, "setTitle:forState:", v63, 0);

  v70 = sub_1A5048();
  v71 = EpisodeHeader.providerAction.getter();
  swift_release(v71);
  v72 = v139;
  if (v71)
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v73 = (id)qword_3D0890;
  }
  else
  {
    v73 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  }
  v74 = v73;
  objc_msgSend(v70, "setTitleColor:forState:", v73, 0);

  v75 = EpisodeHeader.providerAction.getter();
  if (v75)
  {
    v76 = *(double *)&v75;
    v77 = sub_1A5048();
    v150 = type metadata accessor for Action(0);
    v151 = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v147 = v76;
    swift_retain(*(_QWORD *)&v76);
    UIControl.setAction(_:for:asPartOf:)(&v147, 0x2000, v68);

    swift_release(*(_QWORD *)&v76);
    __swift_destroy_boxed_opaque_existential_0(&v147);
  }
  v78 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkView;
  v79 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkView];
  if (!v79)
  {
    __break(1u);
    goto LABEL_57;
  }
  v80 = v79;
  sub_F2F8();

  v82 = EpisodeHeader.shouldRenderEpisodeArtwork.getter(v81);
  v83 = v144;
  if ((v82 & 1) != 0)
  {
    v84 = EpisodeHeader.episodeArtwork.getter();
    if (v84)
    {
      v85 = v84;
      v86 = (uint64_t)v143;
      HeaderModel.PrimaryArtwork.artwork.getter(v84);
      v87 = swift_release(v85);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v83 + 48))(v86, 1, v72, v87) != 1)
      {
        v67 = v138;
        sub_2376C(v86, v138);
        v88 = *(void **)&v2[v78];
        if (!v88)
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        v89 = *(unsigned __int8 *)(v67 + 64);
        if (v89 == 255)
        {
          v113 = v88;
          v93 = 0;
        }
        else
        {
          v90 = *(void **)(v67 + 56);
          v91 = v88;
          sub_27F6C(v90, v89);
          v93 = (void *)Color.color.getter(v90, v92);
          sub_27F94(v90, v89);
        }
        objc_msgSend(v88, "setBackgroundColor:", v93);

        v114 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkWidthConstraint;
        v115 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkWidthConstraint];
        if (!v115)
          goto LABEL_64;
        objc_msgSend(v115, "constant");
        v117 = v116;
        sub_1A479C(&v147);
        if (v117 != v149)
        {
          v118 = *(void **)&v2[v114];
          if (!v118)
          {
LABEL_66:
            __break(1u);
            return;
          }
          objc_msgSend(v118, "setConstant:", *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants+ 16]);
        }
        v119 = *(void **)&v2[v78];
        if (!v119)
        {
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        v109 = *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants
                            + 16];
        v110 = *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants
                            + 24];
        v111 = v119;
        v112 = objc_msgSend(v2, "traitCollection");
        goto LABEL_49;
      }
    }
    else
    {
      v86 = (uint64_t)v143;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v143, 1, 1, v72);
    }
    v82 = sub_44C28(v86);
  }
  v94 = EpisodeHeader.showArtwork.getter(v82);
  HeaderModel.PrimaryArtwork.artwork.getter(v94);
  v95 = swift_release(v94);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v83 + 48))(v69, 1, v72, v95) == 1)
  {
    sub_44C28(v69);
    goto LABEL_50;
  }
  sub_2376C(v69, v67);
  v96 = *(void **)&v2[v78];
  if (!v96)
  {
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v97 = *(unsigned __int8 *)(v67 + 64);
  if (v97 == 255)
  {
    v102 = v96;
    v101 = 0;
  }
  else
  {
    v98 = *(void **)(v67 + 56);
    v99 = v96;
    sub_27F6C(v98, v97);
    v101 = (void *)Color.color.getter(v98, v100);
    sub_27F94(v98, v97);
  }
  objc_msgSend(v96, "setBackgroundColor:", v101);

  v103 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkWidthConstraint;
  v104 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkWidthConstraint];
  if (!v104)
    goto LABEL_60;
  objc_msgSend(v104, "constant");
  v106 = v105;
  sub_1A479C(&v147);
  if (v106 != v147)
  {
    v107 = *(void **)&v2[v103];
    if (!v107)
    {
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    objc_msgSend(v107, "setConstant:", *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants]);
  }
  v108 = *(void **)&v2[v78];
  if (!v108)
    goto LABEL_61;
  v109 = *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants];
  v110 = *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants
                      + 8];
  v111 = v108;
  v112 = objc_msgSend(v2, "traitCollection");
LABEL_49:
  v120 = v112;
  v121 = UITraitCollection.safeDisplayScale.getter(v120);

  v122 = v133;
  sub_27E84(v67, v133);
  v123 = type metadata accessor for CropCode(0);
  v124 = v135;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v135, 1, 1, v123);
  v146 = 0;
  memset(v145, 0, sizeof(v145));
  v125 = v134;
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v122, 1, 0, v124, 0, _swiftEmptyArrayStorage, v145, v109, v110, v121);
  sub_1DAA4(v125);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v125, v137);

  sub_239C0(v67);
LABEL_50:
  v126 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter];
  if (!v126)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v127 = *(_QWORD *)(v126 + 32);
  *(_QWORD *)(v126 + 32) = a1;
  swift_retain(v126);
  swift_release(v127);
  swift_retain(a1);
  sub_1379A4(v128);
  swift_release(v126);
  v129 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter];
  if (!v129)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v130 = *(_QWORD *)(v129 + 32);
  *(_QWORD *)(v129 + 32) = a1;
  swift_retain(v129);
  swift_release(v130);
  swift_retain(a1);
  sub_1DE970();
  swift_release(v129);
  v131 = sub_1A5744();
  if (v131)
  {
    v132 = v131;
    sub_AAFC8(a1);
    swift_release(v132);
  }
  sub_1A746C(a1, v68);
  swift_release(v68);
}

void sub_1A746C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  id v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = (char *)objc_msgSend(v5, "userInterfaceIdiom");

  if (v6 == (_BYTE *)&dword_4 + 1
    && (v2[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_hasSetupButtons] & 1) == 0)
  {
    v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_hasSetupButtons;
    v7 = EpisodeHeader.headerButtonItems.getter();
    v8 = v2;
    swift_retain(a2);
    v9 = (uint64_t)sub_1A7B24(v7, v8, a2);
    swift_bridgeObjectRelease(v7);

    swift_release(a2);
    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v19 = v9;
      else
        v19 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v10 = _CocoaArrayWrapper.endIndex.getter(v19);
      if (v10)
        goto LABEL_5;
    }
    else
    {
      v10 = *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v9);
      if (v10)
      {
LABEL_5:
        if (v10 < 1)
        {
          __break(1u);
          return;
        }
        v11 = 0;
        v12 = *(void **)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_buttonStackView];
        do
        {
          if ((v9 & 0xC000000000000001) != 0)
            v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
          else
            v13 = *(id *)(v9 + 8 * v11 + 32);
          v14 = v13;
          ++v11;
          objc_msgSend(v12, "addArrangedSubview:", v13);
          v15 = objc_msgSend(v14, "widthAnchor");
          v16 = objc_msgSend(v15, "constraintEqualToConstant:", 28.0);

          objc_msgSend(v16, "setActive:", 1);
          v17 = objc_msgSend(v14, "heightAnchor");
          v18 = objc_msgSend(v17, "constraintEqualToConstant:", 28.0);

          objc_msgSend(v18, "setActive:", 1);
        }
        while (v10 != v11);
      }
    }
    swift_bridgeObjectRelease_n(v9, 2);
    v3[v20] = 1;
  }
}

uint64_t sub_1A76D4()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkWidthConstraint));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___horizontalStack));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_verticalStack));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_buttonStackView));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitle));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplay));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeTitle));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___showSubtitleButton));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___primaryButton));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell__primaryButtonController));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_primaryButtonAction));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodePlayStateController));
  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_objectGraph));
}

uint64_t type metadata accessor for HorizontalEpisodeHeaderCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell);
}

uint64_t getEnumTagSinglePayload for HorizontalEpisodeHeaderCollectionViewCell.LayoutConstants(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HorizontalEpisodeHeaderCollectionViewCell.LayoutConstants(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 80) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalEpisodeHeaderCollectionViewCell.LayoutConstants()
{
  return &type metadata for HorizontalEpisodeHeaderCollectionViewCell.LayoutConstants;
}

void sub_1A7988(uint64_t *a1)
{
  sub_1A68E4(*a1);
}

uint64_t sub_1A7990()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_objectGraph));
}

uint64_t sub_1A79A4(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3DA7B0, v3, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalEpisodeHeaderCollectionViewCell, (uint64_t)&unk_2FC284);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_1A79FC()
{
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 279.0);
}

uint64_t sub_1A7A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3DA7B0, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalEpisodeHeaderCollectionViewCell, (uint64_t)&unk_2FC284);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_1A7A44(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA798, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalEpisodeHeaderCollectionViewCell, (uint64_t)&unk_2FC15C);
}

uint64_t sub_1A7A70(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C58, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalEpisodeHeaderCollectionViewCell, (uint64_t)&unk_2FC1E4);
}

uint64_t sub_1A7A9C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA7A0, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalEpisodeHeaderCollectionViewCell, (uint64_t)&unk_2FC1BC);
}

uint64_t sub_1A7AC8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3DA7A8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalEpisodeHeaderCollectionViewCell, (uint64_t)&unk_2FC214);
}

uint64_t sub_1A7AF4()
{
  return sub_239FC(&qword_3D1720, 255, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeHeader, (uint64_t)&protocol conformance descriptor for EpisodeHeader);
}

_QWORD *sub_1A7B24(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  result = _swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v8 = *(_QWORD *)(type metadata accessor for HeaderButtonItem(0) - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    v19 = a1;
    *(_QWORD *)&v11 = swift_bridgeObjectRetain(a1).n128_u64[0];
    do
    {
      v13 = objc_msgSend(a2, "traitCollection", v11, v19);
      v14 = objc_msgSend(v13, "horizontalSizeClass");

      sub_2434D4((uint64_t)v14, a3);
      if (v15)
      {
        v16 = v15;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v18 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        v17 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
        specialized Array._endMutation()(v12);
      }
      v9 += v10;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v19);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_1A7C6C()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___layoutConstants];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  *((_OWORD *)v1 + 4) = 0u;
  v1[80] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_artworkWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___horizontalStack] = 0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_verticalStack;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, "setAxis:", 1);
  objc_msgSend(v3, "setDistribution:", 0);
  objc_msgSend(v3, "setAlignment:", 1);
  objc_msgSend(v3, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v3, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v2] = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_buttonStackView;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, "setAxis:", 0);
  objc_msgSend(v5, "setAlignment:", 3);
  objc_msgSend(v5, "setSpacing:", 10.0);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v4] = v5;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter] = 0;
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderSubtitle;
  *(_QWORD *)&v0[v6] = sub_1A4A14();
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter] = 0;
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplay;
  *(_QWORD *)&v0[v7] = sub_1A4B68();
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodeTitle;
  *(_QWORD *)&v0[v8] = sub_1A4CC0();
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___showSubtitleButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell____lazy_storage___primaryButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell__primaryButtonController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_primaryButtonAction] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_hasSetupButtons] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_episodePlayStateController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews41HorizontalEpisodeHeaderCollectionViewCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/HorizontalEpisodeHeaderCollectionViewCell.swift", 71, 2, 368, 0);
  __break(1u);
}

id sub_1A7EF4(uint64_t a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  double *v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  void *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  NSString v20;
  id v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;

  v3 = v2;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_model];
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_model] = a1;
  swift_release(v6);
  v7 = (double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_preferredArtworkSize];
  *v7 = a2;
  v7[1] = a2;
  objc_msgSend(v2, "setNeedsLayout", swift_retain(a1).n128_f64[0]);
  v8 = sub_1A8950();
  sub_262C1C(a1);

  v9 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_titleAccessibilityLabel];
  if (v9)
  {
    v10 = v9;
    LegacyLockup.titleAccessibilityLabel.getter();
    if (v11)
    {
      v13 = v11;
      v14 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v12 = swift_bridgeObjectRelease(v13).n128_u64[0];
    }
    else
    {
      v14 = 0;
    }
    objc_msgSend(v10, "setAccessibilityLabel:", v14, v12);

  }
  v15 = sub_1A8A0C();
  if (v15)
  {
    v16 = v15;
    LegacyLockup.ordinal.getter(v15);
    if (v17)
    {
      v19 = v17;
      v20 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v18 = swift_bridgeObjectRelease(v19).n128_u64[0];
    }
    else
    {
      v20 = 0;
    }
    objc_msgSend(v16, "setText:", v20, v18);

  }
  v21 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1AB010);
  LegacyLockup.title.getter(v21);
  if (v22)
  {
    v24 = v22;
    v25 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  else
  {
    v25 = 0;
  }
  objc_msgSend(v21, "setText:", v25, v23);

  v26 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  v27 = LegacyLockup.subtitles.getter();
  if (v27)
  {
    v29 = v27;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3DA198);
    v31 = sub_1AAD80();
    BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v30, v31);
    v33 = v32;
    swift_bridgeObjectRelease(v29);
    v34 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(v33).n128_u64[0];
  }
  else
  {
    v34 = 0;
  }
  objc_msgSend(v26, "setText:", v34, v28);

  v35 = dispatch thunk of LegacyLockup.subtitleAction.getter();
  v36 = OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_subtitleAction;
  v37 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_subtitleAction];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_subtitleAction] = v35;
  swift_retain(v35);
  swift_release(v37);
  sub_1A8C60();
  v38 = sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1A8B40);
  objc_msgSend(v38, "setUserInteractionEnabled:", *(_QWORD *)&v3[v36] != 0);
  swift_release(v35);

  sub_1A9504(a1);
  sub_1A8C60();
  return objc_msgSend(v3, "setNeedsLayout");
}

