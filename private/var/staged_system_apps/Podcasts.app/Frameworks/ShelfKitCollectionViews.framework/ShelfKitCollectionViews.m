void ASDisableAccessibilitySizing()
{
  uint64_t v0;
  objc_class *v1;
  objc_method *InstanceMethod;
  objc_method *v3;

  if ((_os_feature_enabled_impl("Podcasts", "UnsupportedTestAllowAllAXTextSizes") & 1) == 0)
  {
    v1 = (objc_class *)objc_opt_class(UIContentSizeCategoryPreference, v0);
    InstanceMethod = class_getInstanceMethod(v1, "preferredContentSizeCategory");
    if (InstanceMethod)
    {
      v3 = InstanceMethod;
      originalPreferredContentSizeCategory = (uint64_t (*)(void))method_getImplementation(InstanceMethod);
      method_setImplementation(v3, (IMP)UIContentSizeCategoryPreference_preferredContentSizeCategory);
      NSLog(CFSTR("Accessibility sizing disabled for dynamic type"));
    }
    else
    {
      NSLog(CFSTR("Could not disable accessibility sizing for dynamic type"));
    }
  }
}

NSString *UIContentSizeCategoryPreference_preferredContentSizeCategory()
{
  uint64_t v0;
  NSString *v1;
  UIContentSizeCategory v2;
  NSString *v3;

  v0 = originalPreferredContentSizeCategory();
  v1 = (NSString *)objc_claimAutoreleasedReturnValue(v0);
  if (UIContentSizeCategoryIsAccessibilityCategory(v1))
    v2 = UIContentSizeCategoryExtraExtraExtraLarge;
  else
    v2 = v1;
  v3 = v2;

  return v3;
}

id ASLogCategoryDefaultLogger()
{
  if (ASLogCategoryDefaultLogger_onceToken != -1)
    dispatch_once(&ASLogCategoryDefaultLogger_onceToken, &__block_literal_global);
  return (id)ASLogCategoryDefaultLogger_logger;
}

void sub_7654(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  switch(a1)
  {
    case 0:
    case 10:
    case 11:
    case 13:
    case 14:
      v4 = type metadata accessor for FlowDestination(0);
      v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
      v6 = a2;
      v7 = 1;
      goto LABEL_19;
    case 1:
      v11 = (unsigned int *)&enum case for FlowDestination.shows(_:);
      goto LABEL_18;
    case 2:
      v11 = (unsigned int *)&enum case for FlowDestination.channels(_:);
      goto LABEL_18;
    case 3:
      v11 = (unsigned int *)&enum case for FlowDestination.categories(_:);
      goto LABEL_18;
    case 4:
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      goto LABEL_16;
    case 5:
    case 6:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D0220);
      *(_QWORD *)a2 = 0;
      v8 = static ASKConstants.PodcastModernTopChartsUrl.getter();
      v10 = v9;
      URL.init(string:)(v8);
      swift_bridgeObjectRelease(v10);
      v11 = (unsigned int *)&enum case for FlowDestination.modernTopCharts(_:);
      goto LABEL_18;
    case 7:
      v11 = (unsigned int *)&enum case for FlowDestination.library(_:);
      goto LABEL_18;
    case 8:
      v11 = (unsigned int *)&enum case for FlowDestination.listen(_:);
      goto LABEL_18;
    case 9:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D0220);
      *(_QWORD *)a2 = 0;
      v15 = static ASKConstants.PodcastCatalogUrl.getter();
      v17 = v16;
      URL.init(string:)(v15);
      swift_bridgeObjectRelease(v17);
      v11 = (unsigned int *)&enum case for FlowDestination.topLevelPage(_:);
      goto LABEL_18;
    case 12:
      v18 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
      v11 = (unsigned int *)&enum case for FlowDestination.searchResults(_:);
      goto LABEL_18;
    case 15:
      v19 = 4;
      goto LABEL_15;
    case 16:
      v19 = 3;
LABEL_15:
      *(_QWORD *)a2 = v19;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_OWORD *)(a2 + 40) = 0u;
      *(_QWORD *)(a2 + 56) = 0;
LABEL_16:
      *(_BYTE *)(a2 + 64) = 9;
      v11 = (unsigned int *)&enum case for FlowDestination.episodeList(_:);
      goto LABEL_18;
    case 17:
      v11 = (unsigned int *)&enum case for FlowDestination.recentlyUpdated(_:);
LABEL_18:
      v20 = *v11;
      v21 = type metadata accessor for FlowDestination(0);
      v22 = *(_QWORD *)(v21 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104))(a2, v20, v21);
      v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v6 = a2;
      v7 = 0;
      v4 = v21;
LABEL_19:
      v5(v6, v7, 1, v4);
      break;
    default:
      *(_QWORD *)a2 = a1;
      v12 = enum case for FlowDestination.station(_:);
      v13 = type metadata accessor for FlowDestination(0);
      v14 = *(_QWORD *)(v13 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(a2, v12, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
      swift_retain(a1);
      break;
  }
}

void *static TabMenu.viewControllers(for:interfaceMode:using:asPartOf:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  void *v8;
  _BYTE v10[24];
  uint64_t v11;
  uint64_t v12;

  v6 = a2 & 1;
  v7 = TabMenu.Group.items(for:)(a2 & 1, a1);
  v10[16] = v6;
  v11 = a3;
  v12 = a4;
  v8 = sub_7914((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_7BC0, (uint64_t)v10, v7);
  swift_bridgeObjectRelease(v7);
  return v8;
}

void *sub_7914(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *result;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  result = &_swiftEmptyArrayStorage;
  v17 = (unint64_t)&_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(type metadata accessor for TabMenu.Item(0) - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain(a3);
    do
    {
      v12 = a1(&v16, v9);
      if (v3)
      {
        swift_bridgeObjectRelease(a3);
        return (void *)swift_bridgeObjectRelease(v17);
      }
      v13 = v16;
      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v15 = *(_QWORD *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
        v14 = *(_QWORD *)((char *)&dword_18 + (v17 & 0xFFFFFFFFFFFFFF8));
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v11);
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(a3);
    return (void *)v17;
  }
  return result;
}

void *sub_7A4C(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v4 = v3;
  result = &_swiftEmptyArrayStorage;
  v19 = (unint64_t)&_swiftEmptyArrayStorage;
  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    v9 = *(_QWORD *)(type metadata accessor for HeaderButtonItem(0) - 8);
    v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain(a3);
    v12 = a3 + v10 + v11 * (v7 - 1);
    do
    {
      v14 = a1(&v18, v12);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);
        return (void *)swift_bridgeObjectRelease(v19);
      }
      v15 = v18;
      if (v18)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v17 = *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8));
        v16 = *(_QWORD *)((char *)&dword_18 + (v19 & 0xFFFFFFFFFFFFFF8));
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
        specialized Array._endMutation()(v13);
      }
      v12 -= v11;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease(a3);
    return (void *)v19;
  }
  return result;
}

uint64_t TabMenu.Item.destination.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = TabMenu.Item.navigationTab.getter(a1);
  sub_7654(v3, a2);
  return sub_7C28(v3);
}

id sub_7BC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id result;

  v5 = *(unsigned __int8 *)(v2 + 16);
  v6 = *(_QWORD **)(v2 + 24);
  v7 = v6[3];
  v8 = v6[4];
  v9 = __swift_project_boxed_opaque_existential_1(v6, v7);
  result = sub_91D8(v5, (uint64_t)v9, a1, v7, v8);
  *a2 = result;
  return result;
}

uint64_t sub_7C28(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 0x11)
    return swift_release();
  return result;
}

void type metadata accessor for LargeTitleDisplayMode(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0028, (uint64_t)&unk_37A4F8);
}

void type metadata accessor for Alignment(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0030, (uint64_t)&unk_37A518);
}

void type metadata accessor for Axis(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0038, (uint64_t)&unk_37A538);
}

void type metadata accessor for Distribution(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0040, (uint64_t)&unk_37A558);
}

void type metadata accessor for CAGradientLayerType(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0048, (uint64_t)&unk_37A578);
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0050, (uint64_t)&unk_37A5A0);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0058, (uint64_t)&unk_37A618);
}

void type metadata accessor for RenderingMode(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0060, (uint64_t)&unk_37A648);
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MultiViewHostingPalette.Configuration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MultiViewHostingPalette.Configuration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0068, (uint64_t)&unk_37A6C0);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0070, (uint64_t)&unk_37A750);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0078, (uint64_t)&unk_37A7D0);
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0080, (uint64_t)&unk_37A7F8);
}

uint64_t getEnumTagSinglePayload for ShelvesViewProvider.HorizontalSectionInfo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ShelvesViewProvider.HorizontalSectionInfo(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0088, (uint64_t)&unk_37A878);
}

uint64_t initializeBufferWithCopyOfBuffer for IdiomSpecificFontUseCase(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t sub_7E40(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_7E60(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0090, (uint64_t)&unk_37A8F8);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0098, (uint64_t)&unk_37A928);
}

void type metadata accessor for UIUserInterfaceLayoutDirection(uint64_t a1)
{
  sub_97B8(a1, &qword_3D00A0, (uint64_t)&unk_37A950);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_97B8(a1, &qword_3D00A8, (uint64_t)&unk_37A9C8);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_97B8(a1, &qword_3D00B0, (uint64_t)&unk_37A9F0);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_97B8(a1, &qword_3D00B8, (uint64_t)&unk_37AA18);
}

NSNumber sub_7F04()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_7F0C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static Float._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_7F5C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_7FB0(float *a1@<X8>)
{
  *a1 = static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

void sub_7FD4(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_7FDC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_7FF0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_8004@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_8018(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_8048@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_8074@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_8098(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_80AC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_80C0(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_80D4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_80E8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_80FC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_8110(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_8124()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_8134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_814C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_8160(uint64_t a1, uint64_t a2)
{
  return sub_8EC4(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_8180(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_8188@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_819C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_81B0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_81C4(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_81F4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_8220@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_8244(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_8258(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_826C(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_8280@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_8294(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_82A8(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_82BC(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_82D0()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_82E0(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

Swift::Int sub_82F4()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_8338()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_8360(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

NSNumber sub_83A0()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_83A8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static CGFloat._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_83F8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_844C(double *a1@<X8>)
{
  *a1 = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8474()
{
  double *v0;

  return Double.hashValue.getter(*v0);
}

void sub_847C()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;

  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_84AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:_:)(a1, v2);
}

void sub_84BC(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

double sub_84C8@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_84D8(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_854C(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_85C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

_QWORD *sub_8608@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_8614(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_8628(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  v4 = sub_9E64(a1);
  swift_bridgeObjectRelease(a1);
  *a2 = v4;
}

BOOL sub_8664(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_8678(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4;

  v4 = sub_9E2C(a1);
  swift_bridgeObjectRelease(a1);
  *a2 = v4;
}

_DWORD *sub_86B4@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_86C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_89A0(&qword_3D0458, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_2EE8C0);
  v3 = sub_89A0(&qword_3D0460, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_2EE860);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

BOOL sub_8744(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_8758(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = sub_89A0(&qword_3D0440, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_2EEBBC);
  v3 = sub_89A0(&qword_3D0448, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_2EEB5C);
  v4 = sub_9E9C();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, v4);
}

_QWORD *sub_87F8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_8808(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_DWORD *sub_8814@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_8824@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_8830(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_89A0(&qword_3D0140, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2EDDB4);
  v3 = sub_89A0(&qword_3D0148, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2EDD54);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Float);
}

uint64_t sub_88C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_89A0((unint64_t *)&qword_3D0150, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
  v3 = sub_89A0(&qword_3D0158, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDBC0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8948()
{
  return sub_89A0(&qword_3D00C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDB84);
}

uint64_t sub_8974()
{
  return sub_89A0(&qword_3D00C8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDB58);
}

uint64_t sub_89A0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_89E0()
{
  return sub_89A0((unint64_t *)&qword_3D00D0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDBF4);
}

uint64_t sub_8A0C()
{
  return sub_89A0(&qword_3D00D8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2EDD18);
}

uint64_t sub_8A38()
{
  return sub_89A0(&qword_3D00E0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2EDCEC);
}

uint64_t sub_8A64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_89A0(&qword_3D0130, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_2EE0BC);
  v3 = sub_89A0(&qword_3D0138, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_2EE05C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8AE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_89A0(&qword_3D0468, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_2EE6A4);
  v3 = sub_89A0((unint64_t *)&unk_3D0470, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_2EE644);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8B6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_89A0(&qword_3D0410, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2EF6A0);
  v3 = sub_89A0(&qword_3D0418, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2EF344);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8BF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_89A0(&qword_3D0400, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_2EF4B8);
  v3 = sub_89A0(&qword_3D0408, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_2EF458);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8C74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_89A0((unint64_t *)&qword_3D03F0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_2EF65C);
  v3 = sub_89A0(&qword_3D03F8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_2EF5B0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8CF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_89A0(&qword_3D0420, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_2EF254);
  v3 = sub_89A0(&qword_3D0428, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_2EF1FC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8D7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_8DC0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_8DE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_89A0(&qword_3D0430, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_2EF10C);
  v3 = sub_89A0(&qword_3D0438, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_2EF0AC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8E6C()
{
  float *v0;

  return Float.hashValue.getter(*v0);
}

void sub_8E74()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;

  if ((*v0 & 0x7FFFFFFF) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_8EA4(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFF) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

uint64_t sub_8EB8(uint64_t a1, uint64_t a2)
{
  return sub_8EC4(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_8EC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_8F00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_8F40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

BOOL sub_8FB0(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_8FC4()
{
  return sub_89A0(&qword_3D00E8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2EDD88);
}

uint64_t sub_8FF0()
{
  return sub_89A0(&qword_3D00F0, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_2EDE78);
}

uint64_t sub_901C()
{
  return sub_89A0(&qword_3D00F8, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_2EDE44);
}

uint64_t sub_9048()
{
  return sub_89A0(&qword_3D0100, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_2EDEA4);
}

uint64_t sub_9074()
{
  return sub_89A0(&qword_3D0108, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_2EDEE0);
}

uint64_t sub_90A0()
{
  return sub_89A0(&qword_3D0110, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_2EE020);
}

uint64_t sub_90CC()
{
  return sub_89A0(&qword_3D0118, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_2EDFF4);
}

uint64_t sub_90F8()
{
  return sub_89A0(&qword_3D0120, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_2EE090);
}

uint64_t sub_9124()
{
  return sub_89A0(&qword_3D0128, (uint64_t (*)(uint64_t))type metadata accessor for Axis, (uint64_t)&unk_2EE1F8);
}

uint64_t sub_9150(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

id sub_91D8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  id v34;
  id result;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t ObjectType;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[4];

  LODWORD(v54) = a1;
  v9 = type metadata accessor for AutomationSemantics(0);
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  __chkstk_darwin(v9);
  v51 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FlowDestination(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v16);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a2, a4);
  v23 = TabMenu.Item.navigationTab.getter(v22);
  sub_7654(v23, (uint64_t)v13);
  sub_7C28(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_95C8((uint64_t)v13);
    v24 = 0;
LABEL_15:
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, a4);
    return v24;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  v24 = (void *)(*(uint64_t (**)(char *, _QWORD, unint64_t, uint64_t, uint64_t))(a5 + 24))(v18, 0, 0xE000000000000000, a4, a5);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    goto LABEL_15;
  }
  v49 = v18;
  v50 = a4;
  v25 = v54 & 1;
  TabMenu.Item.title.getter();
  v27 = v26;
  v28 = (void *)TabMenu.Item.tabImage(for:)(v25);
  v29 = TabMenu.Item.navigationTab.getter(v28);
  v30 = NavigationTab.intValue.getter();
  v54 = a3;
  v31 = v30;
  sub_7C28(v29);
  v32 = objc_allocWithZone((Class)UITabBarItem);
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v32, "initWithTitle:image:tag:", v33, v28, v31, swift_bridgeObjectRelease(v27).n128_f64[0]);

  objc_msgSend(v24, "setTabBarItem:", v34);
  result = objc_msgSend(v24, "tabBarItem");
  if (result)
  {
    v36 = result;
    v37 = TabMenu.Item.navigationTab.getter(result);
    v38 = NavigationTab.stringValue.getter();
    v40 = v39;
    sub_7C28(v37);
    v55[3] = &type metadata for String;
    v55[0] = v38;
    v55[1] = v40;
    v41 = v51;
    static AutomationSemantics.tabBar(tabName:)(v55);
    __swift_destroy_boxed_opaque_existential_0(v55);
    UITabBarItem.setAutomationSemantics(_:)(v41);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v53);
    ObjectType = swift_getObjectType();
    v43 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NavigationTabIdentifiable);
    if (v43)
      v44 = v43;
    else
      v44 = 0;
    if (v43)
      v45 = v24;
    else
      v45 = 0;
    if (v45)
    {
      v46 = swift_getObjectType();
      v47 = v24;
      v48 = TabMenu.Item.navigationTab.getter(v47);
      dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.setter(v48, v46, v44);

    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v49, v14);
    a4 = v50;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_95C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0230, (uint64_t)&unk_37AA38);
}

void type metadata accessor for AMSParserURLType(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0238, (uint64_t)&unk_37AA60);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0240, (uint64_t)&unk_37AA80);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0248, (uint64_t)&unk_37AAA8);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0250, (uint64_t)&unk_37AAD0);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0258, (uint64_t)&unk_37AAF8);
}

void type metadata accessor for BuildType(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0260, (uint64_t)&unk_37AB20);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0268, (uint64_t)&unk_37AB48);
}

void type metadata accessor for State(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0270, (uint64_t)&unk_37AB78);
}

void type metadata accessor for CACornerMask(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0278, (uint64_t)&unk_37AB98);
}

void type metadata accessor for UIRectEdge(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0280, (uint64_t)&unk_37ABC0);
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0288, (uint64_t)&unk_37ABE8);
}

void type metadata accessor for UIOffset(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0290, (uint64_t)&unk_37AC60);
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
  sub_97B8(a1, &qword_3D0298, (uint64_t)&unk_37AC88);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_97B8(a1, &qword_3D02A0, (uint64_t)&unk_37ACA8);
}

void type metadata accessor for SymbolicTraits(uint64_t a1)
{
  sub_97B8(a1, &qword_3D02A8, (uint64_t)&unk_37ACD0);
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_97B8(a1, &qword_3D02B0, (uint64_t)&unk_37ACF8);
}

void type metadata accessor for MTPodcastShowType(uint64_t a1)
{
  sub_97B8(a1, &qword_3D02B8, (uint64_t)&unk_37AD20);
}

void type metadata accessor for MTEpisodeEntitlementState(uint64_t a1)
{
  sub_97B8(a1, &qword_3D02C0, (uint64_t)&unk_37AD40);
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
  sub_97B8(a1, &qword_3D02C8, (uint64_t)&unk_37AD60);
}

void sub_97B8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_97FC()
{
  return sub_89A0(&qword_3D02D0, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_2EE608);
}

uint64_t sub_9828()
{
  return sub_89A0(&qword_3D02D8, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_2EE5DC);
}

uint64_t sub_9854()
{
  return sub_89A0(&qword_3D02E0, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_2EE678);
}

uint64_t sub_9880()
{
  return sub_89A0(&qword_3D02E8, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_2EE824);
}

uint64_t sub_98AC()
{
  return sub_89A0(&qword_3D02F0, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_2EE7F8);
}

uint64_t sub_98D8()
{
  return sub_89A0(&qword_3D02F8, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_2EE894);
}

uint64_t sub_9904()
{
  return sub_89A0(&qword_3D0300, (uint64_t (*)(uint64_t))type metadata accessor for SymbolicTraits, (uint64_t)&unk_2EE984);
}

uint64_t sub_9930()
{
  return sub_89A0(&qword_3D0308, (uint64_t (*)(uint64_t))type metadata accessor for SymbolicTraits, (uint64_t)&unk_2EE950);
}

uint64_t sub_995C()
{
  return sub_89A0(&qword_3D0310, (uint64_t (*)(uint64_t))type metadata accessor for SymbolicTraits, (uint64_t)&unk_2EE9B0);
}

uint64_t sub_9988()
{
  return sub_89A0(&qword_3D0318, (uint64_t (*)(uint64_t))type metadata accessor for SymbolicTraits, (uint64_t)&unk_2EE9EC);
}

uint64_t sub_99B4()
{
  return sub_89A0(&qword_3D0320, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_2EEB20);
}

uint64_t sub_99E0()
{
  return sub_89A0(&qword_3D0328, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_2EEAF4);
}

uint64_t sub_9A0C()
{
  return sub_89A0(&qword_3D0330, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_2EEB90);
}

uint64_t sub_9A38()
{
  return sub_89A0(&qword_3D0338, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_2EECE8);
}

uint64_t sub_9A64()
{
  return sub_89A0(&qword_3D0340, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_2EECB4);
}

uint64_t sub_9A90()
{
  return sub_89A0(&qword_3D0348, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_2EED14);
}

uint64_t sub_9ABC()
{
  return sub_89A0(&qword_3D0350, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_2EED50);
}

uint64_t sub_9AE8()
{
  return sub_89A0(&qword_3D0358, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_2EEE8C);
}

uint64_t sub_9B14()
{
  return sub_89A0(&qword_3D0360, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_2EEE58);
}

uint64_t sub_9B40()
{
  return sub_89A0(&qword_3D0368, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_2EEEB8);
}

uint64_t sub_9B6C()
{
  return sub_89A0(&qword_3D0370, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_2EEEF4);
}

uint64_t sub_9B98()
{
  return sub_89A0(&qword_3D0378, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_2EF070);
}

uint64_t sub_9BC4()
{
  return sub_89A0(&qword_3D0380, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_2EF044);
}

uint64_t sub_9BF0()
{
  return sub_89A0(&qword_3D0388, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_2EF0E0);
}

uint64_t sub_9C1C()
{
  return sub_89A0(&qword_3D0390, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_2EF1C4);
}

uint64_t sub_9C48()
{
  return sub_89A0(&qword_3D0398, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_2EF19C);
}

uint64_t sub_9C74()
{
  return sub_89A0(&qword_3D03A0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_2EF22C);
}

uint64_t sub_9CA0()
{
  return sub_89A0(&qword_3D03A8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2EF308);
}

uint64_t sub_9CCC()
{
  return sub_89A0(&qword_3D03B0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2EF2DC);
}

uint64_t sub_9CF8()
{
  return sub_89A0(&qword_3D03B8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_2EF41C);
}

uint64_t sub_9D24()
{
  return sub_89A0(&qword_3D03C0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_2EF3F0);
}

uint64_t sub_9D50()
{
  return sub_89A0(&qword_3D03C8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_2EF48C);
}

uint64_t sub_9D7C()
{
  return sub_89A0(&qword_3D03D0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_2EF574);
}

uint64_t sub_9DA8()
{
  return sub_89A0(&qword_3D03D8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_2EF548);
}

uint64_t sub_9DD4()
{
  return sub_89A0(&qword_3D03E0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_2EF5E4);
}

uint64_t sub_9E00()
{
  return sub_89A0(&qword_3D03E8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2EF378);
}

uint64_t sub_9E2C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_9E64(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_9E9C()
{
  unint64_t result;

  result = qword_3D0450;
  if (!qword_3D0450)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_3D0450);
  }
  return result;
}

BOOL static EpisodeInfoViewCapabilities.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void MacButton.Fill.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int EpisodeInfoViewCapabilities.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_9FDC(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

unint64_t sub_A020()
{
  unint64_t result;

  result = qword_3D05A0;
  if (!qword_3D05A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LibraryContentType, &type metadata for LibraryContentType);
    atomic_store(result, (unint64_t *)&qword_3D05A0);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryContentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_A14C + 4 * byte_2EF6F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_A180 + 4 * byte_2EF6F0[v4]))();
}

uint64_t sub_A180(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_A188(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xA190);
  return result;
}

uint64_t sub_A19C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xA1A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_A1A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_A1B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_A1BC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_A1C8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryContentType()
{
  return &type metadata for LibraryContentType;
}

uint64_t dispatch thunk of GridSpec.basePageMargin(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_A1EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    v8 = a2[1];
    v9 = a2[2];
    v10 = *((_BYTE *)a2 + 24);
    swift_retain(v5);
    sub_A304(v8, v9, v10);
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = *(int *)(a3 + 24);
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D05B0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      v17 = *v13;
      *v12 = *v13;
      swift_retain(v17);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v18 = *(int *)(a3 + 28);
    v19 = a1 + v18;
    v20 = (uint64_t *)((char *)a2 + v18);
    v5 = *v20;
    LOBYTE(v20) = *((_BYTE *)v20 + 8);
    *(_QWORD *)v19 = v5;
    *(_BYTE *)(v19 + 8) = (_BYTE)v20;
  }
  swift_retain(v5);
  return a1;
}

uint64_t sub_A304(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_A310(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)a1);
  sub_A3A4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D05B0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 28)));
}

uint64_t sub_A3A4(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_A3B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  v6 = *a2;
  v7 = a2[1];
  *(_QWORD *)a1 = *a2;
  v8 = a2[2];
  v9 = *((_BYTE *)a2 + 24);
  swift_retain(v6);
  sub_A304(v7, v8, v9);
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D05B0);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    v16 = *v12;
    *v11 = *v12;
    swift_retain(v16);
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  v17 = *(int *)(a3 + 28);
  v18 = a1 + v17;
  v19 = (uint64_t *)((char *)a2 + v17);
  v20 = *v19;
  LOBYTE(v19) = *((_BYTE *)v19 + 8);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = (_BYTE)v19;
  swift_retain(v20);
  return a1;
}

uint64_t *sub_A4A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[1];
  v9 = a2[2];
  v10 = *((_BYTE *)a2 + 24);
  sub_A304(v8, v9, v10);
  v11 = a1[1];
  v12 = a1[2];
  v13 = *((_BYTE *)a1 + 24);
  a1[1] = v8;
  a1[2] = v9;
  *((_BYTE *)a1 + 24) = v10;
  sub_A3A4(v11, v12, v13);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 24);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_D1D4((uint64_t)a1 + v14, &qword_3D05B0);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D05B0);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      v20 = *v16;
      *v15 = *v16;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
  }
  v21 = *(int *)(a3 + 28);
  v22 = (uint64_t *)((char *)a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  v24 = *v23;
  LOBYTE(v23) = *((_BYTE *)v23 + 8);
  v25 = *v22;
  *v22 = v24;
  *((_BYTE *)v22 + 8) = (_BYTE)v23;
  swift_retain(v24);
  swift_release(v25);
  return a1;
}

uint64_t sub_A5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D05B0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  return a1;
}

uint64_t *sub_A6C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = *((_BYTE *)a2 + 24);
  v8 = a1[1];
  v9 = a1[2];
  v10 = *((_BYTE *)a1 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = v7;
  sub_A3A4(v8, v9, v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_D1D4((uint64_t)a1 + v11, &qword_3D05B0);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D05B0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  v16 = *(int *)(a3 + 28);
  v17 = (uint64_t *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = *v18;
  LOBYTE(v18) = *((_BYTE *)v18 + 8);
  v20 = *v17;
  *v17 = v19;
  *((_BYTE *)v17 + 8) = (_BYTE)v18;
  swift_release(v20);
  return a1;
}

uint64_t sub_A7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A7E4);
}

uint64_t sub_A7E4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D05B8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_A864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A870);
}

char *sub_A870(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D05B8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for EpisodeHeroTextArea(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D0618, (uint64_t)&nominal type descriptor for EpisodeHeroTextArea);
}

void sub_A8FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_2EF818;
  sub_A984(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_2EF830;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_A984(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D0628)
  {
    v2 = type metadata accessor for DynamicTypeSize(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D0628);
  }
}

uint64_t *sub_A9D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v4 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for PUITextStyle(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(v6 + 20)), (uint64_t *)((char *)a2 + *(int *)(v6 + 20)), v7);
    v8((uint64_t *)((char *)a1 + *(int *)(v6 + 24)), (uint64_t *)((char *)a2 + *(int *)(v6 + 24)), v7);
  }
  return a1;
}

uint64_t type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(uint64_t a1)
{
  return sub_AE00(a1, qword_3D0748, (uint64_t)&nominal type descriptor for EpisodeHeroTextArea.Metrics.TextStyles);
}

uint64_t sub_AAA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v5)(uint64_t, uint64_t);

  v2 = type metadata accessor for PUITextStyle(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v5(a1, v2);
  v3 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  v5(a1 + *(int *)(v3 + 20), v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + *(int *)(v3 + 24), v2);
}

uint64_t sub_AB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = type metadata accessor for PUITextStyle(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  v6 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  v5(a1 + *(int *)(v6 + 20), a2 + *(int *)(v6 + 20), v4);
  v5(a1 + *(int *)(v6 + 24), a2 + *(int *)(v6 + 24), v4);
  return a1;
}

uint64_t sub_ABB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = type metadata accessor for PUITextStyle(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24);
  v5(a1, a2, v4);
  v6 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  v5(a1 + *(int *)(v6 + 20), a2 + *(int *)(v6 + 20), v4);
  v5(a1 + *(int *)(v6 + 24), a2 + *(int *)(v6 + 24), v4);
  return a1;
}

uint64_t sub_AC40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = type metadata accessor for PUITextStyle(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  v6 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  v5(a1 + *(int *)(v6 + 20), a2 + *(int *)(v6 + 20), v4);
  v5(a1 + *(int *)(v6 + 24), a2 + *(int *)(v6 + 24), v4);
  return a1;
}

uint64_t sub_ACCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = type metadata accessor for PUITextStyle(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40);
  v5(a1, a2, v4);
  v6 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  v5(a1 + *(int *)(v6 + 20), a2 + *(int *)(v6 + 20), v4);
  v5(a1 + *(int *)(v6 + 24), a2 + *(int *)(v6 + 24), v4);
  return a1;
}

uint64_t sub_AD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_AD64);
}

uint64_t sub_AD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_ADA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_ADAC);
}

uint64_t sub_ADAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for EpisodeHeroTextArea.Metrics(uint64_t a1)
{
  return sub_AE00(a1, qword_3D06B8, (uint64_t)&nominal type descriptor for EpisodeHeroTextArea.Metrics);
}

uint64_t sub_AE00(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_AE34(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_AE9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for PUITextStyle(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 24)), (uint64_t *)((char *)a2 + *(int *)(a3 + 24)), v7);
  }
  return a1;
}

uint64_t sub_AF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = type metadata accessor for PUITextStyle(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + *(int *)(a2 + 20), v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 24), v4);
}

uint64_t sub_AFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for PUITextStyle(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_B04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for PUITextStyle(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_B0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for PUITextStyle(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_B154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for PUITextStyle(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_B1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B1E4);
}

uint64_t sub_B1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PUITextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_B220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B22C);
}

uint64_t sub_B22C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PUITextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_B26C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for PUITextStyle(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_B2D8()
{
  qword_3D05A8 = 0x4071800000000000;
}

Swift::Int sub_B2EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for PUITextStyle(0);
  v1 = sub_89A0(&qword_3D0838, (uint64_t (*)(uint64_t))&type metadata accessor for PUITextStyle, (uint64_t)&protocol conformance descriptor for PUITextStyle);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_B3A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for PUITextStyle(0);
  v3 = sub_89A0(&qword_3D0838, (uint64_t (*)(uint64_t))&type metadata accessor for PUITextStyle, (uint64_t)&protocol conformance descriptor for PUITextStyle);
  dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
  dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_B444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for PUITextStyle(0);
  v2 = sub_89A0(&qword_3D0838, (uint64_t (*)(uint64_t))&type metadata accessor for PUITextStyle, (uint64_t)&protocol conformance descriptor for PUITextStyle);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_B4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((((uint64_t (*)(void))static PUITextStyle.== infix(_:_:))() & 1) != 0
    && (static PUITextStyle.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) != 0)
  {
    return static PUITextStyle.== infix(_:_:)(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_B560()
{
  return sub_89A0(&qword_3D0788, type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles, (uint64_t)&unk_2EF85C);
}

void sub_B58C()
{
  qword_3FA860 = 0x3FF0000000000000;
}

void sub_B59C()
{
  qword_3FA868 = 0x4000000000000000;
}

BOOL sub_B5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL8 result;

  result = 0;
  if ((static PUITextStyle.== infix(_:_:)(a1, a2) & 1) != 0)
  {
    v4 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
    if ((static PUITextStyle.== infix(_:_:)(a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0
      && (static PUITextStyle.== infix(_:_:)(a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_B61C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_329108, 1);
}

uint64_t sub_B62C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0798);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07A0);
  v6 = __chkstk_darwin(v29);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v29 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07A8);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07B0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v29 - v19;
  *(_QWORD *)v13 = static HorizontalAlignment.center.getter(v18);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07B8);
  sub_B8EC((uint64_t)a1, (uint64_t *)&v13[*(int *)(v21 + 44)]);
  sub_D184((uint64_t)v13, (uint64_t)v17, &qword_3D07A8);
  sub_D1D4((uint64_t)v13, &qword_3D07A8);
  v22 = sub_D210((uint64_t)v17, (uint64_t)v20, &qword_3D07B0);
  *(_QWORD *)v5 = static HorizontalAlignment.leading.getter(v22);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07C0);
  sub_C5E0(a1, (uint64_t)&v5[*(int *)(v23 + 44)]);
  v25 = static Color.white.getter(v24);
  sub_D184((uint64_t)v5, (uint64_t)v8, &qword_3D0798);
  *(_QWORD *)&v8[*(int *)(v29 + 36)] = v25;
  sub_D1D4((uint64_t)v5, &qword_3D0798);
  sub_D210((uint64_t)v8, (uint64_t)v10, &qword_3D07A0);
  sub_D184((uint64_t)v20, (uint64_t)v17, &qword_3D07B0);
  sub_D184((uint64_t)v10, (uint64_t)v8, &qword_3D07A0);
  v26 = v30;
  sub_D184((uint64_t)v17, v30, &qword_3D07B0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07C8);
  sub_D184((uint64_t)v8, v26 + *(int *)(v27 + 48), &qword_3D07A0);
  sub_D1D4((uint64_t)v10, &qword_3D07A0);
  sub_D1D4((uint64_t)v20, &qword_3D07B0);
  sub_D1D4((uint64_t)v8, &qword_3D07A0);
  return sub_D1D4((uint64_t)v17, &qword_3D07B0);
}

void sub_B8EC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  __n128 v41;
  char v42;
  uint64_t KeyPath;
  id v44;
  NSString v45;
  id v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t countAndFlagsBits;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;

  v62 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D0);
  v4 = __chkstk_darwin(v3);
  v63 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v61 = (uint64_t *)((char *)&v53 - v6);
  v7 = type metadata accessor for PUITextStyle(0);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  __chkstk_darwin(v7);
  v56 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  __chkstk_darwin(v54);
  v55 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DynamicTypeSize(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v53 - v15;
  v17 = type metadata accessor for EpisodeHeroTextArea.Metrics(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20._countAndFlagsBits = 77;
  v20._object = (void *)0xE100000000000000;
  v21 = String.init(repeating:count:)(v20, 200);
  countAndFlagsBits = v21._countAndFlagsBits;
  v22 = *(_QWORD *)(a1 + 8);
  v23 = *(_QWORD *)(a1 + 16);
  v24 = *(_BYTE *)(a1 + 24);
  swift_bridgeObjectRetain(v21._object);
  sub_A304(v22, v23, v24);
  v25 = sub_14874(v22, v23, v24);
  v26 = v23;
  v27 = (uint64_t)v55;
  sub_A3A4(v22, v26, v24);
  type metadata accessor for EpisodeHeroTextArea(0);
  v60 = a1;
  sub_14A44(v16);
  sub_CE64(v27, v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, enum case for DynamicTypeSize.xSmall(_:), v10);
  LOBYTE(v22) = static DynamicTypeSize.== infix(_:_:)(v16, v14);
  v28 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v29 = v28(v14, v10);
  if ((v22 & 1) != 0)
  {
    v30 = v27 + *(int *)(v54 + 20);
    v31 = v56;
    PUITextStyle.standardLeading.getter(v29);
    v28(v16, v10);
    v33 = v57;
    v32 = v58;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 40))(v30, v31, v58);
  }
  else
  {
    v28(v16, v10);
    v33 = v57;
    v32 = v58;
    v31 = v56;
  }
  sub_D078(v27, (uint64_t)v19);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v31, v19, v32);
  sub_D0BC((uint64_t)v19);
  v34 = countAndFlagsBits;
  v35 = Text.puiFont(_:)(v31, countAndFlagsBits, v21._object, 0, &_swiftEmptyArrayStorage);
  v57 = v36;
  v58 = v35;
  v38 = v37;
  v40 = v39;
  v41 = swift_bridgeObjectRelease(v21._object);
  v42 = v40 & 1;
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v31, v32, v41);
  KeyPath = swift_getKeyPath(&unk_2EF940);
  v44 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(v21._object);
  v45 = String._bridgeToObjectiveC()();
  v46 = objc_msgSend(v44, "initWithString:", v45, swift_bridgeObjectRelease(v21._object).n128_f64[0]);

  v47 = v61;
  sub_BD58(v34, (uint64_t)v21._object, v46, v61);
  swift_bridgeObjectRelease(v21._object);

  v48 = v63;
  sub_D184((uint64_t)v47, v63, &qword_3D07D0);
  v49 = v62;
  v50 = v57;
  v51 = v58;
  *v62 = v58;
  v49[1] = v38;
  *((_BYTE *)v49 + 16) = v42;
  v49[3] = v50;
  v49[4] = KeyPath;
  v49[5] = 1;
  *((_BYTE *)v49 + 48) = 0;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0830);
  sub_D184(v48, (uint64_t)v49 + *(int *)(v52 + 48), &qword_3D07D0);
  sub_D130(v51, v38, v42);
  swift_bridgeObjectRetain(v50);
  swift_retain(KeyPath);
  sub_D1D4((uint64_t)v47, &qword_3D07D0);
  sub_D1D4(v48, &qword_3D07D0);
  sub_D170(v51, v38, v42);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v50);
}

void sub_BD58(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  double v35;
  char v36;
  uint64_t (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char v85;
  uint64_t KeyPath;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  _QWORD v134[4];

  v125 = a3;
  v126 = a2;
  v124 = a1;
  v129 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0808);
  __chkstk_darwin(v5);
  v120 = (uint64_t)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for BlendMode(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D8);
  __chkstk_darwin(v114);
  v119 = (uint64_t *)((char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v9);
  v113 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0810);
  v127 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v118 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0818);
  v13 = __chkstk_darwin(v12);
  v128 = (uint64_t)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v133 = (char *)&v112 - v15;
  v16 = type metadata accessor for PUITextStyle(0);
  v122 = *(_QWORD *)(v16 - 8);
  v123 = v16;
  __chkstk_darwin(v16);
  v121 = (char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicTypeSize(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v24 = (char *)&v112 - v23;
  v25 = type metadata accessor for EpisodeHeroTextArea.Metrics(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  v28 = __chkstk_darwin(v130);
  v30 = (char *)&v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v132 = (uint64_t)&v112 - v31;
  v32 = *(_QWORD *)(v4 + 8);
  v33 = *(_QWORD *)(v4 + 16);
  v34 = *(_BYTE *)(v4 + 24);
  sub_A304(v32, v33, v34);
  v35 = sub_14874(v32, v33, v34);
  sub_A3A4(v32, v33, v34);
  type metadata accessor for EpisodeHeroTextArea(0);
  sub_14A44(v24);
  sub_CE64((uint64_t)v30, v35);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v22, enum case for DynamicTypeSize.xSmall(_:), v18);
  v36 = static DynamicTypeSize.== infix(_:_:)(v24, v22);
  v37 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
  v38 = v37(v22, v18);
  if ((v36 & 1) != 0)
  {
    v39 = v130;
    v40 = &v30[*(int *)(v130 + 20)];
    v41 = v121;
    PUITextStyle.standardLeading.getter(v38);
    v37(v24, v18);
    (*(void (**)(char *, char *, uint64_t))(v122 + 40))(v40, v41, v123);
    v42 = v39;
  }
  else
  {
    v37(v24, v18);
    v42 = v130;
  }
  sub_D078((uint64_t)v30, (uint64_t)v27);
  v43 = v132;
  sub_D078((uint64_t)v27, v132);
  v44 = (uint64_t)v133;
  v45 = v126;
  if (v126)
  {
    swift_bridgeObjectRetain(v126);
    v46 = v124;
    if (String.count.getter(v124, v45) >= 1)
    {
      v134[0] = v46;
      v134[1] = v45;
      v47 = sub_D254();
      v48 = Text.init<A>(_:)(v134, &type metadata for String, v47);
      v50 = v49;
      v52 = v51;
      v54 = v53 & 1;
      v55 = Text.puiFont(_:)(v43 + *(int *)(v42 + 20), v48, v49, v54, v51);
      v57 = v56;
      v59 = v58;
      v61 = v60 & 1;
      sub_D170(v48, v50, v54);
      v62 = swift_bridgeObjectRelease(v52);
      v63 = static Color.white.getter(v62);
      v134[0] = v63;
      v64 = Text.foregroundStyle<A>(_:)(v134, v55, v57, v61, v59, &type metadata for Color, &protocol witness table for Color);
      v66 = v65;
      v68 = v67;
      v70 = v69 & 1;
      v71 = v57;
      v44 = (uint64_t)v133;
      sub_D170(v55, v71, v61);
      swift_release(v63);
      v72 = v59;
      v43 = v132;
      swift_bridgeObjectRelease(v72);
      goto LABEL_9;
    }
    swift_bridgeObjectRelease(v45);
  }
  v64 = 0;
  v66 = 0;
  v70 = 0;
  v68 = 0;
LABEL_9:
  v73 = v131;
  if (!v125)
  {
LABEL_13:
    v108 = 1;
    goto LABEL_14;
  }
  v74 = v125;
  if ((uint64_t)objc_msgSend(v74, "length") < 1)
  {

    goto LABEL_13;
  }
  v125 = v74;
  v75 = v113;
  AttributedString.init(_:)();
  v76 = Text.init(_:)(v75);
  v78 = v77;
  v80 = v79;
  v82 = v81 & 1;
  v130 = Text.puiFont(_:)(v43 + *(int *)(v130 + 24), v76, v77, v82, v79);
  v121 = v83;
  v122 = v84;
  LODWORD(v126) = v85 & 1;
  sub_D170(v76, v78, v82);
  swift_bridgeObjectRelease(v80);
  KeyPath = swift_getKeyPath(&unk_2EF940);
  v113 = (char *)swift_getKeyPath(&unk_2EF970);
  v88 = static Color.white.getter(v87);
  v89 = Color.opacity(_:)(0.8);
  swift_release(v88);
  v90 = v116;
  v91 = v115;
  v92 = v117;
  (*(void (**)(char *, _QWORD, uint64_t))(v116 + 104))(v115, enum case for BlendMode.plusLighter(_:), v117);
  v93 = v119;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))((char *)v119 + *(int *)(v114 + 36), v91, v92);
  *v93 = v89;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v92);
  v94 = v120;
  sub_D184((uint64_t)v93, v120, &qword_3D07D8);
  v95 = v118;
  sub_D184(v94, (uint64_t)&v118[*(int *)(v131 + 36)], &qword_3D0808);
  v96 = v130;
  v97 = (uint64_t)v121;
  v98 = v122;
  *(_QWORD *)v95 = v130;
  *((_QWORD *)v95 + 1) = v97;
  v99 = v126;
  v95[16] = v126;
  *((_QWORD *)v95 + 3) = v98;
  *((_QWORD *)v95 + 4) = KeyPath;
  *((_QWORD *)v95 + 5) = 7;
  v95[48] = 0;
  v100 = (uint64_t)v113;
  *((_QWORD *)v95 + 7) = v113;
  v95[64] = 0;
  *((_QWORD *)v95 + 9) = 0xBFF0000000000000;
  v123 = v70;
  v101 = v68;
  v102 = v97;
  sub_D130(v96, v97, v99);
  v124 = v66;
  v103 = v64;
  v104 = v98;
  swift_bridgeObjectRetain(v98);
  swift_retain(KeyPath);
  sub_D1C8(v100, 0);
  sub_D1D4(v94, &qword_3D0808);

  sub_D1D4((uint64_t)v93, &qword_3D07D8);
  v73 = v131;
  v105 = v102;
  v68 = v101;
  v70 = v123;
  sub_D170(v130, v105, v126);
  swift_release(v100);
  v44 = (uint64_t)v133;
  swift_release(KeyPath);
  v106 = v104;
  v64 = v103;
  v66 = v124;
  swift_bridgeObjectRelease(v106);
  v107 = (uint64_t)v95;
  v43 = v132;
  sub_D210(v107, v44, &qword_3D0810);
  v108 = 0;
LABEL_14:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56))(v44, v108, 1, v73);
  v109 = v128;
  sub_D184(v44, v128, &qword_3D0818);
  v110 = v129;
  *v129 = v64;
  v110[1] = v66;
  v110[2] = v70;
  v110[3] = v68;
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0820);
  sub_D184(v109, (uint64_t)v110 + *(int *)(v111 + 48), &qword_3D0818);
  sub_D100(v64, v66, v70, v68);
  sub_D1D4(v44, &qword_3D0818);
  sub_D0BC(v43);
  sub_D1D4(v109, &qword_3D0818);
  sub_D140(v64, v66, v70, v68);
}

uint64_t sub_C5E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;

  v114 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D0);
  v4 = __chkstk_darwin(v3);
  v115 = (uint64_t)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v112 = (uint64_t *)((char *)&v88 - v7);
  __chkstk_darwin(v6);
  v113 = (uint64_t)&v88 - v8;
  v94 = type metadata accessor for BlendMode(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v110 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D8);
  __chkstk_darwin(v109);
  v111 = (uint64_t *)((char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v92 = type metadata accessor for PUITextStyle(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v116 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  __chkstk_darwin(v89);
  v96 = (uint64_t)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for DynamicTypeSize(0);
  v95 = *(_QWORD *)(v97 - 8);
  v13 = __chkstk_darwin(v97);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v88 - v16;
  v18 = type metadata accessor for EpisodeHeroTextArea.Metrics(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for EpisodeCaption(0);
  v101 = *(_QWORD *)(v21 - 8);
  v102 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07E0);
  v90 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v100 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07E8);
  __chkstk_darwin(v98);
  v106 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07F0);
  v26 = __chkstk_darwin(v104);
  v108 = (uint64_t)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v105 = (char *)&v88 - v29;
  __chkstk_darwin(v28);
  v107 = (uint64_t)&v88 - v30;
  v31 = *a1;
  v32 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for EpisodeHeroTextArea(0) + 28));
  v33 = *v32;
  v34 = *((_BYTE *)v32 + 8);
  swift_retain(v31);
  swift_retain(v33);
  v36 = sub_14A78(v35, v34);
  swift_release(v33);
  v99 = v23;
  EpisodeCaption.init(episode:graph:)(v31, v36);
  v37 = a1[1];
  v38 = a1[2];
  LOBYTE(v36) = *((_BYTE *)a1 + 24);
  sub_A304(v37, v38, v36);
  v39 = sub_14874(v37, v38, v36);
  sub_A3A4(v37, v38, v36);
  sub_14A44(v17);
  v40 = v96;
  sub_CE64(v96, v39);
  v41 = v95;
  v42 = v97;
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v15, enum case for DynamicTypeSize.xSmall(_:), v97);
  LOBYTE(v37) = static DynamicTypeSize.== infix(_:_:)(v17, v15);
  v43 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
  v44 = v15;
  v45 = v42;
  v46 = v43(v44, v42);
  if ((v37 & 1) != 0)
  {
    v47 = v40 + *(int *)(v89 + 20);
    v48 = v116;
    PUITextStyle.standardLeading.getter(v46);
    v43(v17, v45);
    v49 = v91;
    v50 = v48;
    v51 = v92;
    (*(void (**)(uint64_t, char *, uint64_t))(v91 + 40))(v47, v50, v92);
    v52 = v94;
    v53 = v93;
    v54 = v49;
  }
  else
  {
    v43(v17, v42);
    v52 = v94;
    v53 = v93;
    v51 = v92;
    v54 = v91;
  }
  v55 = v40;
  v56 = v90;
  sub_D078(v55, (uint64_t)v20);
  v57 = v116;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v116, v20, v51);
  sub_D0BC((uint64_t)v20);
  v58 = sub_89A0(&qword_3D07F8, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeCaption, (uint64_t)&protocol conformance descriptor for EpisodeCaption);
  v59 = v100;
  v60 = v102;
  v61 = v54;
  v62 = v99;
  View.puiFont(_:)(v57, v102, v58);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v57, v51);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v62, v60);
  KeyPath = swift_getKeyPath(&unk_2EF940);
  v64 = (uint64_t)v106;
  v65 = v103;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v106, v59, v103);
  v66 = v64 + *(int *)(v98 + 36);
  *(_QWORD *)v66 = KeyPath;
  *(_QWORD *)(v66 + 8) = 1;
  *(_BYTE *)(v66 + 16) = 0;
  v67.n128_f64[0] = (*(double (**)(char *, uint64_t))(v56 + 8))(v59, v65);
  v68 = static Color.white.getter(v67);
  v69 = Color.opacity(_:)(0.4);
  swift_release(v68);
  v70 = v110;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v110, enum case for BlendMode.plusLighter(_:), v52);
  v71 = v111;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))((char *)v111 + *(int *)(v109 + 36), v70, v52);
  *v71 = v69;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v70, v52);
  v72 = (uint64_t)v105;
  sub_D184((uint64_t)v71, (uint64_t)&v105[*(int *)(v104 + 36)], &qword_3D07D8);
  sub_D184(v64, v72, &qword_3D07E8);
  sub_D1D4((uint64_t)v71, &qword_3D07D8);
  sub_D1D4(v64, &qword_3D07E8);
  v73 = v107;
  v74 = sub_D210(v72, v107, &qword_3D07F0);
  v75 = LegacyLockup.title.getter(v74);
  v77 = v76;
  v78 = LegacyEpisodeLockup.summary.getter();
  if (v78)
  {
    v79 = (void *)v78;
    v80 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();

  }
  else
  {
    v80 = 0;
  }
  v81 = v112;
  sub_BD58(v75, v77, v80, v112);

  swift_bridgeObjectRelease(v77);
  v82 = v113;
  sub_D210((uint64_t)v81, v113, &qword_3D07D0);
  v83 = v108;
  sub_D184(v73, v108, &qword_3D07F0);
  v84 = v115;
  sub_D184(v82, v115, &qword_3D07D0);
  v85 = v114;
  sub_D184(v83, v114, &qword_3D07F0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0800);
  sub_D184(v84, v85 + *(int *)(v86 + 48), &qword_3D07D0);
  sub_D1D4(v82, &qword_3D07D0);
  sub_D1D4(v73, &qword_3D07F0);
  sub_D1D4(v84, &qword_3D07D0);
  return sub_D1D4(v83, &qword_3D07F0);
}

uint64_t sub_CE0C()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_CE24@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  *a1 = static Alignment.topLeading.getter();
  a1[1] = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0790);
  return sub_B62C(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_CE64@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  uint64_t v31;

  v4 = type metadata accessor for PUITextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v31 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v31 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v31 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v31 - v18;
  if (qword_3CEFC0 != -1)
    swift_once(&qword_3CEFC0, sub_B2D8);
  v20 = *(double *)&qword_3D05A8;
  v21 = static PUITextStyle.caption2.getter();
  PUITextStyle.emph.getter(v21);
  v22 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v23 = v22(v19, v4);
  if (v20 <= a2)
  {
    v27 = static PUITextStyle.body.getter(v23);
    PUITextStyle.emph.getter(v27);
    v28 = v22(v14, v4);
    PUITextStyle.tight.getter(v28);
    v22(v11, v4);
    v26 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
    ((void (*)(void))static PUITextStyle.subhead.getter)();
  }
  else
  {
    v24 = static PUITextStyle.subhead.getter(v23);
    PUITextStyle.emph.getter(v24);
    v25 = v22(v14, v4);
    PUITextStyle.tight.getter(v25);
    v22(v11, v4);
    v26 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
    static PUITextStyle.footnote.getter();
  }
  v29 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v29(a1, v17, v4);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v29)(a1 + *(int *)(v26 + 20), v8, v4);
}

uint64_t sub_D078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_D0BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EpisodeHeroTextArea.Metrics.TextStyles(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_D100(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_D130(result, a2, a3 & 1);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_D130(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

double sub_D140(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_D170(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_D170(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_D184(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_D1C8(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_D1D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_D210(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_D254()
{
  unint64_t result;

  result = qword_3D0828;
  if (!qword_3D0828)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_3D0828);
  }
  return result;
}

unint64_t sub_D29C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D0840;
  if (!qword_3D0840)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0848);
    result = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0840);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

char *sub_D32C(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  int v12;
  char *v13;
  char *v14;
  __int16 v15;
  id v16;
  id v17;
  id v18;
  unsigned __int16 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char v36;
  char *v37;
  objc_super v38;
  _QWORD v39[11];
  char v40;
  char v41;

  v2 = v1;
  v3 = *(void **)a1;
  v34 = *(_QWORD *)(a1 + 8);
  v35 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = *(void **)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v32 = *(_QWORD *)(a1 + 72);
  v33 = *(_QWORD *)(a1 + 80);
  v11 = *(unsigned __int8 *)(a1 + 88);
  v12 = *(unsigned __int8 *)(a1 + 89);
  v36 = *(_BYTE *)(a1 + 89);
  v13 = (char *)objc_msgSend(objc_allocWithZone(v2), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase];
  v29 = *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 8];
  v30 = *(void **)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase];
  if (v12)
    v15 = 256;
  else
    v15 = 0;
  v31 = v11;
  v27 = *((_QWORD *)v14 + 3);
  v28 = *((_QWORD *)v14 + 2);
  v25 = *((_QWORD *)v14 + 5);
  v26 = *((_QWORD *)v14 + 4);
  v23 = *((_QWORD *)v14 + 7);
  v24 = (void *)*((_QWORD *)v14 + 6);
  v22 = *((_OWORD *)v14 + 4);
  v21 = *((_QWORD *)v14 + 10);
  v20 = *((_WORD *)v14 + 44);
  *(_QWORD *)v14 = v3;
  *((_QWORD *)v14 + 1) = v34;
  *((_QWORD *)v14 + 2) = v4;
  *((_QWORD *)v14 + 3) = v5;
  *((_QWORD *)v14 + 4) = v7;
  *((_QWORD *)v14 + 5) = v6;
  *((_QWORD *)v14 + 6) = v8;
  *((_QWORD *)v14 + 7) = v9;
  *((_QWORD *)v14 + 8) = v10;
  *((_QWORD *)v14 + 9) = v32;
  *((_QWORD *)v14 + 10) = v33;
  *((_WORD *)v14 + 44) = v15 | v11;
  v37 = v13;
  sub_DDA0(v35, v34, v4, v5, v7, v6, v8, v9, v10, v32, v33, v11, v36);
  sub_DC94(v30, v29, v28, v27, v26, v25, v24, v23, v22, *((uint64_t *)&v22 + 1), v21, v20);
  v16 = objc_msgSend(v37, "traitCollection");
  v39[0] = v35;
  v39[1] = v34;
  v39[2] = v4;
  v39[3] = v5;
  v39[4] = v7;
  v39[5] = v6;
  v39[6] = v8;
  v39[7] = v9;
  v39[8] = v10;
  v39[9] = v32;
  v39[10] = v33;
  v40 = v31;
  v41 = v36;
  v17 = sub_1D5728((uint64_t)v39, v16);
  v18 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v17, 0.0);

  sub_DCC8(v35, v34, v4, v5, v7, v6, v8, v9, v10, v32, v33, v31, v36);
  v38.receiver = v37;
  v38.super_class = (Class)type metadata accessor for DynamicTypeTextView();
  objc_msgSendSuper2(&v38, "setFont:", v18);

  return v37;
}

void sub_D5B8(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  __int16 v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unsigned __int16 v15;
  __int128 v16;
  __int128 v17;
  unsigned int v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  objc_super v38;
  _QWORD v39[11];
  __int16 v40;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_WORD *)(a1 + 88);
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase];
  v6 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase];
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 8];
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 16];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 24];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 32];
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 40];
  v11 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 48];
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 56];
  v13 = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 64];
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 80];
  v15 = *(_WORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 88];
  v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *((_OWORD *)v4 + 1) = v16;
  v17 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v4 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v4 + 3) = v17;
  *((_OWORD *)v4 + 4) = *(_OWORD *)(a1 + 64);
  *((_QWORD *)v4 + 10) = v2;
  *((_WORD *)v4 + 44) = v3;
  sub_DC94(v6, v5, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, v15);
  v18 = *((unsigned __int16 *)v4 + 44);
  if (v18 >> 8 <= 0xFE)
  {
    v33 = *((_QWORD *)v4 + 9);
    v34 = *((_QWORD *)v4 + 10);
    v32 = *((_QWORD *)v4 + 8);
    v20 = *((_QWORD *)v4 + 5);
    v19 = (void *)*((_QWORD *)v4 + 6);
    v22 = *((_QWORD *)v4 + 3);
    v21 = *((_QWORD *)v4 + 4);
    v24 = *((_QWORD *)v4 + 1);
    v23 = *((_QWORD *)v4 + 2);
    v25 = *(void **)v4;
    v36 = *(void **)v4;
    v37 = v24;
    v26 = *((_QWORD *)v4 + 7);
    sub_DDA0(v25, v24, v23, v22, v21, v20, v19, v26, v32, v33, v34, v18, (unsigned __int16)(v18 & 0x1FF) >> 8);
    v35 = v1;
    v27 = objc_msgSend(v1, "traitCollection");
    v39[0] = v25;
    v39[1] = v24;
    v39[2] = v23;
    v39[3] = v22;
    v39[4] = v21;
    v39[5] = v20;
    LOBYTE(v24) = v20;
    v39[6] = v19;
    v39[7] = v26;
    v28 = v19;
    v29 = v26;
    v39[8] = v32;
    v39[9] = v33;
    v39[10] = v34;
    v40 = v18 & 0x1FF;
    v30 = sub_1D5728((uint64_t)v39, v27);
    v31 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v30, 0.0);

    v38.receiver = v35;
    v38.super_class = (Class)type metadata accessor for DynamicTypeTextView();
    objc_msgSendSuper2(&v38, "setFont:", v31);

    sub_DC94(v36, v37, v23, v22, v21, v24, v28, v29, v32, v33, v34, v18);
  }
}

void sub_D890(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *v4;
  id v5;
  char v6;
  char *v7;
  unsigned int v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  objc_super v28;
  _QWORD v29[11];
  __int16 v30;
  objc_super v31;

  v2 = v1;
  v4 = (objc_class *)type metadata accessor for DynamicTypeTextView();
  v31.receiver = v2;
  v31.super_class = v4;
  objc_msgSendSuper2(&v31, "traitCollectionDidChange:", a1);
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v6 & 1) == 0)
  {
    v7 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase];
    v8 = *(unsigned __int16 *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews19DynamicTypeTextView_fontUseCase + 88];
    if (v8 >> 8 <= 0xFE)
    {
      v21 = *((_QWORD *)v7 + 9);
      v22 = *((_QWORD *)v7 + 10);
      v9 = *((_QWORD *)v7 + 7);
      v20 = *((_QWORD *)v7 + 8);
      v11 = *((_QWORD *)v7 + 5);
      v10 = (void *)*((_QWORD *)v7 + 6);
      v12 = *((_QWORD *)v7 + 3);
      v13 = *((_QWORD *)v7 + 4);
      v15 = *((_QWORD *)v7 + 1);
      v14 = *((_QWORD *)v7 + 2);
      v27 = v4;
      v16 = *(void **)v7;
      v23 = *(void **)v7;
      v24 = v15;
      v25 = v14;
      v26 = v12;
      sub_DDA0(*(void **)v7, v15, v14, v12, v13, v11, v10, v9, v20, v21, v22, v8, (unsigned __int16)(v8 & 0x1FF) >> 8);
      v29[0] = v16;
      v29[1] = v15;
      v29[2] = v14;
      v29[3] = v12;
      v29[4] = v13;
      v29[5] = v11;
      v29[6] = v10;
      v29[7] = v9;
      v29[8] = v20;
      v29[9] = v21;
      v29[10] = v22;
      v30 = v8 & 0x1FF;
      v17 = objc_msgSend(v2, "traitCollection");
      v18 = sub_1D5728((uint64_t)v29, v17);
      v19 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v18, 0.0);

      v28.receiver = v2;
      v28.super_class = v27;
      objc_msgSendSuper2(&v28, "setFont:", v19);

      sub_DC94(v23, v24, v25, v26, v13, v11, v10, v9, v20, v21, v22, v8);
    }
  }
}

id sub_DBF0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicTypeTextView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DynamicTypeTextView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews19DynamicTypeTextView);
}

void sub_DC94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int16 a12)
{
  if (HIBYTE(a12) <= 0xFEu)
    sub_DCC8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (unsigned __int16)(a12 & 0x1FF) >> 8);
}

void sub_DCC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13)
{
  sub_DD48(a1, a2, a3, a4, a5, a6);
  if ((a13 & 1) != 0)
    sub_DD48(a7, a8, a9, a10, a11, a12);
}

void sub_DD48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
    case 1:
    case 3:

      break;
    case 2:
      swift_bridgeObjectRelease(a2);
      swift_release(a4);
      break;
    default:
      return;
  }
}

id sub_DDA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13)
{
  id result;

  result = sub_DE20(a1, a2, a3, a4, a5, a6);
  if ((a13 & 1) != 0)
    return sub_DE20(a7, a8, a9, a10, a11, a12);
  return result;
}

id sub_DE20(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
    case 1:
    case 3:
      result = result;
      break;
    case 2:
      swift_bridgeObjectRetain(a2);
      result = (id)swift_retain(a4);
      break;
    default:
      return result;
  }
  return result;
}

id sub_DE78()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.447058824, 0.141176471, 0.847058824, 1.0);
  qword_3D0880 = (uint64_t)result;
  return result;
}

id static Theme.podcastsPurpleColor.getter()
{
  return sub_DF48(&qword_3CEFD8, (id *)&qword_3D0880);
}

id sub_DEE0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.611764706, 0.352941176, 0.949019608, 1.0);
  qword_3D0888 = (uint64_t)result;
  return result;
}

id static Theme.podcastsLightPurpleColor.getter()
{
  return sub_DF48(&qword_3CEFE0, (id *)&qword_3D0888);
}

id sub_DF48(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

void sub_DF80(uint64_t a1)
{
  sub_E0C0(a1, &qword_3D0890);
}

id static Theme.appTintColor.getter()
{
  return sub_DF48(&qword_3CEFE8, (id *)&qword_3D0890);
}

id sub_DFAC(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_systemBackgroundColor, &qword_3D0898);
}

id static Theme.backgroundColor.getter()
{
  return sub_DF48(&qword_3CEFF0, (id *)&qword_3D0898);
}

id sub_DFDC(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_systemBackgroundColor, &qword_3D08A0);
}

id static Theme.contentBackgroundColor.getter()
{
  return sub_DF48(&qword_3CEFF8, (id *)&qword_3D08A0);
}

void sub_E00C()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.85, 1.0);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v0, v1);
  v3 = v2;

  qword_3D08A8 = v3;
}

id static Theme.splitDividerColor.getter()
{
  return sub_DF48(&qword_3CF000, (id *)&qword_3D08A8);
}

void sub_E0B4(uint64_t a1)
{
  sub_E0C0(a1, &qword_3D08B0);
}

void sub_E0C0(uint64_t a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;

  if (qword_3CEFD8 != -1)
    swift_once(&qword_3CEFD8, sub_DE78);
  v3 = (void *)qword_3D0880;
  if (qword_3CEFE0 != -1)
    swift_once(&qword_3CEFE0, sub_DEE0);
  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v3, (void *)qword_3D0888);
  *a2 = v4;
}

id static Theme.sidebarIconTintColor.getter()
{
  return sub_DF48(&qword_3CF008, (id *)&qword_3D08B0);
}

void sub_E164()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.3);
  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v0, v1);
  v3 = v2;

  qword_3FA870 = v3;
}

void sub_E1F0()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "clearColor");
  v2 = objc_msgSend(v0, "blackColor");
  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v1, v2);
  v4 = v3;

  qword_3FA878 = v4;
}

void sub_E274()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.6);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.6);
  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v0, v1);
  v3 = v2;

  qword_3FA880 = v3;
}

id sub_E308(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_secondarySystemBackgroundColor, &qword_3FA888);
}

id sub_E31C(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_quaternaryLabelColor, &qword_3FA890);
}

id sub_E330(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_secondarySystemBackgroundColor, &qword_3FA898);
}

id sub_E344(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_labelColor, &qword_3FA8A0);
}

id sub_E358(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_secondaryLabelColor, &qword_3FA8A8);
}

id sub_E36C(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_3FA8B0);
}

void sub_E380()
{
  Class isa;
  Class v1;
  uint64_t v2;
  uint64_t v3;

  sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.85089, 0.85103, 0.85088, 1.0).super.isa;
  v1 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.17255, 0.17255, 0.18039, 1.0).super.isa;
  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(isa, v1);
  v3 = v2;

  qword_3FA8B8 = v3;
}

id sub_E434(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_secondaryLabelColor, &qword_3FA8C0);
}

id sub_E448(uint64_t a1)
{
  return sub_E45C(a1, (SEL *)&selRef_quaternaryLabelColor, &qword_3FA8C8);
}

id sub_E45C(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  *a3 = result;
  return result;
}

id sub_E49C(uint64_t a1)
{
  return sub_E4E4(a1, &qword_3CF048, (void **)&qword_3FA8A8, (void **)&qword_3FA8D0, (uint64_t)sub_E358);
}

id sub_E4C0(uint64_t a1)
{
  return sub_E4E4(a1, &qword_3CF040, (void **)&qword_3FA8A0, (void **)&qword_3FA8D8, (uint64_t)sub_E344);
}

id sub_E4E4(uint64_t a1, _QWORD *a2, void **a3, void **a4, uint64_t a5)
{
  void *v7;

  if (*a2 != -1)
    swift_once(a2, a5);
  v7 = *a3;
  *a4 = *a3;
  return v7;
}

id sub_E528(uint64_t a1)
{
  return sub_E4E4(a1, &qword_3CF048, (void **)&qword_3FA8A8, (void **)&qword_3FA8E0, (uint64_t)sub_E358);
}

id sub_E54C(uint64_t a1)
{
  return sub_E4E4(a1, &qword_3CF038, (void **)&qword_3FA898, (void **)&qword_3FA8E8, (uint64_t)sub_E330);
}

uint64_t Theme.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Theme.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

void _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(void *a1, void *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  id v8;
  id v9;
  unint64_t v10;
  Class isa;
  id v12;
  uint64_t v13;

  v4 = (void *)objc_opt_self(UIColor);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0950);
  inited = swift_initStackObject(v5, &v13);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  v7 = (void *)objc_opt_self(UITraitCollection);
  *(_QWORD *)(inited + 32) = objc_msgSend(v7, "traitCollectionWithUserInterfaceStyle:", 0);
  *(_QWORD *)(inited + 40) = a1;
  v8 = a1;
  *(_QWORD *)(inited + 48) = objc_msgSend(v7, "traitCollectionWithUserInterfaceStyle:", 2);
  *(_QWORD *)(inited + 56) = a2;
  v9 = a2;
  v10 = sub_D451C(inited);
  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  sub_E748();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v4, "_dynamicColorWithColorsByTraitCollection:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  if (!v12)
    __break(1u);
}

uint64_t type metadata accessor for Theme()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews5Theme);
}

uint64_t method lookup function for Theme(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Theme);
}

uint64_t sub_E710(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_E748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D0958;
  if (!qword_3D0958)
  {
    v1 = sub_E710(255, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_3D0958);
  }
  return result;
}

void sub_E7A0(uint64_t a1, double a2, double a3)
{
  char *v3;
  void *v4;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  id v18;
  id v19;
  unsigned __int8 v20;

  v4 = v3;
  v8 = v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = *(_BYTE *)(a1 + 129);
  v20 = v8;
  sub_EB33C(&v20);
  v9 = type metadata accessor for ArtworkModel(0);
  v10 = ArtworkCrop.preferredContentMode.getter();
  objc_msgSend(v3, "setContentMode:", ContentMode.viewContentMode.getter(v10));
  v11 = (double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
  *v11 = a2;
  v11[1] = a3;
  objc_msgSend(v3, "setNeedsLayout");
  v12 = (uint64_t *)(a1 + *(int *)(v9 + 48));
  v14 = *v12;
  v13 = v12[1];
  v15 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle];
  v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle + 8];
  *(_QWORD *)v15 = v14;
  *((_QWORD *)v15 + 1) = v13;
  swift_bridgeObjectRetain(v13);
  v17 = swift_bridgeObjectRelease(v16);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (qword_3CF028 != -1)
      swift_once(&qword_3CF028, sub_E308);
    v18 = (id)qword_3FA888;
  }
  else
  {
    v18 = (id)Color.color.getter(*(_QWORD *)(a1 + 56), v17);
  }
  objc_msgSend(v4, "setBackgroundColor:", v18);

}

uint64_t type metadata accessor for Animation()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews9Animation);
}

void sub_E910()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _BYTE v20[24];
  char v21[24];

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v18 - v6;
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_playbackStatusPresenter;
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_playbackStatusPresenter];
  if (!v9)
    goto LABEL_5;
  *(_QWORD *)(v9 + 40) = &off_37B058;
  v10 = swift_unknownObjectWeakAssign(v9 + 32, v0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(v9 + 40);
    ObjectType = swift_getObjectType();
    v14 = v9 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
    swift_beginAccess(v9 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v21, 0, 0);
    sub_F8BC(v14, (uint64_t)v7);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 8);
    swift_retain(v9);
    v16 = v1;
    v15(v7, ObjectType, v13);
    swift_unknownObjectRelease(v12);
    sub_FA4C((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    swift_release(v9);

  }
  if (!*(_QWORD *)&v1[v8])
  {
LABEL_5:
    swift_storeEnumTagMultiPayload(v7, v2, 5);
    sub_F8BC((uint64_t)v7, (uint64_t)v5);
    v17 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState];
    swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState], v20, 33, 0);
    sub_F900((uint64_t)v5, v17);
    swift_endAccess(v20);
    sub_EC7C();
    sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    sub_FA4C((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  }
}

_BYTE *sub_EAE0()
{
  _BYTE *v0;
  objc_class *ObjectType;
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  _BYTE *v7;
  _BYTE *v8;
  Swift::String v9;
  Swift::String v10;
  unint64_t v11;
  NSString v12;
  char v14;
  uint64_t v15;
  unint64_t v16;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_playbackStatusPresenter] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progress] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressHidden] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlayStyle] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlay];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState];
  v4 = type metadata accessor for EpisodePlayState(0);
  swift_storeEnumTagMultiPayload(v3, v4, 4);
  v17.receiver = v0;
  v17.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v17, "init");
  v6 = v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
  LOBYTE(v15) = v6;
  v7 = v5;
  sub_EB33C((unsigned __int8 *)&v15);
  v15 = 0;
  v16 = 0xE000000000000000;
  v8 = v7;
  v9._object = (void *)0x80000000003078F0;
  v9._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 46;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v14 = 4;
  _print_unlocked<A, B>(_:_:)(&v14, &v15, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v11 = v16;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setAccessibilityIdentifier:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  return v8;
}

id sub_EC7C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id result;
  int EnumCaseMultiPayload;
  double v13;
  float v14;
  float v15;
  char v16;
  char v18[24];

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  v3 = __chkstk_darwin(v2);
  v5 = (double *)&v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v18[-v6 - 8];
  v8 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState], v18, 0, 0);
  v9 = sub_F8BC(v8, (uint64_t)v7);
  v10 = EpisodePlayState.isPending.getter(v9);
  result = (id)sub_FA4C((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
  if ((v10 & 1) == 0)
  {
    sub_F8BC(v8, (uint64_t)v5);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v2);
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload == 2)
      {
        *(_DWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progress] = 1065353216;
        objc_msgSend(v1, "setNeedsLayout");
        sub_D1D4((uint64_t)v5, &qword_3D0A50);
        v16 = 2;
      }
      else
      {
        if (EnumCaseMultiPayload == 3)
          goto LABEL_5;
        sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
        v16 = 0;
      }
LABEL_14:
      v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlayStyle] = v16;
      objc_msgSend(v1, "setNeedsLayout");
      return objc_msgSend(v1, "setNeedsLayout");
    }
LABEL_5:
    v13 = v5[1];
    if (v13 <= 0.0)
      goto LABEL_9;
    v14 = *v5 / v13;
    v15 = 1.0;
    if (v14 >= 1.0)
    {
      v16 = 2;
      goto LABEL_13;
    }
    if (v14 <= 0.0)
    {
LABEL_9:
      v16 = 0;
      v15 = 0.0;
    }
    else
    {
      v16 = 1;
      v15 = v14;
    }
LABEL_13:
    *(float *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progress] = v15;
    objc_msgSend(v1, "setNeedsLayout");
    goto LABEL_14;
  }
  return result;
}

void sub_EE5C()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  unsigned __int8 (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  objc_super v9;

  v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "layoutSubviews");
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlay];
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlay];
  if (v3)
  {
    v4 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType();
    v6 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v4 + 8);
    v7 = v3;
    if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlayStyle] != v6(ObjectType, v4))
    {
      if (*(_QWORD *)v2)
      {
        objc_msgSend(*(id *)v2, "removeFromSuperview");
        v8 = *(id *)v2;
      }
      else
      {
        v8 = 0;
      }
      *(_QWORD *)v2 = 0;
      *((_QWORD *)v2 + 1) = 0;

      v7 = v8;
    }

  }
  sub_EF48();
  sub_F0E4();
}

void sub_EF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  _UNKNOWN **v7;
  id v8;
  _QWORD *v9;
  _QWORD *v10;
  double v11;
  uint64_t v12;
  void (*v13)(uint64_t, double);
  _QWORD *v14;
  double v15;
  id v16;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_objectGraph);
  if (v1)
  {
    v2 = v0;
    v3 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlay;
    if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlay))
    {
      if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlayStyle))
      {
        if (*(_BYTE *)(v0
                      + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlayStyle) == 1)
        {
          v4 = objc_allocWithZone((Class)type metadata accessor for ArtworkProgressBarOverlay());
          v5 = swift_retain_n(v1, 2);
          v6 = sub_132E4(v5);
          v7 = &off_37B2C0;
        }
        else
        {
          v8 = objc_allocWithZone((Class)type metadata accessor for ArtworkCheckmarkProgressOverlay());
          swift_retain(v1);
          sub_245E0C();
          v7 = &off_38D938;
        }
      }
      else
      {
        swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_objectGraph));
        v6 = 0;
        v7 = 0;
      }
      v9 = *(_QWORD **)v3;
      *(_QWORD *)v3 = v6;
      *(_QWORD *)(v3 + 8) = v7;

      v10 = *(_QWORD **)v3;
      if (*(_QWORD *)v3)
      {
        v11 = *(double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius);
        v12 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle);
        v13 = *(void (**)(uint64_t, double))((char *)&stru_68.reserved2 + (swift_isaMask & *v10));
        v14 = v10;
        v13(v12, v11);

        if (*(_QWORD *)v3)
        {
          if (*(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressHidden))
            v15 = 0.0;
          else
            v15 = 1.0;
          v16 = *(id *)v3;
          objc_msgSend(v16, "setAlpha:", v15);

        }
      }
      swift_release(v1);
    }
  }
}

void sub_F0E4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  id v9;
  float v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  char *v18;
  id v19;
  id v20;
  id v21[3];

  v1 = v0;
  v2 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlay];
  v6 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progressOverlay];
  if (v6)
  {
    v7 = *((_QWORD *)v5 + 1);
    ObjectType = swift_getObjectType();
    v9 = v6;
    objc_msgSend(v1, "bounds");
    objc_msgSend(v9, "setFrame:");

    v10 = *(float *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_progress];
    v21[0] = v9;
    (*(void (**)(uint64_t, uint64_t, float))(v7 + 24))(ObjectType, v7, v10);
    v11 = v21[0];
    v12 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState];
    swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState], v21, 0, 0);
    v13 = sub_F8BC(v12, (uint64_t)v4);
    LOBYTE(v12) = EpisodePlayState.isEpisodePlaying.getter(v13);
    sub_FA4C((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
    v14 = swift_getObjectType();
    v20 = v11;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v12 & 1, v14, v7);
    v15 = v20;
    v16 = objc_msgSend(v15, "superview");
    if (!v16)
      goto LABEL_4;
    v17 = v16;
    sub_FA88();
    v18 = v1;
    v19 = v17;
    LOBYTE(v17) = static NSObject.== infix(_:_:)();

    if ((v17 & 1) == 0)
LABEL_4:
      objc_msgSend(v1, "addSubview:", v15);

  }
}

void sub_F2F8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v39[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  v3 = __chkstk_darwin(v2);
  v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v39[-v6 - 8];
  swift_beginAccess(&off_3D3FF8, v39, 0, 0);
  if (!off_3D3FF8)
  {
    __break(1u);
    return;
  }
  v8 = *(_QWORD *)&stru_68.sectname[(_QWORD)off_3D3FF8];
  v9 = *(_QWORD *)&stru_68.segname[(_QWORD)off_3D3FF8 - 8];
  ObjectType = swift_getObjectType();
  v11 = swift_unknownObjectRetain(v8);
  v12 = dispatch thunk of LibraryDataProviderProtocol.episodePlayStateController.getter(ObjectType, v9, v11);
  v13 = swift_unknownObjectRelease(v8);
  v14 = EpisodeHeader.uuid.getter(v13);
  if (v15)
  {
    v16 = v14;
    v17 = v15;
    v18 = type metadata accessor for PlaybackStatusPresenter(0);
    swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
    swift_retain(v12);
    v19 = sub_276AA0(v16, v17, v12);
  }
  else
  {
    v23 = EpisodeHeader.adamId.getter(v14);
    if ((v24 & 1) != 0 || (v25 = v23, (AdamID.isEmpty.getter(v23) & 1) != 0))
    {
      sub_F944();
      v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_playbackStatusPresenter];
      *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_playbackStatusPresenter] = 0;
      swift_release(v26);
      sub_E910();
      goto LABEL_8;
    }
    v37 = type metadata accessor for PlaybackStatusPresenter(0);
    swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
    swift_retain(v12);
    v19 = sub_276978(v25, v12);
  }
  v20 = v19;
  sub_F944();
  v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_playbackStatusPresenter];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_playbackStatusPresenter] = v20;
  swift_retain(v20);
  swift_release(v21);
  sub_E910();
  v22 = swift_release(v20);
LABEL_8:
  if ((EpisodeHeader.shouldRenderEpisodeArtwork.getter(v22) & 1) != 0)
  {
    v27 = EpisodeHeader.episodeArtwork.getter();
    if (v27)
    {
      HeaderModel.PrimaryArtwork.artwork.getter();
      swift_release(v27);
      v28 = type metadata accessor for ArtworkModel(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v7, 1, v28) == 1)
      {
        sub_D1D4((uint64_t)v7, &qword_3D0A58);
        v29 = 0;
        v27 = 0;
      }
      else
      {
        v36 = &v7[*(int *)(v28 + 48)];
        v29 = *(_QWORD *)v36;
        v27 = *((_QWORD *)v36 + 1);
        swift_bridgeObjectRetain(v27);
        sub_FA4C((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      }
    }
    else
    {
      v29 = 0;
    }
    v34 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle];
    v35 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle + 8];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle] = v29;
  }
  else
  {
    v30 = EpisodeHeader.showArtwork.getter();
    HeaderModel.PrimaryArtwork.artwork.getter();
    swift_release(v30);
    v31 = type metadata accessor for ArtworkModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v5, 1, v31) == 1)
    {
      sub_D1D4((uint64_t)v5, &qword_3D0A58);
      v32 = 0;
      v27 = 0;
    }
    else
    {
      v33 = &v5[*(int *)(v31 + 48)];
      v32 = *(_QWORD *)v33;
      v27 = *((_QWORD *)v33 + 1);
      swift_bridgeObjectRetain(v27);
      sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    }
    v34 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle];
    v35 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle + 8];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle] = v32;
  }
  *((_QWORD *)v34 + 1) = v27;
  objc_msgSend(v1, "setNeedsLayout", swift_bridgeObjectRelease(v35).n128_f64[0]);
  swift_release(v12);
}

uint64_t sub_F64C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_playbackStatusPresenter));

  return sub_FA4C(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
}

id DownloadsCVCLibraryActionControllerBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_F71C()
{
  return type metadata accessor for ArtworkWithPlaybackStatusView(0);
}

uint64_t type metadata accessor for ArtworkWithPlaybackStatusView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D0A40;
  if (!qword_3D0A40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArtworkWithPlaybackStatusView);
  return result;
}

uint64_t sub_F760(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v4[2] = &unk_2EFAF8;
  v4[3] = &unk_2EFB10;
  v4[4] = &unk_2EFB28;
  result = type metadata accessor for EpisodePlayState(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 1040);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_F804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_F8BC(a1, (uint64_t)v5);
  v6 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_episodePlayState, v9, 33, 0);
  sub_F900((uint64_t)v5, v6);
  swift_endAccess(v9);
  sub_EC7C();
  return sub_FA4C((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
}

uint64_t sub_F8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodePlayState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_F900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodePlayState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_F944()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, __n128);
  __n128 v13;
  _BYTE v15[24];

  v1 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ArtworkWithPlaybackStatusView_playbackStatusPresenter);
  if (v5)
  {
    *(_QWORD *)(v5 + 40) = 0;
    v6 = swift_unknownObjectWeakAssign(v5 + 32, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      v8 = Strong;
      v9 = *(_QWORD *)(v5 + 40);
      ObjectType = swift_getObjectType();
      v11 = v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
      swift_beginAccess(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v15, 0, 0);
      sub_F8BC(v11, (uint64_t)v4);
      v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 8);
      v13 = swift_retain(v5);
      v12(v4, ObjectType, v9, v13);
      swift_unknownObjectRelease(v8);
      sub_FA4C((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodePlayState);
      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_FA4C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_FA88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D34B0;
  if (!qword_3D34B0)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D34B0);
  }
  return result;
}

uint64_t dispatch thunk of LibraryViewControllerProviderProtocol.podcastSettings(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of UberCell.fadeOut.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UberCell.fadeOut.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MiniPlayerControllerProtocol.tearDown()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of UberCell.uberHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void sub_FAEC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  NSString v7;
  id v8;
  id v9;
  void *v10;
  NSString v11;
  id v12;
  unsigned __int8 v13;

  v6 = (void *)objc_opt_self(MTRecencyUtil);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "upNextForPodcastUuid:ctx:", v7, a4);

  if (v8)
  {
    v9 = objc_msgSend(v8, "upNextScore");

  }
  else
  {
    v9 = 0;
  }
  v10 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;

  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(a4, "podcastForUuid:", v11);

  if (v12)
  {
    v13 = objc_msgSend(v12, "isSerialShowTypeInFeed");

  }
  else
  {
    v13 = 0;
  }
  *(_BYTE *)(a1 + 16) = v13;
}

void sub_FC00(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;

  v4 = 0xD000000000000012;
  v5 = (void *)__swift_project_boxed_opaque_existential_1(a1, a1[3])[3];
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v6, "combinedScore");
    v8 = round(v7 * 100.0) / 100.0;
    _StringGuts.grow(_:)(71);
    v9._countAndFlagsBits = 0x6353206C61746F54;
    v9._object = (void *)0xEF2073692065726FLL;
    String.append(_:)(v9);
    v11._countAndFlagsBits = Double.description.getter(v10, v8);
    object = v11._object;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(object);
    v13._countAndFlagsBits = 0xD000000000000036;
    v13._object = (void *)0x8000000000307940;
    String.append(_:)(v13);

    v4 = 0;
    v14 = 0xE000000000000000;
  }
  else
  {
    v14 = 0x8000000000307920;
  }
  v65 = v4;
  v66 = v14;
  v15 = sub_D254();
  v16 = Text.init<A>(_:)(&v65, &type metadata for String, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  v23 = Text.bold()();
  v60 = v24;
  v61 = v23;
  v58 = v25;
  v62 = v26;
  sub_D170(v16, v18, v22);
  swift_bridgeObjectRelease(v20);
  v27 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v28 = sub_1068C(*((_BYTE *)v27 + 16), (void *)v27[3]);
  if (v29)
  {
    v65 = (unint64_t)v28;
    v66 = v29;
    v30 = Text.init<A>(_:)(&v65, &type metadata for String, v15);
    v63 = v31;
    v64 = v30;
    v59 = v32;
    v34 = v33 & 1;
  }
  else
  {
    v63 = 0;
    v64 = 0;
    v34 = 0;
    v59 = 0;
  }
  v35 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v36 = sub_109B4((id)v35[3]);
  if (v37)
  {
    v65 = (unint64_t)v36;
    v66 = v37;
    v38 = Text.init<A>(_:)(&v65, &type metadata for String, v15);
    v56 = v39;
    v57 = v38;
    v55 = v40;
    v42 = v41 & 1;
  }
  else
  {
    v56 = 0;
    v57 = 0;
    v42 = 0;
    v55 = 0;
  }
  v43 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v44 = sub_10D0C((void *)v43[3]);
  if (v45)
  {
    v65 = (unint64_t)v44;
    v66 = v45;
    v46 = Text.init<A>(_:)(&v65, &type metadata for String, v15);
    v49 = v48;
    v51 = v50 & 1;
  }
  else
  {
    v46 = 0;
    v49 = 0;
    v51 = 0;
    v47 = 0;
  }
  LOBYTE(v65) = v58 & 1;
  *(_QWORD *)a2 = v61;
  *(_QWORD *)(a2 + 8) = v60;
  *(_BYTE *)(a2 + 16) = v58 & 1;
  *(_QWORD *)(a2 + 24) = v62;
  *(_QWORD *)(a2 + 32) = v64;
  *(_QWORD *)(a2 + 40) = v63;
  *(_QWORD *)(a2 + 48) = v34;
  v54 = v34;
  *(_QWORD *)(a2 + 56) = v59;
  *(_QWORD *)(a2 + 64) = v57;
  *(_QWORD *)(a2 + 72) = v56;
  *(_QWORD *)(a2 + 80) = v42;
  *(_QWORD *)(a2 + 88) = v55;
  *(_QWORD *)(a2 + 96) = v46;
  *(_QWORD *)(a2 + 104) = v49;
  *(_QWORD *)(a2 + 112) = v51;
  *(_QWORD *)(a2 + 120) = v47;
  v52 = v46;
  v53 = v47;
  sub_D130(v61, v60, v58 & 1);
  swift_bridgeObjectRetain(v62);
  sub_D100(v64, v63, v54, v59);
  sub_D100(v57, v56, v42, v55);
  sub_D100(v52, v49, v51, v53);
  sub_D140(v52, v49, v51, v53);
  sub_D140(v57, v56, v42, v55);
  sub_D140(v64, v63, v54, v59);
  sub_D170(v61, v60, v58 & 1);
  swift_bridgeObjectRelease(v62);
}

uint64_t sub_FF78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A60);
  v1 = sub_10EDC(&qword_3D0A68, &qword_3D0A60, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return Form.init(content:)(sub_10684, &v3, v0, v1);
}

void sub_FFF0(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;
  _QWORD v14[2];
  char v15;
  uint64_t v16;

  v15 = 0;
  v16 = 0;
  v14[0] = a1;
  v14[1] = a2;
  v4 = (void *)objc_opt_self(MTDB);
  v5 = objc_msgSend(v4, "sharedInstance", swift_bridgeObjectRetain(a2).n128_f64[0]);
  v6 = objc_msgSend(v5, "mainOrPrivateContext");

  v7 = (_QWORD *)swift_allocObject(&unk_37B088, 48, 7);
  v7[2] = v14;
  v7[3] = a1;
  v7[4] = a2;
  v7[5] = v6;
  v8 = swift_allocObject(&unk_37B0B0, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_101D0;
  *(_QWORD *)(v8 + 24) = v7;
  v12[4] = sub_101EC;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_920D4;
  v12[3] = &block_descriptor;
  v9 = _Block_copy(v12);
  v10 = v13;
  v11 = v6;
  swift_retain(v8);
  objc_msgSend(v11, "performBlockAndWait:", v9, swift_release(v10).n128_f64[0]);

  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation(v8, "", 165, 32, 28, 1);
  swift_release(v8);
  if ((v9 & 1) != 0)
    __break(1u);
  else
    swift_release(v7);
}

uint64_t sub_101A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_101D0()
{
  uint64_t v0;

  sub_FAEC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_101DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_101EC()
{
  uint64_t v0;

  return sub_1EA30(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void destroy for PrototypeUpNextSingleShowController(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

uint64_t initializeWithCopy for PrototypeUpNextSingleShowController(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v3);
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for PrototypeUpNextSingleShowController(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 24);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = v7;

  return a1;
}

uint64_t assignWithTake for PrototypeUpNextSingleShowController(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for PrototypeUpNextSingleShowController(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrototypeUpNextSingleShowController(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrototypeUpNextSingleShowController()
{
  return &type metadata for PrototypeUpNextSingleShowController;
}

uint64_t initializeWithCopy for PrototypeUpNextSingleShowControllerView(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

_QWORD *assignWithCopy for PrototypeUpNextSingleShowControllerView(_QWORD *a1, _QWORD *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

_QWORD *__swift_assign_boxed_opaque_existential_1(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PrototypeUpNextSingleShowControllerView(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrototypeUpNextSingleShowControllerView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrototypeUpNextSingleShowControllerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrototypeUpNextSingleShowControllerView()
{
  return &type metadata for PrototypeUpNextSingleShowControllerView;
}

uint64_t sub_10674(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_3292B4, 1);
}

void sub_10684(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_FC00(*(_QWORD **)(v1 + 16), a1);
}

id sub_1068C(char a1, void *a2)
{
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id result;
  double v14;
  Swift::String v15;
  void *object;
  Swift::String v17;
  double v18;
  Swift::String v19;
  void *v20;
  Swift::String v21;
  id v22;
  double v23;
  Swift::String v24;
  void *v25;
  Swift::String v26;
  id v27;
  double v28;
  Swift::String v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  Swift::String v33;
  void *v34;

  if (!a2)
    return 0;
  v3 = a2;
  objc_msgSend(v3, "episodesFromShowWeight");
  if (v4 <= 0.0)
  {

    return 0;
  }
  objc_msgSend(v3, "episodesFromShowPlayedPercent");
  v6 = v5;
  objc_msgSend(v3, "episodesFromShowWeight");
  v8 = v7;
  _StringGuts.grow(_:)(184);
  v9._countAndFlagsBits = 0x2065687420664FLL;
  v9._object = (void *)0xE700000000000000;
  String.append(_:)(v9);
  if ((a1 & 1) != 0)
    v10 = 0x207473616CLL;
  else
    v10 = 0;
  if ((a1 & 1) != 0)
    v11 = 0xE500000000000000;
  else
    v11 = 0xE000000000000000;
  v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease(v11);
  result = objc_msgSend(v3, "episodesFromShowTotalCount");
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(object);
  v17._countAndFlagsBits = 0xD00000000000003ELL;
  v17._object = (void *)0x8000000000307A90;
  String.append(_:)(v17);
  result = objc_msgSend(v3, "episodesFromShowPlayedCount");
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v18 > -9.22337204e18)
  {
    if (v18 < 9.22337204e18)
    {
      v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v20 = v19._object;
      String.append(_:)(v19);
      swift_bridgeObjectRelease(v20);
      v21._countAndFlagsBits = 0x65646F7369706520;
      v21._object = (void *)0xED000020726F2073;
      String.append(_:)(v21);
      v22 = objc_msgSend(v3, "episodesFromShowPlayedPercent");
      v24._countAndFlagsBits = Double.description.getter(v22, round(v23 * 100.0) / 100.0);
      v25 = v24._object;
      String.append(_:)(v24);
      swift_bridgeObjectRelease(v25);
      v26._countAndFlagsBits = 0xD00000000000003FLL;
      v26._object = (void *)0x8000000000307AD0;
      String.append(_:)(v26);
      v27 = objc_msgSend(v3, "episodesFromShowWeight");
      v29._countAndFlagsBits = Double.description.getter(v27, round(v28 * 100.0) / 100.0);
      v30 = v29._object;
      String.append(_:)(v29);
      swift_bridgeObjectRelease(v30);
      v31._object = (void *)0x8000000000307A70;
      v31._countAndFlagsBits = 0xD00000000000001BLL;
      String.append(_:)(v31);
      v33._countAndFlagsBits = Double.description.getter(v32, round(v6 * v8 * 100.0) / 100.0);
      v34 = v33._object;
      String.append(_:)(v33);

      swift_bridgeObjectRelease(v34);
      return 0;
    }
    goto LABEL_23;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

id sub_109B4(id result)
{
  id v1;
  double v2;
  Swift::String v3;
  double v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  double v8;
  Swift::String v9;
  void *v10;
  Swift::String v11;
  double v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  Swift::String v16;
  id v17;
  double v18;
  Swift::String v19;
  void *v20;
  Swift::String v21;
  id v22;
  double v23;
  Swift::String v24;
  void *v25;
  Swift::String v26;
  double v27;
  double v28;
  id v29;
  double v30;
  Swift::String v31;
  void *v32;

  if (!result)
    return result;
  v1 = result;
  objc_msgSend(v1, "allPlayedEpsWeight");
  if (v2 <= 0.0)
  {

    return 0;
  }
  _StringGuts.grow(_:)(156);
  v3._countAndFlagsBits = 0x6C2065687420664FLL;
  v3._object = (void *)0xEC00000020747361;
  String.append(_:)(v3);
  result = objc_msgSend(v1, "allPlayedEpisodesCount");
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 0xD000000000000020;
  v7._object = (void *)0x80000000003079F0;
  String.append(_:)(v7);
  result = objc_msgSend(v1, "allPlayedEpisodesFromThisShowCount");
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v10 = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v10);
  v11._countAndFlagsBits = 32;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  objc_msgSend(v1, "allPlayedEpisodesFromThisShowCount");
  if (v12 == 1.0)
    v13 = 0x2065646F73697065;
  else
    v13 = 0x7365646F73697065;
  if (v12 == 1.0)
    v14 = 0xEA00000000007369;
  else
    v14 = 0xEC00000065726120;
  v15 = v14;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease(v14);
  v16._object = (void *)0x8000000000307A20;
  v16._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v16);
  v17 = objc_msgSend(v1, "allPlayedEpsPercent");
  v19._countAndFlagsBits = Double.description.getter(v17, round(v18 * 100.0) / 100.0);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  v21._countAndFlagsBits = 0xD00000000000002ELL;
  v21._object = (void *)0x8000000000307A40;
  String.append(_:)(v21);
  v22 = objc_msgSend(v1, "allPlayedEpsWeight");
  v24._countAndFlagsBits = Double.description.getter(v22, round(v23 * 100.0) / 100.0);
  v25 = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v25);
  v26._countAndFlagsBits = 0xD00000000000001BLL;
  v26._object = (void *)0x8000000000307A70;
  String.append(_:)(v26);
  objc_msgSend(v1, "allPlayedEpsPercent");
  v28 = v27;
  v29 = objc_msgSend(v1, "allPlayedEpsWeight");
  v31._countAndFlagsBits = Double.description.getter(v29, round(v28 * v30 * 100.0) / 100.0);
  v32 = v31._object;
  String.append(_:)(v31);

  swift_bridgeObjectRelease(v32);
  return 0;
}

void *sub_10D0C(void *result)
{
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  Swift::String v7;
  id v8;
  double v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  id v13;
  double v14;
  Swift::String v15;
  void *v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;
  void *v20;

  if (result)
  {
    v1 = result;
    objc_msgSend(v1, "modifiedWeight");
    if (v2 <= 0.0)
    {

    }
    else
    {
      objc_msgSend(v1, "modifiedDateScore");
      v4 = v3;
      objc_msgSend(v1, "modifiedWeight");
      v6 = v4 * v5;
      _StringGuts.grow(_:)(102);
      v7._countAndFlagsBits = 0xD00000000000002CLL;
      v7._object = (void *)0x8000000000307980;
      String.append(_:)(v7);
      v8 = objc_msgSend(v1, "modifiedDateScore");
      v10._countAndFlagsBits = Double.description.getter(v8, round(v9 * 100.0) / 100.0);
      object = v10._object;
      String.append(_:)(v10);
      swift_bridgeObjectRelease(object);
      v12._countAndFlagsBits = 0xD00000000000001BLL;
      v12._object = (void *)0x80000000003079B0;
      String.append(_:)(v12);
      v13 = objc_msgSend(v1, "modifiedWeight");
      v15._countAndFlagsBits = Double.description.getter(v13, round(v14 * 100.0) / 100.0);
      v16 = v15._object;
      String.append(_:)(v15);
      swift_bridgeObjectRelease(v16);
      v17._object = (void *)0x80000000003079D0;
      v17._countAndFlagsBits = 0xD000000000000019;
      String.append(_:)(v17);
      v19._countAndFlagsBits = Double.description.getter(v18, round(v6 * 100.0) / 100.0);
      v20 = v19._object;
      String.append(_:)(v19);

      swift_bridgeObjectRelease(v20);
    }
    return 0;
  }
  return result;
}

uint64_t sub_10EB0()
{
  return sub_10EDC(&qword_3D0A70, &qword_3D0A78, (uint64_t)&protocol conformance descriptor for Form<A>);
}

uint64_t sub_10EDC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for WriteReviewViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_3D0AE0;
  if (!qword_3D0AE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WriteReviewViewController);
  return result;
}

uint64_t sub_10F58(uint64_t a1)
{
  _QWORD v2[12];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[5] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[6] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[7] = "\b";
  v2[8] = "\b";
  v2[9] = "\b";
  v2[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[11] = "\b";
  return swift_initClassMetadata2(a1, 0, 12, v2, a1 + qword_3FA900);
}

void sub_10FD8(void *a1)
{
  uint64_t v2;
  id v3;

  v2 = type metadata accessor for WriteReviewViewController(0);
  if (swift_dynamicCastClass(a1, v2))
  {
    v3 = a1;
    sub_11038();

  }
}

void sub_11038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __n128 v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = type metadata accessor for PodcastReview.Metadata(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0B30);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PodcastReview(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v37 - v13;
  v15 = objc_msgSend(*(id *)(v0 + qword_3D0A90), "text");
  if (v15)
  {
    v16 = v15;
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v41 = *(_QWORD *)(v1 + qword_3D0A80);
    WriteReviewPresenter.review.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      swift_bridgeObjectRelease(v18);
      sub_12C54((uint64_t)v7);
    }
    else
    {
      v38 = v18;
      v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
      if ((PodcastReview.nicknameRequired.getter(v19) & 1) != 0)
      {
        v20 = objc_msgSend(*(id *)(v1 + qword_3D0A98), "text");
        if (v20)
        {
          v21 = v20;
          v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
          v37 = v23;

        }
        else
        {
          v22 = 0;
          v37 = 0;
        }
      }
      else
      {
        v22 = PodcastReview.nickname.getter();
        v37 = v24;
      }
      v39 = v12;
      v25 = objc_msgSend(*(id *)(v1 + qword_3D0AA0), "text", v37);
      if (v25)
      {
        v26 = v25;
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v29 = v28;

      }
      else
      {
        v27 = 0;
        v29 = 0xE000000000000000;
      }
      v30 = *(_QWORD *)(v1 + qword_3D0AB8);
      if (v30)
      {
        v31 = *(_QWORD *)(v30 + OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating);
        PodcastReview.metadata.getter();
        v32 = v27;
        v33 = v39;
        PodcastReview.init(title:body:rating:nickname:metadata:)(v40, v38, v32, v29, v31, v22, v37, v4);
        v34 = swift_allocObject(&unk_37B270, 24, 7);
        swift_unknownObjectWeakInit(v34 + 16, v1);
        v35 = swift_retain(v34);
        WriteReviewPresenter.saveReview(_:completion:)(v33, sub_12CB8, v34, v35);
        swift_release(v34);
        v36 = *(void (**)(char *, uint64_t))(v9 + 8);
        v36(v33, v8);
        v36(v14, v8);
        swift_release(v34);
      }
      else
      {
        __break(1u);
        __break(1u);
        __break(1u);
      }
    }
  }
}

void sub_11424(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_131D4();
}

void sub_11448()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  NSString v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  objc_super v46;
  Swift::String v47;

  v1 = v0;
  v46.receiver = v0;
  v46.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v46, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v1, "navigationController");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "navigationBar");

    objc_msgSend(v7, "setPrefersLargeTitles:", 0);
  }
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v47._object = (void *)0xE000000000000000;
  v9._object = (void *)0x8000000000307C40;
  v9._countAndFlagsBits = 0xD000000000000018;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v47._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v47)._object;

  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v12, swift_bridgeObjectRelease(object).n128_f64[0]);

  v13 = *(void **)&v1[qword_3D0AD0];
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setAxis:", 1);
  objc_msgSend(v13, "setSpacing:", 8.0);
  v14 = objc_msgSend(v1, "view");
  if (!v14)
    goto LABEL_9;
  v15 = v14;
  objc_msgSend(v14, "addSubview:", v13);

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v17 = swift_allocObject(v16, 80, 7);
  *(_OWORD *)(v17 + 16) = xmmword_2EFC70;
  v18 = objc_msgSend(v13, "leadingAnchor");
  v19 = (void *)dispatch thunk of ModalSheet.marginGuide.getter();
  v20 = objc_msgSend(v19, "leadingAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v17 + 32) = v21;
  v22 = objc_msgSend(v13, "trailingAnchor");
  v23 = (void *)dispatch thunk of ModalSheet.marginGuide.getter();
  v24 = objc_msgSend(v23, "trailingAnchor");

  v25 = objc_msgSend(v22, "constraintEqualToAnchor:", v24);
  *(_QWORD *)(v17 + 40) = v25;
  v26 = objc_msgSend(v13, "topAnchor");
  v27 = (void *)dispatch thunk of ModalSheet.marginGuide.getter();
  v28 = objc_msgSend(v27, "topAnchor");

  v29 = objc_msgSend(v26, "constraintEqualToAnchor:", v28);
  *(_QWORD *)(v17 + 48) = v29;
  v30 = objc_msgSend(v13, "bottomAnchor");
  v31 = (void *)dispatch thunk of ModalSheet.marginGuide.getter();
  v32 = objc_msgSend(v31, "bottomAnchor");

  v33 = objc_msgSend(v30, "constraintEqualToAnchor:", v32);
  *(_QWORD *)(v17 + 56) = v33;
  v34 = objc_msgSend(v1, "view");
  if (!v34)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, "heightAnchor");

  v37 = objc_msgSend(v36, "constraintEqualToConstant:", *(double *)&v1[qword_3D0AB0]);
  *(_QWORD *)(v17 + 64) = v37;
  v38 = objc_msgSend(v1, "view");
  if (v38)
  {
    v39 = v38;
    v40 = (void *)objc_opt_self(NSLayoutConstraint);
    v41 = objc_msgSend(v39, "widthAnchor");

    v42 = objc_msgSend(v41, "constraintGreaterThanOrEqualToConstant:", *(double *)&v1[qword_3D0AA8]);
    *(_QWORD *)(v17 + 72) = v42;
    specialized Array._endMutation()(v43);
    v44 = v17;
    sub_12D34();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v40, "activateConstraints:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

    sub_11978();
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_11978()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *object;
  id v21;
  id v22;
  NSString v23;
  uint64_t v24;
  void *v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  NSString v33;
  id v34;
  double v35;
  id v36;
  objc_class *v37;
  _BYTE *v38;
  char *v39;
  id v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  double v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  void *v58;
  id v59;
  id v60;
  Swift::String v61;
  Swift::String v62;
  void *v63;
  id v64;
  id v65;
  NSString v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  objc_super v75;
  Swift::String v76;
  Swift::String v77;
  Swift::String v78;

  v1 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = qword_3D0AC8;
  v3 = *(void **)(v0 + qword_3D0AC8);
  *(_QWORD *)(v0 + qword_3D0AC8) = v1;

  v4 = *(void **)(v0 + v2);
  if (!v4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v5 = (void *)objc_opt_self(UIColor);
  v6 = v4;
  v7 = objc_msgSend(v5, "systemRedColor");
  objc_msgSend(v6, "setTextColor:", v7);

  v8 = *(void **)(v0 + v2);
  if (!v8)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = (void *)objc_opt_self(UIFont);
  v10 = v8;
  v11 = objc_msgSend(v9, "systemFontOfSize:", 13.0);
  objc_msgSend(v10, "setFont:", v11);

  v12 = *(void **)(v0 + v2);
  if (!v12)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  objc_msgSend(v12, "setNumberOfLines:", 2);
  v13 = *(void **)(v0 + v2);
  if (!v13)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v13, "setTextAlignment:", 1);
  v14 = *(void **)(v0 + v2);
  if (!v14)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v73 = v5;
  objc_msgSend(v14, "setHidden:", 1);
  if (!*(_QWORD *)(v0 + v2))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v15 = *(void **)(v0 + qword_3D0AD0);
  objc_msgSend(v15, "addArrangedSubview:");
  v16 = (void *)objc_opt_self(NSBundle);
  v17 = objc_msgSend(v16, "mainBundle");
  v76._object = (void *)0xE000000000000000;
  v18._object = (void *)0x8000000000307C60;
  v18._countAndFlagsBits = 0xD000000000000018;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v76._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v76)._object;

  v21 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v22 = objc_msgSend(v9, "systemFontOfSize:", 12.0);
  objc_msgSend(v21, "setFont:", v22);

  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setText:", v23);
  swift_bridgeObjectRelease(object);

  v24 = qword_3D0AC0;
  v25 = *(void **)(v0 + qword_3D0AC0);
  *(_QWORD *)(v0 + qword_3D0AC0) = v21;

  v71 = v16;
  v26 = objc_msgSend(v16, "mainBundle");
  v27._countAndFlagsBits = 0xD000000000000020;
  v77._object = (void *)0xE000000000000000;
  v27._object = (void *)0x8000000000307C80;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v77._countAndFlagsBits = 0;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v77)._object;

  v30 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v72 = v9;
  v31 = objc_msgSend(v9, "systemFontOfSize:", 12.0);
  objc_msgSend(v30, "setFont:", v31);

  v32 = v30;
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setText:", v33);
  swift_bridgeObjectRelease(v29);

  v34 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v34, "setAxis:", 0);
  v35 = *(double *)(v0 + qword_3D0A88);
  objc_msgSend(v34, "setSpacing:", v35);
  if (!*(_QWORD *)(v0 + v24))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(v34, "addArrangedSubview:");
  objc_msgSend(v34, "addArrangedSubview:", v30);
  objc_msgSend(v15, "addArrangedSubview:", v34);
  v36 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v36, "setAxis:", 0);
  objc_msgSend(v36, "setSpacing:", v35);
  v37 = (objc_class *)type metadata accessor for StarRatingControl();
  v38 = objc_allocWithZone(v37);
  *(_QWORD *)&v38[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_starCount] = 5;
  v38[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_hasRTLTransformSet] = 0;
  *(_QWORD *)&v38[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating] = 0;
  *(_QWORD *)&v38[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_lastSentRating] = 0;
  v75.receiver = v38;
  v75.super_class = v37;
  v39 = (char *)objc_msgSendSuper2(&v75, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v40 = objc_msgSend(v73, "clearColor");
  objc_msgSend(v39, "setBackgroundColor:", v40);

  objc_msgSend(v39, "setContentMode:", 3);
  v41 = v36;
  *(_QWORD *)&v39[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating] = 0;
  v42 = qword_3D0AB8;
  v43 = *(void **)(v0 + qword_3D0AB8);
  *(_QWORD *)(v0 + qword_3D0AB8) = v39;

  v44 = *(void **)(v0 + qword_3D0A90);
  objc_msgSend(v41, "addArrangedSubview:", v44);
  if (!*(_QWORD *)(v0 + v42))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  objc_msgSend(v41, "addArrangedSubview:");
  objc_msgSend(v15, "addArrangedSubview:", v41);
  v46 = *(void **)(v0 + v42);
  if (!v46)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v74 = v34;
  LODWORD(v45) = 1144750080;
  objc_msgSend(v46, "setContentHuggingPriority:forAxis:", 0, v45);
  v47 = objc_msgSend(v44, "widthAnchor");
  v48 = *(void **)(v0 + v24);
  if (v48)
  {
    v49 = objc_msgSend(v48, "widthAnchor");
    v50 = objc_msgSend(v47, "constraintEqualToAnchor:", v49);

    objc_msgSend(v50, "setActive:", 1);
    v51 = sub_12600();
    v52 = v51;
    v70 = v41;
    if ((unint64_t)v51 >> 62)
    {
      if (v51 < 0)
        v57 = v51;
      else
        v57 = v51 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v51);
      v53 = _CocoaArrayWrapper.endIndex.getter(v57);
      if (v53)
        goto LABEL_13;
    }
    else
    {
      v53 = *(_QWORD *)((char *)&dword_10 + (v51 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v51);
      if (v53)
      {
LABEL_13:
        if (v53 >= 1)
        {
          v54 = 0;
          do
          {
            if ((v52 & 0xC000000000000001) != 0)
              v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v54, v52);
            else
              v55 = *(id *)(v52 + 8 * v54 + 32);
            v56 = v55;
            ++v54;
            objc_msgSend(v15, "addArrangedSubview:", v55);
            objc_msgSend(v56, "setHidden:", 1);

          }
          while (v53 != v54);
          goto LABEL_23;
        }
        __break(1u);
        goto LABEL_25;
      }
    }
LABEL_23:
    swift_bridgeObjectRelease_n(v52, 2);
    v58 = *(void **)(v0 + qword_3D0AA0);
    v59 = objc_msgSend(v72, "systemFontOfSize:", 13.0);
    objc_msgSend(v58, "setFont:", v59);

    v60 = objc_msgSend(v71, "mainBundle");
    v61._countAndFlagsBits = 0xD000000000000019;
    v78._object = (void *)0xE000000000000000;
    v61._object = (void *)0x8000000000307CB0;
    v62._countAndFlagsBits = 0;
    v62._object = (void *)0xE000000000000000;
    v78._countAndFlagsBits = 0;
    v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v60, v62, v78)._object;

    v64 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v65 = objc_msgSend(v72, "systemFontOfSize:", 12.0);
    objc_msgSend(v64, "setFont:", v65);

    v66 = String._bridgeToObjectiveC()();
    objc_msgSend(v64, "setText:", v66);
    swift_bridgeObjectRelease(v63);

    v67 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    objc_msgSend(v67, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v68 = objc_msgSend(v67, "heightAnchor");
    v69 = objc_msgSend(v68, "constraintEqualToConstant:", 6.0);

    objc_msgSend(v69, "setActive:", 1);
    objc_msgSend(v15, "addArrangedSubview:", v67);

    objc_msgSend(v15, "addArrangedSubview:", v64);
    objc_msgSend(v15, "addArrangedSubview:", v58);

    return;
  }
LABEL_34:
  __break(1u);
}

void sub_12278(void *a1)
{
  id v1;

  v1 = a1;
  sub_11448();

}

void sub_122AC(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  void *object;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0B30);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PodcastReview(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12CEC(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_12C54((uint64_t)v6);
    return;
  }
  v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  if ((PodcastReview.isEmpty.getter(v11) & 1) == 0)
  {
    v12 = *(void **)&a2[qword_3D0A90];
    PodcastReview.title.getter();
    v14 = v13;
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setText:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

    v16 = *(void **)&a2[qword_3D0AA0];
    PodcastReview.body.getter();
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setText:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

    v20 = *(void **)&a2[qword_3D0AB8];
    if (!v20)
      goto LABEL_23;
    v21 = v20;
    v22 = PodcastReview.starRating.getter();
    v23 = *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating];
    *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17StarRatingControl_rating] = v22;
    if (v23 != v22)
      objc_msgSend(v21, "setNeedsDisplay");

    v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v38._object = (void *)0xE000000000000000;
    v25._object = (void *)0x8000000000307C00;
    v25._countAndFlagsBits = 0xD00000000000001DLL;
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v38._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v38)._object;

    v28 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "setTitle:", v28, swift_bridgeObjectRelease(object).n128_f64[0]);

  }
  v29 = sub_12600();
  v30 = v29;
  v37 = v7;
  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0)
      v35 = v29;
    else
      v35 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v29);
    v31 = _CocoaArrayWrapper.endIndex.getter(v35);
    if (v31)
      goto LABEL_10;
  }
  else
  {
    v31 = *(_QWORD *)((char *)&dword_10 + (v29 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v29);
    if (v31)
    {
LABEL_10:
      if (v31 >= 1)
      {
        for (i = 0; i != v31; ++i)
        {
          if ((v30 & 0xC000000000000001) != 0)
            v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v30);
          else
            v33 = *(id *)(v30 + 8 * i + 32);
          v34 = v33;
          objc_msgSend(v33, "setHidden:", (PodcastReview.nicknameRequired.getter() & 1) == 0);

        }
        goto LABEL_20;
      }
      __break(1u);
LABEL_23:
      __break(1u);
      return;
    }
  }
LABEL_20:
  swift_bridgeObjectRelease_n(v30, 2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v37);
}

uint64_t sub_12600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = qword_3D0AD8;
  v2 = *(_QWORD *)(v0 + qword_3D0AD8);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + qword_3D0AD8);
  }
  else
  {
    v3 = sub_12740(v0);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_12664(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType();
  v4 = v10.receiver;
  objc_msgSendSuper2(&v10, "viewWillAppear:", a3);
  v5 = objc_msgSend(v4, "navigationController", v10.receiver, v10.super_class);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setNavigationBarHidden:animated:", 1, 0);

  }
  v7 = swift_allocObject(&unk_37B298, 24, 7);
  *(_QWORD *)(v7 + 16) = v4;
  v8 = v4;
  WriteReviewPresenter.fetchExistingReview(completion:)(sub_12CE4, v7);

  return swift_release(v7);
}

uint64_t sub_12740(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  id v11;
  id v12;
  NSString v13;
  void *v14;
  uint64_t v15;
  id v16;
  Swift::String v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v3 = swift_allocObject(v2, 56, 7);
  *(_OWORD *)(v3 + 16) = xmmword_2EFC80;
  v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v4, "heightAnchor");
  v6 = objc_msgSend(v5, "constraintEqualToConstant:", 6.0);

  objc_msgSend(v6, "setActive:", 1);
  *(_QWORD *)(v3 + 32) = v4;
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v18._object = (void *)0xE000000000000000;
  v8._object = (void *)0x8000000000307C20;
  v8._countAndFlagsBits = 0xD00000000000001BLL;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v18._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v18)._object;

  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 12.0);
  objc_msgSend(v11, "setFont:", v12);

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setText:", v13);
  swift_bridgeObjectRelease(object);

  v14 = *(void **)(a1 + qword_3D0A98);
  *(_QWORD *)(v3 + 40) = v11;
  *(_QWORD *)(v3 + 48) = v14;
  specialized Array._endMutation()(v15);
  v16 = v14;
  return v3;
}

void sub_1293C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *Strong;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  void *v17;
  _QWORD v18[3];
  char v19[8];
  _BYTE v20[24];

  v3 = a3 + 16;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess(a3 + 16, v20, 0, 0);
    Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
    if (!Strong)
      return;
    v5 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);
    goto LABEL_11;
  }
  swift_beginAccess(a3 + 16, v20, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v3);
  if (!v7)
    return;
  v5 = (char *)v7;
  if (!a2)
  {
    v17 = *(void **)(v7 + qword_3D0AC8);
    if (v17)
    {
      objc_msgSend(v17, "setHidden:", 1);
      goto LABEL_11;
    }
LABEL_15:
    __break(1u);
    return;
  }
  v8 = qword_3D0AC8;
  v9 = *(void **)(v7 + qword_3D0AC8);
  if (!v9)
  {
    __break(1u);
    goto LABEL_14;
  }
  swift_getErrorValue(a2, v19, v18);
  v10 = v18[1];
  v11 = v18[2];
  v12 = v9;
  swift_errorRetain(a2);
  Error.localizedDescription.getter(v10, v11);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v12, "setText:", v15);

  v16 = *(void **)&v5[v8];
  if (!v16)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v16, "setHidden:", 0);
  swift_errorRelease(a2);
LABEL_11:

}

void sub_12AA8(void *a1)
{
  id v1;

  v1 = a1;
  sub_11038();

}

void sub_12ADC()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.WriteReviewViewController", 49, "init(actions:)", 14, 0);
  __break(1u);
}

uint64_t sub_12B08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_3D0A80));

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_3D0AD8));
}

uint64_t sub_12BA4(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_3D0A80));

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_3D0AD8));
}

uint64_t sub_12C4C()
{
  return type metadata accessor for WriteReviewViewController(0);
}

uint64_t sub_12C54(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0B30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_12C94()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_12CB8(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1293C(a1, a2, v2);
}

uint64_t sub_12CC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_12CE4(uint64_t a1)
{
  uint64_t v1;

  sub_122AC(a1, *(char **)(v1 + 16));
}

uint64_t sub_12CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_12D34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2FA0;
  if (!qword_3D2FA0)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D2FA0);
  }
  return result;
}

id sub_12D70()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)UITextField), "init");
  objc_msgSend(v0, "setBorderStyle:", 2);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v0, "setInsertionPointColor:", v1);

  v2 = objc_msgSend(v0, "heightAnchor");
  v3 = objc_msgSend(v2, "constraintEqualToConstant:", 28.0);

  objc_msgSend(v3, "setActive:", 1);
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 13.0);
  objc_msgSend(v0, "setFont:", v4);

  return v0;
}

uint64_t sub_12EA4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  void (*v19)(char *, _QWORD, uint64_t);
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;

  v3 = type metadata accessor for ModalSheet.Action.ActionType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[qword_3D0A88] = 0x4034000000000000;
  v7 = qword_3D0AA0;
  v8 = type metadata accessor for MacTextView(0);
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
  v10 = v1;
  *(_QWORD *)&v1[v7] = objc_msgSend(v9, "init");
  *(_QWORD *)&v10[qword_3D0AA8] = 0x4072C00000000000;
  *(_QWORD *)&v10[qword_3D0AB0] = 0x4079000000000000;
  *(_QWORD *)&v10[qword_3D0AB8] = 0;
  *(_QWORD *)&v10[qword_3D0AC0] = 0;
  *(_QWORD *)&v10[qword_3D0AC8] = 0;
  v11 = qword_3D0AD0;
  *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v10[qword_3D0AD8] = 0;
  *(_QWORD *)&v10[qword_3D0A90] = sub_12D70();
  *(_QWORD *)&v10[qword_3D0A98] = sub_12D70();
  *(_QWORD *)&v10[qword_3D0A80] = a1;
  swift_retain(a1);

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v13 = swift_allocObject(v12, 48, 7);
  *(_OWORD *)(v13 + 16) = xmmword_2EFC90;
  v14 = (void *)objc_opt_self(NSBundle);
  v15 = objc_msgSend(v14, "mainBundle");
  v16._countAndFlagsBits = 0xD000000000000013;
  v29._object = (void *)0xE000000000000000;
  v16._object = (void *)0x8000000000307D90;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 0;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v29);

  v19 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
  v19(v6, enum case for ModalSheet.Action.ActionType.cancel(_:), v3);
  v20 = type metadata accessor for ModalSheet.Action(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  *(_QWORD *)(v13 + 32) = ModalSheet.Action.init(title:type:handler:)(v18._countAndFlagsBits, v18._object, v6, 0, 0);
  v21 = objc_msgSend(v14, "mainBundle");
  v30._object = (void *)0xE000000000000000;
  v22._object = (void *)0x8000000000307DB0;
  v22._countAndFlagsBits = 0xD000000000000011;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v30);

  v19(v6, enum case for ModalSheet.Action.ActionType.primary(_:), v3);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v25 = ModalSheet.Action.init(title:type:handler:)(v24._countAndFlagsBits, v24._object, v6, sub_10FD8, 0);
  *(_QWORD *)(v13 + 40) = v25;
  v28 = v13;
  specialized Array._endMutation()(v25);
  return ModalSheet.init(actions:)(v28);
}

void sub_131D4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)&v0[qword_3D0A88] = 0x4034000000000000;
  v1 = qword_3D0AA0;
  v2 = type metadata accessor for MacTextView(0);
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  *(_QWORD *)&v0[qword_3D0AA8] = 0x4072C00000000000;
  *(_QWORD *)&v0[qword_3D0AB0] = 0x4079000000000000;
  *(_QWORD *)&v0[qword_3D0AB8] = 0;
  *(_QWORD *)&v0[qword_3D0AC0] = 0;
  *(_QWORD *)&v0[qword_3D0AC8] = 0;
  v3 = qword_3D0AD0;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v0[qword_3D0AD8] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/WriteReviewViewController.swift", 55, 2, 53, 0);
  __break(1u);
}

id sub_132E4(uint64_t a1)
{
  _BYTE *v1;
  id v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  char *v13;
  __int128 v14;
  __int128 v15;
  id v16;
  id v17;
  id v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  objc_super v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[40];

  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressStyle] = 1;
  *(_DWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progress] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_playing] = 0;
  v3 = objc_allocWithZone((Class)UIColor);
  v4 = v1;
  v5 = objc_msgSend(v3, "initWithWhite:alpha:", 0.0, 0.1);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v7 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.2);
  v27 = xmmword_2EFD00;
  *(_QWORD *)&v28 = v5;
  *((_QWORD *)&v28 + 1) = v6;
  *(_QWORD *)v29 = v7;
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)&v29[8] = _Q0;
  *(_OWORD *)&v29[24] = _Q0;
  v13 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressBarSettings];
  v14 = *(_OWORD *)&v29[16];
  *((_OWORD *)v13 + 2) = *(_OWORD *)v29;
  *((_OWORD *)v13 + 3) = v14;
  *((_QWORD *)v13 + 8) = *(_QWORD *)&v29[32];
  v15 = v28;
  *(_OWORD *)v13 = v27;
  *((_OWORD *)v13 + 1) = v15;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  v19 = sub_1389C0(0);

  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressView] = v19;
  v26.receiver = v4;
  v26.super_class = (Class)type metadata accessor for ArtworkProgressBarOverlay();
  v20 = objc_msgSendSuper2(&v26, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = (void *)objc_opt_self(NSNotificationCenter);
  v22 = v20;
  v23 = objc_msgSend(v21, "defaultCenter");
  v24 = v22;
  objc_msgSend(v23, "addObserver:selector:name:object:", v24, "updateProgressViewOpacity", UIAccessibilityReduceTransparencyStatusDidChangeNotification, 0);

  swift_release(a1);
  return v24;
}

char *sub_13584(float a1)
{
  uint64_t v1;
  char *result;
  float *v3;

  *(float *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progress) = a1;
  result = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressView);
  if (a1 <= 0.0)
    a1 = 0.0;
  if (a1 > 1.0)
    a1 = 1.0;
  v3 = (float *)&result[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView__progress];
  if ((result[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView__progress + 4] & 1) != 0
    || vabds_f32(*v3, a1) >= COERCE_FLOAT(1))
  {
    *v3 = a1;
    *((_BYTE *)v3 + 4) = 0;
    return (char *)objc_msgSend(result, "setNeedsLayout");
  }
  return result;
}

void sub_135F8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  double *v4;
  double v5;
  double v6;
  id v7;
  char v8;
  void *v9;
  int v10;
  double v11;
  double v12;
  double v13;
  CGFloat v14;
  double *v15;
  CGFloat v16;
  id v17;
  void *v18;
  char *v19;
  id v20;
  uint64_t v21;
  char v22[24];
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressView;
  v3 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressView];
  v4 = (double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight];
  *(_QWORD *)&v5 = swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight], v22, 0, 0).n128_u64[0];
  v6 = *v4;
  objc_msgSend(v3, "frame", v5);
  v26.origin.x = 0.0;
  v26.origin.y = 0.0;
  v26.size.width = 0.0;
  v26.size.height = 0.0;
  if (CGRectEqualToRect(v23, v26)
    || (v7 = objc_msgSend(v1, "traitCollection"),
        v8 = UITraitCollection.interfaceIdiomIsMac.getter(),
        v7,
        (v8 & 1) != 0))
  {
    v9 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v9, "begin");
    v10 = 1;
    objc_msgSend(v9, "setDisableActions:", 1);
  }
  else
  {
    v10 = 0;
  }
  v11 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressBarSettings + 48];
  v12 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressBarSettings + 56];
  v13 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressBarSettings + 64];
  objc_msgSend(v1, "bounds");
  v14 = CGRectGetMaxY(v24) - v12;
  v15 = (double *)(*(_QWORD *)&v1[v2] + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_barHeight);
  swift_beginAccess(v15, &v21, 0, 0);
  v16 = v14 - *v15;
  objc_msgSend(v1, "bounds");
  objc_msgSend(*(id *)&v1[v2], "setFrame:", v11, v16, CGRectGetMaxY(v25) - (v11 + v13), v6);
  v17 = objc_msgSend(*(id *)&v1[v2], "superview");
  if (!v17)
    goto LABEL_7;
  v18 = v17;
  sub_FA88();
  v19 = v1;
  v20 = v18;
  LOBYTE(v18) = static NSObject.== infix(_:_:)();

  if ((v18 & 1) == 0)
LABEL_7:
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v2]);
  objc_msgSend(v1, "bringSubviewToFront:", *(_QWORD *)&v1[v2]);
  sub_13868();
  if (v10)
    objc_msgSend((id)objc_opt_self(CATransaction), "commit");
}

void sub_13868()
{
  uint64_t v0;
  _BOOL4 IsReduceTransparencyEnabled;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  id *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id *v17;
  id v18;
  id v19;
  char *v20;
  void *v21;
  id v22;
  void *v23;
  _BYTE v24[24];

  IsReduceTransparencyEnabled = UIAccessibilityIsReduceTransparencyEnabled();
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressView;
  v3 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressView);
  v4 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressBarSettings;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressBarSettings + 16);
  if (IsReduceTransparencyEnabled)
  {
    v6 = v3;
    v7 = objc_msgSend(v5, "colorWithAlphaComponent:", 1.0);
    v8 = (id *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor];
    swift_beginAccess(&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor], v24, 1, 0);
    v9 = *v8;
    *v8 = v7;
    v10 = v7;

    v11 = *(void **)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer];
    v12 = objc_msgSend(*v8, "CGColor");
    objc_msgSend(v11, "setFillColor:", v12);

    v13 = *(void **)(v4 + 32);
    v14 = *(id *)(v0 + v2);
    v15 = objc_msgSend(v13, "colorWithAlphaComponent:", 1.0);
    v16 = v15;
  }
  else
  {
    v17 = (id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor];
    swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_trackColor], v24, 1, 0);
    v18 = *v17;
    *v17 = v5;
    v19 = v5;
    v20 = v3;

    v21 = *(void **)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodePlayProgressView_backgroundShapeLayer];
    v22 = objc_msgSend(*v17, "CGColor");
    objc_msgSend(v21, "setFillColor:", v22);

    v23 = *(void **)(v4 + 32);
    v14 = *(id *)(v0 + v2);
    v16 = v23;
    v15 = v23;
  }
  sub_183C30(v15);

}

void sub_13AB0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressBarSettings + 16);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressBarSettings + 24);

}

id sub_13AFC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkProgressBarOverlay();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ArtworkProgressBarOverlay()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay);
}

uint64_t sub_13B9C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_progressStyle);
}

char *sub_13BB0(float a1)
{
  return sub_13584(a1);
}

uint64_t sub_13BD0(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25ArtworkProgressBarOverlay_playing) = result;
  return result;
}

ValueMetadata *type metadata accessor for WrappingLabelLayout()
{
  return &type metadata for WrappingLabelLayout;
}

void sub_13BF4(void *a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double MinY;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unsigned __int128 v25;
  unsigned __int128 v26;
  void *v27;
  unint64_t v28;
  id v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double v38;
  id v39;
  double v40;
  double v41;
  id v42;
  double v43;
  double v44;
  id v45;
  double v46;
  double v47;
  id v48;
  double v49;
  int v50;
  double v51;
  void (*v52)(char *, uint64_t);
  CGFloat v53;
  CGFloat v54;
  unsigned __int128 v55;
  unsigned __int128 v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int16 v75;
  id v76;
  char v77;
  uint64_t v78;
  id v79;
  double v80;
  double v81;
  void (*v82)(uint64_t, uint64_t);
  double v83;
  uint64_t v84;
  id v85;
  id v86;
  double v87;
  double v88;
  id v89;
  double v90;
  double v91;
  double Width;
  CGFloat v93;
  CGFloat v94;
  double Height;
  CGFloat v96;
  double v97;
  double v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  unsigned __int128 v102;
  unsigned __int128 v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  unsigned __int16 v107;
  uint64_t v108;
  unsigned int v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  id v114;
  uint64_t v115;
  CGFloat v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  CGFloat v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  CGFloat v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  CGFloat v133;
  CGFloat v134;
  double v135;
  unsigned int v136;
  void (*v137)(uint64_t, uint64_t);
  void *v138;
  double MinX;
  void (*v140)(char *, _QWORD, uint64_t);
  double v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  double v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int16 v157;
  __int128 v158;
  __int128 v159;
  unsigned __int128 v160;
  unsigned __int128 v161;
  __int128 v162;
  __int128 v163;
  _BYTE v164[28];
  CGRect v165;
  CGRect v166;
  CGRect v167;
  CGRect v168;
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;

  v114 = a1;
  v11 = type metadata accessor for FloatingPointRoundingRule(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v113 = (char *)&v108 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v108 - v18;
  v133 = a3;
  v165.origin.x = a3;
  v134 = a4;
  v165.origin.y = a4;
  v141 = a5;
  v165.size.width = a5;
  v165.size.height = a6;
  MinY = CGRectGetMinY(v165);
  v21 = *(_QWORD *)(a2 + 16);
  if (v21)
  {
    swift_bridgeObjectRetain(a2);
    v22 = *(_OWORD *)(a2 + 48);
    v158 = *(_OWORD *)(a2 + 32);
    v23 = *(_OWORD *)(a2 + 96);
    v24 = *(_OWORD *)(a2 + 128);
    v163 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)v164 = v24;
    *(_OWORD *)&v164[12] = *(_OWORD *)(a2 + 140);
    v25 = *(_OWORD *)(a2 + 64);
    v26 = *(_OWORD *)(a2 + 80);
    v159 = v22;
    v160 = v25;
    v161 = v26;
    v162 = v23;
    v27 = (void *)v158;
    sub_14684((uint64_t)&v158);
    v28 = (unint64_t)objc_msgSend(v27, "numberOfLines");
    v29 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
    if ((v28 & 0x8000000000000000) == 0)
    {
      v30 = v29;
      v142 = 160;
      v136 = enum case for FloatingPointRoundingRule.awayFromZero(_:);
      v109 = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
      v135 = 0.0;
      v112 = a2;
      v132 = v12;
      v111 = v14;
      v110 = v19;
      v108 = v11;
      do
      {
        objc_msgSend(v30, "setMaximumNumberOfLines:", v28, v108);
        objc_msgSend(v30, "setWrapsForTruncationMode:", v28 != 1);
        sub_21B824(v27, v30, v141, a6);
        v32 = v31;
        v34 = v33;
        v36 = v35;
        v38 = v37;
        v140 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
        v140(v19, v136, v11);
        v39 = objc_msgSend(v27, "traitCollection");
        objc_msgSend(v39, "displayScale");
        v41 = v40;
        if (v40 < COERCE_DOUBLE(1))
        {
          v42 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
          objc_msgSend(v42, "scale");
          v41 = v43;

        }
        v44 = CGFloat.rounded(_:toScale:)((uint64_t)v19, v41, v36);

        v45 = objc_msgSend(v27, "traitCollection");
        objc_msgSend(v45, "displayScale");
        v47 = v46;
        if (v46 < COERCE_DOUBLE(1))
        {
          v48 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
          objc_msgSend(v48, "scale");
          v47 = v49;

        }
        v50 = v164[27];
        v51 = CGFloat.rounded(_:toScale:)((uint64_t)v19, v47, v38);

        v52 = *(void (**)(char *, uint64_t))(v12 + 8);
        v52(v19, v11);
        if (v50 == 1 && !objc_msgSend(v27, "numberOfLines"))
          goto LABEL_14;
        if (v164[26] != 1)
          goto LABEL_16;
        v166.origin.x = v32;
        v166.origin.y = v34;
        v166.size.width = v44;
        v166.size.height = v51;
        if (CGRectGetWidth(v166) < COERCE_DOUBLE(1))
          goto LABEL_14;
        v167.origin.x = v32;
        v167.origin.y = v34;
        v167.size.width = v44;
        v167.size.height = v51;
        if (CGRectGetHeight(v167) < COERCE_DOUBLE(1)
          || (v168.origin.x = v32,
              v168.origin.y = v34,
              v168.size.width = v44,
              v168.size.height = v51,
              a6 < CGRectGetHeight(v168)))
        {
LABEL_14:
          objc_msgSend(v27, "setHidden:", 1);
          sub_147CC((uint64_t)&v158);
          if (!--v21)
            goto LABEL_23;
        }
        else
        {
LABEL_16:
          v137 = (void (*)(uint64_t, uint64_t))v52;
          v129 = v51;
          v120 = v44;
          v53 = v34;
          v54 = v32;
          v130 = MinY;
          v131 = v21;
          v121 = *((_QWORD *)&v158 + 1);
          v122 = v159;
          LODWORD(v123) = BYTE8(v159);
          v55 = v160;
          v56 = v161;
          v57 = *((_QWORD *)&v162 + 1);
          v115 = v162;
          v58 = v27;
          v59 = *((_QWORD *)&v163 + 1);
          v138 = (void *)v163;
          v60 = *(_QWORD *)v164;
          v61 = *(_QWORD *)&v164[8];
          v62 = *(_QWORD *)&v164[16];
          v63 = *(unsigned __int16 *)&v164[24];
          v128 = v58;
          objc_msgSend(v58, "firstBaselineFromTop");
          v65 = v64;
          v124 = v63;
          v107 = v63;
          v125 = v62;
          v126 = v61;
          v127 = v60;
          v106 = v60;
          *(_QWORD *)&MinX = v55 >> 64;
          v66 = v55;
          v67 = v115;
          v68 = v57;
          v69 = v138;
          sub_1472C((id)v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v115, v68, v138, v59, v106, v61, v62, v107);
          if (qword_3CFAB0 != -1)
            swift_once(&qword_3CFAB0, sub_1DD388);
          v11 = v108;
          v70 = __swift_project_value_buffer(v108, (uint64_t)qword_3FCFB0);
          v71 = (uint64_t)v113;
          (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v113, v70, v11);
          v143 = v121;
          v144 = v122;
          v145 = v123;
          v118 = (id)v55;
          v146 = v55;
          v147 = MinX;
          v119 = v56;
          v117 = v56 >> 64;
          v148 = v56;
          v149 = *((_QWORD *)&v56 + 1);
          v150 = v67;
          v151 = v68;
          v152 = v69;
          v153 = v59;
          v72 = v127;
          v154 = v127;
          v73 = v126;
          v155 = v126;
          v74 = v125;
          v156 = v125;
          v75 = v124;
          v157 = v124;
          v76 = objc_msgSend(v114, "traitCollection");
          v123 = v59;
          v77 = v68;
          v78 = v67;
          v79 = v76;
          sub_1DD06C((uint64_t)v76, v71, 0);
          v81 = v80;

          v82 = v137;
          v137(v71, v11);
          sub_14788(v118, *(uint64_t *)&MinX, v119, v117, v78, v77, v138, v123, v72, v73, v74, v75);
          v169.origin.x = v133;
          v169.origin.y = v134;
          v169.size.width = v141;
          v83 = a6;
          v169.size.height = a6;
          MinX = CGRectGetMinX(v169);
          v84 = (uint64_t)v111;
          v140(v111, v109, v11);
          v85 = v128;
          v86 = objc_msgSend(v128, "traitCollection");
          objc_msgSend(v86, "displayScale");
          v88 = v87;
          if (v87 < COERCE_DOUBLE(1))
          {
            v89 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
            objc_msgSend(v89, "scale");
            v88 = v90;

            v82 = v137;
          }
          v91 = CGFloat.rounded(_:toScale:)(v84, v88, v130 - v135 + v81 - v65);

          v82(v84, v11);
          v170.origin.x = v133;
          v170.origin.y = v134;
          v170.size.width = v141;
          v170.size.height = a6;
          Width = CGRectGetWidth(v170);
          v171.origin.x = v54;
          v116 = v53;
          v171.origin.y = v53;
          v93 = v120;
          v171.size.width = v120;
          v94 = v129;
          v171.size.height = v129;
          Height = CGRectGetHeight(v171);
          v96 = MinX;
          objc_msgSend(v85, "setFrame:", MinX, v91, Width, Height);
          objc_msgSend(v85, "setHidden:", 0);
          objc_msgSend(v85, "lastBaselineFromBottom");
          v135 = v97;
          v172.origin.x = v96;
          v172.origin.y = v91;
          v172.size.width = Width;
          v172.size.height = Height;
          MinY = CGRectGetMaxY(v172);
          v173.origin.x = v54;
          v173.origin.y = v116;
          v173.size.width = v93;
          v173.size.height = v94;
          v98 = CGRectGetHeight(v173);
          sub_147CC((uint64_t)&v158);
          a6 = v83 - v98;
          a2 = v112;
          v12 = v132;
          v19 = v110;
          v21 = v131 - 1;
          if (v131 == 1)
          {
LABEL_23:
            swift_bridgeObjectRelease(a2);
            return;
          }
        }
        v99 = *(_OWORD *)(a2 + v142 + 16);
        v158 = *(_OWORD *)(a2 + v142);
        v100 = *(_OWORD *)(a2 + v142 + 64);
        v101 = *(_OWORD *)(a2 + v142 + 96);
        v163 = *(_OWORD *)(a2 + v142 + 80);
        *(_OWORD *)v164 = v101;
        *(_OWORD *)&v164[12] = *(_OWORD *)(a2 + v142 + 108);
        v102 = *(_OWORD *)(a2 + v142 + 32);
        v103 = *(_OWORD *)(a2 + v142 + 48);
        v159 = v99;
        v160 = v102;
        v104 = v142 + 128;
        v161 = v103;
        v162 = v100;
        v27 = (void *)v158;
        sub_14684((uint64_t)&v158);
        v28 = (unint64_t)objc_msgSend(v27, "numberOfLines");
        v30 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
        v142 = v104;
      }
      while ((v28 & 0x8000000000000000) == 0);
    }
    LOBYTE(v105) = 2;
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v105, 3451, 0);
    __break(1u);
  }
}

uint64_t sub_14684(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  id v11;
  __int128 v13;
  void *v14;

  v2 = *(_QWORD *)(a1 + 40);
  v14 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(void **)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 88);
  v13 = *(_OWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 112);
  v10 = *(_WORD *)(a1 + 120);
  v11 = *(id *)a1;
  sub_1472C(v14, v2, v3, v4, v5, v6, v7, v8, v13, *((uint64_t *)&v13 + 1), v9, v10);
  return a1;
}

id sub_1472C(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int16 a12)
{
  unsigned int v12;

  v12 = a12 >> 14;
  if (v12 == 2)
    return sub_DDA0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (unsigned __int16)(a12 & 0x1FF) >> 8);
  if (v12 <= 1)
    return result;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

void sub_14788(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int16 a12)
{
  unsigned int v12;

  v12 = a12 >> 14;
  if (v12 == 2)
  {
    sub_DCC8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (unsigned __int16)(a12 & 0x1FF) >> 8);
  }
  else if (v12 <= 1)
  {

  }
}

uint64_t sub_147CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  __int128 v12;
  void *v13;

  v2 = *(_QWORD *)(a1 + 40);
  v13 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(void **)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 88);
  v12 = *(_OWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 112);
  v10 = *(_WORD *)(a1 + 120);

  sub_14788(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

double sub_14874(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  double v21;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
    return *(double *)&a1;
  v10 = swift_retain(a1);
  v11 = static os_log_type_t.fault.getter(v10);
  v12 = static Log.runtimeIssuesLog.getter();
  v13 = v11;
  if (os_log_type_enabled(v12, v11))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v19 = a2;
    v16 = v15;
    v21 = *(double *)&v15;
    *(_DWORD *)v14 = 136315138;
    v20 = sub_37E78(0x657A69534743, 0xE600000000000000, (uint64_t *)&v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    _os_log_impl(&dword_0, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    v17 = v16;
    a2 = v19;
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(&v21, v9, a1);
  sub_A3A4(a1, a2, 0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v21;
}

uint64_t sub_14A44@<X0>(_QWORD *a1@<X8>)
{
  return sub_14C98(&qword_3D05B0, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_14A78(uint64_t a1, char a2)
{
  return sub_154EC(a1, a2, 0x656A624F65736142, 0xEF68706172477463);
}

uint64_t sub_14A9C(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v14 = a1;
  }
  else
  {
    v8 = swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v17 = v13;
      *(_DWORD *)v12 = 136315138;
      v16 = sub_37E78(0xD000000000000026, 0x8000000000307F50, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
      _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(&v17, v7, a1);
    sub_15E9C(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v17;
  }
  return (uint64_t)a1;
}

uint64_t sub_14C64@<X0>(_QWORD *a1@<X8>)
{
  return sub_14C98(&qword_3D0ED0, (uint64_t (*)(_QWORD))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_14C98@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v21;
  os_log_type_t v22;
  NSObject *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_D184(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v19 = a2(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a5, v17, v19);
  }
  else
  {
    v21 = *v17;
    v22 = static os_log_type_t.fault.getter(v18);
    v23 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v23, v22))
    {
      v29 = a4;
      v24 = swift_slowAlloc(12, -1);
      v30 = a5;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc(32, -1);
      v33 = v26;
      *(_DWORD *)v25 = 136315138;
      v32 = sub_37E78(v31, v29, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      _os_log_impl(&dword_0, v23, v22, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      v27 = v25;
      a5 = v30;
      swift_slowDealloc(v27, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(a5, v14, v21);
    swift_release(v21);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_14ED0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    swift_unknownObjectRetain(a1);
  }
  else
  {
    v10 = swift_retain(a1);
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      v17 = v14 + 4;
      v18 = sub_37E78(0x75526E6F69746341, 0xEC00000072656E6ELL, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
      _os_log_impl(&dword_0, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(&v19, v9, a1);
    sub_19BF4(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v19;
  }
  return a1;
}

uint64_t sub_150AC@<X0>(_QWORD *a1@<X8>)
{
  return sub_14C98(&qword_3D0DE8, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_150E0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain(a1);
  if ((a2 & 1) == 0)
  {
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v16 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = sub_37E78(0xD00000000000001BLL, 0x8000000000307F80, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
      _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(&v16, v7, a1);
    j__swift_release(a1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v16;
  }
  return a1;
}

uint64_t sub_152A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  __n128 v11;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED8);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_D184(v2, (uint64_t)v10, &qword_3D0ED8);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
    return sub_D210((uint64_t)v10, (uint64_t)a1, &qword_3D0EE0);
  v13 = *v10;
  v14 = static os_log_type_t.fault.getter(v11);
  v15 = static Log.runtimeIssuesLog.getter();
  v16 = v14;
  if (os_log_type_enabled(v15, v14))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v23 = a1;
    v19 = v18;
    v25 = v18;
    *(_DWORD *)v17 = 136315138;
    v24 = sub_37E78(0xD00000000000001BLL, 0x8000000000307FA0, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    _os_log_impl(&dword_0, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    v20 = v19;
    a1 = v23;
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(a1, v7, v13);
  v21 = swift_release(v13);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v21);
}

uint64_t sub_154D0(uint64_t a1, char a2)
{
  return sub_154EC(a1, a2, 0xD000000000000018, 0x8000000000307FC0);
}

uint64_t sub_154EC(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = type metadata accessor for EnvironmentValues(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_retain(a1);
  if ((a2 & 1) == 0)
  {
    v13 = static os_log_type_t.fault.getter(v12);
    v14 = static Log.runtimeIssuesLog.getter();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v22 = a4;
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v18 = a3;
      v19 = v17;
      v24 = v17;
      *(_DWORD *)v16 = 136315138;
      v23 = sub_37E78(v18, v22, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
      _os_log_impl(&dword_0, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(&v24, v11, a1);
    swift_release(a1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v24;
  }
  return a1;
}

uint64_t sub_156A8@<X0>(_QWORD *a1@<X8>)
{
  return sub_14C98(&qword_3D0DE0, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

double sub_156D8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  double v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = *(double *)&v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_37E78(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(&v16, v7, a1);
  sub_19BE8(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

BOOL static MacButton.Fill.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

_UNKNOWN **static CircleLockupView.Spec.allCases.getter()
{
  return &off_379B38;
}

void sub_158B8(_QWORD *a1@<X8>)
{
  *a1 = &off_379B38;
}

void sub_158C8(unsigned __int8 *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a1;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  *(_BYTE *)(a3 + 48) = 1;
  v6 = type metadata accessor for CircleLockupView.Metrics(0);
  *(_QWORD *)(a3 + *(int *)(v6 + 48)) = 0x4020000000000000;
  *(_QWORD *)(a3 + *(int *)(v6 + 52)) = 0x4024000000000000;
  *(_BYTE *)a3 = a2;
  __asm { BR              X9 }
}

uint64_t sub_15940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)(v0 + 1) = 1;
  *(_QWORD *)(v0 + 8) = 0x4050000000000000;
  v2 = v0 + *(int *)(v1 + 40);
  v3 = enum case for Font.TextStyle.footnote(_:);
  v4 = ((uint64_t (*)(_QWORD))type metadata accessor for Font.TextStyle)(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104);
  v6(v2, v3, v4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v0 + *(int *)(v1 + 44), v3, v4);
}

uint64_t sub_15B80()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = *v0;
  v2 = type metadata accessor for CircleLockupView(0);
  if (v1 != 1)
  {
    v4 = (_QWORD *)LegacyLockup.subtitles.getter();
    if (v4)
    {
      v5 = v4;
      if (v4[2])
      {
        v3 = v4[4];
        swift_bridgeObjectRetain(v4[5]);
        swift_bridgeObjectRelease(v5);
        return v3;
      }
      swift_bridgeObjectRelease(v4);
    }
    return 0;
  }
  return LegacyLockup.title.getter(v2);
}

uint64_t CircleLockupView.body.getter@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  id v14;
  char v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];

  v2 = v1;
  v31 = a1;
  v32 = type metadata accessor for AccessibilityTraits(0);
  v30 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v26 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for AccessibilityChildBehavior(0);
  v27 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0B88);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0B90);
  v28 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CircleLockupView(0);
  v13 = &v1[*(int *)(v12 + 24)];
  v14 = *(id *)v13;
  v15 = v13[8];
  sub_15E90(*(id *)v13, v15);
  v16 = (char *)sub_14A9C(v14, v15);
  sub_15E9C(v14, v15);
  if (v16)
  {
    v17 = Namespace.wrappedValue.getter(*(_QWORD *)&v2[*(int *)(v12 + 28)]);
    v18 = &v16[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_transitionNamespace];
    *(_QWORD *)v18 = v17;
    v18[8] = 0;

  }
  v19 = sub_15EA8(v2, (uint64_t)v8);
  static AccessibilityChildBehavior.combine.getter(v19);
  v20 = sub_16764();
  View.accessibilityElement(children:)(v5, v6, v20);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v29);
  v21 = sub_D1D4((uint64_t)v8, &qword_3D0B88);
  v22 = v26;
  static AccessibilityTraits.isButton.getter(v21);
  v33[0] = v6;
  v33[1] = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v33, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityAddTraits(_:)(v22, v9, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v11, v9);
}

uint64_t type metadata accessor for CircleLockupView(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D0CC8, (uint64_t)&nominal type descriptor for CircleLockupView);
}

id sub_15E90(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain(a1);
}

void sub_15E9C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release(a1);
}

uint64_t sub_15EA8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t KeyPath;
  _QWORD *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  int v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  double v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v139 = a2;
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E00);
  __chkstk_darwin(v138);
  v137 = (uint64_t)&v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v135);
  v127 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E08);
  __chkstk_darwin(v132);
  v134 = (uint64_t)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C08);
  __chkstk_darwin(v6);
  v8 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0BF8);
  v9 = __chkstk_darwin(v140);
  v124 = (uint64_t)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v126 = (char *)&v118 - v12;
  __chkstk_darwin(v11);
  v125 = (char *)&v118 - v13;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0BE8);
  __chkstk_darwin(v128);
  v130 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0BD8);
  __chkstk_darwin(v129);
  v131 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0BC0);
  __chkstk_darwin(v133);
  v17 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E10);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0BB8);
  v22 = __chkstk_darwin(v136);
  v24 = (char *)&v118 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v118 - v26;
  v28 = a1[1];
  *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v25);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E18);
  v30 = a1;
  sub_16A8C(a1, (uint64_t)&v8[*(int *)(v29 + 44)]);
  KeyPath = swift_getKeyPath(&unk_2F00B0);
  if (v28 == 1)
  {
    v120 = v17;
    v121 = v24;
    v122 = v21;
    v123 = v19;
    v124 = v18;
    v126 = v27;
    v32 = v127;
    v33 = v125;
    sub_D184((uint64_t)v8, (uint64_t)v125, &qword_3D0C08);
    v34 = &v33[*(int *)(v140 + 36)];
    *(_QWORD *)v34 = KeyPath;
    v34[8] = 1;
    v35 = sub_D1D4((uint64_t)v8, &qword_3D0C08);
    v36 = static Edge.Set.top.getter(v35);
    v37 = static Edge.Set.leading.getter();
    v38 = static Edge.Set.trailing.getter();
    v39 = Edge.Set.init(rawValue:)(0);
    v40 = Edge.Set.init(rawValue:)(v39);
    if (Edge.Set.init(rawValue:)(v40 & v36) != v36)
      v39 = Edge.Set.init(rawValue:)(v39 | v36);
    v41 = Edge.Set.init(rawValue:)(v39);
    v42 = Edge.Set.init(rawValue:)(v41 & v37);
    v43 = v135;
    v44 = v132;
    v45 = (uint64_t)v130;
    if (v42 != v37)
      v39 = Edge.Set.init(rawValue:)(v39 | v37);
    v46 = v134;
    v47 = Edge.Set.init(rawValue:)(v39);
    if (Edge.Set.init(rawValue:)(v47 & v38) != v38)
      LOBYTE(v39) = Edge.Set.init(rawValue:)(v39 | v38);
    v48 = type metadata accessor for CircleLockupView.Metrics(0);
    v119 = *(int *)(v48 + 48);
    v49 = EdgeInsets.init(_all:)(*(double *)&v30[v119]);
    v51 = v50;
    v53 = v52;
    v55 = v54;
    sub_D184((uint64_t)v33, v45, &qword_3D0BF8);
    v56 = v45 + *(int *)(v128 + 36);
    *(_BYTE *)v56 = v39;
    *(double *)(v56 + 8) = v49;
    *(_QWORD *)(v56 + 16) = v51;
    *(_QWORD *)(v56 + 24) = v53;
    *(_QWORD *)(v56 + 32) = v55;
    *(_BYTE *)(v56 + 40) = 0;
    sub_D1D4((uint64_t)v33, &qword_3D0BF8);
    v134 = *(int *)(v48 + 52);
    v57 = *(_QWORD *)&v30[v134];
    v58 = (char *)v32 + *(int *)(v43 + 20);
    v59 = enum case for RoundedCornerStyle.continuous(_:);
    LODWORD(v128) = enum case for RoundedCornerStyle.continuous(_:);
    v60 = type metadata accessor for RoundedCornerStyle(0);
    v125 = *(char **)(*(_QWORD *)(v60 - 8) + 104);
    ((void (*)(char *, uint64_t, uint64_t))v125)(v58, v59, v60);
    *v32 = v57;
    v32[1] = v57;
    v61 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
    v62 = Color.init(uiColor:)(v61);
    sub_19C4C((uint64_t)v32, v46, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *(_QWORD *)(v46 + *(int *)(v44 + 36)) = v62;
    v63 = sub_FA4C((uint64_t)v32, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v65 = static Alignment.center.getter(v63, v64);
    v67 = v66;
    v68 = v45;
    v69 = (uint64_t)v131;
    v70 = (uint64_t)&v131[*(int *)(v129 + 36)];
    sub_D184(v46, v70, &qword_3D0E08);
    v71 = (uint64_t *)(v70 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D0C28) + 36));
    *v71 = v65;
    v71[1] = v67;
    sub_D184(v68, v69, &qword_3D0BE8);
    sub_D1D4(v46, &qword_3D0E08);
    v72 = sub_D1D4(v68, &qword_3D0BE8);
    v73 = v119;
    v74 = *(double *)&v30[v119];
    LOBYTE(v59) = static Edge.Set.all.getter(v72);
    v75 = EdgeInsets.init(_all:)(v74);
    v77 = v76;
    v79 = v78;
    v81 = v80;
    v82 = (uint64_t)v120;
    sub_D184(v69, (uint64_t)v120, &qword_3D0BD8);
    v83 = v133;
    v84 = v82 + *(int *)(v133 + 36);
    *(_BYTE *)v84 = v59;
    *(double *)(v84 + 8) = v75;
    *(_QWORD *)(v84 + 16) = v77;
    *(_QWORD *)(v84 + 24) = v79;
    *(_QWORD *)(v84 + 32) = v81;
    *(_BYTE *)(v84 + 40) = 0;
    sub_D1D4(v69, &qword_3D0BD8);
    v85 = type metadata accessor for CircleLockupView(0);
    v86 = Namespace.wrappedValue.getter(*(_QWORD *)&v30[*(int *)(v85 + 28)]);
    v87 = *(_QWORD *)&v30[v134];
    ((void (*)(char *, _QWORD, uint64_t))v125)((char *)v32 + *(int *)(v135 + 20), v128, v60);
    *v32 = v87;
    v32[1] = v87;
    v88 = sub_16984(&qword_3D0BC8, &qword_3D0BC0, (void (*)(void))sub_168E8);
    v89 = v122;
    View.asTransitionSourceView(in:clipShape:)(v86, v32, v83, v88);
    sub_FA4C((uint64_t)v32, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v90 = sub_D1D4(v82, &qword_3D0BC0);
    v91 = -*(double *)&v30[v73];
    LOBYTE(v86) = static Edge.Set.all.getter(v90);
    v92 = EdgeInsets.init(_all:)(v91);
    v94 = v93;
    v96 = v95;
    v98 = v97;
    v99 = v123;
    v100 = (uint64_t)v121;
    v101 = v124;
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v121, v89, v124);
    v102 = v136;
    v103 = v100 + *(int *)(v136 + 36);
    *(_BYTE *)v103 = v86;
    *(double *)(v103 + 8) = v92;
    *(_QWORD *)(v103 + 16) = v94;
    *(_QWORD *)(v103 + 24) = v96;
    *(_QWORD *)(v103 + 32) = v98;
    *(_BYTE *)(v103 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v89, v101);
    v104 = &qword_3D0BB8;
    v105 = (uint64_t)v126;
    sub_D210(v100, (uint64_t)v126, &qword_3D0BB8);
    v106 = v137;
    sub_D184(v105, v137, &qword_3D0BB8);
    swift_storeEnumTagMultiPayload(v106, v138, 0);
    v107 = sub_16834();
    v108 = sub_169F0();
    _ConditionalContent<>.init(storage:)(v106, v102, v140, v107, v108);
    v109 = v105;
  }
  else
  {
    v110 = v124;
    sub_D184((uint64_t)v8, v124, &qword_3D0C08);
    v111 = v140;
    v112 = v110 + *(int *)(v140 + 36);
    *(_QWORD *)v112 = KeyPath;
    *(_BYTE *)(v112 + 8) = 1;
    sub_D1D4((uint64_t)v8, &qword_3D0C08);
    v104 = &qword_3D0BF8;
    v113 = (uint64_t)v126;
    sub_D210(v110, (uint64_t)v126, &qword_3D0BF8);
    v114 = v137;
    sub_D184(v113, v137, &qword_3D0BF8);
    swift_storeEnumTagMultiPayload(v114, v138, 1);
    v115 = sub_16834();
    v116 = sub_169F0();
    _ConditionalContent<>.init(storage:)(v114, v136, v111, v115, v116);
    v109 = v113;
  }
  return sub_D1D4(v109, v104);
}

unint64_t sub_16764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D0B98;
  if (!qword_3D0B98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0B88);
    sub_167C8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0B98);
  }
  return result;
}

unint64_t sub_167C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D0BA0;
  if (!qword_3D0BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0BA8);
    sub_16834();
    sub_169F0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0BA0);
  }
  return result;
}

unint64_t sub_16834()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_3D0BB0;
  if (!qword_3D0BB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0BB8);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0BC0);
    v2[1] = sub_16984(&qword_3D0BC8, &qword_3D0BC0, (void (*)(void))sub_168E8);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.asTransitionSourceView(in:clipShape:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0BB0);
  }
  return result;
}

unint64_t sub_168E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D0BD0;
  if (!qword_3D0BD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0BD8);
    sub_16984(&qword_3D0BE0, &qword_3D0BE8, (void (*)(void))sub_169F0);
    sub_10EDC(&qword_3D0C20, &qword_3D0C28, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0BD0);
  }
  return result;
}

uint64_t sub_16984(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_169F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D0BF0;
  if (!qword_3D0BF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0BF8);
    sub_10EDC(&qword_3D0C00, &qword_3D0C08, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_10EDC(&qword_3D0C10, &qword_3D0C18, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0BF0);
  }
  return result;
}

uint64_t sub_16A8C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t OpaqueTypeConformance2;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  char v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  _QWORD *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[15];
  char v97;
  unsigned __int8 v98;
  char v99;
  _QWORD v100[39];
  uint64_t v101;
  void *v102;
  _BYTE v103[17];
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  char v121;
  char *v122;
  uint64_t v123;
  _OWORD v124[13];
  _OWORD v125[2];
  uint64_t v126;
  char v127;
  uint64_t v128;
  unsigned __int8 v129;
  char *v130;
  uint64_t v131;

  v94 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E20);
  __chkstk_darwin(v3);
  v5 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E28);
  v88 = *(_QWORD *)(v6 - 8);
  v89 = v6;
  __chkstk_darwin(v6);
  v87 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E30);
  v8 = __chkstk_darwin(v93);
  v86 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v90 = (uint64_t)&v86 - v10;
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E38);
  __chkstk_darwin(v91);
  v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E40);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E48);
  v18 = __chkstk_darwin(v17);
  v95 = (uint64_t)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v92 = (char *)&v86 - v20;
  v21 = a1[1];
  sub_17204((uint64_t)v16);
  if (v21 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v12, v16, v13);
    swift_storeEnumTagMultiPayload(v12, v91, 0);
    v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0E58);
    v23 = sub_19D40();
    v24 = sub_19DC4();
    v101 = v22;
    v102 = &type metadata for Circle;
    *(_QWORD *)v103 = v23;
    *(_QWORD *)&v103[8] = v24;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    v26 = sub_19E08();
    v27 = v92;
    _ConditionalContent<>.init(storage:)(v12, v13, v93, OpaqueTypeConformance2, v26);
    v28 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v29 = (uint64_t)v27;
  }
  else
  {
    v30 = *(int *)(type metadata accessor for CircleLockupView.Metrics(0) + 48);
    v31 = *(double *)&a1[v30];
    v32 = ((uint64_t (*)(void))static Edge.Set.all.getter)();
    v33 = EdgeInsets.init(_all:)(v31);
    v35 = v34;
    v37 = v36;
    v39 = v38;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v5, v16, v13);
    v40 = &v5[*(int *)(v3 + 36)];
    *v40 = v32;
    *((double *)v40 + 1) = v33;
    *((_QWORD *)v40 + 2) = v35;
    *((_QWORD *)v40 + 3) = v37;
    *((_QWORD *)v40 + 4) = v39;
    v40[40] = 0;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v41 = type metadata accessor for CircleLockupView(0);
    v42 = Namespace.wrappedValue.getter(*(_QWORD *)&a1[*(int *)(v41 + 28)]);
    v43 = sub_19C90();
    v44 = v87;
    View.asTransitionSourceView(in:)(v42, v3, v43);
    v45 = sub_D1D4((uint64_t)v5, &qword_3D0E20);
    v46 = -*(double *)&a1[v30];
    LOBYTE(v42) = static Edge.Set.all.getter(v45);
    v47 = EdgeInsets.init(_all:)(v46);
    v49 = v48;
    v51 = v50;
    v53 = v52;
    v55 = v88;
    v54 = v89;
    v56 = v86;
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v86, v44, v89);
    v57 = v93;
    v58 = &v56[*(int *)(v93 + 36)];
    *v58 = v42;
    *((double *)v58 + 1) = v47;
    *((_QWORD *)v58 + 2) = v49;
    *((_QWORD *)v58 + 3) = v51;
    *((_QWORD *)v58 + 4) = v53;
    v58[40] = 0;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v54);
    v59 = (uint64_t)v56;
    v60 = v90;
    sub_D210(v59, v90, &qword_3D0E30);
    sub_D184(v60, (uint64_t)v12, &qword_3D0E30);
    swift_storeEnumTagMultiPayload(v12, v91, 1);
    v61 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0E58);
    v62 = sub_19D40();
    v63 = sub_19DC4();
    v101 = v61;
    v102 = &type metadata for Circle;
    *(_QWORD *)v103 = v62;
    *(_QWORD *)&v103[8] = v63;
    v64 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    v65 = sub_19E08();
    v66 = v92;
    _ConditionalContent<>.init(storage:)(v12, v13, v57, v64, v65);
    v28 = sub_D1D4(v60, &qword_3D0E30);
    v29 = (uint64_t)v66;
  }
  v93 = static HorizontalAlignment.center.getter(v28);
  sub_174CC(a1, v124);
  type metadata accessor for CircleLockupView(0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  v68 = ScaledMetric.wrappedValue.getter(&v101, v67);
  v70 = v101;
  if (a1[1] == 1)
    v71 = static Alignment.center.getter(v68, v69);
  else
    v71 = static Alignment.top.getter(v68);
  *(_OWORD *)((char *)&v96[11] + 7) = v124[11];
  *(_OWORD *)((char *)&v96[12] + 7) = v124[12];
  *(_OWORD *)((char *)&v96[13] + 7) = v125[0];
  v96[14] = *(_OWORD *)((char *)v125 + 9);
  *(_OWORD *)((char *)&v96[7] + 7) = v124[7];
  *(_OWORD *)((char *)&v96[8] + 7) = v124[8];
  *(_OWORD *)((char *)&v96[9] + 7) = v124[9];
  *(_OWORD *)((char *)&v96[10] + 7) = v124[10];
  *(_OWORD *)((char *)&v96[3] + 7) = v124[3];
  *(_OWORD *)((char *)&v96[4] + 7) = v124[4];
  *(_OWORD *)((char *)&v96[5] + 7) = v124[5];
  *(_OWORD *)((char *)&v96[6] + 7) = v124[6];
  *(_OWORD *)((char *)v96 + 7) = v124[0];
  *(_OWORD *)((char *)&v96[1] + 7) = v124[1];
  v97 = 1;
  *(_OWORD *)((char *)&v96[2] + 7) = v124[2];
  LODWORD(v90) = 1;
  _FrameLayout.init(width:height:alignment:)(&v126, 0, 1, v70, 0, v71, v72);
  v73 = v126;
  v74 = v128;
  v91 = v131;
  v92 = v130;
  v99 = v127;
  v98 = v129;
  v75 = v95;
  sub_D184(v29, v95, &qword_3D0E48);
  v76 = v99;
  LODWORD(v89) = v98;
  v77 = v75;
  v78 = v94;
  sub_D184(v77, v94, &qword_3D0E48);
  v79 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D0E80) + 48);
  *(_OWORD *)((char *)&v100[24] + 1) = v96[11];
  *(_OWORD *)((char *)&v100[26] + 1) = v96[12];
  *(_OWORD *)((char *)&v100[28] + 1) = v96[13];
  *(_OWORD *)((char *)&v100[30] + 1) = v96[14];
  *(_OWORD *)((char *)&v100[16] + 1) = v96[7];
  *(_OWORD *)((char *)&v100[18] + 1) = v96[8];
  *(_OWORD *)((char *)&v100[20] + 1) = v96[9];
  *(_OWORD *)((char *)&v100[22] + 1) = v96[10];
  *(_OWORD *)((char *)&v100[8] + 1) = v96[3];
  *(_OWORD *)((char *)&v100[10] + 1) = v96[4];
  *(_OWORD *)((char *)&v100[12] + 1) = v96[5];
  *(_OWORD *)((char *)&v100[14] + 1) = v96[6];
  *(_OWORD *)((char *)&v100[4] + 1) = v96[1];
  *(_OWORD *)((char *)&v100[6] + 1) = v96[2];
  v80 = (void *)(v78 + v79);
  v81 = v93;
  v100[0] = v93;
  v100[1] = 0;
  LOBYTE(v100[2]) = 1;
  *(_OWORD *)((char *)&v100[2] + 1) = v96[0];
  v100[33] = v73;
  LOBYTE(v100[34]) = v76;
  v100[35] = v74;
  v82 = v89;
  LOBYTE(v100[36]) = v89;
  v84 = v91;
  v83 = v92;
  v100[37] = v92;
  v100[38] = v91;
  memcpy(v80, v100, 0x138uLL);
  sub_19F68((uint64_t)v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_19E9C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_19F2C);
  sub_D1D4(v29, &qword_3D0E48);
  v114 = v96[11];
  v115 = v96[12];
  v116 = v96[13];
  v117 = v96[14];
  v110 = v96[7];
  v111 = v96[8];
  v112 = v96[9];
  v113 = v96[10];
  v106 = v96[3];
  v107 = v96[4];
  v108 = v96[5];
  v109 = v96[6];
  *(_OWORD *)&v103[1] = v96[0];
  v104 = v96[1];
  v101 = v81;
  v102 = 0;
  v103[0] = v90;
  v105 = v96[2];
  v118 = v73;
  v119 = v76;
  v120 = v74;
  v121 = v82;
  v122 = v83;
  v123 = v84;
  sub_19F68((uint64_t)&v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A070, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A100);
  return sub_D1D4(v95, &qword_3D0E48);
}

uint64_t sub_17204@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC0);
  __chkstk_darwin(v1);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Artwork.Sizing(0);
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Artwork(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E58);
  __chkstk_darwin(v17);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CircleLockupView(0);
  LegacyLockup.artwork.getter();
  v20 = type metadata accessor for CropCode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
  v21 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v31 + 104))(v6, enum case for Artwork.Sizing.autosizing(_:), v32);
  v22 = static Alignment.top.getter(v21);
  Artwork.init(artwork:sizing:alignment:cropCodeOverride:contentMode:)(v12, v6, v22, v23, v9, 1);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v16, v13);
  v24 = &v19[*(int *)(v17 + 36)];
  *(_QWORD *)v24 = 0x3FF0000000000000;
  *((_WORD *)v24 + 4) = 0;
  v25 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  static ArtworkShadow.default.getter(v25);
  v26 = type metadata accessor for ArtworkShadow(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v3, 0, 1, v26);
  v27 = sub_19D40();
  v28 = sub_19DC4();
  View.artworkStyle<A>(shape:shadow:)(v28, v3, v17, &type metadata for Circle, v27, v28);
  sub_D1D4((uint64_t)v3, &qword_3D0EC0);
  return sub_D1D4((uint64_t)v19, &qword_3D0E58);
}

uint64_t sub_174CC@<X0>(unsigned __int8 *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t KeyPath;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  unsigned __int8 *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 *v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  unsigned __int8 *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  unsigned __int8 *v122;
  uint64_t v123;
  char v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _OWORD *v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 *v151;
  _OWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  _BYTE v160[7];
  char v161;
  _BYTE v162[7];
  char v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  _OWORD v170[2];
  _OWORD v171[6];
  _OWORD v172[2];
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  _OWORD v179[2];
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  _OWORD v185[2];
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  _OWORD v192[2];
  uint64_t v193;
  unsigned __int8 v194;
  uint64_t v195;
  unsigned __int8 v196;
  __int128 v197;
  _OWORD v198[6];
  _OWORD v199[3];

  v152 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E88);
  __chkstk_darwin(v3);
  v153 = (uint64_t)&v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(int *)(type metadata accessor for CircleLockupView(0) + 20);
  v6 = LegacyLockup.eyebrow.getter();
  if (v7)
  {
    v9 = v7;
    v10 = *((_QWORD *)a1 + 4);
    if (v10)
    {
      v11 = v6;
      LODWORD(v156) = a1[24];
      v151 = a1;
      v158 = v5;
      if ((v156 & 1) != 0)
      {
        swift_retain(v10);
        v154 = 0;
        v155 = 0;
        v149 = 0;
        v150 = 0;
        v147 = 0;
        v148 = 0;
        v146 = 0;
      }
      else
      {
        v20 = *((_QWORD *)a1 + 2);
        v21 = swift_retain(v10);
        v23 = static Alignment.center.getter(v22, v21);
        v155 = 1;
        _FrameLayout.init(width:height:alignment:)(&v193, 0, 1, v20, 0, v23, v24);
        v154 = v193;
        v150 = v194;
        v148 = v196;
        v149 = v195;
        v146 = *((_QWORD *)&v197 + 1);
        v147 = v197;
      }
      *(_QWORD *)&v173 = v11;
      *((_QWORD *)&v173 + 1) = v9;
      v25 = sub_D254();
      v26 = Text.init<A>(_:)(&v173, &type metadata for String, v25);
      v28 = v27;
      v30 = v29;
      v32 = v31 & 1;
      v33 = swift_retain(v10);
      v34 = Text.font(_:)(v33);
      v36 = v35;
      v38 = v37;
      v39 = v10;
      v157 = v10;
      v41 = v40;
      swift_release(v39);
      v42 = v38 & 1;
      sub_D170(v26, v28, v32);
      v43 = swift_bridgeObjectRelease(v30);
      v44 = static Color.secondary.getter(v43);
      v45 = Text.foregroundColor(_:)(v44, v34, v36, v42, v41);
      v47 = v46;
      v49 = v48;
      v51 = v50;
      swift_release(v44);
      LOBYTE(v44) = v49 & 1;
      sub_D170(v34, v36, v42);
      v52 = swift_bridgeObjectRelease(v41);
      v53 = Text.bold()(v45, v47, v49 & 1, v51, v52);
      v55 = v54;
      v57 = v56;
      LOBYTE(v34) = v58 & 1;
      sub_D170(v45, v47, v44);
      swift_bridgeObjectRelease(v51);
      KeyPath = swift_getKeyPath(&unk_2F00E0);
      v163 = v156;
      v161 = v34;
      v159 = 0;
      *(_QWORD *)&v164 = 0;
      *((_QWORD *)&v164 + 1) = v155;
      *(_QWORD *)&v165 = v154;
      *((_QWORD *)&v165 + 1) = v150;
      *(_QWORD *)&v166 = v149;
      *((_QWORD *)&v166 + 1) = v148;
      *(_QWORD *)&v167 = v147;
      *((_QWORD *)&v167 + 1) = v146;
      LOBYTE(v168) = v156;
      *(_DWORD *)((char *)&v168 + 1) = *(_DWORD *)v162;
      DWORD1(v168) = *(_DWORD *)&v162[3];
      *((_QWORD *)&v168 + 1) = v53;
      *(_QWORD *)&v169 = v55;
      BYTE8(v169) = v34;
      *(_DWORD *)((char *)&v169 + 9) = *(_DWORD *)v160;
      HIDWORD(v169) = *(_DWORD *)&v160[3];
      *(_QWORD *)&v170[0] = v57;
      *((_QWORD *)&v170[0] + 1) = KeyPath;
      *(_QWORD *)&v170[1] = 1;
      BYTE8(v170[1]) = 0;
      sub_D130(v53, v55, v34);
      swift_bridgeObjectRetain(v57);
      swift_retain(KeyPath);
      sub_D130(v53, v55, v34);
      swift_bridgeObjectRetain(v57);
      swift_retain(KeyPath);
      sub_D170(v53, v55, v34);
      swift_release(KeyPath);
      swift_bridgeObjectRelease(v57);
      v190 = v168;
      v191 = v169;
      v192[0] = v170[0];
      *(_OWORD *)((char *)v192 + 9) = *(_OWORD *)((char *)v170 + 9);
      v186 = v164;
      v187 = v165;
      v188 = v166;
      v189 = v167;
      sub_1A23C((uint64_t)&v186);
      sub_D210((uint64_t)&v186, (uint64_t)&v173, &qword_3D0E98);
      sub_1A244((uint64_t)&v164);
      v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EA0);
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EA8);
      v62 = sub_10EDC(&qword_3D0EB0, &qword_3D0EA0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v63 = sub_1A1D8();
      _ConditionalContent<>.init(storage:)(&v173, v60, v61, v62, v63);
      swift_release(v157);
      sub_D170(v53, v55, v34);
      swift_release(KeyPath);
      swift_bridgeObjectRelease(v57);
      sub_D170(v53, v55, v34);
      swift_release(KeyPath);
      swift_bridgeObjectRelease(v57);
      v177 = v171[4];
      v178 = v171[5];
      v179[0] = v172[0];
      *(_OWORD *)((char *)v179 + 10) = *(_OWORD *)((char *)v172 + 10);
      v173 = v171[0];
      v174 = v171[1];
      v175 = v171[2];
      v176 = v171[3];
      UINavigationBar.overrideBackButtonStyle.setter(&v173);
      v19 = sub_D210((uint64_t)&v173, (uint64_t)v198, &qword_3D0E90);
      a1 = v151;
      goto LABEL_12;
    }
    v8 = swift_bridgeObjectRelease(v7);
  }
  if ((a1[48] & 1) != 0)
  {
    sub_1A13C((uint64_t)&v173);
  }
  else
  {
    v12 = *((_QWORD *)a1 + 5);
    v13 = static Alignment.center.getter(v6, v8);
    _FrameLayout.init(width:height:alignment:)(&v193, 0, 1, v12, 0, v13, v14);
    *(_QWORD *)&v186 = 0;
    BYTE8(v186) = 1;
    *(_QWORD *)&v187 = v193;
    BYTE8(v187) = v194;
    *(_QWORD *)&v188 = v195;
    BYTE8(v188) = v196;
    v189 = v197;
    sub_1A1CC((uint64_t)&v186);
    sub_D210((uint64_t)&v186, (uint64_t)&v173, &qword_3D0E98);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EA0);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EA8);
    v17 = sub_10EDC(&qword_3D0EB0, &qword_3D0EA0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v18 = sub_1A1D8();
    _ConditionalContent<>.init(storage:)(&v173, v15, v16, v17, v18);
    v177 = v198[4];
    v178 = v198[5];
    v179[0] = v199[0];
    *(_OWORD *)((char *)v179 + 10) = *(_OWORD *)((char *)v199 + 10);
    v173 = v198[0];
    v174 = v198[1];
    v175 = v198[2];
    v176 = v198[3];
    UINavigationBar.overrideBackButtonStyle.setter(&v173);
  }
  v19 = sub_D210((uint64_t)&v173, (uint64_t)v198, &qword_3D0E90);
LABEL_12:
  if (*a1 != 1)
  {
    v64 = LegacyLockup.title.getter(v19);
    if (v65)
      goto LABEL_14;
LABEL_18:
    v88 = 0;
    v157 = 0;
    v158 = 0;
    v155 = 0;
    v156 = 0;
    v154 = 0;
    goto LABEL_19;
  }
  v64 = LegacyLockup.ordinal.getter(v19);
  if (!v65)
    goto LABEL_18;
LABEL_14:
  *(_QWORD *)&v173 = v64;
  *((_QWORD *)&v173 + 1) = v65;
  v66 = sub_D254();
  v67 = Text.init<A>(_:)(&v173, &type metadata for String, v66);
  v69 = v68;
  v158 = v70;
  v72 = v71 & 1;
  v73 = &a1[*(int *)(type metadata accessor for CircleLockupView.Metrics(0) + 40)];
  v74 = type metadata accessor for Font.Design(0);
  v75 = v153;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v153, 1, 1, v74);
  v76 = static Font.system(_:design:weight:)(v73, v75, 0, 1);
  sub_D1D4(v75, &qword_3D0E88);
  v78 = Text.font(_:)(v77);
  v80 = v79;
  v81 = a1;
  v83 = v82;
  v85 = v84;
  swift_release(v76);
  v86 = v83 & 1;
  a1 = v81;
  sub_D170(v67, v69, v72);
  v87 = swift_bridgeObjectRelease(v158);
  LODWORD(v81) = *v81;
  v88 = Text.bold(_:)(*a1, v78, v80, v86, v85, v87);
  v157 = v90;
  v158 = v89;
  v155 = v91 & 1;
  sub_D170(v78, v80, v86);
  swift_bridgeObjectRelease(v85);
  v92 = 1;
  if (!(_DWORD)v81)
    v92 = 2;
  v154 = v92;
  v156 = swift_getKeyPath(&unk_2F00E0);
LABEL_19:
  v93 = sub_15B80();
  if (v94)
  {
    v149 = v88;
    *(_QWORD *)&v173 = v93;
    *((_QWORD *)&v173 + 1) = v94;
    v95 = sub_D254();
    v96 = Text.init<A>(_:)(&v173, &type metadata for String, v95);
    v98 = v97;
    v100 = v99;
    v102 = v101 & 1;
    v103 = &a1[*(int *)(type metadata accessor for CircleLockupView.Metrics(0) + 44)];
    v104 = type metadata accessor for Font.Design(0);
    v105 = v153;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v153, 1, 1, v104);
    v106 = static Font.system(_:design:weight:)(v103, v105, 0, 1);
    sub_D1D4(v105, &qword_3D0E88);
    v108 = Text.font(_:)(v107);
    v110 = v109;
    LODWORD(v153) = v111;
    v113 = v112;
    swift_release(v106);
    sub_D170(v96, v98, v102);
    v114 = swift_bridgeObjectRelease(v100);
    if (*a1 == 1)
      v115 = static Color.primary.getter(v114);
    else
      v115 = static Color.secondary.getter(v114);
    v119 = v115;
    v120 = v113;
    v121 = v153 & 1;
    v153 = Text.foregroundColor(_:)(v115, v108, v110, v153 & 1, v113);
    v150 = v123;
    v151 = v122;
    v125 = v124;
    swift_release(v119);
    v116 = v125 & 1;
    sub_D170(v108, v110, v121);
    swift_bridgeObjectRelease(v120);
    v117 = swift_getKeyPath(&unk_2F00E0);
    v118 = 1;
    v88 = v149;
  }
  else
  {
    v153 = 0;
    v150 = 0;
    v151 = 0;
    v116 = 0;
    v117 = 0;
    v118 = 0;
  }
  v149 = v116;
  sub_D210((uint64_t)v198, (uint64_t)&v164, &qword_3D0E90);
  sub_D210((uint64_t)&v164, (uint64_t)v171, &qword_3D0E90);
  sub_D210((uint64_t)v171, (uint64_t)&v173, &qword_3D0E90);
  *(_QWORD *)&v180 = v88;
  v127 = v157;
  v126 = v158;
  *((_QWORD *)&v180 + 1) = v158;
  v128 = v156;
  *(_QWORD *)&v181 = v155;
  *((_QWORD *)&v181 + 1) = v157;
  *(_QWORD *)&v182 = v156;
  v129 = v153;
  *((_QWORD *)&v182 + 1) = v154;
  LOBYTE(v183) = 0;
  *((_QWORD *)&v183 + 1) = v153;
  v131 = (uint64_t)v151;
  v130 = v152;
  *(_QWORD *)&v184 = v151;
  *((_QWORD *)&v184 + 1) = v116;
  v132 = v150;
  *(_QWORD *)&v185[0] = v150;
  *((_QWORD *)&v185[0] + 1) = v117;
  *(_QWORD *)&v185[1] = v118;
  BYTE8(v185[1]) = 0;
  v133 = v174;
  *v152 = v173;
  v130[1] = v133;
  v134 = v175;
  v135 = v176;
  v136 = v178;
  v130[4] = v177;
  v130[5] = v136;
  v130[2] = v134;
  v130[3] = v135;
  v137 = v179[0];
  v138 = v179[1];
  v139 = v181;
  v130[8] = v180;
  v130[9] = v139;
  v130[6] = v137;
  v130[7] = v138;
  v140 = v182;
  v141 = v183;
  *(_OWORD *)((char *)v130 + 217) = *(_OWORD *)((char *)v185 + 9);
  v142 = v185[0];
  v130[12] = v184;
  v130[13] = v142;
  v130[10] = v140;
  v130[11] = v141;
  sub_1A160((uint64_t)v171, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_19E9C);
  v143 = v126;
  LOBYTE(v126) = v155;
  sub_19F2C(v88, v143, v155, v127, v128);
  LOBYTE(v127) = v149;
  sub_19F2C(v129, v131, v149, v132, v117);
  sub_1A100(v129, v131, v127, v132, v117);
  sub_1A100(v88, v158, v126, v157, v156);
  sub_D210((uint64_t)&v164, (uint64_t)&v186, &qword_3D0E90);
  return sub_1A160((uint64_t)&v186, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A070);
}

uint64_t CircleLockupView.init(presentation:model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27 = a2;
  v30 = a3;
  v4 = type metadata accessor for Font.TextStyle(0);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for CircleLockupView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CircleLockupView.Metrics(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  sub_18184((uint64_t)v16, (uint64_t)v19);
  v20 = &v12[v10[6]];
  *(_QWORD *)v20 = swift_getKeyPath(&unk_2EFDE8);
  v20[8] = 0;
  *(_QWORD *)&v12[v10[7]] = 0;
  sub_19C4C((uint64_t)v19, (uint64_t)v12, type metadata accessor for CircleLockupView.Metrics);
  v21 = v26;
  *(_QWORD *)&v12[v10[5]] = v27;
  v31 = *((_QWORD *)v19 + 1);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v6, &v19[*(int *)(v17 + 40)], v21);
  v22 = sub_187D0();
  ScaledMetric.init(wrappedValue:relativeTo:)(&v31, v6, &type metadata for CGFloat, v22);
  sub_FA4C((uint64_t)v19, type metadata accessor for CircleLockupView.Metrics);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v12[v10[8]], v9, v29);
  sub_18814((uint64_t)v12, v30);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
}

uint64_t type metadata accessor for CircleLockupView.Metrics(uint64_t a1)
{
  return sub_AE00(a1, qword_3D0D88, (uint64_t)&nominal type descriptor for CircleLockupView.Metrics);
}

uint64_t sub_18184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v12;

  v4 = ModernShelf.ItemPresentation.itemKind.getter(a1);
  v5 = ModernShelf.ItemKind.hasOrdinal.getter(v4);
  v6 = v5;
  v7 = ModernShelf.ItemPresentation.itemKind.getter(v5);
  v8 = ModernShelf.ItemPresentation.orientation.getter();
  switch(v7)
  {
    case '*':
    case ',':
      if ((v8 & 1) != 0)
        v9 = 1;
      else
        v9 = 4;
      break;
    case '+':
    case '-':
      v9 = 0;
      break;
    default:
      v9 = 3;
      break;
  }
  v12 = v9;
  sub_158C8((unsigned __int8 *)&v12, v6 & 1, a2);
  v10 = type metadata accessor for ModernShelf.ItemPresentation(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
}

uint64_t static CircleLockupView.sectionBottomInset(presentation:environment:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v12;

  v2 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CircleLockupView.Metrics(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v9 = sub_18184((uint64_t)v5, (uint64_t)v8);
  v10 = 0.0;
  if ((v8[1] & 1) == 0)
    v10 = static ShelfSpacer.b.getter(v9);
  sub_FA4C((uint64_t)v8, type metadata accessor for CircleLockupView.Metrics);
  return *(_QWORD *)&v10;
}

uint64_t static CircleLockupView.artworkPosition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for ShelfArtworkPosition.top(_:);
  v3 = type metadata accessor for ShelfArtworkPosition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t static CircleLockupView.interactionContextView(presentation:model:)()
{
  return 7;
}

uint64_t static CircleLockupView.cellShape(presentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  CGFloat left;
  CGFloat bottom;
  CGFloat right;
  char v14;
  const UIEdgeInsets *v15;
  CGFloat top;
  uint64_t result;
  uint64_t v18;

  v4 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CircleLockupView.Metrics(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_18184((uint64_t)v7, (uint64_t)v10);
  if (v10[1] == 1)
  {
    left = 0.0;
    bottom = 0.0;
    right = 0.0;
    v14 = 0;
    v15 = (const UIEdgeInsets *)&v10[*(int *)(v8 + 52)];
  }
  else
  {
    v15 = &UIEdgeInsetsZero;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    v14 = 1;
  }
  top = v15->top;
  result = sub_FA4C((uint64_t)v10, type metadata accessor for CircleLockupView.Metrics);
  *(CGFloat *)a2 = top;
  *(CGFloat *)(a2 + 8) = left;
  *(CGFloat *)(a2 + 16) = bottom;
  *(CGFloat *)(a2 + 24) = right;
  *(_BYTE *)(a2 + 32) = v14;
  return result;
}

uint64_t sub_1849C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return CircleLockupView.init(presentation:model:)(a1, *a2, a3);
}

uint64_t sub_184A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_89A0(&qword_3D0DF0, type metadata accessor for CircleLockupView, (uint64_t)&protocol conformance descriptor for CircleLockupView);
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

uint64_t sub_184E4()
{
  return static ShelfCell.sectionTopInset(presentation:environment:)();
}

uint64_t static CircleLockupView.heightFor(presentation:traitCollection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  double *v17;
  double v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a2;
  v23 = a3;
  v20 = a1;
  v3 = type metadata accessor for Font.TextStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for PUITextStyle(0);
  v7 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CircleLockupView.Metrics(0);
  v15 = __chkstk_darwin(v14);
  v17 = (double *)((char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, v20, v10, v15);
  sub_18184((uint64_t)v13, (uint64_t)v17);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, (char *)v17 + *(int *)(v14 + 40), v3);
  PUITextStyle.init(style:)(v6);
  v18 = PUITextStyle.scaledValue(for:compatibleWith:)(v22, v17[1]);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  if (*((_BYTE *)v17 + 1) == 1)
    v18 = v18 - *(double *)((char *)v17 + *(int *)(v14 + 48));
  ShelfCellHeight.init(fractionOfWidth:absolute:)(1.0, v18);
  return sub_FA4C((uint64_t)v17, type metadata accessor for CircleLockupView.Metrics);
}

_QWORD *sub_186DC@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_19C00();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for ShelvesViewSwiftUIHelperCellEnvironmentKey, &type metadata for ShelvesViewSwiftUIHelperCellEnvironmentKey, v2);
  *a1 = v4;
  return result;
}

_QWORD *sub_18728@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_19C00();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for ShelvesViewSwiftUIHelperCellEnvironmentKey, &type metadata for ShelvesViewSwiftUIHelperCellEnvironmentKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_18774(id *a1)
{
  unint64_t v1;
  id v2;
  id v4;

  v4 = *a1;
  v1 = sub_19C00();
  v2 = v4;
  return EnvironmentValues.subscript.setter(&v4, &type metadata for ShelvesViewSwiftUIHelperCellEnvironmentKey, &type metadata for ShelvesViewSwiftUIHelperCellEnvironmentKey, v1);
}

unint64_t sub_187D0()
{
  unint64_t result;

  result = qword_3D0C38;
  if (!qword_3D0C38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_3D0C38);
  }
  return result;
}

uint64_t sub_18814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CircleLockupView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1885C()
{
  unint64_t result;

  result = qword_3D0C40;
  if (!qword_3D0C40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CircleLockupView.Spec, &type metadata for CircleLockupView.Spec);
    atomic_store(result, (unint64_t *)&qword_3D0C40);
  }
  return result;
}

uint64_t sub_188A0()
{
  return sub_10EDC(&qword_3D0C48, &qword_3D0C50, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_188CC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of CircleLockupView.body>>, 1);
}

uint64_t sub_188DC()
{
  return sub_89A0(&qword_3D0C58, type metadata accessor for CircleLockupView, (uint64_t)&protocol conformance descriptor for CircleLockupView);
}

uint64_t sub_18908()
{
  return sub_89A0(&qword_3D0C60, type metadata accessor for CircleLockupView, (uint64_t)&protocol conformance descriptor for CircleLockupView);
}

uint64_t sub_18934()
{
  return sub_89A0(&qword_3D0C68, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
}

_QWORD *initializeBufferWithCopyOfBuffer for CircleLockupView(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v26);
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v9 = a2[4];
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v10 = (int *)type metadata accessor for CircleLockupView.Metrics(0);
    v11 = v10[10];
    v12 = (char *)v4 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = type metadata accessor for Font.TextStyle(0);
    v15 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
    v16 = swift_retain(v9);
    v15(v12, v13, v14, v16);
    ((void (*)(char *, char *, uint64_t))v15)((char *)v4 + v10[11], (char *)a2 + v10[11], v14);
    *(_QWORD *)((char *)v4 + v10[12]) = *(uint64_t *)((char *)a2 + v10[12]);
    *(_QWORD *)((char *)v4 + v10[13]) = *(uint64_t *)((char *)a2 + v10[13]);
    v17 = a3[5];
    v18 = a3[6];
    v19 = *(uint64_t *)((char *)a2 + v17);
    *(_QWORD *)((char *)v4 + v17) = v19;
    v20 = (char *)v4 + v18;
    v21 = *(void **)((char *)a2 + v18);
    LOBYTE(v10) = *((_BYTE *)a2 + v18 + 8);
    swift_retain(v19);
    sub_15E90(v21, (char)v10);
    *(_QWORD *)v20 = v21;
    v20[8] = (char)v10;
    v22 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v23 = (char *)v4 + v22;
    v24 = (uint64_t)a2 + v22;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return v4;
}

uint64_t destroy for CircleLockupView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  swift_release(*(_QWORD *)(a1 + 32));
  v4 = type metadata accessor for CircleLockupView.Metrics(0);
  v5 = a1 + *(int *)(v4 + 40);
  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(v4 + 44), v6);
  swift_release(*(_QWORD *)(a1 + a2[5]));
  sub_15E9C(*(id *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  v8 = a1 + a2[8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for CircleLockupView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = (int *)type metadata accessor for CircleLockupView.Metrics(0);
  v10 = v9[10];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Font.TextStyle(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
  v15 = swift_retain(v8);
  v14(v11, v12, v13, v15);
  ((void (*)(uint64_t, uint64_t, uint64_t))v14)(a1 + v9[11], a2 + v9[11], v13);
  *(_QWORD *)(a1 + v9[12]) = *(_QWORD *)(a2 + v9[12]);
  *(_QWORD *)(a1 + v9[13]) = *(_QWORD *)(a2 + v9[13]);
  v16 = a3[5];
  v17 = a3[6];
  v18 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = a1 + v17;
  v20 = *(void **)(a2 + v17);
  LOBYTE(v9) = *(_BYTE *)(a2 + v17 + 8);
  swift_retain(v18);
  sub_15E90(v20, (char)v9);
  *(_QWORD *)v19 = v20;
  *(_BYTE *)(v19 + 8) = (_BYTE)v9;
  v21 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

uint64_t assignWithCopy for CircleLockupView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v8);
  swift_release(v7);
  v9 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = (int *)type metadata accessor for CircleLockupView.Metrics(0);
  v11 = v10[10];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Font.TextStyle(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v15(a1 + v10[11], a2 + v10[11], v14);
  *(_QWORD *)(a1 + v10[12]) = *(_QWORD *)(a2 + v10[12]);
  *(_QWORD *)(a1 + v10[13]) = *(_QWORD *)(a2 + v10[13]);
  v16 = a3[5];
  v17 = *(_QWORD *)(a2 + v16);
  v18 = *(_QWORD *)(a1 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  swift_retain(v17);
  swift_release(v18);
  v19 = a3[6];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(id *)v21;
  LOBYTE(v12) = *(_BYTE *)(v21 + 8);
  sub_15E90(*(id *)v21, v12);
  v23 = *(void **)v20;
  v24 = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v12;
  sub_15E9C(v23, v24);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  return a1;
}

uint64_t initializeWithTake for CircleLockupView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = (int *)type metadata accessor for CircleLockupView.Metrics(0);
  v9 = v8[10];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for Font.TextStyle(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + v8[11], a2 + v8[11], v12);
  *(_QWORD *)(a1 + v8[12]) = *(_QWORD *)(a2 + v8[12]);
  *(_QWORD *)(a1 + v8[13]) = *(_QWORD *)(a2 + v8[13]);
  v14 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for CircleLockupView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = (int *)type metadata accessor for CircleLockupView.Metrics(0);
  v8 = v7[10];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Font.TextStyle(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(a1 + v7[11], a2 + v7[11], v11);
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_QWORD *)(a1 + v7[13]) = *(_QWORD *)(a2 + v7[13]);
  v13 = a3[5];
  v14 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_release(v14);
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  LOBYTE(v17) = *((_BYTE *)v17 + 8);
  v19 = *(void **)v16;
  v20 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = (_BYTE)v17;
  sub_15E9C(v19, v20);
  v21 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CircleLockupView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19104);
}

uint64_t sub_19104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for CircleLockupView.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for CircleLockupView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_191BC);
}

uint64_t sub_191BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for CircleLockupView.Metrics(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0C30);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_19264(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for CircleLockupView.Metrics(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[2] = "\t";
    v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_1930C(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

void sub_1930C(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D0CD8)
  {
    v2 = sub_187D0();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for CGFloat, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D0CD8);
  }
}

uint64_t getEnumTagSinglePayload for CircleLockupView.Spec(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CircleLockupView.Spec(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_19440 + 4 * byte_2EFDDF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_19474 + 4 * byte_2EFDDA[v4]))();
}

uint64_t sub_19474(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1947C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19484);
  return result;
}

uint64_t sub_19490(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19498);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1949C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_194A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_194B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CircleLockupView.Spec()
{
  return &type metadata for CircleLockupView.Spec;
}

unint64_t sub_194CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_3D0D18;
  if (!qword_3D0D18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0D20);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0B88);
    v2[1] = sub_16764();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_89A0(&qword_3D0D28, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0D18);
  }
  return result;
}

_QWORD *sub_19578(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v9 = a2[4];
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v10 = a3[10];
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    v13 = type metadata accessor for Font.TextStyle(0);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain(v9);
    v14(v11, v12, v13);
    v14((uint64_t)v4 + a3[11], (uint64_t)a2 + a3[11], v13);
    v15 = a3[13];
    *(_QWORD *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(_QWORD *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
  }
  return v4;
}

uint64_t sub_1966C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_release(*(_QWORD *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for Font.TextStyle(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 44), v5);
}

uint64_t sub_196E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = a3[10];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for Font.TextStyle(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_retain(v8);
  v13(v10, v11, v12);
  v13(a1 + a3[11], a2 + a3[11], v12);
  v14 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  return a1;
}

uint64_t sub_197AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v8);
  swift_release(v7);
  v9 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = a3[10];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Font.TextStyle(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(a1 + a3[11], a2 + a3[11], v13);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_19898(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = a3[10];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Font.TextStyle(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[11], a2 + a3[11], v11);
  v13 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_19958(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = a3[10];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Font.TextStyle(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[11], a2 + a3[11], v10);
  v12 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_19A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19A44);
}

uint64_t sub_19A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for Font.TextStyle(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v9);
  }
}

uint64_t sub_19ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19AD8);
}

uint64_t sub_19AD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 32) = a2;
  }
  else
  {
    v7 = type metadata accessor for Font.TextStyle(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_19B4C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;

  v4[0] = &unk_2F0068;
  v4[1] = &unk_2F0068;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = &unk_2F0080;
  v4[4] = &unk_2F0098;
  v4[5] = &unk_2F0080;
  result = type metadata accessor for Font.TextStyle(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = (char *)&value witness table for Builtin.Int64 + 64;
    v8 = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 10, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_19BE8(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_19BF4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_unknownObjectRelease();
  else
    return swift_release(a1);
}

unint64_t sub_19C00()
{
  unint64_t result;

  result = qword_3D0DF8;
  if (!qword_3D0DF8)
  {
    result = swift_getWitnessTable(&unk_2F0CDC, &type metadata for ShelvesViewSwiftUIHelperCellEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_3D0DF8);
  }
  return result;
}

uint64_t sub_19C4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_19C90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_3D0E50;
  if (!qword_3D0E50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0E20);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0E58);
    v2[1] = &type metadata for Circle;
    v2[2] = sub_19D40();
    v2[3] = sub_19DC4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0E50);
  }
  return result;
}

unint64_t sub_19D40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D0E60;
  if (!qword_3D0E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0E58);
    sub_89A0(&qword_3D0E68, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0E60);
  }
  return result;
}

unint64_t sub_19DC4()
{
  unint64_t result;

  result = qword_3D0E70;
  if (!qword_3D0E70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Circle, &type metadata for Circle);
    atomic_store(result, (unint64_t *)&qword_3D0E70);
  }
  return result;
}

unint64_t sub_19E08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_3D0E78;
  if (!qword_3D0E78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0E30);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0E20);
    v2[1] = sub_19C90();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.asTransitionSourceView(in:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0E78);
  }
  return result;
}

double sub_19E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int16 a16)
{
  double result;

  if (HIBYTE(a16) <= 0xFEu)
    return sub_19EE0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (unsigned __int16)(a16 & 0x1FF) >> 8);
  return result;
}

double sub_19EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, char a17)
{
  double result;

  if ((a17 & 1) == 0)
  {
    sub_D130(a10, a11, a12 & 1);
    swift_bridgeObjectRetain(a13);
    *(_QWORD *)&result = swift_retain(a14).n128_u64[0];
  }
  return result;
}

double sub_19F2C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  double result;

  if (a4)
  {
    sub_D130(a1, a2, a3 & 1);
    swift_bridgeObjectRetain(a4);
    *(_QWORD *)&result = swift_retain(a5).n128_u64[0];
  }
  return result;
}

uint64_t sub_19F68(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 152);
  v6 = *(_QWORD *)(a1 + 160);
  v7 = *(_QWORD *)(a1 + 168);
  v8 = *(_QWORD *)(a1 + 176);
  v9 = *(_QWORD *)(a1 + 184);
  v10 = *(_QWORD *)(a1 + 192);
  v20 = *(_QWORD *)(a1 + 208);
  v19 = *(_QWORD *)(a1 + 216);
  v18 = *(_QWORD *)(a1 + 224);
  v17 = *(_QWORD *)(a1 + 232);
  v16 = *(_QWORD *)(a1 + 240);
  v15 = *(_QWORD *)(a1 + 248);
  v11 = *(unsigned __int8 *)(a1 + 200);
  v12 = *(unsigned __int8 *)(a1 + 256);
  v14 = *(_WORD *)(a1 + 144);
  a2(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), v14);
  a3(v5, v6, v7, v8, v9, v10, v11);
  a3(v20, v19, v18, v17, v16, v15, v12);
  return a1;
}

double sub_1A070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int16 a16)
{
  double result;

  if (HIBYTE(a16) <= 0xFEu)
    return sub_1A0B4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (unsigned __int16)(a16 & 0x1FF) >> 8);
  return result;
}

double sub_1A0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, char a17)
{
  double result;

  if ((a17 & 1) == 0)
  {
    sub_D170(a10, a11, a12 & 1);
    swift_release(a14);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a13).n128_u64[0];
  }
  return result;
}

double sub_1A100(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  double result;

  if (a4)
  {
    sub_D170(a1, a2, a3 & 1);
    swift_release(a5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

double sub_1A13C(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 112) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 120) = -256;
  return result;
}

uint64_t sub_1A160(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int16 v4;

  v4 = *(_WORD *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_1A1CC(uint64_t result)
{
  *(_BYTE *)(result + 121) = 1;
  return result;
}

unint64_t sub_1A1D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D0EB8;
  if (!qword_3D0EB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0EA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D0EB8);
  }
  return result;
}

uint64_t sub_1A23C(uint64_t result)
{
  *(_BYTE *)(result + 121) = 0;
  return result;
}

uint64_t sub_1A244(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  sub_D130(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return a1;
}

uint64_t sub_1A294@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD v103[2];
  uint64_t v104;

  v102 = a1;
  v97 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v97);
  v96 = (char *)&v87 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1018);
  __chkstk_darwin(v99);
  v98 = (uint64_t)&v87 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1020);
  __chkstk_darwin(v101);
  v100 = (uint64_t)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PlainButtonStyle(0);
  v93 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ButtonStyleConfiguration.Label(0);
  v90 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1028);
  v10 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1030);
  __chkstk_darwin(v88);
  v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1038);
  __chkstk_darwin(v89);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1040);
  __chkstk_darwin(v92);
  v18 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1048);
  v19 = __chkstk_darwin(v95);
  v94 = (uint64_t)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = ButtonStyleConfiguration.label.getter(v19);
  PlainButtonStyle.init()(v21);
  v22 = sub_89A0((unint64_t *)&qword_3D1050, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
  v23 = sub_89A0(&qword_3D1058, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  View.buttonStyle<A>(_:)(v6, v7, v4, v22, v23);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v6, v4);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v9, v7);
  v25 = static Font.subheadline.getter(v24);
  KeyPath = swift_getKeyPath(&unk_2F0360);
  v27 = v91;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v91);
  v28 = (uint64_t *)&v14[*(int *)(v88 + 36)];
  *v28 = KeyPath;
  v28[1] = v25;
  v29.n128_f64[0] = (*(double (**)(char *, uint64_t))(v10 + 8))(v12, v27);
  v30 = static Color.secondary.getter(v29);
  v31 = swift_getKeyPath(&unk_2F0390);
  sub_D184((uint64_t)v14, (uint64_t)v16, &qword_3D1030);
  v32 = (uint64_t *)&v16[*(int *)(v89 + 36)];
  *v32 = v31;
  v32[1] = v30;
  v33 = sub_D1D4((uint64_t)v14, &qword_3D1030);
  LOBYTE(v30) = static Edge.Set.horizontal.getter(v33);
  v34 = EdgeInsets.init(_all:)(16.0);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  sub_D184((uint64_t)v16, (uint64_t)v18, &qword_3D1038);
  v41 = &v18[*(int *)(v92 + 36)];
  *v41 = v30;
  *((double *)v41 + 1) = v34;
  *((_QWORD *)v41 + 2) = v36;
  *((_QWORD *)v41 + 3) = v38;
  *((_QWORD *)v41 + 4) = v40;
  v41[40] = 0;
  v42 = sub_D1D4((uint64_t)v16, &qword_3D1038);
  LOBYTE(v30) = static Edge.Set.vertical.getter(v42);
  v43 = EdgeInsets.init(_all:)(3.0);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = v94;
  sub_D184((uint64_t)v18, v94, &qword_3D1040);
  v51 = v50 + *(int *)(v95 + 36);
  *(_BYTE *)v51 = v30;
  *(double *)(v51 + 8) = v43;
  *(_QWORD *)(v51 + 16) = v45;
  *(_QWORD *)(v51 + 24) = v47;
  *(_QWORD *)(v51 + 32) = v49;
  *(_BYTE *)(v51 + 40) = 0;
  sub_D1D4((uint64_t)v18, &qword_3D1040);
  v52 = v96;
  v53 = &v96[*(int *)(v97 + 20)];
  v54 = enum case for RoundedCornerStyle.continuous(_:);
  v55 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v53, v54, v55);
  __asm { FMOV            V0.2D, #4.0 }
  *v52 = _Q0;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v103, 0, 0, &_swiftEmptyArrayStorage, 1.0, 10.0, 0.0);
  v61 = v98;
  sub_19C4C((uint64_t)v52, v98, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v62 = *(double *)v103 * 0.5;
  v63 = v61 + *(int *)(v99 + 68);
  sub_19C4C((uint64_t)v52, v63, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(double *)(v63 + *(int *)(type metadata accessor for RoundedRectangle._Inset(0) + 20)) = v62;
  v64 = v63 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D1060) + 36);
  v65 = v103[1];
  *(_OWORD *)v64 = v103[0];
  *(_OWORD *)(v64 + 16) = v65;
  *(_QWORD *)(v64 + 32) = v104;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1068);
  *(_WORD *)(v63 + *(int *)(v66 + 56)) = 256;
  v68 = static Alignment.center.getter(v66, v67);
  v70 = v69;
  v71 = (uint64_t *)(v63 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D1070) + 36));
  *v71 = v68;
  v71[1] = v70;
  sub_1C690((uint64_t)v52);
  v73 = static Color.secondary.getter(v72);
  v74 = swift_getKeyPath(&unk_2F0390);
  v75 = v100;
  sub_D184(v61, v100, &qword_3D1018);
  v76 = (uint64_t *)(v75 + *(int *)(v101 + 36));
  *v76 = v74;
  v76[1] = v73;
  v77 = sub_D1D4(v61, &qword_3D1018);
  v79 = static Alignment.center.getter(v77, v78);
  v81 = v80;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1078);
  v83 = v102;
  v84 = v102 + *(int *)(v82 + 36);
  sub_D184(v75, v84, &qword_3D1020);
  v85 = (uint64_t *)(v84 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D1080) + 36));
  *v85 = v79;
  v85[1] = v81;
  sub_D184(v50, v83, &qword_3D1048);
  sub_D1D4(v75, &qword_3D1020);
  return sub_D1D4(v50, &qword_3D1048);
}

double sub_1A954@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, __n128);
  __n128 v62;
  double result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86[16];
  uint64_t v87;
  uint64_t v88[3];
  uint64_t v89;
  unsigned __int8 v90;
  uint64_t v91;
  unsigned __int8 v92;
  uint64_t v93;
  uint64_t v94;

  v65 = a1;
  v4 = type metadata accessor for ErrorCell(0);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v79 = *(_QWORD *)(v4 - 8);
  v80 = v5;
  __chkstk_darwin(v4);
  v78 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F18);
  v8 = *(_QWORD *)(v7 - 8);
  v83 = v7;
  v84 = v8;
  __chkstk_darwin(v7);
  v81 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F20);
  v85 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v82 = (char *)&v64 - v14;
  v15 = *(_QWORD *)(a1 + *(int *)(v4 + 24) + 24);
  v16 = swift_bridgeObjectRetain(v15);
  v17 = static Font.body.getter(v16);
  v19 = Text.font(_:)(v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_bridgeObjectRelease(v15);
  swift_release(v17);
  v26 = v23 & 1;
  v28 = static Color.secondary.getter(v27);
  v77 = Text.foregroundColor(_:)(v28, v19, v21, v26, v25);
  v76 = v29;
  LOBYTE(v17) = v30;
  v75 = v31;
  swift_release(v28);
  v74 = v17 & 1;
  sub_D170(v19, v21, v26);
  v32 = swift_bridgeObjectRelease(v25);
  v34 = static Alignment.center.getter(v33, v32);
  _FrameLayout.init(width:height:alignment:)(&v89, 0x406B800000000000, 0, 0, 1, v34, v35);
  v73 = v89;
  v72 = v90;
  v71 = v91;
  v70 = v92;
  v69 = v93;
  v68 = v94;
  KeyPath = swift_getKeyPath(&unk_2F0270);
  v36 = v65;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
  ScaledMetric.wrappedValue.getter(v88, v37);
  v66 = v88[0];
  v38 = v36;
  v39 = v78;
  sub_19C4C(v36, v78, type metadata accessor for ErrorCell);
  v40 = *(unsigned __int8 *)(v79 + 80);
  v41 = (v40 + 16) & ~v40;
  v42 = swift_allocObject(&unk_37B508, v41 + v80, v40 | 7);
  sub_1B79C(v39, v42 + v41, type metadata accessor for ErrorCell);
  v87 = v38;
  v43 = v81;
  Button.init(action:label:)(sub_1B6C0, v42, sub_1B6EC, v86, &type metadata for Text, &protocol witness table for Text);
  v44 = sub_10EDC(&qword_3D0F30, &qword_3D0F18, (uint64_t)&protocol conformance descriptor for Button<A>);
  v45 = sub_1B6F4();
  v46 = v83;
  View.buttonStyle<A>(_:)(v45, v83, &type metadata for ErrorButtonStyle, v44, v45);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v43, v46);
  v47 = v85;
  v48 = v82;
  v49 = v10;
  (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v82, v13, v10);
  v50 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v51 = v13;
  v52 = v13;
  v53 = v49;
  v50(v51, v48, v49);
  v54 = v77;
  v55 = v76;
  *(_QWORD *)a2 = v77;
  *(_QWORD *)(a2 + 8) = v55;
  LOBYTE(v47) = v74;
  *(_BYTE *)(a2 + 16) = v74;
  v56 = v75;
  v57 = v73;
  *(_QWORD *)(a2 + 24) = v75;
  *(_QWORD *)(a2 + 32) = v57;
  *(_BYTE *)(a2 + 40) = v72;
  *(_QWORD *)(a2 + 48) = v71;
  *(_BYTE *)(a2 + 56) = v70;
  v58 = v68;
  *(_QWORD *)(a2 + 64) = v69;
  *(_QWORD *)(a2 + 72) = v58;
  v59 = KeyPath;
  *(_QWORD *)(a2 + 80) = KeyPath;
  *(_BYTE *)(a2 + 88) = 1;
  *(_QWORD *)(a2 + 96) = v66;
  *(_BYTE *)(a2 + 104) = 0;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F40);
  v50((char *)(a2 + *(int *)(v60 + 64)), v52, v53);
  sub_D130(v54, v55, v47);
  v61 = *(void (**)(char *, uint64_t, __n128))(v85 + 8);
  swift_bridgeObjectRetain(v56);
  v62 = swift_retain(v59);
  v61(v48, v53, v62);
  ((void (*)(char *, uint64_t))v61)(v52, v53);
  sub_D170(v54, v55, v47);
  swift_release(v59);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v56).n128_u64[0];
  return result;
}

uint64_t sub_1AE34(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24[2];
  _QWORD v25[5];

  v2 = type metadata accessor for ActionMetricsBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F48);
  __chkstk_darwin(v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)a1 + *(int *)(type metadata accessor for ErrorCell(0) + 24);
  v10 = type metadata accessor for ErrorModel(0);
  sub_D184(v9 + *(int *)(v10 + 28), (uint64_t)v8, &qword_3D0F48);
  v11 = type metadata accessor for ActionButton(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
    return sub_D1D4((uint64_t)v8, &qword_3D0F48);
  ActionButton.action.getter(v24);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
  sub_1B738(v24, (uint64_t)v25);
  v14 = *a1;
  v15 = *((_BYTE *)a1 + 8);
  swift_retain(v14);
  v17 = sub_14A78(v16, v15);
  swift_release(v14);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  BaseObjectGraph.inject<A>(_:)(v24, v18, v18);
  swift_release(v17);
  v19 = v24[0];
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionMetricsBehavior.notProcessed(_:), v2);
  swift_retain(v14);
  v22 = sub_14A78(v21, v15);
  swift_release(v14);
  v23 = ActionRunner.perform(_:withMetrics:asPartOf:)(v25, v5, v22, ObjectType, *((_QWORD *)&v19 + 1));
  swift_unknownObjectRelease(v19);
  swift_release(v23);
  swift_release(v22);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return __swift_destroy_boxed_opaque_existential_0(v25);
}

uint64_t sub_1B04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F48);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + *(int *)(type metadata accessor for ErrorCell(0) + 24);
  v8 = type metadata accessor for ErrorModel(0);
  sub_D184(v7 + *(int *)(v8 + 28), (uint64_t)v6, &qword_3D0F48);
  v9 = type metadata accessor for ActionButton(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    result = sub_D1D4((uint64_t)v6, &qword_3D0F48);
    v12 = 0;
    v13 = 0xE000000000000000;
  }
  else
  {
    v12 = ActionButton.title.getter();
    v13 = v14;
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v9);
  }
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v13;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1B160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F00);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v5);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F08);
  sub_1A954(v2, (uint64_t)&v7[*(int *)(v8 + 44)]);
  LOBYTE(v2) = static Edge.Set.all.getter(v9);
  v10 = EdgeInsets.init(_all:)(8.0);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_D184((uint64_t)v7, a1, &qword_3D0F00);
  v17 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D0F10) + 36);
  *(_BYTE *)v17 = v2;
  *(double *)(v17 + 8) = v10;
  *(_QWORD *)(v17 + 16) = v12;
  *(_QWORD *)(v17 + 24) = v14;
  *(_QWORD *)(v17 + 32) = v16;
  *(_BYTE *)(v17 + 40) = 0;
  return sub_D1D4((uint64_t)v7, &qword_3D0F00);
}

uint64_t sub_1B264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a4 = swift_getKeyPath(&unk_2F02A0);
  *(_BYTE *)(a4 + 8) = 0;
  v12 = a4 + *(int *)(a3 + 20);
  v17 = 0x402A000000000000;
  v13 = sub_1B758();
  ScaledMetric.init(wrappedValue:)(&v17, &type metadata for Double, v13);
  v14 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  return sub_1B79C(a2, a4 + *(int *)(a3 + 24), (uint64_t (*)(_QWORD))&type metadata accessor for ErrorModel);
}

uint64_t sub_1B370(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_89A0(&qword_3D0F60, type metadata accessor for ErrorCell, (uint64_t)&unk_2F01D0);
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

uint64_t sub_1B3B4()
{
  return static ShelfCell.sectionBottomInset(presentation:environment:)();
}

uint64_t sub_1B3CC@<X0>(uint64_t a1@<X8>)
{
  _QWORD v3[5];

  static ShelfCell.cellShape(presentation:)(v3);
  return sub_1B7E0((uint64_t)v3, a1);
}

uint64_t sub_1B404()
{
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 80.0);
}

uint64_t UINavigationBar.overrideBackButtonStyle.getter()
{
  return 1;
}

uint64_t sub_1B41C()
{
  return sub_89A0(&qword_3D0EE8, type metadata accessor for ErrorCell, (uint64_t)&unk_2F0170);
}

uint64_t type metadata accessor for ErrorCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3D0FC0;
  if (!qword_3D0FC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ErrorCell);
  return result;
}

uint64_t sub_1B484()
{
  return sub_89A0(&qword_3D0EF0, type metadata accessor for ErrorCell, (uint64_t)&unk_2F0220);
}

uint64_t sub_1B4B0()
{
  return sub_89A0(&qword_3D0EF8, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorModel, (uint64_t)&protocol conformance descriptor for ErrorModel);
}

uint64_t sub_1B4DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_3294E4, 1);
}

uint64_t sub_1B4EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1B514@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1B53C(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_1B560(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_1B584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for ErrorCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  v6 = v0 + v4 + *(int *)(v1 + 20);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + v4 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
  v9 = type metadata accessor for ErrorModel(0);
  v10 = v8 + *(int *)(v9 + 24);
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = v8 + *(int *)(v9 + 28);
  v14 = type metadata accessor for ActionButton(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1B6C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ErrorCell(0) - 8) + 80);
  return sub_1AE34((uint64_t *)(v0 + ((v1 + 16) & ~v1)));
}

uint64_t sub_1B6EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B04C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1B6F4()
{
  unint64_t result;

  result = qword_3D0F38;
  if (!qword_3D0F38)
  {
    result = swift_getWitnessTable(&unk_2F0328, &type metadata for ErrorButtonStyle);
    atomic_store(result, (unint64_t *)&qword_3D0F38);
  }
  return result;
}

uint64_t sub_1B738(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1B758()
{
  unint64_t result;

  result = qword_3D0F50;
  if (!qword_3D0F50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_3D0F50);
  }
  return result;
}

uint64_t sub_1B79C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ErrorButtonStyle()
{
  return &type metadata for ErrorButtonStyle;
}

uint64_t sub_1B838(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v25 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v25);
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(int *)(a3 + 20);
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    swift_retain(v7);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = *(int *)(a3 + 24);
    v14 = (_QWORD *)(a1 + v13);
    v15 = (uint64_t)a2 + v13;
    v16 = *(uint64_t *)((char *)a2 + v13 + 8);
    *v14 = *(uint64_t *)((char *)a2 + v13);
    v14[1] = v16;
    v17 = *(uint64_t *)((char *)a2 + v13 + 24);
    v14[2] = *(uint64_t *)((char *)a2 + v13 + 16);
    v14[3] = v17;
    v18 = type metadata accessor for ErrorModel(0);
    v19 = *(int *)(v18 + 24);
    __dst = (char *)v14 + v19;
    v20 = (const void *)(v15 + v19);
    v21 = type metadata accessor for ImpressionMetrics(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    if (v23(v20, 1, v21))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
      memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    v26 = *(int *)(v18 + 28);
    v27 = (char *)v14 + v26;
    v28 = (const void *)(v15 + v26);
    v29 = type metadata accessor for ActionButton(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F48);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
  }
  return a1;
}

uint64_t sub_1BA40(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  swift_release(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease(*((_QWORD *)v6 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)v6 + 3));
  v7 = type metadata accessor for ErrorModel(0);
  v8 = &v6[*(int *)(v7 + 24)];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  v11 = &v6[*(int *)(v7 + 28)];
  v12 = type metadata accessor for ActionButton(0);
  v13 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  return result;
}

uint64_t sub_1BB54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(const void *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *__dst;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  swift_retain(v6);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t)a2 + v12;
  v15 = *(uint64_t *)((char *)a2 + v12 + 8);
  *v13 = *(uint64_t *)((char *)a2 + v12);
  v13[1] = v15;
  v16 = *(uint64_t *)((char *)a2 + v12 + 24);
  v13[2] = *(uint64_t *)((char *)a2 + v12 + 16);
  v13[3] = v16;
  v17 = type metadata accessor for ErrorModel(0);
  v18 = *(int *)(v17 + 24);
  __dst = (char *)v13 + v18;
  v19 = (const void *)(v14 + v18);
  v20 = type metadata accessor for ImpressionMetrics(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v16);
  if (v22(v19, 1, v20))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v21 + 16))(__dst, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  v24 = *(int *)(v17 + 28);
  v25 = (char *)v13 + v24;
  v26 = (const void *)(v14 + v24);
  v27 = type metadata accessor for ActionButton(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F48);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  return a1;
}

uint64_t *sub_1BD30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v7;
  swift_retain(v6);
  swift_release(v8);
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t)a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (uint64_t *)((char *)a1 + v13);
  v15 = (uint64_t)a2 + v13;
  *v14 = *(uint64_t *)((char *)a2 + v13);
  v16 = *(uint64_t *)((char *)a2 + v13 + 8);
  v17 = *(uint64_t *)((char *)a1 + v13 + 8);
  v14[1] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v14[2] = *(_QWORD *)(v15 + 16);
  v18 = *(_QWORD *)(v15 + 24);
  v19 = v14[3];
  v14[3] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = type metadata accessor for ErrorModel(0);
  v21 = *(int *)(v20 + 24);
  v22 = (char *)v14 + v21;
  v23 = (char *)(v15 + v21);
  v24 = type metadata accessor for ImpressionMetrics(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_7:
  v30 = *(int *)(v20 + 28);
  v31 = (char *)v14 + v30;
  v32 = (char *)(v15 + v30);
  v33 = type metadata accessor for ActionButton(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F48);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  return a1;
}

uint64_t sub_1BFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_OWORD *)(a1 + v10);
  v12 = a2 + v10;
  v13 = *(_OWORD *)(a2 + v10 + 16);
  *v11 = *(_OWORD *)(a2 + v10);
  v11[1] = v13;
  v14 = type metadata accessor for ErrorModel(0);
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v11 + v15;
  v17 = (const void *)(v12 + v15);
  v18 = type metadata accessor for ImpressionMetrics(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = *(int *)(v14 + 28);
  v22 = (char *)v11 + v21;
  v23 = (const void *)(v12 + v21);
  v24 = type metadata accessor for ActionButton(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F48);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

uint64_t *sub_1C158(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;

  v6 = *((_BYTE *)a2 + 8);
  v7 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v6;
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t)a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t)a2 + v12;
  v15 = *(uint64_t *)((char *)a2 + v12 + 8);
  v16 = *(uint64_t *)((char *)a1 + v12 + 8);
  *v13 = *(uint64_t *)((char *)a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease(v16);
  v17 = *(_QWORD *)(v14 + 24);
  v18 = v13[3];
  v13[2] = *(_QWORD *)(v14 + 16);
  v13[3] = v17;
  swift_bridgeObjectRelease(v18);
  v19 = type metadata accessor for ErrorModel(0);
  v20 = *(int *)(v19 + 24);
  v21 = (char *)v13 + v20;
  v22 = (char *)(v14 + v20);
  v23 = type metadata accessor for ImpressionMetrics(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
LABEL_7:
  v29 = *(int *)(v19 + 28);
  v30 = (char *)v13 + v29;
  v31 = (char *)(v14 + v29);
  v32 = type metadata accessor for ActionButton(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F48);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

uint64_t sub_1C3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C3BC);
}

uint64_t sub_1C3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for ErrorModel(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1C458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C464);
}

uint64_t sub_1C464(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F28);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for ErrorModel(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1C500(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = "\t";
  sub_1C590(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ErrorModel(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_1C590(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D0FD0)
  {
    v2 = sub_1B758();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for Double, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D0FD0);
  }
}

unint64_t sub_1C5EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D1008;
  if (!qword_3D1008)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0F10);
    sub_10EDC(&qword_3D1010, &qword_3D0F00, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D1008);
  }
  return result;
}

uint64_t sub_1C670(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32950C, 1);
}

uint64_t sub_1C690(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C6D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D1088;
  if (!qword_3D1088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1078);
    sub_16984(&qword_3D1090, &qword_3D1048, (void (*)(void))sub_1C76C);
    sub_10EDC(&qword_3D10D0, &qword_3D1080, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D1088);
  }
  return result;
}

uint64_t sub_1C76C()
{
  return sub_16984(&qword_3D1098, &qword_3D1040, (void (*)(void))sub_1C788);
}

unint64_t sub_1C788()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D10A0;
  if (!qword_3D10A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1038);
    sub_1C80C();
    sub_10EDC(&qword_3D10C0, &qword_3D10C8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D10A0);
  }
  return result;
}

unint64_t sub_1C80C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_3D10A8;
  if (!qword_3D10A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1030);
    v2[0] = type metadata accessor for ButtonStyleConfiguration.Label(255);
    v2[1] = type metadata accessor for PlainButtonStyle(255);
    v2[2] = sub_89A0((unint64_t *)&qword_3D1050, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
    v2[3] = sub_89A0(&qword_3D1058, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10EDC(&qword_3D10B0, &qword_3D10B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D10A8);
  }
  return result;
}

uint64_t sub_1C914(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *Strong;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *boxed_opaque_existential_0;
  Swift::String v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[4];

  v5 = type metadata accessor for ActionOutcome(0);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong
    && (v16 = Strong,
        v17 = objc_msgSend(Strong, "nextResponder"),
        v16,
        v17)
    && (v18 = UIResponder.nearestActionRunner.getter(), v20 = v19, v17, v18))
  {
    ObjectType = swift_getObjectType();
    v22 = dispatch thunk of ActionRunner.performEffects(of:asPartOf:)(a1, a2, ObjectType, v20);
    swift_unknownObjectRelease(v18);
    return v22;
  }
  else
  {
    static OSLogger.actions.getter();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
    v25 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v26 = swift_allocObject(v24, ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72), *(unsigned __int8 *)(v25 + 80) | 7);
    *(_OWORD *)(v26 + 16) = xmmword_2F03C0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1);
    v27._object = (void *)0x8000000000308060;
    v27._countAndFlagsBits = 0xD00000000000001DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    v28 = a1[3];
    v29 = __swift_project_boxed_opaque_existential_1(a1, v28);
    v35[3] = v28;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(boxed_opaque_existential_0, v29, v28);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v35);
    sub_D1D4((uint64_t)v35, &qword_3D1A70);
    v31._countAndFlagsBits = 46;
    v31._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    LogMessage.init(stringInterpolation:)(v10);
    Logger.error(_:)(v26, v11, &protocol witness table for OSLogger);
    v32 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D62B0);
    (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v7, enum case for ActionOutcome.unsupported(_:), v34);
    return Promise.__allocating_init(value:)(v7);
  }
}

uint64_t sub_1CBCC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *Strong;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD *, __int128 *, id);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *boxed_opaque_existential_0;
  Swift::String v39;
  __n128 v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  _BYTE v69[24];
  uint64_t v70;
  id v71;
  _QWORD v72[5];
  _QWORD v73[6];

  v4 = v3;
  v65 = a2;
  v7 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OSLogger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1180);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v64 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for MetricsFieldsContext(0);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v60 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1188);
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (Strong
    && (v20 = Strong,
        v21 = objc_msgSend(Strong, "nextResponder"),
        v20,
        v21)
    && (v22 = UIResponder.nearestActionRunner.getter(), v58 = v23, v21, v22))
  {
    v57 = v22;
    v24 = a3;
    BaseObjectGraph.injectIfAvailable<A>(_:)(v73, &type metadata for ActionOrigin, &type metadata for ActionOrigin);
    v25 = a1;
    sub_1D500((uint64_t)a1);
    sub_1D5D4((uint64_t)a1, (uint64_t)v69);
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1198);
    if (swift_dynamicCast(&v66, v69, v26, v27, 6))
    {
      sub_1B738(&v66, (uint64_t)v72);
      v28 = *(void (**)(_QWORD *, __int128 *, id))(v4 + 24);
      if (v28)
      {
        v29 = *(_QWORD *)(v4 + 32);
        sub_D184((uint64_t)v73, (uint64_t)v69, (uint64_t *)&unk_3D30E0);
        v30 = v63;
        v31 = v60;
        if (v70 == 1)
        {
          swift_retain(v29);
          sub_D1D4((uint64_t)v69, (uint64_t *)&unk_3D30E0);
          v66 = 0u;
          v67 = 0u;
        }
        else
        {
          sub_D184((uint64_t)v69, (uint64_t)&v66, &qword_3D1A70);
          swift_retain(v29);
          sub_1D628((uint64_t)v69);
        }
        sub_D184((uint64_t)v73, (uint64_t)v69, (uint64_t *)&unk_3D30E0);
        v47 = v61;
        v48 = v59;
        if (v70 == 1)
        {
          sub_D1D4((uint64_t)v69, (uint64_t *)&unk_3D30E0);
          v49 = 0;
        }
        else
        {
          v49 = v71;
          v50 = v71;
          sub_1D628((uint64_t)v69);
        }
        v28(v72, &v66, v49);

        sub_1D618((uint64_t)v28, v29);
        v45 = sub_D1D4((uint64_t)&v66, &qword_3D1A70);
        v46 = v62;
      }
      else
      {
        v44 = type metadata accessor for ChildAndParentLocation(0);
        v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v18, 1, 1, v44);
        v30 = v63;
        v46 = v62;
        v47 = v61;
        v31 = v60;
        v48 = v59;
      }
      v51 = v64;
      static MetricsFieldsContext.Property<A>.locationFields.getter(v45);
      v52 = type metadata accessor for ChildAndParentLocation(0);
      MetricsFieldsContext.addingValue<A>(_:forProperty:)(v18, v51, v52);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v47);
      v53 = v57;
      ObjectType = swift_getObjectType();
      dispatch thunk of ActionRunner.processMetrics(of:using:asPartOf:)(v25, v31, v24, ObjectType, v58);
      v55 = swift_unknownObjectRelease(v53);
      (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v31, v30, v55);
      sub_D1D4((uint64_t)v18, &qword_3D1188);
      __swift_destroy_boxed_opaque_existential_0(v72);
    }
    else
    {
      v68 = 0;
      v66 = 0u;
      v67 = 0u;
      sub_D1D4((uint64_t)&v66, &qword_3D11A0);
      v42 = v57;
      v43 = swift_getObjectType();
      dispatch thunk of ActionRunner.processMetrics(of:using:asPartOf:)(a1, v65, a3, v43, v58);
      swift_unknownObjectRelease(v42);
    }
    return sub_D1D4((uint64_t)v73, (uint64_t *)&unk_3D30E0);
  }
  else
  {
    static OSLogger.actions.getter();
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
    v33 = type metadata accessor for LogMessage(0);
    v34 = swift_allocObject(v32, ((*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v33 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80) | 7);
    *(_OWORD *)(v34 + 16) = xmmword_2F03C0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1);
    v35._object = (void *)0x8000000000308040;
    v35._countAndFlagsBits = 0xD00000000000001DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    v36 = a1[3];
    v37 = __swift_project_boxed_opaque_existential_1(a1, v36);
    v73[3] = v36;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v73);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(boxed_opaque_existential_0, v37, v36);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v73);
    sub_D1D4((uint64_t)v73, &qword_3D1A70);
    v39._countAndFlagsBits = 46;
    v39._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    LogMessage.init(stringInterpolation:)(v9);
    Logger.error(_:)(v34, v10, &protocol witness table for OSLogger);
    v40 = swift_bridgeObjectRelease(v34);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v40);
  }
}

uint64_t sub_1D1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  uint64_t v8;
  unsigned __int8 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];

  if (!*(_QWORD *)(a3 + 16))
  {
    v11 = 0u;
    v12 = 0u;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain(a2);
  v6 = sub_1D358(a1, a2);
  if ((v7 & 1) == 0)
  {
    v11 = 0u;
    v12 = 0u;
    swift_bridgeObjectRelease(a2);
    goto LABEL_10;
  }
  sub_1D66C(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)&v11);
  swift_bridgeObjectRelease(a2);
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_10:
    sub_D1D4((uint64_t)&v11, &qword_3D1A70);
    return 2;
  }
  sub_1D65C(&v11, v13);
  sub_1D66C((uint64_t)v13, (uint64_t)&v11);
  if (swift_dynamicCast(&v10, &v11, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    v8 = v10;
  else
    v8 = 2;
  __swift_destroy_boxed_opaque_existential_0(v13);
  return v8;
}

uint64_t sub_1D2C8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  sub_1D618(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for PageActionRunner()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews16PageActionRunner);
}

_QWORD *__swift_allocate_boxed_opaque_existential_0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

unint64_t sub_1D358(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_1D3BC(a1, a2, v5);
}

unint64_t sub_1D3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

void sub_1D500(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  _BYTE v12[40];

  type metadata accessor for MetricsActivity(0);
  v2 = (void *)static MetricsActivity.shared.getter();
  v3 = MetricsActivity.currentPageFields.getter();

  if (v3)
  {
    v4 = static MetricsField<>.sharedContent.getter();
    v6 = v5;
    v7 = sub_1D1C8(v4, v5, v3);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v6);
    if ((v7 & 1) != 0)
    {
      sub_1D5D4(a1, (uint64_t)v12);
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D11A8);
      if ((swift_dynamicCast(v11, v12, v8, v9, 6) & 1) != 0)
      {
        v10 = v11[0];
        dispatch thunk of ShareablePlayAction.markAsSharedContent()(*(_QWORD *)v11[0], v11[1]);
        swift_release(v10);
      }
    }
  }
}

uint64_t sub_1D5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D618(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_1D628(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for ActionOrigin - 1) + 8))();
  return a1;
}

_OWORD *sub_1D65C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1D66C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

double sub_1D6A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v8[24];
  _QWORD v9[5];

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_objectGraph) = a1;
  swift_retain(a1);
  swift_release(v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(v9, v3, v3);
  v4 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_imageProvider;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_imageProvider, v8, 33, 0);
  sub_1EB00((uint64_t)v9, v4, &qword_3D1230);
  swift_endAccess(v8);
  v5 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v9, v5, v5);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_pageRenderController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_pageRenderController) = v9[0];
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_1D85C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscription));
  sub_D1D4(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscribedRequest, &qword_3D1228);
  sub_D1D4(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_imageProvider, &qword_3D1230);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_pageRenderController));
  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_objectGraph));
}

id sub_1D8C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CachingArtworkView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1D974()
{
  return type metadata accessor for CachingArtworkView(0);
}

uint64_t type metadata accessor for CachingArtworkView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D11F8;
  if (!qword_3D11F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CachingArtworkView);
  return result;
}

void sub_1D9B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  sub_1DA3C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_2F04A0;
    v4[3] = "\b";
    v4[4] = "\b";
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 872);
  }
}

void sub_1DA3C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D1208)
  {
    v2 = type metadata accessor for ArtworkRequest(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D1208);
  }
}

uint64_t sub_1DA90()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_objectGraph));
}

uint64_t sub_1DAA4(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  uint64_t OpaqueTypeConformance2;
  uint64_t v44;
  char v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  id v74;
  char v75[24];
  _QWORD v76[3];
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[6];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1210);
  v62 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v60 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1218);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v66 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1220);
  v71 = *(_QWORD *)(v9 - 8);
  v72 = v9;
  __chkstk_darwin(v9);
  v70 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1228);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArtworkRequest(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v64 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v58 - v18;
  v20 = type metadata accessor for Logger(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = static Logger.artwork.getter(v22);
  v26 = static os_log_type_t.info.getter(v25);
  SignpostAndLogTrace(domain:level:)(v79, v24, v26);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  v69 = a1;
  Traceable.traced(by:)(v79, v14, &protocol witness table for ArtworkRequest);
  v59 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v59(v13, v19, v14);
  v61 = v15;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  v27 = (uint64_t)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscribedRequest];
  swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscribedRequest], v76, 33, 0);
  sub_1EB00((uint64_t)v13, v27, &qword_3D1228);
  swift_endAccess(v76);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView], "setImage:", 0);
  objc_msgSend(v2, "invalidateIntrinsicContentSize");
  v28 = (uint64_t)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_imageProvider];
  swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_imageProvider], v75, 0, 0);
  result = sub_D184(v28, (uint64_t)v76, &qword_3D1230);
  v30 = v77;
  if (v77)
  {
    v31 = v78;
    __swift_project_boxed_opaque_existential_1(v76, v77);
    v58 = v19;
    v73[0] = dispatch thunk of ImageProvider.load(artwork:)(v19, v30, v31);
    v32 = sub_1E2A0();
    v74 = (id)static OS_dispatch_queue.main.getter();
    v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v6, 1, 1, v33);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1238);
    v35 = sub_10EDC(&qword_3D1240, &qword_3D1238, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v36 = sub_1E2DC();
    v37 = v60;
    Publisher.receive<A>(on:options:)(&v74, v6, v34, v32, v35, v36);
    sub_D1D4((uint64_t)v6, &qword_3D2E70);

    swift_release(v73[0]);
    __swift_destroy_boxed_opaque_existential_0(v76);
    v38 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_pageRenderController];
    v39 = sub_10EDC(&qword_3D1248, &qword_3D1210, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v40 = swift_retain(v38);
    v41 = v66;
    v42 = v65;
    Publisher.emitPageRenderResourceEvents(using:onScreen:)(v40);
    swift_release(v38);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v42);
    sub_1D5D4((uint64_t)v79, (uint64_t)v76);
    v73[0] = v42;
    v73[1] = v39;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v73, &opaque type descriptor for <<opaque return type of Publisher.emitPageRenderResourceEvents(using:onScreen:)>>, 1);
    v44 = v68;
    v45 = static EmitLifecycle.defaultVerbosity.getter(v68, OpaqueTypeConformance2);
    v46 = v70;
    Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)(v76, "CachingArtworkView", 18, 2, 1, 0, 0, v45 & 1, v44, OpaqueTypeConformance2);
    sub_D1D4((uint64_t)v76, &qword_3D1250);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v44);
    v47 = v64;
    v59(v64, v69, v14);
    v48 = v61;
    v49 = *(unsigned __int8 *)(v61 + 80);
    v50 = (v49 + 16) & ~v49;
    v51 = swift_allocObject(&unk_37B690, v50 + v63, v49 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v51 + v50, v47, v14);
    v52 = swift_allocObject(&unk_37B6B8, 24, 7);
    *(_QWORD *)(v52 + 16) = v2;
    v53 = sub_10EDC(&qword_3D1258, &qword_3D1220, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v54 = v2;
    v55 = v72;
    v56 = Publisher.sink(receiveCompletion:receiveValue:)(sub_1E8D4, v51, sub_1EA08, v52, v72, v53);
    swift_release(v51);
    swift_release(v52);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v46, v55);
    v57 = *(_QWORD *)&v54[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscription];
    *(_QWORD *)&v54[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscription] = v56;
    swift_release(v57);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v58, v14);
    return __swift_destroy_boxed_opaque_existential_0(v79);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1E1C8(double a1, double a2, double a3, double a4)
{
  return sub_1E338((SEL *)&selRef_frame, (SEL *)&selRef_setFrame_, a1, a2, a3, a4);
}

id sub_1E1E8(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for CachingArtworkView(0);
  return objc_msgSendSuper2(&v5, *a3);
}

unint64_t sub_1E2A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2F10;
  if (!qword_3D2F10)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D2F10);
  }
  return result;
}

unint64_t sub_1E2DC()
{
  unint64_t result;
  unint64_t v1;

  result = qword_3D4D80;
  if (!qword_3D4D80)
  {
    v1 = sub_1E2A0();
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_3D4D80);
  }
  return result;
}

id sub_1E324(double a1, double a2, double a3, double a4)
{
  return sub_1E338((SEL *)&selRef_bounds, (SEL *)&selRef_setBounds_, a1, a2, a3, a4);
}

id sub_1E338(SEL *a1, SEL *a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  char *v9;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  objc_class *v28;
  id result;
  double v31;
  double v32;
  double v34;
  double v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char v39[24];
  objc_super v40;

  v9 = v6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1228);
  __chkstk_darwin(v14);
  v16 = &v39[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v17 = type metadata accessor for ArtworkRequest(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = &v39[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v19);
  v23 = &v39[-v22 - 8];
  objc_msgSend(v9, *a1);
  v25 = v24;
  v27 = v26;
  v28 = (objc_class *)type metadata accessor for CachingArtworkView(0);
  v40.receiver = v9;
  v40.super_class = v28;
  result = objc_msgSendSuper2(&v40, *a2, a3, a4, a5, a6);
  if (v25 != a5 || v27 != a6)
  {
    result = objc_msgSend(v9, "bounds");
    if (v31 >= 1.0 && v32 >= 1.0)
    {
      v34 = v31;
      v35 = v32;
      v36 = (uint64_t)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscribedRequest];
      swift_beginAccess(&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscribedRequest], v39, 0, 0);
      sub_D184(v36, (uint64_t)v16, &qword_3D1228);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
      {
        return (id)sub_D1D4((uint64_t)v16, &qword_3D1228);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v16, v17);
        ArtworkRequest.resized(to:displayScale:)(0, 1, v34, v35);
        sub_1DAA4(v21);
        v37 = *(void (**)(char *, uint64_t))(v18 + 8);
        v37(v21, v17);
        return (id)((uint64_t (*)(char *, uint64_t))v37)(v23, v17);
      }
    }
  }
  return result;
}

uint64_t sub_1E55C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __n128 v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for ArtworkRequest(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v33 - v9;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  result = __chkstk_darwin(v11);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  if (v16)
  {
    v17 = swift_errorRetain(v16);
    static Logger.artwork.getter(v17);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v18(v10, a2, v4);
    swift_errorRetain(v16);
    v19 = swift_errorRetain(v16);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter();
    v38 = v20;
    v37 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(22, -1);
      v35 = v11;
      v23 = v22;
      v24 = (uint64_t *)swift_slowAlloc(8, -1);
      v34 = swift_slowAlloc(32, -1);
      v40 = v34;
      *(_DWORD *)v23 = 136315394;
      v36 = v12;
      v18(v8, (uint64_t)v10, v4);
      v25 = String.init<A>(describing:)(v8, v4);
      v27 = v26;
      v39 = sub_37E78(v25, v26, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      v28 = swift_bridgeObjectRelease(v27);
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v10, v4, v28);
      *(_WORD *)(v23 + 12) = 2112;
      swift_errorRetain(v16);
      v29 = _swift_stdlib_bridgeErrorToNSError(v16);
      v39 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      *v24 = v29;
      swift_errorRelease(v16);
      swift_errorRelease(v16);
      v30 = v38;
      _os_log_impl(&dword_0, v38, (os_log_type_t)v37, "Failure fetching artwork for request %s, error %@", (uint8_t *)v23, 0x16u);
      v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F50);
      swift_arrayDestroy(v24, 1, v31);
      swift_slowDealloc(v24, -1, -1);
      v32 = v34;
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      swift_errorRelease(v16);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v35);
    }
    else
    {
      swift_errorRelease(v16);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      swift_errorRelease(v16);
      swift_errorRelease(v16);

      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
  }
  return result;
}

uint64_t sub_1E874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ArtworkRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1E8D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkRequest(0) - 8) + 80);
  return sub_1E55C(a1, v1 + ((v3 + 16) & ~v3));
}

void sub_1E910(void **a1, _BYTE *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v6 = v3;
  if (a2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode + 8] == 1)
  {
    objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView], "setImage:", v3);
  }
  else
  {
    v4 = *(void **)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
    v5 = objc_msgSend(v3, "imageWithRenderingMode:", *(_QWORD *)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode]);
    objc_msgSend(v4, "setImage:", v5);

  }
  objc_msgSend(a2, "invalidateIntrinsicContentSize");

}

uint64_t sub_1E9E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1EA08(void **a1)
{
  uint64_t v1;

  sub_1E910(a1, *(_BYTE **)(v1 + 16));
}

uint64_t sub_1EA10(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return _swift_stdlib_bridgeErrorToNSError(v1);
}

uint64_t sub_1EA30(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1EA50(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a4();
  v7 = (void *)v6;
  v8 = *a1 + 8;
  if (v6)
    v10 = v6;
  else
    v10 = 0;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
  *a1 = v8;
  v9 = *a2;
  if (*a2)
  {
    *v9 = v7;
    *a2 = v9 + 1;
  }
  else
  {

  }
}

uint64_t sub_1EB00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

id sub_1EB44()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  qword_3FA918 = (uint64_t)result;
  return result;
}

unint64_t sub_1EB7C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1FD00(*a1);
  *a2 = result;
  return result;
}

void sub_1EBA4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

char *sub_1EBB0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _OWORD *v9;
  __int128 v10;
  id v11;
  char *v12;
  id v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  id v19;
  objc_super v21;

  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorInset];
  v10 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *v9 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v9[1] = v10;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_style] = 2;
  v11 = objc_allocWithZone((Class)UIView);
  v12 = v4;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorView] = v13;

  v21.receiver = v12;
  v21.super_class = (Class)type metadata accessor for DividerView();
  v14 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorView;
  v16 = *(void **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorView];
  v17 = qword_3CF090;
  v18 = v14;
  v19 = v16;
  if (v17 != -1)
    swift_once(&qword_3CF090, sub_1EB44);
  objc_msgSend(v19, "setBackgroundColor:", qword_3FA918);

  objc_msgSend(v18, "addSubview:", *(_QWORD *)&v14[v15]);
  return v18;
}

id sub_1EE1C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  unint64_t v15;
  double v16;
  id v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  CGFloat MinX;
  double *v24;
  double v25;
  double Width;
  void *v27;
  CGFloat v28;
  objc_super v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for DividerView();
  v30.receiver = v0;
  v30.super_class = v6;
  objc_msgSendSuper2(&v30, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = sub_1FEB8();
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v15) & 1) != 0)
    v16 = 1.0;
  else
    v16 = 0.5;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FloatingPointRoundingRule.down(_:), v2);
  v17 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v17, "displayScale");
  v19 = v18;
  if (v18 < COERCE_DOUBLE(1))
  {
    v20 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v20, "scale");
    v19 = v21;

  }
  v22 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v19, v16);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v31.origin.x = v8;
  v31.origin.y = v10;
  v31.size.width = v12;
  v31.size.height = v14;
  MinX = CGRectGetMinX(v31);
  v24 = (double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorInset];
  v25 = MinX + *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorInset + 8];
  if (objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection") == (char *)&dword_0 + 1)
  {
    v32.origin.x = v8;
    v32.origin.y = v10;
    v32.size.width = v12;
    v32.size.height = v14;
    Width = CGRectGetWidth(v32);
    v33.origin.x = v8;
    v33.origin.y = v10;
    v33.size.width = v12;
    v33.size.height = v14;
    v25 = Width - (CGRectGetWidth(v33) - v24[1] - v24[3]) - v25;
  }
  v27 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11DividerView_separatorView];
  v34.origin.x = v8;
  v34.origin.y = v10;
  v34.size.width = v12;
  v34.size.height = v14;
  v28 = CGRectGetMidY(v34) + v22 * -0.5;
  v35.origin.x = v8;
  v35.origin.y = v10;
  v35.size.width = v12;
  v35.size.height = v14;
  return objc_msgSend(v27, "setFrame:", v25, v28, CGRectGetWidth(v35) - v24[1] - v24[3], v22);
}

id sub_1F0DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DividerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DividerView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews11DividerView);
}

char *sub_1F13C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char *v18;
  id v19;
  char *v20;
  void *v21;
  uint64_t v23;
  objc_super v24;
  _QWORD v25[5];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for Separator.Position(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_lineColor;
  v16 = (void *)objc_opt_self(UIColor);
  v17 = v4;
  *(_QWORD *)&v5[v15] = objc_msgSend(v16, "separatorColor");
  v18 = &v17[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_lineCompositingFilter];
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for Separator.Position.bottom(_:), v11);
  v25[3] = type metadata accessor for ZeroDimension(0);
  v25[4] = &protocol witness table for ZeroDimension;
  __swift_allocate_boxed_opaque_existential_0(v25);
  static ZeroDimension.zero.getter();
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v14, v25, 0.0, 0.0);
  v19 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_lineView] = v19;

  v24.receiver = v17;
  v24.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v20, "setUserInteractionEnabled:", 0);
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v20, "setEdgesInsettingLayoutMarginsFromSafeArea:", 0);
  v21 = *(void **)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_lineView];
  objc_msgSend(v21, "setBackgroundColor:", *(_QWORD *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_lineColor]);
  objc_msgSend(v20, "addSubview:", v21);

  return v20;
}

id sub_1F574()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  id v24;
  double v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  void *v30;
  double MinX;
  double v32;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  objc_super v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38.receiver = v1;
  v38.super_class = ObjectType;
  objc_msgSendSuper2(&v38, "layoutSubviews");
  objc_msgSend(v1, "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  objc_msgSend(v1, "layoutMargins");
  v17 = UIEdgeInsetsInsetRect(v8, v10, v12, v14, v15, v16);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = objc_msgSend(v1, "traitCollection");
  v25 = static Separator.thickness(compatibleWith:)();

  v26 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_separator], v37, 32, 0);
  Separator.verticalOutset.getter(v34, v26);
  swift_endAccess(v37);
  v27 = v35;
  v28 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  static Dimensions.defaultRoundingRule.getter();
  v29 = AnyDimension.value(in:rounded:)(v1, v6, v27, v28);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_0(v34);
  v30 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_lineView];
  v39.origin.x = v17;
  v39.origin.y = v19;
  v39.size.width = v21;
  v39.size.height = v23;
  MinX = CGRectGetMinX(v39);
  v40.origin.x = v17;
  v40.origin.y = v19;
  v40.size.width = v21;
  v40.size.height = v23;
  v32 = v29 + CGRectGetMinY(v40);
  v41.origin.x = v17;
  v41.origin.y = v19;
  v41.size.width = v21;
  v41.size.height = v23;
  return objc_msgSend(v30, "setFrame:", MinX, v32, CGRectGetWidth(v41), v25);
}

uint64_t sub_1F848()
{
  return type metadata accessor for SeparatorSupplementaryView(0);
}

uint64_t type metadata accessor for SeparatorSupplementaryView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D12E8;
  if (!qword_3D12E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SeparatorSupplementaryView);
  return result;
}

uint64_t sub_1F88C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[2] = " ";
  result = type metadata accessor for Separator(319, a2);
  if (v4 <= 0x3F)
  {
    v5[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DividerView.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DividerView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1F9F0 + 4 * byte_2F04F5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1FA24 + 4 * byte_2F04F0[v4]))();
}

uint64_t sub_1FA24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1FA2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1FA34);
  return result;
}

uint64_t sub_1FA40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1FA48);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1FA4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1FA54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DividerView.Style()
{
  return &type metadata for DividerView.Style;
}

unint64_t sub_1FA74()
{
  unint64_t result;

  result = qword_3D12F8;
  if (!qword_3D12F8)
  {
    result = swift_getWitnessTable(&unk_2F05E8, &type metadata for DividerView.Style);
    atomic_store(result, (unint64_t *)&qword_3D12F8);
  }
  return result;
}

double sub_1FAB8(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  double v9;
  id v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  uint64_t v16;
  NSString *v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  _QWORD v23[3];
  char v24;
  NSString *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int16 v31;

  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1FEB8();
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v8) & 1) != 0)
    v9 = 1.0;
  else
    v9 = 0.5;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for FloatingPointRoundingRule.down(_:), v4);
  v10 = objc_msgSend(a2, "traitCollection");
  objc_msgSend(v10, "displayScale");
  v12 = v11;
  if (v11 < COERCE_DOUBLE(1))
  {
    v13 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v13, "scale");
    v12 = v14;

  }
  v15 = CGFloat.rounded(_:toScale:)((uint64_t)v7, v12, v9);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = qword_2F0618[a1];
  v17 = UIFontTextStyleBody;
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v18 = __swift_project_value_buffer(v4, (uint64_t)qword_3FCFB0);
  v23[1] = v16;
  v23[2] = 0;
  v24 = 0;
  v25 = v17;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0;
  v19 = objc_msgSend(a2, "traitCollection");
  sub_1DD06C((uint64_t)v19, v18, 0);
  v21 = v20;

  sub_14788(v17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return v15 + v21;
}

unint64_t sub_1FD00(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

void sub_1FD2C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[5];

  v1 = type metadata accessor for Separator.Position(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v8[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_lineColor;
  *(_QWORD *)&v0[v5] = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  v6 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26SeparatorSupplementaryView_lineCompositingFilter];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for Separator.Position.bottom(_:), v1);
  v8[3] = type metadata accessor for ZeroDimension(0);
  v8[4] = &protocol witness table for ZeroDimension;
  __swift_allocate_boxed_opaque_existential_0(v8);
  static ZeroDimension.zero.getter();
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v4, v8, 0.0, 0.0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/DividerView.swift", 41, 2, 192, 0);
  __break(1u);
}

uint64_t sub_1FE78(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1FEB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7730;
  if (!qword_3D7730)
  {
    v1 = objc_opt_self(UITraitCollection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D7730);
  }
  return result;
}

void sub_1FEF4()
{
  qword_3D1300 = 0x4030000000000000;
}

void sub_1FF04()
{
  qword_3D1308 = 0xC018000000000000;
}

void sub_1FF14()
{
  qword_3D1310 = 0x4014000000000000;
}

int64x2_t sub_1FF24()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4057800000000000uLL);
  xmmword_3D1318 = (__int128)result;
  return result;
}

void sub_1FF40()
{
  qword_3D1328 = 0x402C000000000000;
}

double sub_1FF50()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.08);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.1);
  _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v0, v1);
  v3 = v2;

  qword_3D1330 = v3;
  result = 6.0;
  unk_3D1338 = xmmword_2F0650;
  qword_3D1348 = 0x4010000000000000;
  return result;
}

uint64_t sub_1FFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for PlayControlsIconsSet(0);
  __swift_allocate_value_buffer(v0, qword_3D1350);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3D1350);
  if (qword_3CFDE0 != -1)
    swift_once(&qword_3CFDE0, sub_2B3230);
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_3FD8A0);
  return sub_19C4C(v2, v1, type metadata accessor for PlayControlsIconsSet);
}

char *sub_2007C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  __int128 v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int16 v26;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___artworkContainer;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___artworkContainer);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___artworkContainer);
  }
  else
  {
    v4 = v0;
    v5 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkView);
    v19 = 1;
    v20 = 0u;
    v21 = 0u;
    v22 = 0u;
    v23 = 0u;
    v24 = 0u;
    v25 = 0u;
    v26 = 0;
    v6 = objc_allocWithZone((Class)type metadata accessor for ArtworkContainer(0));
    v7 = sub_2633EC(3, (char *)v5, &v19);
    v8 = qword_3CF0C0;
    v9 = (char *)*(id *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
    if (v8 != -1)
      swift_once(&qword_3CF0C0, sub_1FF50);
    v10 = (void *)qword_3D1330;
    v11 = qword_3D1348;
    v12 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
    v13 = *(void **)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
    v14 = unk_3D1338;
    *(_QWORD *)v12 = qword_3D1330;
    *(_OWORD *)(v12 + 8) = v14;
    *((_QWORD *)v12 + 3) = v11;
    v15 = v10;

    sub_E9020();
    v16 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v17 = v2;
  return v3;
}

id sub_201D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___smallPlayButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___smallPlayButton);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___smallPlayButton);
  }
  else
  {
    v4 = sub_20234(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_20234(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  _BYTE *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  id v33;
  __n128 v34;
  void *v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  v3 = __chkstk_darwin(v2);
  v39 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v37 - v6;
  __chkstk_darwin(v5);
  v9 = (char *)&v37 - v8;
  v10 = type metadata accessor for Glyph(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v37 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v37 - v18;
  v20 = swift_allocObject(&unk_37B838, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, a1);
  v21 = swift_retain(v20);
  v40 = v19;
  static Glyph.MacEpisodeCells.play.getter(v21);
  v22 = type metadata accessor for Glyph.Color(0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v38 = v9;
  v23(v9, 1, 1, v22);
  v24 = swift_allocObject(&unk_37B860, 32, 7);
  *(_QWORD *)(v24 + 16) = sub_236B4;
  *(_QWORD *)(v24 + 24) = v20;
  v25 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v25(v17, v19, v10);
  sub_236F0((uint64_t)v9, (uint64_t)v7);
  v26 = objc_allocWithZone((Class)type metadata accessor for GlyphPlayButton(0));
  v26[OBJC_IVAR____TtC23ShelfKitCollectionViews15GlyphPlayButton_isHovering] = 0;
  v27 = &v26[OBJC_IVAR____TtC23ShelfKitCollectionViews15GlyphPlayButton_playButtonState];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  v25(v14, v17, v10);
  v28 = v39;
  sub_236F0((uint64_t)v7, v39);
  swift_retain(v20);
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v14, v28, 0, 0, 1, 0.0, 0.0, 0.0, 0.0);
  v30 = v29;
  sub_D1D4((uint64_t)v7, (uint64_t *)&unk_3D4C90);
  v31 = *(void (**)(char *, uint64_t))(v11 + 8);
  v31(v17, v10);
  sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
  v32 = swift_allocObject(&unk_37B888, 32, 7);
  *(_QWORD *)(v32 + 16) = sub_101EC;
  *(_QWORD *)(v32 + 24) = v24;
  v33 = v30;
  v34 = swift_retain(v24);
  v35 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v34, 0, 0, 0, sub_23764, v32);
  objc_msgSend(v33, "addAction:forControlEvents:", v35, 64);
  swift_release(v24);

  sub_D1D4((uint64_t)v38, (uint64_t *)&unk_3D4C90);
  v31(v40, v10);
  swift_release_n(v20, 2);
  objc_msgSend(v33, "setHidden:", 1);
  return v33;
}

id sub_205AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___doubleClickToPlayGesture;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___doubleClickToPlayGesture);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___doubleClickToPlayGesture);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EpisodeCellDoubleClickGestureRecognizer()), "init");
    v6 = swift_allocObject(&unk_37B838, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v4);
    swift_retain(v6);
    v7 = sub_B081C((uint64_t)sub_23A7C, v6);
    swift_release(v7);
    swift_release_n(v6, 2);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_20670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[2];
  _QWORD v13[5];
  _BYTE v14[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)&Strong[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter];
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction);
      if (v7)
      {
        v13[3] = type metadata accessor for Action(0);
        v13[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        v13[0] = v7;
        memset(v12, 0, sizeof(v12));
        v8 = type metadata accessor for SingleShowMacEpisodeCell();
        v10 = sub_239FC(&qword_3D1418, v9, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowMacEpisodeCell, (uint64_t)&unk_2F07D4);
        swift_retain_n(v7, 2);
        v11 = ShelfUIKitCell.perform(_:from:in:)(v13, v12, 0, v8, v10);
        swift_release(v7);
        swift_release(v11);

        sub_D1D4((uint64_t)v12, &qword_3D1A70);
        __swift_destroy_boxed_opaque_existential_0(v13);
      }
      else
      {

      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_207A8(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE *v7;

  v2 = v1;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_isHovering;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkScrim], "setHidden:", (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_isHovering] & 1) == 0);
  v5 = sub_2007C();
  sub_2624F4(v2[v4], 0);

  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter];
  if (v6)
  {
    *(_BYTE *)(v6 + 56) = v2[v4];
    swift_retain(v6);
    sub_2B33B8();
    swift_release(v6);
    v7 = sub_201D4();
    v7[OBJC_IVAR____TtC23ShelfKitCollectionViews15GlyphPlayButton_isHovering] = v2[v4];
    sub_157A28();

    if (v2[v4] != (a1 & 1))
      objc_msgSend(v2, "setNeedsUpdateConfiguration");
  }
  else
  {
    __break(1u);
  }
}

void sub_20938()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  id v3;
  id v4;
  uint64_t v5;
  double v6;
  void *v7;
  _BYTE *v8;
  char v9;
  objc_super v10;
  objc_super v11;
  objc_super v12;
  objc_super v13;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_201D4();
  v13.receiver = v1;
  v13.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v13, "isSelected");
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for GlyphPlayButton(0);
  objc_msgSendSuper2(&v12, "setSelected:", v4);
  sub_157A28();

  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter];
  if (v5)
  {
    v10.receiver = v1;
    v10.super_class = ObjectType;
    *(_QWORD *)&v6 = swift_retain(v5).n128_u64[0];
    *(_BYTE *)(v5 + 58) = objc_msgSendSuper2(&v10, "isSelected", v6);
    sub_2B3668();
    swift_release(v5);
  }
  v7 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView];
  if (v7)
  {
    v11.receiver = v1;
    v11.super_class = ObjectType;
    v8 = v7;
    v9 = objc_msgSendSuper2(&v11, "isSelected");
    v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isSuperviewSelected] = v9;
    sub_1B7F78(v9);

  }
}

id sub_20A40(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  objc_class *ObjectType;
  objc_super v25;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkScrim;
  v11 = objc_allocWithZone((Class)UIView);
  v12 = v4;
  v13 = objc_msgSend(v11, "init");
  v14 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.28);
  objc_msgSend(v13, "setBackgroundColor:", v14);

  objc_msgSend(v13, "setHidden:", 1);
  *(_QWORD *)&v5[v10] = v13;
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkView;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CachingArtworkView(0)), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___artworkContainer] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___smallPlayButton] = 0;
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkOverlay;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v18 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.28);
  objc_msgSend(v17, "setBackgroundColor:", v18);

  *(_QWORD *)&v12[v16] = v17;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoLeadingConstraint] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoWidthConstraint] = 0;
  v19 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playButtonState];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___doubleClickToPlayGesture] = 0;
  v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_isHovering] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_objectGraph] = 0;

  v25.receiver = v12;
  v25.super_class = ObjectType;
  v20 = objc_msgSendSuper2(&v25, "initWithFrame:", a1, a2, a3, a4);
  sub_B0F90();
  v21 = v20;
  v22 = sub_205AC();
  objc_msgSend(v21, "addGestureRecognizer:", v22);

  return v21;
}

void sub_20CF8(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double leading;
  double bottom;
  double trailing;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  Swift::Int v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  Swift::String v31;
  Swift::String v32;
  unint64_t v33;
  NSString v34;
  void *v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  unint64_t v39;
  NSString v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  char *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  char *v54;
  id v55;
  void *v56;
  void *v57;
  uint64_t v58;
  id *v59;
  double v60;
  id v61;
  id v62;
  char *v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  void *v69;
  id v70;
  char *v71;
  id v72;
  id v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  void *v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  char *v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  char *v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  char *v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  char *v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  char *v124;
  id v125;
  id v126;
  char *v127;
  id v128;
  char *v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  uint64_t v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  void *v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  __C::UILayoutPriority v156;
  Class isa;
  void *v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  void *v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  uint64_t v170;
  void *v171;
  void *v172;
  id v173;
  id v174;
  void *v175;
  id v176;
  id v177;
  void *v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  void *v184;
  id v185;
  id v186;
  id v187;
  id v188;
  id v189;
  id v190;
  id v191;
  void *v192;
  void *v193;
  id v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  Class v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  id v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  objc_super v208;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for PlayControlsIconsSet(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v199 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsView;
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsView]
    || !*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView])
  {
    LOBYTE(v206) = 1;
    if (qword_3CF0C8 != -1)
      swift_once(&qword_3CF0C8, sub_1FFF0);
    v9 = __swift_project_value_buffer(v5, (uint64_t)qword_3D1350);
    sub_19C4C(v9, (uint64_t)v7, type metadata accessor for PlayControlsIconsSet);
    v10 = type metadata accessor for PlayControlsPresenter(0);
    swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    swift_retain(a1);
    v11 = sub_2B4D24((unsigned __int8 *)&v206, (uint64_t)v7, a1);
    swift_release(a1);
    v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter;
    v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter];
    *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter] = v11;
    swift_release(v13);
    v14 = *(_QWORD *)&v2[v12];
    if (v14)
    {
      v208.receiver = v2;
      v208.super_class = ObjectType;
      *(_QWORD *)&v15 = swift_retain(v14).n128_u64[0];
      *(_BYTE *)(v14 + 58) = objc_msgSendSuper2(&v208, "isSelected", v15);
      sub_2B3668();
      swift_release(v14);
      v16 = *(_QWORD *)&v2[v12];
      if (v16)
      {
        leading = NSDirectionalEdgeInsetsZero.leading;
        bottom = NSDirectionalEdgeInsetsZero.bottom;
        trailing = NSDirectionalEdgeInsetsZero.trailing;
        objc_allocWithZone((Class)type metadata accessor for PlayControlsStackView());
        swift_retain(v16);
        v21 = sub_10B650(v20, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);
        v22 = *(void **)&v2[v8];
        *(_QWORD *)&v2[v8] = v21;

        v23 = *(_QWORD *)&v2[v12];
        if (v23)
        {
          *(_QWORD *)(v23 + 40) = &off_37B7E0;
          swift_unknownObjectWeakAssign(v23 + 32, v2);
          LOBYTE(v206) = 5;
          v24 = sub_F3870((uint64_t)&off_379C78);
          v25 = objc_allocWithZone((Class)type metadata accessor for EpisodeInfoView());
          v26 = sub_1B80D8((char *)&v206, v24);
          v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView;
          v28 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView];
          *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView] = v26;

          v29 = *(void **)&v2[v8];
          if (v29)
          {
            v206 = 0;
            v207 = 0xE000000000000000;
            v30 = v29;
            v31._countAndFlagsBits = 0xD00000000000001ELL;
            v31._object = (void *)0x80000000003078F0;
            String.append(_:)(v31);
            v32._countAndFlagsBits = 46;
            v32._object = (void *)0xE100000000000000;
            String.append(_:)(v32);
            LOBYTE(v205) = 1;
            _print_unlocked<A, B>(_:_:)(&v205, &v206, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
            v33 = v207;
            v34 = String._bridgeToObjectiveC()();
            objc_msgSend(v30, "setAccessibilityIdentifier:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

            v35 = *(void **)&v2[v27];
            if (v35)
            {
              v206 = 0;
              v207 = 0xE000000000000000;
              v36 = v35;
              v37._countAndFlagsBits = 0xD00000000000001ELL;
              v37._object = (void *)0x80000000003078F0;
              String.append(_:)(v37);
              v38._countAndFlagsBits = 46;
              v38._object = (void *)0xE100000000000000;
              String.append(_:)(v38);
              LOBYTE(v205) = 2;
              _print_unlocked<A, B>(_:_:)(&v205, &v206, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
              v39 = v207;
              v40 = String._bridgeToObjectiveC()();
              objc_msgSend(v36, "setAccessibilityIdentifier:", v40, swift_bridgeObjectRelease(v39).n128_f64[0]);

              v41 = sub_2007C();
              v42 = &v41[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_delegate];
              *((_QWORD *)v42 + 1) = &off_37B7D0;
              swift_unknownObjectWeakAssign(v42, v2);

              v43 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkView];
              v44 = OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView;
              v45 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkScrim];
              objc_msgSend(*(id *)(v43 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView), "addSubview:", v45);
              v46 = objc_msgSend(v2, "contentView");
              v47 = sub_2007C();
              objc_msgSend(v46, "addSubview:", v47);

              v48 = objc_msgSend(v2, "contentView");
              v49 = sub_201D4();
              objc_msgSend(v48, "addSubview:", v49);

              v50 = objc_msgSend(v2, "contentView");
              if (*(_QWORD *)&v2[v27])
              {
                v51 = v50;
                objc_msgSend(v50, "addSubview:");

                v52 = objc_msgSend(v2, "contentView");
                if (*(_QWORD *)&v2[v8])
                {
                  v53 = v52;
                  objc_msgSend(v52, "addSubview:");

                  objc_msgSend(v45, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                  v54 = sub_2007C();
                  objc_msgSend(v54, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

                  v55 = sub_201D4();
                  objc_msgSend(v55, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

                  v56 = *(void **)&v2[v27];
                  if (v56)
                  {
                    objc_msgSend(v56, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                    v57 = *(void **)&v2[v8];
                    if (v57)
                    {
                      objc_msgSend(v57, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                      v58 = *(_QWORD *)&v2[v27];
                      if (v58)
                      {
                        v59 = (id *)(v58 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel);
                        *(_QWORD *)&v60 = swift_beginAccess(v58 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel, &v206, 0, 0).n128_u64[0];
                        if (*v59
                          && (v61 = objc_msgSend(*v59, "firstBaselineAnchor", v60)) != 0)
                        {
                          v62 = v61;
                          v63 = (char *)sub_201D4();
                          v64 = objc_msgSend(*(id *)&v63[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView], "firstBaselineAnchor");

                          v65 = objc_msgSend(v64, "constraintEqualToAnchor:", v62);
                        }
                        else
                        {
                          v66 = sub_201D4();
                          v64 = objc_msgSend(v66, "topAnchor");

                          v67 = *(void **)&v2[v27];
                          if (!v67)
                          {
LABEL_68:
                            __break(1u);
                            return;
                          }
                          v62 = objc_msgSend(v67, "topAnchor");
                          v65 = objc_msgSend(v64, "constraintEqualToAnchor:", v62);
                        }
                        v68 = v65;

                        v69 = *(void **)&v2[v27];
                        if (v69)
                        {
                          v203 = v68;
                          v70 = objc_msgSend(v69, "leadingAnchor");
                          v71 = sub_2007C();
                          v72 = objc_msgSend(v71, "trailingAnchor");

                          if (qword_3CF0B8 != -1)
                            swift_once(&qword_3CF0B8, sub_1FF40);
                          v73 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v72, *(double *)&qword_3D1328);

                          v74 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoLeadingConstraint;
                          v75 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoLeadingConstraint];
                          v76 = v73;
                          if (v75)
                          {
                            objc_msgSend(v75, "setActive:", 0);
                            v75 = *(void **)&v2[v74];
                          }
                          *(_QWORD *)&v2[v74] = v73;
                          v77 = v73;

                          v78 = *(void **)&v2[v74];
                          if (v78)
                            objc_msgSend(v78, "setActive:", 1);
                          v201 = v8;
                          v204 = v77;

                          v202 = v27;
                          v79 = *(void **)&v2[v27];
                          if (v79)
                          {
                            v80 = objc_msgSend(v79, "widthAnchor");
                            v81 = objc_msgSend(v2, "contentView");
                            v82 = objc_msgSend(v81, "layoutMarginsGuide");

                            v83 = objc_msgSend(v82, "widthAnchor");
                            v84 = objc_msgSend(v80, "constraintEqualToAnchor:multiplier:", v83, 0.6);

                            v85 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoWidthConstraint];
                            v200 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoWidthConstraint;
                            *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoWidthConstraint] = v84;

                            v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
                            v87 = swift_allocObject(v86, 216, 7);
                            *(_OWORD *)(v87 + 16) = xmmword_2F0660;
                            v88 = objc_msgSend(v45, "leadingAnchor");
                            v89 = objc_msgSend(*(id *)(v43 + v44), "leadingAnchor");
                            v90 = objc_msgSend(v88, "constraintEqualToAnchor:", v89);

                            *(_QWORD *)(v87 + 32) = v90;
                            v91 = objc_msgSend(v45, "trailingAnchor");
                            v92 = objc_msgSend(*(id *)(v43 + v44), "trailingAnchor");
                            v93 = objc_msgSend(v91, "constraintEqualToAnchor:", v92);

                            *(_QWORD *)(v87 + 40) = v93;
                            v94 = objc_msgSend(v45, "topAnchor");
                            v95 = objc_msgSend(*(id *)(v43 + v44), "topAnchor");
                            v96 = objc_msgSend(v94, "constraintGreaterThanOrEqualToAnchor:", v95);

                            *(_QWORD *)(v87 + 48) = v96;
                            v97 = objc_msgSend(v45, "bottomAnchor");
                            v98 = objc_msgSend(*(id *)(v43 + v44), "bottomAnchor");
                            v99 = objc_msgSend(v97, "constraintLessThanOrEqualToAnchor:", v98);

                            *(_QWORD *)(v87 + 56) = v99;
                            v100 = sub_2007C();
                            v101 = objc_msgSend(v100, "leadingAnchor");

                            v102 = objc_msgSend(v2, "contentView");
                            v103 = objc_msgSend(v102, "layoutMarginsGuide");

                            v104 = objc_msgSend(v103, "leadingAnchor");
                            v105 = objc_msgSend(v101, "constraintEqualToAnchor:", v104);

                            *(_QWORD *)(v87 + 64) = v105;
                            v106 = sub_2007C();
                            v107 = objc_msgSend(v106, "topAnchor");

                            v108 = objc_msgSend(v2, "contentView");
                            v109 = objc_msgSend(v108, "layoutMarginsGuide");

                            v110 = objc_msgSend(v109, "topAnchor");
                            v111 = objc_msgSend(v107, "constraintGreaterThanOrEqualToAnchor:", v110);

                            *(_QWORD *)(v87 + 72) = v111;
                            v112 = sub_2007C();
                            v113 = objc_msgSend(v112, "bottomAnchor");

                            v114 = objc_msgSend(v2, "contentView");
                            v115 = objc_msgSend(v114, "layoutMarginsGuide");

                            v116 = objc_msgSend(v115, "bottomAnchor");
                            v117 = objc_msgSend(v113, "constraintLessThanOrEqualToAnchor:", v116);

                            *(_QWORD *)(v87 + 80) = v117;
                            v118 = sub_2007C();
                            v119 = objc_msgSend(v118, "centerYAnchor");

                            v120 = objc_msgSend(v2, "contentView");
                            v121 = objc_msgSend(v120, "layoutMarginsGuide");

                            v122 = objc_msgSend(v121, "centerYAnchor");
                            v123 = objc_msgSend(v119, "constraintEqualToAnchor:", v122);

                            *(_QWORD *)(v87 + 88) = v123;
                            v124 = sub_2007C();
                            v125 = objc_msgSend(v124, "heightAnchor");

                            if (qword_3CF0B0 != -1)
                              swift_once(&qword_3CF0B0, sub_1FF24);
                            v126 = objc_msgSend(v125, "constraintEqualToConstant:", *((double *)&xmmword_3D1318 + 1));

                            *(_QWORD *)(v87 + 96) = v126;
                            v127 = sub_2007C();
                            v128 = objc_msgSend(v127, "widthAnchor");

                            v129 = sub_2007C();
                            v130 = objc_msgSend(v129, "heightAnchor");

                            v131 = objc_msgSend(v128, "constraintEqualToAnchor:", v130);
                            v132 = v203;
                            *(_QWORD *)(v87 + 104) = v131;
                            *(_QWORD *)(v87 + 112) = v132;
                            v203 = v132;
                            v133 = sub_201D4();
                            v134 = objc_msgSend(v133, "trailingAnchor");

                            v135 = objc_msgSend(v2, "contentView");
                            v136 = objc_msgSend(v135, "layoutMarginsGuide");

                            v137 = objc_msgSend(v136, "leadingAnchor");
                            v138 = v202;
                            if (qword_3CF0A0 != -1)
                              swift_once(&qword_3CF0A0, sub_1FF04);
                            v139 = objc_msgSend(v134, "constraintEqualToAnchor:constant:", v137, *(double *)&qword_3D1308);

                            *(_QWORD *)(v87 + 120) = v139;
                            v140 = sub_201D4();
                            v141 = objc_msgSend(v140, "heightAnchor");

                            v142 = sub_201D4();
                            v143 = objc_msgSend(v142, "widthAnchor");

                            v144 = objc_msgSend(v141, "constraintEqualToAnchor:", v143);
                            *(_QWORD *)(v87 + 128) = v144;
                            v145 = sub_201D4();
                            v146 = objc_msgSend(v145, "widthAnchor");

                            v147 = objc_msgSend(v146, "constraintEqualToConstant:", 15.5);
                            v148 = v204;
                            *(_QWORD *)(v87 + 136) = v147;
                            *(_QWORD *)(v87 + 144) = v148;
                            v149 = *(void **)&v2[v138];
                            if (v149)
                            {
                              v150 = v148;
                              v151 = objc_msgSend(v149, "topAnchor");
                              v152 = objc_msgSend(v2, "contentView");
                              v153 = objc_msgSend(v152, "layoutMarginsGuide");

                              v154 = objc_msgSend(v153, "topAnchor");
                              if (qword_3CF098 != -1)
                                swift_once(&qword_3CF098, sub_1FEF4);
                              v155 = objc_msgSend(v151, "constraintGreaterThanOrEqualToAnchor:constant:", v154, *(double *)&qword_3D1300);

                              v156.rawValue = static UILayoutPriority.highestBreakable.getter();
                              isa = NSLayoutConstraint.withPriority(priority:)(v156).super.isa;

                              *(_QWORD *)(v87 + 152) = isa;
                              v158 = *(void **)&v2[v138];
                              if (v158)
                              {
                                v204 = v150;
                                v159 = objc_msgSend(v158, "bottomAnchor");
                                v160 = objc_msgSend(v2, "contentView");
                                v161 = objc_msgSend(v160, "layoutMarginsGuide");

                                v162 = objc_msgSend(v161, "bottomAnchor");
                                v163 = objc_msgSend(v159, "constraintLessThanOrEqualToAnchor:constant:", v162, -*(double *)&qword_3D1300);

                                *(_QWORD *)(v87 + 160) = v163;
                                v164 = *(void **)&v2[v138];
                                if (v164)
                                {
                                  v165 = objc_msgSend(v164, "centerYAnchor");
                                  v166 = objc_msgSend(v2, "contentView");
                                  v167 = objc_msgSend(v166, "layoutMarginsGuide");

                                  v168 = objc_msgSend(v167, "centerYAnchor");
                                  v169 = objc_msgSend(v165, "constraintEqualToAnchor:", v168);

                                  *(_QWORD *)(v87 + 168) = v169;
                                  v170 = v201;
                                  v171 = *(void **)&v2[v200];
                                  if (v171)
                                  {
                                    *(_QWORD *)(v87 + 176) = v171;
                                    v172 = *(void **)&v2[v170];
                                    if (v172)
                                    {
                                      v173 = v171;
                                      v174 = objc_msgSend(v172, "leadingAnchor");
                                      v175 = *(void **)&v2[v138];
                                      if (v175)
                                      {
                                        v176 = objc_msgSend(v175, "trailingAnchor");
                                        if (qword_3CF0A8 != -1)
                                          swift_once(&qword_3CF0A8, sub_1FF14);
                                        v177 = objc_msgSend(v174, "constraintEqualToAnchor:constant:", v176, *(double *)&qword_3D1310);

                                        *(_QWORD *)(v87 + 184) = v177;
                                        v178 = *(void **)&v2[v170];
                                        if (v178)
                                        {
                                          v179 = objc_msgSend(v178, "trailingAnchor");
                                          v180 = objc_msgSend(v2, "contentView");
                                          v181 = objc_msgSend(v180, "layoutMarginsGuide");

                                          v182 = objc_msgSend(v181, "trailingAnchor");
                                          v183 = objc_msgSend(v179, "constraintEqualToAnchor:", v182);

                                          *(_QWORD *)(v87 + 192) = v183;
                                          v184 = *(void **)&v2[v170];
                                          if (v184)
                                          {
                                            v185 = objc_msgSend(v184, "centerYAnchor");
                                            v186 = objc_msgSend(v2, "contentView");
                                            v187 = objc_msgSend(v186, "layoutMarginsGuide");

                                            v188 = objc_msgSend(v187, "centerYAnchor");
                                            v189 = objc_msgSend(v185, "constraintEqualToAnchor:", v188);

                                            *(_QWORD *)(v87 + 200) = v189;
                                            v190 = objc_msgSend(v2, "separatorLayoutGuide");
                                            v191 = objc_msgSend(v190, "leadingAnchor");

                                            v192 = *(void **)&v2[v138];
                                            if (v192)
                                            {
                                              v193 = (void *)objc_opt_self(NSLayoutConstraint);
                                              v194 = objc_msgSend(v192, "leadingAnchor");
                                              v195 = objc_msgSend(v191, "constraintEqualToAnchor:", v194);

                                              *(_QWORD *)(v87 + 208) = v195;
                                              v205 = v87;
                                              specialized Array._endMutation()(v196);
                                              v197 = v205;
                                              sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
                                              v198 = Array._bridgeToObjectiveC()().super.isa;
                                              objc_msgSend(v193, "activateConstraints:", v198, swift_bridgeObjectRelease(v197).n128_f64[0]);

                                              return;
                                            }
                                            goto LABEL_67;
                                          }
LABEL_66:
                                          __break(1u);
LABEL_67:
                                          __break(1u);
                                          goto LABEL_68;
                                        }
LABEL_65:
                                        __break(1u);
                                        goto LABEL_66;
                                      }
LABEL_64:
                                      __break(1u);
                                      goto LABEL_65;
                                    }
LABEL_63:
                                    __break(1u);
                                    goto LABEL_64;
                                  }
LABEL_62:
                                  __break(1u);
                                  goto LABEL_63;
                                }
LABEL_61:
                                __break(1u);
                                goto LABEL_62;
                              }
LABEL_60:
                              __break(1u);
                              goto LABEL_61;
                            }
LABEL_59:
                            __break(1u);
                            goto LABEL_60;
                          }
LABEL_58:
                          __break(1u);
                          goto LABEL_59;
                        }
LABEL_57:
                        __break(1u);
                        goto LABEL_58;
                      }
LABEL_56:
                      __break(1u);
                      goto LABEL_57;
                    }
LABEL_55:
                    __break(1u);
                    goto LABEL_56;
                  }
LABEL_54:
                  __break(1u);
                  goto LABEL_55;
                }
LABEL_53:
                __break(1u);
                goto LABEL_54;
              }
LABEL_52:
              __break(1u);
              goto LABEL_53;
            }
LABEL_51:
            __break(1u);
            goto LABEL_52;
          }
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_49;
  }
}

void sub_22138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  char v16[24];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_objectGraph) = a1;
  swift_release(v4);
  swift_retain(a1);
  sub_20CF8(v5);
  sub_1D6A8(a1);
  v6 = sub_2007C();
  sub_262730(a1);

  v7 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView);
  if (v7)
  {
    v8 = (uint64_t *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph];
    swift_beginAccess(&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph], v16, 1, 0);
    v9 = *v8;
    *v8 = a1;
    v10 = v7;
    swift_release(v9);
    v11 = type metadata accessor for ExplicitContentPresenter(0);
    swift_retain(a1);
    BaseObjectGraph.inject<A>(_:)(&v15, v11, v11);
    v12 = *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter];
    *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter] = v15;

    swift_release(v12);
    v13 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsView);
    if (v13)
    {
      v14 = v13;
      PlayControlsStackView.bind(to:)(a1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_2227C(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  double Width;
  id v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  char *v14;
  unsigned __int8 v15;
  objc_super v16;
  CGRect v17;

  v2 = v1;
  v16.receiver = v1;
  v16.super_class = (Class)swift_getObjectType();
  v4 = objc_msgSendSuper2(&v16, "preferredLayoutAttributesFittingAttributes:", a1);
  objc_msgSend(v4, "bounds");
  Width = CGRectGetWidth(v17);
  v6 = objc_msgSend(v1, "contentView");
  objc_msgSend(v6, "directionalLayoutMargins");
  v8 = v7;

  v9 = objc_msgSend(v2, "contentView");
  objc_msgSend(v9, "directionalLayoutMargins");
  v11 = v10;

  v12 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView];
  if (v12)
  {
    v13 = v12;
    EpisodeInfoView.prepareForLayout(fitting:)((Width - v8 - v11) * 0.6);

    v14 = sub_2007C();
    v15 = objc_msgSend(v14, "isHidden");

    if ((v15 & 1) == 0 && qword_3CF0B0 != -1)
      swift_once(&qword_3CF0B0, sub_1FF24);
    if (qword_3CF098 != -1)
      swift_once(&qword_3CF098, sub_1FEF4);
    objc_msgSend(v4, "size");
    objc_msgSend(v4, "setSize:");
  }
  else
  {
    __break(1u);
  }
}

char *sub_224A8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *result;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13[24];
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v14, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkView];
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscription];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18CachingArtworkView_subscription] = 0;
  swift_release(v2);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView], "setImage:", 0);
  result = (char *)objc_msgSend(v1, "invalidateIntrinsicContentSize");
  v4 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView];
  if (!v4)
    goto LABEL_16;
  v5 = (uint64_t *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables];
  swift_beginAccess(&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables], v13, 1, 0);
  v6 = *v5;
  if ((unint64_t)*v5 >> 62)
  {
    if (v6 < 0)
      v10 = *v5;
    else
      v10 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*v5, 2);
    v11 = v4;
    result = (char *)_CocoaArrayWrapper.endIndex.getter(v10);
    v7 = (uint64_t)result;
    if (result)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease_n(v6, 2);
    v12 = *v5;
    *v5 = (uint64_t)&_swiftEmptyArrayStorage;

    return (char *)swift_bridgeObjectRelease(v12);
  }
  v7 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n(*v5, 2);
  result = v4;
  if (!v7)
    goto LABEL_14;
LABEL_4:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      }
      else
      {
        v9 = *(_QWORD *)(v6 + 8 * i + 32);
        swift_retain(v9);
      }
      AnyCancellable.cancel()();
      swift_release(v9);
    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SingleShowMacEpisodeCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell);
}

uint64_t sub_2277C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_isHovering);
}

void sub_2278C(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_isHovering);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_isHovering) = a1;
  sub_207A8(v2);
}

id sub_227BC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id result;

  result = *(id *)(a1 + *a3);
  if (result)
    return result;
  __break(1u);
  return result;
}

void sub_227D0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  __int128 v31;
  id v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  void *v40;
  id v41;
  char *v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  objc_class *v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  objc_class *v56;
  void *v57;
  double v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  __n128 v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  objc_super v73;
  _OWORD v74[2];
  uint64_t v75;
  objc_super v76;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v4);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkRequest(0);
  v71 = *(_QWORD *)(v7 - 8);
  v72 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v10);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v71 - v19;
  LegacyEpisodeLockup.dedupedEpisodeArtwork.getter(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
  {
    sub_2376C((uint64_t)v12, (uint64_t)v20);
    if (qword_3CF0B0 != -1)
      swift_once(&qword_3CF0B0, sub_1FF24);
    v31 = xmmword_3D1318;
    sub_E7A0((uint64_t)v20, *(double *)&xmmword_3D1318, *((double *)&xmmword_3D1318 + 1));
    v32 = objc_msgSend(v1, "traitCollection");
    v33 = UITraitCollection.safeDisplayScale.getter();

    v34 = (uint64_t)v20;
    sub_19C4C((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    v35 = type metadata accessor for CropCode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v6, 1, 1, v35);
    v75 = 0;
    memset(v74, 0, sizeof(v74));
    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v17, 2, 0, v6, 0, _swiftEmptyArrayStorage, v74, *(double *)&v31, *((double *)&v31 + 1), v33);
    sub_1DAA4(v9);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v72);
    v36 = sub_2007C();
    sub_262880();

    v37 = sub_2007C();
    v38 = swift_allocObject(&unk_37B838, 24, 7);
    swift_unknownObjectWeakInit(v38 + 16, v2);
    swift_retain(v38);
    sub_265198((uint64_t)sub_236B4, v38);

    swift_release_n(v38, 2);
    v39 = sub_2007C();
    objc_msgSend(v39, "setHidden:", 0);

    v40 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView];
    if (!v40)
      goto LABEL_32;
    v41 = objc_msgSend(v40, "leadingAnchor");
    v42 = sub_2007C();
    v43 = objc_msgSend(v42, "trailingAnchor");

    v44 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v43, 14.0);
    v45 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoLeadingConstraint;
    v46 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoLeadingConstraint];
    if (v46)
    {
      objc_msgSend(v46, "setActive:", 0);
      v47 = *(void **)&v2[v45];
    }
    else
    {
      v47 = 0;
    }
    *(_QWORD *)&v2[v45] = v44;
    v53 = v44;

    v54 = *(void **)&v2[v45];
    if (v54)
      objc_msgSend(v54, "setActive:", 1);

    v55 = sub_201D4();
    v56 = (objc_class *)type metadata accessor for GlyphPlayButton(0);
    v73.receiver = v55;
    v73.super_class = v56;
    objc_msgSendSuper2(&v73, "setEnabled:", 0);
    sub_157A28();

    v57 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoWidthConstraint];
    if (!v57)
      goto LABEL_34;
    v58 = *(double *)&xmmword_3D1318;
    v59 = qword_3CF0B8;
    v60 = v57;
    if (v59 != -1)
      swift_once(&qword_3CF0B8, sub_1FF40);
    objc_msgSend(v60, "setConstant:", -(v58 + *(double *)&qword_3D1328));

    sub_239C0(v34);
    goto LABEL_22;
  }
  sub_D1D4((uint64_t)v12, &qword_3D0A58);
  v21 = sub_2007C();
  objc_msgSend(v21, "setHidden:", 1);

  v22 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView];
  if (v22)
  {
    v23 = objc_msgSend(v22, "leadingAnchor");
    v24 = objc_msgSend(v2, "contentView");
    v25 = objc_msgSend(v24, "layoutMarginsGuide");

    v26 = objc_msgSend(v25, "leadingAnchor");
    v27 = objc_msgSend(v23, "constraintEqualToAnchor:", v26);

    v28 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoLeadingConstraint;
    v29 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoLeadingConstraint];
    if (v29)
    {
      objc_msgSend(v29, "setActive:", 0);
      v30 = *(void **)&v2[v28];
    }
    else
    {
      v30 = 0;
    }
    *(_QWORD *)&v2[v28] = v27;
    v48 = v27;

    v49 = *(void **)&v2[v28];
    if (v49)
      objc_msgSend(v49, "setActive:", 1);

    v50 = sub_201D4();
    v51 = (objc_class *)type metadata accessor for GlyphPlayButton(0);
    v76.receiver = v50;
    v76.super_class = v51;
    objc_msgSendSuper2(&v76, "setEnabled:", 1);
    sub_157A28();

    v52 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoWidthConstraint];
    if (!v52)
      goto LABEL_33;
    objc_msgSend(v52, "setConstant:", 0.0);
LABEL_22:
    v61 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView];
    if (v61)
    {
      v62 = v61;
      sub_1BA170(a1, 0);
      sub_1BA4B4();
      sub_1BA5E4();
      sub_1BA9D4(a1);
      v64 = type metadata accessor for LibraryEpisodeLockup(0, v63);
      if (swift_dynamicCastClass(a1, v64))
      {
        swift_retain(a1);
        sub_1BADF4();
        swift_release(a1);
      }
      else
      {
        v66 = LegacyLockup.adamId.getter(v65);
        if ((AdamID.isEmpty.getter(v66) & 1) == 0)
        {
          v68 = LegacyLockup.adamId.getter(v67);
          sub_1BAFF4(v68);
        }
      }
      EpisodeInfoView.beginUpdates()();

      v69 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter];
      if (v69)
      {
        swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter]);
        sub_2B2D0C(a1);
        swift_release(v69);
        v70 = sub_201D4();
        objc_msgSend(v70, "setHidden:", 1);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_22F00(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  _QWORD v12[5];
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)&Strong[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter];
    if (v4)
    {
      v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction);
      if (v5)
      {
        v12[3] = type metadata accessor for Action(0);
        v12[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        v12[0] = v5;
        v11 = type metadata accessor for SingleShowMacEpisodeCell();
        v10[0] = v3;
        v7 = sub_239FC(&qword_3D1418, v6, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowMacEpisodeCell, (uint64_t)&unk_2F07D4);
        swift_retain_n(v5, 2);
        v8 = v3;
        v9 = ShelfUIKitCell.perform(_:from:in:)(v12, v10, v3, v11, v7);
        swift_release(v9);
        swift_release(v5);
        sub_D1D4((uint64_t)v10, &qword_3D1A70);
        __swift_destroy_boxed_opaque_existential_0(v12);

      }
      else
      {

      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_23044(uint64_t *a1)
{
  sub_227D0(*a1);
}

uint64_t sub_2304C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_objectGraph));
}

uint64_t sub_2305C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v3);
  return ShelfUIKitCell.shelfAttributesDidChange(attributes:)(a1, ObjectType, a3);
}

uint64_t sub_2309C(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D1428, v3, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowMacEpisodeCell, (uint64_t)&unk_2F0844);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_230F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v5);
  return ShelfUIKitCell.prepareForDisplay(presentation:cellReloadingHandler:)(a1, a2, a3, ObjectType, a5);
}

uint64_t sub_23148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2);
  return ShelfUIKitCell.extraContextMenuElements()(ObjectType, a2);
}

uint64_t sub_23170(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2);
  return ShelfUIKitCell.clickActionOverride.getter(ObjectType, a2);
}

uint64_t sub_231A8()
{
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 0.0);
}

uint64_t sub_231B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D1428, a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowMacEpisodeCell, (uint64_t)&unk_2F0844);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_231EC()
{
  uint64_t v0;

  return static ShelfCell.artworkPosition.getter(v0);
}

uint64_t sub_231F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return static ShelfCell.sectionTopInset(presentation:environment:)(a1, a2, v2);
}

uint64_t sub_23210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return static ShelfCell.sectionBottomInset(presentation:environment:)(a1, a2, v2);
}

uint64_t sub_2322C()
{
  uint64_t v0;

  return static ShelfCell.contextMenuPreviewParameters(bounds:)(v0);
}

uint64_t sub_23234@<X0>(uint64_t a1@<X8>)
{
  _QWORD v3[5];

  static ShelfCell.cellShape(presentation:)(v3);
  return sub_1B7E0((uint64_t)v3, a1);
}

uint64_t sub_23270()
{
  uint64_t v0;

  return static ShelfCell.alwaysUseCellForContextMenuPreview.getter(v0);
}

uint64_t sub_23278(uint64_t a1)
{
  uint64_t v1;

  return static ShelfCell.disableBelowShelfSeparator(presentation:)(a1, v1);
}

uint64_t sub_2331C()
{
  void *v0;
  id v1;
  char v2;
  id v3;
  char v5;
  _QWORD v6[5];
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  v1 = objc_msgSendSuper2(&v7, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  v2 = *((_BYTE *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_isHovering);
  if (qword_3CFDF8 != -1)
    swift_once(&qword_3CFDF8, sub_2B75E8);
  v5 = v2;
  v3 = (id)qword_3FD8E0;
  AnyHashable.init<A>(_:)(v6, &v5, &type metadata for Bool, &protocol witness table for Bool);
  return UICellConfigurationState.subscript.setter(v6, v3);
}

uint64_t sub_233F0(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, "contentView");
  objc_msgSend(v6, "directionalLayoutMargins");
  v8 = v7;

  v9 = objc_msgSend(v1, "contentView");
  objc_msgSend(v9, "directionalLayoutMargins");
  v11 = v10;

  sub_2B73EC(a1, 0.0, v8 + -28.0, 0.0, v11 + -20.0);
  v12 = type metadata accessor for UIBackgroundConfiguration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 0, 1, v12);
  return UICollectionViewCell.backgroundConfiguration.setter(v5);
}

uint64_t sub_235A8()
{
  return 2;
}

uint64_t sub_235B0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D1400, a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowMacEpisodeCell, (uint64_t)&unk_2F071C);
}

uint64_t sub_235DC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D1408, a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowMacEpisodeCell, (uint64_t)&unk_2F07A4);
}

uint64_t sub_23608(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D1410, a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowMacEpisodeCell, (uint64_t)&unk_2F077C);
}

uint64_t sub_23634(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D1418, a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleShowMacEpisodeCell, (uint64_t)&unk_2F07D4);
}

uint64_t sub_23660()
{
  return sub_239FC(&qword_3D1420, 255, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
}

uint64_t sub_23690()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_236B4()
{
  uint64_t v0;

  sub_22F00(v0);
}

uint64_t sub_236CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_236F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23738()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_23764(uint64_t a1)
{
  uint64_t v1;

  return sub_4377C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_2376C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_237B0()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  char *v8;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkScrim;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.28);
  objc_msgSend(v2, "setBackgroundColor:", v3);

  objc_msgSend(v2, "setHidden:", 1);
  *(_QWORD *)&v0[v1] = v2;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CachingArtworkView(0)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___artworkContainer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_episodeInfoView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsPresenter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playControlsView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___smallPlayButton] = 0;
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_artworkOverlay;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.28);
  objc_msgSend(v6, "setBackgroundColor:", v7);

  *(_QWORD *)&v0[v5] = v6;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoLeadingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_infoWidthConstraint] = 0;
  v8 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_playButtonState];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell____lazy_storage___doubleClickToPlayGesture] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_isHovering] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/SingleShowMacEpisodeCell.swift", 54, 2, 157, 0);
  __break(1u);
}

uint64_t sub_239C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_239FC(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

void sub_23A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_20670(a1, a2, v2);
}

uint64_t SteveSetting.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t SteveSetting.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 49, 7);
}

uint64_t static CalculatorConstructionSet.sharedIfLoaded.getter()
{
  return 0;
}

_QWORD *CalculatorConstructionSet.deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return v0;
}

uint64_t CalculatorConstructionSet.__deallocating_deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for SteveSetting()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews12SteveSetting);
}

uint64_t method lookup function for SteveSetting(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SteveSetting);
}

uint64_t type metadata accessor for CalculatorConstructionSet()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews25CalculatorConstructionSet);
}

uint64_t method lookup function for CalculatorConstructionSet(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for CalculatorConstructionSet);
}

unint64_t sub_23B84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;

  v2 = type metadata accessor for EmptyActionRunner();
  v3 = swift_allocObject(v2, 16, 7);
  result = sub_23EA8();
  *a1 = v3;
  a1[1] = result;
  return result;
}

uint64_t EnvironmentValues.actionRunner.getter()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_23BFC();
  EnvironmentValues.subscript.getter(&v2, &type metadata for ActionRunnerEnvironmentKey, &type metadata for ActionRunnerEnvironmentKey, v0);
  return v2;
}

unint64_t sub_23BFC()
{
  unint64_t result;

  result = qword_3D15A0;
  if (!qword_3D15A0)
  {
    result = swift_getWitnessTable(&unk_2F09DC, &type metadata for ActionRunnerEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_3D15A0);
  }
  return result;
}

uint64_t EnvironmentValues.actionRunner.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  v2 = sub_23BFC();
  return EnvironmentValues.subscript.setter(v4, &type metadata for ActionRunnerEnvironmentKey, &type metadata for ActionRunnerEnvironmentKey, v2);
}

void (*EnvironmentValues.actionRunner.modify(_QWORD *a1))(__int128 **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = sub_23BFC();
  v3[5] = v4;
  EnvironmentValues.subscript.getter(v3 + 2, &type metadata for ActionRunnerEnvironmentKey, &type metadata for ActionRunnerEnvironmentKey, v4);
  *(_OWORD *)v3 = *((_OWORD *)v3 + 1);
  return sub_23CE8;
}

void sub_23CE8(__int128 **a1, char a2)
{
  __int128 *v2;
  __int128 v3;
  __int128 *v4;
  _OWORD *v5;
  uint64_t v6;

  v2 = *a1;
  v3 = **a1;
  v4 = *a1;
  v4[1] = v3;
  v5 = v4 + 1;
  v6 = *((_QWORD *)v2 + 5);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRetain(v3);
    EnvironmentValues.subscript.setter(v5, &type metadata for ActionRunnerEnvironmentKey, &type metadata for ActionRunnerEnvironmentKey, v6);
    swift_unknownObjectRelease(*(_QWORD *)v2);
  }
  else
  {
    EnvironmentValues.subscript.setter(v5, &type metadata for ActionRunnerEnvironmentKey, &type metadata for ActionRunnerEnvironmentKey, *((_QWORD *)v2 + 5));
  }
  free(v2);
}

uint64_t type metadata accessor for EmptyActionRunner()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_3EC5920E5B5C7F650F891C04E4CFA88E17EmptyActionRunner);
}

ValueMetadata *type metadata accessor for ActionRunnerEnvironmentKey()
{
  return &type metadata for ActionRunnerEnvironmentKey;
}

uint64_t sub_23DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v10;

  v0 = type metadata accessor for OSLogger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static OSLogger.actions.getter(v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
  v6 = type metadata accessor for LogMessage(0);
  v7 = swift_allocObject(v5, ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) | 7);
  *(_OWORD *)(v7 + 16) = xmmword_2F03C0;
  LogMessage.init(stringLiteral:)(0xD000000000000041, 0x8000000000308750);
  Logger.error(_:)(v7, v0, &protocol witness table for OSLogger);
  v8 = swift_bridgeObjectRelease(v7);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v4, v0, v8);
}

unint64_t sub_23EA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D1640;
  if (!qword_3D1640)
  {
    v1 = type metadata accessor for EmptyActionRunner();
    result = swift_getWitnessTable(&unk_2F09AC, v1);
    atomic_store(result, (unint64_t *)&qword_3D1640);
  }
  return result;
}

uint64_t sub_23EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v14;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OSLogger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static OSLogger.actions.getter(v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
  v10 = type metadata accessor for LogMessage(0);
  v11 = swift_allocObject(v9, ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) | 7);
  *(_OWORD *)(v11 + 16) = xmmword_2F03C0;
  LogMessage.init(stringLiteral:)(0xD000000000000040, 0x80000000003087A0);
  Logger.error(_:)(v11, v4, &protocol witness table for OSLogger);
  v12 = swift_bridgeObjectRelease(v11);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D62B0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.unsupported(_:), v0);
  return Promise.__allocating_init(value:)(v3);
}

Swift::Void __swiftcall UIVisualEffectView.setBlurEffect(_:animated:)(UIBlurEffect_optional _, Swift::Bool animated)
{
  void *v2;
  void *v3;
  Swift::Bool is_nil;
  id v5;
  void *v6;
  objc_class *v7;
  id v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  objc_class *v17;
  void *Strong;
  objc_class *v19;
  Class isa;
  _QWORD aBlock[5];
  uint64_t v22;

  v3 = v2;
  is_nil = _.is_nil;
  isa = _.value.super.super.isa;
  v5 = objc_msgSend(v2, "effect", animated);
  if (v5)
  {
    v6 = v5;
    if (isa)
    {
      sub_E710(0, (unint64_t *)&qword_3D1648, UIVisualEffect_ptr);
      v7 = isa;
      v8 = v6;
      v9 = static NSObject.== infix(_:_:)(v8, v7);

      if ((v9 & 1) != 0)
        return;
    }
    else
    {

    }
  }
  else if (!isa)
  {
    v10 = 0;
    return;
  }
  v11 = swift_allocObject(&unk_37BA40, 24, 7);
  v12 = v11 + 16;
  swift_unknownObjectWeakInit(v11 + 16, v3);
  v13 = swift_allocObject(&unk_37BA68, 32, 7);
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = isa;
  if (is_nil)
  {
    v14 = (void *)objc_opt_self(UIView);
    aBlock[4] = sub_24358;
    v22 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_0;
    v15 = _Block_copy(aBlock);
    v16 = v22;
    v17 = isa;
    swift_retain(v13);
    swift_release(v16);
    objc_msgSend(v14, "animateWithDuration:animations:", v15, 0.15);
    swift_release(v13);
    _Block_release(v15);
  }
  else
  {
    swift_beginAccess(v12, aBlock, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v12);
    v19 = isa;
    if (Strong)
    {
      objc_msgSend(Strong, "setEffect:", v19, swift_retain(v11).n128_f64[0]);
      swift_release(v13);
      swift_release(v11);

    }
    else
    {
      swift_release(v13);
    }
  }
}

void sub_242A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(Strong, "setEffect:", a2);

  }
}

uint64_t sub_24308()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2432C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_24358()
{
  uint64_t v0;

  sub_242A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_24360(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_243A4(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  Class isa;

  v3 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", a1);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", a2);
  v5 = objc_msgSend(v3, "contentView");
  objc_msgSend(v5, "addSubview:", v4);

  v6 = objc_msgSend(v4, "superview");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v8 = (void *)objc_opt_self(NSLayoutConstraint);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v10 = swift_allocObject(v9, 64, 7);
    *(_OWORD *)(v10 + 16) = xmmword_2F0A20;
    v11 = objc_msgSend(v4, "leftAnchor");
    v12 = objc_msgSend(v7, "leftAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    *(_QWORD *)(v10 + 32) = v13;
    v14 = objc_msgSend(v4, "rightAnchor");
    v15 = objc_msgSend(v7, "rightAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(v10 + 40) = v16;
    v17 = objc_msgSend(v4, "topAnchor");
    v18 = objc_msgSend(v7, "topAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    *(_QWORD *)(v10 + 48) = v19;
    v20 = objc_msgSend(v4, "bottomAnchor");
    v21 = objc_msgSend(v7, "bottomAnchor");
    v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

    *(_QWORD *)(v10 + 56) = v22;
    specialized Array._endMutation()(v23);
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "activateConstraints:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  return v3;
}

void sub_24698()
{
  qword_3FA928 = 0x402A000000000000;
}

id sub_246A8()
{
  return sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell____lazy_storage___titleLabel, (uint64_t (*)(void))sub_246BC);
}

id sub_246BC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int16 v39;
  char v40;
  unsigned __int8 v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void *v53;
  void *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  _QWORD v64[11];
  char v65;
  char v66;

  if (qword_3CF490 != -1)
    swift_once(&qword_3CF490, sub_13FAE0);
  v0 = qword_3FB2F0;
  v1 = qword_3FB300;
  v2 = word_3FB308;
  v56 = HIBYTE(word_3FB308);
  v55 = unk_3FB2F8;
  v63 = (void *)qword_3FB2B0;
  v61 = qword_3FB2C0;
  v62 = *(_QWORD *)algn_3FB2B8;
  v59 = qword_3FB2D0;
  v60 = qword_3FB2C8;
  v57 = *((_QWORD *)&xmmword_3FB2E0 + 1);
  v58 = qword_3FB2D8;
  v54 = (void *)xmmword_3FB2E0;
  sub_DDA0((void *)qword_3FB2B0, *(uint64_t *)algn_3FB2B8, qword_3FB2C0, qword_3FB2C8, qword_3FB2D0, qword_3FB2D8, (void *)xmmword_3FB2E0, *((uint64_t *)&xmmword_3FB2E0 + 1), qword_3FB2F0, unk_3FB2F8, qword_3FB300, word_3FB308, SHIBYTE(word_3FB308));
  if (qword_3CF480 != -1)
    swift_once(&qword_3CF480, sub_13FA20);
  v3 = (void *)qword_3FB1F0;
  v4 = *(_QWORD *)algn_3FB1F8;
  v5 = qword_3FB200;
  v7 = qword_3FB210;
  v6 = qword_3FB218;
  v8 = *((_QWORD *)&xmmword_3FB220 + 1);
  v52 = byte_3FB249;
  v50 = qword_3FB208;
  v51 = qword_3FB230;
  v45 = qword_3FB240;
  v46 = unk_3FB238;
  v44 = byte_3FB248;
  v47 = qword_3FB218;
  v48 = qword_3FB210;
  v49 = *((_QWORD *)&xmmword_3FB220 + 1);
  v53 = (void *)xmmword_3FB220;
  if (!v56)
  {
    v39 = v2;
    v36 = v1;
    v33 = v0;
    v20 = qword_3FB230;
    v42 = (void *)qword_3FB1F0;
    v43 = v0;
    v21 = unk_3FB238;
    v41 = v2;
    v22 = v1;
    v23 = qword_3FB240;
    v24 = qword_3FB200;
    v25 = *(_QWORD *)algn_3FB1F8;
    v26 = byte_3FB248;
    sub_DDA0(v63, v62, v61, v60, v59, v58, v54, v57, v33, v55, v36, v39, SHIBYTE(v39));
    v40 = v26;
    v4 = v25;
    v5 = v24;
    v34 = v21;
    v37 = v23;
    v1 = v22;
    v2 = v41;
    v3 = v42;
    v0 = v43;
    sub_DDA0(v42, v4, v5, v50, v7, v6, v53, v8, v20, v34, v37, v40, v52);
    if (!v52)
      goto LABEL_7;
LABEL_9:
    sub_DD48(v3, v4, v5, v50, v48, v47);
    v9 = v63;
    v11 = v61;
    v10 = v62;
    v16 = v59;
    v13 = v60;
    v15 = v58;
    sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v1, v2, v56);
    v18 = v45;
    v17 = v46;
    v19 = v44;
    goto LABEL_10;
  }
  sub_DDA0((void *)qword_3FB1F0, *(uint64_t *)algn_3FB1F8, qword_3FB200, qword_3FB208, qword_3FB210, qword_3FB218, (void *)xmmword_3FB220, *((uint64_t *)&xmmword_3FB220 + 1), qword_3FB230, unk_3FB238, qword_3FB240, byte_3FB248, byte_3FB249);
  sub_DE20(v63, v62, v61, v60, v59, v58);
  sub_DE20(v54, v57, v0, v55, v1, v2);
  sub_DD48(v54, v57, v0, v55, v1, v2);
  if (v52)
    goto LABEL_9;
LABEL_7:
  v38 = v2;
  v35 = v1;
  v9 = v63;
  v11 = v61;
  v10 = v62;
  v12 = v4;
  v13 = v60;
  v14 = v5;
  v15 = v58;
  v16 = v59;
  sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v35, v38, v56);
  v53 = v3;
  v49 = v12;
  v51 = v14;
  v17 = v50;
  v18 = v48;
  v19 = v47;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v64[0] = v9;
  v64[1] = v10;
  v64[2] = v11;
  v64[3] = v13;
  v64[4] = v16;
  v64[5] = v15;
  v64[6] = v53;
  v64[7] = v49;
  v64[8] = v51;
  v64[9] = v17;
  v64[10] = v18;
  v65 = v19;
  v66 = 1;
  v27 = sub_A96AC((uint64_t)v64, 5, 4, 0);
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v27;
  v30 = objc_msgSend(v28, "labelColor");
  objc_msgSend(v29, "setTextColor:", v30);

  objc_msgSend(v29, "setTextAlignment:", 1);
  LODWORD(v31) = 1148846080;
  objc_msgSend(v29, "setContentCompressionResistancePriority:forAxis:", 1, v31);
  objc_msgSend(v29, "setAccessibilityTraits:", UIAccessibilityTraitHeader);
  return v29;
}

id sub_24AE8()
{
  objc_class *v0;
  _BYTE *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  objc_super v12;

  v0 = (objc_class *)type metadata accessor for EpisodeHeaderSubtitle();
  v1 = objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_presenter] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_style] = 0;
  v12.receiver = v1;
  v12.super_class = v0;
  v2 = objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v3 = v2;
  v4 = (void *)static UIFont.caption1Emph.getter();
  v5 = (void *)static UIFont.caption1Emph.getter();
  v6 = (void *)static UIFont.preferredFont(iOS:mac:)(v4, v5);

  objc_msgSend(v3, "setFont:", v6);
  objc_msgSend(v3, "setNumberOfLines:", 1);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v3;
  v9 = objc_msgSend(v7, "secondaryLabelColor");
  objc_msgSend(v8, "setTextColor:", v9);

  LODWORD(v10) = 1148846080;
  objc_msgSend(v8, "setContentCompressionResistancePriority:forAxis:", 1, v10);
  return v8;
}

id sub_24C54()
{
  objc_class *v0;
  _BYTE *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  objc_super v9;

  v0 = (objc_class *)type metadata accessor for EpisodeHeaderEntitlementDisplay();
  v1 = objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay_presenter] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay_style] = 0;
  v9.receiver = v1;
  v9.super_class = v0;
  v2 = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v4, "setTextColor:", v5);

  objc_msgSend(v4, "setNumberOfLines:", 1);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v6 = v4;
  v7 = (void *)static UIFont.caption1.getter();
  objc_msgSend(v6, "setFont:", v7);

  objc_msgSend(v6, "setTextAlignment:", 1);
  return v6;
}

id sub_24DA8()
{
  return sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell____lazy_storage___playButton, (uint64_t (*)(void))sub_24E14);
}

id sub_24DBC(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2();
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_24E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  char v9;
  uint64_t v10;

  v0 = type metadata accessor for Glyph(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RoundHeaderButton();
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  UIEdgeInsets.init(top:leading:bottom:trailing:layoutDirection:)(objc_msgSend(v5, "effectiveUserInterfaceLayoutDirection"), 0.0, 0.0, 0.0, 12.0);
  objc_msgSend(v5, "setImageEdgeInsets:");

  v9 = 0;
  v6 = Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(0x6C69662E79616C70, 0xE90000000000006CLL, 0x4031000000000000, 0, 5, -1, 0, 0, v9);
  v7 = (void *)Glyph.image.getter(v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v5, "setImage:forState:", v7, 0);

  return v5;
}

uint64_t sub_24F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  char v11;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell__playButtonController;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell__playButtonController);
  v4 = v3;
  if (!v3)
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_objectGraph);
    if (v5)
    {
      swift_retain(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_objectGraph));
      v6 = sub_24DA8();
      v11 = 0;
      v10 = 1;
      v7 = type metadata accessor for SmartPlayButtonController(0);
      swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
      swift_retain(v5);
      v4 = SmartPlayButtonController.init(button:context:platform:objectGraph:)(v6, &v11, &v10, v5);
      v8 = *(_QWORD *)(v1 + v2);
      *(_QWORD *)(v1 + v2) = v4;
      swift_retain(v4);
      swift_release(v5);
      swift_release(v8);
    }
    else
    {
      v4 = 0;
    }
  }
  swift_retain(v3);
  return v4;
}

void sub_25030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  id v19;
  _BYTE v20[24];
  _OWORD v21[3];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_objectGraph);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_objectGraph) = a1;
  swift_retain(a1);
  swift_release(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  BaseObjectGraph.inject<A>(_:)(v21, v5, v5);
  v6 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodePlayStateController);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodePlayStateController) = *(_QWORD *)&v21[0];
  swift_release(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(v21, v7, v7);
  v8 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_imageProvider;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_imageProvider, v20, 33, 0);
  sub_1EB00((uint64_t)v21, v8, &qword_3D1230);
  swift_endAccess(v20);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D80);
  BaseObjectGraph.inject<A>(_:)(v21, v9, v9);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_libraryDataProvider);
  *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_libraryDataProvider) = v21[0];
  swift_unknownObjectRelease(v10);
  sub_25218(a1);
  v11 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkView);
  if (v11)
  {
    v12 = v11;
    sub_1D6A8(a1);

    v13 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton);
    if (v13)
    {
      v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_objectGraph];
      *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_objectGraph] = a1;
      v15 = v13;
      swift_release(v14);
      v16 = (uint64_t *)(*(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_button]
                      + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph);
      swift_beginAccess(v16, v21, 1, 0);
      v17 = *v16;
      *v16 = a1;
      swift_retain(a1);
      swift_release(v17);
      v18 = *(void **)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_icon];
      swift_retain(a1);
      v19 = v18;
      sub_1D6A8(a1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_25218(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  _BYTE *v13;
  _BYTE *v14;
  void *v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  char *v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  char *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  char *v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  id v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  id v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  id v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  id v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  void *v97;
  Class isa;
  _QWORD *v99;
  char *v100;
  id v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  unsigned __int8 v105;

  v2 = v1;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkView;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkView]
    && *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton])
  {
    return;
  }
  v5 = objc_allocWithZone((Class)type metadata accessor for PrimaryButtonView());
  v6 = sub_2A10BC(1);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton;
  v8 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton] = v6;

  v9 = objc_msgSend(v1, "contentView");
  v10 = *(void **)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_verticalStack);
  objc_msgSend(v9, "addSubview:", v10);

  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkWithPlaybackStatusView(0)), "init");
  v12 = *(void **)((char *)v2 + v4);
  *(_QWORD *)((char *)v2 + v4) = v11;

  v13 = *(_BYTE **)((char *)v2 + v4);
  if (!v13)
  {
    __break(1u);
    goto LABEL_48;
  }
  v105 = v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
  v14 = v13;
  sub_EB33C(&v105);

  v15 = *(void **)((char *)v2 + v4);
  if (!v15)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v16 = (void *)objc_opt_self(UIColor);
  v17 = v15;
  v18 = objc_msgSend(v16, "blackColor");
  v19 = objc_msgSend(v18, "colorWithAlphaComponent:", 0.1);

  v20 = &v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v21 = *(void **)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_QWORD *)v20 = v19;
  *(_OWORD *)(v20 + 8) = xmmword_2F0A30;
  *((_QWORD *)v20 + 3) = 0x401C000000000000;
  v22 = v19;

  sub_E9020();
  if (!*(_QWORD *)((char *)v2 + v4))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  objc_msgSend(v10, "addArrangedSubview:");
  if (!*(_QWORD *)((char *)v2 + v4))
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  objc_msgSend(v10, "setCustomSpacing:afterView:", 27.0);
  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitle;
  objc_msgSend(v10, "addArrangedSubview:", *(_QWORD *)((char *)v2+ OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitle));
  objc_msgSend(v10, "setCustomSpacing:afterView:", *(_QWORD *)((char *)v2 + v23), 31.0);
  v24 = sub_246A8();
  objc_msgSend(v10, "addArrangedSubview:", v24);

  v25 = sub_246A8();
  objc_msgSend(v10, "setCustomSpacing:afterView:", v25, 30.0);

  if (!*(_QWORD *)((char *)v2 + v7))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  objc_msgSend(v10, "addArrangedSubview:");
  if (!*(_QWORD *)((char *)v2 + v7))
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  objc_msgSend(v10, "setCustomSpacing:afterView:", 28.0);
  v26 = sub_24DA8();
  objc_msgSend(v10, "addArrangedSubview:", v26);

  v27 = sub_24DA8();
  objc_msgSend(v10, "setCustomSpacing:afterView:", v27, 16.0);

  objc_msgSend(v10, "addArrangedSubview:", *(_QWORD *)((char *)v2+ OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplay));
  v28 = *(void **)((char *)v2 + v4);
  if (!v28)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v29 = objc_msgSend(v28, "widthAnchor");
  v30 = objc_msgSend(v29, "constraintEqualToConstant:", *(double *)((char *)v2+ OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_mediumArtworkSize));

  v31 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkWidthConstraint;
  v32 = *(void **)((char *)v2
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkWidthConstraint);
  *(_QWORD *)((char *)v2
            + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkWidthConstraint) = v30;

  v33 = *(void **)((char *)v2 + v4);
  if (!v33)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v34 = objc_msgSend(v33, "heightAnchor");
  v35 = *(void **)((char *)v2 + v4);
  if (!v35)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v36 = objc_msgSend(v35, "widthAnchor");
  v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);

  v38 = *(char **)&v31[(_QWORD)v2];
  if (!v38)
  {
LABEL_56:
    __break(1u);
    return;
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v99 = _swiftEmptyArrayStorage;
    else
      v99 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v100 = v38;
    v101 = v37;
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v102 = _CocoaArrayWrapper.endIndex.getter(v99);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v43 = v102 + 2;
    if (!__OFADD__(v102, 2))
    {
LABEL_15:
      v44 = sub_215E80(v43, 1);
      specialized Array._endMutation()(v44);
      v31 = v38;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v38 = *(char **)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      v42 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      if ((unint64_t)v38 < v42 >> 1)
        goto LABEL_16;
      goto LABEL_39;
    }
  }
  else
  {
    v39 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8));
    v40 = v38;
    v41 = v37;
    v43 = v39 + 2;
    if (!__OFADD__(v39, 2))
      goto LABEL_15;
  }
  __break(1u);
LABEL_39:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v38 + 1, 1);
LABEL_16:
  v104 = a1;
  v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v31);
  specialized Array._endMutation()(v45);
  v46 = v37;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
  v48 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v47 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v48 >= v47 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
  v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v46);
  specialized Array._endMutation()(v49);

  v50 = objc_msgSend(v10, "leadingAnchor");
  v51 = objc_msgSend(v2, "contentView");
  v52 = objc_msgSend(v51, "leadingAnchor");

  v53 = objc_msgSend(v50, "constraintEqualToAnchor:", v52);
  v54 = objc_msgSend(v10, "trailingAnchor");
  v55 = objc_msgSend(v2, "contentView");
  v56 = objc_msgSend(v55, "trailingAnchor");

  v57 = objc_msgSend(v54, "constraintEqualToAnchor:", v56);
  v58 = objc_msgSend(v10, "topAnchor");
  v59 = objc_msgSend(v2, "contentView");
  v60 = objc_msgSend(v59, "topAnchor");

  v61 = objc_msgSend(v58, "constraintEqualToAnchor:constant:", v60, 18.0);
  v62 = objc_msgSend(v2, "contentView");
  v63 = objc_msgSend(v62, "bottomAnchor");

  v64 = objc_msgSend(v10, "lastBaselineAnchor");
  v65 = objc_msgSend(v63, "constraintEqualToAnchor:constant:", v64, 20.0);

  v66 = sub_24DA8();
  v67 = objc_msgSend(v66, "widthAnchor");

  v68 = objc_msgSend(v67, "constraintGreaterThanOrEqualToConstant:", 265.0);
  v69 = sub_24DA8();
  v70 = objc_msgSend(v69, "heightAnchor");

  v71 = objc_msgSend(v70, "constraintEqualToConstant:", 48.0);
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    v72 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8;
    v73 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8));
    v74 = v73 + 6;
    if (!__OFADD__(v73, 6))
      goto LABEL_20;
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if ((uint64_t)_swiftEmptyArrayStorage < 0)
    v103 = _swiftEmptyArrayStorage;
  else
    v103 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v73 = _CocoaArrayWrapper.endIndex.getter(v103);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v74 = v73 + 6;
  if (__OFADD__(v73, 6))
    goto LABEL_45;
LABEL_20:
  v75 = sub_215E80(v74, 1);
  specialized Array._endMutation()(v75);
  v53 = v53;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
  v73 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v72 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v73 >= v72 >> 1)
LABEL_46:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1);
  v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v53);
  specialized Array._endMutation()(v76);
  v77 = v57;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
  v79 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v78 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v79 >= v78 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v78 > 1, v79 + 1, 1);
  v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v77);
  specialized Array._endMutation()(v80);
  v81 = v61;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
  v83 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v82 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v83 >= v82 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v82 > 1, v83 + 1, 1);
  v84 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v83, v81);
  specialized Array._endMutation()(v84);
  v85 = v65;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v85);
  v87 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v86 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v87 >= v86 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v86 > 1, v87 + 1, 1);
  v88 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v87, v85);
  specialized Array._endMutation()(v88);
  v89 = v68;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v89);
  v91 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v90 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v91 >= v90 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1, v91 + 1, 1);
  v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v89);
  specialized Array._endMutation()(v92);
  v93 = v71;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
  v95 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v94 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v95 >= v94 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1, v95 + 1, 1);
  v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v93);
  specialized Array._endMutation()(v96);

  v97 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v97, "activateConstraints:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  sub_25DC8(v104);
}

id sub_25CC8()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  void *v9;
  double v10;
  id result;
  double v12;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for PageSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin();
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = ShelfAttributes.pageSize.getter(v4);
  v8 = PageSize.margins.getter(v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v9 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_verticalStack];
  objc_msgSend(v9, "directionalLayoutMargins");
  if (v10 != v8 || (result = objc_msgSend(v9, "directionalLayoutMargins"), v12 != v8))
  {
    objc_msgSend(v9, "setDirectionalLayoutMargins:", 0.0, v8, 0.0, v8);
    return objc_msgSend(v1, "setNeedsLayout");
  }
  return result;
}

void sub_25DC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v2 = v1;
  v4 = type metadata accessor for EpisodeHeaderSubtitlePresenter();
  swift_allocObject(v4, 104, 7);
  swift_retain(a1);
  v6 = sub_138244(v5);
  swift_release(a1);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter;
  v8 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter);
  *(_QWORD *)(v2
            + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter) = v6;
  swift_release(v8);
  v9 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitle);
  v10 = *(_QWORD *)(v2 + v7);
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_presenter;
  v12 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_presenter];
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews21EpisodeHeaderSubtitle_presenter] = v10;
  v13 = v9;
  swift_retain(v10);
  swift_release(v12);
  v14 = *(_QWORD *)&v9[v11];
  if (v14)
  {
    *(_QWORD *)(v14 + 24) = &off_384738;
    swift_unknownObjectWeakAssign(v14 + 16, v13);
  }

  v15 = type metadata accessor for EpisodeHeaderEntitlementDisplayPresenter();
  v16 = (_QWORD *)swift_allocObject(v15, 56, 7);
  v16[3] = 0;
  swift_unknownObjectWeakInit(v16 + 2, 0);
  v16[4] = 0;
  v16[5] = 0;
  v16[6] = a1;
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter;
  v18 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter);
  *(_QWORD *)(v2
            + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter) = v16;
  swift_retain(a1);
  swift_release(v18);
  v19 = *(char **)(v2
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplay);
  v20 = *(_QWORD *)(v2 + v17);
  v21 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay_presenter;
  v22 = *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay_presenter];
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderEntitlementDisplay_presenter] = v20;
  v24 = v19;
  swift_retain(v20);
  swift_release(v22);
  v23 = *(_QWORD *)&v19[v21];
  if (v23)
  {
    *(_QWORD *)(v23 + 24) = &off_389F10;
    swift_unknownObjectWeakAssign(v23 + 16, v24);
  }

}

id sub_25F5C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  objc_super v24;

  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_objectGraph] = 0;
  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_imageProvider];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(int64x2_t *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_mediumArtworkSize] = vdupq_n_s64(0x4064E00000000000uLL);
  *(int64x2_t *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_largeArtworkSize] = vdupq_n_s64(0x4070900000000000uLL);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkWidthConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodePlayStateController] = 0;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_libraryDataProvider];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_verticalStack;
  v12 = objc_allocWithZone((Class)UIStackView);
  v13 = v4;
  v14 = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v14, "setAxis:", 1);
  objc_msgSend(v14, "setAlignment:", 3);
  objc_msgSend(v14, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v14, "setLayoutMarginsRelativeArrangement:", 1);
  *(_QWORD *)&v4[v11] = v14;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkView] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkSubscription] = 0;
  v15 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_subscribedArtwork];
  v16 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter] = 0;
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitle;
  *(_QWORD *)&v13[v17] = sub_24AE8();
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter] = 0;
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplay;
  *(_QWORD *)&v13[v18] = sub_24C54();
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell____lazy_storage___playButton] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell__playButtonController] = 0;

  v24.receiver = v13;
  v24.super_class = (Class)type metadata accessor for EpisodeHeaderCollectionViewCell(0);
  v19 = objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  v20 = (void *)objc_opt_self(UIColor);
  v21 = v19;
  v22 = objc_msgSend(v20, "tertiarySystemBackgroundColor");
  sub_226094(v22, 64);

  return v21;
}

uint64_t sub_2622C()
{
  return 3;
}

void sub_26338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  void *v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_BYTE *, uint64_t, uint64_t);
  void *v28;
  id v29;
  uint64_t v30;
  __n128 v31;
  void *v32;
  int v33;
  __n128 v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  double v40;
  double v41;
  void *v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  void *v46;
  int v47;
  __n128 v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  double v53;
  double v54;
  void *v55;
  double v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  id v72;
  NSString v73;
  double v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  double v83;
  uint64_t v84;
  NSString v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  Swift::String v89;
  Swift::String v90;
  unint64_t v91;
  NSString v92;
  void *v93;
  id v94;
  Swift::String v95;
  Swift::String v96;
  unint64_t v97;
  NSString v98;
  void *v99;
  id v100;
  Swift::String v101;
  Swift::String v102;
  unint64_t v103;
  NSString v104;
  id v105;
  Swift::String v106;
  Swift::String v107;
  unint64_t v108;
  NSString v109;
  _BYTE v110[15];
  char v111;
  uint64_t v112;
  unint64_t v113;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  v5 = __chkstk_darwin(v4);
  v7 = &v110[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __chkstk_darwin(v5);
  v10 = &v110[-v9];
  v11 = __chkstk_darwin(v8);
  v13 = &v110[-v12];
  __chkstk_darwin(v11);
  v15 = &v110[-v14];
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkView;
  v17 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkView);
  if (!v17)
  {
    __break(1u);
    goto LABEL_46;
  }
  v18 = v17;
  sub_F2F8();

  if ((EpisodeHeader.shouldRenderEpisodeArtwork.getter(v19) & 1) == 0
    || (v20 = EpisodeHeader.episodeArtwork.getter()) == 0)
  {
    v25 = ((uint64_t (*)(void))EpisodeHeader.showArtwork.getter)();
    HeaderModel.PrimaryArtwork.artwork.getter(v25);
    swift_release(v25);
    v26 = type metadata accessor for ArtworkModel(0);
    v27 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
    LODWORD(v25) = v27(v10, 1, v26);
    sub_D1D4((uint64_t)v10, &qword_3D0A58);
    if ((_DWORD)v25 == 1)
      goto LABEL_29;
    v28 = *(void **)(v2 + v16);
    if (!v28)
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    v29 = v28;
    v30 = ((uint64_t (*)(void))EpisodeHeader.showArtwork.getter)();
    HeaderModel.PrimaryArtwork.artwork.getter(v30);
    v31 = swift_release(v30);
    if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t, __n128))v27)(v7, 1, v26, v31) == 1)
    {
      sub_D1D4((uint64_t)v7, &qword_3D0A58);
    }
    else
    {
      v32 = (void *)*((_QWORD *)v7 + 7);
      v33 = v7[64];
      sub_27F6C(v32, v7[64]);
      sub_239C0((uint64_t)v7);
      if (v33 != 255)
      {
        v35 = (void *)Color.color.getter(v32, v34);
        sub_27F94(v32, v33);
LABEL_14:
        objc_msgSend(v29, "setBackgroundColor:", v35);

        v36 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkWidthConstraint;
        v37 = *(void **)(v2
                       + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkWidthConstraint);
        if (!v37)
        {
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        v38 = objc_msgSend(v37, "constant");
        v39 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_mediumArtworkSize;
        v40 = *(double *)(v2
                        + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_mediumArtworkSize);
        if (v41 != v40)
        {
          v42 = *(void **)(v2 + v36);
          if (!v42)
          {
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
          v38 = objc_msgSend(v42, "setConstant:", *(double *)(v2+ OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_mediumArtworkSize));
        }
        v43 = EpisodeHeader.showArtwork.getter(v38);
        sub_26BD8(v43, v40, *(double *)(v39 + 8));
        *(_QWORD *)&v44 = swift_release(v43).n128_u64[0];
        v45 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton);
        if (!v45)
          goto LABEL_52;
        objc_msgSend(*(id *)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_icon), "setHidden:", 1, v44);
LABEL_29:
        v61 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton;
        v62 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton);
        if (v62)
        {
          v63 = v62;
          v64 = EpisodeHeader.providerAction.getter();
          if (v64)
          {
            v65 = v64;
            v66 = v61;
            v67 = *(_QWORD *)&v63[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_button];
            v68 = swift_retain(v64);
            Action.title.getter(v68);
            v70 = *(void **)(v67 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel);
            if (v69)
            {
              v71 = v69;
              v72 = v70;
              v73 = String._bridgeToObjectiveC()();
              *(_QWORD *)&v74 = swift_bridgeObjectRelease(v71).n128_u64[0];
            }
            else
            {
              v75 = v70;
              v73 = 0;
            }
            objc_msgSend(v70, "setText:", v73, v74);

            ChevronButton.setAction(_:)(v65);
            swift_release_n(v65, 2);
            v61 = v66;
          }
          else
          {
            objc_msgSend(*(id *)(*(_QWORD *)&v63[OBJC_IVAR____TtC23ShelfKitCollectionViews17PrimaryButtonView_button]+ OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel), "setText:", 0);

          }
          v76 = *(_QWORD *)(v2
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter);
          if (v76)
          {
            v77 = *(_QWORD *)(v76 + 32);
            *(_QWORD *)(v76 + 32) = a1;
            swift_retain(v76);
            swift_release(v77);
            swift_retain(a1);
            sub_1379A4(v78);
            swift_release(v76);
            v79 = *(_QWORD *)(v2
                            + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter);
            if (v79)
            {
              v80 = *(_QWORD *)(v79 + 32);
              *(_QWORD *)(v79 + 32) = a1;
              swift_retain(v79);
              swift_release(v80);
              swift_retain(a1);
              sub_1DE970();
              swift_release(v79);
              v81 = sub_246A8();
              EpisodeHeader.title.getter();
              if (v82)
              {
                v84 = v82;
                v85 = String._bridgeToObjectiveC()();
                *(_QWORD *)&v83 = swift_bridgeObjectRelease(v84).n128_u64[0];
              }
              else
              {
                v85 = 0;
              }
              objc_msgSend(v81, "setText:", v85, v83);

              v86 = sub_24F48();
              if (v86)
              {
                v87 = v86;
                sub_AAFC8(a1);
                swift_release(v87);
              }
              v88 = sub_24DA8();
              v112 = 0;
              v113 = 0xE000000000000000;
              v89._countAndFlagsBits = 0xD000000000000014;
              v89._object = (void *)0x8000000000308A30;
              String.append(_:)(v89);
              v90._countAndFlagsBits = 46;
              v90._object = (void *)0xE100000000000000;
              String.append(_:)(v90);
              v111 = 3;
              _print_unlocked<A, B>(_:_:)(&v111, &v112, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
              v91 = v113;
              v92 = String._bridgeToObjectiveC()();
              objc_msgSend(v88, "setAccessibilityIdentifier:", v92, swift_bridgeObjectRelease(v91).n128_f64[0]);

              v93 = *(void **)(v2 + v61);
              if (v93)
              {
                v112 = 0;
                v113 = 0xE000000000000000;
                v94 = v93;
                v95._countAndFlagsBits = 0xD000000000000014;
                v95._object = (void *)0x8000000000308A30;
                String.append(_:)(v95);
                v96._countAndFlagsBits = 46;
                v96._object = (void *)0xE100000000000000;
                String.append(_:)(v96);
                v111 = 1;
                _print_unlocked<A, B>(_:_:)(&v111, &v112, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
                v97 = v113;
                v98 = String._bridgeToObjectiveC()();
                objc_msgSend(v94, "setAccessibilityIdentifier:", v98, swift_bridgeObjectRelease(v97).n128_f64[0]);

                v99 = *(void **)(v2
                               + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitle);
                v112 = 0;
                v113 = 0xE000000000000000;
                v100 = v99;
                v101._countAndFlagsBits = 0xD000000000000014;
                v101._object = (void *)0x8000000000308A30;
                String.append(_:)(v101);
                v102._countAndFlagsBits = 46;
                v102._object = (void *)0xE100000000000000;
                String.append(_:)(v102);
                v111 = 17;
                _print_unlocked<A, B>(_:_:)(&v111, &v112, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
                v103 = v113;
                v104 = String._bridgeToObjectiveC()();
                objc_msgSend(v100, "setAccessibilityIdentifier:", v104, swift_bridgeObjectRelease(v103).n128_f64[0]);

                v105 = sub_246A8();
                v112 = 0;
                v113 = 0xE000000000000000;
                v106._countAndFlagsBits = 0xD000000000000014;
                v106._object = (void *)0x8000000000308A30;
                String.append(_:)(v106);
                v107._countAndFlagsBits = 46;
                v107._object = (void *)0xE100000000000000;
                String.append(_:)(v107);
                v111 = 16;
                _print_unlocked<A, B>(_:_:)(&v111, &v112, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
                v108 = v113;
                v109 = String._bridgeToObjectiveC()();
                objc_msgSend(v105, "setAccessibilityIdentifier:", v109, swift_bridgeObjectRelease(v108).n128_f64[0]);

                return;
              }
              goto LABEL_49;
            }
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
    v35 = 0;
    goto LABEL_14;
  }
  v21 = *(void **)(v2 + v16);
  if (!v21)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v22 = v20;
  v23 = v21;
  HeaderModel.PrimaryArtwork.artwork.getter(v23);
  v24 = type metadata accessor for ArtworkModel(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v15, 1, v24) == 1)
  {
    sub_D1D4((uint64_t)v15, &qword_3D0A58);
  }
  else
  {
    v46 = (void *)*((_QWORD *)v15 + 7);
    v47 = v15[64];
    sub_27F6C(v46, v15[64]);
    sub_239C0((uint64_t)v15);
    if (v47 != 255)
    {
      v49 = (void *)Color.color.getter(v46, v48);
      sub_27F94(v46, v47);
      goto LABEL_23;
    }
  }
  v49 = 0;
LABEL_23:
  objc_msgSend(v23, "setBackgroundColor:", v49);

  v50 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkWidthConstraint;
  v51 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkWidthConstraint);
  if (!v51)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  objc_msgSend(v51, "constant");
  v52 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_largeArtworkSize;
  v53 = *(double *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_largeArtworkSize);
  if (v54 == v53)
    goto LABEL_27;
  v55 = *(void **)(v2 + v50);
  if (v55)
  {
    objc_msgSend(v55, "setConstant:", *(double *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_largeArtworkSize));
LABEL_27:
    v56 = *(double *)(v52 + 8);
    swift_retain(v22);
    sub_26BD8(v57, v53, v56);
    swift_release(v22);
    v58 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton);
    if (!v58)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    v59 = v58;
    v60 = EpisodeHeader.showArtwork.getter(v59);
    HeaderModel.PrimaryArtwork.artwork.getter(v60);
    swift_release(v60);
    sub_2A0D8C((uint64_t)v13);
    swift_release(v22);

    sub_D1D4((uint64_t)v13, &qword_3D0A58);
    goto LABEL_29;
  }
LABEL_57:
  __break(1u);
}

uint64_t sub_26BD8(uint64_t a1, double a2, double a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  __n128 v50;
  char v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  __n128 v80;
  uint64_t OpaqueTypeConformance2;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  _QWORD v123[2];
  id v124;
  char v125[24];
  _QWORD v126[3];
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char v130[8];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v7);
  v102 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1210);
  v104 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v103 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1218);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v108 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1220);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v113 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v12);
  v120 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for ArtworkRequest(0);
  v111 = *(_QWORD *)(v112 - 8);
  v14 = __chkstk_darwin(v112);
  v106 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = v15;
  __chkstk_darwin(v14);
  v121 = (char *)&v99 - v16;
  v118 = type metadata accessor for Logger(0);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1728);
  __chkstk_darwin(v18);
  v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  v22 = __chkstk_darwin(v21);
  v119 = (uint64_t)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v99 - v25;
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v99 - v28;
  __chkstk_darwin(v27);
  v31 = (char *)&v99 - v30;
  v32 = type metadata accessor for ArtworkModel(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = __chkstk_darwin(v32);
  v36 = (char *)&v99 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v34);
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v31, 1, 1, v32);
    return sub_D1D4((uint64_t)v31, &qword_3D0A58);
  }
  v122 = (uint64_t)&v99 - v38;
  v101 = v3;
  HeaderModel.PrimaryArtwork.artwork.getter(v37);
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v39(v31, 1, v32) == 1)
    return sub_D1D4((uint64_t)v31, &qword_3D0A58);
  v40 = v122;
  sub_2376C((uint64_t)v31, v122);
  v41 = (uint64_t)&v101[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_subscribedArtwork];
  swift_beginAccess(&v101[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_subscribedArtwork], v130, 0, 0);
  sub_27E84(v40, (uint64_t)v29);
  v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56);
  v42(v29, 0, 1, v32);
  v43 = (uint64_t)&v20[*(int *)(v18 + 48)];
  v100 = v41;
  sub_D184(v41, (uint64_t)v20, &qword_3D0A58);
  sub_D184((uint64_t)v29, v43, &qword_3D0A58);
  if (v39(v20, 1, v32) == 1)
  {
    sub_D1D4((uint64_t)v29, &qword_3D0A58);
    if (v39((char *)v43, 1, v32) == 1)
    {
      sub_D1D4((uint64_t)v20, &qword_3D0A58);
      return sub_239C0(v122);
    }
    goto LABEL_10;
  }
  sub_D184((uint64_t)v20, (uint64_t)v26, &qword_3D0A58);
  if (v39((char *)v43, 1, v32) == 1)
  {
    sub_D1D4((uint64_t)v29, &qword_3D0A58);
    sub_239C0((uint64_t)v26);
LABEL_10:
    v45 = sub_D1D4((uint64_t)v20, &qword_3D1728);
    v46 = v101;
    goto LABEL_11;
  }
  sub_2376C(v43, (uint64_t)v36);
  v51 = static ArtworkModel.== infix(_:_:)(v26, v36);
  sub_239C0((uint64_t)v36);
  sub_D1D4((uint64_t)v29, &qword_3D0A58);
  sub_239C0((uint64_t)v26);
  v45 = sub_D1D4((uint64_t)v20, &qword_3D0A58);
  v46 = v101;
  if ((v51 & 1) != 0)
    return sub_239C0(v122);
LABEL_11:
  v47 = *(_QWORD *)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_objectGraph];
  v48 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v42;
  if (v47)
  {
    v49 = type metadata accessor for PageRenderController(0);
    v50 = swift_retain(v47);
    BaseObjectGraph.optional<A>(_:)(&v129, v49, v49, v50);
    swift_release(v47);
    v101 = v129;
  }
  else
  {
    v101 = 0;
  }
  v52 = v121;
  v53 = v120;
  v54 = v118;
  v55 = v117;
  v56 = v116;
  v57 = static Logger.artwork.getter(v45);
  v58 = static os_log_type_t.info.getter(v57);
  SignpostAndLogTrace(domain:level:)(&v129, v56, v58);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
  v59 = v122;
  sub_27E84(v122, (uint64_t)v36);
  v60 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v60, "scale");
  v62 = v61;

  v63 = type metadata accessor for CropCode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v53, 1, 1, v63);
  sub_1D5D4((uint64_t)&v129, (uint64_t)v126);
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v36, 1, 0, v53, 0, _swiftEmptyArrayStorage, v126, a2, a3, v62);
  v64 = v119;
  sub_27E84(v59, v119);
  v48(v64, 0, 1, v32);
  v65 = v100;
  swift_beginAccess(v100, v126, 33, 0);
  sub_1EB00(v64, v65, &qword_3D0A58);
  swift_endAccess(v126);
  v66 = (uint64_t)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_imageProvider];
  swift_beginAccess(&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_imageProvider], v125, 0, 0);
  result = sub_D184(v66, (uint64_t)v126, &qword_3D1230);
  v67 = v127;
  if (v127)
  {
    v68 = v128;
    __swift_project_boxed_opaque_existential_1(v126, v127);
    v123[0] = dispatch thunk of ImageProvider.load(artwork:)(v52, v67, v68);
    v69 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
    v124 = (id)static OS_dispatch_queue.main.getter();
    v70 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v71 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v102, 1, 1, v70);
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1238);
    v73 = sub_10EDC(&qword_3D1240, &qword_3D1238, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v74 = sub_1E2DC();
    v75 = v103;
    Publisher.receive<A>(on:options:)(&v124, v71, v72, v69, v73, v74);
    sub_D1D4(v71, &qword_3D2E70);

    swift_release(v123[0]);
    __swift_destroy_boxed_opaque_existential_0(v126);
    v76 = sub_10EDC(&qword_3D1248, &qword_3D1210, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v77 = v108;
    v78 = v101;
    v79 = v107;
    Publisher.emitPageRenderResourceEvents(using:onScreen:)(v80);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v75, v79);
    sub_1D5D4((uint64_t)&v129, (uint64_t)v126);
    v123[0] = v79;
    v123[1] = v76;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v123, &opaque type descriptor for <<opaque return type of Publisher.emitPageRenderResourceEvents(using:onScreen:)>>, 1);
    v82 = v110;
    v83 = static EmitLifecycle.defaultVerbosity.getter(v110, OpaqueTypeConformance2);
    v84 = v113;
    Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)(v126, "EpisodeCollectionHeader", 23, 2, 1, 0, 0, v83 & 1, v82, OpaqueTypeConformance2);
    sub_D1D4((uint64_t)v126, &qword_3D1250);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v77, v82);
    v85 = v111;
    v86 = v106;
    v87 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v106, v52, v112);
    v88 = *(unsigned __int8 *)(v85 + 80);
    v89 = (v88 + 16) & ~v88;
    v90 = swift_allocObject(&unk_37BAB8, v89 + v105, v88 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v85 + 32))(v90 + v89, v86, v87);
    v91 = swift_allocObject(&unk_37BAE0, 24, 7);
    *(_QWORD *)(v91 + 16) = v46;
    v92 = sub_10EDC(&qword_3D1258, &qword_3D1220, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v93 = v46;
    v94 = v115;
    v95 = Publisher.sink(receiveCompletion:receiveValue:)(sub_1E8D4, v90, sub_27F4C, v91, v115, v92);
    swift_release(v90);
    v96 = swift_release(v91);
    (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v84, v94, v96);
    v97 = *(_QWORD *)&v93[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkSubscription];
    *(_QWORD *)&v93[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkSubscription] = v95;
    swift_release(v97);
    v98 = swift_release(v78);
    (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v52, v87, v98);
    __swift_destroy_boxed_opaque_existential_0(&v129);
    return sub_239C0(v122);
  }
  __break(1u);
  return result;
}

void sub_27704(void **a1, uint64_t a2)
{
  void *v3;
  unsigned int v4;
  void *v5;
  id v6;
  char v7;
  char *v8;
  void *v9;
  id v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  id v16;
  id v17;

  v3 = *a1;
  v4 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background + 8);
  if (v4 > 0x3F
    || (v5 = *(void **)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_background),
        sub_E710(0, &qword_3D1730, UIImage_ptr),
        v6 = v3,
        sub_27F54(v5, v4),
        v7 = static NSObject.== infix(_:_:)(v6, v5),
        sub_27F60(v5, v4),
        v6,
        (v7 & 1) == 0))
  {
    v17 = v3;
    sub_226094(v3, 0);

    v8 = *(char **)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkView);
    if (v8)
    {
      if (v8[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode + 8] == 1)
      {
        v9 = *(void **)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
        v10 = v17;
        v11 = v8;
        objc_msgSend(v9, "setImage:", v10);
      }
      else
      {
        v12 = *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode];
        v13 = *(void **)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
        v14 = v17;
        v15 = v8;
        v16 = objc_msgSend(v14, "imageWithRenderingMode:", v12);
        objc_msgSend(v13, "setImage:", v16);

      }
      objc_msgSend(v8, "invalidateIntrinsicContentSize");

    }
    else
    {
      __break(1u);
    }
  }
}

double sub_278BC()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_objectGraph));
  sub_D1D4(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_imageProvider, &qword_3D1230);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkWidthConstraint));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodePlayStateController));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_libraryDataProvider));

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkSubscription));
  sub_D1D4(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_subscribedArtwork, &qword_3D0A58);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell____lazy_storage___titleLabel));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitle));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplay));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell____lazy_storage___playButton));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0
                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell__playButtonController)).n128_u64[0];
  return result;
}

id sub_279E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeHeaderCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_27B54()
{
  return type metadata accessor for EpisodeHeaderCollectionViewCell(0);
}

uint64_t type metadata accessor for EpisodeHeaderCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3D16E8;
  if (!qword_3D16E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EpisodeHeaderCollectionViewCell);
  return result;
}

void sub_27B98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[19];

  v4[0] = "\b";
  v4[1] = &unk_2F0AA8;
  v4[2] = &unk_2F0AC0;
  v4[3] = &unk_2F0AC0;
  v4[4] = "\b";
  v4[5] = "\b";
  v4[6] = &unk_2F0AD8;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = "\b";
  v4[9] = "\b";
  sub_27C58(319);
  if (v3 <= 0x3F)
  {
    v4[10] = *(_QWORD *)(v2 - 8) + 64;
    v4[11] = "\b";
    v4[12] = "\b";
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[14] = "\b";
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[16] = "\b";
    v4[17] = "\b";
    v4[18] = "\b";
    swift_updateClassMetadata2(a1, 256, 19, v4, a1 + 400);
  }
}

void sub_27C58(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D16F8)
  {
    v2 = type metadata accessor for ArtworkModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D16F8);
  }
}

void sub_27CAC(uint64_t *a1)
{
  sub_26338(*a1);
}

uint64_t sub_27CB4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_objectGraph));
}

uint64_t sub_27CCC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2F0C48, a2);
  return TypedShelfUIKitCell.apply(model:)(a1, a2, WitnessTable);
}

uint64_t sub_27D1C()
{
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 455.0);
}

uint64_t sub_27D30(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2F0C48, a1);
  return static TypedShelfUIKitCell.modelType.getter(a1, WitnessTable);
}

uint64_t sub_27D64()
{
  if (qword_3CF0D0 != -1)
    swift_once(&qword_3CF0D0, sub_24698);
  return qword_3FA928;
}

uint64_t sub_27DA8()
{
  return sub_89A0(&qword_3D1700, type metadata accessor for EpisodeHeaderCollectionViewCell, (uint64_t)&unk_2F0B20);
}

uint64_t sub_27DD4()
{
  return sub_89A0(&qword_3D1708, type metadata accessor for EpisodeHeaderCollectionViewCell, (uint64_t)&unk_2F0BA8);
}

uint64_t sub_27E00()
{
  return sub_89A0(&qword_3D1710, type metadata accessor for EpisodeHeaderCollectionViewCell, (uint64_t)&unk_2F0B80);
}

uint64_t sub_27E2C()
{
  return sub_89A0(&qword_3D1718, type metadata accessor for EpisodeHeaderCollectionViewCell, (uint64_t)&unk_2F0BD8);
}

uint64_t sub_27E58()
{
  return sub_89A0(&qword_3D1720, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeHeader, (uint64_t)&protocol conformance descriptor for EpisodeHeader);
}

uint64_t sub_27E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_27EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ArtworkRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_27F28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_27F4C(void **a1)
{
  uint64_t v1;

  sub_27704(a1, *(_QWORD *)(v1 + 16));
}

id sub_27F54(id result, char a2)
{
  if ((a2 & 0x80) == 0)
    return result;
  return result;
}

void sub_27F60(id a1, char a2)
{
  if ((a2 & 0x80) == 0)

}

id sub_27F6C(id result, char a2)
{
  if (a2 != -1)
    return sub_27F80(result, a2);
  return result;
}

id sub_27F80(id result, char a2)
{
  if (a2 == 1)
    return result;
  return result;
}

void sub_27F94(id a1, char a2)
{
  if (a2 != -1)
    sub_27FA8(a1, a2);
}

void sub_27FA8(id a1, char a2)
{
  if (a2 == 1)

}

void sub_27FBC()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_objectGraph] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_imageProvider];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(int64x2_t *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_mediumArtworkSize] = vdupq_n_s64(0x4064E00000000000uLL);
  *(int64x2_t *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_largeArtworkSize] = vdupq_n_s64(0x4070900000000000uLL);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodePlayStateController] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_libraryDataProvider];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_verticalStack;
  v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, "setAxis:", 1);
  objc_msgSend(v4, "setAlignment:", 3);
  objc_msgSend(v4, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v4, "setLayoutMarginsRelativeArrangement:", 1);
  *(_QWORD *)&v0[v3] = v4;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_artworkSubscription] = 0;
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_subscribedArtwork];
  v6 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitlePresenter] = 0;
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderSubtitle;
  *(_QWORD *)&v0[v7] = sub_24AE8();
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplayPresenter] = 0;
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_episodeHeaderEntitlementDisplay;
  *(_QWORD *)&v0[v8] = sub_24C54();
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell_showButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell____lazy_storage___playButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31EpisodeHeaderCollectionViewCell__playButtonController] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/EpisodeHeaderCollectionViewCell.swift", 61, 2, 230, 0);
  __break(1u);
}

Swift::Void __swiftcall UIView.addConstraintsFillingSuperview()()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;

  v1 = objc_msgSend(v0, "superview");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v3 = (void *)objc_opt_self(NSLayoutConstraint);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v5 = swift_allocObject(v4, 64, 7);
    *(_OWORD *)(v5 + 16) = xmmword_2F0A20;
    v6 = objc_msgSend(v0, "leftAnchor");
    v7 = objc_msgSend(v2, "leftAnchor");
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

    *(_QWORD *)(v5 + 32) = v8;
    v9 = objc_msgSend(v0, "rightAnchor");
    v10 = objc_msgSend(v2, "rightAnchor");
    v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

    *(_QWORD *)(v5 + 40) = v11;
    v12 = objc_msgSend(v0, "topAnchor");
    v13 = objc_msgSend(v2, "topAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

    *(_QWORD *)(v5 + 48) = v14;
    v15 = objc_msgSend(v0, "bottomAnchor");
    v16 = objc_msgSend(v2, "bottomAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

    *(_QWORD *)(v5 + 56) = v17;
    specialized Array._endMutation()(v18);
    sub_12D34();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  }
}

uint64_t static UIView.disableTranslatesAutoresizingMaskIntoConstraints(on:)(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  void *v4;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = result;
    swift_bridgeObjectRetain(result);
    for (i = 0; i != v1; ++i)
    {
      v4 = *(void **)(v2 + 8 * i + 32);
      if (v4)
        objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    }
    return swift_bridgeObjectRelease(v2);
  }
  return result;
}

void UIView.addConstraintsFillingSuperview(insets:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  Class isa;

  v9 = objc_msgSend(v4, "superview");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v11 = (void *)objc_opt_self(NSLayoutConstraint);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v13 = swift_allocObject(v12, 64, 7);
    *(_OWORD *)(v13 + 16) = xmmword_2F0A20;
    v14 = objc_msgSend(v4, "leadingAnchor");
    v15 = objc_msgSend(v10, "leadingAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, a2);

    *(_QWORD *)(v13 + 32) = v16;
    v17 = objc_msgSend(v4, "trailingAnchor");
    v18 = objc_msgSend(v10, "trailingAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, -a4);

    *(_QWORD *)(v13 + 40) = v19;
    v20 = objc_msgSend(v4, "topAnchor");
    v21 = objc_msgSend(v10, "topAnchor");
    v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, a1);

    *(_QWORD *)(v13 + 48) = v22;
    v23 = objc_msgSend(v4, "bottomAnchor");
    v24 = objc_msgSend(v10, "bottomAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, -a3);

    *(_QWORD *)(v13 + 56) = v25;
    specialized Array._endMutation()(v26);
    sub_12D34();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "activateConstraints:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  }
}

void UIView.addSizeConstraints(_:)(double a1, double a2)
{
  void *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  Class isa;

  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_2EFC90;
  v8 = objc_msgSend(v2, "widthAnchor");
  v9 = objc_msgSend(v8, "constraintEqualToConstant:", a1);

  *(_QWORD *)(v7 + 32) = v9;
  v10 = objc_msgSend(v2, "heightAnchor");
  v11 = objc_msgSend(v10, "constraintEqualToConstant:", a2);

  *(_QWORD *)(v7 + 40) = v11;
  specialized Array._endMutation()(v12);
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

}

uint64_t sub_288EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_28984();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_2893C()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_19C00();
  EnvironmentValues.subscript.getter(&v2, &type metadata for ShelvesViewSwiftUIHelperCellEnvironmentKey, &type metadata for ShelvesViewSwiftUIHelperCellEnvironmentKey, v0);
  return v2;
}

ValueMetadata *type metadata accessor for ShelvesViewSwiftUIHelperCellEnvironmentKey()
{
  return &type metadata for ShelvesViewSwiftUIHelperCellEnvironmentKey;
}

unint64_t sub_28984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D1740;
  if (!qword_3D1740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1748);
    sub_289E8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_3D1740);
  }
  return result;
}

unint64_t sub_289E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D1750;
  if (!qword_3D1750)
  {
    v1 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_3D1750);
  }
  return result;
}

id sub_28A30()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  result = objc_msgSend(v0, "setLineBreakMode:", 0);
  qword_3FA958 = (uint64_t)v0;
  return result;
}

void sub_28A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __n128 v29;
  void (*v30)(char *, char *, uint64_t, __n128);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  char v39[16];
  __int128 v40;
  uint64_t v41;
  __int128 v42;

  v1 = v0;
  v2 = type metadata accessor for CategorySection(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - v6;
  v8 = *(_QWORD *)(v0 + 64);
  v40 = *(_OWORD *)(v0 + 48);
  v41 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D18D8);
  State.wrappedValue.getter(&v42, v9);
  v10 = *((_QWORD *)&v42 + 1);
  v40 = v42;
  v11 = sub_2C298();
  v12 = Collection.isNotEmpty.getter(&type metadata for String, v11);
  swift_bridgeObjectRelease(v10);
  v13 = *(_QWORD *)(v0 + 96);
  KeyPath = swift_getKeyPath(&unk_2F0EC8);
  if ((v12 & 1) != 0)
  {
    v36 = v2;
    *(_QWORD *)&v40 = v13;
    v15 = sub_89A0(&qword_3D1978, type metadata accessor for ManageCategoriesController, (uint64_t)&unk_2F8630);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v40, KeyPath, v15);
    swift_release(KeyPath);
    v16 = *(_QWORD *)(v13 + 104);
    __chkstk_darwin(v17);
    *(&v36 - 2) = v1;
    swift_bridgeObjectRetain(v16);
    v18 = sub_187704((void (*)(uint64_t))sub_2C2E4, (uint64_t)(&v36 - 4), v16, (uint64_t)v39);
    v19 = swift_bridgeObjectRelease(v16);
    *(_QWORD *)&v40 = _swiftEmptyArrayStorage;
    v37 = v18[2];
    if (v37)
    {
      v20 = 0;
      v21 = v36;
      while (v20 < v18[2])
      {
        v22 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
        v23 = *(_QWORD *)(v3 + 72);
        v24 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v3 + 16))(v7, (char *)v18 + v22 + v23 * v20, v21, v19);
        v25 = CategorySection.categories.getter(v24);
        *(_QWORD *)&v42 = v25;
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1938);
        v27 = sub_10EDC(&qword_3D1980, &qword_3D1938, (uint64_t)&protocol conformance descriptor for [A]);
        v28 = Collection.isNotEmpty.getter(v26, v27);
        v29 = swift_bridgeObjectRelease(v25);
        if ((v28 & 1) != 0)
        {
          v30 = *(void (**)(char *, char *, uint64_t, __n128))(v3 + 32);
          v30(v38, v7, v21, v29);
          v31 = v40;
          if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
          {
            sub_F3438(0, *(_QWORD *)(v31 + 16) + 1, 1);
            v31 = v40;
          }
          v33 = *(_QWORD *)(v31 + 16);
          v32 = *(_QWORD *)(v31 + 24);
          if (v33 >= v32 >> 1)
          {
            sub_F3438(v32 > 1, v33 + 1, 1);
            v31 = v40;
          }
          *(_QWORD *)(v31 + 16) = v33 + 1;
          v34 = v31 + v22 + v33 * v23;
          v21 = v36;
          ((void (*)(unint64_t, char *, uint64_t))v30)(v34, v38, v36);
          *(_QWORD *)&v40 = v31;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v21);
        }
        if (v37 == ++v20)
          goto LABEL_14;
      }
      __break(1u);
    }
    else
    {
LABEL_14:
      swift_bridgeObjectRelease(v18);
    }
  }
  else
  {
    *(_QWORD *)&v40 = v13;
    v35 = sub_89A0(&qword_3D1978, type metadata accessor for ManageCategoriesController, (uint64_t)&unk_2F8630);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v40, KeyPath, v35);
    swift_release(KeyPath);
    swift_bridgeObjectRetain(*(_QWORD *)(v13 + 104));
  }
}

uint64_t sub_28DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1918);
  v4 = __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = CategorySection.categories.getter(v4);
  v14 = a2;
  v8 = sub_28F74(sub_2C300, (uint64_t)v13, v7);
  v9 = CategorySection.title.getter();
  v11 = v10;
  CategorySection.description.getter();
  return CategorySection.init(title:titleStyle:description:categories:)(v9, v11, 0, v6, v8);
}

uint64_t sub_28EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v3 = Category.title.getter(a1);
  v5 = v4;
  v14 = v3;
  v15 = v4;
  v12 = *(_QWORD *)(a2 + 64);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D18D8);
  State.wrappedValue.getter(&v13, v6);
  v7 = *((_QWORD *)&v13 + 1);
  v11 = v13;
  v8 = sub_D254();
  v9 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)(&v11, &type metadata for String, &type metadata for String, v8, v8);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v9 & 1;
}

uint64_t sub_28F74(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;

  v27 = type metadata accessor for Category(0);
  v7 = *(_QWORD *)(v27 - 8);
  v8 = __chkstk_darwin(v27);
  v26 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v8);
  v12 = (char *)&v20 - v11;
  v13 = _swiftEmptyArrayStorage;
  v28 = _swiftEmptyArrayStorage;
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v14 = 0;
    v22 = a2;
    v23 = a3;
    v21 = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v13 = *(_QWORD **)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + (_QWORD)v13 * v14, v27);
      v16 = a1(v12);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v27);
        swift_bridgeObjectRelease(a3);
        swift_release(v28);
        return (uint64_t)v13;
      }
      if ((v16 & 1) != 0)
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v24(v26, v12, v27);
        v17 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
        {
          sub_F3454(0, v17[2] + 1, 1);
          v17 = v28;
        }
        v19 = v17[2];
        v18 = v17[3];
        if (v19 >= v18 >> 1)
        {
          sub_F3454(v18 > 1, v19 + 1, 1);
          v17 = v28;
        }
        v17[2] = v19 + 1;
        result = ((uint64_t (*)(char *, char *, uint64_t))v24)((char *)v17 + v15 + v19 * (_QWORD)v13, v26, v27);
        v28 = v17;
        a3 = v23;
        a1 = v21;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v27);
      }
      if (v25 == ++v14)
      {
        v13 = v28;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease(a3);
    return (uint64_t)v13;
  }
  return result;
}

void sub_29184(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String *v23;
  _QWORD v24[2];
  __int128 v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;

  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6._countAndFlagsBits = 0xD000000000000017;
  v27._object = (void *)0x8000000000308AB0;
  v6._object = (void *)0x8000000000308A90;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v27._countAndFlagsBits = 0xD000000000000011;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v27);

  *(Swift::String *)a2 = v8;
  v9 = objc_msgSend(v4, "mainBundle");
  v28._countAndFlagsBits = 0xD000000000000012;
  v10._countAndFlagsBits = 0xD00000000000001FLL;
  v28._object = (void *)0x8000000000308AF0;
  v10._object = (void *)0x8000000000308AD0;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v28);

  *(Swift::String *)(a2 + 16) = v12;
  v13 = objc_msgSend(v4, "mainBundle");
  v29._object = (void *)0xE400000000000000;
  v14._countAndFlagsBits = 0x445F4E4F49544341;
  v14._object = (void *)0xEB00000000454E4FLL;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 1701736260;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v29);

  *(Swift::String *)(a2 + 32) = v16;
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  State.init(wrappedValue:)(v24, &type metadata for String, v17);
  v18 = v26;
  *(_OWORD *)(a2 + 48) = v25;
  *(_QWORD *)(a2 + 64) = v18;
  v19 = (_QWORD *)(a2 + *(int *)(type metadata accessor for ManageCategoriesView(0) + 44));
  *v19 = swift_getKeyPath(&unk_2F0D60);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED0);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  *(_QWORD *)(a2 + 72) = a1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v25, v21, v21);
  *(_OWORD *)(a2 + 80) = v25;
  v22 = type metadata accessor for ManageCategoriesController(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = sub_128F80(a1);
  swift_release(a1);
  *(_QWORD *)(a2 + 96) = v23;
}

uint64_t type metadata accessor for ManageCategoriesView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D17B8;
  if (!qword_3D17B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ManageCategoriesView);
  return result;
}

uint64_t sub_29438@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t OpaqueTypeConformance2;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double (**v67)();
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  __n128 v78;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char v110[16];
  _QWORD *v111;
  char v112[8];
  _QWORD *v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  unint64_t v119;

  v104 = a2;
  v3 = type metadata accessor for SearchFieldPlacement(0);
  v105 = *(_QWORD *)(v3 - 8);
  v106 = v3;
  __chkstk_darwin(v3);
  v103 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ManageCategoriesView(0);
  v101 = *(_QWORD *)(v5 - 8);
  v102 = *(_QWORD *)(v101 + 64);
  __chkstk_darwin(v5);
  v100 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1888);
  __chkstk_darwin(v7);
  v99 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1840);
  __chkstk_darwin(v95);
  v93 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for ListSectionSpacing(0);
  v109 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v108 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for GroupedListStyle(0);
  v89 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1858);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1850);
  v82 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1848);
  v83 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1890);
  v84 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v107 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1828);
  __chkstk_darwin(v87);
  v85 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1898);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v91 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1818);
  __chkstk_darwin(v96);
  v94 = (char *)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = a1;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D18A0);
  v28 = sub_2BC70();
  List<>.init(content:)(sub_2BC68, v112, v27, v28);
  v29 = sub_10EDC(&qword_3D1860, &qword_3D1858, (uint64_t)&protocol conformance descriptor for List<A, B>);
  View.scrollContentBackground(_:)(2, v13, v29);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v81 = a1;
  v30 = (void *)a1[1];
  v116 = *a1;
  v117 = v30;
  *(_QWORD *)&v114 = v13;
  *((_QWORD *)&v114 + 1) = v29;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v114, &opaque type descriptor for <<opaque return type of View.scrollContentBackground(_:)>>, 1);
  v32 = sub_D254();
  v90 = v32;
  View.navigationTitle<A>(_:)(&v116, v17);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v19, v17);
  GroupedListStyle.init()(v33);
  v116 = v17;
  v117 = &type metadata for String;
  v118 = OpaqueTypeConformance2;
  v119 = v32;
  v34 = swift_getOpaqueTypeConformance2(&v116, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v35 = v107;
  v36 = v88;
  View.listStyle<A>(_:)(v12, v20, v88, v34, &protocol witness table for GroupedListStyle);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v12, v36);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v22, v20);
  v38 = v108;
  static ListSectionSpacing.custom(_:)(v37, 8.0);
  v39 = (uint64_t)v93;
  v40 = &v93[*(int *)(v95 + 36)];
  v41 = v109;
  v42 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
  v43 = v92;
  v42(v40, v38, v92);
  v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56);
  v44(v40, 0, 1, v43);
  v45 = v84;
  v46 = v35;
  v47 = v86;
  (*(void (**)(uint64_t, char *, uint64_t))(v84 + 16))(v39, v46, v86);
  KeyPath = swift_getKeyPath(&unk_2F0E48);
  v49 = (uint64_t)v99;
  v42(v99, v38, v43);
  v44((char *)v49, 0, 1, v43);
  v50 = v87;
  v51 = (uint64_t)v85;
  v52 = (uint64_t *)&v85[*(int *)(v87 + 36)];
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1880);
  sub_D184(v49, (uint64_t)v52 + *(int *)(v53 + 28), &qword_3D1888);
  *v52 = KeyPath;
  sub_D184(v39, v51, &qword_3D1840);
  sub_D1D4(v49, &qword_3D1888);
  sub_D1D4(v39, &qword_3D1840);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v43);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v107, v47);
  v54 = (uint64_t)v81;
  v111 = v81;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F18);
  v56 = sub_2BA94();
  v57 = sub_10EDC(&qword_3D0F30, &qword_3D0F18, (uint64_t)&protocol conformance descriptor for Button<A>);
  v58 = v91;
  View.toolbar<A>(content:)(sub_2BDD8, v110, v50, v55, v56, v57);
  sub_D1D4(v51, &qword_3D1828);
  v59 = v100;
  sub_2BDE0(v54, v100);
  v60 = *(unsigned __int8 *)(v101 + 80);
  v61 = (v60 + 16) & ~v60;
  v62 = swift_allocObject(&unk_37BC60, v61 + v102, v60 | 7);
  sub_2BE28(v59, v62 + v61);
  v63 = v97;
  v64 = (uint64_t)v94;
  v65 = v98;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v94, v58, v98);
  v66 = v96;
  v67 = (double (**)())(v64 + *(int *)(v96 + 36));
  *v67 = sub_2BE6C;
  v67[1] = (double (*)())v62;
  v67[2] = 0;
  v67[3] = 0;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v58, v65);
  v68 = *(_QWORD *)(v54 + 64);
  v114 = *(_OWORD *)(v54 + 48);
  v115 = v68;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D18D8);
  State.projectedValue.getter(&v116, v69);
  v70 = v116;
  v71 = v117;
  v72 = v118;
  v73 = v119;
  v74 = *(void **)(v54 + 24);
  v116 = *(_QWORD *)(v54 + 16);
  v117 = v74;
  v75 = swift_bridgeObjectRetain(v74);
  v76 = v103;
  static SearchFieldPlacement.automatic.getter(v75);
  v77 = sub_2B9BC();
  View.searchable<A>(text:placement:prompt:)(v70, v71, v72, v73, v76, &v116, v66, &type metadata for String, v77, v90);
  swift_bridgeObjectRelease(v73);
  swift_release(v71);
  v78 = swift_release(v70);
  (*(void (**)(char *, uint64_t, __n128))(v105 + 8))(v76, v106, v78);
  swift_bridgeObjectRelease(v117);
  return sub_D1D4(v64, &qword_3D1818);
}

uint64_t sub_29CD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v2 = type metadata accessor for ManageCategoriesView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  sub_28A7C();
  v23 = v5;
  KeyPath = swift_getKeyPath(&unk_2F0E80);
  sub_2BDE0(a1, (uint64_t)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_37BCB0, v8 + v4, v7 | 7);
  sub_2BE28((uint64_t)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D18E8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D18F0);
  v12 = sub_10EDC(&qword_3D18F8, &qword_3D18E8, (uint64_t)&protocol conformance descriptor for [A]);
  v13 = sub_89A0(&qword_3D1900, (uint64_t (*)(uint64_t))&type metadata accessor for CategorySection, (uint64_t)&protocol conformance descriptor for CategorySection);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D18B0);
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D18B8);
  v16 = sub_2BD2C();
  v21 = v15;
  v22 = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v21, &opaque type descriptor for <<opaque return type of View.listSectionSeparator(_:edges:)>>, 1);
  v21 = v14;
  v22 = OpaqueTypeConformance2;
  v18 = swift_getOpaqueTypeConformance2(&v21, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 1);
  return ForEach<>.init(_:id:content:)(&v23, KeyPath, sub_2BEDC, v9, v10, v11, v12, v13, v18);
}

uint64_t sub_29E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t OpaqueTypeConformance2;
  _QWORD v23[2];
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];

  v23[1] = a3;
  v5 = type metadata accessor for Prominence(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D18B8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D18B0);
  v23[0] = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1;
  v26 = a2;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D18D0);
  v17 = sub_10EDC(&qword_3D18C8, &qword_3D18D0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v18.n128_f64[0] = Section<>.init(content:)(sub_2BEE8, v24, v16, v17);
  v19 = static VerticalEdge.Set.all.getter(v18);
  v20 = sub_2BD2C();
  View.listSectionSeparator(_:edges:)(2, v19, v9, v20);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Prominence.increased(_:), v5);
  v27[0] = v9;
  v27[1] = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v27, &opaque type descriptor for <<opaque return type of View.listSectionSeparator(_:edges:)>>, 1);
  View.headerProminence(_:)(v8, v13, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v23[0] + 8))(v15, v13);
}

uint64_t sub_2A088@<X0>(void (*a1)(uint64_t, char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  __n128 v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  __n128 v117;
  uint64_t v118;
  char *v119;
  uint64_t KeyPath;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(char *, uint64_t);
  uint64_t v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  void (*v140)(uint64_t, char *, uint64_t);
  void (*v141)(char *, char *, uint64_t);
  char *v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t);
  void (*v145)(char *, uint64_t);
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  void (*v171)(uint64_t, char *, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  uint64_t v183;

  v169 = a2;
  v165 = a3;
  v157 = type metadata accessor for AccessibilityActionKind(0);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (char *)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for OpenURLAction(0);
  v150 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v149 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1908);
  __chkstk_darwin(v153);
  v154 = (char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1910);
  v162 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v152 = (char *)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1918);
  __chkstk_darwin(v8);
  v170 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AttributedString(0);
  v172 = *(_QWORD *)(v10 - 8);
  v173 = v10;
  v11 = __chkstk_darwin(v10);
  v148 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v158 = (char *)&v147 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1920);
  v15 = __chkstk_darwin(v14);
  v164 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v161 = (uint64_t)&v147 - v17;
  v18 = type metadata accessor for ManageCategoriesView(0);
  v166 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v167 = v19;
  v168 = (uint64_t)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1928);
  v175 = *(_QWORD *)(v160 - 8);
  v20 = __chkstk_darwin(v160);
  v22 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v177 = (char *)&v147 - v23;
  v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1930);
  v176 = *(_QWORD *)(v174 - 8);
  v24 = __chkstk_darwin(v174);
  v26 = (char *)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v147 - v28;
  v30 = __chkstk_darwin(v27);
  v179 = (char *)&v147 - v31;
  v180 = CategorySection.title.getter(v30);
  v181 = v32;
  v33 = sub_D254();
  v34 = Text.init<A>(_:)(&v180, &type metadata for String, v33);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v171 = a1;
  v41 = CategorySection.titleStyle.getter();
  v42 = CategorySection.TitleStyle.rawValue.getter(v41 & 1);
  v44 = v43;
  v46 = CategorySection.TitleStyle.rawValue.getter(0);
  v47 = v45;
  v159 = v22;
  v178 = v26;
  if (v42 == v46 && v44 == v45)
  {
    swift_bridgeObjectRelease_n(v44, 2);
    v49 = static Font.title2.getter(v48);
  }
  else
  {
    v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v44, v46, v45, 0);
    swift_bridgeObjectRelease(v44);
    v52 = swift_bridgeObjectRelease(v47);
    if ((v50 & 1) != 0)
      v49 = static Font.title2.getter(v52);
    else
      v49 = static Font.body.getter(v51);
  }
  v53 = v49;
  v54 = Font.bold()();
  v55 = swift_release(v53);
  LOBYTE(v53) = v38 & 1;
  v56 = Text.font(_:)(v55);
  v58 = v57;
  v60 = v59;
  v62 = v61;
  swift_release(v54);
  LOBYTE(v54) = v60 & 1;
  sub_D170(v34, v36, v53);
  v63 = swift_bridgeObjectRelease(v40);
  LODWORD(v180) = static HierarchicalShapeStyle.primary.getter(v63);
  v64 = Text.foregroundStyle<A>(_:)(&v180, v56, v58, v60 & 1, v62, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v66 = v65;
  v68 = v67;
  v70 = v69 & 1;
  sub_D170(v56, v58, v54);
  v71 = swift_bridgeObjectRelease(v62);
  v180 = v64;
  v181 = v66;
  v182 = v70;
  v183 = v68;
  v72 = static VerticalEdge.Set.all.getter(v71);
  View.listRowSeparator(_:edges:)(2, v72, &type metadata for Text, &protocol witness table for Text);
  sub_D170(v64, v66, v70);
  v73 = swift_bridgeObjectRelease(v68);
  v74 = v176;
  v75 = v174;
  v76 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v176 + 32))(v179, v29, v174, v73);
  v180 = CategorySection.categories.getter(v76);
  v77 = v168;
  sub_2BDE0(v169, v168);
  v78 = *(unsigned __int8 *)(v166 + 80);
  v79 = (v78 + 16) & ~v78;
  v80 = swift_allocObject(&unk_37BCD8, v79 + v167, v78 | 7);
  sub_2BE28(v77, v80 + v79);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1938);
  v82 = type metadata accessor for CategoryView(0);
  v83 = sub_10EDC(&qword_3D1940, &qword_3D1938, (uint64_t)&protocol conformance descriptor for [A]);
  v84 = sub_89A0(&qword_3D1948, type metadata accessor for CategoryView, (uint64_t)&unk_2F9B80);
  v85 = sub_89A0(&qword_3D1950, (uint64_t (*)(uint64_t))&type metadata accessor for Category, (uint64_t)&protocol conformance descriptor for Category);
  v86 = ForEach<>.init(_:content:)(&v180, sub_2BFDC, v80, v81, &type metadata for AdamID, v82, v83, v84, v85);
  v87 = (uint64_t)v170;
  CategorySection.description.getter(v86);
  v89 = v172;
  v88 = v173;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v87, 1, v173) == 1)
  {
    sub_D1D4(v87, &qword_3D1918);
    v90 = v161;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v162 + 56))(v161, 1, 1, v163);
    v171 = *(void (**)(uint64_t, char *, uint64_t))(v74 + 16);
  }
  else
  {
    v91 = v158;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v158, v87, v88);
    v92 = v148;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v148, v91, v88);
    v93 = Text.init(_:)(v92);
    v95 = v94;
    v97 = v96;
    LOBYTE(v91) = v98 & 1;
    v99 = static Font.subheadline.getter(v93);
    v101 = v74;
    v102 = Text.font(_:)(v100);
    v104 = v103;
    v106 = v105;
    v108 = v107;
    swift_release(v99);
    LOBYTE(v99) = v106 & 1;
    sub_D170(v93, v95, (char)v91);
    v109 = swift_bridgeObjectRelease(v97);
    LODWORD(v180) = static HierarchicalShapeStyle.secondary.getter(v109);
    v110 = Text.foregroundStyle<A>(_:)(&v180, v102, v104, v106 & 1, v108, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v112 = v111;
    v114 = v113;
    v116 = v115 & 1;
    sub_D170(v102, v104, v99);
    v117 = swift_bridgeObjectRelease(v108);
    v180 = v110;
    v181 = v112;
    v182 = v116;
    v183 = v114;
    v118 = static VerticalEdge.Set.all.getter(v117);
    v119 = v178;
    View.listRowSeparator(_:edges:)(2, v118, &type metadata for Text, &protocol witness table for Text);
    sub_D170(v110, v112, v116);
    swift_bridgeObjectRelease(v114);
    KeyPath = swift_getKeyPath(&unk_2F0E98);
    v121 = v149;
    OpenURLAction.init(handler:)(sub_2AC64, 0);
    v122 = v153;
    v123 = (uint64_t)v154;
    v124 = (uint64_t *)&v154[*(int *)(v153 + 36)];
    v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1960);
    v126 = v150;
    v127 = v151;
    (*(void (**)(char *, char *, uint64_t))(v150 + 16))((char *)v124 + *(int *)(v125 + 28), v121, v151);
    *v124 = KeyPath;
    v171 = *(void (**)(uint64_t, char *, uint64_t))(v101 + 16);
    v128 = v174;
    v171(v123, v119, v174);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v121, v127);
    v129 = *(uint64_t (**)(char *, uint64_t))(v101 + 8);
    v75 = v128;
    v130 = v129(v119, v128);
    v131 = v155;
    static AccessibilityActionKind.default.getter(v130);
    v132 = sub_2C068();
    v133 = (uint64_t)v152;
    View.accessibilityAction(_:_:)(v131, sub_2ACB0, 0, v122, v132);
    (*(void (**)(char *, uint64_t))(v156 + 8))(v131, v157);
    sub_D1D4(v123, &qword_3D1908);
    (*(void (**)(char *, uint64_t))(v172 + 8))(v158, v173);
    v90 = v161;
    sub_2C110(v133, v161);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v162 + 56))(v90, 0, 1, v163);
  }
  v134 = v165;
  v135 = (uint64_t)v164;
  v136 = v160;
  v137 = v159;
  v138 = v175;
  v139 = v178;
  v140 = v171;
  v171((uint64_t)v178, v179, v75);
  v141 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
  v142 = v177;
  v141(v137, v177, v136);
  sub_D184(v90, v135, &qword_3D1920);
  v140(v134, v139, v75);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1958);
  v141((char *)(v134 + *(int *)(v143 + 48)), v137, v136);
  sub_D184(v135, v134 + *(int *)(v143 + 64), &qword_3D1920);
  sub_D1D4(v90, &qword_3D1920);
  v144 = *(void (**)(char *, uint64_t))(v175 + 8);
  v144(v142, v136);
  v145 = *(void (**)(char *, uint64_t))(v176 + 8);
  v145(v179, v75);
  sub_D1D4(v135, &qword_3D1920);
  v144(v137, v136);
  return ((uint64_t (*)(char *, uint64_t))v145)(v178, v75);
}

uint64_t sub_2AB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = type metadata accessor for Category(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a2 + 72);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v8, a1);
  swift_retain(v9);
  return sub_14A840(v11, (uint64_t)v8, a3);
}

uint64_t sub_2ABE8(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for OpenURLAction(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return EnvironmentValues.openURL.setter(v3);
}

uint64_t sub_2AC64()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_2C158();

  return static OpenURLAction.Result.handled.getter();
}

void sub_2ACB0()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_2C158();

}

uint64_t sub_2ACF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[2];

  v2 = type metadata accessor for ManageCategoriesView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = *(_QWORD *)(a1 + 40);
  v11[0] = *(_QWORD *)(a1 + 32);
  v11[1] = v5;
  sub_2BDE0(a1, (uint64_t)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_37BC88, v7 + v4, v6 | 7);
  sub_2BE28((uint64_t)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  v9 = sub_D254();
  swift_bridgeObjectRetain(v5);
  return Button<>.init<A>(_:action:)(v11, sub_2BEAC, v8, &type metadata for String, v9);
}

uint64_t sub_2ADD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t refreshed;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];

  v2 = type metadata accessor for DismissAction(0);
  v17 = *(_QWORD *)(v2 - 8);
  v18 = v2;
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ActionMetricsBehavior(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 88);
  ObjectType = swift_getObjectType();
  refreshed = type metadata accessor for RefreshRecommendationsAction(0);
  swift_allocObject(refreshed, *(unsigned int *)(refreshed + 48), *(unsigned __int16 *)(refreshed + 52));
  v12 = RefreshRecommendationsAction.init()();
  v19[3] = refreshed;
  v19[4] = sub_89A0(&qword_3D18E0, (uint64_t (*)(uint64_t))&type metadata accessor for RefreshRecommendationsAction, (uint64_t)&protocol conformance descriptor for Action);
  v19[0] = v12;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionMetricsBehavior.notProcessed(_:), v5);
  v13 = ActionRunner.perform(_:withMetrics:asPartOf:)(v19, v8, *(_QWORD *)(a1 + 72), ObjectType, v9);
  v14 = swift_release(v13);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v14);
  __swift_destroy_boxed_opaque_existential_0(v19);
  type metadata accessor for ManageCategoriesView(0);
  sub_14C64(v4);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v4, v18);
}

uint64_t sub_2AF6C()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1810);
  v4[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1818);
  v4[1] = &type metadata for String;
  v4[2] = sub_2B9BC();
  v4[3] = sub_D254();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.searchable<A>(text:placement:prompt:)>>, 1);
  return NavigationView.init(content:)(sub_2B9B4, &v3, v0, OpaqueTypeConformance2);
}

uint64_t sub_2B008()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_2B028(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1888);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D184(a1, (uint64_t)v4, &qword_3D1888);
  return EnvironmentValues.listSectionSpacing.setter(v4);
}

uint64_t sub_2B0A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v20 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v20);
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = a2[8];
    v10 = a2[9];
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    v23 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v23;
    v11 = a2[12];
    v12 = *(int *)(a3 + 44);
    v13 = (uint64_t *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    *(_QWORD *)(a1 + 96) = v11;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_retain(v9);
    swift_retain(v10);
    swift_unknownObjectRetain(v23);
    swift_retain(v11);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED0);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = v13;
      v18 = v15;
      v19 = 1;
    }
    else
    {
      v21 = *v14;
      *v13 = *v14;
      swift_retain(v21);
      v17 = v13;
      v18 = v15;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  return a1;
}

double sub_2B214(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_release(a1[8]);
  swift_release(a1[9]);
  swift_unknownObjectRelease(a1[10]);
  swift_release(a1[12]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 44));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_2B2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v19;
  v10 = *(_QWORD *)(a2 + 96);
  v11 = *(int *)(a3 + 44);
  v12 = (uint64_t *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_unknownObjectRetain(v19);
  swift_retain(v10);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED0);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    v16 = 1;
  }
  else
  {
    v17 = *v13;
    *v12 = *v13;
    swift_retain(v17);
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v14, v16);
  return a1;
}

_QWORD *sub_2B3FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[4] = a2[4];
  v10 = a2[5];
  v11 = a1[5];
  a1[5] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[6] = a2[6];
  v12 = a2[7];
  v13 = a1[7];
  a1[7] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = a1[8];
  v15 = a2[8];
  a1[8] = v15;
  swift_retain(v15);
  swift_release(v14);
  v16 = a2[9];
  v17 = a1[9];
  a1[9] = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = a2[10];
  v19 = a2[11];
  v20 = a1[10];
  a1[10] = v18;
  swift_unknownObjectRetain(v18);
  swift_unknownObjectRelease(v20);
  a1[11] = v19;
  v21 = a2[12];
  v22 = a1[12];
  a1[12] = v21;
  swift_retain(v21);
  swift_release(v22);
  if (a1 != a2)
  {
    v23 = *(int *)(a3 + 44);
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    sub_D1D4((uint64_t)a1 + v23, &qword_3D0ED0);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED0);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      v28 = 1;
    }
    else
    {
      v29 = *v25;
      *v24 = *v25;
      swift_retain(v29);
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v26, v28);
  }
  return a1;
}

uint64_t sub_2B5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v6 = *(int *)(a3 + 44);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_2B66C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a1[8];
  a1[8] = a2[8];
  swift_release(v14);
  v15 = a1[9];
  a1[9] = a2[9];
  swift_release(v15);
  v16 = a2[11];
  v17 = a1[10];
  a1[10] = a2[10];
  swift_unknownObjectRelease(v17);
  v18 = a2[12];
  v19 = a1[12];
  a1[11] = v16;
  a1[12] = v18;
  swift_release(v19);
  if (a1 != a2)
  {
    v20 = *(int *)(a3 + 44);
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_D1D4((uint64_t)a1 + v20, &qword_3D0ED0);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED0);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload(v21, v23, 1);
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2B7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2B7B8);
}

uint64_t sub_2B7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1758);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_2B838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2B844);
}

uint64_t sub_2B844(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1758);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

void sub_2B8BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_2F0DC8;
  v4[1] = &unk_2F0DC8;
  v4[2] = &unk_2F0DC8;
  v4[3] = &unk_2F0DE0;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = &unk_2F0DC8;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_2B950(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
  }
}

void sub_2B950(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D17C8)
  {
    v2 = type metadata accessor for DismissAction(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D17C8);
  }
}

uint64_t sub_2B9A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_329A80, 1);
}

uint64_t sub_2B9B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_29438(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_2B9BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_3D1820;
  if (!qword_3D1820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1818);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1828);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0F18);
    v2[2] = sub_2BA94();
    v2[3] = sub_10EDC(&qword_3D0F30, &qword_3D0F18, (uint64_t)&protocol conformance descriptor for Button<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D1820);
  }
  return result;
}

unint64_t sub_2BA94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D1830;
  if (!qword_3D1830)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1828);
    sub_2BB18();
    sub_10EDC(&qword_3D1878, &qword_3D1880, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D1830);
  }
  return result;
}

unint64_t sub_2BB18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;

  result = qword_3D1838;
  if (!qword_3D1838)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1840);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1848);
    v3 = type metadata accessor for GroupedListStyle(255);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1850);
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1858);
    v9 = (void *)sub_10EDC(&qword_3D1860, &qword_3D1858, (uint64_t)&protocol conformance descriptor for List<A, B>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.scrollContentBackground(_:)>>, 1);
    v6 = sub_D254();
    v8 = v4;
    v9 = &type metadata for String;
    v10 = OpaqueTypeConformance2;
    v11 = (void *)v6;
    v7 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
    v8 = v2;
    v9 = (void *)v3;
    v10 = v7;
    v11 = &protocol witness table for GroupedListStyle;
    swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    sub_10EDC(&qword_3D1868, &qword_3D1870, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D1838);
  }
  return result;
}

uint64_t sub_2BC68()
{
  uint64_t v0;

  return sub_29CD8(*(_QWORD *)(v0 + 16));
}

unint64_t sub_2BC70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_3D18A8;
  if (!qword_3D18A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D18A0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D18B0);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D18B8);
    v5 = sub_2BD2C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.listSectionSeparator(_:edges:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_3D18A8);
  }
  return result;
}

unint64_t sub_2BD2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D18C0;
  if (!qword_3D18C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D18B8);
    sub_10EDC(&qword_3D18C8, &qword_3D18D0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_3D18C0);
  }
  return result;
}

uint64_t sub_2BDB4()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t sub_2BDD8()
{
  uint64_t v0;

  return sub_2ACF4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2BDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManageCategoriesView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2BE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManageCategoriesView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_2BE6C()
{
  type metadata accessor for ManageCategoriesView(0);
  return sub_125D7C();
}

uint64_t sub_2BEAC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ManageCategoriesView(0) - 8) + 80);
  return sub_2ADD8(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_2BEDC(uint64_t a1)
{
  return sub_2BFE8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_29E94);
}

uint64_t sub_2BEE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2A088(*(void (**)(uint64_t, char *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for ManageCategoriesView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  swift_release(*(_QWORD *)(v0 + v4 + 64));
  swift_release(*(_QWORD *)(v0 + v4 + 72));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v4 + 80));
  swift_release(*(_QWORD *)(v0 + v4 + 96));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 44));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0ED0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_2BFDC(uint64_t a1)
{
  return sub_2BFE8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_2AB58);
}

uint64_t sub_2BFE8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ManageCategoriesView(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_2C044()
{
  return EnvironmentValues.openURL.getter();
}

unint64_t sub_2C068()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_3D1968;
  if (!qword_3D1968)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1908);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    sub_10EDC(&qword_3D1970, &qword_3D1960, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D1968);
  }
  return result;
}

uint64_t sub_2C110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2C158()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSURL *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  Class isa;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v3)
  {
    v4 = v3;
    static URL.iOSGlobalPreferences.getter();
    v5 = type metadata accessor for URL(0);
    v6 = *(_QWORD *)(v5 - 8);
    v8 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
    {
      URL._bridgeToObjectiveC()(v7);
      v8 = v9;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
    }
    v10 = sub_D4B54((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "openSensitiveURL:withOptions:", v8, isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_2C298()
{
  unint64_t result;

  result = qword_3D2FB0;
  if (!qword_3D2FB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_3D2FB0);
  }
  return result;
}

uint64_t sub_2C2E4(uint64_t a1)
{
  uint64_t v1;

  return sub_28DE8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2C300(uint64_t a1)
{
  uint64_t v1;

  return sub_28EC4(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_2C31C()
{
  return sub_10EDC(&qword_3D1988, (uint64_t *)&unk_3D1990, (uint64_t)&protocol conformance descriptor for NavigationView<A>);
}

double sub_2C348(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t (*v14)(char *, uint64_t);
  int v15;
  int v16;
  double v17;
  int v18;
  double v20;
  double v21;

  v6 = type metadata accessor for FloatingPointRoundingRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = ((uint64_t (*)(void))__chkstk_darwin)();
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v20 - v11;
  v21 = a2;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v20 - v11, a1, v6);
  v14 = *(uint64_t (**)(char *, uint64_t))(v7 + 88);
  v15 = v14(v12, v6);
  v16 = enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:);
  if (v15 == enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:))
  {
    v17 = round(a2);
    v21 = v17;
  }
  else if (v15 == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
  {
    v17 = rint(a2);
    v21 = v17;
  }
  else
  {
    if (v15 == enum case for FloatingPointRoundingRule.up(_:))
      goto LABEL_6;
    if (v15 == enum case for FloatingPointRoundingRule.down(_:))
      goto LABEL_8;
    if (v15 == enum case for FloatingPointRoundingRule.towardZero(_:))
    {
      v17 = trunc(a2);
      v21 = v17;
      goto LABEL_15;
    }
    if (v15 != enum case for FloatingPointRoundingRule.awayFromZero(_:))
    {
      Double._roundSlowPath(_:)(a1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      v17 = v21;
      goto LABEL_15;
    }
    if ((*(_QWORD *)&a2 & 0x8000000000000000) != 0)
    {
LABEL_8:
      v17 = floor(a2);
      v21 = v17;
    }
    else
    {
LABEL_6:
      v17 = ceil(a2);
      v21 = v17;
    }
  }
LABEL_15:
  v20 = a3;
  v13(v10, a1, v6);
  v18 = v14(v10, v6);
  if (v18 != v16
    && v18 != enum case for FloatingPointRoundingRule.toNearestOrEven(_:)
    && v18 != enum case for FloatingPointRoundingRule.up(_:)
    && v18 != enum case for FloatingPointRoundingRule.down(_:)
    && v18 != enum case for FloatingPointRoundingRule.towardZero(_:)
    && v18 != enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    Double._roundSlowPath(_:)(a1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v17;
}

uint64_t ShelvesViewProvider.converter.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  swift_beginAccess(v1 + 2, v14, 0, 0);
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = v1[9];
  v12 = v1[10];
  v11 = v1[11];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v12;
  a1[9] = v11;
  sub_2C690(v3, v4);
  sub_2C690(v5, v6);
  sub_2C690(v7, v8);
  sub_2C690(v9, v10);
  return sub_2C690(v12, v11);
}

uint64_t sub_2C690(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t ShelvesViewProvider.converter.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v2 = *a1;
  v17 = *(_OWORD *)(a1 + 1);
  v16 = a1[3];
  v3 = a1[6];
  v14 = *(_OWORD *)(a1 + 7);
  v15 = *((_OWORD *)a1 + 2);
  v4 = a1[9];
  swift_beginAccess(v1 + 2, v20, 1, 0);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = v1[7];
  v11 = v1[8];
  v12 = v1[9];
  v18 = v1[11];
  v19 = v1[10];
  v1[2] = v2;
  *(_OWORD *)(v1 + 3) = v17;
  v1[5] = v16;
  *((_OWORD *)v1 + 3) = v15;
  v1[8] = v3;
  *(_OWORD *)(v1 + 9) = v14;
  v1[11] = v4;
  sub_1D618(v5, v6);
  sub_1D618(v7, v8);
  sub_1D618(v9, v10);
  sub_1D618(v11, v12);
  return sub_1D618(v19, v18);
}

void *ShelvesViewProvider.converter.modify(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t ShelvesViewProvider.dependenciesDidChange(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph) = a1;
  swift_retain(a1);
  return swift_release(v2);
}

Swift::Void __swiftcall ShelvesViewProvider.prepare(collectionView:layout:)(UICollectionView collectionView, UICollectionViewCompositionalLayout layout)
{
  uint64_t v2;
  void *v5;
  objc_class *v6;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_collectionView);
  *(UICollectionView *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_collectionView) = collectionView;

  type metadata accessor for ShelfBackgroundView();
  v6 = collectionView.super.super.super.super.isa;
  static ShelfBackgroundView.register(layout:)(layout.super.super.isa);
}

void ShelvesViewProvider.adjust(collectionView:boundsSize:horizontalSizeClass:)(void *a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t i;
  id v51;
  void *v52;
  uint64_t ObjectType;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE v74[24];
  char v75[24];

  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19B8);
  __chkstk_darwin(v66);
  v67 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShelfAttributes(0);
  v73 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v64 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v64 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19C0);
  __chkstk_darwin(v13);
  v65 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v64 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v64 - v19;
  __chkstk_darwin(v21);
  v72 = (uint64_t)&v64 - v22;
  v23 = type metadata accessor for PageSize(0);
  v70 = *(_QWORD *)(v23 - 8);
  v71 = v23;
  __chkstk_darwin(v23);
  v25 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v64 - v27;
  v29 = SizeClass.init(width:)(a3);
  v69 = v28;
  PageSize.init(width:additionalTextMargin:)(a3, 0.0);
  v30 = SizeClass.margins(width:)(v29, a3);
  v68 = a1;
  objc_msgSend(a1, "layoutMargins");
  if (v34 != 0.0 || v31 != v30 || v32 != 0.0 || v33 != v30)
    objc_msgSend(v68, "setLayoutMargins:", 0.0, v30, 0.0, v30);
  v35 = v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_cachedShelfAttributes;
  swift_beginAccess(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_cachedShelfAttributes, v75, 0, 0);
  sub_D184(v35, v72, &qword_3D19C0);
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v25, v69, v71);
  ShelfAttributes.init(sizeClass:pageSize:)(v29, v25);
  v36 = v73;
  v37 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  v37(v20, v12, v8);
  v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56);
  v38(v20, 0, 1, v8);
  swift_beginAccess(v35, v74, 33, 0);
  sub_2CE90((uint64_t)v20, v35);
  v39 = swift_endAccess(v74);
  v40 = *(_QWORD *)(v3 + 96);
  *(_QWORD *)(v3 + 96) = a2;
  if (v40 != a2 && v40)
  {
    objc_msgSend(v68, "reloadData", v39.n128_f64[0]);
LABEL_38:
    (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v12, v8, v41);
    sub_D1D4(v72, &qword_3D19C0);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
    return;
  }
  ((void (*)(char *, char *, uint64_t, __n128))v37)(v17, v12, v8, v39);
  v38(v17, 0, 1, v8);
  v42 = v67;
  v43 = v67 + *(int *)(v66 + 48);
  sub_D184((uint64_t)v17, v67, &qword_3D19C0);
  sub_D184(v72, v43, &qword_3D19C0);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  if (v44(v42, 1, v8) == 1)
  {
    sub_D1D4((uint64_t)v17, &qword_3D19C0);
    if (v44(v43, 1, v8) == 1)
    {
      sub_D1D4(v42, &qword_3D19C0);
      goto LABEL_38;
    }
    goto LABEL_14;
  }
  v45 = v65;
  sub_D184(v42, v65, &qword_3D19C0);
  if (v44(v43, 1, v8) == 1)
  {
    sub_D1D4((uint64_t)v17, &qword_3D19C0);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v45, v8);
LABEL_14:
    sub_D1D4(v42, &qword_3D19B8);
    goto LABEL_15;
  }
  v58 = v73;
  v59 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v64, v43, v8);
  v60 = sub_89A0(&qword_3D19D8, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfAttributes, (uint64_t)&protocol conformance descriptor for ShelfAttributes);
  v61 = dispatch thunk of static Equatable.== infix(_:_:)(v45, v59, v8, v60);
  v62 = *(void (**)(char *, uint64_t))(v58 + 8);
  v62(v59, v8);
  sub_D1D4((uint64_t)v17, &qword_3D19C0);
  v62((char *)v45, v8);
  sub_D1D4(v42, &qword_3D19C0);
  if ((v61 & 1) != 0)
    goto LABEL_38;
LABEL_15:
  v46 = objc_msgSend(v68, "visibleCells");
  v47 = sub_E710(0, &qword_3D19D0, UICollectionViewCell_ptr);
  v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);

  if (!((unint64_t)v48 >> 62))
  {
    v49 = *(_QWORD *)((char *)&dword_10 + (v48 & 0xFFFFFFFFFFFFF8));
    if (v49)
      goto LABEL_17;
LABEL_37:
    v41 = swift_bridgeObjectRelease(v48);
    goto LABEL_38;
  }
  if (v48 < 0)
    v63 = v48;
  else
    v63 = v48 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v48);
  v49 = _CocoaArrayWrapper.endIndex.getter(v63);
  swift_bridgeObjectRelease(v48);
  if (!v49)
    goto LABEL_37;
LABEL_17:
  if (v49 >= 1)
  {
    for (i = 0; i != v49; ++i)
    {
      if ((v48 & 0xC000000000000001) != 0)
        v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v48);
      else
        v51 = *(id *)(v48 + 8 * i + 32);
      v52 = v51;
      ObjectType = swift_getObjectType();
      v54 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ShelfUIKitCell);
      if (v54)
        v55 = v54;
      else
        v55 = 0;
      if (v54)
        v56 = v52;
      else
        v56 = 0;
      if (v56)
      {
        v57 = swift_getObjectType();
        dispatch thunk of ShelfUIKitCell.shelfAttributesDidChange(attributes:)(v12, v57, v55);
      }

    }
    goto LABEL_37;
  }
  __break(1u);
}

uint64_t sub_2CE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void (*ShelvesViewProvider.layout(for:environment:safeAreaInsets:)(void (*a1)(_QWORD, _QWORD), void *a2, double a3, double a4, double a5, double a6))(_QWORD)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  id v68;
  void (*v69)(char *, uint64_t);
  id v70;
  double v71;
  double v72;
  uint64_t v73;
  void (*v74)(_QWORD, _QWORD);
  double v75;
  __n128 v76;
  void (*v77)(char *);
  uint64_t v78;
  void (*v79)(_QWORD);
  void (*v80)(void *, void (*)(_QWORD));
  char *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  char *v91;
  void (*v92)(_QWORD);
  void (*v93)(uint64_t, uint64_t, uint64_t, _QWORD *, __n128);
  uint64_t v94;
  uint64_t v95;
  void (*v96)(_QWORD);
  uint64_t v97;
  void (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  void (*v101)(_QWORD, _QWORD);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  void (*v110)(char *, uint64_t, uint64_t, _QWORD *);
  uint64_t v111;
  void (*v112)(char *);
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  void (*v120)(uint64_t, _QWORD, uint64_t, uint64_t);
  void *v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (**v132)(_QWORD);
  uint64_t v133;
  double *v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(_QWORD);
  __n128 v138;
  uint64_t v139;
  char *v140;
  void (*v141)(_QWORD);
  char *v142;
  __n128 v143;
  id v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  int v151;
  char *v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  unsigned int (*v158)(uint64_t, uint64_t, uint64_t);
  uint64_t v159;
  double v160;
  double v161;
  id v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  Class v171;
  uint64_t (*v172)(uint64_t, uint64_t, uint64_t);
  int v173;
  int v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  double v178;
  void (*v179)(char *, uint64_t, double);
  char v180;
  uint64_t v181;
  id v182;
  __n128 v183;
  double v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _BOOL4 v189;
  uint64_t v190;
  uint64_t v191;
  __n128 v192;
  uint64_t v193;
  uint64_t v194;
  id v195;
  __n128 v196;
  double v197;
  id v198;
  char *v199;
  double v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  __n128 v204;
  __n128 v205;
  char *v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  char *v210;
  uint64_t v211;
  unint64_t v212;
  char v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  double v217;
  void (*v218)(_QWORD);
  _BOOL4 v219;
  _BOOL4 v220;
  id v221;
  id v222;
  id v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  Class isa;
  id v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  double v242;
  id v243;
  id v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  Class v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  char *v275;
  char *v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  void *v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  void (*v298)(_QWORD);
  uint64_t v299;
  char *v300;
  uint64_t v301;
  _QWORD *v302;
  uint64_t v303;
  uint64_t v304;
  void (*v305)(char *, uint64_t);
  _QWORD *v306;
  uint64_t v307;
  void (*v308)(_QWORD, _QWORD);
  uint64_t v309;
  uint64_t v310;
  char *v311;
  _QWORD *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  __int128 aBlock;
  __int128 v317;
  void (*v318)(uint64_t, uint64_t, double);
  uint64_t v319;
  char v320[8];

  v7 = v6;
  v12 = type metadata accessor for ModernTitleHeaderView.Style(0);
  v13 = __chkstk_darwin(v12);
  v266 = (char *)&v261 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v299 = type metadata accessor for Header(0, v13);
  v301 = *(_QWORD *)(v299 - 8);
  __chkstk_darwin(v299);
  v277 = (char *)&v261 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E0);
  __chkstk_darwin(v16);
  v281 = (char *)&v261 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  __chkstk_darwin(v18);
  v276 = (char *)&v261 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v300 = (char *)&v261 - v21;
  __chkstk_darwin(v22);
  v275 = (char *)&v261 - v23;
  v315 = type metadata accessor for ModernShelf(0);
  v307 = *(_QWORD *)(v315 - 8);
  __chkstk_darwin(v315);
  v268 = (char *)&v261 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v267 = v24;
  __chkstk_darwin(v25);
  v288 = (char *)&v261 - v26;
  v272 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19F0);
  __chkstk_darwin(v272);
  v273 = (char *)&v261 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v278 = *(_QWORD *)(v279 - 8);
  __chkstk_darwin(v279);
  v271 = (char *)&v261 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19F8);
  __chkstk_darwin(v29);
  v285 = (uint64_t)&v261 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v287 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v286 = *(_QWORD *)(v287 - 8);
  __chkstk_darwin(v287);
  v270 = (char *)&v261 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = type metadata accessor for ShelvesViewProvider.SectionLayout(0);
  __chkstk_darwin(v284);
  v302 = (uint64_t *)((char *)&v261 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v306 = (_QWORD *)type metadata accessor for IndexPath(0);
  v304 = *(v306 - 1);
  __chkstk_darwin(v306);
  v269 = (char *)&v261 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v34);
  v294 = (char *)&v261 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v297 = (uint64_t)&v261 - v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v38);
  v265 = (uint64_t)&v261 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v290 = (uint64_t)&v261 - v41;
  __chkstk_darwin(v42);
  v274 = (uint64_t)&v261 - v43;
  __chkstk_darwin(v44);
  v280 = (char *)&v261 - v45;
  __chkstk_darwin(v46);
  v282 = (char *)&v261 - v47;
  __chkstk_darwin(v48);
  v310 = (uint64_t)&v261 - v49;
  __chkstk_darwin(v50);
  v314 = (uint64_t)&v261 - v51;
  v293 = type metadata accessor for PageSize(0);
  v292 = *(_QWORD *)(v293 - 8);
  __chkstk_darwin(v293);
  v53 = (char *)&v261 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v55 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v264 = (char *)&v261 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v262 = (char *)&v261 - v58;
  __chkstk_darwin(v59);
  v283 = (char *)&v261 - v60;
  __chkstk_darwin(v61);
  v63 = (char *)&v261 - v62;
  v65 = __chkstk_darwin(v64);
  v67 = (char *)&v261 - v66;
  ModernShelf.itemPresentation.getter(v65);
  v68 = objc_msgSend(a2, "traitCollection");
  v313 = v67;
  ShelvesViewProvider.adjustedItemPresentation(for:traitCollection:)((uint64_t)v63, v68, (uint64_t)v67);

  v289 = v55;
  v69 = *(void (**)(char *, uint64_t))(v55 + 8);
  v309 = v54;
  v305 = v69;
  v69(v63, v54);
  v291 = a2;
  v70 = objc_msgSend(a2, "container");
  objc_msgSend(v70, "contentSize");
  v72 = v71;
  swift_unknownObjectRelease(v70);
  v73 = PageSize.init(width:additionalTextMargin:)(v72 - (a4 + a6), 0.0);
  v311 = v53;
  v74 = a1;
  v75 = PageSize.margins.getter(v73);
  v76 = swift_beginAccess(v7 + 2, v320, 0, 0);
  v77 = (void (*)(char *))v7[2];
  v78 = v7[3];
  v79 = (void (*)(_QWORD))v7[4];
  v80 = (void (*)(void *, void (*)(_QWORD)))v7[5];
  v81 = (char *)v7[6];
  v82 = v7[7];
  v83 = (void *)v7[9];
  v303 = v7[8];
  v312 = v7;
  v85 = v7[10];
  v84 = v7[11];
  v308 = v74;
  v296 = v85;
  v295 = v84;
  v298 = v79;
  if (!v81)
  {
    v93 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *, __n128))(v304 + 56);
    v94 = v85;
    v86 = v297;
    v263 = v78;
    v93(v297, 1, 1, v306, v76);
    sub_2C690((uint64_t)v77, v263);
    sub_2C690((uint64_t)v79, (uint64_t)v80);
    sub_2C690(0, v82);
    sub_2C690(v303, (uint64_t)v83);
    sub_2C690(v94, v84);
    v78 = v263;
    goto LABEL_7;
  }
  sub_2C690((uint64_t)v77, v78);
  sub_2C690((uint64_t)v79, (uint64_t)v80);
  sub_2C690((uint64_t)v81, v82);
  sub_2C690(v303, (uint64_t)v83);
  sub_2C690(v85, v84);
  v86 = v297;
  ((void (*)(void (*)(_QWORD, _QWORD)))v81)(v74);
  v87 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(v304 + 48))(v86, 1, v306);
  if ((_DWORD)v87 == 1)
  {
LABEL_7:
    sub_D1D4(v86, (uint64_t *)&unk_3D1A00);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v307 + 56))(v314, 1, 1, v315);
    v92 = v298;
    goto LABEL_8;
  }
  v88 = IndexPath.section.getter(v87);
  v89 = *(char **)(v304 + 8);
  ((void (*)(uint64_t, _QWORD *))v89)(v86, v306);
  if (__OFSUB__(v88, 1))
  {
    __break(1u);
    goto LABEL_77;
  }
  if (v298)
  {
    v91 = v269;
    IndexPath.init(row:section:)(0, v88 - 1);
    v298(v91);
    v92 = v298;
    ((void (*)(char *, _QWORD *))v89)(v91, v306);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v307 + 56))(v314, 1, 1, v315);
    v92 = 0;
  }
LABEL_8:
  sub_1D618((uint64_t)v77, v78);
  sub_1D618((uint64_t)v92, (uint64_t)v80);
  sub_1D618((uint64_t)v81, v82);
  sub_1D618(v303, (uint64_t)v83);
  sub_1D618(v296, v295);
  v95 = v312[2];
  v89 = (char *)v312[3];
  v77 = (void (*)(char *))v312[4];
  v86 = v312[5];
  v96 = (void (*)(_QWORD))v312[6];
  v81 = (char *)v312[7];
  v98 = (void (*)(_QWORD))v312[8];
  v97 = v312[9];
  v99 = v312[10];
  v100 = v312[11];
  v303 = v99;
  v298 = v98;
  v297 = v100;
  v296 = v97;
  v295 = v95;
  if (v96)
  {
    sub_2C690(v95, (uint64_t)v89);
    sub_2C690((uint64_t)v77, v86);
    sub_2C690((uint64_t)v96, (uint64_t)v81);
    sub_2C690((uint64_t)v98, v97);
    sub_2C690(v99, v100);
    v83 = v294;
    v101 = v308;
    v96(v308);
    v82 = v304;
    v79 = (void (*)(_QWORD))v306;
    v102 = (*(uint64_t (**)(void *, uint64_t, _QWORD *))(v304 + 48))(v83, 1, v306);
    if ((_DWORD)v102 != 1)
    {
      v103 = IndexPath.section.getter(v102);
      v80 = *(void (**)(void *, void (*)(_QWORD)))(v82 + 8);
      v80(v83, v79);
      if (!__OFADD__(v103, 1))
      {
        v104 = (uint64_t)v81;
        v105 = (uint64_t)v89;
        if (v77)
        {
          v106 = v269;
          IndexPath.init(row:section:)(0, v103 + 1);
          v107 = v310;
          v77(v106);
          v80(v106, (void (*)(_QWORD))v306);
          v101 = v308;
          v108 = v315;
          v109 = (_QWORD *)v307;
        }
        else
        {
          v109 = (_QWORD *)v307;
          v107 = v310;
          v108 = v315;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v307 + 56))(v310, 1, 1, v315);
          v101 = v308;
        }
        goto LABEL_15;
      }
LABEL_77:
      __break(1u);
LABEL_78:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1, v89 + 1, 1);
LABEL_63:
      v227 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v89, v77);
      specialized Array._endMutation()(v227);
      v228 = aBlock;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v79, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v228).n128_f64[0]);

      sub_FA4C(v82, type metadata accessor for ModernTitleHeaderView.Style);
      (*(void (**)(char *, uint64_t))(v301 + 8))(v81, v86);
      goto LABEL_64;
    }
  }
  else
  {
    v110 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v304 + 56);
    v304 = v86;
    v111 = v97;
    v83 = v294;
    v112 = v77;
    v113 = v81;
    v114 = v89;
    v115 = v95;
    v110(v294, 1, 1, v306);
    v116 = v115;
    v89 = v114;
    v81 = v113;
    v77 = v112;
    v96 = 0;
    sub_2C690(v116, (uint64_t)v89);
    sub_2C690((uint64_t)v77, v304);
    sub_2C690(0, (uint64_t)v81);
    v117 = v111;
    v86 = v304;
    sub_2C690((uint64_t)v98, v117);
    sub_2C690(v99, v100);
    v101 = v308;
  }
  v104 = (uint64_t)v81;
  v105 = (uint64_t)v89;
  sub_D1D4((uint64_t)v83, (uint64_t *)&unk_3D1A00);
  v109 = (_QWORD *)v307;
  v107 = v310;
  v108 = v315;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v307 + 56))(v310, 1, 1, v315);
LABEL_15:
  sub_1D618(v295, v105);
  sub_1D618((uint64_t)v77, v86);
  sub_1D618((uint64_t)v96, v104);
  sub_1D618((uint64_t)v298, v296);
  sub_1D618(v303, v297);
  v118 = (_QWORD *)v109[2];
  v119 = (uint64_t)v282;
  ((void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v118)(v282, v101, v108);
  v120 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v109[7];
  v120(v119, 0, 1, v108);
  v121 = v291;
  LODWORD(v304) = sub_2EB38(v119, v314, v291);
  sub_D1D4(v119, (uint64_t *)&unk_3D3010);
  v306 = v118;
  ((void (*)(uint64_t, void (*)(_QWORD, _QWORD), uint64_t))v118)(v119, v101, v108);
  v120(v119, 0, 1, v108);
  v122 = v107;
  v83 = v121;
  v123 = sub_2EB38(v122, v119, v121);
  v124 = sub_D1D4(v119, (uint64_t *)&unk_3D3010);
  v125 = ModernShelf.items.getter(v124);
  v126 = *(_QWORD *)(v125 + 16);
  swift_bridgeObjectRelease(v125);
  v128 = ModernShelf.items.getter(v127);
  v129 = v128;
  if (*(_QWORD *)(v128 + 16))
  {
    sub_1D5D4(v128 + 32, (uint64_t)&aBlock);
  }
  else
  {
    v318 = 0;
    aBlock = 0u;
    v317 = 0u;
  }
  v130 = (uint64_t)v300;
  v131 = v286;
  swift_bridgeObjectRelease(v129);
  v132 = (void (**)(_QWORD))v302;
  sub_2F0C0(v83, v304, v123, (uint64_t)v313, (uint64_t)v311, v126, (uint64_t)&aBlock, v302);
  sub_D1D4((uint64_t)&aBlock, &qword_3D1A10);
  v79 = *v132;
  v133 = *(int *)(v284 + 20);
  v134 = (double *)((char *)v132 + *(int *)(v284 + 24));
  v298 = *(void (**)(_QWORD))v134;
  a4 = v134[1];
  LODWORD(v303) = *((unsigned __int8 *)v134 + 16);
  v135 = v285;
  sub_D184((uint64_t)v132 + v133, v285, &qword_3D19F8);
  v136 = v287;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v135, 1, v287) == 1)
  {
    v137 = v79;
    sub_D1D4(v135, &qword_3D19F8);
    LODWORD(v297) = 0;
    v139 = v315;
  }
  else
  {
    v140 = v270;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 32))(v270, v135, v136);
    v141 = v79;
    v142 = v271;
    ShelfCellListSeparatorMode.layout.getter(v143);
    v144 = objc_msgSend(v83, "traitCollection");
    v145 = (char *)objc_msgSend(v144, "horizontalSizeClass");

    (*(void (**)(char *, uint64_t))(v131 + 8))(v140, v136);
    v146 = *(int *)(v272 + 48);
    v147 = v278;
    v148 = (uint64_t)v273;
    v149 = v142;
    v150 = v279;
    (*(void (**)(char *, char *, uint64_t))(v278 + 32))(v273, v149, v279);
    *(_QWORD *)(v148 + v146) = v145;
    v151 = (*(uint64_t (**)(uint64_t, uint64_t))(v147 + 88))(v148, v150);
    v139 = v315;
    if (v151 == enum case for ShelfCellListSeparatorMode.Layout.default(_:) && v145 == (_BYTE *)&dword_0 + 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v278 + 8))(v148, v279);
      LODWORD(v297) = 1;
    }
    else
    {
      sub_D1D4(v148, &qword_3D19F0);
      LODWORD(v297) = 0;
    }
    v130 = (uint64_t)v300;
    v109 = (_QWORD *)v307;
  }
  v152 = v283;
  v153 = ModernShelf.itemPresentation.getter(v138);
  v154 = ModernShelf.ItemPresentation.background.getter(v153);
  v305(v152, v309);
  if ((v154 & 0x10000000000) == 0)
  {
    v155 = HIDWORD(v154) & 1;
    LOBYTE(aBlock) = BYTE4(v154) & 1;
    v156 = v154;
    v157 = sub_CD83C(v154 | ((unint64_t)(BYTE4(v154) & 1) << 32));
    LOBYTE(aBlock) = v155;
    if ((ModernShelf.Background.isColor.getter(v156 | ((unint64_t)v155 << 32)) & 1) != 0)
    {
      v158 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v109[6];
      v159 = v315;
      if (v158(v314, 1, v315) == 1)
        v160 = -1000.0;
      else
        v160 = 0.0;
      if (v158(v310, 1, v159) == 1)
        v161 = -1000.0;
      else
        v161 = -1.0;
    }
    else
    {
      v160 = 0.0;
      v161 = -1.0;
    }
    objc_msgSend(v157, "setContentInsets:", v160, -v75, v161, -v75);
    v162 = v157;
    v163 = objc_msgSend(v79, "decorationItems");
    v164 = sub_E710(0, &qword_3D1A28, NSCollectionLayoutDecorationItem_ptr);
    v165 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v163, v164);

    *(_QWORD *)&aBlock = v165;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v166);
    v168 = *(_QWORD *)((char *)&dword_10 + (aBlock & 0xFFFFFFFFFFFFFF8));
    v167 = *(_QWORD *)((char *)&dword_18 + (aBlock & 0xFFFFFFFFFFFFFF8));
    if (v168 >= v167 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v167 > 1, v168 + 1, 1);
    v169 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v168, v162);
    specialized Array._endMutation()(v169);
    v170 = aBlock;
    v171 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v79, "setDecorationItems:", v171, swift_bridgeObjectRelease(v170).n128_f64[0]);

    v139 = v315;
  }
  v172 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v109[6];
  v173 = v172(v314, 1, v139);
  v174 = *((unsigned __int8 *)v312 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_showsHeaders);
  v175 = v288;
  v176 = ((uint64_t (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v306)(v288, v308, v139);
  if (v174 == 1)
  {
    v177 = (uint64_t)v275;
    v178 = ModernShelf.header.getter(v176);
    v179 = (void (*)(char *, uint64_t, double))v109[1];
    v179(v175, v139, v178);
    v180 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v301 + 48))(v177, 1, v299) != 1;
    sub_D1D4(v177, &qword_3D19E8);
  }
  else
  {
    v179 = (void (*)(char *, uint64_t, double))v109[1];
    ((void (*)(char *, uint64_t))v179)(v175, v139);
    v180 = 0;
  }
  v181 = (uint64_t)v280;
  v182 = objc_msgSend(v83, "traitCollection");
  v184 = sub_3A5F8((uint64_t)v313, v173 == 1, v180, v182, v183);

  v185 = v310;
  sub_D184(v310, v181, (uint64_t *)&unk_3D3010);
  if (v174)
  {
    v186 = v274;
    sub_D184(v181, v274, (uint64_t *)&unk_3D3010);
    v187 = v315;
    v188 = v172(v186, 1, v315);
    if ((_DWORD)v188 == 1)
    {
      sub_D1D4(v181, (uint64_t *)&unk_3D3010);
      sub_D1D4(v186, (uint64_t *)&unk_3D3010);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v301 + 56))(v130, 1, 1, v299);
      v189 = 0;
    }
    else
    {
      ModernShelf.header.getter(v188);
      v185 = v310;
      sub_D1D4(v181, (uint64_t *)&unk_3D3010);
      ((void (*)(uint64_t, uint64_t))v179)(v186, v187);
      v189 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v301 + 48))(v130, 1, v299) != 1;
    }
    sub_D1D4(v130, &qword_3D19E8);
  }
  else
  {
    sub_D1D4(v181, (uint64_t *)&unk_3D3010);
    v189 = 0;
    v187 = v315;
  }
  v190 = v185;
  v191 = v290;
  sub_D184(v190, v290, (uint64_t *)&unk_3D3010);
  if (v172(v191, 1, v187) == 1)
  {
    sub_D1D4(v191, (uint64_t *)&unk_3D3010);
    v193 = 1;
    v194 = (uint64_t)v281;
  }
  else
  {
    v194 = (uint64_t)v281;
    ModernShelf.itemPresentation.getter(v192);
    ((void (*)(uint64_t, uint64_t))v179)(v191, v187);
    v193 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v289 + 56))(v194, v193, 1, v309);
  v195 = objc_msgSend(v83, "traitCollection");
  v197 = sub_3A880((uint64_t)v313, v189, v194, v195, v196);

  sub_D1D4(v194, &qword_3D19E0);
  v198 = objc_msgSend(v79, "setContentInsets:", v184, 0.0, v197, 0.0);
  v80 = (void (*)(void *, void (*)(_QWORD)))v308;
  if (v174)
  {
    v199 = v276;
    v200 = ModernShelf.header.getter(v198);
    v201 = (uint64_t)v199;
    v202 = v301;
    v86 = v299;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v301 + 48))(v201, 1, v299, v200) == 1)
    {
      sub_D1D4(v201, &qword_3D19E8);
      goto LABEL_64;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v277, v201, v86);
    v203 = v265;
    sub_D184(v314, v265, (uint64_t *)&unk_3D3010);
    if (v172(v203, 1, v187) == 1)
    {
      sub_D1D4(v203, (uint64_t *)&unk_3D3010);
    }
    else
    {
      v206 = v262;
      ModernShelf.itemPresentation.getter(v204);
      v207 = ((uint64_t (*)(uint64_t, uint64_t))v179)(v203, v187);
      v208 = ModernShelf.ItemPresentation.background.getter(v207);
      v305(v206, v309);
      if ((v208 & 0x10000000000) == 0)
      {
        v209 = ModernShelf.Background.isColor.getter(v208 | ((HIDWORD(v208) & 1) << 32));
        goto LABEL_57;
      }
    }
    v209 = 0;
LABEL_57:
    v82 = (uint64_t)v266;
    v81 = v277;
    v210 = v264;
    v211 = ModernShelf.itemPresentation.getter(v205);
    v212 = ModernShelf.ItemPresentation.background.getter(v211);
    v305(v210, v309);
    if ((v212 & 0x10000000000) != 0)
      v213 = 0;
    else
      v213 = ModernShelf.Background.isColor.getter(v212 | ((HIDWORD(v212) & 1) << 32));
    v214 = sub_2FF28(v209 & 1, v213 & 1, v82);
    v215 = ModernShelf.items.getter(v214);
    v216 = *(_QWORD *)(v215 + 16);
    *(_QWORD *)&v217 = swift_bridgeObjectRelease(v215).n128_u64[0];
    v218 = v298;
    if ((_DWORD)v303)
      v218 = 0;
    v219 = (uint64_t)v218 >= v216;
    v220 = v304 == 1;
    v221 = objc_msgSend(v83, "traitCollection", v217);
    v222 = sub_300D0(v81, (char *)v82, v220, v219, v221, v297);

    objc_msgSend(v222, "setZIndex:", 210);
    v77 = (void (*)(char *))v222;
    v223 = objc_msgSend(v79, "boundarySupplementaryItems");
    v224 = sub_E710(0, &qword_3D1A20, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    v225 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v223, v224);

    *(_QWORD *)&aBlock = v225;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v226);
    v89 = *(char **)((char *)&dword_10 + (aBlock & 0xFFFFFFFFFFFFFF8));
    v90 = *(_QWORD *)((char *)&dword_18 + (aBlock & 0xFFFFFFFFFFFFFF8));
    if ((unint64_t)v89 < v90 >> 1)
      goto LABEL_63;
    goto LABEL_78;
  }
LABEL_64:
  v230 = objc_msgSend(v83, "traitCollection");
  v231 = (char *)objc_msgSend(v230, "userInterfaceIdiom");

  v233 = v307;
  if (v231 == (_BYTE *)&dword_4 + 1)
  {
    v234 = ModernShelf.ItemPresentation.orientation.getter(v232);
    v235 = ModernShelf.ItemPresentation.Orientation.rawValue.getter(v234 & 1);
    v237 = v236;
    v239 = ModernShelf.ItemPresentation.Orientation.rawValue.getter(1);
    v240 = v238;
    if (v235 == v239 && v237 == v238)
    {
      swift_bridgeObjectRelease_n(v237, 2);
      if ((v303 & 1) != 0)
        goto LABEL_73;
    }
    else
    {
      v241 = _stringCompareWithSmolCheck(_:_:expecting:)(v235, v237, v239, v238, 0);
      swift_bridgeObjectRelease(v237);
      swift_bridgeObjectRelease(v240);
      if (v303 & 1 | ((v241 & 1) == 0))
        goto LABEL_73;
    }
    objc_msgSend(v79, "contentInsets");
    v243 = sub_3B0B0(a4, v75, v242);
    v244 = objc_msgSend(v79, "boundarySupplementaryItems");
    v245 = sub_E710(0, &qword_3D1A20, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    v246 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v244, v245);

    *(_QWORD *)&aBlock = v246;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v247);
    v249 = *(_QWORD *)((char *)&dword_10 + (aBlock & 0xFFFFFFFFFFFFFF8));
    v248 = *(_QWORD *)((char *)&dword_18 + (aBlock & 0xFFFFFFFFFFFFFF8));
    if (v249 >= v248 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v248 > 1, v249 + 1, 1);
    v250 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v249, v243);
    specialized Array._endMutation()(v250);
    v251 = aBlock;
    v252 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v79, "setBoundarySupplementaryItems:", v252, swift_bridgeObjectRelease(v251).n128_f64[0]);

    v253 = swift_allocObject(&unk_37BD50, 24, 7);
    swift_weakInit(v253 + 16, v312);
    v254 = v268;
    v255 = v315;
    ((void (*)(char *, void (*)(void *, void (*)(_QWORD)), uint64_t))v306)(v268, v80, v315);
    v256 = *(unsigned __int8 *)(v233 + 80);
    v257 = (v256 + 24) & ~v256;
    v258 = swift_allocObject(&unk_37BD78, v257 + v267, v256 | 7);
    *(_QWORD *)(v258 + 16) = v253;
    (*(void (**)(uint64_t, char *, uint64_t))(v233 + 32))(v258 + v257, v254, v255);
    v318 = sub_3B240;
    v319 = v258;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v317 = sub_308E0;
    *((_QWORD *)&v317 + 1) = &block_descriptor_1;
    v259 = _Block_copy(&aBlock);
    objc_msgSend(v79, "setVisibleItemsInvalidationHandler:", v259, swift_release(v319).n128_f64[0]);
    _Block_release(v259);

  }
LABEL_73:
  sub_FA4C((uint64_t)v302, type metadata accessor for ShelvesViewProvider.SectionLayout);
  (*(void (**)(char *, uint64_t))(v292 + 8))(v311, v293);
  v305(v313, v309);
  sub_D1D4(v310, (uint64_t *)&unk_3D3010);
  sub_D1D4(v314, (uint64_t *)&unk_3D3010);
  return v79;
}

uint64_t ShelvesViewProvider.adjustedItemPresentation(for:traitCollection:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v6 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a2, "horizontalSizeClass", v11) != (char *)&dword_0 + 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a3, a1, v6);
  ModernShelf.ItemPresentation.compactHorizontalPresentation.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
    return sub_D1D4((uint64_t)v13, &qword_3D19E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v13, v6);
  }
}

uint64_t sub_2EB38(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  __n128 v63;
  uint64_t v64;
  unint64_t v65;
  double (*v66)(char *, uint64_t);
  __n128 v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(char *, uint64_t);
  void (*v71)(char *, uint64_t);
  char v72;
  void (*v73)(char *, uint64_t);
  double (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  unsigned int (*v79)(uint64_t, uint64_t, uint64_t);
  char *v80;
  id v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;

  v85 = a2;
  v81 = a3;
  v4 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v87 = *(_QWORD *)(v4 - 8);
  v88 = v4;
  __chkstk_darwin(v4);
  v84 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v83 = (char *)&v74 - v7;
  __chkstk_darwin(v8);
  v80 = (char *)&v74 - v9;
  __chkstk_darwin(v10);
  v82 = (uint64_t)&v74 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  __chkstk_darwin(v12);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v15);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v74 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v74 - v22;
  v24 = type metadata accessor for ModernShelf(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v74 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v74 - v32;
  sub_D184(a1, (uint64_t)v23, (uint64_t *)&unk_3D3010);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v34((uint64_t)v23, 1, v24) != 1)
  {
    v78 = v20;
    v79 = v34;
    v76 = v30;
    v77 = v17;
    v75 = v27;
    v36 = v87;
    v35 = v88;
    v37 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    v38 = v37(v33, v23, v24);
    v39.n128_f64[0] = ModernShelf.header.getter(v38);
    v40 = type metadata accessor for Header(0, v39);
    v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v14, 1, v40);
    sub_D1D4((uint64_t)v14, &qword_3D19E8);
    v42 = v33;
    if (v41 == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v24);
      return 0;
    }
    if (*(_BYTE *)(v86 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_hideAllHeaderSeparators) == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v24);
      return 2;
    }
    v74 = (double (*)(char *, uint64_t, uint64_t))v37;
    v86 = v25;
    v44 = v85;
    v45 = (uint64_t)v78;
    sub_D184(v85, (uint64_t)v78, (uint64_t *)&unk_3D3010);
    v46 = v79;
    if (v79(v45, 1, v24) == 1)
    {
      sub_D1D4(v45, (uint64_t *)&unk_3D3010);
      v48 = v83;
      v47 = v84;
    }
    else
    {
      v49 = v76;
      v50.n128_f64[0] = v74(v76, v45, v24);
      v51 = (uint64_t)v80;
      ModernShelf.itemPresentation.getter(v50);
      v52 = objc_msgSend(v81, "traitCollection");
      v53 = v82;
      ShelvesViewProvider.adjustedItemPresentation(for:traitCollection:)(v51, v52, v82);

      v54 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8);
      v55 = v51;
      v46 = v79;
      v56 = v54(v55, v35);
      sub_EE31C(v56);
      LOBYTE(v52) = dispatch thunk of static ShelfCell.disableBelowShelfSeparator(presentation:)(v53, v58, *(_QWORD *)(v57 + 8));
      v54(v53, v35);
      v59 = *(void (**)(char *, uint64_t))(v86 + 8);
      v60 = v49;
      v44 = v85;
      v59(v60, v24);
      v48 = v83;
      v47 = v84;
      if ((v52 & 1) != 0)
      {
        v59(v42, v24);
        return 2;
      }
    }
    v61 = (uint64_t)v77;
    sub_D184(v44, (uint64_t)v77, (uint64_t *)&unk_3D3010);
    if (v46(v61, 1, v24) == 1)
    {
      (*(void (**)(char *, uint64_t))(v86 + 8))(v42, v24);
      sub_D1D4(v61, (uint64_t *)&unk_3D3010);
      return 1;
    }
    v62 = v75;
    v63.n128_f64[0] = v74(v75, v61, v24);
    v64 = ModernShelf.itemPresentation.getter(v63);
    v65 = ModernShelf.ItemPresentation.background.getter(v64);
    v66 = *(double (**)(char *, uint64_t))(v36 + 8);
    v67.n128_f64[0] = v66(v48, v35);
    v68 = ModernShelf.itemPresentation.getter(v67);
    v69 = ModernShelf.ItemPresentation.background.getter(v68);
    v66(v47, v35);
    v89 = BYTE5(v69) & 1;
    if ((v65 & 0x10000000000) != 0)
    {
      v71 = *(void (**)(char *, uint64_t))(v86 + 8);
      v71(v62, v24);
      v71(v42, v24);
      if ((v89 & 1) == 0)
        return 3;
    }
    else
    {
      if ((v69 & 0x10000000000) != 0)
      {
        v70 = *(void (**)(char *, uint64_t))(v86 + 8);
        v70(v62, v24);
        v70(v42, v24);
        return 3;
      }
      v72 = static ModernShelf.Background.== infix(_:_:)(v65 | ((HIDWORD(v65) & 1) << 32), v69 | ((HIDWORD(v69) & 1) << 32));
      v73 = *(void (**)(char *, uint64_t))(v86 + 8);
      v73(v62, v24);
      v73(v42, v24);
      if ((v72 & 1) == 0)
        return 3;
    }
    return 1;
  }
  sub_D1D4((uint64_t)v23, (uint64_t *)&unk_3D3010);
  return 0;
}

void sub_2F0C0(void *a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  double v49;
  double v50;
  uint64_t v51;
  double v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  _BOOL8 v66;
  char *v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  NSString v86;
  id v87;
  id v88;
  id v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  double v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  __n128 v107;
  void *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  void *v120;
  id v121;
  Class isa;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  uint64_t v129;
  char v130;
  double v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  double *v140;
  double v141;
  uint64_t v142;
  uint64_t v143;
  unsigned int v144;
  void *v145;
  uint64_t v146;
  _QWORD *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  int v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  char *v170;
  uint64_t v171;
  __int128 v172;
  char v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  __int128 v182;
  uint64_t v183;
  unsigned __int16 v184;

  v161 = a7;
  v150 = a6;
  v168 = a5;
  v155 = a3;
  v154 = a2;
  v165 = a8;
  v164 = type metadata accessor for FloatingPointRoundingRule(0);
  v163 = *(_QWORD *)(v164 - 8);
  v10 = __chkstk_darwin(v164);
  v162 = (char *)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for ShelfCellEnvironment(0, v10);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v151 = (char *)&v150 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for ShelfCellHeight(0);
  v159 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v171 = (uint64_t)&v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = type metadata accessor for Grid(0);
  v157 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v170 = (char *)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v150 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v150 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v166 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v24 = (char *)&v150 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v26 = __chkstk_darwin(v25).n128_u64[0];
  v28 = (char *)&v150 - v27;
  v156 = a1;
  v169 = objc_msgSend(a1, "traitCollection", v26);
  sub_EE31C((uint64_t)v169);
  v30 = v29;
  v31 = swift_conformsToProtocol2(v29, &protocol descriptor for ShelfCellListCustomizations);
  if (v31)
    v32 = v31;
  else
    v32 = 0;
  if (!v31)
    v30 = 0;
  if (!v30
    || (v31 = dispatch thunk of static ShelfCellListCustomizations.shouldLayoutAsList(presentation:)(a4, v30, v32),
        (v31 & 1) == 0))
  {
    sub_EEB98(v31);
    v38 = ModernShelf.ItemPresentation.orientation.getter(v37) & 1;
    v39 = ModernShelf.ItemPresentation.Orientation.rawValue.getter(v38);
    v41 = v40;
    v42 = 1;
    v44 = ModernShelf.ItemPresentation.Orientation.rawValue.getter(1);
    v45 = v43;
    if (v39 != v44 || (v46 = v41, v41 != v43))
    {
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v44, v43, 0);
      v46 = v45;
    }
    swift_bridgeObjectRelease(v41);
    v47 = swift_bridgeObjectRelease(v46);
    v48 = PageSize.columnInfo(grid:horizontal:)(v170, v42 & 1, v47);
    v50 = v49;
    v51 = v48;
    v52 = ((double (*)(void))PageSize.gutters.getter)();
    v53 = v169;
    v54 = sub_34EC0(a4, (uint64_t)v169, v161, v171);
    sub_EE31C(v54);
    v56 = v55;
    v57 = swift_conformsToProtocol2(v55, &protocol descriptor for ShelfCellListCustomizations);
    if (v57)
      v58 = v57;
    else
      v58 = 0;
    if (v57)
      v59 = v56;
    else
      v59 = 0;
    if (!v59
      || (v60 = dispatch thunk of static ShelfCellListCustomizations.shouldLayoutAsList(presentation:)(a4, v59, v58),
          v61 = 0.0,
          (v60 & 1) == 0))
    {
      v62 = swift_conformsToProtocol2(v56, &protocol descriptor for ShelfCellGridCustomizations);
      if (v62)
        v63 = v62;
      else
        v63 = 0;
      if (v62)
        v64 = v56;
      else
        v64 = 0;
      if (!v64)
        goto LABEL_35;
      v65 = v53;
      v66 = objc_msgSend(v65, "horizontalSizeClass") == (char *)&dword_0 + 1;
      v67 = v151;
      ShelfCellEnvironment.init(isHorizontallyCompact:)(v66);

      *(double *)&v68 = COERCE_DOUBLE(dispatch thunk of static ShelfCellGridCustomizations.rowSpacing(presentation:environment:)(a4, v67, v64, v63));
      v70 = v69;
      v60 = (*(uint64_t (**)(char *, uint64_t))(v152 + 8))(v67, v153);
      if ((v70 & 1) == 0)
      {
        v61 = *(double *)&v68;
        goto LABEL_40;
      }
      if (*(double *)&v68 == 0.0)
      {
LABEL_35:
        if (qword_3CF998 != -1)
          swift_once(&qword_3CF998, sub_1BE5A4);
        v172 = xmmword_3FCD00;
        v173 = byte_3FCD10;
        v174 = (id)qword_3FCD18;
        v175 = qword_3FCD20;
        v176 = qword_3FCD28;
        v177 = qword_3FCD30;
        v178 = qword_3FCD38;
        v179 = qword_3FCD40;
        v180 = (void *)qword_3FCD48;
        v181 = qword_3FCD50;
        v182 = xmmword_3FCD58;
        v183 = qword_3FCD68;
        v184 = word_3FCD70;
        sub_1472C((id)qword_3FCD18, qword_3FCD20, qword_3FCD28, qword_3FCD30, qword_3FCD38, qword_3FCD40, (void *)qword_3FCD48, qword_3FCD50, xmmword_3FCD58, *((uint64_t *)&xmmword_3FCD58 + 1), qword_3FCD68, word_3FCD70);
        if (qword_3CFAB0 != -1)
          swift_once(&qword_3CFAB0, sub_1DD388);
        v71 = __swift_project_value_buffer(v164, (uint64_t)qword_3FCFB0);
        sub_1DD06C((uint64_t)v53, v71, 0);
        v61 = v72;
        sub_14788(v174, v175, v176, v177, v178, v179, v180, v181, v182, *((uint64_t *)&v182 + 1), v183, v184);
      }
      else
      {
        v61 = PageSize.gutters.getter(v60);
      }
    }
LABEL_40:
    v73 = v51;
    *(_QWORD *)&v172 = _swiftEmptyArrayStorage;
    sub_EE31C(v60);
    v75 = v74;
    v76 = swift_conformsToProtocol2(v74, &protocol descriptor for ShelfCellGridCustomizations);
    if (v76)
      v77 = v76;
    else
      v77 = 0;
    if (!v76)
      v75 = 0;
    if (v75
      && (dispatch thunk of static ShelfCellGridCustomizations.shouldShowSeparatorsInGrid.getter(v75, v77) & 1) != 0)
    {
      LODWORD(v168) = v38;
      v78 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v79 = objc_msgSend(v78, "fractionalWidthDimension:", 1.0);
      v80 = objc_msgSend(v156, "traitCollection");
      static Separator.thickness(compatibleWith:)();
      v81 = objc_msgSend(v78, "absoluteDimension:");

      v82 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v79, v81);
      v83 = (void *)objc_opt_self(NSCollectionLayoutAnchor);
      v84 = v82;
      v85 = objc_msgSend(v83, "layoutAnchorWithEdges:absoluteOffset:", 4, 0.0, v61 * 0.5);
      v86 = String._bridgeToObjectiveC()();
      v87 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSupplementaryItem), "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v84, v86, v85);

      objc_msgSend(v87, "setZIndex:", 10);
      v88 = v87;
      dispatch thunk of static ShelfCellGridCustomizations.separatorInGridLeadingOffset(presentation:)(a4, v75, v77);
      objc_msgSend(v88, "contentInsets");
      objc_msgSend(v88, "setContentInsets:");

      v89 = v88;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v89);
      v91 = *(_QWORD *)((char *)&dword_10 + (v172 & 0xFFFFFFFFFFFFFF8));
      v90 = *(_QWORD *)((char *)&dword_18 + (v172 & 0xFFFFFFFFFFFFFF8));
      if (v91 >= v90 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1, v91 + 1, 1);
      v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v89);
      specialized Array._endMutation()(v92);

      v38 = v168;
    }
    v93 = ShelfCellHeight.heightFor(width:)(v50);
    v94 = v163;
    v95 = (uint64_t)v162;
    v96 = v164;
    v97 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v163 + 104))(v162, enum case for FloatingPointRoundingRule.down(_:), v164);
    v98 = UITraitCollection.safeDisplayScale.getter(v97);
    v99 = CGFloat.rounded(_:toScale:)(v95, v98, v50);
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v95, v96);
    v100 = ModernShelf.ItemPresentation.Orientation.rawValue.getter(v38);
    v102 = v101;
    v104 = ModernShelf.ItemPresentation.Orientation.rawValue.getter(0);
    v105 = v103;
    if (v100 == v104 && v102 == v103)
    {
      swift_bridgeObjectRelease_n(v102, 2);
LABEL_54:
      v108 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v109 = objc_msgSend(v108, "absoluteDimension:", v93);
      sub_EE31C((uint64_t)v109);
      v111 = v110;
      v112 = swift_conformsToProtocol2(v110, &protocol descriptor for ShelfCellVerticalGridCustomizations);
      if (v112)
        v113 = v112;
      else
        v113 = 0;
      if (!v112)
        v111 = 0;
      if (v111)
      {
        if ((dispatch thunk of static ShelfCellVerticalGridCustomizations.shouldUseAutolayoutForHeightInVerticalGrid.getter(v111, v113) & 1) != 0)
        {
          v114 = objc_msgSend(v108, "estimatedDimension:", v93);

          v109 = v114;
        }
        v115 = v73;
        v116 = dispatch thunk of static ShelfCellVerticalGridCustomizations.shouldExtendShelfEdgeToEdge.getter(v111, v113);
        v117 = 3;
        if ((v116 & 1) != 0)
          v117 = 1;
        v168 = v117;
      }
      else
      {
        v168 = 3;
        v115 = v73;
      }
      v118 = v172;
      v119 = objc_msgSend(v108, "fractionalWidthDimension:", 1.0, v150);
      v120 = (void *)objc_opt_self(NSCollectionLayoutSize);
      v121 = objc_msgSend(v120, "sizeWithWidthDimension:heightDimension:", v119, v109);

      sub_E710(0, &qword_3D1E68, NSCollectionLayoutSupplementaryItem_ptr);
      swift_bridgeObjectRetain(v118);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v118);
      v123 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:supplementaryItems:", v121, isa);

      v124 = objc_msgSend(v108, "fractionalWidthDimension:", 1.0);
      v125 = objc_msgSend(v120, "sizeWithWidthDimension:heightDimension:", v124, v109);

      v126 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutGroup), "horizontalGroupWithLayoutSize:subitem:count:", v125, v123, v115);
      v127 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSpacing), "fixedSpacing:", v52);
      objc_msgSend(v126, "setInterItemSpacing:", v127);

      v128 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v126);
      objc_msgSend(v128, "setInterGroupSpacing:", v61);

      swift_bridgeObjectRelease(v118);
      v129 = 0;
      v130 = 1;
      v131 = 0.0;
      v132 = v167;
      v133 = v166;
      v53 = v169;
      goto LABEL_77;
    }
    v106 = _stringCompareWithSmolCheck(_:_:expecting:)(v100, v102, v104, v103, 0);
    swift_bridgeObjectRelease(v102);
    v107 = swift_bridgeObjectRelease(v105);
    if ((v106 & 1) != 0)
      goto LABEL_54;
    v134 = ModernShelf.ItemPresentation.horizontalRows.getter(v107);
    if (v73)
    {
      v132 = v167;
      v133 = v166;
      if (v150 == 0x8000000000000000 && v73 == -1)
        goto LABEL_82;
      v135 = v150 / v73;
      if (v150 / v73 >= v134)
        v135 = v134;
      if (v135 <= 1)
        v136 = 1;
      else
        v136 = v135;
      v137 = v172;
      v128 = sub_3A4C0(v172, v136, v99, v93, v52, v61);
      swift_bridgeObjectRelease(v137);
      v129 = v73 * v136;
      if ((unsigned __int128)(v73 * (__int128)v136) >> 64 == (v73 * v136) >> 63)
      {
        v130 = 0;
        v131 = v93 * (double)v136 + v61 * (double)(v136 - 1);
        v168 = 3;
LABEL_77:
        objc_msgSend(v128, "setContentInsetsReference:", v168, v150);

        (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v171, v160);
        (*(void (**)(char *, uint64_t))(v157 + 8))(v170, v158);
        v138 = type metadata accessor for ShelvesViewProvider.SectionLayout(0);
        v139 = v165;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v133 + 56))((char *)v165 + *(int *)(v138 + 20), 1, 1, v132);
        *v139 = v128;
        v140 = (double *)((char *)v139 + *(int *)(v138 + 24));
        *(_QWORD *)v140 = v129;
        v140[1] = v131;
        *((_BYTE *)v140 + 16) = v130;
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_82:
    __break(1u);
    return;
  }
  v171 = a4;
  if (swift_conformsToProtocol2(v30, &protocol descriptor for ShelfCVCellListCustomizations))
    v33 = v30;
  else
    v33 = 0;
  if (v33)
  {
    dispatch thunk of static ShelfCVCellListCustomizations.listSeparatorMode.getter();
    v34 = v166;
    v35 = v167;
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v166 + 32))(v28, v24, v167);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for ShelfCellListSeparatorMode.Placement.default(_:), v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for ShelfCellListSeparatorMode.Layout.default(_:), v15);
    v36 = ShelfCellListSeparatorMode.init(placement:layout:)(v22, v18);
    v35 = v167;
    v34 = v166;
  }
  v141 = PageSize.margins.getter(v36);
  v142 = v171;
  v144 = ModernShelf.ItemPresentation.itemKind.getter(v143);
  v145 = (void *)sub_35B30((uint64_t)v156, v142, v154, v155, (uint64_t)v28, v144, v141);
  objc_msgSend(v145, "setContentInsetsReference:", 2);

  v146 = type metadata accessor for ShelvesViewProvider.SectionLayout(0);
  v147 = v165;
  v148 = (char *)v165 + *(int *)(v146 + 20);
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v148, v28, v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v148, 0, 1, v35);
  *v147 = v145;
  v149 = (char *)v147 + *(int *)(v146 + 24);
  *(_QWORD *)v149 = 0;
  *((_QWORD *)v149 + 1) = 0;
  v149[16] = 1;
}

uint64_t sub_2FF28@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v6 = ((uint64_t (*)(void))Header.displaySubtitleAsEyebrow.getter)();
  if ((a1 & 1) != 0)
  {
    if ((a2 & 1) == 0)
    {
      if ((v6 & 1) != 0)
      {
        if (qword_3CF9D8 != -1)
          swift_once(&qword_3CF9D8, sub_1C5A90);
        v7 = qword_3FCE90;
      }
      else
      {
        if (qword_3CF9C0 != -1)
          swift_once(&qword_3CF9C0, sub_1C4C60);
        v7 = qword_3FCE48;
      }
      goto LABEL_25;
    }
    goto LABEL_12;
  }
  if ((a2 & 1) == 0)
  {
LABEL_12:
    if ((Header.displaySubtitleAsEyebrow.getter(v6) & 1) != 0)
    {
      if (qword_3CF9C8 != -1)
        swift_once(&qword_3CF9C8, sub_1C4CE0);
      v7 = qword_3FCE60;
    }
    else
    {
      if (qword_3CF9B0 != -1)
        swift_once(&qword_3CF9B0, sub_1C4C38);
      v7 = qword_3FCE18;
    }
    goto LABEL_25;
  }
  if ((v6 & 1) != 0)
  {
    if (qword_3CF9D0 != -1)
      swift_once(&qword_3CF9D0, sub_1C53DC);
    v7 = qword_3FCE78;
  }
  else
  {
    if (qword_3CF9B8 != -1)
      swift_once(&qword_3CF9B8, sub_1C4C4C);
    v7 = qword_3FCE30;
  }
LABEL_25:
  v8 = type metadata accessor for ModernTitleHeaderView.Style(0);
  v9 = __swift_project_value_buffer(v8, (uint64_t)v7);
  return sub_19C4C(v9, a3, type metadata accessor for ModernTitleHeaderView.Style);
}

id sub_300D0(void *a1, char *a2, int a3, int a4, void *a5, char a6)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _BYTE *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char *v26;
  BOOL v27;
  void *v28;
  double v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  id v39;
  _BYTE v41[4];
  int v42;
  void *v43;
  uint64_t v44;
  int v45;
  char v46;

  v43 = a5;
  v42 = a4;
  v45 = a3;
  v9 = type metadata accessor for ModernTitleHeaderView.Style(0);
  __chkstk_darwin(v9);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
  __chkstk_darwin(v44);
  v13 = &v41[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E50);
  __chkstk_darwin(v14);
  v16 = &v41[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __chkstk_darwin(v17);
  v20 = &v41[-v19];
  v21 = a1;
  Header.primaryAction.getter(v18);
  v22 = type metadata accessor for Header.PrimaryAction(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
  {
    v24 = 0;
  }
  else
  {
    sub_D184((uint64_t)v20, (uint64_t)v16, &qword_3D1E50);
    v25 = a6;
    v26 = a2;
    v27 = (*(unsigned int (**)(_BYTE *, uint64_t))(v23 + 88))(v16, v22) == enum case for Header.PrimaryAction.seeAll(_:);
    (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v16, v22);
    v24 = v27 & v42;
    a2 = v26;
    a6 = v25;
  }
  v28 = v43;
  sub_D1D4((uint64_t)v20, &qword_3D1E50);
  v29 = _s23ShelfKitCollectionViews21ModernTitleHeaderViewC19roughHeightEstimate6header5style6traits12CoreGraphics7CGFloatV0aB00G0V_AC5StyleVSo07UITraitC0CtFZ_0(v21, a2, v28);
  v30 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v31 = objc_msgSend(v30, "fractionalWidthDimension:", 1.0);
  v32 = objc_msgSend(v30, "estimatedDimension:", v29);
  v33 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v31, v32);

  if ((v45 & 1) != 0)
  {
    v34 = 1;
    v35 = v44;
    if (a6 != 2)
      v34 = (a6 & 1) == 0;
  }
  else
  {
    v34 = 2;
    v35 = v44;
  }
  v46 = v34;
  sub_19C4C((uint64_t)a2, (uint64_t)v11, type metadata accessor for ModernTitleHeaderView.Style);
  sub_32AEC(v24, &v46, (uint64_t)v11, v13);
  v36 = *(_QWORD *)&v13[*(int *)(v35 + 28) + 8];
  v37 = v33;
  swift_bridgeObjectRetain(v36);
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v36);
  v39 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v37, v38, 1);

  objc_msgSend(v39, "setPinToVisibleBounds:", Header.shouldPinToVisibleBounds.getter() & 1);
  sub_FA4C((uint64_t)v13, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
  return v39;
}

void sub_30430(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  _BYTE v10[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    sub_304A4(a5, a1);
    swift_release(v9);
  }
}

void sub_304A4(uint64_t a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  __n128 v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  id v36;
  NSString v37;
  Class isa;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54[24];
  id v55[5];
  _OWORD v56[2];
  uint64_t v57;
  _OWORD v58[2];
  uint64_t v59;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v6);
  v53 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v51 = (char *)&v47 - v14;
  v52 = a1;
  v15 = ModernShelf.id.getter(v13);
  v17 = v16;
  v18 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_pageControlOffsets);
  swift_beginAccess((char *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_pageControlOffsets, v58, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v18);
  *(_QWORD *)&v56[0] = *v18;
  *v18 = 0x8000000000000000;
  sub_15F1CC(v15, v17, isUniquelyReferenced_nonNull_native, a2);
  v20 = *v18;
  *v18 = *(_QWORD *)&v56[0];
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v20);
  swift_endAccess(v58);
  v21 = swift_beginAccess(v3 + 2, v54, 0, 0);
  v22 = (void (*)(uint64_t))v3[6];
  if (!v22)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v53, 1, 1, v8, v21);
    goto LABEL_9;
  }
  v47 = v11;
  v23 = v3[10];
  v24 = v3[11];
  v49 = v9;
  v25 = v8;
  v27 = v3[8];
  v26 = v3[9];
  v50 = v25;
  v28 = v3[7];
  v29 = v3[4];
  v30 = v3[5];
  v31 = v3[2];
  v48 = v3[3];
  sub_2C690(v31, v48);
  sub_2C690(v29, v30);
  sub_2C690((uint64_t)v22, v28);
  sub_2C690(v27, v26);
  sub_2C690(v23, v24);
  v22(v52);
  sub_1D618(v31, v48);
  sub_1D618(v29, v30);
  sub_1D618((uint64_t)v22, v28);
  v32 = v50;
  v33 = v49;
  sub_1D618(v27, v26);
  sub_1D618(v23, v24);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v53, 1, v32) == 1)
  {
LABEL_9:
    sub_D1D4(v53, (uint64_t *)&unk_3D1A00);
    return;
  }
  v34 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v51, v53, v32);
  v35 = *(void **)((char *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_collectionView);
  if (!v35)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    return;
  }
  v36 = v35;
  v37 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v39 = objc_msgSend(v36, "supplementaryViewForElementKind:atIndexPath:", v37, isa);

  if (!v39)
  {
LABEL_11:

    goto LABEL_12;
  }
  v40 = type metadata accessor for ShelfPageControl();
  v41 = swift_dynamicCastClass(v39, v40);
  if (!v41)
  {

    goto LABEL_11;
  }
  v42 = v41;
  v43 = (uint64_t)v47;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v47, v34, v32);
  v36 = v36;
  sub_3D618(v36, v43, (uint64_t)v55, a2);
  sub_D210((uint64_t)v55, (uint64_t)v56, &qword_3D1D98);
  if (*(_QWORD *)&v56[0])
  {
    v58[0] = v56[0];
    v58[1] = v56[1];
    v59 = v57;
    v44 = sub_35930();
    v45 = *(_QWORD *)(v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_pageControls);
    v46 = *(_QWORD *)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections);
    *(_QWORD *)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections) = v44;
    swift_bridgeObjectRelease(v46);
    sub_E7E68();

    sub_3D798(v55);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);

}

double sub_308E0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, double, double);
  uint64_t v11;
  uint64_t v12;
  double result;

  v10 = *(void (**)(uint64_t, uint64_t, double, double))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E60);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
  swift_retain(v9);
  swift_unknownObjectRetain(a3);
  v10(v12, a3, a4, a5);
  swift_release(v9);
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)&result = swift_unknownObjectRelease(a3).n128_u64[0];
  return result;
}

id ShelvesViewProvider.cell(for:indexPath:section:item:)(void *a1, uint64_t a2, char *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  id v17;
  void (*v18)(char *, uint64_t);
  Swift::String v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjCClassFromMetadata;
  NSString v32;
  NSString v33;
  uint64_t v34;
  Class isa;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD, _QWORD);
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  id v58;
  double v59;
  Swift::String_optional v60;
  NSString v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  __int128 v69[2];
  uint64_t v70;
  uint64_t v71[5];
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76[32];

  v5 = v4;
  v68 = a2;
  v9 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v65 - v15;
  ModernShelf.itemPresentation.getter(v14);
  v17 = objc_msgSend(a1, "traitCollection");
  ShelvesViewProvider.adjustedItemPresentation(for:traitCollection:)((uint64_t)v12, v17, (uint64_t)v16);

  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v67 = v9;
  v66 = v18;
  v18(v12, v9);
  v72 = 0;
  v73 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  v19._object = (void *)0x8000000000308B60;
  v19._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v19);
  LOBYTE(v71[0]) = ModernShelf.ItemPresentation.itemKind.getter(v20);
  _print_unlocked<A, B>(_:_:)(v71, &v72, &type metadata for ModernShelf.ItemKind, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v21._countAndFlagsBits = 46;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  LOBYTE(v71[0]) = ModernShelf.ItemPresentation.orientation.getter() & 1;
  _print_unlocked<A, B>(_:_:)(v71, &v72, &type metadata for ModernShelf.ItemPresentation.Orientation, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v23 = v72;
  v22 = v73;
  v24 = (uint64_t *)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_registeredCellReuseIdentifiers);
  swift_beginAccess(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_registeredCellReuseIdentifiers, v76, 0, 0);
  v25 = *v24;
  swift_bridgeObjectRetain(*v24);
  LOBYTE(v10) = sub_30F7C(v23, v22, v25);
  swift_bridgeObjectRelease(v25);
  if ((v10 & 1) != 0)
    goto LABEL_13;
  sub_EE31C(v26);
  v28 = v27;
  if (swift_conformsToProtocol2(v27, &protocol descriptor for ShelfUIKitCell))
    v29 = v28;
  else
    v29 = 0;
  if (!v29)
  {
    if (swift_conformsToProtocol2(v28, &protocol descriptor for ShelfSwiftUICell))
      v30 = v28;
    else
      v30 = 0;
    if (!v30)
      goto LABEL_12;
    v29 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v29);
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v32);

LABEL_12:
  swift_beginAccess(v24, &v72, 33, 0);
  swift_bridgeObjectRetain(v22);
  sub_3858C(v71, v23, v22);
  swift_endAccess(&v72);
  swift_bridgeObjectRelease(v71[1]);
LABEL_13:
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v34 = v68;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v36 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v33, isa);

  sub_EE31C(v37);
  v39 = v38;
  v40 = swift_conformsToProtocol2(v38, &protocol descriptor for ShelfSwiftUICell);
  if (v40)
    v41 = v40;
  else
    v41 = 0;
  if (v40)
    v42 = v39;
  else
    v42 = 0;
  if (v42)
  {
    sub_31264(v42, (uint64_t)a3, (uint64_t)a4, (uint64_t)v16, v36, v42, v41);
  }
  else
  {
    ObjectType = swift_getObjectType();
    v44 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ShelfUIKitCell);
    if (v44)
      v45 = (void (*)(_QWORD, _QWORD, _QWORD))v44;
    else
      v45 = 0;
    if (v44)
      v46 = v36;
    else
      v46 = 0;
    if (v46)
    {
      v47 = v36;
      sub_31580(a1, v34, (uint64_t)a3, (uint64_t)a4, (uint64_t)v16, v46, v45);

    }
  }
  sub_1D5D4((uint64_t)a4, (uint64_t)v71);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A40);
  if ((swift_dynamicCast(v69, v71, v48, v49, 6) & 1) != 0)
  {
    sub_1B738(v69, (uint64_t)&v72);
    v50 = v74;
    v51 = v75;
    __swift_project_boxed_opaque_existential_1(&v72, v74);
    v52 = dispatch thunk of AppEntityAnnotationProvider.appEntityAnnotation()(v50, v51);
    if (v52)
    {
      v53 = (void *)v52;
      v54 = type metadata accessor for AppEntityViewAnnotation(0);
      v55 = swift_dynamicCastClass(v53, v54);
      if (v55)
        UIView.annotate(with:)(v55);

    }
    v56 = __swift_destroy_boxed_opaque_existential_0(&v72);
  }
  else
  {
    v70 = 0;
    memset(v69, 0, sizeof(v69));
    v56 = sub_D1D4((uint64_t)v69, &qword_3D1A48);
  }
  v57 = ModernShelf.ItemPresentation.itemKind.getter(v56);
  sub_B8E28(v34, a3, a4, v57);
  v58 = v36;
  v60 = ModernShelf.accessibilityLabel()();
  if (v60.value._object)
  {
    v61 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v60.value._object).n128_u64[0];
  }
  else
  {
    v61 = 0;
  }
  v62 = v67;
  v63 = v66;
  objc_msgSend(v58, "setAccessibilityLabel:", v61, v59);

  v63(v16, v62);
  return v58;
}

uint64_t sub_30E74(char a1, uint64_t a2)
{
  Swift::UInt v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_9;
  v3 = a1 & 1;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(v3);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_9;
  v8 = *(_QWORD *)(a2 + 48);
  if (((((_DWORD)v3 == 0) ^ *(unsigned __int8 *)(v8 + v6)) & 1) != 0)
  {
    v9 = 1;
    return v9 & 1;
  }
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_9:
    v9 = 0;
    return v9 & 1;
  }
  do
  {
    v9 = ((_DWORD)v3 == 0) ^ *(_BYTE *)(v8 + v11);
    if ((v9 & 1) != 0)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return v9 & 1;
}

uint64_t sub_30F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_310B0(Swift::UInt a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(a1);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_3119C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), a1);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

double sub_31264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  double result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  __int128 v69[3];

  v66 = a6;
  v67 = a7;
  v68 = a5;
  v55 = a4;
  v65 = a1;
  v64 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v60 = *(_QWORD *)(v64 - 8);
  v10 = *(_QWORD *)(v60 + 64);
  __chkstk_darwin(v64);
  v63 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ModernShelf(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v15 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v61 = a2;
  v58 = v17;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v17)(v15, a2, v11, v14);
  sub_1D5D4(a3, (uint64_t)v69);
  v18 = *(unsigned __int8 *)(v12 + 80);
  v57 = ~v18;
  v19 = (v18 + 16) & ~v18;
  v56 = v13 + 7;
  v20 = (v13 + 7 + v19) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_37BE38, v20 + 40, v18 | 7);
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v62 = v15;
  v23 = v15;
  v24 = v11;
  v25 = v11;
  v26 = v55;
  v59 = v22;
  v22((char *)(v21 + v19), v23, v25);
  v27 = v21 + v20;
  v28 = a3;
  sub_1B738(v69, v27);
  v29 = swift_retain(v16);
  v30 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_3D7C4, v21, v29);
  swift_release(v21);
  swift_release(v16);
  v31 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
  v32 = swift_dynamicCastClass(v68, v31);
  if (v32)
  {
    v33 = v32;
    v34 = v68;
    v35 = static ShelfSwiftUICell.interactionContextView(presentation:model:)(v26, v28, v66, v67);
    v36 = *(_QWORD *)(v33 + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph);
    *(_QWORD *)(v33 + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph) = v30;
    swift_release(v36);
    *(_BYTE *)(v33 + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_interactionContextView) = v35;
    swift_retain(v30);

  }
  v54 = v30;
  v37 = v60;
  v38 = v63;
  v39 = v26;
  v40 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v63, v39, v64);
  sub_1D5D4(v28, (uint64_t)v69);
  v41 = v62;
  v58(v62, v61, v24);
  v42 = *(unsigned __int8 *)(v37 + 80);
  v43 = (v42 + 40) & ~v42;
  v44 = (v10 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = (v18 + v44 + 40) & v57;
  v46 = v18 | v42 | 7;
  v47 = (v56 + v45) & 0xFFFFFFFFFFFFFFF8;
  v48 = (char *)swift_allocObject(&unk_37BE60, v47 + 8, v46);
  v49 = v67;
  *((_QWORD *)v48 + 2) = v66;
  *((_QWORD *)v48 + 3) = v49;
  *((_QWORD *)v48 + 4) = v65;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v48[v43], v38, v40);
  sub_1B738(v69, (uint64_t)&v48[v44]);
  v59(&v48[v45], v41, v24);
  v50 = v54;
  *(_QWORD *)&v48[v47] = v54;
  v51 = swift_retain(v50);
  UICollectionViewCell.configurationUpdateHandler.setter(sub_3D8B0, v48, v51);
  *(_QWORD *)&result = swift_release(v50).n128_u64[0];
  return result;
}

double sub_31580(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void (*v33)(uint64_t, char *, uint64_t);
  void (*v34)(_QWORD, _QWORD, _QWORD);
  __n128 v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  double v54;
  id v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __n128 v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  id v100;
  __n128 v101;
  uint64_t (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  char v105;
  __n128 v106;
  double result;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(_QWORD, _QWORD, _QWORD);
  id v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t, uint64_t);
  void (*v123)(uint64_t, char *, uint64_t);
  uint64_t v124;
  char *v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133[24];
  __int128 v134[2];

  v118 = a7;
  v127 = a1;
  v128 = a6;
  v131 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  __chkstk_darwin(v10);
  v111 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for DeletableExtension(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v110 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = v12;
  __chkstk_darwin(v13);
  v112 = (char *)&v108 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19C0);
  __chkstk_darwin(v15);
  v117 = (uint64_t)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ShelfAttributes(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v115 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ModernShelf(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = __chkstk_darwin(v20);
  v24 = (char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v129 = a3;
  v122 = v26;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v26)(v24, a3, v20, v23);
  v130 = a4;
  sub_1D5D4(a4, (uint64_t)v134);
  v27 = *(unsigned __int8 *)(v21 + 80);
  v121 = ~v27;
  v28 = (v27 + 16) & ~v27;
  v116 = v27;
  v124 = v22;
  v29 = (v22 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v119 = (id)(v27 | 7);
  v30 = swift_allocObject(&unk_37BE88, v29 + 40, v27 | 7);
  v31 = v30 + v28;
  v32 = v128;
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v125 = v24;
  v126 = v20;
  v34 = v118;
  v123 = v33;
  v33(v31, v24, v20);
  sub_1B738(v134, v30 + v29);
  v35 = swift_retain(v25);
  v36 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_3D7C4, v30, v35);
  swift_release(v30);
  swift_release(v25);
  ObjectType = swift_getObjectType();
  dispatch thunk of ShelfUIKitCell.prepareForUse(asPartOf:with:)(v36, v131, ObjectType, v34);
  v38 = v132 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_cachedShelfAttributes;
  swift_beginAccess(v132 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_cachedShelfAttributes, v133, 0, 0);
  v39 = v38;
  v40 = v117;
  sub_D184(v39, v117, &qword_3D19C0);
  v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v40, 1, v17);
  v120 = v36;
  if (v41 == 1)
  {
    sub_D1D4(v40, &qword_3D19C0);
  }
  else
  {
    v42 = v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v115, v40, v17);
    dispatch thunk of ShelfUIKitCell.shelfAttributesDidChange(attributes:)(v42, ObjectType, v34);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v42, v17);
  }
  v44 = v129;
  v43 = v130;
  v45 = v132;
  v46 = v116;
  dispatch thunk of ShelfUIKitCell.apply(model:)(v130, ObjectType, v34);
  v47 = swift_allocObject(&unk_37BD50, 24, 7);
  swift_weakInit(v47 + 16, v45);
  sub_1D5D4(v43, (uint64_t)v134);
  v48 = v125;
  v49 = v44;
  v50 = v126;
  v122(v125, v49, v126);
  v51 = (v46 + 64) & v121;
  v52 = swift_allocObject(&unk_37BEB0, v51 + v124, v119);
  *(_QWORD *)(v52 + 16) = v47;
  sub_1B738(v134, v52 + 24);
  v123(v52 + v51, v48, v50);
  v53 = swift_retain(v47);
  dispatch thunk of ShelfUIKitCell.prepareForDisplay(presentation:cellReloadingHandler:)(v131, sub_3DB3C, v52, ObjectType, v34, v53);
  swift_release(v47);
  *(_QWORD *)&v54 = swift_release(v52).n128_u64[0];
  v55 = v127;
  v56 = objc_msgSend(v127, "traitCollection", v54);
  v57 = (char *)objc_msgSend(v56, "userInterfaceIdiom");

  if (v57 != (_BYTE *)&dword_4 + 1)
  {
    v58 = swift_getObjectType();
    v59 = swift_conformsToProtocol2(v58, &protocol descriptor for DeletableShelfUIKitCell);
    v60 = v59 ? v59 : 0;
    if (v59 ? v32 : 0)
    {
      v131 = v60;
      v62 = v111;
      sub_D184(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_deletableExtension, v111, &qword_3D2E80);
      v63 = v113;
      v64 = v114;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v62, 1, v114) == 1)
      {
        sub_D1D4(v62, &qword_3D2E80);
      }
      else
      {
        v118 = *(void (**)(_QWORD, _QWORD, _QWORD))(v63 + 32);
        v65 = v112;
        v118(v112, v62, v64);
        v66 = swift_getObjectType();
        v117 = v66;
        v119 = v32;
        v67 = v64;
        v68 = v63;
        v69 = (uint64_t (*)(uint64_t, uint64_t))DeletableExtension.canDelete.getter();
        v71 = v70;
        v72 = v129;
        v73 = v130;
        v74 = v69(v130, v129);
        v75 = swift_release(v71);
        dispatch thunk of DeletableShelfUIKitCell.itemIsDeletable.setter(v74 & 1, v66, v131, v75);
        v76 = v68;
        v77 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
        v78 = v110;
        v77(v110, v65, v67);
        sub_1D5D4(v73, (uint64_t)v134);
        v79 = v125;
        v80 = v72;
        v81 = v126;
        v122(v125, v80, v126);
        v82 = *(unsigned __int8 *)(v76 + 80);
        v83 = (v82 + 16) & ~v82;
        v84 = (v109 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
        v85 = (v46 + v84 + 40) & v121;
        v86 = swift_allocObject(&unk_37BED8, v85 + v124, v46 | v82 | 7);
        v87 = v86 + v83;
        v32 = v128;
        v88 = v114;
        v118(v87, v78, v114);
        v55 = v127;
        v89 = v86 + v84;
        v45 = v132;
        sub_1B738(v134, v89);
        v123(v86 + v85, v79, v81);
        dispatch thunk of DeletableShelfUIKitCell.deletionUITriggered.setter(sub_3DC38, v86, v117, v131);

        (*(void (**)(char *, uint64_t))(v113 + 8))(v112, v88);
      }
    }
  }
  v90 = objc_msgSend(v55, "traitCollection");
  v91 = (char *)objc_msgSend(v90, "userInterfaceIdiom");

  if (v91 != (_BYTE *)&dword_4 + 1)
  {
    v92 = swift_getObjectType();
    v93 = swift_conformsToProtocol2(v92, &protocol descriptor for MultiSelectableShelfUIKitCell);
    if (v93)
      v94 = v93;
    else
      v94 = 0;
    if (v93)
      v95 = v32;
    else
      v95 = 0;
    if (v95)
    {
      v96 = *(_QWORD *)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_multiSelectableExtension);
      if (v96)
      {
        v97 = swift_getObjectType();
        v98 = v32;
        v99 = v97;
        v100 = v98;
        v101 = swift_retain(v96);
        v102 = (uint64_t (*)(uint64_t, uint64_t))MultiSelectableExtension.shouldDisplayMultiSelectUI.getter(v101);
        v104 = v103;
        v105 = v102(v130, v129);
        v106 = swift_release(v104);
        dispatch thunk of MultiSelectableShelfUIKitCell.shouldDisplayMultiSelectUI.setter(v105 & 1, v99, v94, v106);

        swift_release(v96);
      }
    }
  }
  *(_QWORD *)&result = swift_release(v120).n128_u64[0];
  return result;
}

uint64_t sub_31D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[12];
  _QWORD v44[3];
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t WitnessTable;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v35 = a8;
  v36 = a3;
  v41 = a6;
  v42 = a7;
  v39 = a1;
  v40 = a5;
  v37 = a4;
  v38 = a2;
  v34[1] = a9;
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DB8);
  v11 = type metadata accessor for ModifiedContent(255, a8, v10);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DC0);
  v13 = type metadata accessor for ModifiedContent(255, v11, v12);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DC8);
  v15 = type metadata accessor for ModifiedContent(255, v13, v14);
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DD0);
  v17 = type metadata accessor for ModifiedContent(255, v15, v16);
  v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DD8);
  v19 = type metadata accessor for ModifiedContent(255, v17, v18);
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DE0);
  v21 = type metadata accessor for ModifiedContent(255, v19, v20);
  v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DE8);
  v34[0] = type metadata accessor for ModifiedContent(255, v21, v22);
  v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DF0);
  v24 = type metadata accessor for ModifiedContent(255, v34[0], v23);
  v61 = *(_QWORD *)(a9 + 16);
  v62 = sub_3D970(&qword_3D1DF8, &qword_3D1DB8);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v60 = sub_3D970(&qword_3D1E00, &qword_3D1DC0);
  v57 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v58 = sub_3D970(&qword_3D1E08, &qword_3D1DC8);
  v55 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  v56 = sub_3D970(&qword_3D1E10, &qword_3D1DD0);
  v53 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v54 = sub_3D970(&qword_3D1E18, &qword_3D1DD8);
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v52 = sub_3D970(&qword_3D1E20, &qword_3D1DE0);
  v49 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  v50 = sub_3D970(&qword_3D1E28, &qword_3D1DE8);
  v47 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34[0]);
  v48 = sub_3D970((unint64_t *)&unk_3D1E30, &qword_3D1DF0);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  v44[0] = v24;
  v44[1] = &type metadata for EmptyView;
  v44[2] = v25;
  v45 = &protocol witness table for EmptyView;
  v26 = type metadata accessor for UIHostingConfiguration(0, v44);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = __chkstk_darwin(v26);
  v30 = (char *)v34 - v29;
  v43[2] = v35;
  v43[3] = a9;
  v43[4] = v36;
  v43[5] = v37;
  v43[6] = v40;
  v43[7] = v38;
  v43[8] = v41;
  v43[9] = v42;
  v43[10] = v39;
  v31 = UIHostingConfiguration<>.init(content:)(sub_3D9B0, v43, v24, v25, v28);
  v32 = static Edge.Set.all.getter(v31);
  v45 = (void *)v26;
  v46 = swift_getWitnessTable(&protocol conformance descriptor for UIHostingConfiguration<A, B>, v26);
  __swift_allocate_boxed_opaque_existential_0(v44);
  UIHostingConfiguration.margins(_:_:)(v32, v26, 0.0);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
  return UICollectionViewCell.contentConfiguration.setter(v44);
}

uint64_t sub_32128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, __n128);
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t WitnessTable;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  uint64_t v126;

  v95 = a7;
  v102 = a6;
  v94 = a5;
  v91 = a4;
  v89 = a3;
  v88 = a2;
  v90 = a1;
  v106 = a9;
  v87 = a10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v11);
  v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = *(_QWORD *)(a8 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DB8);
  v22 = type metadata accessor for ModifiedContent(0, a8, v21);
  v93 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v86 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DC0);
  v26 = type metadata accessor for ModifiedContent(0, v22, v25);
  v97 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v107 = (char *)&v86 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DC8);
  v29 = type metadata accessor for ModifiedContent(255, v26, v28);
  v30 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DD0);
  v96 = v29;
  v31 = type metadata accessor for ModifiedContent(255, v29, v30);
  v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DD8);
  v98 = v31;
  v33 = type metadata accessor for ModifiedContent(255, v31, v32);
  v34 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DE0);
  v99 = v33;
  v35 = type metadata accessor for ModifiedContent(255, v33, v34);
  v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DE8);
  v100 = v35;
  v37 = type metadata accessor for ModifiedContent(255, v35, v36);
  v38 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1DF0);
  v101 = v37;
  v39 = type metadata accessor for ModifiedContent(0, v37, v38);
  v105 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v103 = (uint64_t)&v86 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __chkstk_darwin(v41);
  v104 = (uint64_t)&v86 - v43;
  v44 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
  v45 = v87;
  v44(v17, v88, v14, v42);
  sub_1D5D4(v89, (uint64_t)&v125);
  ShelfSwiftUICell.init(presentation:model:)(v17, &v125, a8, v45);
  KeyPath = swift_getKeyPath(&off_2F1028);
  if (qword_3CFBF8 != -1)
    swift_once(&qword_3CFBF8, sub_222294);
  UICellConfigurationState.subscript.getter(&v125, qword_3DD570);
  if (v126)
  {
    type metadata accessor for CGSize(0);
    if ((swift_dynamicCast(&v108, &v125, &type metadata for AnyHashable, v47, 6) & 1) != 0)
    {
      _Q0 = v108;
      goto LABEL_8;
    }
  }
  else
  {
    sub_D1D4((uint64_t)&v125, &qword_3D1E40);
  }
  __asm { FMOV            V0.2D, #10.0 }
LABEL_8:
  v125 = _Q0;
  v53 = *(_QWORD *)(v45 + 16);
  View.environment<A>(_:_:)(KeyPath, &v125, a8, v53);
  v54 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v92 + 8))(v20, a8, v54);
  v55 = swift_getKeyPath(&unk_2F1050);
  ModernShelf.impressionMetrics.getter();
  v56 = sub_3D970(&qword_3D1DF8, &qword_3D1DB8);
  v123 = v53;
  v124 = v56;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  View.environment<A>(_:_:)(v55, v13, v22, WitnessTable);
  swift_release(v55);
  sub_D1D4((uint64_t)v13, &qword_3D0EE0);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v24, v22);
  v58 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
  v59 = v95;
  v60 = (void *)swift_dynamicCastClass(v95, v58);
  if (v60)
    v61 = v59;
  v62 = v59;
  v63 = v102;
  swift_retain(v102);

  v64 = type metadata accessor for PodcastsUIKitSwiftUIBridge();
  v65 = swift_allocObject(v64, 40, 7);
  swift_unknownObjectWeakInit(v65 + 24, 0);
  swift_unknownObjectWeakInit(v65 + 32, 0);
  *(_QWORD *)(v65 + 16) = v63;
  swift_beginAccess(v65 + 24, &v125, 1, 0);
  swift_unknownObjectWeakAssign(v65 + 24, v62);
  v66 = (void *)swift_dynamicCastClass(v62, v58);
  if (!v66)

  swift_unknownObjectWeakAssign(v65 + 32, v66);
  v67 = sub_3D970(&qword_3D1E00, &qword_3D1DC0);
  v121 = WitnessTable;
  v122 = v67;
  v68 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v26);
  v69 = v103;
  v70 = v107;
  View.withPodcastsBridge(_:)(v65, v26, v68, v103);
  v71 = swift_release(v65);
  (*(void (**)(char *, uint64_t, __n128))(v97 + 8))(v70, v26, v71);
  v72 = sub_3D970(&qword_3D1E08, &qword_3D1DC8);
  v119 = v68;
  v120 = v72;
  v73 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v96);
  v74 = sub_3D970(&qword_3D1E10, &qword_3D1DD0);
  v117 = v73;
  v118 = v74;
  v75 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v98);
  v76 = sub_3D970(&qword_3D1E18, &qword_3D1DD8);
  v115 = v75;
  v116 = v76;
  v77 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v99);
  v78 = sub_3D970(&qword_3D1E20, &qword_3D1DE0);
  v113 = v77;
  v114 = v78;
  v79 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v100);
  v80 = sub_3D970(&qword_3D1E28, &qword_3D1DE8);
  v111 = v79;
  v112 = v80;
  v81 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v101);
  v82 = sub_3D970((unint64_t *)&unk_3D1E30, &qword_3D1DF0);
  v109 = v81;
  v110 = v82;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v39);
  v83 = v104;
  sub_1ECBD0(v69, v39, v104);
  v84 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
  v84(v69, v39);
  sub_1E82A0(v83, v39, v106);
  return ((uint64_t (*)(uint64_t, uint64_t))v84)(v83, v39);
}

double sub_328D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  _QWORD v13[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1D78);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = static ModernShelf.collectionUniqueItemIdFor(section:item:)(a2, a3);
  v11 = v10;
  v13[0] = v9;
  v13[1] = v10;
  static MetricsFieldsContext.Property<A>.clickLocationUniqueID.getter(v9, v10);
  MetricsFieldsContext.addValue<A>(_:forProperty:)(v13, v8, &type metadata for String);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

double sub_3299C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  _QWORD *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = (_QWORD *)Strong;
    swift_beginAccess(Strong + 16, v21, 0, 0);
    v9 = (void (*)(uint64_t, uint64_t))v8[10];
    if (v9)
    {
      v20 = a2;
      v11 = v8[8];
      v10 = v8[9];
      v13 = v8[6];
      v12 = v8[7];
      v14 = v8[4];
      v15 = v8[5];
      v19 = v8[11];
      v18 = a3;
      v16 = v8[2];
      v17 = v8[3];
      sub_2C690(v16, v17);
      sub_2C690(v14, v15);
      sub_2C690(v13, v12);
      sub_2C690(v11, v10);
      sub_2C690((uint64_t)v9, v19);
      v9(v20, v18);
      swift_release(v8);
      sub_1D618(v16, v17);
      sub_1D618(v14, v15);
      sub_1D618(v13, v12);
      sub_1D618(v11, v10);
      sub_1D618((uint64_t)v9, v19);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v8).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_32AEC@<X0>(char a1@<W0>, char *a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  char v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  void *object;
  unint64_t v19;
  _QWORD *v20;
  char v22;
  uint64_t v23;
  unint64_t v24;

  v7 = *a2;
  *a4 = a1;
  a4[1] = 2;
  v8 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
  sub_19C4C(a3, (uint64_t)&a4[*(int *)(v8 + 24)], type metadata accessor for ModernTitleHeaderView.Style);
  v23 = 0;
  v24 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v9._countAndFlagsBits = 0x616548666C656853;
  v9._object = (void *)0xEC0000002E726564;
  String.append(_:)(v9);
  if ((a1 & 1) != 0)
    v10 = 1702195828;
  else
    v10 = 0x65736C6166;
  if ((a1 & 1) != 0)
    v11 = 0xE400000000000000;
  else
    v11 = 0xE500000000000000;
  v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v22 = v7;
  _print_unlocked<A, B>(_:_:)(&v22, &v23, &type metadata for ModernTitleHeaderView.SeparatorOptions, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  v15 = type metadata accessor for UUID(0);
  v16 = sub_89A0(&qword_3D1E58, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v15, v16);
  object = v17._object;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(object);
  v19 = v24;
  v20 = &a4[*(int *)(v8 + 28)];
  *v20 = v23;
  v20[1] = v19;
  sub_3AE88((uint64_t)a4);
  return sub_FA4C(a3, type metadata accessor for ModernTitleHeaderView.Style);
}

int *sub_32C9C()
{
  int *result;

  result = (int *)sub_D4C88((uint64_t)_swiftEmptyArrayStorage);
  off_3D19A0[0] = result;
  return result;
}

uint64_t ShelvesViewProvider.supplementaryView(for:kind:indexPath:section:item:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  int *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjCClassFromMetadata;
  NSString v52;
  NSString v53;
  uint64_t v54;
  uint64_t v55;
  NSString v56;
  NSString v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSString v61;
  NSString v62;
  Class isa;
  id v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  __n128 v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  CGFloat top;
  double v89;
  CGFloat left;
  double v91;
  CGFloat bottom;
  double v93;
  CGFloat right;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  NSString v105;
  NSString v106;
  Class v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char *v112;
  double v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t result;
  uint64_t i;
  char shouldBe;
  id v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  CGFloat *v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  char *v132;
  uint64_t v133;
  NSString v134;
  NSString v135;
  Class v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  NSObject *v140;
  __n128 v141;
  os_log_type_t v142;
  uint8_t *v143;
  uint64_t v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  __n128 v155;
  uint64_t v156;
  char v157;
  char *v158;
  void (*v159)(char *, uint64_t);
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  __n128 v166;
  uint8_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  _BYTE *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD v202[3];
  char v203[8];
  char v204[8];
  __int128 v205;
  __int128 v206;
  uint64_t v207;
  char v208[8];

  v193 = a5;
  v194 = a4;
  v199 = a2;
  v197 = a1;
  v176 = type metadata accessor for ShelfArtworkPosition(0);
  v175 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v174 = (char *)&v167 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for ShelfCellHeight(0);
  v172 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v171 = (uint64_t)&v167 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v186 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v177 = (char *)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v185 = (char *)&v167 - v10;
  v11 = type metadata accessor for AutomationSemantics(0);
  v180 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v179 = (char *)&v167 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v181 = (char *)&v167 - v14;
  __chkstk_darwin(v15);
  v182 = (char *)&v167 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  __chkstk_darwin(v17);
  v178 = (char *)&v167 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ModernTitleHeaderView.Style(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v167 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = type metadata accessor for ModernShelf(0);
  v190 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin(v191);
  v188 = v22;
  v189 = (char *)&v167 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for Logger(0);
  v169 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v24 = (char *)&v167 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v192 = (char *)&v167 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v167 - v29;
  v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A50);
  __chkstk_darwin(v195);
  v32 = (uint64_t *)((char *)&v167 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v33);
  v35 = (uint64_t *)((char *)&v167 - v34);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A58);
  __chkstk_darwin(v36);
  v200 = (uint64_t)&v167 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CF0E0 != -1)
    swift_once(&qword_3CF0E0, sub_32C9C);
  v38 = swift_beginAccess(off_3D19A0, &v205, 32, 0);
  v39 = off_3D19A0[0];
  v40 = *(_QWORD *)((char *)off_3D19A0[0] + (unint64_t)&dword_10);
  v196 = v32;
  v183 = v11;
  v184 = v21;
  if (v40)
  {
    swift_bridgeObjectRetain(a3);
    v41 = sub_36BA4(v199, a3);
    if ((v42 & 1) != 0)
    {
      v43 = *(_QWORD *)&stru_20.segname[(_QWORD)v39 + 16] + *(_QWORD *)(v26 + 72) * v41;
      v44 = v200;
      sub_19C4C(v43, v200, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v44, 0, 1, v25);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v200, 1, 1, v25);
    }
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v26 + 56))(v200, 1, 1, v25, v38);
  }
  swift_endAccess(&v205);
  v45 = (uint64_t *)(v198
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_registeredSupplementaryViewKinds);
  swift_beginAccess(v198 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_registeredSupplementaryViewKinds, v208, 0, 0);
  v46 = *v45;
  swift_bridgeObjectRetain(*v45);
  v47 = v199;
  v48 = sub_30F7C(v199, a3, v46);
  swift_bridgeObjectRelease(v46);
  if ((v48 & 1) == 0)
  {
    v49 = (uint64_t)v35 + *(int *)(v195 + 48);
    *v35 = v47;
    v35[1] = a3;
    sub_D184(v200, v49, &qword_3D1A58);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v49, 1, v25) == 1)
    {
      if (v47 == 0x746E6F4379616C50 && a3 == 0xEC000000736C6F72
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x746E6F4379616C50, 0xEC000000736C6F72, v47, a3, 0) & 1) != 0)
      {
        v50 = type metadata accessor for ShelfPageControl();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v50);
        swift_bridgeObjectRetain(a3);
        v52 = String._bridgeToObjectiveC()();
      }
      else
      {
        if ((v47 != 0x6F74617261706553 || a3 != 0xE900000000000072)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6F74617261706553, 0xE900000000000072, v47, a3, 0) & 1) == 0)
        {
          sub_E710(0, &qword_3D3810, OS_os_log_ptr);
          v138 = swift_bridgeObjectRetain(a3);
          static OS_os_log.shelfSystem.getter(v138);
          v139 = swift_bridgeObjectRetain_n(a3, 2);
          v140 = Logger.logObject.getter(v139);
          v142 = static os_log_type_t.fault.getter(v141);
          if (os_log_type_enabled(v140, v142))
          {
            v143 = (uint8_t *)swift_slowAlloc(12, -1);
            v168 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v205 = v168;
            *(_DWORD *)v143 = 136315138;
            v167 = v143 + 4;
            swift_bridgeObjectRetain(a3);
            v201 = sub_37E78(v199, a3, (uint64_t *)&v205);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, v202);
            swift_bridgeObjectRelease_n(a3, 3);
            _os_log_impl(&dword_0, v140, v142, "Tried to register non existent supplementary kind %s", v143, 0xCu);
            v144 = v168;
            swift_arrayDestroy(v168, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v144, -1, -1);
            swift_slowDealloc(v143, -1, -1);

          }
          else
          {

            v145 = swift_bridgeObjectRelease_n(a3, 2);
          }
          (*(void (**)(char *, uint64_t, __n128))(v169 + 8))(v24, v170, v145);
          sub_D1D4((uint64_t)v35, &qword_3D1A50);
          goto LABEL_18;
        }
        v137 = type metadata accessor for SeparatorSupplementaryView(0);
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v137);
        swift_bridgeObjectRetain(a3);
        v52 = String._bridgeToObjectiveC()();
      }
      v53 = String._bridgeToObjectiveC()();
      objc_msgSend(v197, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", ObjCClassFromMetadata, v52, v53);

      sub_D1D4(v49, &qword_3D1A58);
    }
    else
    {
      sub_3B38C(v49, (uint64_t)v30);
      v54 = type metadata accessor for ModernTitleHeaderView(0);
      v55 = swift_getObjCClassFromMetadata(v54);
      swift_bridgeObjectRetain(a3);
      v56 = String._bridgeToObjectiveC()();
      v57 = String._bridgeToObjectiveC()();
      objc_msgSend(v197, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v55, v56, v57);

      sub_FA4C((uint64_t)v30, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
    }
    swift_bridgeObjectRelease(v35[1]);
LABEL_18:
    swift_beginAccess(v45, &v205, 33, 0);
    swift_bridgeObjectRetain(a3);
    v47 = v199;
    sub_3858C(&v201, v199, a3);
    swift_endAccess(&v205);
    swift_bridgeObjectRelease(v202[0]);
  }
  v58 = (uint64_t)v196;
  v59 = (uint64_t)v196 + *(int *)(v195 + 48);
  *v196 = v47;
  *(_QWORD *)(v58 + 8) = a3;
  sub_D184(v200, v59, &qword_3D1A58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v59, 1, v25) == 1)
  {
    v60 = v193;
    if (v47 == 0x746E6F4379616C50 && a3 == 0xEC000000736C6F72
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x746E6F4379616C50, 0xEC000000736C6F72, v47, a3, 0) & 1) != 0)
    {
      v199 = v59;
      swift_bridgeObjectRetain(a3);
      v61 = String._bridgeToObjectiveC()();
      v62 = String._bridgeToObjectiveC()();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v64 = objc_msgSend(v197, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v61, v62, isa);

      v65 = type metadata accessor for ShelfPageControl();
      v66 = (char *)swift_dynamicCastClassUnconditional(v64, v65, 0, 0, 0);
      v67 = swift_allocObject(&unk_37BD50, 24, 7);
      swift_weakInit(v67 + 16, v198);
      v68 = v190;
      v69 = v189;
      v70 = v191;
      (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v189, v60, v191);
      v71 = *(unsigned __int8 *)(v68 + 80);
      v72 = (v71 + 24) & ~v71;
      v73 = swift_allocObject(&unk_37BDC8, v72 + v188, v71 | 7);
      *(_QWORD *)(v73 + 16) = v67;
      (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v73 + v72, v69, v70);
      v74 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_pageControls;
      v75 = (uint64_t *)(*(_QWORD *)&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_pageControls]
                      + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_scrollHandle);
      v76 = *v75;
      v77 = v75[1];
      *v75 = (uint64_t)sub_3B34C;
      v75[1] = v73;
      sub_1D618(v76, v77);
      v78 = sub_34B3C(v60);
      v79 = *(_QWORD *)&v66[v74];
      v80 = *(_QWORD *)(v79 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections);
      *(_QWORD *)(v79 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections) = v78;
      swift_bridgeObjectRelease(v80);
      sub_E7E68();
      v81 = (uint64_t)v177;
      ModernShelf.itemPresentation.getter(v82);
      if (ModernShelf.ItemPresentation.horizontalRows.getter(v83) == 1)
      {
        v84 = objc_msgSend(v197, "traitCollection");
        v207 = 0;
        v205 = 0u;
        v206 = 0u;
        v85 = v171;
        sub_34EC0(v81, (uint64_t)v84, (uint64_t)&v205, v171);

        v86 = sub_D1D4((uint64_t)&v205, &qword_3D1A10);
        sub_EE31C(v86);
        v87 = v174;
        dispatch thunk of static ShelfCell.artworkPosition.getter();
        top = ShelfCellHeight.artworkInsets(position:)(v87);
        left = v89;
        bottom = v91;
        right = v93;
        (*(void (**)(char *, uint64_t))(v175 + 8))(v87, v176);
        (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v85, v173);
      }
      else
      {
        top = UIEdgeInsetsZero.top;
        left = UIEdgeInsetsZero.left;
        bottom = UIEdgeInsetsZero.bottom;
        right = UIEdgeInsetsZero.right;
      }
      v123 = v187;
      v124 = v186;
      v125 = v185;
      v126 = v199;
      v127 = (CGFloat *)&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_verticalButtonInsets];
      *v127 = top;
      v127[1] = left;
      v127[2] = bottom;
      v127[3] = right;
      sub_F2A70();
      v129 = ModernShelf.itemPresentation.getter(v128);
      v130 = ModernShelf.ItemPresentation.background.getter(v129);
      v131 = *(void (**)(char *, uint64_t))(v124 + 8);
      v131(v125, v123);
      v132 = &v66[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_shelfBackground];
      v132[4] = BYTE4(v130);
      *(_DWORD *)v132 = v130;
      v132[5] = BYTE5(v130) & 1;
      sub_F28A8();
      v131((char *)v81, v123);
      sub_D1D4(v200, &qword_3D1A58);
      v133 = v126;
    }
    else
    {
      if ((v47 != 0x6F74617261706553 || a3 != 0xE900000000000072)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6F74617261706553, 0xE900000000000072, v47, a3, 0) & 1) == 0)
      {
        swift_bridgeObjectRetain(a3);
        sub_D1D4(v200, &qword_3D1A58);
        sub_D1D4(v58, &qword_3D1A50);
        return 0;
      }
      swift_bridgeObjectRetain(a3);
      v134 = String._bridgeToObjectiveC()();
      v135 = String._bridgeToObjectiveC()();
      v136 = IndexPath._bridgeToObjectiveC()().super.isa;
      v66 = (char *)objc_msgSend(v197, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v134, v135, v136);

      sub_D1D4(v200, &qword_3D1A58);
      v133 = v59;
    }
LABEL_58:
    sub_D1D4(v133, &qword_3D1A58);
    swift_bridgeObjectRelease(*(_QWORD *)(v58 + 8));
    return (uint64_t)v66;
  }
  v95 = v192;
  sub_3B38C(v59, (uint64_t)v192);
  v96 = *(_QWORD *)(v198 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph);
  v97 = v190;
  v98 = v189;
  v99 = v191;
  (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v189, v193, v191);
  v100 = *(unsigned __int8 *)(v97 + 80);
  v101 = (v100 + 16) & ~v100;
  v102 = swift_allocObject(&unk_37BDF0, v101 + v188, v100 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v97 + 32))(v102 + v101, v98, v99);
  swift_bridgeObjectRetain(a3);
  v103 = swift_retain(v96);
  v104 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_3B430, v102, v103);
  swift_release(v102);
  swift_release(v96);
  v105 = String._bridgeToObjectiveC()();
  v106 = String._bridgeToObjectiveC()();
  v107 = IndexPath._bridgeToObjectiveC()().super.isa;
  v108 = objc_msgSend(v197, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v105, v106, v107);

  v109 = type metadata accessor for ModernTitleHeaderView(0);
  v66 = (char *)swift_dynamicCastClassUnconditional(v108, v109, 0, 0, 0);
  v110 = (uint64_t)v184;
  sub_19C4C((uint64_t)&v95[*(int *)(v25 + 24)], (uint64_t)v184, type metadata accessor for ModernTitleHeaderView.Style);
  ModernTitleHeaderView.style.setter(v110);
  v111 = v95[1];
  v112 = &v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions];
  *(_QWORD *)&v113 = swift_beginAccess(&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separatorOptions], v204, 1, 0).n128_u64[0];
  *v112 = v111;
  objc_msgSend(*(id *)&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_separator], "setHidden:", v111 == 2, v113);
  objc_msgSend(v66, "setNeedsLayout");
  LOBYTE(v112) = *v95;
  v58 = (uint64_t)v196;
  v114 = &v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton];
  swift_beginAccess(&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_forceHideButton], v203, 1, 0);
  *v114 = (char)v112;
  v116 = *(_QWORD *)&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons];
  if (!v116)
  {
LABEL_57:
    v147 = (uint64_t)v178;
    ModernShelf.header.getter(v115);
    ModernTitleHeaderView.apply(header:objectGraph:)(v147, v104);
    v148 = sub_D1D4(v147, &qword_3D19E8);
    v149 = IndexPath.section.getter(v148);
    *((_QWORD *)&v206 + 1) = &type metadata for Int;
    *(_QWORD *)&v205 = v149;
    v151 = ModernShelf.id.getter(v150);
    v202[2] = &type metadata for String;
    v201 = v151;
    v202[0] = v152;
    v153 = v179;
    static AutomationSemantics.shelf(_:id:parentId:)(0x726564616568, 0xE600000000000000, &v205, &v201);
    sub_D1D4((uint64_t)&v201, &qword_3D1A70);
    sub_D1D4((uint64_t)&v205, &qword_3D1A70);
    v154 = v185;
    v156 = ModernShelf.itemPresentation.getter(v155);
    v157 = ModernShelf.ItemPresentation.itemKind.getter(v156);
    (*(void (**)(char *, uint64_t))(v186 + 8))(v154, v187);
    *((_QWORD *)&v206 + 1) = &type metadata for ModernShelf.ItemKind;
    LOBYTE(v205) = v157;
    v158 = v181;
    AutomationSemantics.attribute(key:value:)(0x646E694B6D657469, 0xE800000000000000, &v205);
    v159 = *(void (**)(char *, uint64_t))(v180 + 8);
    v160 = v153;
    v161 = v183;
    v159(v160, v183);
    v162 = sub_D1D4((uint64_t)&v205, &qword_3D1A70);
    v163 = ModernShelf.items.getter(v162);
    v164 = *(_QWORD *)(v163 + 16);
    swift_bridgeObjectRelease(v163);
    *((_QWORD *)&v206 + 1) = &type metadata for Int;
    *(_QWORD *)&v205 = v164;
    v165 = v182;
    AutomationSemantics.attribute(key:value:)(0x6E756F436D657469, 0xE900000000000074, &v205);
    v159(v158, v161);
    sub_D1D4((uint64_t)&v205, &qword_3D1A70);
    UIView.setAutomationSemantics(_:)(v165);
    v166 = swift_release(v104);
    ((void (*)(char *, uint64_t, __n128))v159)(v165, v161, v166);
    sub_FA4C((uint64_t)v192, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
    v133 = v200;
    goto LABEL_58;
  }
  if (!((unint64_t)v116 >> 62))
  {
    v117 = *(_QWORD *)((char *)&dword_10 + (v116 & 0xFFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain_n(*(_QWORD *)&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons], 2);
    if (v117)
      goto LABEL_28;
LABEL_56:
    swift_bridgeObjectRelease_n(v116, 2);
    goto LABEL_57;
  }
  if (v116 >= 0)
    v146 = v116 & 0xFFFFFFFFFFFFFF8;
  else
    v146 = *(_QWORD *)&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons];
  swift_bridgeObjectRetain_n(*(_QWORD *)&v66[OBJC_IVAR____TtC23ShelfKitCollectionViews21ModernTitleHeaderView_buttons], 2);
  result = _CocoaArrayWrapper.endIndex.getter(v146);
  v117 = result;
  if (!result)
    goto LABEL_56;
LABEL_28:
  if (v117 >= 1)
  {
    for (i = 0; i != v117; ++i)
    {
      if ((v116 & 0xC000000000000001) != 0)
        v121 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v116);
      else
        v121 = *(id *)(v116 + 8 * i + 32);
      v122 = v121;
      if ((*v114 & 1) != 0)
        shouldBe = 1;
      else
        shouldBe = UIButton.pui_shouldBeHidden.getter();
      objc_msgSend(v122, "setHidden:", shouldBe & 1);

    }
    goto LABEL_56;
  }
  __break(1u);
  return result;
}

double sub_34128()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1D78);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = ModernShelf.id.getter(v2);
  v8 = v5;
  static MetricsFieldsContext.Property<A>.clickLocationUniqueID.getter(v7, v5);
  MetricsFieldsContext.addValue<A>(_:forProperty:)(&v7, v4, &type metadata for String);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

double sub_341DC(char a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  _BYTE v9[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    sub_3424C(a3, a1 & 1);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

void sub_3424C(void *a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  double v29;
  unint64_t v30;
  char v31;
  __n128 v32;
  void (*v33)(id);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  void *v49;
  _QWORD *v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  id v54;
  char *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(__int128 *__return_ptr, char *);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  __n128 v97;
  void (*v98)(char *, uint64_t, __n128);
  __n128 v99;
  char *v100;
  Class isa;
  id v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  int v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  char v122[24];
  id v123[5];
  _OWORD v124[2];
  uint64_t v125;
  _OWORD v126[2];
  uint64_t v127;

  v3 = v2;
  v109 = a2;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v9);
  v110 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v116 = (char *)&v103 - v12;
  v13 = type metadata accessor for IndexPath(0);
  v117 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v108 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v103 - v16;
  __chkstk_darwin(v18);
  v111 = (char *)&v103 - v19;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v103 - v22;
  v115 = a1;
  v24 = ModernShelf.id.getter(v21);
  v26 = v25;
  v27 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_pageControlOffsets);
  swift_beginAccess((char *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_pageControlOffsets, v126, 32, 0);
  v28 = *v27;
  v29 = 0.0;
  if (*(_QWORD *)(v28 + 16))
  {
    v30 = sub_36BA4(v24, v26);
    if ((v31 & 1) != 0)
      v29 = *(double *)(*(_QWORD *)(v28 + 56) + 8 * v30);
  }
  swift_bridgeObjectRelease(v26);
  swift_endAccess(v126);
  v32 = swift_beginAccess(v3 + 2, v122, 0, 0);
  v33 = (void (*)(id))v3[6];
  if (!v33)
  {
    v43 = v116;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v117 + 56))(v116, 1, 1, v13, v32);
    goto LABEL_11;
  }
  v106 = v17;
  v107 = v23;
  v105 = v8;
  v103 = v6;
  v104 = v5;
  v113 = v3[11];
  v34 = v113;
  v114 = v13;
  v36 = v3[9];
  v35 = v3[10];
  v37 = v3[7];
  v38 = v3[8];
  v39 = v3;
  v40 = v3[5];
  v41 = v39[4];
  v112 = v39[3];
  v42 = v39[2];
  sub_2C690(v42, v112);
  sub_2C690(v41, v40);
  sub_2C690((uint64_t)v33, v37);
  sub_2C690(v38, v36);
  sub_2C690(v35, v34);
  v43 = v116;
  v33(v115);
  sub_1D618(v42, v112);
  sub_1D618(v41, v40);
  sub_1D618((uint64_t)v33, v37);
  sub_1D618(v38, v36);
  v44 = v114;
  sub_1D618(v35, v113);
  v45 = v117;
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48);
  if (v46(v43, 1, v44) == 1)
  {
LABEL_11:
    v56 = (uint64_t)v43;
    goto LABEL_12;
  }
  v47 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  v48 = v107;
  v47(v107, v43, v44);
  v49 = *(void **)((char *)v39 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_collectionView);
  if (!v49)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v44);
    return;
  }
  v50 = v39;
  v51 = v47;
  v52 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v53 = (uint64_t)v111;
  v52(v111, v48, v44);
  v54 = v49;
  sub_3D618(v54, v53, (uint64_t)v123, v29);
  sub_D210((uint64_t)v123, (uint64_t)v124, &qword_3D1D98);
  if (!*(_QWORD *)&v124[0])
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v44);

    return;
  }
  v116 = (char *)v52;
  v126[0] = v124[0];
  v126[1] = v124[1];
  v127 = v125;
  v55 = v110;
  sub_35618(v109 & 1, v110);
  if (v46(v55, 1, v44) == 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v44);

    sub_3D798(v123);
    v56 = (uint64_t)v55;
LABEL_12:
    sub_D1D4(v56, (uint64_t *)&unk_3D1A00);
    return;
  }
  v115 = v54;
  v57 = v106;
  v51(v106, v55, v44);
  v58 = (void (*)(__int128 *__return_ptr, char *))v50[8];
  if (!v58)
  {
    v121 = 0;
    v120 = 0u;
    v119 = 0u;
    v70 = v105;
    v71 = v116;
    goto LABEL_20;
  }
  v60 = v50[10];
  v59 = v50[11];
  v61 = v50[9];
  v63 = v50[6];
  v62 = v50[7];
  v65 = v50[4];
  v64 = v50[5];
  v68 = v50 + 2;
  v66 = v50[2];
  v67 = v68[1];
  sub_2C690(v66, v67);
  sub_2C690(v65, v64);
  sub_2C690(v63, v62);
  sub_2C690((uint64_t)v58, v61);
  sub_2C690(v60, v59);
  v58(&v119, v106);
  v69 = v67;
  v57 = v106;
  sub_1D618(v66, v69);
  sub_1D618(v65, v64);
  sub_1D618(v63, v62);
  sub_1D618((uint64_t)v58, v61);
  sub_1D618(v60, v59);
  v70 = v105;
  v71 = v116;
  if (!*((_QWORD *)&v120 + 1))
  {
LABEL_20:
    sub_D1D4((uint64_t)&v119, &qword_3D1A10);
    goto LABEL_21;
  }
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
  v74 = type metadata accessor for LibraryEpisodeLockup(0, v73);
  v75 = swift_dynamicCast(&v118, &v119, v72, v74, 6);
  if ((v75 & 1) == 0)
  {
LABEL_21:
    v80 = v108;
    v77 = 0;
    v79 = 0;
    goto LABEL_22;
  }
  v76 = v118;
  v77 = LegacyLockup.title.getter(v75);
  v79 = v78;
  swift_release(v76);
  v80 = v108;
LABEL_22:
  sub_E710(0, &qword_3D3810, OS_os_log_ptr);
  static OS_os_log.shelfSystem.getter();
  v81 = v57;
  v82 = v114;
  ((void (*)(char *, char *, uint64_t))v71)(v80, v81, v114);
  swift_bridgeObjectRetain(v79);
  v84 = Logger.logObject.getter(v83);
  v85 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v84, v85))
  {
    v86 = swift_slowAlloc(22, -1);
    v87 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v119 = v87;
    *(_DWORD *)v86 = 136315394;
    v88 = swift_bridgeObjectRetain(v79);
    v89 = Optional<A>.description.getter(v77, v79, v88);
    v91 = v90;
    swift_bridgeObjectRelease(v79);
    v118 = sub_37E78(v89, v91, (uint64_t *)&v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
    swift_bridgeObjectRelease_n(v79, 2);
    swift_bridgeObjectRelease(v91);
    *(_WORD *)(v86 + 12) = 2080;
    v92 = sub_89A0(&qword_3D1DB0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v93 = v108;
    v94 = dispatch thunk of CustomStringConvertible.description.getter(v82, v92);
    v96 = v95;
    v118 = sub_37E78(v94, v95, (uint64_t *)&v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
    v97 = swift_bridgeObjectRelease(v96);
    v98 = *(void (**)(char *, uint64_t, __n128))(v117 + 8);
    v98(v93, v82, v97);
    _os_log_impl(&dword_0, v84, v85, "PageControls: scrolling to \"%s\" at IndexPath %s", (uint8_t *)v86, 0x16u);
    swift_arrayDestroy(v87, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v87, -1, -1);
    swift_slowDealloc(v86, -1, -1);

    (*(void (**)(char *, uint64_t))(v103 + 8))(v105, v104);
  }
  else
  {
    v99 = swift_bridgeObjectRelease_n(v79, 2);
    v98 = *(void (**)(char *, uint64_t, __n128))(v117 + 8);
    v98(v80, v82, v99);

    (*(void (**)(char *, uint64_t))(v103 + 8))(v70, v104);
  }
  v100 = v106;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v102 = v115;
  objc_msgSend(v115, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 8, 1);
  sub_3D798(v123);

  ((void (*)(char *, uint64_t))v98)(v100, v82);
  ((void (*)(char *, uint64_t))v98)(v107, v82);
}

void *sub_34B3C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  unint64_t v22;
  char v23;
  __n128 v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char v52[24];
  id v53[5];
  _OWORD v54[2];
  uint64_t v55;
  _OWORD v56[2];
  uint64_t v57;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v45 - v13;
  v15 = ModernShelf.id.getter(v12);
  v17 = v16;
  v18 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_pageControlOffsets);
  swift_beginAccess(v18, v56, 32, 0);
  v19 = *v18;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = 0.0;
  v50 = a1;
  if (v20)
  {
    v22 = sub_36BA4(v15, v17);
    if ((v23 & 1) != 0)
      v21 = *(double *)(*(_QWORD *)(v19 + 56) + 8 * v22);
  }
  swift_bridgeObjectRelease(v17);
  swift_endAccess(v56);
  v24 = swift_beginAccess(v2 + 2, v52, 0, 0);
  v25 = (void (*)(uint64_t))v2[6];
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v6, 1, 1, v7, v24);
    goto LABEL_10;
  }
  v45 = v10;
  v46 = v14;
  v26 = v7;
  v27 = v2[10];
  v28 = v2[11];
  v48 = v8;
  v30 = v2[8];
  v29 = v2[9];
  v49 = v26;
  v31 = v2[7];
  v51 = v6;
  v32 = v2[4];
  v33 = v2[5];
  v34 = v2[2];
  v47 = v2[3];
  sub_2C690(v34, v47);
  sub_2C690(v32, v33);
  sub_2C690((uint64_t)v25, v31);
  sub_2C690(v30, v29);
  sub_2C690(v27, v28);
  v25(v50);
  sub_1D618(v34, v47);
  v35 = v32;
  v6 = v51;
  sub_1D618(v35, v33);
  sub_1D618((uint64_t)v25, v31);
  v36 = v30;
  v37 = v49;
  v38 = v48;
  sub_1D618(v36, v29);
  sub_1D618(v27, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v6, 1, v37) == 1)
  {
LABEL_10:
    sub_D1D4((uint64_t)v6, (uint64_t *)&unk_3D1A00);
    return &_swiftEmptySetSingleton;
  }
  v39 = v46;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v46, v6, v37);
  v40 = *(void **)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_collectionView);
  if (!v40)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
    return &_swiftEmptySetSingleton;
  }
  v41 = (uint64_t)v45;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v45, v39, v37);
  v42 = v40;
  sub_3D618(v42, v41, (uint64_t)v53, v21);
  sub_D210((uint64_t)v53, (uint64_t)v54, &qword_3D1D98);
  if (!*(_QWORD *)&v54[0])
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);

    return &_swiftEmptySetSingleton;
  }
  v56[0] = v54[0];
  v56[1] = v54[1];
  v57 = v55;
  v43 = sub_35930();
  sub_3D798(v53);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
  return v43;
}

uint64_t sub_34EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v39[5];

  v5 = v4;
  v36 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1D80);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  __chkstk_darwin(v12);
  v35 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ShelfCellHeight(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_EE31C(v18);
  v20 = v19;
  v21 = swift_conformsToProtocol2(v19, &protocol descriptor for ShelfCellVerticalGridSingleItemCustomization);
  if (v21)
    v22 = v21;
  else
    v22 = 0;
  if (!v21)
    v20 = 0;
  if (v20)
  {
    sub_D184(a3, (uint64_t)&v37, &qword_3D1A10);
    if (v38)
    {
      sub_1B738(&v37, (uint64_t)v39);
      dispatch thunk of static ShelfCellVerticalGridSingleItemCustomization.heightFor(presentation:traitCollection:referenceItem:)(a1, a2, v39, v20, v22);
      return __swift_destroy_boxed_opaque_existential_0(v39);
    }
    sub_D1D4((uint64_t)&v37, &qword_3D1A10);
  }
  if ((objc_msgSend(*(id *)(v5+ OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_heightCacheTraitCollection), "containsTraitsInCollection:", a2) & 1) == 0)
  {
    v24 = (uint64_t *)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_heightCache);
    swift_beginAccess(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_heightCache, v39, 1, 0);
    v25 = *v24;
    *v24 = (uint64_t)&_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(v25);
  }
  v26 = (uint64_t *)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_heightCache);
  swift_beginAccess(v26, &v37, 32, 0);
  v27 = *v26;
  if (*(_QWORD *)(*v26 + 16) && (v28 = sub_36E94(a1), (v29 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v17, *(_QWORD *)(v27 + 56) + *(_QWORD *)(v15 + 72) * v28, v14);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v36, v17, v14);
  }
  else
  {
    v30 = swift_endAccess(&v37);
    sub_EE31C(v30);
    v31 = v36;
    dispatch thunk of static ShelfCVCell.heightFor(presentation:traitCollection:)(a1, a2);
    v32 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v35, a1, v34);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, v31, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    swift_beginAccess(v26, &v37, 33, 0);
    sub_B1300((uint64_t)v11, v32);
  }
  return swift_endAccess(&v37);
}

void sub_351A4(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  id v15;
  double Width;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  double v31;
  id v32;
  void *v33;
  double v34;
  double MaxX;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  unint64_t v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v46 = (char *)&v46 - v11;
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v47 = (char *)&v46 - v14;
  v15 = *(id *)v1;
  objc_msgSend(*(id *)v1, "bounds", v13);
  Width = CGRectGetWidth(v50);
  v17 = SizeClass.init(width:)(Width);
  v18 = SizeClass.gutters.getter(v17);
  v19 = *(double *)(v1 + 16);
  v20 = *(double *)(v1 + 24);
  v21 = *(double *)(v1 + 32);
  v22 = v18 + v20;
  if ((a1 & 1) == 0)
    v22 = -(v18 + v20);
  v23 = *(double *)(v1 + 8) + v22;
  v24 = objc_msgSend(v15, "collectionViewLayout");
  v25 = objc_msgSend(v24, "layoutAttributesForElementsInRect:", v23, v19, v20, v21);

  if (!v25)
    return;
  v26 = sub_E710(0, &qword_3D1DA8, UICollectionViewLayoutAttributes_ptr);
  v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

  if ((unint64_t)v27 >> 62)
  {
    if (v27 < 0)
      v45 = v27;
    else
      v45 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    v28 = _CocoaArrayWrapper.endIndex.getter(v45);
    if (v28)
      goto LABEL_6;
LABEL_30:
    swift_bridgeObjectRelease_n(v27, 2);
    return;
  }
  v28 = *(_QWORD *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v27);
  if (!v28)
    goto LABEL_30;
LABEL_6:
  if (v28 >= 1)
  {
    v29 = 0;
    v49 = v27 & 0xC000000000000001;
    v30 = _swiftEmptyArrayStorage;
    v31 = v18 * 0.5;
    v48 = v9;
    while (1)
    {
      if (v49)
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
      else
        v32 = *(id *)(v27 + 8 * v29 + 32);
      v33 = v32;
      if (objc_msgSend(v32, "representedElementCategory")
        || (objc_msgSend(v33, "frame"), v23 > v31 + v34)
        || (objc_msgSend(v33, "frame"),
            MaxX = CGRectGetMaxX(v51),
            v52.origin.x = v23,
            v52.origin.y = v19,
            v52.size.width = v20,
            v52.size.height = v21,
            MaxX > v31 + CGRectGetMaxX(v52)))
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
        {
          v36 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
LABEL_18:
          v37 = v47;
          v36(v47, v5, v6);
          v36(v9, v37, v6);
          if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
            v30 = (_QWORD *)sub_20F038(0, v30[2] + 1, 1, (unint64_t)v30);
          v39 = v30[2];
          v38 = v30[3];
          if (v39 >= v38 >> 1)
            v30 = (_QWORD *)sub_20F038(v38 > 1, v39 + 1, 1, (unint64_t)v30);
          v30[2] = v39 + 1;
          v40 = (unint64_t)v30
              + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
              + *(_QWORD *)(v7 + 72) * v39;
          v9 = v48;
          v36((char *)v40, v48, v6);
          goto LABEL_9;
        }
      }
      else
      {
        v41 = objc_msgSend(v33, "indexPath");
        v42 = v27;
        v43 = v46;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v41);

        v36 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v44 = v43;
        v27 = v42;
        v9 = v48;
        v36(v5, v44, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
          goto LABEL_18;
      }
      sub_D1D4((uint64_t)v5, (uint64_t *)&unk_3D1A00);
LABEL_9:
      if (v28 == ++v29)
        goto LABEL_30;
    }
  }
  __break(1u);
}

void sub_35618(char a1@<W0>, char *a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  __n128 v30;
  char *v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;

  v3 = a1 & 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - v8;
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v39 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - v14;
  sub_351A4(v3);
  v17 = v16;
  v46 = *(_QWORD *)(v16 + 16);
  if (!v46)
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v20(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v45 = v15;
  v18 = v16 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v19(v9, v18, v10);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v20(v9, 0, 1, v10);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v21(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_D1D4((uint64_t)v9, (uint64_t *)&unk_3D1A00);
    v24 = a2;
    v25 = 1;
LABEL_8:
    v20(v24, v25, 1, v10);
    swift_bridgeObjectRelease(v17);
    return;
  }
  v38 = a2;
  v44 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v44(v45, v9, v10);
  v22 = v39;
  if (v46 == 1)
  {
LABEL_4:
    v20(v6, 1, 1, v10);
LABEL_5:
    sub_D1D4((uint64_t)v6, (uint64_t *)&unk_3D1A00);
    v23 = v38;
    v44(v38, v45, v10);
    v24 = v23;
    v25 = 0;
    goto LABEL_8;
  }
  v26 = 1;
  v42 = v6;
  v43 = v19;
  v40 = v21;
  v41 = v18;
  while (v26 < *(_QWORD *)(v17 + 16))
  {
    v19(v6, v18 + *(_QWORD *)(v11 + 72) * v26, v10);
    v20(v6, 0, 1, v10);
    if (v21(v6, 1, v10) == 1)
      goto LABEL_5;
    v27 = v20;
    v28 = v17;
    v29 = v44;
    v30.n128_f64[0] = ((double (*)(char *, char *, uint64_t))v44)(v22, v6, v10);
    v31 = v22;
    v32 = IndexPath.row.getter(v30);
    v33 = v45;
    v35 = IndexPath.row.getter(v34);
    v36 = *(void (**)(char *, uint64_t))(v11 + 8);
    if (v32 >= v35)
    {
      v36(v31, v10);
    }
    else
    {
      v36(v33, v10);
      v29(v33, v31, v10);
    }
    v22 = v31;
    ++v26;
    v17 = v28;
    v20 = v27;
    v19 = v43;
    v18 = v41;
    v6 = v42;
    v21 = v40;
    if (v46 == v26)
      goto LABEL_4;
  }
  __break(1u);
}

void *sub_35930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;
  void *v7;

  v7 = &_swiftEmptySetSingleton;
  sub_351A4(0);
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease(v0);
  if (v1)
    sub_38454(&v5, 0);
  sub_351A4(1);
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease(v2);
  if (v3)
    sub_38454(&v6, 1);
  return v7;
}

uint64_t *ShelvesViewProvider.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[4];
  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[7];
  v5 = v0[8];
  v6 = v0[9];
  v7 = v0[10];
  v8 = v0[11];
  sub_1D618(v0[2], v0[3]);
  sub_1D618(v1, v2);
  sub_1D618(v3, v4);
  sub_1D618(v5, v6);
  sub_1D618(v7, v8);
  sub_D1D4((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_cachedShelfAttributes, &qword_3D19C0);
  swift_release(*(uint64_t *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph));

  __swift_destroy_boxed_opaque_existential_0((uint64_t *)((char *)v0
                                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_episodeController));
  sub_D1D4((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_deletableExtension, &qword_3D2E80);
  swift_release(*(uint64_t *)((char *)v0
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_multiSelectableExtension));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_registeredCellReuseIdentifiers));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_registeredSupplementaryViewKinds));
  sub_D1D4((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_visiblePageControls, (uint64_t *)&unk_3D1A00);
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_pageControlOffsets));
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_heightCacheTraitCollection));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0
                                       + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_heightCache));
  return v0;
}

uint64_t ShelvesViewProvider.__deallocating_deinit()
{
  uint64_t v0;

  ShelvesViewProvider.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_35B30(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, unsigned int a6, double a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  BOOL *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  void (*v30)(char *, _QWORD, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  BOOL v33;
  unint64_t v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v50 = a2;
  v51 = a6;
  v47 = a3;
  v48 = a4;
  v54 = a1;
  v9 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (BOOL *)&v47 - v15;
  v17 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for UICollectionLayoutListConfiguration(0, v19);
  v52 = *(_QWORD *)(v22 - 8);
  v53 = v22;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v18 + 104))(v21, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v17, v23);
  UICollectionLayoutListConfiguration.init(appearance:)(v21);
  UICollectionLayoutListConfiguration.headerTopPadding.setter(0, 0);
  v26 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v27 = swift_allocBox(v26);
  v29.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v28, a5, v26);
  ShelfCellListSeparatorMode.placement.getter(v29);
  v30 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
  v30(v12, enum case for ShelfCellListSeparatorMode.Placement.default(_:), v9);
  LOBYTE(v26) = static ShelfCellListSeparatorMode.Placement.== infix(_:_:)(v16, v12);
  v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31(v12, v9);
  v32 = ((uint64_t (*)(BOOL *, uint64_t))v31)(v16, v9);
  if ((v26 & 1) != 0)
  {
    v33 = v48 == 2;
    *v16 = (v47 & 0xFD) != 1;
    v16[1] = v33;
    v30((char *)v16, enum case for ShelfCellListSeparatorMode.Placement.custom(_:), v9);
    v32 = ShelfCellListSeparatorMode.placement.setter(v16);
  }
  v34 = ModernShelf.ItemPresentation.background.getter(v32);
  if ((v34 & 0x10000000000) != 0
    || (v35 = (id)ModernShelf.Background.color.getter(v34 | ((HIDWORD(v34) & 1) << 32))) == 0)
  {
    v35 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  v36.n128_f64[0] = UICollectionLayoutListConfiguration.backgroundColor.setter(v35);
  ShelfCellListSeparatorMode.placement.getter(v36);
  v30(v12, enum case for ShelfCellListSeparatorMode.Placement.never(_:), v9);
  v37 = sub_89A0((unint64_t *)&unk_3D1E70, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfCellListSeparatorMode.Placement, (uint64_t)&protocol conformance descriptor for ShelfCellListSeparatorMode.Placement);
  v38 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v12, v9, v37);
  v31(v12, v9);
  v31((char *)v16, v9);
  UICollectionLayoutListConfiguration.showsSeparators.setter((v38 & 1) == 0);
  v39 = swift_allocObject(&unk_37BF00, 40, 7);
  v40 = v54;
  *(_QWORD *)(v39 + 16) = v27;
  *(_QWORD *)(v39 + 24) = v40;
  *(double *)(v39 + 32) = a7;
  swift_retain(v27);
  v41 = swift_unknownObjectRetain(v40);
  UICollectionLayoutListConfiguration.itemSeparatorHandler.setter(sub_3DCFC, v39, v41);
  if ((ModernShelf.ItemKind.isEpisodeKind.getter(v51) & 1) != 0)
  {
    v42 = swift_allocObject(&unk_37BD50, 24, 7);
    v43 = v49;
    swift_weakInit(v42 + 16, v49);
    UICollectionLayoutListConfiguration.leadingSwipeActionsConfigurationProvider.setter(sub_3DD08, v42);
    v44 = swift_allocObject(&unk_37BD50, 24, 7);
    swift_weakInit(v44 + 16, v43);
    UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(sub_3DD24, v44);
  }
  sub_E710(0, &qword_3D9F20, NSCollectionLayoutSection_ptr);
  v45 = static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v25, v40);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v53);
  swift_release(v27);
  return v45;
}

uint64_t sub_35F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  __n128 v39;
  uint64_t v40;
  char v41;
  void (*v42)(_QWORD);
  unsigned int v43;
  unsigned int v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  __n128 v48;
  char *v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int v57;
  __n128 v58;
  __n128 v59;
  __n128 v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  char *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE v78[24];

  v69 = a4;
  v76 = a2;
  v77 = a5;
  v67 = a1;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19F0);
  __chkstk_darwin(v72);
  v73 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v70 = *(_QWORD *)(v9 - 8);
  v71 = v9;
  v10 = __chkstk_darwin(v9);
  v68 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIListSeparatorConfiguration.Visibility(0, v10);
  v74 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v66 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v65 - v15;
  v17 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v65 - v23;
  v25 = type metadata accessor for UIListSeparatorConfiguration(0, v22);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShelfCellListSeparatorMode(0);
  v29 = swift_projectBox(a3);
  v75 = v26;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v31 = v24;
  v32 = v76;
  v76 = v25;
  v30(v28, v32, v25);
  v33 = swift_beginAccess(v29, v78, 32, 0);
  ShelfCellListSeparatorMode.placement.getter(v33);
  swift_endAccess(v78);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for ShelfCellListSeparatorMode.Placement.never(_:), v17);
  v34 = sub_89A0((unint64_t *)&unk_3D1E70, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfCellListSeparatorMode.Placement, (uint64_t)&protocol conformance descriptor for ShelfCellListSeparatorMode.Placement);
  LOBYTE(v25) = dispatch thunk of static Equatable.== infix(_:_:)(v24, v20, v17, v34);
  v35 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
  v36 = v35(v20, v17);
  if ((v25 & 1) == 0)
  {
    v65 = v35;
    v40 = v12;
    v41 = ShelfCellListSeparatorMode.Placement.bottomVisible.getter(v36);
    v42 = *(void (**)(_QWORD))(v74 + 104);
    if ((v41 & 1) != 0)
    {
      v43 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
      ((void (*)(char *, _QWORD, uint64_t))v42)(v16, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v40);
      UIListSeparatorConfiguration.topSeparatorVisibility.setter(v16);
      v44 = enum case for UIListSeparatorConfiguration.Visibility.visible(_:);
    }
    else
    {
      v44 = enum case for UIListSeparatorConfiguration.Visibility.visible(_:);
      ((void (*)(char *, _QWORD, uint64_t))v42)(v16, enum case for UIListSeparatorConfiguration.Visibility.visible(_:), v12);
      UIListSeparatorConfiguration.topSeparatorVisibility.setter(v16);
      v43 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
    }
    v42(v16);
    v45.n128_f64[0] = UIListSeparatorConfiguration.bottomSeparatorVisibility.setter(v16);
    if (!IndexPath.row.getter(v45))
    {
      if ((ShelfCellListSeparatorMode.Placement.topVisible.getter() & 1) != 0)
        v46 = v44;
      else
        v46 = v43;
      v47 = v66;
      ((void (*)(char *, uint64_t, uint64_t))v42)(v66, v46, v40);
      UIListSeparatorConfiguration.topSeparatorVisibility.setter(v47);
    }
    v48 = swift_beginAccess(v29, v78, 32, 0);
    v49 = v68;
    ShelfCellListSeparatorMode.layout.getter(v48);
    swift_endAccess(v78);
    v50 = objc_msgSend(v69, "traitCollection");
    v51 = (char *)objc_msgSend(v50, "horizontalSizeClass");

    v52 = (uint64_t)v73;
    v53 = *(int *)(v72 + 48);
    v54 = v70;
    v55 = v49;
    v56 = v71;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v73, v55, v71);
    *(_QWORD *)(v52 + v53) = v51;
    v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 88))(v52, v56);
    if (v57 == enum case for ShelfCellListSeparatorMode.Layout.default(_:))
    {
      v35 = v65;
      if (v51 == (_BYTE *)&dword_0 + 1)
      {
        v58.n128_u64[0] = 0;
        v60.n128_u64[0] = 0;
        v61.n128_u64[0] = 0;
        v59.n128_f64[0] = a6;
LABEL_16:
        v62 = UIListSeparatorConfiguration.bottomSeparatorInsets.setter(v58, v59, v60, v61);
LABEL_18:
        v63 = UIListSeparatorConfiguration.bottomSeparatorInsets.getter(v62);
        UIListSeparatorConfiguration.topSeparatorInsets.setter(v63);
        goto LABEL_19;
      }
    }
    else
    {
      v35 = v65;
      if (v57 != enum case for ShelfCellListSeparatorMode.Layout.marginToMargin(_:))
      {
        v62 = sub_D1D4(v52, &qword_3D19F0);
        goto LABEL_18;
      }
    }
    v58.n128_u64[0] = 0;
    v60.n128_u64[0] = 0;
    v59.n128_f64[0] = a6;
    v61.n128_f64[0] = a6;
    goto LABEL_16;
  }
  v37 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 104);
  v38(v16, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v12);
  UIListSeparatorConfiguration.topSeparatorVisibility.setter(v16);
  v38(v16, v37, v12);
  v39.n128_f64[0] = UIListSeparatorConfiguration.bottomSeparatorVisibility.setter(v16);
LABEL_19:
  ((void (*)(char *, uint64_t, __n128))v35)(v31, v17, v39);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v75 + 32))(v77, v28, v76);
}

uint64_t sub_36428(_QWORD *a1, int a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(__int128 *__return_ptr, _QWORD *);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  id v34;
  Class isa;
  id v36;
  _QWORD *v37;
  uint64_t (*v38)(_QWORD *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  id v82;
  char *v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  char v104[24];
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;

  v103 = a1;
  v4 = type metadata accessor for InteractionContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E80);
  __chkstk_darwin(v8);
  v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PresentationSource(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v2 + 2, v104, 0, 0);
  v15 = (void (*)(__int128 *__return_ptr, _QWORD *))v2[8];
  if (!v15)
  {
    v110 = 0;
    v108 = 0u;
    v109 = 0u;
    goto LABEL_20;
  }
  v94 = v10;
  v95 = v14;
  v96 = v12;
  v97 = v11;
  v98 = a2;
  v99 = v7;
  v100 = v5;
  v101 = v4;
  v16 = v2;
  v17 = v2[10];
  v18 = v2[11];
  v19 = v2[9];
  v21 = v16[6];
  v20 = v16[7];
  v23 = v16[4];
  v22 = v16[5];
  v24 = v16[2];
  v25 = v16[3];
  v102 = v16;
  sub_2C690(v24, v25);
  sub_2C690(v23, v22);
  sub_2C690(v21, v20);
  sub_2C690((uint64_t)v15, v19);
  sub_2C690(v17, v18);
  v15(&v108, v103);
  sub_1D618(v24, v25);
  sub_1D618(v23, v22);
  sub_1D618(v21, v20);
  sub_1D618((uint64_t)v15, v19);
  sub_1D618(v17, v18);
  if (!*((_QWORD *)&v109 + 1))
  {
LABEL_20:
    sub_D1D4((uint64_t)&v108, &qword_3D1A10);
    v105 = 0u;
    v106 = 0u;
    v107 = 0;
    goto LABEL_22;
  }
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E90);
  if ((swift_dynamicCast(&v105, &v108, v26, v27, 6) & 1) == 0)
  {
    v107 = 0;
    v105 = 0u;
    v106 = 0u;
    goto LABEL_22;
  }
  if (!*((_QWORD *)&v106 + 1))
  {
LABEL_22:
    sub_D1D4((uint64_t)&v105, (uint64_t *)&unk_3D5BA0);
    return 0;
  }
  sub_1B738(&v105, (uint64_t)&v108);
  v28 = OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_collectionView;
  v29 = *(void **)((char *)v102 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_collectionView);
  if (v29)
  {
    v30 = v29;
    v31 = (void *)UIView.mt_viewController.getter(v30);

    if (v31)
    {
      v32 = v103;
      v33 = *(void **)((char *)v102 + v28);
      if (v33)
      {
        v34 = v33;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v36 = objc_msgSend(v34, "cellForItemAtIndexPath:", isa);

        if (v36)
        {
          v37 = v102;
          v38 = (uint64_t (*)(_QWORD *))v102[2];
          if (!v38)
            goto LABEL_33;
          v88 = v36;
          v40 = v102[3];
          v89 = v102[4];
          v39 = v89;
          v41 = v102[6];
          v92 = v102[5];
          v42 = v102[8];
          v93 = v102[7];
          v43 = v102[9];
          v44 = v102[10];
          v90 = v102[11];
          sub_2C690((uint64_t)v38, v40);
          v45 = v39;
          v46 = v92;
          sub_2C690(v45, v92);
          v47 = v93;
          sub_2C690(v41, v93);
          sub_2C690(v42, v43);
          v91 = v44;
          v48 = v44;
          v49 = v90;
          sub_2C690(v48, v90);
          v50 = v38(v32);
          v51 = v47;
          v52 = (uint64_t)v38;
          if (v50)
          {
            v53 = (void *)v50;
            v85 = v40;
            v86 = v52;
            v87 = v42;
            v54 = v49;
            v55 = v91;
            v103 = (_QWORD *)v41;
            ObjectType = swift_getObjectType();
            v57 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ShelfUIKitCell);
            if (v57)
              v58 = v57;
            else
              v58 = 0;
            if (v57)
              v59 = v53;
            else
              v59 = 0;
            if (v59)
            {
              v60 = swift_getObjectType();
              v61 = dispatch thunk of ShelfUIKitCell.objectGraph.getter(v60, v58);
              v62 = (uint64_t)v103;
              v63 = v54;
              v42 = v87;
              v64 = v85;
              goto LABEL_29;
            }
            v67 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
            v68 = swift_dynamicCastClass(v53, v67);
            v63 = v49;
            v42 = v87;
            v64 = v85;
            if (v68)
            {
              v61 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph);
              swift_retain(v61);
              v62 = (uint64_t)v103;
LABEL_29:

              sub_1D618(v86, v64);
              sub_1D618(v89, v92);
              sub_1D618(v62, v93);
              sub_1D618(v42, v43);
              sub_1D618(v55, v63);
              v37 = v102;
              v36 = v88;
              if (v61)
              {
LABEL_34:
                v70 = *(_QWORD *)((char *)v37
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_episodeController
                                + 24);
                v69 = *(_QWORD *)((char *)v37
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_episodeController
                                + 32);
                v103 = __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v37+ OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_episodeController), v70);
                v71 = v31;
                v72 = v36;
                objc_msgSend(v72, "bounds");
                v73 = v94;
                *v94 = v72;
                v73[1] = v74;
                v73[2] = v75;
                v73[3] = v76;
                v73[4] = v77;
                v78 = enum case for PresentationSource.Position.view(_:);
                v79 = type metadata accessor for PresentationSource.Position(0);
                v80 = *(_QWORD *)(v79 - 8);
                (*(void (**)(_QWORD *, uint64_t, uint64_t))(v80 + 104))(v73, v78, v79);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v73, 0, 1, v79);
                v81 = v95;
                PresentationSource.init(viewController:position:)(v71, v73);
                v82 = v72;
                v83 = v99;
                UIView.interactionContext.getter(v82);

                v65 = dispatch thunk of EpisodeControllerProtocol.swipeActionsConfiguration(asPartOf:for:presentationSource:interactionContext:leading:)(v61, &v108, v81, v83, v98 & 1, v70, v69);
                v84 = swift_release(v61);
                (*(void (**)(char *, uint64_t, __n128))(v100 + 8))(v83, v101, v84);
                (*(void (**)(char *, uint64_t))(v96 + 8))(v81, v97);
                __swift_destroy_boxed_opaque_existential_0(&v108);
                return v65;
              }
LABEL_33:
              v61 = *(_QWORD *)((char *)v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph);
              swift_retain(v61);
              goto LABEL_34;
            }

            v41 = (uint64_t)v103;
            v51 = v93;
            v40 = v64;
            v46 = v92;
            v52 = v86;
          }
          sub_1D618(v52, v40);
          sub_1D618(v89, v46);
          sub_1D618(v41, v51);
          sub_1D618(v42, v43);
          sub_1D618(v91, v49);
          v37 = v102;
          v36 = v88;
          goto LABEL_33;
        }
      }

    }
  }
  __swift_destroy_boxed_opaque_existential_0(&v108);
  return 0;
}

uint64_t sub_36ACC(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (!Strong)
    return 0;
  v7 = Strong;
  v8 = sub_36428(a1, a3 & 1);
  swift_release(v7);
  return v8;
}

uint64_t type metadata accessor for ShelvesViewProvider.SectionLayout(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D1CF0, (uint64_t)&nominal type descriptor for ShelvesViewProvider.SectionLayout);
}

uint64_t sub_36B60(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_36B70(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

unint64_t sub_36BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_37170(a1, a2, v5);
}

unint64_t sub_36C08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_375D8(a1, v4, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
}

unint64_t sub_36C58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_373C4(a1, v7);
}

unint64_t sub_36CE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for FlowPresentationContext(0);
  v6 = sub_89A0((unint64_t *)&unk_3D1D60, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext, (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_376E8(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext, (unint64_t *)&unk_3D34D0, (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
}

unint64_t sub_36D7C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v2 = a1 & 1;
  Hasher.init(_seed:)(v8, *(_QWORD *)(v1 + 40));
  v3 = InterfaceMode.rawValue.getter(v2);
  v5 = v4;
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v5);
  v6 = Hasher._finalize()();
  return sub_37250(v2, v6);
}

unint64_t sub_36DF0(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_37538(a1, v3);
}

unint64_t sub_36E48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_375D8(a1, v4, (unint64_t *)&qword_3D34B0, UIView_ptr);
}

unint64_t sub_36E94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v6 = sub_89A0(&qword_3D1D88, (uint64_t (*)(uint64_t))&type metadata accessor for ModernShelf.ItemPresentation, (uint64_t)&protocol conformance descriptor for ModernShelf.ItemPresentation);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_376E8(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for ModernShelf.ItemPresentation, &qword_3D1D90, (uint64_t)&protocol conformance descriptor for ModernShelf.ItemPresentation);
}

unint64_t sub_36F2C(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  NavigationTab.hash(into:)(v5, a1);
  v3 = Hasher._finalize()();
  return sub_37818(a1, v3);
}

unint64_t sub_36F84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), a1);
  return sub_37920(a1, v3);
}

unint64_t sub_36FB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_379BC(a1, v4);
}

unint64_t sub_36FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, *(_QWORD *)(v1 + 40));
  v3 = UberStyle.rawValue.getter(a1);
  v5 = v4;
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v5);
  v6 = Hasher._finalize()();
  return sub_37A80(a1, v6);
}

unint64_t sub_37058(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = v1;
  v4 = a1 & 1;
  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  Hasher._combine(_:)(a1 & 1);
  v5 = Hasher._finalize()();
  return sub_37BF4(v4, v5);
}

unint64_t sub_370B4(uint64_t a1)
{
  uint64_t v1;
  double v3;
  Swift::UInt64 v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, *(_QWORD *)(v1 + 40));
  if ((*(_QWORD *)a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = *(double *)a1;
  else
    v3 = 0.0;
  Hasher._combine(_:)(*(Swift::UInt64 *)&v3);
  if ((*(_QWORD *)(a1 + 8) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = *(_QWORD *)(a1 + 8);
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey(0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = sub_89A0((unint64_t *)&unk_3D1EB0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  dispatch thunk of Hashable.hash(into:)(v9, v5, v6);
  v7 = Hasher._finalize()();
  return sub_37CB0((double *)a1, v7);
}

unint64_t sub_37170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_37250(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = a1 & 1;
    v7 = InterfaceMode.rawValue.getter(*(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v5));
    v9 = v8;
    v10 = InterfaceMode.rawValue.getter(v6);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = InterfaceMode.rawValue.getter(*(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v5));
          v9 = v17;
          v18 = InterfaceMode.rawValue.getter(v6);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_373C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_37538(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_375D8(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t i;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  i = a2 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_E710(0, a3, a4);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
    v9 = static NSObject.== infix(_:_:)();

    if ((v9 & 1) == 0)
    {
      v10 = ~v6;
      for (i = (i + 1) & v10; ((*(_QWORD *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v10)
      {
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
        v12 = static NSObject.== infix(_:_:)();

        if ((v12 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_376E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t, __n128);
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  unint64_t *v23;
  uint64_t v24;

  v23 = a4;
  v24 = a5;
  v6 = v5;
  v21 = a1;
  v22 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v21 - v11;
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v9 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    do
    {
      v17(v12, *(_QWORD *)(v6 + 48) + v16 * v14, v8, v10);
      v18 = sub_89A0(v23, v22, v24);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v21, v8, v18);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_37818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_3D600(v7);
    v8 = static NavigationTab.== infix(_:_:)(v7, a1);
    sub_7C28(v7);
    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
        sub_3D600(v10);
        v11 = static NavigationTab.== infix(_:_:)(v10, a1);
        sub_7C28(v10);
        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_37920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_379BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_3D590(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_3D5CC((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_37A80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = UberStyle.rawValue.getter(*(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v5));
    v9 = v8;
    v10 = UberStyle.rawValue.getter(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = UberStyle.rawValue.getter(*(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v5));
          v9 = v17;
          v18 = UberStyle.rawValue.getter(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_37BF4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_37CB0(double *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey(0);
  __chkstk_darwin(v5);
  v8 = (double *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_19C4C(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
      if (*v8 == *a1
        && v8[1] == a1[1]
        && (static DynamicTypeSize.== infix(_:_:)((char *)v8 + *(int *)(v5 + 24), (char *)a1 + *(int *)(v5 + 24)) & 1) != 0)
      {
        break;
      }
      sub_FA4C((uint64_t)v8, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        return v10;
    }
    sub_FA4C((uint64_t)v8, type metadata accessor for EpisodeHeroTextAreaUIKitView.CacheKey);
  }
  return v10;
}

_BYTE **sub_37DF8(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_37E08(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a4();
  v8 = v7;
  v9 = sub_37E78(v6, v7, a3);
  v10 = *a1 + 8;
  v11 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
  swift_bridgeObjectRelease(v8);
  *a1 = v10;
}

uint64_t sub_37E78(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  sub_37F48(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1D66C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1D66C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  __swift_destroy_boxed_opaque_existential_0(v12);
  return v7;
}

void sub_37F48(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            *a1 = (uint64_t)__dst;
            return;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    sub_38100(a5, a6);
    *a1 = v12;
    return;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v13) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v13, 1173, 0);
    __break(1u);
    return;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) == 0)
    swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_38100(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_38194(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_38308(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_38308(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_38194(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_2A7150(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_38308(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1D70);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_38454(_BYTE *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  int v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  _QWORD v16[9];

  v3 = v2;
  v6 = a2 & 1;
  v7 = *v3;
  Hasher.init(_seed:)(v16, *(_QWORD *)(*v3 + 40));
  Hasher._combine(_:)(a2 & 1);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v16[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_38830(v6, v10, isUniquelyReferenced_nonNull_native);
    v15 = *v3;
    *v3 = v16[0];
    swift_bridgeObjectRelease(v15);
    result = 1;
    goto LABEL_8;
  }
  v11 = *(_QWORD *)(v7 + 48);
  if ((((v6 == 0) ^ *(unsigned __int8 *)(v11 + v10)) & 1) == 0)
  {
    v12 = ~v9;
    do
    {
      v10 = (v10 + 1) & v12;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_7;
    }
    while ((((v6 == 0) ^ *(unsigned __int8 *)(v11 + v10)) & 1) == 0);
  }
  result = 0;
  LOBYTE(v6) = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = v6;
  return result;
}

uint64_t sub_3858C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain(a3);
  sub_38994(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_38738(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), a2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_38B2C(a2, v9, isUniquelyReferenced_nonNull_native);
    v14 = *v3;
    *v3 = v15;
    swift_bridgeObjectRelease(v14);
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

void sub_38830(char a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  Swift::UInt v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v5 = a1 & 1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_12FBB8(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_38C4C();
      goto LABEL_14;
    }
    sub_39348(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v18, *(_QWORD *)(*v3 + 40));
  Hasher._combine(_:)(v5);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (((((_DWORD)v5 == 0) ^ *(unsigned __int8 *)(v12 + a2)) & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for HorizontalScrollDirection);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (((((_DWORD)v5 == 0) ^ *(unsigned __int8 *)(v12 + a2)) & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = v5;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_38994(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_12FE60(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_38DDC();
      goto LABEL_22;
    }
    sub_395C0(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  String.hash(into:)(v29, a1, a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_38B2C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1304A4(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_391B4();
      goto LABEL_14;
    }
    sub_39BAC(v8);
  }
  v9 = *v3;
  v10 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v3 + 40), a1);
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int64);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_38C4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D1DA0);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_38DDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E48);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain(v18);
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_38F8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1D50);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_27:
    *v1 = v8;
    return;
  }
  v24 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v10 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 56);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v20 >= v16)
      goto LABEL_25;
    v21 = *(_QWORD *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v16)
        goto LABEL_25;
      v21 = *(_QWORD *)(v10 + 8 * v12);
      if (!v21)
      {
        v12 = v20 + 2;
        if (v20 + 2 >= v16)
          goto LABEL_25;
        v21 = *(_QWORD *)(v10 + 8 * v12);
        if (!v21)
          break;
      }
    }
LABEL_24:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    sub_D184(*(_QWORD *)(v6 + 48) + v19, (uint64_t)v5, &qword_3D9460);
    sub_D210((uint64_t)v5, *(_QWORD *)(v8 + 48) + v19, &qword_3D9460);
  }
  v22 = v20 + 3;
  if (v22 >= v16)
  {
LABEL_25:
    swift_release(v6);
    v1 = v24;
    goto LABEL_27;
  }
  v21 = *(_QWORD *)(v10 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v16)
      goto LABEL_25;
    v21 = *(_QWORD *)(v10 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_24;
  }
LABEL_29:
  __break(1u);
}

void sub_391B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1D40);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_39348(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D1DA0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_395C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E48);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(v33, v21, v22);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_3986C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[9];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D9460);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1D50);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 0);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_release(v7);
LABEL_37:
    *v2 = v9;
    return;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v34 = v2;
  v35 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v36 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  swift_retain(v7);
  v15 = 0;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_26;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v19 >= v36)
      goto LABEL_35;
    v20 = *(_QWORD *)(v35 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v36)
        goto LABEL_35;
      v20 = *(_QWORD *)(v35 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v36)
          goto LABEL_35;
        v20 = *(_QWORD *)(v35 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_26:
    v22 = *(_QWORD *)(v37 + 72);
    sub_D184(*(_QWORD *)(v7 + 48) + v22 * v18, (uint64_t)v6, &qword_3D9460);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v9 + 40));
    v23 = &v6[*(int *)(v38 + 28)];
    v24 = *(_QWORD *)v23;
    v25 = *((_QWORD *)v23 + 1);
    swift_bridgeObjectRetain(v25);
    String.hash(into:)(v39, v24, v25);
    swift_bridgeObjectRelease(v25);
    v26 = Hasher._finalize()();
    v27 = -1 << *(_BYTE *)(v9 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v14 + 8 * (v28 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v14 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v14 + 8 * v29);
      }
      while (v33 == -1);
      v16 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v14 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    sub_D210((uint64_t)v6, *(_QWORD *)(v9 + 48) + v16 * v22, &qword_3D9460);
    ++*(_QWORD *)(v9 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_35:
    swift_release_n(v7, 2);
    v2 = v34;
    goto LABEL_37;
  }
  v20 = *(_QWORD *)(v35 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v36)
      goto LABEL_35;
    v20 = *(_QWORD *)(v35 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_39BAC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1D40);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_39E0C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19[2];

  v6 = v5;
  *(_QWORD *)(v6 + 96) = 0;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  v12 = v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_cachedShelfAttributes;
  v13 = type metadata accessor for ShelfAttributes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_collectionView) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_registeredCellReuseIdentifiers) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_registeredSupplementaryViewKinds) = &_swiftEmptySetSingleton;
  v14 = v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_visiblePageControls;
  v15 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_pageControlOffsets) = &_swiftEmptyDictionarySingleton;
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_heightCacheTraitCollection;
  *(_QWORD *)(v6 + v16) = objc_msgSend(objc_allocWithZone((Class)UITraitCollection), "init");
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_heightCache) = &_swiftEmptyDictionarySingleton;
  sub_D184(a1, v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_deletableExtension, &qword_3D2E80);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_multiSelectableExtension) = a2;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_showsHeaders) = a3;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_hideAllHeaderSeparators) = a4;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph) = a5;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  swift_retain(a2);
  swift_retain(a5);
  BaseObjectGraph.inject<A>(_:)(v19, v17, v17);
  sub_D1D4(a1, &qword_3D2E80);
  sub_1B738(v19, v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_episodeController);
  return v6;
}

double sub_39FE4(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  double v14;
  BOOL v15;
  void *v16;
  id v17;
  Class isa;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  Class v41;
  id v42;
  id v43;
  id v45;
  void *v47;
  uint64_t v48;

  if (a2 <= 1)
    v8 = 1;
  else
    v8 = a2;
  v9 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v10 = objc_msgSend(v9, "fractionalWidthDimension:", 1.0);
  v11 = objc_msgSend(v9, "absoluteDimension:", a4);
  v12 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v13 = objc_msgSend(v12, "sizeWithWidthDimension:heightDimension:", v10, v11);

  v14 = (double)v8 * a4 + ((double)v8 + -1.0) * a5;
  v48 = v8;
  v15 = (unint64_t)v8 >= 2;
  v16 = v13;
  if (v15)
  {
    sub_E710(0, &qword_3D1E68, NSCollectionLayoutSupplementaryItem_ptr);
    v45 = v13;
    v17 = v13;
    swift_bridgeObjectRetain(a1);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
    v19 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:supplementaryItems:", v17, isa);

    v20 = objc_msgSend(v9, "fractionalWidthDimension:", 1.0);
    v21 = objc_msgSend(v9, "absoluteDimension:", v14 - a4 - a5);
    v47 = v12;
    v22 = objc_msgSend(v12, "sizeWithWidthDimension:heightDimension:", v20, v21);

    v23 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutGroup), "verticalGroupWithLayoutSize:subitem:count:", v22, v19, v48 - 1);
    v24 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSpacing), "fixedSpacing:", a5);
    objc_msgSend(v23, "setInterItemSpacing:", v24);

    v25 = v23;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
    v27 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v26 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v27 >= v26 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
    v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
    specialized Array._endMutation()(v28);

    v16 = v45;
    v12 = v47;
  }
  v29 = objc_msgSend(v9, "fractionalWidthDimension:", 1.0, v45);
  v30 = objc_msgSend(v9, "absoluteDimension:", a4);
  v31 = objc_msgSend(v12, "sizeWithWidthDimension:heightDimension:", v29, v30);

  v32 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v31);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v34 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v32);
  specialized Array._endMutation()(v36);
  v37 = objc_msgSend(v9, "absoluteDimension:", a3);
  v38 = objc_msgSend(v9, "absoluteDimension:", v14);
  v39 = objc_msgSend(v12, "sizeWithWidthDimension:heightDimension:", v37, v38);

  v40 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  sub_E710(0, (unint64_t *)&unk_3D1EA0, NSCollectionLayoutItem_ptr);
  v41 = Array._bridgeToObjectiveC()().super.isa;
  v42 = objc_msgSend(v40, "verticalGroupWithLayoutSize:subitems:", v39, v41, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  v43 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSpacing), "fixedSpacing:", a5);
  objc_msgSend(v42, "setInterItemSpacing:", v43);

  return v14;
}

id sub_3A4C0(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  void *v7;
  void *v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *boxed_opaque_existential_0;
  id v13;
  _QWORD v15[5];

  sub_39FE4(a1, a2, a3, a4, a6);
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v7);
  objc_msgSend(v9, "setInterGroupSpacing:", a5);
  objc_msgSend(v9, "setOrthogonalScrollingBehavior:", 2);
  v11 = type metadata accessor for Podcasts(0, v10);
  v15[3] = v11;
  v15[4] = sub_89A0(&qword_3D2F80, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(boxed_opaque_existential_0, enum case for Podcasts.horizontalShelfSlowDeceleration(_:), v11);
  LOBYTE(v11) = isFeatureEnabled(_:)(v15);
  __swift_destroy_boxed_opaque_existential_0(v15);
  if ((v11 & 1) == 0)
  {
    v13 = objc_msgSend(v9, "orthogonalScrollingProperties");
    objc_msgSend(v13, "setDecelerationRate:", UICollectionLayoutSectionOrthogonalScrollingDecelerationRateFast);

  }
  return v9;
}

double sub_3A5F8(uint64_t a1, char a2, char a3, void *a4, __n128 a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  __int128 v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int16 v44;

  v9 = type metadata accessor for ShelfCellEnvironment(0, a5);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0.0;
  if ((a3 & 1) == 0 && (a2 & 1) != 0)
  {
    sub_EE31C(v11);
    v16 = v15;
    v17 = swift_conformsToProtocol2(v15, &protocol descriptor for ShelfCellListCustomizations);
    v18 = v17 ? v17 : 0;
    v19 = v17 ? v16 : 0;
    if (!v19
      || (dispatch thunk of static ShelfCellListCustomizations.shouldLayoutAsList(presentation:)(a1, v19, v18) & 1) == 0)
    {
      v20 = swift_conformsToProtocol2(v16, &protocol descriptor for ShelfCellGridCustomizations);
      if (v20)
        v21 = v20;
      else
        v21 = 0;
      if (v20)
        v22 = v16;
      else
        v22 = 0;
      if (v22)
      {
        v23 = a4;
        ShelfCellEnvironment.init(isHorizontallyCompact:)(objc_msgSend(v23, "horizontalSizeClass") == (char *)&dword_0 + 1);

        *(double *)&v24 = COERCE_DOUBLE(dispatch thunk of static ShelfCellGridCustomizations.rowSpacing(presentation:environment:)(a1, v13, v22, v21));
        v26 = v25;
        v27 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
        if ((v26 & 1) == 0)
          return *(double *)&v24;
        if (*(double *)&v24 != 0.0)
          return PageSize.gutters.getter(v27);
      }
      if (qword_3CF998 != -1)
        swift_once(&qword_3CF998, sub_1BE5A4);
      v32 = xmmword_3FCD00;
      v33 = byte_3FCD10;
      v34 = (id)qword_3FCD18;
      v35 = qword_3FCD20;
      v36 = qword_3FCD28;
      v37 = qword_3FCD30;
      v38 = qword_3FCD38;
      v39 = qword_3FCD40;
      v40 = (void *)qword_3FCD48;
      v41 = qword_3FCD50;
      v42 = xmmword_3FCD58;
      v43 = qword_3FCD68;
      v44 = word_3FCD70;
      sub_1472C((id)qword_3FCD18, qword_3FCD20, qword_3FCD28, qword_3FCD30, qword_3FCD38, qword_3FCD40, (void *)qword_3FCD48, qword_3FCD50, xmmword_3FCD58, *((uint64_t *)&xmmword_3FCD58 + 1), qword_3FCD68, word_3FCD70);
      if (qword_3CFAB0 != -1)
        swift_once(&qword_3CFAB0, sub_1DD388);
      v28 = type metadata accessor for FloatingPointRoundingRule(0);
      v29 = __swift_project_value_buffer(v28, (uint64_t)qword_3FCFB0);
      sub_1DD06C((uint64_t)a4, v29, 0);
      v14 = v30;
      sub_14788(v34, v35, v36, v37, v38, v39, v40, v41, v42, *((uint64_t *)&v42 + 1), v43, v44);
    }
  }
  return v14;
}

double sub_3A880(uint64_t a1, int a2, uint64_t a3, void *a4, __n128 a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  NSString *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  NSString *v41;
  uint64_t v42;
  double v43;
  double v44;
  __int128 *v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  char v50;
  NSString *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int16 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  int v87;
  id v88;
  __int128 v89;
  char v90;
  UIFontTextStyle v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  unsigned __int16 v97;

  v88 = a4;
  v87 = a2;
  v7 = type metadata accessor for ShelfCellEnvironment(0, a5);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E0);
  __chkstk_darwin(v11);
  v84 = (uint64_t)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v82 - v14;
  v86 = a3;
  sub_D184(a3, (uint64_t)&v82 - v14, &qword_3D19E0);
  v16 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v17 = *(_QWORD *)(v16 - 8);
  v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v18 = v85(v15, 1, v16);
  v83 = v17;
  if ((_DWORD)v18 == 1)
  {
    v19 = sub_D1D4((uint64_t)v15, &qword_3D19E0);
  }
  else
  {
    sub_EE31C(v18);
    v21 = v20;
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    v24 = v88;
    ShelfCellEnvironment.init(isHorizontallyCompact:)(objc_msgSend(v24, "horizontalSizeClass") == (char *)&dword_0 + 1);

    v25 = dispatch thunk of static ShelfCell.sectionTopInset(presentation:environment:)(a1, v10, v21, *(_QWORD *)(v23 + 8));
    LOBYTE(v23) = v26;
    v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if ((v23 & 1) == 0)
    {
      v89 = (unint64_t)v25;
      v90 = 0;
      v91 = UIFontTextStyleBody;
      v92 = 0u;
      v93 = 0u;
      v94 = 0u;
      v95 = 0u;
      v96 = 0u;
      v97 = 0;
      v27 = qword_3CFAB0;
      v28 = UIFontTextStyleBody;
      if (v27 != -1)
        swift_once(&qword_3CFAB0, sub_1DD388);
      v29 = type metadata accessor for FloatingPointRoundingRule(0);
      v30 = __swift_project_value_buffer(v29, (uint64_t)qword_3FCFB0);
      v31 = (uint64_t)v24;
      goto LABEL_10;
    }
  }
  sub_EE31C(v19);
  v33 = v32;
  v35 = v34;
  v36 = v88;
  ShelfCellEnvironment.init(isHorizontallyCompact:)(objc_msgSend(v36, "horizontalSizeClass") == (char *)&dword_0 + 1);

  v37 = dispatch thunk of static ShelfCell.sectionBottomInset(presentation:environment:)(a1, v10, v33, *(_QWORD *)(v35 + 8));
  LOBYTE(v35) = v38;
  v39 = *(void (**)(char *, uint64_t))(v8 + 8);
  v39(v10, v7);
  if ((v35 & 1) == 0)
  {
    v89 = (unint64_t)v37;
    v90 = 0;
    v91 = UIFontTextStyleBody;
    v92 = 0u;
    v93 = 0u;
    v94 = 0u;
    v95 = 0u;
    v96 = 0u;
    v97 = 0;
    v40 = qword_3CFAB0;
    v41 = UIFontTextStyleBody;
    if (v40 == -1)
    {
LABEL_9:
      v42 = type metadata accessor for FloatingPointRoundingRule(0);
      v30 = __swift_project_value_buffer(v42, (uint64_t)qword_3FCFB0);
      v31 = (uint64_t)v36;
LABEL_10:
      sub_1DD06C(v31, v30, 0);
      v44 = v43;
      sub_14788(v91, v92, *((uint64_t *)&v92 + 1), v93, *((uint64_t *)&v93 + 1), v94, *((void **)&v94 + 1), v95, *((uint64_t *)&v95 + 1), v96, *((uint64_t *)&v96 + 1), v97);
      return v44;
    }
LABEL_21:
    swift_once(&qword_3CFAB0, sub_1DD388);
    goto LABEL_9;
  }
  if ((v87 & 1) != 0)
    goto LABEL_13;
  v47 = v86;
  v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v85;
  v49 = v85((char *)v86, 1, v16);
  if ((_DWORD)v49 == 1)
  {
LABEL_17:
    if (qword_3CF998 != -1)
      swift_once(&qword_3CF998, sub_1BE5A4);
    v46 = &xmmword_3FCD00;
LABEL_20:
    v50 = *((_BYTE *)v46 + 16);
    v51 = (NSString *)*((_QWORD *)v46 + 3);
    v52 = *((_QWORD *)v46 + 4);
    v53 = *((_QWORD *)v46 + 5);
    v54 = *((_QWORD *)v46 + 6);
    v55 = *((_QWORD *)v46 + 7);
    v56 = *((_QWORD *)v46 + 8);
    v57 = (void *)*((_QWORD *)v46 + 9);
    v58 = *((_QWORD *)v46 + 10);
    v59 = *((_QWORD *)v46 + 11);
    v60 = *((_QWORD *)v46 + 12);
    v61 = *((_QWORD *)v46 + 13);
    v62 = *((_WORD *)v46 + 56);
    v89 = *v46;
    v90 = v50;
    v91 = v51;
    *(_QWORD *)&v92 = v52;
    *((_QWORD *)&v92 + 1) = v53;
    *(_QWORD *)&v93 = v54;
    *((_QWORD *)&v93 + 1) = v55;
    *(_QWORD *)&v94 = v56;
    *((_QWORD *)&v94 + 1) = v57;
    *(_QWORD *)&v95 = v58;
    *((_QWORD *)&v95 + 1) = v59;
    *(_QWORD *)&v96 = v60;
    *((_QWORD *)&v96 + 1) = v61;
    v97 = v62;
    sub_1472C(v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62);
    if (qword_3CFAB0 == -1)
      goto LABEL_9;
    goto LABEL_21;
  }
  v63 = ModernShelf.ItemPresentation.background.getter(v49);
  v64 = v47;
  v65 = v84;
  sub_D184(v64, v84, &qword_3D19E0);
  v66 = v48(v65, 1, v16);
  if ((_DWORD)v66 != 1)
  {
    v68 = v63;
    v69 = ModernShelf.ItemPresentation.background.getter(v66);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v65, v16);
    if ((v68 & 0x10000000000) != 0)
    {
      if ((v69 & 0x10000000000) != 0)
        goto LABEL_30;
    }
    else if ((v69 & 0x10000000000) == 0)
    {
      v67 = static ModernShelf.Background.== infix(_:_:)(v68 | ((HIDWORD(v68) & 1) << 32), v69 | ((HIDWORD(v69) & 1) << 32));
      if ((v67 & 1) != 0)
        goto LABEL_30;
    }
LABEL_13:
    if (qword_3CF9A0 != -1)
      swift_once(&qword_3CF9A0, sub_1BE5F0);
    v46 = &xmmword_3FCD78;
    goto LABEL_20;
  }
  v67 = sub_D1D4(v65, &qword_3D19E0);
  if ((v63 & 0x10000000000) == 0)
    goto LABEL_13;
LABEL_30:
  sub_EE31C(v67);
  v71 = v70;
  v72 = swift_conformsToProtocol2(v70, &protocol descriptor for ShelfCellListCustomizations);
  if (v72)
    v73 = v72;
  else
    v73 = 0;
  if (v72)
    v74 = v71;
  else
    v74 = 0;
  if (!v74
    || (v44 = 0.0,
        (dispatch thunk of static ShelfCellListCustomizations.shouldLayoutAsList(presentation:)(a1, v74, v73) & 1) == 0))
  {
    v75 = swift_conformsToProtocol2(v71, &protocol descriptor for ShelfCellGridCustomizations);
    if (v75)
      v76 = v75;
    else
      v76 = 0;
    if (v75)
      v77 = v71;
    else
      v77 = 0;
    if (v77)
    {
      v78 = v36;
      ShelfCellEnvironment.init(isHorizontallyCompact:)(objc_msgSend(v78, "horizontalSizeClass") == (char *)&dword_0 + 1);

      *(double *)&v79 = COERCE_DOUBLE(dispatch thunk of static ShelfCellGridCustomizations.rowSpacing(presentation:environment:)(a1, v10, v77, v76));
      LOBYTE(v78) = v80;
      v81 = ((uint64_t (*)(char *, uint64_t))v39)(v10, v7);
      if ((v78 & 1) == 0)
        return *(double *)&v79;
      if (*(double *)&v79 != 0.0)
        return PageSize.gutters.getter(v81);
    }
    goto LABEL_17;
  }
  return v44;
}

uint64_t sub_3AE88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  int *v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A58);
  __chkstk_darwin(v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v24[-v6 - 8];
  if (qword_3CF0E0 != -1)
    swift_once(&qword_3CF0E0, sub_32C9C);
  v8 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
  v9 = (uint64_t *)(a1 + *(int *)(v8 + 28));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_beginAccess(off_3D19A0, v24, 32, 0);
  v13 = off_3D19A0[0];
  if (*(_QWORD *)((char *)off_3D19A0[0] + (unint64_t)&dword_10))
  {
    swift_bridgeObjectRetain(v10);
    v14 = sub_36BA4(v11, v10);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD *)&stru_20.segname[(_QWORD)v13 + 16];
      v17 = *(_QWORD *)(v8 - 8);
      sub_19C4C(v16 + *(_QWORD *)(v17 + 72) * v14, (uint64_t)v7, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
      v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v18(v7, 0, 1, v8);
    }
    else
    {
      v17 = *(_QWORD *)(v8 - 8);
      v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v18(v7, 1, 1, v8);
    }
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v17 = *(_QWORD *)(v8 - 8);
    v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))v18)(v7, 1, 1, v8, v12);
  }
  swift_endAccess(v24);
  v19 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v7, 1, v8);
  result = sub_D1D4((uint64_t)v7, &qword_3D1A58);
  if (v19 == 1)
  {
    v21 = *v9;
    v22 = v9[1];
    sub_19C4C(a1, (uint64_t)v4, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
    v18(v4, 0, 1, v8);
    swift_beginAccess(off_3D19A0, v24, 33, 0);
    swift_bridgeObjectRetain(v22);
    sub_B148C((uint64_t)v4, v21, v22);
    return swift_endAccess(v24);
  }
  return result;
}

id sub_3B0B0(double a1, double a2, double a3)
{
  double v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSString v11;
  id v12;

  v5 = -(a1 + a3);
  v6 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v7 = objc_msgSend(v6, "fractionalWidthDimension:", 1.0);
  v8 = objc_msgSend(v6, "absoluteDimension:", a1);
  v9 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v7, v8);

  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v10, v11, 5, 0.0, v5);

  objc_msgSend(v12, "setContentInsets:", 0.0, -a2, 0.0, -a2);
  objc_msgSend(v12, "setZIndex:", 200);

  return v12;
}

uint64_t sub_3B218()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_3B240(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ModernShelf(0) - 8) + 80);
  sub_30430(a3, a1, a2, *(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_1(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for ShelvesViewProvider.Supplementaries.Header(uint64_t a1)
{
  return sub_AE00(a1, qword_3D1C58, (uint64_t)&nominal type descriptor for ShelvesViewProvider.Supplementaries.Header);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ModernShelf(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_3B34C(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v2 = a1 & 1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ModernShelf(0) - 8) + 80);
  return sub_341DC(v2, *(_QWORD *)(v1 + 16), (void *)(v1 + ((v3 + 24) & ~v3)));
}

uint64_t sub_3B38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_3B3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ModernShelf(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_3B430()
{
  type metadata accessor for ModernShelf(0);
  return sub_34128();
}

uint64_t sub_3B46C()
{
  return type metadata accessor for ShelvesViewProvider(0);
}

uint64_t type metadata accessor for ShelvesViewProvider(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D1AE8, (uint64_t)&nominal type descriptor for ShelvesViewProvider);
}

void sub_3B488(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[16];

  v8[0] = &unk_2F0F58;
  v8[1] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_3D544(319, &qword_3D1AF8, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfAttributes);
  if (v3 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(v2 - 8) + 64;
    v8[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v8[4] = &unk_2F0F70;
    v8[5] = &unk_2F0F88;
    sub_3D544(319, qword_3D1B00, (uint64_t (*)(uint64_t))&type metadata accessor for DeletableExtension);
    if (v5 <= 0x3F)
    {
      v8[6] = *(_QWORD *)(v4 - 8) + 64;
      v8[7] = &unk_2F0FA0;
      v8[8] = &unk_2F0FA0;
      v8[9] = &unk_2F0F70;
      v8[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v8[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_3D544(319, (unint64_t *)&qword_3D57E0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
      if (v7 <= 0x3F)
      {
        v8[12] = *(_QWORD *)(v6 - 8) + 64;
        v8[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v8[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v8[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
        swift_updateClassMetadata2(a1, 256, 16, v8, a1 + 80);
      }
    }
  }
}

uint64_t method lookup function for ShelvesViewProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ShelvesViewProvider);
}

ValueMetadata *type metadata accessor for ShelvesViewProvider.Supplementaries()
{
  return &type metadata for ShelvesViewProvider.Supplementaries;
}

uint64_t *sub_3B5D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  __int16 v101;
  uint64_t *v104;
  char *v105;
  uint64_t v106;
  int *v107;
  uint64_t v108;
  char *v109;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v88 = *a2;
    *a1 = *a2;
    v83 = (uint64_t *)(v88 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v88);
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v109 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v105 = (char *)a2 + v5;
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    v107 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
    v9 = v107[5];
    v10 = &v6[v9];
    v11 = &v7[v9];
    *(_OWORD *)v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    v12 = (void *)*((_QWORD *)v11 + 3);
    v13 = *((_QWORD *)v11 + 4);
    v14 = *((_QWORD *)v11 + 5);
    v15 = *((_QWORD *)v11 + 6);
    v16 = *((_QWORD *)v11 + 7);
    v17 = *((_QWORD *)v11 + 8);
    v104 = a1;
    v18 = (void *)*((_QWORD *)v11 + 9);
    v19 = *((_QWORD *)v11 + 10);
    v20 = *((_QWORD *)v11 + 11);
    v95 = *((_QWORD *)v11 + 12);
    v100 = *((_QWORD *)v11 + 13);
    v101 = *((_WORD *)v11 + 56);
    sub_1472C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v95, v100, v101);
    *((_QWORD *)v10 + 3) = v12;
    *((_QWORD *)v10 + 4) = v13;
    *((_QWORD *)v10 + 5) = v14;
    *((_QWORD *)v10 + 6) = v15;
    *((_QWORD *)v10 + 7) = v16;
    *((_QWORD *)v10 + 8) = v17;
    *((_QWORD *)v10 + 9) = v18;
    *((_QWORD *)v10 + 10) = v19;
    *((_QWORD *)v10 + 11) = v20;
    *((_QWORD *)v10 + 12) = v95;
    *((_QWORD *)v10 + 13) = v100;
    *((_WORD *)v10 + 56) = v101;
    v21 = v107[6];
    v22 = &v109[v21];
    v23 = &v105[v21];
    v24 = *(void **)v23;
    v25 = *((_QWORD *)v23 + 1);
    v26 = *((_QWORD *)v23 + 2);
    v27 = *((_QWORD *)v23 + 3);
    v28 = *((_QWORD *)v23 + 4);
    v29 = *((_QWORD *)v23 + 5);
    v30 = (void *)*((_QWORD *)v23 + 6);
    v31 = *((_QWORD *)v23 + 7);
    v32 = *((_QWORD *)v23 + 8);
    v91 = *((_QWORD *)v23 + 9);
    v96 = *((_QWORD *)v23 + 10);
    LOBYTE(v100) = v23[88];
    LOBYTE(v101) = v23[89];
    sub_DDA0(*(void **)v23, v25, v26, v27, v28, v29, v30, v31, v32, v91, v96, v100, v101);
    *(_QWORD *)v22 = v24;
    *((_QWORD *)v22 + 1) = v25;
    *((_QWORD *)v22 + 2) = v26;
    *((_QWORD *)v22 + 3) = v27;
    *((_QWORD *)v22 + 4) = v28;
    *((_QWORD *)v22 + 5) = v29;
    *((_QWORD *)v22 + 6) = v30;
    *((_QWORD *)v22 + 7) = v31;
    *((_QWORD *)v22 + 8) = v32;
    *((_QWORD *)v22 + 9) = v91;
    *((_QWORD *)v22 + 10) = v96;
    v22[88] = v100;
    v22[89] = v101;
    v33 = v107[7];
    v34 = &v109[v33];
    v35 = &v105[v33];
    v36 = *(void **)v35;
    v37 = *((_QWORD *)v35 + 1);
    v38 = *((_QWORD *)v35 + 2);
    v39 = *((_QWORD *)v35 + 3);
    v40 = *((_QWORD *)v35 + 4);
    v41 = *((_QWORD *)v35 + 5);
    v42 = (void *)*((_QWORD *)v35 + 6);
    v43 = *((_QWORD *)v35 + 7);
    v44 = *((_QWORD *)v35 + 8);
    v92 = *((_QWORD *)v35 + 9);
    v97 = *((_QWORD *)v35 + 10);
    LOBYTE(v100) = v35[88];
    LOBYTE(v101) = v35[89];
    sub_DDA0(*(void **)v35, v37, v38, v39, v40, v41, v42, v43, v44, v92, v97, v100, v101);
    *(_QWORD *)v34 = v36;
    *((_QWORD *)v34 + 1) = v37;
    *((_QWORD *)v34 + 2) = v38;
    *((_QWORD *)v34 + 3) = v39;
    *((_QWORD *)v34 + 4) = v40;
    *((_QWORD *)v34 + 5) = v41;
    *((_QWORD *)v34 + 6) = v42;
    *((_QWORD *)v34 + 7) = v43;
    *((_QWORD *)v34 + 8) = v44;
    *((_QWORD *)v34 + 9) = v92;
    *((_QWORD *)v34 + 10) = v97;
    v34[88] = v100;
    v34[89] = v101;
    v45 = v107[8];
    v46 = &v109[v45];
    v47 = &v105[v45];
    v48 = *(void **)v47;
    v49 = *((_QWORD *)v47 + 1);
    v50 = *((_QWORD *)v47 + 2);
    v51 = *((_QWORD *)v47 + 3);
    v52 = *((_QWORD *)v47 + 4);
    v53 = *((_QWORD *)v47 + 5);
    v54 = (void *)*((_QWORD *)v47 + 6);
    v55 = *((_QWORD *)v47 + 7);
    v56 = *((_QWORD *)v47 + 8);
    v93 = *((_QWORD *)v47 + 9);
    v98 = *((_QWORD *)v47 + 10);
    LOBYTE(v100) = v47[88];
    LOBYTE(v101) = v47[89];
    sub_DDA0(*(void **)v47, v49, v50, v51, v52, v53, v54, v55, v56, v93, v98, v100, v101);
    *(_QWORD *)v46 = v48;
    *((_QWORD *)v46 + 1) = v49;
    *((_QWORD *)v46 + 2) = v50;
    *((_QWORD *)v46 + 3) = v51;
    *((_QWORD *)v46 + 4) = v52;
    *((_QWORD *)v46 + 5) = v53;
    *((_QWORD *)v46 + 6) = v54;
    *((_QWORD *)v46 + 7) = v55;
    *((_QWORD *)v46 + 8) = v56;
    *((_QWORD *)v46 + 9) = v93;
    *((_QWORD *)v46 + 10) = v98;
    v46[88] = v100;
    v46[89] = v101;
    v57 = v107[9];
    v58 = *(void **)&v105[v57];
    *(_QWORD *)&v109[v57] = v58;
    v59 = v107[10];
    v60 = &v109[v59];
    v61 = &v105[v59];
    *(_OWORD *)v60 = *(_OWORD *)v61;
    v60[16] = v61[16];
    v62 = *((_QWORD *)v61 + 5);
    v94 = *((_QWORD *)v61 + 4);
    v99 = (void *)*((_QWORD *)v61 + 3);
    v63 = *((_QWORD *)v61 + 6);
    v64 = *((_QWORD *)v61 + 7);
    v65 = *((_QWORD *)v61 + 8);
    v66 = (void *)*((_QWORD *)v61 + 9);
    v67 = *((_QWORD *)v61 + 11);
    v68 = *((_QWORD *)v61 + 12);
    v69 = *((_QWORD *)v61 + 13);
    v90 = *((_QWORD *)v61 + 10);
    LOWORD(v49) = *((_WORD *)v61 + 56);
    v70 = v58;
    sub_1472C(v99, v94, v62, v63, v64, v65, v66, v90, v67, v68, v69, v49);
    *((_QWORD *)v60 + 3) = v99;
    *((_QWORD *)v60 + 4) = v94;
    *((_QWORD *)v60 + 5) = v62;
    *((_QWORD *)v60 + 6) = v63;
    *((_QWORD *)v60 + 7) = v64;
    *((_QWORD *)v60 + 8) = v65;
    *((_QWORD *)v60 + 9) = v66;
    *((_QWORD *)v60 + 10) = v90;
    *((_QWORD *)v60 + 11) = v67;
    *((_QWORD *)v60 + 12) = v68;
    *((_QWORD *)v60 + 13) = v69;
    *((_WORD *)v60 + 56) = v49;
    v71 = v107[11];
    v72 = &v109[v71];
    v73 = &v105[v71];
    *(_OWORD *)v72 = *(_OWORD *)v73;
    v72[16] = v73[16];
    v74 = (void *)*((_QWORD *)v73 + 3);
    v75 = *((_QWORD *)v73 + 4);
    v76 = *((_QWORD *)v73 + 5);
    v77 = *((_QWORD *)v73 + 6);
    v78 = *((_QWORD *)v73 + 7);
    v79 = *((_QWORD *)v73 + 8);
    v80 = (void *)*((_QWORD *)v73 + 9);
    v81 = *((_QWORD *)v73 + 10);
    v82 = *((_QWORD *)v73 + 11);
    v106 = *((_QWORD *)v73 + 12);
    v108 = *((_QWORD *)v73 + 13);
    LOWORD(v109) = *((_WORD *)v73 + 56);
    sub_1472C(v74, v75, v76, v77, v78, v79, v80, v81, v82, v106, v108, (unsigned __int16)v109);
    *((_QWORD *)v72 + 3) = v74;
    *((_QWORD *)v72 + 4) = v75;
    v83 = v104;
    *((_QWORD *)v72 + 5) = v76;
    *((_QWORD *)v72 + 6) = v77;
    *((_QWORD *)v72 + 7) = v78;
    *((_QWORD *)v72 + 8) = v79;
    *((_QWORD *)v72 + 9) = v80;
    *((_QWORD *)v72 + 10) = v81;
    *((_QWORD *)v72 + 11) = v82;
    *((_QWORD *)v72 + 12) = v106;
    *((_QWORD *)v72 + 13) = v108;
    *((_WORD *)v72 + 56) = (_WORD)v109;
    v84 = *(int *)(a3 + 28);
    v85 = (uint64_t *)((char *)v104 + v84);
    v86 = (uint64_t *)((char *)a2 + v84);
    v87 = v86[1];
    *v85 = *v86;
    v85[1] = v87;
    swift_bridgeObjectRetain(v87);
  }
  return v83;
}

double sub_3BAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v7 = v4 + v6[5];
  sub_14788(*(id *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(void **)(v7 + 72), *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), *(_QWORD *)(v7 + 96), *(_QWORD *)(v7 + 104), *(_WORD *)(v7 + 112));
  v8 = v4 + v6[6];
  sub_DCC8(*(void **)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(void **)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 72), *(_QWORD *)(v8 + 80), *(_BYTE *)(v8 + 88), *(_BYTE *)(v8 + 89));
  v9 = v4 + v6[7];
  sub_DCC8(*(void **)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), *(void **)(v9 + 48), *(_QWORD *)(v9 + 56), *(_QWORD *)(v9 + 64), *(_QWORD *)(v9 + 72), *(_QWORD *)(v9 + 80), *(_BYTE *)(v9 + 88), *(_BYTE *)(v9 + 89));
  v10 = v4 + v6[8];
  sub_DCC8(*(void **)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(void **)(v10 + 48), *(_QWORD *)(v10 + 56), *(_QWORD *)(v10 + 64), *(_QWORD *)(v10 + 72), *(_QWORD *)(v10 + 80), *(_BYTE *)(v10 + 88), *(_BYTE *)(v10 + 89));

  v11 = v4 + v6[10];
  sub_14788(*(id *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(_QWORD *)(v11 + 48), *(_QWORD *)(v11 + 56), *(_QWORD *)(v11 + 64), *(void **)(v11 + 72), *(_QWORD *)(v11 + 80), *(_QWORD *)(v11 + 88), *(_QWORD *)(v11 + 96), *(_QWORD *)(v11 + 104), *(_WORD *)(v11 + 112));
  v12 = v4 + v6[11];
  sub_14788(*(id *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), *(_QWORD *)(v12 + 48), *(_QWORD *)(v12 + 56), *(_QWORD *)(v12 + 64), *(void **)(v12 + 72), *(_QWORD *)(v12 + 80), *(_QWORD *)(v12 + 88), *(_QWORD *)(v12 + 96), *(_QWORD *)(v12 + 104), *(_WORD *)(v12 + 112));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8)).n128_u64[0];
  return result;
}

_WORD *sub_3BC68(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  __int16 v97;
  char *v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  char *v105;

  *a1 = *a2;
  v3 = *(int *)(a3 + 24);
  v4 = (char *)a1 + v3;
  v105 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  v101 = (char *)a2 + v3;
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v5, v6);
  v103 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v7 = v103[5];
  v8 = &v4[v7];
  v9 = &v5[v7];
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v8[16] = v9[16];
  v10 = (void *)*((_QWORD *)v9 + 3);
  v11 = *((_QWORD *)v9 + 4);
  v12 = *((_QWORD *)v9 + 5);
  v13 = *((_QWORD *)v9 + 6);
  v15 = *((_QWORD *)v9 + 7);
  v14 = *((_QWORD *)v9 + 8);
  v16 = (void *)*((_QWORD *)v9 + 9);
  v17 = *((_QWORD *)v9 + 10);
  v18 = *((_QWORD *)v9 + 11);
  v91 = *((_QWORD *)v9 + 12);
  v96 = *((_QWORD *)v9 + 13);
  v97 = *((_WORD *)v9 + 56);
  sub_1472C(v10, v11, v12, v13, v15, v14, v16, v17, v18, v91, v96, v97);
  *((_QWORD *)v8 + 3) = v10;
  *((_QWORD *)v8 + 4) = v11;
  *((_QWORD *)v8 + 5) = v12;
  *((_QWORD *)v8 + 6) = v13;
  *((_QWORD *)v8 + 7) = v15;
  *((_QWORD *)v8 + 8) = v14;
  *((_QWORD *)v8 + 9) = v16;
  *((_QWORD *)v8 + 10) = v17;
  *((_QWORD *)v8 + 11) = v18;
  *((_QWORD *)v8 + 12) = v91;
  *((_QWORD *)v8 + 13) = v96;
  *((_WORD *)v8 + 56) = v97;
  v19 = v103[6];
  v20 = &v105[v19];
  v21 = &v101[v19];
  v22 = *(void **)v21;
  v23 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v21 + 2);
  v25 = *((_QWORD *)v21 + 3);
  v26 = *((_QWORD *)v21 + 4);
  v27 = *((_QWORD *)v21 + 5);
  v28 = (void *)*((_QWORD *)v21 + 6);
  v29 = *((_QWORD *)v21 + 7);
  v30 = *((_QWORD *)v21 + 8);
  v87 = *((_QWORD *)v21 + 9);
  v92 = *((_QWORD *)v21 + 10);
  LOBYTE(v96) = v21[88];
  LOBYTE(v97) = v21[89];
  sub_DDA0(*(void **)v21, v23, v24, v25, v26, v27, v28, v29, v30, v87, v92, v96, v97);
  *(_QWORD *)v20 = v22;
  *((_QWORD *)v20 + 1) = v23;
  *((_QWORD *)v20 + 2) = v24;
  *((_QWORD *)v20 + 3) = v25;
  *((_QWORD *)v20 + 4) = v26;
  *((_QWORD *)v20 + 5) = v27;
  *((_QWORD *)v20 + 6) = v28;
  *((_QWORD *)v20 + 7) = v29;
  *((_QWORD *)v20 + 8) = v30;
  *((_QWORD *)v20 + 9) = v87;
  *((_QWORD *)v20 + 10) = v92;
  v20[88] = v96;
  v20[89] = v97;
  v31 = v103[7];
  v32 = &v105[v31];
  v33 = &v101[v31];
  v34 = *(void **)v33;
  v35 = *((_QWORD *)v33 + 1);
  v36 = *((_QWORD *)v33 + 2);
  v37 = *((_QWORD *)v33 + 3);
  v38 = *((_QWORD *)v33 + 4);
  v39 = *((_QWORD *)v33 + 5);
  v40 = (void *)*((_QWORD *)v33 + 6);
  v41 = *((_QWORD *)v33 + 7);
  v42 = *((_QWORD *)v33 + 8);
  v88 = *((_QWORD *)v33 + 9);
  v93 = *((_QWORD *)v33 + 10);
  LOBYTE(v96) = v33[88];
  LOBYTE(v97) = v33[89];
  sub_DDA0(*(void **)v33, v35, v36, v37, v38, v39, v40, v41, v42, v88, v93, v96, v97);
  *(_QWORD *)v32 = v34;
  *((_QWORD *)v32 + 1) = v35;
  *((_QWORD *)v32 + 2) = v36;
  *((_QWORD *)v32 + 3) = v37;
  *((_QWORD *)v32 + 4) = v38;
  *((_QWORD *)v32 + 5) = v39;
  *((_QWORD *)v32 + 6) = v40;
  *((_QWORD *)v32 + 7) = v41;
  *((_QWORD *)v32 + 8) = v42;
  *((_QWORD *)v32 + 9) = v88;
  *((_QWORD *)v32 + 10) = v93;
  v32[88] = v96;
  v32[89] = v97;
  v43 = v103[8];
  v44 = &v105[v43];
  v45 = &v101[v43];
  v46 = *(void **)v45;
  v47 = *((_QWORD *)v45 + 1);
  v48 = *((_QWORD *)v45 + 2);
  v49 = *((_QWORD *)v45 + 3);
  v50 = *((_QWORD *)v45 + 4);
  v51 = *((_QWORD *)v45 + 5);
  v52 = (void *)*((_QWORD *)v45 + 6);
  v53 = *((_QWORD *)v45 + 7);
  v54 = *((_QWORD *)v45 + 8);
  v89 = *((_QWORD *)v45 + 9);
  v94 = *((_QWORD *)v45 + 10);
  LOBYTE(v96) = v45[88];
  LOBYTE(v97) = v45[89];
  sub_DDA0(*(void **)v45, v47, v48, v49, v50, v51, v52, v53, v54, v89, v94, v96, v97);
  *(_QWORD *)v44 = v46;
  *((_QWORD *)v44 + 1) = v47;
  *((_QWORD *)v44 + 2) = v48;
  *((_QWORD *)v44 + 3) = v49;
  *((_QWORD *)v44 + 4) = v50;
  *((_QWORD *)v44 + 5) = v51;
  *((_QWORD *)v44 + 6) = v52;
  *((_QWORD *)v44 + 7) = v53;
  *((_QWORD *)v44 + 8) = v54;
  *((_QWORD *)v44 + 9) = v89;
  *((_QWORD *)v44 + 10) = v94;
  v44[88] = v96;
  v44[89] = v97;
  v55 = v103[9];
  v56 = *(void **)&v101[v55];
  *(_QWORD *)&v105[v55] = v56;
  v57 = v103[10];
  v58 = &v105[v57];
  v59 = &v101[v57];
  *(_OWORD *)v58 = *(_OWORD *)v59;
  v58[16] = v59[16];
  v60 = *((_QWORD *)v59 + 5);
  v90 = *((_QWORD *)v59 + 4);
  v95 = (void *)*((_QWORD *)v59 + 3);
  v61 = *((_QWORD *)v59 + 6);
  v62 = *((_QWORD *)v59 + 7);
  v63 = *((_QWORD *)v59 + 8);
  v64 = (void *)*((_QWORD *)v59 + 9);
  v65 = *((_QWORD *)v59 + 11);
  v66 = *((_QWORD *)v59 + 12);
  v67 = *((_QWORD *)v59 + 13);
  v86 = *((_QWORD *)v59 + 10);
  LOWORD(v47) = *((_WORD *)v59 + 56);
  v68 = v56;
  sub_1472C(v95, v90, v60, v61, v62, v63, v64, v86, v65, v66, v67, v47);
  *((_QWORD *)v58 + 3) = v95;
  *((_QWORD *)v58 + 4) = v90;
  *((_QWORD *)v58 + 5) = v60;
  *((_QWORD *)v58 + 6) = v61;
  *((_QWORD *)v58 + 7) = v62;
  *((_QWORD *)v58 + 8) = v63;
  *((_QWORD *)v58 + 9) = v64;
  *((_QWORD *)v58 + 10) = v86;
  *((_QWORD *)v58 + 11) = v65;
  *((_QWORD *)v58 + 12) = v66;
  *((_QWORD *)v58 + 13) = v67;
  *((_WORD *)v58 + 56) = v47;
  v69 = v103[11];
  v70 = &v105[v69];
  v71 = &v101[v69];
  *(_OWORD *)v70 = *(_OWORD *)v71;
  v70[16] = v71[16];
  v72 = (void *)*((_QWORD *)v71 + 3);
  v73 = *((_QWORD *)v71 + 4);
  v74 = *((_QWORD *)v71 + 5);
  v75 = *((_QWORD *)v71 + 6);
  v76 = *((_QWORD *)v71 + 7);
  v77 = *((_QWORD *)v71 + 8);
  v78 = (void *)*((_QWORD *)v71 + 9);
  v79 = *((_QWORD *)v71 + 10);
  v80 = *((_QWORD *)v71 + 11);
  v102 = *((_QWORD *)v71 + 12);
  v104 = *((_QWORD *)v71 + 13);
  LOWORD(v105) = *((_WORD *)v71 + 56);
  sub_1472C(v72, v73, v74, v75, v76, v77, v78, v79, v80, v102, v104, (unsigned __int16)v105);
  *((_QWORD *)v70 + 3) = v72;
  *((_QWORD *)v70 + 4) = v73;
  *((_QWORD *)v70 + 5) = v74;
  *((_QWORD *)v70 + 6) = v75;
  *((_QWORD *)v70 + 7) = v76;
  *((_QWORD *)v70 + 8) = v77;
  *((_QWORD *)v70 + 9) = v78;
  *((_QWORD *)v70 + 10) = v79;
  *((_QWORD *)v70 + 11) = v80;
  *((_QWORD *)v70 + 12) = v102;
  *((_QWORD *)v70 + 13) = v104;
  *((_WORD *)v70 + 56) = (_WORD)v105;
  v81 = *(int *)(a3 + 28);
  v82 = (_QWORD *)((char *)a1 + v81);
  v83 = (_QWORD *)((char *)a2 + v81);
  v84 = v83[1];
  *v82 = *v83;
  v82[1] = v84;
  swift_bridgeObjectRetain(v84);
  return a1;
}

_BYTE *sub_3C100(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unsigned __int16 v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  char v101;
  char v102;
  uint64_t v103;
  void *v104;
  void *v105;
  id v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  __int128 v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  unsigned __int16 v130;
  uint64_t v131;
  _BYTE *v132;
  _BYTE *v133;
  __int128 v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  __int128 v152;
  uint64_t v153;
  unsigned __int16 v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  __int16 v171;
  unsigned __int16 v172;
  _BYTE *v176;
  uint64_t v177;
  int *v178;
  uint64_t v179;
  _BYTE *v180;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = *(int *)(a3 + 24);
  v4 = &a1[v3];
  v180 = &a1[v3];
  v5 = &a2[v3];
  v176 = &a2[v3];
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(v4, v5, v6);
  v178 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v7 = v178[5];
  v8 = &v4[v7];
  v9 = &v5[v7];
  v10 = v9[16];
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v8[16] = v10;
  v11 = (void *)*((_QWORD *)v9 + 3);
  v12 = *((_QWORD *)v9 + 4);
  v13 = *((_QWORD *)v9 + 5);
  v14 = *((_QWORD *)v9 + 6);
  v16 = *((_QWORD *)v9 + 7);
  v15 = *((_QWORD *)v9 + 8);
  v17 = (void *)*((_QWORD *)v9 + 9);
  v18 = *((_QWORD *)v9 + 10);
  v19 = *((_QWORD *)v9 + 11);
  v164 = *((_QWORD *)v9 + 12);
  v169 = *((_QWORD *)v9 + 13);
  v171 = *((_WORD *)v9 + 56);
  sub_1472C(v11, v12, v13, v14, v16, v15, v17, v18, v19, v164, v169, v171);
  v20 = (void *)*((_QWORD *)v8 + 3);
  v21 = *((_QWORD *)v8 + 4);
  v22 = *((_QWORD *)v8 + 5);
  v23 = *((_QWORD *)v8 + 6);
  v24 = *((_QWORD *)v8 + 7);
  v25 = *((_QWORD *)v8 + 8);
  v26 = (void *)*((_QWORD *)v8 + 9);
  v27 = *((_QWORD *)v8 + 10);
  v28 = *(_OWORD *)(v8 + 88);
  v29 = *((_QWORD *)v8 + 13);
  v30 = *((_WORD *)v8 + 56);
  *((_QWORD *)v8 + 3) = v11;
  *((_QWORD *)v8 + 4) = v12;
  *((_QWORD *)v8 + 5) = v13;
  *((_QWORD *)v8 + 6) = v14;
  *((_QWORD *)v8 + 7) = v16;
  *((_QWORD *)v8 + 8) = v15;
  *((_QWORD *)v8 + 9) = v17;
  *((_QWORD *)v8 + 10) = v18;
  *((_QWORD *)v8 + 11) = v19;
  *((_QWORD *)v8 + 12) = v164;
  *((_QWORD *)v8 + 13) = v169;
  *((_WORD *)v8 + 56) = v171;
  sub_14788(v20, v21, v22, v23, v24, v25, v26, v27, v28, *((uint64_t *)&v28 + 1), v29, v30);
  v31 = v178[6];
  v32 = &v180[v31];
  v33 = &v176[v31];
  v34 = *(void **)v33;
  v35 = *((_QWORD *)v33 + 1);
  v36 = *((_QWORD *)v33 + 2);
  v37 = *((_QWORD *)v33 + 3);
  v38 = *((_QWORD *)v33 + 4);
  v39 = *((_QWORD *)v33 + 5);
  v40 = (void *)*((_QWORD *)v33 + 6);
  v41 = *((_QWORD *)v33 + 7);
  v42 = *((_QWORD *)v33 + 8);
  v161 = *((_QWORD *)v33 + 9);
  v165 = *((_QWORD *)v33 + 10);
  LOBYTE(v169) = v33[88];
  LOBYTE(v171) = v33[89];
  sub_DDA0(*(void **)v33, v35, v36, v37, v38, v39, v40, v41, v42, v161, v165, v169, v171);
  v43 = *(void **)v32;
  v44 = *((_QWORD *)v32 + 1);
  v45 = *((_QWORD *)v32 + 2);
  v46 = *((_QWORD *)v32 + 3);
  v47 = *((_QWORD *)v32 + 4);
  v48 = *((_QWORD *)v32 + 5);
  v49 = (void *)*((_QWORD *)v32 + 6);
  v50 = *((_QWORD *)v32 + 7);
  v51 = *((_OWORD *)v32 + 4);
  v52 = *((_QWORD *)v32 + 10);
  v53 = v32[88];
  v54 = v32[89];
  *(_QWORD *)v32 = v34;
  *((_QWORD *)v32 + 1) = v35;
  *((_QWORD *)v32 + 2) = v36;
  *((_QWORD *)v32 + 3) = v37;
  *((_QWORD *)v32 + 4) = v38;
  *((_QWORD *)v32 + 5) = v39;
  *((_QWORD *)v32 + 6) = v40;
  *((_QWORD *)v32 + 7) = v41;
  *((_QWORD *)v32 + 8) = v42;
  *((_QWORD *)v32 + 9) = v161;
  *((_QWORD *)v32 + 10) = v165;
  v32[88] = v169;
  v32[89] = v171;
  sub_DCC8(v43, v44, v45, v46, v47, v48, v49, v50, v51, *((uint64_t *)&v51 + 1), v52, v53, v54);
  v55 = v178[7];
  v56 = &v180[v55];
  v57 = &v176[v55];
  v58 = *(void **)v57;
  v59 = *((_QWORD *)v57 + 1);
  v60 = *((_QWORD *)v57 + 2);
  v61 = *((_QWORD *)v57 + 3);
  v62 = *((_QWORD *)v57 + 4);
  v63 = *((_QWORD *)v57 + 5);
  v64 = (void *)*((_QWORD *)v57 + 6);
  v65 = *((_QWORD *)v57 + 7);
  v66 = *((_QWORD *)v57 + 8);
  v162 = *((_QWORD *)v57 + 9);
  v166 = *((_QWORD *)v57 + 10);
  LOBYTE(v169) = v57[88];
  LOBYTE(v171) = v57[89];
  sub_DDA0(*(void **)v57, v59, v60, v61, v62, v63, v64, v65, v66, v162, v166, v169, v171);
  v67 = *(void **)v56;
  v68 = *((_QWORD *)v56 + 1);
  v69 = *((_QWORD *)v56 + 2);
  v70 = *((_QWORD *)v56 + 3);
  v71 = *((_QWORD *)v56 + 4);
  v72 = *((_QWORD *)v56 + 5);
  v73 = (void *)*((_QWORD *)v56 + 6);
  v74 = *((_QWORD *)v56 + 7);
  v75 = *((_OWORD *)v56 + 4);
  v76 = *((_QWORD *)v56 + 10);
  v77 = v56[88];
  v78 = v56[89];
  *(_QWORD *)v56 = v58;
  *((_QWORD *)v56 + 1) = v59;
  *((_QWORD *)v56 + 2) = v60;
  *((_QWORD *)v56 + 3) = v61;
  *((_QWORD *)v56 + 4) = v62;
  *((_QWORD *)v56 + 5) = v63;
  *((_QWORD *)v56 + 6) = v64;
  *((_QWORD *)v56 + 7) = v65;
  *((_QWORD *)v56 + 8) = v66;
  *((_QWORD *)v56 + 9) = v162;
  *((_QWORD *)v56 + 10) = v166;
  v56[88] = v169;
  v56[89] = v171;
  sub_DCC8(v67, v68, v69, v70, v71, v72, v73, v74, v75, *((uint64_t *)&v75 + 1), v76, v77, v78);
  v79 = v178[8];
  v80 = &v180[v79];
  v81 = &v176[v79];
  v82 = *(void **)v81;
  v83 = *((_QWORD *)v81 + 1);
  v84 = *((_QWORD *)v81 + 2);
  v85 = *((_QWORD *)v81 + 3);
  v86 = *((_QWORD *)v81 + 4);
  v87 = *((_QWORD *)v81 + 5);
  v88 = (void *)*((_QWORD *)v81 + 6);
  v89 = *((_QWORD *)v81 + 7);
  v90 = *((_QWORD *)v81 + 8);
  v163 = *((_QWORD *)v81 + 9);
  v167 = *((_QWORD *)v81 + 10);
  LOBYTE(v169) = v81[88];
  LOBYTE(v171) = v81[89];
  sub_DDA0(*(void **)v81, v83, v84, v85, v86, v87, v88, v89, v90, v163, v167, v169, v171);
  v91 = *(void **)v80;
  v92 = *((_QWORD *)v80 + 1);
  v93 = *((_QWORD *)v80 + 2);
  v94 = *((_QWORD *)v80 + 3);
  v95 = *((_QWORD *)v80 + 4);
  v96 = *((_QWORD *)v80 + 5);
  v97 = (void *)*((_QWORD *)v80 + 6);
  v98 = *((_QWORD *)v80 + 7);
  v99 = *((_OWORD *)v80 + 4);
  v100 = *((_QWORD *)v80 + 10);
  v101 = v80[88];
  v102 = v80[89];
  *(_QWORD *)v80 = v82;
  *((_QWORD *)v80 + 1) = v83;
  *((_QWORD *)v80 + 2) = v84;
  *((_QWORD *)v80 + 3) = v85;
  *((_QWORD *)v80 + 4) = v86;
  *((_QWORD *)v80 + 5) = v87;
  *((_QWORD *)v80 + 6) = v88;
  *((_QWORD *)v80 + 7) = v89;
  *((_QWORD *)v80 + 8) = v90;
  *((_QWORD *)v80 + 9) = v163;
  *((_QWORD *)v80 + 10) = v167;
  v80[88] = v169;
  v80[89] = v171;
  sub_DCC8(v91, v92, v93, v94, v95, v96, v97, v98, v99, *((uint64_t *)&v99 + 1), v100, v101, v102);
  v103 = v178[9];
  v104 = *(void **)&v176[v103];
  v105 = *(void **)&v180[v103];
  *(_QWORD *)&v180[v103] = v104;
  v106 = v104;

  v107 = v178[10];
  v108 = &v180[v107];
  v109 = &v176[v107];
  v110 = *(_OWORD *)v109;
  v108[16] = v109[16];
  *(_OWORD *)v108 = v110;
  v111 = (void *)*((_QWORD *)v109 + 3);
  v112 = *((_QWORD *)v109 + 4);
  v113 = *((_QWORD *)v109 + 5);
  v114 = *((_QWORD *)v109 + 6);
  v115 = *((_QWORD *)v109 + 7);
  v116 = *((_QWORD *)v109 + 8);
  v117 = (void *)*((_QWORD *)v109 + 9);
  v118 = *((_QWORD *)v109 + 10);
  v119 = *((_QWORD *)v109 + 11);
  v168 = *((_QWORD *)v109 + 12);
  v170 = *((_QWORD *)v109 + 13);
  v172 = *((_WORD *)v109 + 56);
  sub_1472C(v111, v112, v113, v114, v115, v116, v117, v118, v119, v168, v170, v172);
  v120 = (void *)*((_QWORD *)v108 + 3);
  v121 = *((_QWORD *)v108 + 4);
  v122 = *((_QWORD *)v108 + 5);
  v123 = *((_QWORD *)v108 + 6);
  v124 = *((_QWORD *)v108 + 7);
  v125 = *((_QWORD *)v108 + 8);
  v126 = (void *)*((_QWORD *)v108 + 9);
  v127 = *((_QWORD *)v108 + 10);
  v128 = *(_OWORD *)(v108 + 88);
  v129 = *((_QWORD *)v108 + 13);
  v130 = *((_WORD *)v108 + 56);
  *((_QWORD *)v108 + 3) = v111;
  *((_QWORD *)v108 + 4) = v112;
  *((_QWORD *)v108 + 5) = v113;
  *((_QWORD *)v108 + 6) = v114;
  *((_QWORD *)v108 + 7) = v115;
  *((_QWORD *)v108 + 8) = v116;
  *((_QWORD *)v108 + 9) = v117;
  *((_QWORD *)v108 + 10) = v118;
  *((_QWORD *)v108 + 11) = v119;
  *((_QWORD *)v108 + 12) = v168;
  *((_QWORD *)v108 + 13) = v170;
  *((_WORD *)v108 + 56) = v172;
  sub_14788(v120, v121, v122, v123, v124, v125, v126, v127, v128, *((uint64_t *)&v128 + 1), v129, v130);
  v131 = v178[11];
  v132 = &v180[v131];
  v133 = &v176[v131];
  v134 = *(_OWORD *)v133;
  v132[16] = v133[16];
  *(_OWORD *)v132 = v134;
  v135 = (void *)*((_QWORD *)v133 + 3);
  v136 = *((_QWORD *)v133 + 4);
  v137 = *((_QWORD *)v133 + 5);
  v138 = *((_QWORD *)v133 + 6);
  v139 = *((_QWORD *)v133 + 7);
  v140 = *((_QWORD *)v133 + 8);
  v141 = (void *)*((_QWORD *)v133 + 9);
  v142 = *((_QWORD *)v133 + 10);
  v143 = *((_QWORD *)v133 + 11);
  v177 = *((_QWORD *)v133 + 12);
  v179 = *((_QWORD *)v133 + 13);
  LOWORD(v180) = *((_WORD *)v133 + 56);
  sub_1472C(v135, v136, v137, v138, v139, v140, v141, v142, v143, v177, v179, (unsigned __int16)v180);
  v144 = (void *)*((_QWORD *)v132 + 3);
  v145 = *((_QWORD *)v132 + 4);
  v146 = *((_QWORD *)v132 + 5);
  v147 = *((_QWORD *)v132 + 6);
  v148 = *((_QWORD *)v132 + 7);
  v149 = *((_QWORD *)v132 + 8);
  v150 = (void *)*((_QWORD *)v132 + 9);
  v151 = *((_QWORD *)v132 + 10);
  v152 = *(_OWORD *)(v132 + 88);
  v153 = *((_QWORD *)v132 + 13);
  v154 = *((_WORD *)v132 + 56);
  *((_QWORD *)v132 + 3) = v135;
  *((_QWORD *)v132 + 4) = v136;
  *((_QWORD *)v132 + 5) = v137;
  *((_QWORD *)v132 + 6) = v138;
  *((_QWORD *)v132 + 7) = v139;
  *((_QWORD *)v132 + 8) = v140;
  *((_QWORD *)v132 + 9) = v141;
  *((_QWORD *)v132 + 10) = v142;
  *((_QWORD *)v132 + 11) = v143;
  *((_QWORD *)v132 + 12) = v177;
  *((_QWORD *)v132 + 13) = v179;
  *((_WORD *)v132 + 56) = (_WORD)v180;
  sub_14788(v144, v145, v146, v147, v148, v149, v150, v151, v152, *((uint64_t *)&v152 + 1), v153, v154);
  v155 = *(int *)(a3 + 28);
  v156 = &a1[v155];
  v157 = &a2[v155];
  *v156 = *v157;
  v158 = v157[1];
  v159 = v156[1];
  v156[1] = v158;
  swift_bridgeObjectRetain(v158);
  swift_bridgeObjectRelease(v159);
  return a1;
}

_WORD *sub_3C6E0(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = *((_OWORD *)v13 + 5);
  *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
  *((_OWORD *)v12 + 5) = v14;
  *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
  *((_WORD *)v12 + 56) = *((_WORD *)v13 + 56);
  v15 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v15;
  v16 = *((_OWORD *)v13 + 3);
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *((_OWORD *)v12 + 3) = v16;
  v17 = v10[6];
  v18 = &v7[v17];
  v19 = &v8[v17];
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *(_OWORD *)(v18 + 74) = *(_OWORD *)(v19 + 74);
  v21 = *((_OWORD *)v19 + 4);
  v22 = *((_OWORD *)v19 + 2);
  *((_OWORD *)v18 + 3) = *((_OWORD *)v19 + 3);
  *((_OWORD *)v18 + 4) = v21;
  *((_OWORD *)v18 + 2) = v22;
  v23 = v10[7];
  v24 = &v7[v23];
  v25 = &v8[v23];
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *(_OWORD *)(v24 + 74) = *(_OWORD *)(v25 + 74);
  v27 = *((_OWORD *)v25 + 4);
  v28 = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 4) = v27;
  *((_OWORD *)v24 + 2) = v28;
  v29 = v10[8];
  v30 = &v7[v29];
  v31 = &v8[v29];
  v32 = *((_OWORD *)v31 + 3);
  *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 3) = v32;
  *((_OWORD *)v30 + 4) = *((_OWORD *)v31 + 4);
  *(_OWORD *)(v30 + 74) = *(_OWORD *)(v31 + 74);
  v33 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v33;
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  v34 = v10[10];
  v35 = &v7[v34];
  v36 = &v8[v34];
  v37 = *((_OWORD *)v36 + 5);
  *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
  *((_OWORD *)v35 + 5) = v37;
  *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
  *((_WORD *)v35 + 56) = *((_WORD *)v36 + 56);
  v38 = *((_OWORD *)v36 + 1);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *((_OWORD *)v35 + 1) = v38;
  v39 = *((_OWORD *)v36 + 3);
  *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
  *((_OWORD *)v35 + 3) = v39;
  v40 = v10[11];
  v41 = &v7[v40];
  v42 = &v8[v40];
  v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v43;
  v44 = *((_OWORD *)v42 + 3);
  *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
  *((_OWORD *)v41 + 3) = v44;
  *((_WORD *)v41 + 56) = *((_WORD *)v42 + 56);
  v45 = *((_OWORD *)v42 + 6);
  v46 = *((_OWORD *)v42 + 4);
  *((_OWORD *)v41 + 5) = *((_OWORD *)v42 + 5);
  *((_OWORD *)v41 + 6) = v45;
  *((_OWORD *)v41 + 4) = v46;
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_BYTE *sub_3C88C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  __int16 v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  unsigned __int16 v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  char v31;
  char v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  char v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  char v51;
  char v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  char v63;
  char v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  char v71;
  char v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  char v83;
  char v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  uint64_t v92;
  __int16 v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  unsigned __int16 v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  __int16 v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  __int128 v118;
  uint64_t v119;
  unsigned __int16 v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for ModernTitleHeaderView.Style(0);
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v12[16] = v13[16];
  v14 = *((_QWORD *)v13 + 13);
  v15 = *((_WORD *)v13 + 56);
  v16 = (void *)*((_QWORD *)v12 + 3);
  v17 = *((_QWORD *)v12 + 4);
  v18 = *((_QWORD *)v12 + 5);
  v19 = *((_QWORD *)v12 + 6);
  v20 = *((_QWORD *)v12 + 7);
  v21 = *((_QWORD *)v12 + 8);
  v22 = (void *)*((_QWORD *)v12 + 9);
  v23 = *((_QWORD *)v12 + 10);
  v24 = *(_OWORD *)(v12 + 88);
  v25 = *((_QWORD *)v12 + 13);
  v26 = *((_WORD *)v12 + 56);
  *(_OWORD *)(v12 + 24) = *(_OWORD *)(v13 + 24);
  *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *((_QWORD *)v12 + 13) = v14;
  *((_WORD *)v12 + 56) = v15;
  sub_14788(v16, v17, v18, v19, v20, v21, v22, v23, v24, *((uint64_t *)&v24 + 1), v25, v26);
  v27 = v10[6];
  v28 = &v7[v27];
  v29 = &v8[v27];
  v30 = *((_QWORD *)v29 + 10);
  v31 = v29[88];
  v32 = v29[89];
  v33 = *(void **)v28;
  v34 = *((_QWORD *)v28 + 1);
  v35 = *((_QWORD *)v28 + 2);
  v36 = *((_QWORD *)v28 + 3);
  v37 = *((_QWORD *)v28 + 4);
  v38 = *((_QWORD *)v28 + 5);
  v39 = (void *)*((_QWORD *)v28 + 6);
  v40 = *((_QWORD *)v28 + 7);
  v41 = *((_OWORD *)v28 + 4);
  v42 = *((_QWORD *)v28 + 10);
  v43 = v28[88];
  v44 = v28[89];
  v45 = *((_OWORD *)v29 + 1);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v45;
  v46 = *((_OWORD *)v29 + 3);
  *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
  *((_OWORD *)v28 + 3) = v46;
  *((_OWORD *)v28 + 4) = *((_OWORD *)v29 + 4);
  *((_QWORD *)v28 + 10) = v30;
  v28[88] = v31;
  v28[89] = v32;
  sub_DCC8(v33, v34, v35, v36, v37, v38, v39, v40, v41, *((uint64_t *)&v41 + 1), v42, v43, v44);
  v47 = v10[7];
  v48 = &v7[v47];
  v49 = &v8[v47];
  v50 = *((_QWORD *)v49 + 10);
  v51 = v49[88];
  v52 = v49[89];
  v53 = *(void **)v48;
  v54 = *((_QWORD *)v48 + 1);
  v55 = *((_QWORD *)v48 + 2);
  v56 = *((_QWORD *)v48 + 3);
  v57 = *((_QWORD *)v48 + 4);
  v58 = *((_QWORD *)v48 + 5);
  v59 = (void *)*((_QWORD *)v48 + 6);
  v60 = *((_QWORD *)v48 + 7);
  v61 = *((_OWORD *)v48 + 4);
  v62 = *((_QWORD *)v48 + 10);
  v63 = v48[88];
  v64 = v48[89];
  v65 = *((_OWORD *)v49 + 1);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *((_OWORD *)v48 + 1) = v65;
  v66 = *((_OWORD *)v49 + 3);
  *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
  *((_OWORD *)v48 + 3) = v66;
  *((_OWORD *)v48 + 4) = *((_OWORD *)v49 + 4);
  *((_QWORD *)v48 + 10) = v50;
  v48[88] = v51;
  v48[89] = v52;
  sub_DCC8(v53, v54, v55, v56, v57, v58, v59, v60, v61, *((uint64_t *)&v61 + 1), v62, v63, v64);
  v67 = v10[8];
  v68 = &v7[v67];
  v69 = &v8[v67];
  v70 = *((_QWORD *)v69 + 10);
  v71 = v69[88];
  v72 = v69[89];
  v73 = *(void **)v68;
  v74 = *((_QWORD *)v68 + 1);
  v75 = *((_QWORD *)v68 + 2);
  v76 = *((_QWORD *)v68 + 3);
  v77 = *((_QWORD *)v68 + 4);
  v78 = *((_QWORD *)v68 + 5);
  v79 = (void *)*((_QWORD *)v68 + 6);
  v80 = *((_QWORD *)v68 + 7);
  v81 = *((_OWORD *)v68 + 4);
  v82 = *((_QWORD *)v68 + 10);
  v83 = v68[88];
  v84 = v68[89];
  v85 = *((_OWORD *)v69 + 1);
  *(_OWORD *)v68 = *(_OWORD *)v69;
  *((_OWORD *)v68 + 1) = v85;
  v86 = *((_OWORD *)v69 + 3);
  *((_OWORD *)v68 + 2) = *((_OWORD *)v69 + 2);
  *((_OWORD *)v68 + 3) = v86;
  *((_OWORD *)v68 + 4) = *((_OWORD *)v69 + 4);
  *((_QWORD *)v68 + 10) = v70;
  v68[88] = v71;
  v68[89] = v72;
  sub_DCC8(v73, v74, v75, v76, v77, v78, v79, v80, v81, *((uint64_t *)&v81 + 1), v82, v83, v84);
  v87 = v10[9];
  v88 = *(void **)&v7[v87];
  *(_QWORD *)&v7[v87] = *(_QWORD *)&v8[v87];

  v89 = v10[10];
  v90 = &v7[v89];
  v91 = &v8[v89];
  *(_OWORD *)v90 = *(_OWORD *)v91;
  v90[16] = v91[16];
  v92 = *((_QWORD *)v91 + 13);
  v93 = *((_WORD *)v91 + 56);
  v94 = (void *)*((_QWORD *)v90 + 3);
  v95 = *((_QWORD *)v90 + 4);
  v96 = *((_QWORD *)v90 + 5);
  v97 = *((_QWORD *)v90 + 6);
  v98 = *((_QWORD *)v90 + 7);
  v99 = *((_QWORD *)v90 + 8);
  v100 = (void *)*((_QWORD *)v90 + 9);
  v101 = *((_QWORD *)v90 + 10);
  v102 = *(_OWORD *)(v90 + 88);
  v103 = *((_QWORD *)v90 + 13);
  v104 = *((_WORD *)v90 + 56);
  *(_OWORD *)(v90 + 24) = *(_OWORD *)(v91 + 24);
  *(_OWORD *)(v90 + 40) = *(_OWORD *)(v91 + 40);
  *(_OWORD *)(v90 + 56) = *(_OWORD *)(v91 + 56);
  *(_OWORD *)(v90 + 72) = *(_OWORD *)(v91 + 72);
  *(_OWORD *)(v90 + 88) = *(_OWORD *)(v91 + 88);
  *((_QWORD *)v90 + 13) = v92;
  *((_WORD *)v90 + 56) = v93;
  sub_14788(v94, v95, v96, v97, v98, v99, v100, v101, v102, *((uint64_t *)&v102 + 1), v103, v104);
  v105 = v10[11];
  v106 = &v7[v105];
  v107 = &v8[v105];
  *(_OWORD *)v106 = *(_OWORD *)v107;
  v106[16] = v107[16];
  v108 = *((_QWORD *)v107 + 13);
  v109 = *((_WORD *)v107 + 56);
  v110 = (void *)*((_QWORD *)v106 + 3);
  v111 = *((_QWORD *)v106 + 4);
  v112 = *((_QWORD *)v106 + 5);
  v113 = *((_QWORD *)v106 + 6);
  v114 = *((_QWORD *)v106 + 7);
  v115 = *((_QWORD *)v106 + 8);
  v116 = (void *)*((_QWORD *)v106 + 9);
  v117 = *((_QWORD *)v106 + 10);
  v118 = *(_OWORD *)(v106 + 88);
  v119 = *((_QWORD *)v106 + 13);
  v120 = *((_WORD *)v106 + 56);
  *(_OWORD *)(v106 + 24) = *(_OWORD *)(v107 + 24);
  *(_OWORD *)(v106 + 40) = *(_OWORD *)(v107 + 40);
  *(_OWORD *)(v106 + 56) = *(_OWORD *)(v107 + 56);
  *(_OWORD *)(v106 + 72) = *(_OWORD *)(v107 + 72);
  *(_OWORD *)(v106 + 88) = *(_OWORD *)(v107 + 88);
  *((_QWORD *)v106 + 13) = v108;
  *((_WORD *)v106 + 56) = v109;
  sub_14788(v110, v111, v112, v113, v114, v115, v116, v117, v118, *((uint64_t *)&v118 + 1), v119, v120);
  v121 = *(int *)(a3 + 28);
  v122 = &a1[v121];
  v123 = (uint64_t *)&a2[v121];
  v125 = *v123;
  v124 = v123[1];
  v126 = v122[1];
  *v122 = v125;
  v122[1] = v124;
  swift_bridgeObjectRelease(v126);
  return a1;
}

uint64_t sub_3CC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3CC20);
}

uint64_t sub_3CC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ModernTitleHeaderView.Style(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_3CCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3CCB0);
}

uint64_t sub_3CCB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ModernTitleHeaderView.Style(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_3CD30(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_2F0FA0;
  v4[1] = &unk_2F0FD0;
  result = type metadata accessor for ModernTitleHeaderView.Style(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_2F0FE8;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

void **sub_3CDB4(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ShelfCellListSeparatorMode(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    if (v13(v10, 1, v11))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19F8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 24);
    v17 = (char *)v7 + v16;
    v18 = (char *)a2 + v16;
    *(_OWORD *)v17 = *(_OWORD *)v18;
    v17[16] = v18[16];
  }
  return v7;
}

uint64_t sub_3CED0(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

void **sub_3CF4C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v6;
  if (v12(v9, 1, v10))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  return a1;
}

void **sub_3D040(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19F8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_OWORD *)v20;
  v19[16] = v20[16];
  *(_OWORD *)v19 = v21;
  return a1;
}

_QWORD *sub_3D180(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  return a1;
}

void **sub_3D268(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  return a1;
}

uint64_t sub_3D3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3D3B0);
}

uint64_t sub_3D3B0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19F8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_3D430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3D43C);
}

char *sub_3D43C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19F8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_3D4B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_3D544(319, (unint64_t *)&unk_3D1D00, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfCellListSeparatorMode);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_2F1010;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_3D544(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_3D590(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_3D5CC(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_3D600(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 0x11)
    return swift_retain(result);
  return result;
}

uint64_t sub_3D618@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  NSString v8;
  Class isa;
  id v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t result;
  double v28;
  double v29;
  uint64_t v30;

  v8 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(a1, "layoutAttributesForSupplementaryElementOfKind:atIndexPath:", v8, isa);

  if (v10)
  {
    objc_msgSend(v10, "frame");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v19 = a1;
    objc_msgSend(v19, "layoutMargins");
    v21 = v12 + v20;
    objc_msgSend(v19, "layoutMargins");
    v23 = v22;
    objc_msgSend(v19, "layoutMargins");
    v25 = v24;

    v26 = type metadata accessor for IndexPath(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(a2, v26);
    v28 = v16 - (v23 + v25);
    v29 = v21 + a4;
  }
  else
  {

    v30 = type metadata accessor for IndexPath(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(a2, v30);
    v19 = 0;
    v29 = 0.0;
    v14 = 0;
    v28 = 0.0;
    v18 = 0;
  }
  *(_QWORD *)a3 = v19;
  *(double *)(a3 + 8) = v29;
  *(_QWORD *)(a3 + 16) = v14;
  *(double *)(a3 + 24) = v28;
  *(_QWORD *)(a3 + 32) = v18;
  return result;
}

id *sub_3D798(id *a1)
{

  return a1;
}

uint64_t sub_3D7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for ModernShelf(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 40) & ~v8;
  v12 = v3 | v8 | 7;
  v10 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + v5));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v10 + 8, v12);
}

uint64_t sub_3D8B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5 = v2[2];
  v6 = v2[3];
  v7 = *(_QWORD *)(type metadata accessor for ModernShelf.ItemPresentation(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(type metadata accessor for ModernShelf(0) - 8);
  v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_31D5C(a1, a2, v2[4], (uint64_t)v2 + v8, (uint64_t)v2 + v9, (uint64_t)v2 + v11, *(_QWORD *)((char *)v2 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFF8)), v5, v6);
}

uint64_t sub_3D970(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3D9B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_32128(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(void **)(v1 + 80), *(_QWORD *)(v1 + 16), a1, *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ModernShelf(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 40, v5);
}

double sub_3DA6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for ModernShelf(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_328D8(a1, v1 + v4, v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_3DAC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ModernShelf(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_3DB3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ModernShelf(0) - 8) + 80);
  return sub_3299C(*(_QWORD *)(v0 + 16), v0 + 24, v0 + ((v1 + 64) & ~v1));
}

uint64_t sub_3DB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for DeletableExtension(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for ModernShelf(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 40) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + v5));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_3DC38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for DeletableExtension(0);
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ModernShelf(0) - 8) + 80);
  v6 = v1 + v4;
  v7 = v1 + ((v4 + v5 + 40) & ~v5);
  v8 = (void (*)(uint64_t, uint64_t, uint64_t))DeletableExtension.delete.getter();
  v10 = v9;
  v8(v6, v7, a1);
  return swift_release(v10);
}

uint64_t sub_3DCD0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_3DCFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_35F40(a1, a2, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), a3, *(double *)(v3 + 32));
}

uint64_t sub_3DD08(_QWORD *a1)
{
  uint64_t v1;

  return sub_36ACC(a1, v1, 1);
}

uint64_t sub_3DD24(_QWORD *a1)
{
  uint64_t v1;

  return sub_36ACC(a1, v1, 0);
}

void destroy for Shadow(id *a1)
{

}

uint64_t initializeWithCopy for ShelvesViewProvider.Page(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ShelvesViewProvider.Page(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ShelvesViewProvider.Page(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelvesViewProvider.Page(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelvesViewProvider.Page(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelvesViewProvider.Page()
{
  return &type metadata for ShelvesViewProvider.Page;
}

ValueMetadata *type metadata accessor for ShelvesViewProvider.HorizontalSectionInfo()
{
  return &type metadata for ShelvesViewProvider.HorizontalSectionInfo;
}

uint64_t UITabBarItem.navigationTab.getter()
{
  void *v0;

  return NavigationTab.init(intValue:)(objc_msgSend(v0, "tag"));
}

double UIResponder.nearestFlowController.getter@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(__int128 *__return_ptr, uint64_t, uint64_t);
  id v9;
  double result;
  id v11;
  void *v12;
  int *v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16[2];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FlowControllerProvider);
  if (v5)
    v6 = v5;
  else
    v6 = 0;
  if (!v5)
    v1 = 0;
  if (v1)
  {
    v7 = swift_getObjectType();
    v8 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v6 + 16);
    v9 = v2;
    v8(&v14, v7, v6);

    if (v15)
    {
      sub_1B738(&v14, (uint64_t)v16);
      sub_1B738(v16, a1);
      return result;
    }
    sub_3E038((uint64_t)&v14);
  }
  v11 = objc_msgSend(v2, "nextResponder");
  if (v11)
  {
    v12 = v11;
    UIResponder.nearestFlowController.getter();

  }
  else
  {
    swift_beginAccess(&off_3D3FF8, v16, 0, 0);
    v13 = off_3D3FF8;
    if (off_3D3FF8)
    {
      *(_QWORD *)(a1 + 24) = type metadata accessor for RootFlowController(0);
      *(_QWORD *)(a1 + 32) = &protocol witness table for BaseFlowController;
      *(_QWORD *)a1 = v13;
      *(_QWORD *)&result = swift_retain(v13).n128_u64[0];
    }
    else
    {
      *(_QWORD *)(a1 + 32) = 0;
      result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
  }
  return result;
}

uint64_t sub_3E038(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D31A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ImpressMetricsModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (**v19)();
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;

  v3 = v2;
  v6 = type metadata accessor for ImpressMetricsModifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3E50C(v2, (uint64_t)v9);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = v14 + v8;
  v16 = v13 | 7;
  v17 = swift_allocObject(&unk_37C030, v15, v13 | 7);
  sub_3E554((uint64_t)v9, v17 + v14);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1ED0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, a1, v18);
  v19 = (uint64_t (**)())&v12[*(int *)(v10 + 36)];
  *v19 = sub_3E598;
  v19[1] = (uint64_t (*)())v17;
  v19[2] = 0;
  v19[3] = 0;
  sub_3E50C(v3, (uint64_t)v9);
  v20 = swift_allocObject(&unk_37C058, v15, v16);
  sub_3E554((uint64_t)v9, v20 + v14);
  sub_D184((uint64_t)v12, a2, &qword_3D1EC0);
  v21 = (_QWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D1ED8) + 36));
  *v21 = 0;
  v21[1] = 0;
  v21[2] = sub_3E75C;
  v21[3] = v20;
  return sub_D1D4((uint64_t)v12, &qword_3D1EC0);
}

uint64_t type metadata accessor for ImpressMetricsModifier(uint64_t a1)
{
  uint64_t result;

  result = qword_3D1F38;
  if (!qword_3D1F38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ImpressMetricsModifier);
  return result;
}

_QWORD *sub_3E264(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  v3 = __chkstk_darwin(v2);
  v29 = (uint64_t)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v27 - v6;
  __chkstk_darwin(v5);
  v9 = (char *)&v27 - v8;
  v10 = type metadata accessor for ImpressionMetrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v28 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (char *)(a1 + *(int *)(type metadata accessor for ImpressMetricsModifier(0) + 36));
  v14 = *v13;
  v15 = *((_QWORD *)v13 + 1);
  LOBYTE(v30) = *v13;
  v31 = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  result = State.wrappedValue.getter(&v32, v16);
  if ((v32 & 1) == 0)
  {
    LOBYTE(v30) = v14;
    v31 = v15;
    LOBYTE(v32) = 1;
    result = (_QWORD *)State.wrappedValue.setter(&v32, v16);
    v18 = *(_QWORD *)(a1 + 48);
    if (v18)
    {
      v30 = *(_QWORD *)(a1 + 32);
      v19 = type metadata accessor for LegacyLockup(0);
      v20 = sub_89A0(&qword_3D1FB0, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
      v21 = swift_retain(v18);
      ViewModel.getImpressionMetrics(with:)(7, v19, v20, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        swift_release(v18);
        return (_QWORD *)sub_D1D4((uint64_t)v9, &qword_3D0EE0);
      }
      else
      {
        v22 = v28;
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v28, v9, v10);
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v22, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
        v23 = v18;
        v24 = v29;
        sub_D184((uint64_t)v7, v29, &qword_3D0EE0);
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8);
        State.wrappedValue.setter(v24, v25);
        sub_D1D4((uint64_t)v7, &qword_3D0EE0);
        DynamicImpressionsCalculator.addElement(_:in:at:)(v22, *(_QWORD *)(a1 + 40), *(double *)a1, *(double *)(a1 + 8), *(double *)(a1 + 16), *(double *)(a1 + 24));
        v26 = swift_release(v23);
        return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v22, v10, v26);
      }
    }
  }
  return result;
}

uint64_t sub_3E50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImpressMetricsModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_3E554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImpressMetricsModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_3E598()
{
  return sub_3F71C((uint64_t (*)(uint64_t))sub_3E264);
}

_QWORD *sub_3E5A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (char *)(a1 + *(int *)(type metadata accessor for ImpressMetricsModifier(0) + 36));
  v10 = *v9;
  v11 = *((_QWORD *)v9 + 1);
  v18 = *v9;
  v19 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1FA8);
  result = State.wrappedValue.getter(&v20, v12);
  if (v20 == 1)
  {
    v18 = v10;
    v19 = v11;
    LOBYTE(v20) = 0;
    result = (_QWORD *)State.wrappedValue.setter(&v20, v12);
    v14 = *(_QWORD *)(a1 + 48);
    if (v14)
    {
      swift_retain(*(_QWORD *)(a1 + 48));
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8);
      State.wrappedValue.getter(v4, v15);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        swift_release(v14);
        return (_QWORD *)sub_D1D4((uint64_t)v4, &qword_3D0EE0);
      }
      else
      {
        (*(void (**)(char *, _QWORD *, uint64_t))(v6 + 32))(v8, v4, v5);
        DynamicImpressionsCalculator.removeElement(_:)(v8);
        v16 = swift_release(v14);
        return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v16);
      }
    }
  }
  return result;
}

uint64_t sub_3E75C()
{
  return sub_3F71C((uint64_t (*)(uint64_t))sub_3E5A4);
}

uint64_t sub_3E770()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_3E788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (**v19)();
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;

  v4 = v3;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(a1);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3E50C(v3, (uint64_t)v9);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = v14 + v8;
  v16 = v13 | 7;
  v17 = swift_allocObject(&unk_37C080, v15, v13 | 7);
  sub_3E554((uint64_t)v9, v17 + v14);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1ED0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, a1, v18);
  v19 = (uint64_t (**)())&v12[*(int *)(v10 + 36)];
  *v19 = sub_3E598;
  v19[1] = (uint64_t (*)())v17;
  v19[2] = 0;
  v19[3] = 0;
  sub_3E50C(v4, (uint64_t)v9);
  v20 = swift_allocObject(&unk_37C0A8, v15, v16);
  sub_3E554((uint64_t)v9, v20 + v14);
  sub_D184((uint64_t)v12, a3, &qword_3D1EC0);
  v21 = (_QWORD *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D1ED8) + 36));
  *v21 = 0;
  v21[1] = 0;
  v21[2] = sub_3E75C;
  v21[3] = v20;
  return sub_D1D4((uint64_t)v12, &qword_3D1EC0);
}

uint64_t View.impressMetrics(model:impressionIndex:impressionsCalculator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64x2_t *v16;
  uint64_t v17;
  __n128 v18;
  __int8 *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[9];
  uint64_t v26;

  v24 = a5;
  v23 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v23 - v12;
  v14 = type metadata accessor for ImpressMetricsModifier(0);
  __chkstk_darwin(v14);
  v16 = (int64x2_t *)((char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
  v16->i64[0] = 0;
  v16->i64[1] = 0;
  v16[1] = vdupq_n_s64(0x4049000000000000uLL);
  v16[2].i64[0] = a1;
  v16[2].i64[1] = a2;
  v16[3].i64[0] = a3;
  sub_D184((uint64_t)v13, (uint64_t)v11, &qword_3D0EE0);
  swift_retain(a3);
  v18 = swift_retain(a1);
  State.init(wrappedValue:)(v11, v8, v18);
  sub_D1D4((uint64_t)v13, &qword_3D0EE0);
  v19 = &v16->i8[*(int *)(v14 + 36)];
  v25[0] = 0;
  State.init(wrappedValue:)(v25, &type metadata for Bool, v20);
  v21 = v26;
  *v19 = v25[1];
  *((_QWORD *)v19 + 1) = v21;
  View.modifier<A>(_:)(v16, v23, v14, v24);
  return sub_3EAEC((uint64_t)v16);
}

uint64_t sub_3EAEC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImpressMetricsModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3EB28(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ImpressMetricsModifier.body(content:)>>, 1);
}

uint64_t initializeBufferWithCopyOfBuffer for ImpressMetricsModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v19 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v9 = a2[4];
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v8;
    v10 = a2[6];
    v11 = *(int *)(a3 + 32);
    v12 = (char *)(a1 + v11);
    v13 = (char *)a2 + v11;
    *(_QWORD *)(a1 + 48) = v10;
    v14 = type metadata accessor for ImpressionMetrics(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v15 + 48);
    swift_retain(v9);
    v17 = swift_retain(v10);
    if (v16(v13, 1, v14, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8) + 28);
    v21 = *(_QWORD *)&v13[v20];
    *(_QWORD *)&v12[v20] = v21;
    v22 = *(int *)(a3 + 36);
    v23 = v4 + v22;
    v24 = (uint64_t)a2 + v22;
    *(_BYTE *)v23 = *(_BYTE *)v24;
    v19 = *(_QWORD *)(v24 + 8);
    *(_QWORD *)(v23 + 8) = v19;
    swift_retain(v21);
  }
  swift_retain(v19);
  return v4;
}

double destroy for ImpressMetricsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  swift_release(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 48));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8);
  swift_release(*(_QWORD *)(v4 + *(int *)(v7 + 28)));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 36) + 8)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for ImpressMetricsModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  v10 = *(int *)(a3 + 32);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48);
  swift_retain(v8);
  v16 = swift_retain(v9);
  if (v15(v12, 1, v13, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8) + 28);
  v19 = *(_QWORD *)&v12[v18];
  *(_QWORD *)&v11[v18] = v19;
  v20 = *(int *)(a3 + 36);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v23 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 8) = v23;
  swift_retain(v19);
  swift_retain(v23);
  return a1;
}

_QWORD *assignWithCopy for ImpressMetricsModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = a2[4];
  v7 = a1[4];
  a1[4] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[5] = a2[5];
  v8 = a1[6];
  v9 = a2[6];
  a1[6] = v9;
  swift_retain(v9);
  swift_release(v8);
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8) + 28);
  v20 = *(_QWORD *)&v11[v19];
  v21 = *(_QWORD *)&v12[v19];
  *(_QWORD *)&v11[v19] = v21;
  swift_retain(v21);
  swift_release(v20);
  v22 = *(int *)(a3 + 36);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *v23 = *v24;
  v25 = *((_QWORD *)v23 + 1);
  v26 = *((_QWORD *)v24 + 1);
  *((_QWORD *)v23 + 1) = v26;
  swift_retain(v26);
  swift_release(v25);
  return a1;
}

uint64_t initializeWithTake for ImpressMetricsModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 32);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for ImpressionMetrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8);
  *(_QWORD *)&v8[*(int *)(v13 + 28)] = *(_QWORD *)&v9[*(int *)(v13 + 28)];
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t assignWithTake for ImpressMetricsModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_release(v8);
  v10 = *(int *)(a3 + 32);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8) + 28);
  v20 = *(_QWORD *)&v11[v19];
  *(_QWORD *)&v11[v19] = *(_QWORD *)&v12[v19];
  swift_release(v20);
  v21 = *(int *)(a3 + 36);
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v24 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  swift_release(v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImpressMetricsModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3F2B0);
}

uint64_t sub_3F2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ImpressMetricsModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3F33C);
}

uint64_t sub_3F33C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_3F3B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = " ";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = &unk_2F11A0;
  sub_3F454(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_2F11B8;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

void sub_3F454(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D1F48)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D0EE0);
    v3 = type metadata accessor for State(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D1F48);
  }
}

uint64_t sub_3F4AC()
{
  return sub_3F4F4(&qword_3D1F88, &qword_3D1ED8, (void (*)(void))sub_3F4D8);
}

uint64_t sub_3F4D8()
{
  return sub_3F4F4(&qword_3D1F90, &qword_3D1EC0, (void (*)(void))sub_3F560);
}

uint64_t sub_3F4F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_3F560()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D1F98;
  if (!qword_3D1F98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D1ED0);
    result = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3D1F98);
  }
  return result;
}

uint64_t sub_3F5AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for ImpressMetricsModifier(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_89A0(&qword_3D1FA0, type metadata accessor for ImpressMetricsModifier, (uint64_t)&protocol conformance descriptor for ImpressMetricsModifier);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for ImpressMetricsModifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  v6 = v0 + v4 + *(int *)(v1 + 32);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1EC8);
  swift_release(*(_QWORD *)(v6 + *(int *)(v9 + 28)));
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 36) + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_3F71C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ImpressMetricsModifier(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

void sub_3F758()
{
  qword_3D1FB8 = 0x4076800000000000;
}

void sub_3F76C()
{
  qword_3D1FC0 = 0x4049000000000000;
}

void sub_3F77C()
{
  qword_3D1FC8 = 0x4038000000000000;
}

void sub_3F78C()
{
  qword_3D1FD0 = 0x407F400000000000;
}

BOOL sub_3F7A0()
{
  void *v0;
  id v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v2 & 1) != 0)
    return 0;
  v3 = sub_40C14();
  if ((SizeClass.isWideHorizontal.getter(v3) & 1) != 0)
    return 0;
  v4 = UpsellInformation.backgroundArtworkIsFromEditorial.getter();
  if ((v4 & 1) == 0)
    return 0;
  v5 = UpsellInformation.showGridArtworks.getter(v4);
  if ((static SizeClass.isPhone8RatioOrSmaller.getter() & 1) != 0)
  {
    swift_bridgeObjectRelease(v5);
    return 1;
  }
  else
  {
    v7 = *(_QWORD *)(v5 + 16);
    swift_bridgeObjectRelease(v5);
    return v7 < 2;
  }
}

double sub_3F850()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  UpsellInformation.hasTwoSubscriptionPlans.getter();
  v0 = sub_40C14();
  v1 = UpsellInformation.showGridArtworks.getter(v0);
  if ((static SizeClass.isPhone8RatioOrSmaller.getter() & 1) != 0)
  {
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRelease(v1);
    if (v2 >= 2 && qword_3CF0F0 != -1)
      swift_once(&qword_3CF0F0, sub_3F76C);
  }
  return 540.0;
}

id sub_3F930(uint64_t a1, void *a2)
{
  _BYTE *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  objc_class *v34;
  id v35;
  __int128 v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  objc_super v41;
  __int128 v42[3];

  v39 = a2;
  v38 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v4 = *(_QWORD *)(v38 - 8);
  v5 = __chkstk_darwin(v38);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_purchases] = _swiftEmptyArrayStorage;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_didApplyArtwork] = 0;
  v12 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_artworkHeader];
  *v12 = 0;
  v12[1] = 0;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___sizeClass] = 8;
  v13 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___previousWidth];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v15 = v2;
  BaseObjectGraph.inject<A>(_:)(v42, v14, v14);
  v16 = type metadata accessor for UpsellDismissingActionRunner();
  v17 = swift_allocObject(v16, 40, 7);
  v40 = v17 + 32;
  v37 = v42[0];
  swift_unknownObjectWeakInit(v17 + 32, 0);
  *(_OWORD *)(v17 + 16) = v37;
  v18 = sub_89A0(&qword_3D2120, (uint64_t (*)(uint64_t))type metadata accessor for UpsellDismissingActionRunner, (uint64_t)&unk_2F1270);
  *(_QWORD *)&v42[0] = v17;
  *((_QWORD *)&v42[0] + 1) = v18;
  v19 = BaseObjectGraph.satisfying<A>(_:with:)(v14, v42, v14);
  static DynamicImpressionsTracker.Configuration.default.getter();
  v20 = BaseObjectGraph.addingImpressionsTracker(with:)(v11);
  v21 = swift_release(v19);
  v22 = (*(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v21);
  static ImpressionsCalculator.Configuration.half.getter(v22);
  v23 = BaseObjectGraph.addingImpressionsCalculator(with:)(v7);
  v24 = swift_release(v20);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v7, v38, v24);
  v25 = type metadata accessor for MetricsController(0);
  v26 = swift_allocObject(&unk_37C208, 24, 7);
  v27 = v39;
  *(_QWORD *)(v26 + 16) = v39;
  v28 = v27;
  v29 = BaseObjectGraph.satisfying<A>(_:with:)(v25, sub_4360C, v26, v25);
  swift_release(v23);
  swift_release(v26);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_objectGraph] = v29;
  swift_retain(v29);
  BaseObjectGraph.inject<A>(_:)(v42, v25, v25);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_metricsController] = *(_QWORD *)&v42[0];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2128);
  BaseObjectGraph.inject<A>(_:)(v42, v30, v30);
  sub_1B738(v42, (uint64_t)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_purchaseController]);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_upsellInformation] = v28;
  v31 = objc_allocWithZone((Class)type metadata accessor for UpsellInfoContainerView());
  v32 = v28;
  swift_retain(v29);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_infoContainerView] = sub_12BE00(v33, v32);

  v34 = (objc_class *)type metadata accessor for UpsellViewController();
  v41.receiver = v15;
  v41.super_class = v34;
  v35 = objc_msgSendSuper2(&v41, "initWithNibName:bundle:", 0, 0);
  swift_release(v29);
  swift_release(a1);

  swift_unknownObjectWeakAssign(v40, v35);
  swift_release(v17);
  return v35;
}

uint64_t sub_3FC9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetricsController(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_retain(a1);
  v9 = MetricsController.init(asPartOf:)(v8);
  UpsellInformation.pageMetrics.getter();
  v10 = type metadata accessor for PageMetrics(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  result = MetricsController.pageMetrics.setter(v6);
  *a2 = v9;
  return result;
}

void sub_3FE10(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t ObjectType;
  unsigned int v13;
  unsigned __int8 v14;
  objc_super v15;

  v2 = v1;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for UpsellViewController();
  objc_msgSendSuper2(&v15, "viewWillAppear:", a1 & 1);
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_didApplyArtwork;
  if ((v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_didApplyArtwork] & 1) == 0)
  {
    v5 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_artworkHeader];
    if (v5)
    {
      v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_artworkHeader + 8];
      v7 = v5;
      v8 = objc_msgSend(v2, "view");
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "setNeedsLayout");

        v10 = objc_msgSend(v2, "view");
        if (v10)
        {
          v11 = v10;
          objc_msgSend(v10, "layoutIfNeeded");

          ObjectType = swift_getObjectType();
          v13 = sub_40C14();
          v14 = sub_4111C();
          sub_51450(v13, v14 & 1, ObjectType, v6);

          goto LABEL_6;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
LABEL_6:
    v2[v4] = 1;
  }
}

void sub_3FF90(void *a1, uint64_t a2, uint64_t a3, const char **a4, uint64_t a5)
{
  const char *v8;
  id v9;
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for UpsellViewController();
  v8 = *a4;
  v9 = v10.receiver;
  objc_msgSendSuper2(&v10, v8, a3);
  MetricsController.observe(lifecycleEvent:)(a5);

}

void sub_40058()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  char *v8;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  v2 = v1;
  objc_msgSend(v1, "setPreservesSuperviewLayoutMargins:", 0);

  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  v4 = v3;
  if (qword_3CF0F8 != -1)
    swift_once(&qword_3CF0F8, sub_3F77C);
  objc_msgSend(v4, "setLayoutMargins:", UIEdgeInsets.init(topBottom:sides:)(0.0, *(double *)&qword_3D1FC8));

  v5 = objc_msgSend(v0, "view");
  if (!v5)
    goto LABEL_13;
  v6 = v5;
  if (qword_3CEFF0 != -1)
    swift_once(&qword_3CEFF0, sub_DFAC);
  objc_msgSend(v6, "setBackgroundColor:", qword_3D0898);

  v7 = objc_msgSend(v0, "traitCollection");
  v8 = (char *)objc_msgSend(v7, "userInterfaceIdiom");

  if (v8 == (_BYTE *)&dword_0 + 1)
  {
    sub_3F850();
    objc_msgSend(v0, "setPreferredContentSize:", 540.0);
  }
  sub_401DC();
  sub_41440();
}

void sub_401DC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_infoContainerView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = v2;
  objc_msgSend(v2, "addSubview:", v1);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v5 = swift_allocObject(v4, 56, 7);
  *(_OWORD *)(v5 + 16) = xmmword_2EFC80;
  v6 = objc_msgSend(v1, "leadingAnchor");
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "layoutMarginsGuide");

  v10 = objc_msgSend(v9, "leadingAnchor");
  v11 = objc_msgSend(v6, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v5 + 32) = v11;
  v12 = objc_msgSend(v1, "trailingAnchor");
  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "layoutMarginsGuide");

  v16 = objc_msgSend(v15, "trailingAnchor");
  v17 = objc_msgSend(v12, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v5 + 40) = v17;
  v18 = objc_msgSend(v1, "bottomAnchor");
  v19 = objc_msgSend(v0, "view");
  if (v19)
  {
    v20 = v19;
    v21 = (void *)objc_opt_self(NSLayoutConstraint);
    v22 = objc_msgSend(v20, "bottomAnchor");

    v23 = objc_msgSend(v18, "constraintEqualToAnchor:", v22);
    *(_QWORD *)(v5 + 48) = v23;
    specialized Array._endMutation()(v24);
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

    return;
  }
LABEL_9:
  __break(1u);
}

double sub_404BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2100);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((UpsellInformation.isForConfirmationSheet.getter(v4) & 1) == 0)
  {
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_purchaseController + 24);
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_purchaseController + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_purchaseController), v8);
    dispatch thunk of PurchaseControllerProtocol.recentlyEntitledProductsPublisher.getter(v8, v9);
    v10 = swift_allocObject(&unk_37C168, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v0);
    v11 = sub_10EDC(&qword_3D2108, &qword_3D2100, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v12 = Publisher<>.sink(receiveValue:)(sub_43130, v10, v2, v11);
    v13 = swift_release(v10);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v3 + 8))(v6, v2, v13);
    v14 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_purchases;
    swift_beginAccess(v14, v18, 33, 0);
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
    v16 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v14, v15, v16);
    swift_endAccess(v18);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

void sub_40658(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t Strong;
  void *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  __n128 v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t aBlock[5];
  uint64_t v73;
  char v74[32];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v69 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v70 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v68 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)v60 - v14;
  v16 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v74, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v18 = (void *)Strong;
    v67 = v11;
    v64 = v9;
    v65 = v8;
    v63 = sub_E710(0, &qword_3D3810, OS_os_log_ptr);
    ((void (*)(void))static OS_os_log.purchases.getter)();
    swift_bridgeObjectRetain_n(v16, 2);
    v19 = v18;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v66 = v7;
    if (v22)
    {
      v23 = swift_slowAlloc(22, -1);
      v61 = swift_slowAlloc(64, -1);
      v71 = v16;
      aBlock[0] = v61;
      *(_DWORD *)v23 = 136315394;
      v62 = v4;
      v60[1] = v23 + 4;
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2110);
      v25 = v5;
      v26 = sub_10EDC(&qword_3D2118, &qword_3D2110, (uint64_t)&protocol conformance descriptor for Set<A>);
      v27 = sub_D254();
      v28 = v26;
      v5 = v25;
      v29 = Sequence<>.joined(separator:)(44, 0xE100000000000000, v24, v28, v27);
      v31 = v30;
      v71 = sub_37E78(v29, v30, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, aBlock);
      swift_bridgeObjectRelease_n(v16, 2);
      swift_bridgeObjectRelease(v31);
      *(_WORD *)(v23 + 12) = 2080;
      v33 = UpsellInformation.productId.getter(v32);
      if (v34)
      {
        v35 = v34;
      }
      else
      {
        v33 = 0;
        v35 = 0xE000000000000000;
      }
      v71 = sub_37E78(v33, v35, aBlock);
      v4 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, aBlock);

      swift_bridgeObjectRelease(v35);
      _os_log_impl(&dword_0, v20, v21, "Got purchase list %s and we're displaying product %s", (uint8_t *)v23, 0x16u);
      v36 = v61;
      swift_arrayDestroy(v61, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
    }
    v37 = *(void (**)(char *, uint64_t))(v70 + 8);
    v38 = v67;
    v37(v15, v67);
    swift_bridgeObjectRetain(v16);
    v39 = v19;
    v40 = sub_43424(v16, v39);

    v41 = *(_QWORD *)(v40 + 16);
    v42 = swift_release(v40);
    if (v41)
    {
      v43 = v68;
      v44 = static OS_os_log.purchases.getter(v42);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v47 = 0;
        _os_log_impl(&dword_0, v45, v46, "A purchase was made for the product we are upselling, dismissing", v47, 2u);
        swift_slowDealloc(v47, -1, -1);
      }

      v37(v43, v38);
      sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
      v49 = (void *)static OS_dispatch_queue.main.getter(v48);
      v50 = swift_allocObject(&unk_37C1B8, 24, 7);
      *(_QWORD *)(v50 + 16) = v39;
      aBlock[4] = (uint64_t)sub_435D0;
      v73 = v50;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_24360;
      aBlock[3] = (uint64_t)&block_descriptor_13;
      v51 = _Block_copy(aBlock);
      v52 = v73;
      v53 = v39;
      v54 = swift_release(v52);
      v55 = v69;
      static DispatchQoS.unspecified.getter(v54);
      aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
      v56 = sub_89A0((unint64_t *)&qword_3D2FD0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
      v58 = sub_10EDC((unint64_t *)&qword_3D2FE0, (uint64_t *)&unk_3D4DA0, (uint64_t)&protocol conformance descriptor for [A]);
      v59 = v66;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v57, v58, v4, v56);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v55, v59, v51);
      _Block_release(v51);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v59, v4);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v55, v65);
    }
    else
    {

    }
  }
}

uint64_t sub_40C14()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Width;
  CGRect v13;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___sizeClass;
  result = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___sizeClass];
  if ((_DWORD)result == 8)
  {
    result = (uint64_t)objc_msgSend(v0, "view");
    if (result)
    {
      v3 = (void *)result;
      objc_msgSend((id)result, "bounds");
      v5 = v4;
      v7 = v6;
      v9 = v8;
      v11 = v10;

      v13.origin.x = v5;
      v13.origin.y = v7;
      v13.size.width = v9;
      v13.size.height = v11;
      Width = CGRectGetWidth(v13);
      result = SizeClass.init(width:)(Width);
      v0[v1] = result;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_40CB8()
{
  char *v0;
  CGFloat *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  CGRect v12;

  v1 = (CGFloat *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___previousWidth];
  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___previousWidth + 8] & 1) != 0)
  {
    v2 = objc_msgSend(v0, "view");
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "bounds");
      v5 = v4;
      v7 = v6;
      v9 = v8;
      v11 = v10;

      v12.origin.x = v5;
      v12.origin.y = v7;
      v12.size.width = v9;
      v12.size.height = v11;
      *v1 = CGRectGetWidth(v12);
      *((_BYTE *)v1 + 8) = 0;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_40D64()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Width;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Class v24;
  id v25;
  char *v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  id v39;
  void *v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat *v50;
  void *v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  uint64_t ObjectType;
  unsigned int v58;
  unsigned __int8 v59;
  id v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;

  v1 = v0;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  objc_msgSend(v2, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v61.origin.x = v5;
  v61.origin.y = v7;
  v61.size.width = v9;
  v61.size.height = v11;
  Width = CGRectGetWidth(v61);
  v13 = SizeClass.init(width:)(Width);
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___sizeClass;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___sizeClass] = v13;
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_infoContainerView];
  v16 = (void *)sub_40C14();
  v17 = (void *)objc_opt_self(NSLayoutConstraint);
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_viewConstraints;
  v19 = *(_QWORD *)(v15 + OBJC_IVAR____TtC23ShelfKitCollectionViews23UpsellInfoContainerView_viewConstraints);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v19);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v21 = sub_12D974(v16);
  v22 = *(_QWORD *)(v15 + v18);
  *(_QWORD *)(v15 + v18) = v21;
  swift_bridgeObjectRelease(v22);
  v23 = *(_QWORD *)(v15 + v18);
  swift_bridgeObjectRetain(v23);
  v24 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "activateConstraints:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v25 = objc_msgSend(v1, "traitCollection");
  v26 = (char *)objc_msgSend(v25, "userInterfaceIdiom");

  if (v26 != (_BYTE *)&dword_0 + 1)
    return;
  sub_40CB8();
  v28 = v27;
  v29 = objc_msgSend(v1, "view");
  if (!v29)
    goto LABEL_14;
  v30 = v29;
  objc_msgSend(v29, "bounds");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v62.origin.x = v32;
  v62.origin.y = v34;
  v62.size.width = v36;
  v62.size.height = v38;
  if (v28 == CGRectGetWidth(v62))
    return;
  v39 = objc_msgSend(v1, "view");
  if (!v39)
    goto LABEL_15;
  v40 = v39;
  objc_msgSend(v39, "bounds");
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;

  v63.origin.x = v42;
  v63.origin.y = v44;
  v63.size.width = v46;
  v63.size.height = v48;
  v49 = CGRectGetWidth(v63);
  v50 = (CGFloat *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___previousWidth];
  *v50 = v49;
  *((_BYTE *)v50 + 8) = 0;
  if ((sub_4111C() & 1) != 0)
  {
    sub_3F850();
    objc_msgSend(v1, "setPreferredContentSize:", 540.0);
  }
  sub_41440();
  v51 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_artworkHeader];
  if (v51)
  {
    v52 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_artworkHeader + 8];
    v60 = v51;
    v53 = objc_msgSend(v1, "view");
    if (v53)
    {
      v54 = v53;
      objc_msgSend(v53, "setNeedsLayout");

      v55 = objc_msgSend(v1, "view");
      if (v55)
      {
        v56 = v55;
        objc_msgSend(v55, "layoutIfNeeded");

        ObjectType = swift_getObjectType();
        v58 = v1[v14];
        v59 = sub_4111C();
        sub_51450(v58, v59 & 1, ObjectType, v52);

        return;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
}

id sub_4111C()
{
  void *v0;
  id v1;
  char *v2;
  id result;
  void *v4;
  id v5;
  char *v6;
  id v7;
  char *v8;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    result = objc_msgSend(v0, "presentingViewController");
    if (!result)
      return result;
    v4 = result;
    v5 = objc_msgSend(v0, "traitCollection");
    v6 = (char *)objc_msgSend(v5, "horizontalSizeClass");

    if (v6 == (_BYTE *)&dword_0 + 1)
    {
      v7 = objc_msgSend(v4, "traitCollection");
      v8 = (char *)objc_msgSend(v7, "horizontalSizeClass");

      return (id)(v8 == (_BYTE *)&dword_0 + 2);
    }

  }
  return 0;
}

char *sub_41210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_upsellInformation);
  if ((UpsellInformation.backgroundArtworkIsFromEditorial.getter(v3) & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_objectGraph);
    objc_allocWithZone((Class)type metadata accessor for UpsellEditorialHeader());
    v8 = v6;
    swift_retain(v7);
    return sub_528F4(v8, v7);
  }
  else
  {
    UpsellInformation.logoArtwork.getter();
    v10 = type metadata accessor for ArtworkModel(0);
    v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10);
    sub_D1D4((uint64_t)v5, &qword_3D0A58);
    if (v11 == 1)
    {
      v12 = sub_40C14();
      if ((SizeClass.isWideHorizontal.getter(v12) & 1) != 0)
      {
        v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_objectGraph);
        objc_allocWithZone((Class)type metadata accessor for UpsellSquareFallbackHeader());
        v14 = v6;
        swift_retain(v13);
        return sub_52D78(v14, v13);
      }
      else
      {
        v17 = static SizeClass.isPhone8RatioOrSmaller.getter();
        v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_objectGraph);
        if ((v17 & 1) != 0)
        {
          objc_allocWithZone((Class)type metadata accessor for UpsellSquareFallbackCompactHeader());
          v19 = v6;
          swift_retain(v18);
          return sub_5432C(v19, v18);
        }
        else
        {
          objc_allocWithZone((Class)type metadata accessor for UpsellFallbackCompactHeader());
          v20 = v6;
          swift_retain(v18);
          return sub_53CA8(v20, v18);
        }
      }
    }
    else
    {
      v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_objectGraph);
      objc_allocWithZone((Class)type metadata accessor for UpsellLogoFallbackHeader());
      v16 = v6;
      swift_retain(v15);
      return sub_53418(v16, v15);
    }
  }
}

void sub_41440()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  BOOL v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  objc_class *v35;
  id v36;
  __C::UILayoutPriority v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  __C::UILayoutPriority v43;
  NSLayoutConstraint v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  objc_class *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  id v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  Class isa;
  char *v83;
  uint64_t v84;
  uint64_t (**v85)();
  uint64_t v86;
  uint64_t v87;
  char *v88;
  id v89;
  uint64_t v90;
  __n128 v91;
  void *v92;
  id v93;
  _QWORD *v94;
  uint64_t v95;
  NSLayoutConstraint v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  id v100;
  id v101;
  id v102;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_artworkHeader];
  v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_artworkHeader];
  if (v3)
    objc_msgSend(v3, "removeFromSuperview");
  v4 = sub_41210();
  v6 = v5;
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v8 = v7;
  objc_msgSend(v7, "addSubview:", v4);

  v9 = sub_3F7A0();
  v10 = objc_msgSend(v4, "leadingAnchor");
  v11 = objc_msgSend(v0, "view");
  v12 = v11;
  v98 = v6;
  v99 = v2;
  if (v9)
  {
    if (!v11)
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v13 = objc_msgSend(v11, "leadingAnchor");

    v14 = objc_msgSend(v10, "anchorWithOffsetToAnchor:", v13);
    v15 = objc_msgSend(v4, "trailingAnchor");
    v16 = objc_msgSend(v1, "view");
    if (!v16)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v17 = v16;
    v18 = objc_msgSend(v16, "trailingAnchor");

    v19 = objc_msgSend(v15, "anchorWithOffsetToAnchor:", v18);
    v20 = objc_msgSend(v1, "view");
    if (!v20)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v21 = v20;
    v22 = objc_msgSend(v20, "widthAnchor");

    v100 = objc_msgSend(v14, "constraintEqualToAnchor:multiplier:", v22, 0.14);
    v23 = objc_msgSend(v1, "view");
    if (!v23)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v24 = v23;
    v25 = objc_msgSend(v23, "widthAnchor");

    v26 = objc_msgSend(v19, "constraintEqualToAnchor:multiplier:", v25, -0.14);
  }
  else
  {
    if (!v11)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v27 = objc_msgSend(v11, "leadingAnchor");

    v100 = objc_msgSend(v10, "constraintEqualToAnchor:", v27);
    v14 = objc_msgSend(v4, "trailingAnchor");
    v28 = objc_msgSend(v1, "view");
    if (!v28)
    {
LABEL_46:
      __break(1u);
      return;
    }
    v29 = v28;
    v19 = objc_msgSend(v28, "trailingAnchor");

    v26 = objc_msgSend(v14, "constraintEqualToAnchor:", v19);
  }

  v30 = OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar;
  v31 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar], "leadingAnchor");
  v32 = objc_msgSend(v1, "view");
  if (!v32)
    goto LABEL_38;
  v33 = v32;
  v34 = objc_msgSend(v32, "leadingAnchor");

  v35 = (objc_class *)&selRef_accessibilityContextButton;
  v36 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);

  v37.rawValue = static UILayoutPriority.highestBreakable.getter();
  v96.super.isa = NSLayoutConstraint.withPriority(priority:)(v37).super.isa;

  v97 = v30;
  v38 = objc_msgSend(*(id *)&v4[v30], "trailingAnchor");
  v39 = objc_msgSend(v1, "view");
  if (!v39)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "trailingAnchor");

  v42 = objc_msgSend(v38, "constraintEqualToAnchor:", v41);
  v43.rawValue = static UILayoutPriority.highestBreakable.getter();
  v44.super.isa = NSLayoutConstraint.withPriority(priority:)(v43).super.isa;

  v45 = v100;
  v101 = v26;
  v46 = objc_msgSend(v4, "topAnchor");
  v47 = objc_msgSend(v1, "view");
  if (!v47)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v48 = v47;
  v49 = objc_msgSend(v47, "topAnchor");

  v50 = objc_msgSend(v46, "constraintEqualToAnchor:", v49);
  v51 = objc_msgSend(v4, "bottomAnchor");
  v52 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_infoContainerView], "topAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

  v54 = _swiftEmptyArrayStorage;
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    v55 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8;
    v56 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8));
    v57 = v56 + 6;
    if (!__OFADD__(v56, 6))
      goto LABEL_18;
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if ((uint64_t)_swiftEmptyArrayStorage < 0)
    v94 = _swiftEmptyArrayStorage;
  else
    v94 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v95 = _CocoaArrayWrapper.endIndex.getter(v94);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v57 = v95 + 6;
  if (__OFADD__(v95, 6))
    goto LABEL_35;
LABEL_18:
  v58 = sub_215E80(v57, 1);
  specialized Array._endMutation()(v58);
  v35 = v96.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
  v54 = *(_QWORD **)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v55 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if ((unint64_t)v54 >= v55 >> 1)
LABEL_36:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, (char *)v54 + 1, 1);
  v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v35);
  specialized Array._endMutation()(v59);
  v60 = v44.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
  v62 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v61 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v62 >= v61 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
  v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
  specialized Array._endMutation()(v63);
  v64 = v45;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
  v66 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v65 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v66 >= v65 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
  v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v64);
  specialized Array._endMutation()(v67);
  v68 = v101;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
  v70 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v69 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v70 >= v69 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1);
  v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v68);
  specialized Array._endMutation()(v71);
  v72 = v50;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v72);
  v74 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v73 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v74 >= v73 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v74 + 1, 1);
  v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v74, v72);
  specialized Array._endMutation()(v75);
  v76 = v53;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v76);
  v78 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v77 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v78 >= v77 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v77 > 1, v78 + 1, 1);
  v79 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v78, v76);
  specialized Array._endMutation()(v79);

  v80 = sub_424D8(v4);
  sub_1F6D9C((uint64_t)v80);
  v81 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v81, "activateConstraints:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  v83 = *(char **)&v4[v97];
  v84 = swift_allocObject(&unk_37C168, 24, 7);
  swift_unknownObjectWeakInit(v84 + 16, v1);
  v85 = (uint64_t (**)())&v83[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_dismissHandler];
  v86 = *(_QWORD *)&v83[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_dismissHandler];
  v87 = *(_QWORD *)&v83[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_dismissHandler + 8];
  *v85 = sub_430D8;
  v85[1] = (uint64_t (*)())v84;
  v88 = v83;
  swift_retain_n(v84, 2);
  sub_1D618(v86, v87);
  v89 = sub_122F38();
  objc_msgSend(v89, "removeTarget:action:forControlEvents:", 0, 0, 64);

  sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
  v90 = swift_allocObject(&unk_37C190, 24, 7);
  swift_unknownObjectWeakInit(v90 + 16, v88);
  v92 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v91, 0, 0, 0, sub_430E0, v90);
  v93 = sub_122F38();
  objc_msgSend(v93, "addAction:forControlEvents:", v92, 64);

  swift_release_n(v84, 2);
  v102 = *(id *)v99;
  *(_QWORD *)v99 = v4;
  *((_QWORD *)v99 + 1) = v98;

}

uint64_t sub_41E3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t Strong;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  unsigned int *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  __n128 v60;
  void *v61;
  void *v62;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[24];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  char v82[24];
  char v83[24];
  __int128 v84;
  __int128 v85;

  v2 = type metadata accessor for MetricsData(0);
  v66 = *(_QWORD *)(v2 - 8);
  v67 = v2;
  __chkstk_darwin(v2);
  v65 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D20F8);
  __chkstk_darwin(v4);
  v70 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageMetrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v64 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v64 - v14;
  v16 = a1 + 16;
  swift_beginAccess(a1 + 16, v83, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong
    && (v18 = (void *)Strong,
        v19 = objc_retain(*(id *)(Strong
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_upsellInformation)),
        v18,
        UpsellInformation.pageMetrics.getter(),
        v19,
        v20 = PageMetrics.pageFields.getter(),
        (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6),
        v20))
  {
    if (*(_QWORD *)(v20 + 16) && (v21 = sub_36BA4(0x644965676170, 0xE600000000000000), (v22 & 1) != 0))
    {
      sub_1D66C(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&v84);
    }
    else
    {
      v84 = 0u;
      v85 = 0u;
    }
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_beginAccess(v16, v82, 0, 0);
  v23 = swift_unknownObjectWeakLoadStrong(v16);
  if (v23)
  {
    v24 = (void *)v23;
    v25 = *(id *)(v23 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_upsellInformation);

    v26 = UpsellInformation.productId.getter();
    v68 = v27;
    v69 = v26;

  }
  else
  {
    v68 = 0;
    v69 = 0;
  }
  swift_beginAccess(v16, &v79, 0, 0);
  v28 = swift_unknownObjectWeakLoadStrong(v16);
  if (v28
    && (v29 = (void *)v28,
        v30 = *(id *)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_upsellInformation),
        v29,
        UpsellInformation.pageMetrics.getter(),
        v30,
        v31 = PageMetrics.pageFields.getter(),
        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6),
        v31))
  {
    if (*(_QWORD *)(v31 + 16) && (v32 = sub_36BA4(0x6C725565676170, 0xE700000000000000), (v33 & 1) != 0))
    {
      sub_1D66C(*(_QWORD *)(v31 + 56) + 32 * v32, (uint64_t)&v80);
    }
    else
    {
      v80 = 0u;
      v81 = 0u;
    }
    swift_bridgeObjectRelease(v31);
  }
  else
  {
    v80 = 0u;
    v81 = 0u;
  }
  swift_beginAccess(v16, &v76, 0, 0);
  v34 = swift_unknownObjectWeakLoadStrong(v16);
  if (v34
    && (v35 = (void *)v34,
        v36 = *(id *)(v34 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_upsellInformation),
        v35,
        UpsellInformation.pageMetrics.getter(),
        v36,
        v37 = PageMetrics.pageFields.getter(),
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6),
        v37))
  {
    if (*(_QWORD *)(v37 + 16) && (v38 = sub_36BA4(0x6174654465676170, 0xEB00000000736C69), (v39 & 1) != 0))
    {
      sub_1D66C(*(_QWORD *)(v37 + 56) + 32 * v38, (uint64_t)&v77);
    }
    else
    {
      v77 = 0u;
      v78 = 0u;
    }
    swift_bridgeObjectRelease(v37);
  }
  else
  {
    v77 = 0u;
    v78 = 0u;
  }
  v41 = v68;
  v40 = v69;
  swift_beginAccess(v16, &v75, 0, 0);
  v42 = swift_unknownObjectWeakLoadStrong(v16);
  if (v42
    && (v43 = (void *)v42,
        v44 = *(id *)(v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_upsellInformation),
        v43,
        LOBYTE(v43) = UpsellInformation.isForConfirmationSheet.getter(),
        v44,
        (v43 & 1) != 0))
  {
    v45 = (unsigned int *)&enum case for MetricsPageType.prompt(_:);
  }
  else
  {
    v45 = (unsigned int *)&enum case for MetricsPageType.upsell(_:);
  }
  v46 = *v45;
  v47 = type metadata accessor for MetricsPageType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v70, v46, v47);
  type metadata accessor for MetricsPageType(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v70, 0, 1, v47);
  sub_430E8((uint64_t)&v84, (uint64_t)v73);
  if (v74)
  {
    v48 = swift_dynamicCast(&v71, v73, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v48)
      v49 = v71;
    else
      v49 = 0;
    if (v48)
      v50 = v72;
    else
      v50 = 0;
  }
  else
  {
    sub_D1D4((uint64_t)v73, &qword_3D1A70);
    v49 = 0;
    v50 = 0;
  }
  sub_430E8((uint64_t)&v80, (uint64_t)v73);
  if (v74)
  {
    v51 = swift_dynamicCast(&v71, v73, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v51)
      v52 = v71;
    else
      v52 = 0;
    if (v51)
      v53 = v72;
    else
      v53 = 0;
  }
  else
  {
    sub_D1D4((uint64_t)v73, &qword_3D1A70);
    v52 = 0;
    v53 = 0;
  }
  type metadata accessor for ClickMetricsEvent(0);
  v54 = (uint64_t)v70;
  v55 = static ClickMetricsEvent.upsellDismissClickEvent(pageType:pageDetails:pageId:pageUrl:channelAdamId:targetId:)(v70, &v77, v49, v50, v52, v53, v40, v41, 0, 0);
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v41);
  sub_D1D4(v54, &qword_3D20F8);
  swift_beginAccess(v16, v73, 0, 0);
  v56 = swift_unknownObjectWeakLoadStrong(v16);
  if (v56)
  {
    v57 = (void *)v56;
    v58 = *(_QWORD *)(v56 + OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_metricsController);
    swift_retain(v58);

    v59 = v65;
    dispatch thunk of MetricsEvent.metricsData.getter();
    MetricsController.process(_:)(v59);
    v60 = swift_release(v58);
    (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v59, v67, v60);
  }
  swift_beginAccess(v16, &v71, 0, 0);
  v61 = (void *)swift_unknownObjectWeakLoadStrong(v16);
  if (v61)
  {
    v62 = v61;
    objc_msgSend(v61, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  swift_release(v55);
  sub_D1D4((uint64_t)&v77, &qword_3D1A70);
  sub_D1D4((uint64_t)&v80, &qword_3D1A70);
  return sub_D1D4((uint64_t)&v84, &qword_3D1A70);
}

id sub_424D8(void *a1)
{
  void *v1;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id result;
  void *v21;
  id v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  float v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  Class isa;
  id v36;
  id v37;
  uint64_t v38;

  v3 = objc_msgSend(v1, "traitCollection");
  v4 = (char *)objc_msgSend(v3, "userInterfaceIdiom");

  if (v4 == (_BYTE *)&dword_4 + 1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v6 = swift_allocObject(v5, 40, 7);
    *(_OWORD *)(v6 + 16) = xmmword_2F11D0;
    v7 = objc_msgSend(a1, "heightAnchor");
    v8 = sub_40C14();
    v9 = UpsellInformation.showGridArtworks.getter(v8);
    if ((static SizeClass.isPhone8RatioOrSmaller.getter() & 1) != 0)
    {
      swift_bridgeObjectRelease(v9);
      v10 = 252.0;
    }
    else
    {
      v14 = *(_QWORD *)(v9 + 16);
      swift_bridgeObjectRelease(v9);
      v10 = 275.0;
      if (v14 < 2)
        v10 = 252.0;
    }
    v15 = objc_msgSend(v7, "constraintEqualToConstant:", v10);

    *(_QWORD *)(v6 + 32) = v15;
    goto LABEL_24;
  }
  if ((sub_4111C() & 1) != 0)
  {
    if (qword_3CF0E8 != -1)
      swift_once(&qword_3CF0E8, sub_3F758);
    v11 = *(double *)&qword_3D1FB8;
    v12 = sub_40C14();
    v13 = UpsellInformation.showGridArtworks.getter(v12);
    if ((static SizeClass.isPhone8RatioOrSmaller.getter() & 1) != 0)
    {
      swift_bridgeObjectRelease(v13);
    }
    else
    {
      v24 = *(_QWORD *)(v13 + 16);
      swift_bridgeObjectRelease(v13);
      if (v24 >= 2)
      {
        if (qword_3CF0F0 != -1)
          swift_once(&qword_3CF0F0, sub_3F76C);
        v11 = v11 + *(double *)&qword_3D1FC0;
      }
    }
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v26 = swift_allocObject(v25, 40, 7);
    *(_OWORD *)(v26 + 16) = xmmword_2F11D0;
    v27 = objc_msgSend(a1, "heightAnchor");
    v28 = objc_msgSend(v27, "constraintEqualToConstant:", v11);

    *(_QWORD *)(v26 + 32) = v28;
    v38 = v26;
    goto LABEL_25;
  }
  v17 = type metadata accessor for UpsellFallbackCompactHeader();
  if (swift_dynamicCastClass(a1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v6 = swift_allocObject(v18, 40, 7);
    *(_OWORD *)(v6 + 16) = xmmword_2F11D0;
    v19 = objc_msgSend(a1, "heightAnchor");
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v21 = result;
      v22 = objc_msgSend(result, "widthAnchor");

      v23 = objc_msgSend(v19, "constraintLessThanOrEqualToAnchor:", v22);
      *(_QWORD *)(v6 + 32) = v23;
LABEL_24:
      v38 = v6;
LABEL_25:
      specialized Array._endMutation()(v16);
      return (id)v38;
    }
    __break(1u);
  }
  else
  {
    v29 = static UILayoutPriority.highestBreakable.getter();
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v6 = swift_allocObject(v30, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_2EFC90;
    v31 = objc_msgSend(a1, "heightAnchor");
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v32 = result;
      v33 = objc_msgSend(result, "heightAnchor");

      v34 = objc_msgSend(v31, "constraintEqualToAnchor:multiplier:", v33, 0.54);
      isa = NSLayoutConstraint.withPriority(priority:)(COERCE__C_UILAYOUTPRIORITY(v29 + -1.0)).super.isa;

      *(_QWORD *)(v6 + 32) = isa;
      v36 = objc_msgSend(a1, "heightAnchor");
      if (qword_3CF100 != -1)
        swift_once(&qword_3CF100, sub_3F78C);
      v37 = objc_msgSend(v36, "constraintLessThanOrEqualToConstant:", *(double *)&qword_3D1FD0);

      *(_QWORD *)(v6 + 40) = v37;
      goto LABEL_24;
    }
  }
  __break(1u);
  return result;
}

id sub_42984()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UpsellViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UpsellViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews20UpsellViewController);
}

uint64_t sub_42A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *Strong;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  void (*v22)(_QWORD *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  _QWORD aBlock[5];
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v6);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_42F84(a1) & 1) != 0
    && (sub_1D5D4(a1, (uint64_t)aBlock),
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0),
        v10 = type metadata accessor for Action(0),
        (swift_dynamicCast(&v38, aBlock, v9, v10, 6) & 1) != 0))
  {
    v11 = v38;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + 32);
    if (Strong
      && (v13 = Strong,
          v14 = objc_msgSend(Strong, "presentingViewController"),
          v13,
          v14)
      && (v15 = type metadata accessor for FlowNavigationController(),
          v16 = swift_dynamicCastClass(v14, v15),
          v14,
          v16))
    {
      swift_retain(v11);
      v17 = v11;
    }
    else
    {
      v22 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Action.actionMetrics.modify(aBlock);
      ActionMetrics.data.setter(_swiftEmptyArrayStorage);
      v22(aBlock, 0);
      v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9E90);
      v24 = swift_allocObject(v23, 72, 7);
      *(_OWORD *)(v24 + 16) = xmmword_2F03C0;
      *(_QWORD *)(v24 + 56) = v10;
      *(_QWORD *)(v24 + 64) = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      *(_QWORD *)(v24 + 32) = v11;
      swift_retain(v11);
      v25 = Link.Presentation.init(rawValue:)(0);
      v26 = v25;
      static ActionMetrics.notInstrumented.getter(v25);
      v27 = type metadata accessor for TabChangeAction(0);
      swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
      v34 = v26;
      v17 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, 10, v24, 0, 0, 0, 0, v34, v8);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D62B0);
    v20 = Promise.__allocating_init()(v28);
    v29 = swift_unknownObjectWeakLoadStrong(v3 + 32);
    if (v29)
    {
      v30 = (void *)v29;
      v31 = swift_allocObject(&unk_37C118, 56, 7);
      v35 = *(_OWORD *)(v3 + 16);
      *(_OWORD *)(v31 + 16) = v35;
      *(_QWORD *)(v31 + 32) = v17;
      *(_QWORD *)(v31 + 40) = a2;
      *(_QWORD *)(v31 + 48) = v20;
      aBlock[4] = sub_43084;
      v37 = v31;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24360;
      aBlock[3] = &block_descriptor_2;
      v32 = _Block_copy(aBlock);
      v33 = v37;
      swift_unknownObjectRetain(v35);
      swift_retain(v17);
      swift_retain(a2);
      swift_retain(v20);
      objc_msgSend(v30, "dismissViewControllerAnimated:completion:", 1, v32, swift_release(v33).n128_f64[0]);
      swift_release(v11);
      swift_release(v17);
      _Block_release(v32);

    }
    else
    {
      swift_release(v11);
      swift_release(v17);
    }
  }
  else
  {
    v18 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    return dispatch thunk of ActionRunner.performEffects(of:asPartOf:)(a1, a2, ObjectType, v18);
  }
  return v20;
}

uint64_t sub_42DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  void *v17;

  ObjectType = swift_getObjectType();
  v16 = type metadata accessor for Action(0);
  v17 = (void *)sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
  v15[0] = a3;
  swift_retain(a3);
  v10 = dispatch thunk of ActionRunner.performEffects(of:asPartOf:)(v15, a4, ObjectType, a2);
  __swift_destroy_boxed_opaque_existential_0(v15);
  v11 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  swift_retain_n(a5, 2);
  v13 = static OS_dispatch_queue.main.getter(v12);
  v16 = v11;
  v17 = &protocol witness table for OS_dispatch_queue;
  v15[0] = v13;
  Promise.then(perform:orCatchError:on:)(&j___s9JetEngine7PromiseC7resolveyyxF, a5, j___s9JetEngine7PromiseC6rejectyys5Error_pF, a5, v15);
  swift_release(v10);
  swift_release_n(a5, 2);
  return __swift_destroy_boxed_opaque_existential_0(v15);
}

uint64_t sub_42ED8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 32);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for UpsellDismissingActionRunner()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_BD24A5B9CB24B39694A37A511C88D82B28UpsellDismissingActionRunner);
}

uint64_t sub_42F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t ObjectType;

  v7 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 16));
  return dispatch thunk of ActionRunner.processMetrics(of:using:asPartOf:)(a1, a2, a3, ObjectType, v7);
}

uint64_t sub_42F84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[5];

  sub_1D5D4(a1, (uint64_t)v8);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
  v2 = type metadata accessor for ChannelOfferAction(0);
  if (swift_dynamicCast(&v7, v8, v1, v2, 0)
    || (v3 = type metadata accessor for ExternalUrlAction(0), swift_dynamicCast(&v7, v8, v1, v3, 0))
    || (v4 = type metadata accessor for OpenExternalAppAction(0), swift_dynamicCast(&v7, v8, v1, v4, 0)))
  {
    swift_release(v7);
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  __swift_destroy_boxed_opaque_existential_0(v8);
  return v5;
}

uint64_t sub_43048()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_43084()
{
  uint64_t *v0;

  return sub_42DB4(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_2(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_430B4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_430D8()
{
  uint64_t v0;

  return sub_41E3C(v0);
}

void sub_430E0(uint64_t a1)
{
  uint64_t v1;

  sub_122EB4(a1, v1);
}

uint64_t sub_430E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_43130(uint64_t *a1)
{
  uint64_t v1;

  sub_40658(a1, v1);
}

void sub_43138()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_purchases] = &_swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_didApplyArtwork] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController_artworkHeader];
  *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___sizeClass] = 8;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20UpsellViewController____lazy_storage___previousWidth];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UpsellViewController.swift", 50, 2, 121, 0);
  __break(1u);
}

void sub_431EC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v25 = 0;
  v4 = 0;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 56);
  v27 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    v8 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v9 = v8 | (v4 << 6);
LABEL_21:
    v13 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v9);
    v15 = *v13;
    v14 = v13[1];
    v16 = swift_bridgeObjectRetain(v14);
    v17 = UpsellInformation.productId.getter(v16);
    if (v18)
    {
      v19 = v18;
      if (v17 == v15 && v18 == v14)
      {
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v19);
LABEL_29:
        *(unint64_t *)((char *)a1 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        if (__OFADD__(v25++, 1))
        {
          __break(1u);
LABEL_32:
          swift_retain(a3);
          sub_130C74(a1, a2, v25, a3);
          return;
        }
      }
      else
      {
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v15, v14, 0);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v19);
        if ((v21 & 1) != 0)
          goto LABEL_29;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v14);
    }
  }
  v10 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v10 >= v27)
    goto LABEL_32;
  v11 = *(_QWORD *)(v26 + 8 * v10);
  ++v4;
  if (v11)
    goto LABEL_20;
  v4 = v10 + 1;
  if (v10 + 1 >= v27)
    goto LABEL_32;
  v11 = *(_QWORD *)(v26 + 8 * v4);
  if (v11)
    goto LABEL_20;
  v4 = v10 + 2;
  if (v10 + 2 >= v27)
    goto LABEL_32;
  v11 = *(_QWORD *)(v26 + 8 * v4);
  if (v11)
  {
LABEL_20:
    v7 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v4 << 6);
    goto LABEL_21;
  }
  v12 = v10 + 3;
  if (v12 >= v27)
    goto LABEL_32;
  v11 = *(_QWORD *)(v26 + 8 * v12);
  if (v11)
  {
    v4 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v4 >= v27)
      goto LABEL_32;
    v11 = *(_QWORD *)(v26 + 8 * v4);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_43424(uint64_t a1, void *a2)
{
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t isStackAllocationSafe;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v18;

  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  isStackAllocationSafe = a2;
  v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * v6, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    v9 = (char *)&v18 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    v10 = v8;
    sub_431EC((unint64_t *)v9, v6, a1);
    v12 = v11;
    swift_release(a1);

    if (v2)
      swift_willThrow(v13);

  }
  else
  {
    v14 = (void *)swift_slowAlloc(8 * v6, -1);
    bzero(v14, 8 * v6);
    v15 = v8;
    sub_431EC((unint64_t *)v14, v6, a1);
    v12 = v16;
    swift_release(a1);

    swift_slowDealloc(v14, -1, -1);
  }
  return v12;
}

id sub_435D0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 1, 0);
}

uint64_t sub_435E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_4360C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_3FC9C(a1, a2);
}

id UIBarButtonItem.init(barButtonSystemItem:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  void *v10;

  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "initWithBarButtonSystemItem:target:action:", a1, 0, 0);
  sub_43740();
  v7 = swift_allocObject(&unk_37C250, 32, 7);
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = v6;
  sub_2C690(a2, a3);
  v10 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v9, 0, 0, 0, sub_437CC, v7);
  objc_msgSend(v8, "setPrimaryAction:", v10);
  sub_1D618(a2, a3);

  return v8;
}

unint64_t sub_43740()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D8FA0;
  if (!qword_3D8FA0)
  {
    v1 = objc_opt_self(UIAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D8FA0);
  }
  return result;
}

uint64_t sub_4377C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result;

  if (a2)
    return a2();
  return result;
}

uint64_t sub_437A0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_437CC()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

id UIBarButtonItem.init(image:handler:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  __n128 v12;
  void *v13;

  v4 = v3;
  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  sub_43740();
  v9 = swift_allocObject(&unk_37C278, 32, 7);
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  v10 = a1;
  swift_retain(a3);
  v11 = v8;
  v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, a1, 0, 0, 0, v12, 0, 0, 0, sub_43920, v9);
  objc_msgSend(v11, "setPrimaryAction:", v13);

  swift_release(a3);
  return v11;
}

uint64_t sub_438FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_43920()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

id UIBarButtonItem.init(title:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v9;
  uint64_t v10;
  id v11;
  __n128 v12;
  void *v13;

  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  sub_43740();
  v10 = swift_allocObject(&unk_37C2A0, 32, 7);
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v11 = v9;
  v12 = swift_retain(a4);
  v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(a1, a2, 0, 0, 0, 0, 0, 0, v12, 0, 0, 0, sub_43A64, v10);
  objc_msgSend(v11, "setPrimaryAction:", v13);

  swift_release(a4);
  return v11;
}

uint64_t sub_43A44(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_43AC4()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews36FlowRedirectionWrapperViewController_child];
  objc_msgSend(v0, "addChildViewController:", v1);
  v2 = objc_msgSend(v1, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v15 = v2;
  objc_msgSend(v2, "setAutoresizingMask:", 18);
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  objc_msgSend(v3, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(v15, "setFrame:", v6, v8, v10, v12);
  v13 = objc_msgSend(v0, "view");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "addSubview:", v15);

    objc_msgSend(v1, "didMoveToParentViewController:", v0);
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_43C90()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FlowRedirectionWrapperViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FlowRedirectionWrapperViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews36FlowRedirectionWrapperViewController);
}

uint64_t sub_43D18()
{
  uint64_t v0;

  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews36FlowRedirectionWrapperViewController_customNextResponder))
    return UIResponder.nearestActionRunner.getter();
  else
    return 0;
}

uint64_t dispatch thunk of FlowTabBarControllerProtocol.flowController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SearchSuggestionsController.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void sub_43D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  double v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  id v11;

  v1 = v0;
  v2 = ShelfAttributes.sizeClass.getter();
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_sizeClass;
  v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_sizeClass);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_sizeClass) = v2;
  if (v4 == 8 || (v5 = ((double (*)(void))SizeClass.rawValue.getter)(), v5 != SizeClass.rawValue.getter(v2)))
  {
    v6 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_innerView);
    if (v6)
    {
      v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_innerView + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(v1
                                                 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_innerView));
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
      v10 = *(unsigned __int8 *)(v1 + v3);
      v11 = v6;
      v9(v10, ObjectType, v7);

    }
  }
}

uint64_t sub_43E44()
{
  return 5;
}

id sub_43E4C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  char *v4;
  BOOL v5;
  id v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)();
  unint64_t *v11;
  void *v12;
  uint64_t v13;

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_currentModel];
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v0, "traitCollection");
  v4 = (char *)objc_msgSend(v3, "userInterfaceIdiom");

  if (v4 == (_BYTE *)&dword_4 + 1)
  {
    v5 = 0;
  }
  else
  {
    v7 = objc_msgSend(v0, "traitCollection");
    v8 = (char *)objc_msgSend(v7, "horizontalSizeClass");

    v5 = v8 != (_BYTE *)&dword_0 + 2;
  }
  if (ChannelHeader.offerType.getter() != 1 || v5)
  {
    v13 = type metadata accessor for ChannelHeaderView();
    v10 = type metadata accessor for ChannelHeaderView;
    v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");

    v11 = (unint64_t *)&unk_3D21E0;
    v12 = &unk_304C84;
  }
  else
  {
    v9 = type metadata accessor for HorizontalPaidChannelHeaderView();
    v10 = type metadata accessor for HorizontalPaidChannelHeaderView;
    v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");

    v11 = (unint64_t *)&unk_3D21E8;
    v12 = &unk_2F1650;
  }
  sub_239FC(v11, 255, (uint64_t (*)(uint64_t))v10, (uint64_t)v12);
  return v6;
}

void sub_43FB4(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  if (a1)
    v3 = objc_msgSend(a1, "horizontalSizeClass");
  else
    v3 = 0;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "horizontalSizeClass");

  if (!a1 || v3 != v5)
  {
    v6 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_currentModel];
    if (v6)
    {
      v7 = v6;
      sub_44080(v7);

    }
  }
}

double sub_44080(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t ObjectType;
  double leading;
  double bottom;
  double trailing;
  id v19;
  id v20;
  void *v21;
  double result;

  v2 = v1;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_objectGraph];
  if (v3)
  {
    v5 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_currentModel];
    *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_currentModel] = a1;
    swift_retain(v3);

    v6 = a1;
    objc_msgSend(v2, "setPreservesSuperviewLayoutMargins:", 1);
    v7 = objc_msgSend(v2, "contentView");
    objc_msgSend(v7, "setPreservesSuperviewLayoutMargins:", 1);

    v8 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_innerView];
    v9 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_innerView];
    if (v9)
      objc_msgSend(v9, "removeFromSuperview");
    v10 = sub_43E4C();
    if (v10)
    {
      v12 = v10;
      v13 = v11;
      v14 = objc_msgSend(v2, "contentView");
      ObjectType = swift_getObjectType();
      leading = NSDirectionalEdgeInsetsZero.leading;
      bottom = NSDirectionalEdgeInsetsZero.bottom;
      trailing = NSDirectionalEdgeInsetsZero.trailing;
      v19 = v12;
      UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v19, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

      v20 = v6;
      sub_447F0((uint64_t)v20, v3, v2, (uint64_t (*)(_QWORD))&type metadata accessor for ChannelHeader, (uint64_t)&protocol witness table for ChannelHeader);

      dispatch thunk of DependencyBindableView.bind(to:)(v3, ObjectType, *(_QWORD *)(v13 + 8));
      (*(void (**)(id, uint64_t, uint64_t))(v13 + 16))(v20, ObjectType, v13);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 24))(v2[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_sizeClass], ObjectType, v13);
      swift_release(v3);
      v21 = *(void **)v8;
      *(_QWORD *)v8 = v12;
      *((_QWORD *)v8 + 1) = v13;

    }
    else
    {
      *(_QWORD *)&result = swift_release(v3).n128_u64[0];
    }
  }
  return result;
}

id sub_44398(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  _QWORD *v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_innerView];
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_currentModel] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_sizeClass] = 8;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_objectGraph] = 0;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

uint64_t sub_44444()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_objectGraph));
}

uint64_t type metadata accessor for ChannelUberCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell);
}

double sub_444E8(void **a1)
{
  return sub_44080(*a1);
}

uint64_t sub_444F0()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_objectGraph));
}

uint64_t sub_44504(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ChannelUberCollectionViewCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_44538(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D21F0, v3, (uint64_t (*)(uint64_t))type metadata accessor for ChannelUberCollectionViewCell, (uint64_t)&unk_2F1500);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_44590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2);
  return ShelfUIKitCell.isSelectable.getter(ObjectType, a2);
}

void sub_445B8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "ShelfKitCollectionViews/UberCollectionViewCell.swift", 52, 2, 270, 0);
  __break(1u);
}

uint64_t sub_44600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D21F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChannelUberCollectionViewCell, (uint64_t)&unk_2F1500);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_44634()
{
  return 0;
}

uint64_t sub_44640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  double v7;
  void *v9;
  _BYTE v10[40];

  sub_1D5D4(a3, (uint64_t)v10);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
  v4 = type metadata accessor for ChannelHeader(0);
  if ((swift_dynamicCast(&v9, v10, v3, v4, 6) & 1) != 0)
  {
    v5 = v9;
    v6 = ChannelHeader.offerType.getter();

    v7 = *(double *)&aPpue[8 * v6];
  }
  else
  {
    v7 = 277.0;
  }
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v7);
}

uint64_t sub_446E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_44640(a1, a2, a3);
}

uint64_t sub_446FC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D21B0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChannelUberCollectionViewCell, (uint64_t)&unk_2F13D8);
}

uint64_t sub_44728(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D21B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChannelUberCollectionViewCell, (uint64_t)&unk_2F1460);
}

uint64_t sub_44754(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D21C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChannelUberCollectionViewCell, (uint64_t)&unk_2F1438);
}

uint64_t sub_44780(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D21C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChannelUberCollectionViewCell, (uint64_t)&unk_2F1490);
}

uint64_t sub_447AC()
{
  return sub_239FC(&qword_3D21D0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelHeader, (uint64_t)&protocol conformance descriptor for ChannelHeader);
}

uint64_t sub_447DC(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_447F0(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHeader, (uint64_t)&protocol witness table for ShowHeader);
}

uint64_t sub_447F0(uint64_t a1, uint64_t a2, char *a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v30;
  uint64_t v31;
  uint64_t ObjectType;
  double (*v33)(uint64_t, uint64_t);
  id v34;
  double v35;
  double v36;
  double v37;
  id v38;
  double v39;
  double v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD v61[7];

  v60 = a2;
  v9 = type metadata accessor for NetworkTaskPriority(0);
  __chkstk_darwin(v9);
  v59 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for Logger(0);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v52 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v12);
  v54 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArtworkRequest(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v56 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ArtworkModel(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v52 - v24;
  v61[5] = a1;
  v26 = objc_msgSend(a3, "contentView");
  v27 = a4(0);
  objc_msgSend(v26, "setOverrideUserInterfaceStyle:", UberBackgroundProtocol.interfaceStyleForOverride.getter(v27, a5));

  v28 = (void *)UberBackgroundProtocol.normalizedBackgroundColor.getter(v27, a5);
  sub_226094(v28, 64);

  dispatch thunk of UberBackgroundProtocol.backgroundArtwork.getter(v27, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    return sub_44C28((uint64_t)v18);
  sub_2376C((uint64_t)v18, (uint64_t)v25);
  v30 = *(void **)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView];
  if (v30)
  {
    v31 = *(_QWORD *)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews22UberCollectionViewCell_uberBackgroundView + 8];
    ObjectType = swift_getObjectType();
    v33 = *(double (**)(uint64_t, uint64_t))(v31 + 80);
    v34 = v30;
    v35 = v33(ObjectType, v31);
    v37 = v36;

  }
  else
  {
    v37 = kMTPreferredArtworkSize;
    v35 = kMTPreferredArtworkSize;
  }
  sub_27E84((uint64_t)v25, (uint64_t)v23);
  v38 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v38, "scale");
  v40 = v39;

  v41 = type metadata accessor for CropCode(0);
  v42 = v54;
  v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v54, 1, 1, v41);
  v44 = v52;
  v45 = static Logger.artwork.getter(v43);
  v46 = static os_log_type_t.info.getter(v45);
  SignpostAndLogTrace(domain:level:)(v61, v44, v46);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v44, v55);
  v48 = v59;
  static NetworkTaskPriority.dispatchQueuePriority()(v47);
  v49 = v56;
  ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v23, 0, v42, 0, _swiftEmptyArrayStorage, v48, v61, v35, v37, v40);
  v50 = type metadata accessor for UberCollectionViewCell();
  v51 = sub_239FC(&qword_3D21D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for UberCollectionViewCell, (uint64_t)&unk_300F20);
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v49, v60, 1, v50, v51);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v49, v58);
  return sub_239C0((uint64_t)v25);
}

uint64_t sub_44C28(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_44C68()
{
  double result;

  result = 400.0;
  xmmword_3D21F8 = xmmword_2F1570;
  return result;
}

void sub_44C80()
{
  qword_3D2208 = 0x4070900000000000;
}

id sub_44C94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___leftVerticalStackView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___leftVerticalStackView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___leftVerticalStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v4, "setAlignment:", 1);
    objc_msgSend(v4, "setBaselineRelativeArrangement:", 1);
    objc_msgSend(v4, "setAxis:", 1);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_44D54()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___rightVerticalStackView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___rightVerticalStackView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___rightVerticalStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v4, "setAlignment:", 0);
    objc_msgSend(v4, "setAxis:", 1);
    objc_msgSend(v4, "setBaselineRelativeArrangement:", 1);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_44E14()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  char *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  void *v22;
  id v23;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  v1 = (int *)type metadata accessor for VEVButtonContainer.Style(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___subscribeButton);
  if (v4)
  {
    v5 = *(char **)(v0
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___subscribeButton);
  }
  else
  {
    v36 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___subscribeButton;
    v37 = v0;
    if (qword_3CF498 != -1)
      swift_once(&qword_3CF498, sub_13FB40);
    v6 = qword_3FB318;
    v38 = (void *)qword_3FB310;
    v7 = qword_3FB320;
    v8 = qword_3FB328;
    v34 = qword_3FB328;
    v35 = qword_3FB320;
    v9 = qword_3FB330;
    v10 = qword_3FB338;
    v32 = qword_3FB338;
    v33 = qword_3FB330;
    v30 = *((_QWORD *)&xmmword_3FB340 + 1);
    v31 = (void *)xmmword_3FB340;
    v28 = qword_3FB358;
    v29 = qword_3FB350;
    v27 = qword_3FB360;
    v26 = byte_3FB368;
    v11 = &v3[v1[5]];
    v12 = byte_3FB369;
    v13 = type metadata accessor for Glyph(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
    *(_QWORD *)v3 = v38;
    *((_QWORD *)v3 + 1) = v6;
    *((_QWORD *)v3 + 2) = v7;
    *((_QWORD *)v3 + 3) = v8;
    *((_QWORD *)v3 + 4) = v9;
    *((_QWORD *)v3 + 5) = v10;
    v15 = v30;
    v14 = v31;
    *((_QWORD *)v3 + 6) = v31;
    *((_QWORD *)v3 + 7) = v15;
    v17 = v28;
    v16 = v29;
    *((_QWORD *)v3 + 8) = v29;
    *((_QWORD *)v3 + 9) = v17;
    v18 = v27;
    *((_QWORD *)v3 + 10) = v27;
    LOBYTE(v11) = v26;
    v3[88] = v26;
    v3[89] = v12;
    v19 = &v3[v1[6]];
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0;
    v19[16] = 1;
    v20 = &v3[v1[8]];
    *(_OWORD *)v20 = xmmword_2F1580;
    *((_OWORD *)v20 + 1) = xmmword_2F1580;
    *(_QWORD *)&v3[v1[9]] = 9;
    v3[v1[7]] = 0;
    objc_allocWithZone((Class)type metadata accessor for VEVButtonContainer(0));
    sub_DDA0(v38, v6, v35, v34, v33, v32, v14, v15, v16, v17, v18, (char)v11, v12);
    v21 = sub_1DF878((uint64_t)v3);
    v21[qword_3D5E30] = 0;
    v22 = *(void **)(v37 + v36);
    *(_QWORD *)(v37 + v36) = v21;
    v5 = v21;

    v4 = 0;
  }
  v23 = v4;
  return v5;
}

id sub_4503C()
{
  return sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___descriptionLabelContainer, (uint64_t (*)(uint64_t))sub_45050);
}

char *sub_45050(void *a1)
{
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  void *v12;
  id v13;
  char *v14;
  uint64_t v15;
  void *v16;

  v2 = type metadata accessor for FadingDescriptionLabel();
  v3 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v4 = *(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel];
  v5 = objc_msgSend(a1, "traitCollection");
  v6 = (char *)objc_msgSend(v5, "userInterfaceIdiom");

  v7 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  if (v6 == (_BYTE *)&dword_4 + 1)
    v8 = static UIFont.title3.getter(v7);
  else
    v8 = static UIFont.subhead.getter(v7);
  v9 = (void *)v8;
  objc_msgSend(v4, "setFont:", v8);

  v10 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_moreButton], "titleLabel");
  if (v10)
  {
    v12 = v10;
    v13 = objc_msgSend(a1, "traitCollection");
    v14 = (char *)objc_msgSend(v13, "userInterfaceIdiom");

    if (v14 == (_BYTE *)&dword_4 + 1)
      v15 = static UIFont.subheadEmph.getter();
    else
      v15 = static UIFont.bodyEmph.getter();
    v16 = (void *)v15;
    objc_msgSend(v12, "setFont:", v15);

  }
  LODWORD(v11) = 1148846080;
  objc_msgSend(v3, "setContentCompressionResistancePriority:forAxis:", 1, v11);
  return v3;
}

id sub_451E0()
{
  return sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
}

id sub_451F4(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_45250(uint64_t a1)
{
  uint64_t v1;
  char v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  double v25;
  id v26;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  int v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  _QWORD v53[11];
  char v54;
  char v55;

  if (qword_3CF4A8 != -1)
    swift_once(&qword_3CF4A8, sub_13FC00);
  v1 = qword_3FB420;
  v2 = word_3FB428;
  v45 = HIBYTE(word_3FB428);
  v46 = unk_3FB418;
  v40 = qword_3FB410;
  v51 = *(_QWORD *)algn_3FB3D8;
  v52 = (void *)qword_3FB3D0;
  v49 = qword_3FB3E8;
  v50 = qword_3FB3E0;
  v47 = qword_3FB3F8;
  v48 = qword_3FB3F0;
  v3 = xmmword_3FB400;
  sub_DDA0((void *)qword_3FB3D0, *(uint64_t *)algn_3FB3D8, qword_3FB3E0, qword_3FB3E8, qword_3FB3F0, qword_3FB3F8, (void *)xmmword_3FB400, *((uint64_t *)&xmmword_3FB400 + 1), qword_3FB410, unk_3FB418, qword_3FB420, word_3FB428, SHIBYTE(word_3FB428));
  if (qword_3CF4E8 != -1)
    swift_once(&qword_3CF4E8, sub_13FF00);
  v4 = *(_QWORD *)algn_3FB6D8;
  v44 = (void *)qword_3FB6D0;
  v5 = qword_3FB6E8;
  v6 = qword_3FB6F0;
  v7 = unk_3FB718;
  v8 = qword_3FB720;
  v9 = byte_3FB728;
  v39 = byte_3FB729;
  v38 = qword_3FB710;
  v33 = qword_3FB720;
  v34 = unk_3FB718;
  v32 = byte_3FB728;
  v35 = qword_3FB6F8;
  v36 = qword_3FB6E8;
  v43 = (void *)xmmword_3FB700;
  v41 = qword_3FB6E0;
  v42 = *((_QWORD *)&xmmword_3FB700 + 1);
  if (v45)
  {
    sub_DDA0((void *)qword_3FB6D0, *(uint64_t *)algn_3FB6D8, qword_3FB6E0, qword_3FB6E8, qword_3FB6F0, qword_3FB6F8, (void *)xmmword_3FB700, *((uint64_t *)&xmmword_3FB700 + 1), qword_3FB710, unk_3FB718, qword_3FB720, byte_3FB728, byte_3FB729);
    sub_DE20(v52, v51, v50, v49, v48, v47);
    sub_DE20((id)v3, *((uint64_t *)&v3 + 1), v40, v46, v1, v2);
    sub_DD48((void *)v3, *((uint64_t *)&v3 + 1), v40, v46, v1, v2);
    if (!v39)
    {
LABEL_7:
      v29 = v2;
      v28 = v1;
      v11 = v51;
      v10 = v52;
      v12 = v6;
      v13 = v50;
      v14 = v4;
      v16 = v48;
      v15 = v49;
      v17 = v47;
      sub_DCC8(v52, v51, v50, v49, v48, v47, (void *)v3, *((uint64_t *)&v3 + 1), v40, v46, v28, v29, v45);
      v42 = v14;
      v43 = v44;
      v38 = v41;
      v18 = v36;
      v19 = v35;
      goto LABEL_10;
    }
  }
  else
  {
    v20 = qword_3FB6F8;
    v21 = qword_3FB710;
    v31 = qword_3FB6F0;
    sub_DDA0(v52, v51, v50, v49, v48, v47, (void *)v3, *((uint64_t *)&v3 + 1), v40, v46, v1, v2, 0);
    v6 = v31;
    sub_DDA0(v44, v4, v41, v5, v31, v20, v43, v42, v21, v7, v8, v9, v39);
    if (!v39)
      goto LABEL_7;
  }
  sub_DD48(v44, v4, v41, v36, v6, v35);
  v30 = v2;
  v11 = v51;
  v10 = v52;
  v15 = v49;
  v13 = v50;
  v17 = v47;
  v16 = v48;
  sub_DCC8(v52, v51, v50, v49, v48, v47, (void *)v3, *((uint64_t *)&v3 + 1), v40, v46, v1, v30, v45);
  v12 = v33;
  v18 = v34;
  v19 = v32;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v53[0] = v10;
  v53[1] = v11;
  v53[2] = v13;
  v53[3] = v15;
  v53[4] = v16;
  v53[5] = v17;
  v53[6] = v43;
  v53[7] = v42;
  v53[8] = v38;
  v53[9] = v18;
  v53[10] = v12;
  v54 = v19;
  v55 = 1;
  v22 = sub_A96AC((uint64_t)v53, 1, 4, 0);
  v23 = qword_3CF020;
  v24 = v22;
  if (v23 != -1)
    swift_once(&qword_3CF020, sub_E274);
  objc_msgSend(v24, "setTextColor:", qword_3FA880);

  objc_msgSend(v24, "setTextAlignment:", 1);
  LODWORD(v25) = 1148846080;
  objc_msgSend(v24, "setContentCompressionResistancePriority:forAxis:", 1, v25);
  v26 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", a1, "buttonCaptionLabelTapped");
  objc_msgSend(v24, "addGestureRecognizer:", v26);

  return v24;
}

id sub_45688()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = sub_456E4();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_456E4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int16 v39;
  char v40;
  unsigned __int8 v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void *v53;
  void *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  _QWORD v64[11];
  char v65;
  char v66;

  if (qword_3CF4A8 != -1)
    swift_once(&qword_3CF4A8, sub_13FC00);
  v0 = qword_3FB410;
  v1 = qword_3FB420;
  v2 = word_3FB428;
  v56 = HIBYTE(word_3FB428);
  v55 = unk_3FB418;
  v63 = (void *)qword_3FB3D0;
  v61 = qword_3FB3E0;
  v62 = *(_QWORD *)algn_3FB3D8;
  v59 = qword_3FB3F0;
  v60 = qword_3FB3E8;
  v57 = *((_QWORD *)&xmmword_3FB400 + 1);
  v58 = qword_3FB3F8;
  v54 = (void *)xmmword_3FB400;
  sub_DDA0((void *)qword_3FB3D0, *(uint64_t *)algn_3FB3D8, qword_3FB3E0, qword_3FB3E8, qword_3FB3F0, qword_3FB3F8, (void *)xmmword_3FB400, *((uint64_t *)&xmmword_3FB400 + 1), qword_3FB410, unk_3FB418, qword_3FB420, word_3FB428, SHIBYTE(word_3FB428));
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v3 = (void *)qword_3FB490;
  v4 = qword_3FB498;
  v5 = qword_3FB4A0;
  v7 = qword_3FB4B0;
  v6 = qword_3FB4B8;
  v8 = *((_QWORD *)&xmmword_3FB4C0 + 1);
  v52 = HIBYTE(word_3FB4E8);
  v50 = qword_3FB4A8;
  v51 = qword_3FB4D0;
  v45 = *((_QWORD *)&xmmword_3FB4D8 + 1);
  v46 = xmmword_3FB4D8;
  v44 = word_3FB4E8;
  v47 = qword_3FB4B8;
  v48 = qword_3FB4B0;
  v49 = *((_QWORD *)&xmmword_3FB4C0 + 1);
  v53 = (void *)xmmword_3FB4C0;
  if (v56)
  {
    sub_DDA0((void *)qword_3FB490, qword_3FB498, qword_3FB4A0, qword_3FB4A8, qword_3FB4B0, qword_3FB4B8, (void *)xmmword_3FB4C0, *((uint64_t *)&xmmword_3FB4C0 + 1), qword_3FB4D0, xmmword_3FB4D8, *((uint64_t *)&xmmword_3FB4D8 + 1), word_3FB4E8, SHIBYTE(word_3FB4E8));
    sub_DE20(v63, v62, v61, v60, v59, v58);
    sub_DE20(v54, v57, v0, v55, v1, v2);
    sub_DD48(v54, v57, v0, v55, v1, v2);
    if (!v52)
    {
LABEL_7:
      v38 = v2;
      v35 = v1;
      v9 = v63;
      v11 = v61;
      v10 = v62;
      v12 = v4;
      v13 = v60;
      v14 = v5;
      v15 = v58;
      v16 = v59;
      sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v35, v38, v56);
      v53 = v3;
      v49 = v12;
      v51 = v14;
      v17 = v50;
      v18 = v48;
      v19 = v47;
      goto LABEL_10;
    }
  }
  else
  {
    v39 = v2;
    v36 = v1;
    v33 = v0;
    v20 = qword_3FB4D0;
    v42 = (void *)qword_3FB490;
    v43 = v0;
    v21 = xmmword_3FB4D8;
    v41 = v2;
    v22 = v1;
    v23 = *((_QWORD *)&xmmword_3FB4D8 + 1);
    v24 = qword_3FB4A0;
    v25 = qword_3FB498;
    v26 = word_3FB4E8;
    sub_DDA0(v63, v62, v61, v60, v59, v58, v54, v57, v33, v55, v36, v39, SHIBYTE(v39));
    v40 = v26;
    v4 = v25;
    v5 = v24;
    v34 = v21;
    v37 = v23;
    v1 = v22;
    v2 = v41;
    v3 = v42;
    v0 = v43;
    sub_DDA0(v42, v4, v5, v50, v7, v6, v53, v8, v20, v34, v37, v40, v52);
    if (!v52)
      goto LABEL_7;
  }
  sub_DD48(v3, v4, v5, v50, v48, v47);
  v9 = v63;
  v11 = v61;
  v10 = v62;
  v16 = v59;
  v13 = v60;
  v15 = v58;
  sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v1, v2, v56);
  v18 = v45;
  v17 = v46;
  v19 = v44;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v64[0] = v9;
  v64[1] = v10;
  v64[2] = v11;
  v64[3] = v13;
  v64[4] = v16;
  v64[5] = v15;
  v64[6] = v53;
  v64[7] = v49;
  v64[8] = v51;
  v64[9] = v17;
  v64[10] = v18;
  v65 = v19;
  v66 = 1;
  v27 = sub_A96AC((uint64_t)v64, 1, 4, 0);
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v27;
  v30 = objc_msgSend(v28, "labelColor");
  objc_msgSend(v29, "setTextColor:", v30);

  LODWORD(v31) = 1148846080;
  objc_msgSend(v29, "setContentCompressionResistancePriority:forAxis:", 1, v31);
  if (qword_3CFAA0 != -1)
    swift_once(&qword_3CFAA0, sub_1D66E8);
  sub_11B6E4((void *)qword_3FCF58, *(double *)&qword_3FCF60, *(double *)&qword_3FCF68, *(double *)&qword_3FCF70);
  return v29;
}

id sub_45B20()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int16 v39;
  char v40;
  unsigned __int8 v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void *v53;
  void *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  _QWORD v64[11];
  char v65;
  char v66;

  if (qword_3CF478 != -1)
    swift_once(&qword_3CF478, sub_13F9C0);
  v0 = qword_3FB1D0;
  v1 = qword_3FB1E0;
  v2 = word_3FB1E8;
  v56 = HIBYTE(word_3FB1E8);
  v55 = unk_3FB1D8;
  v63 = (void *)qword_3FB190;
  v61 = qword_3FB1A0;
  v62 = *(_QWORD *)algn_3FB198;
  v59 = qword_3FB1B0;
  v60 = qword_3FB1A8;
  v57 = *((_QWORD *)&xmmword_3FB1C0 + 1);
  v58 = qword_3FB1B8;
  v54 = (void *)xmmword_3FB1C0;
  sub_DDA0((void *)qword_3FB190, *(uint64_t *)algn_3FB198, qword_3FB1A0, qword_3FB1A8, qword_3FB1B0, qword_3FB1B8, (void *)xmmword_3FB1C0, *((uint64_t *)&xmmword_3FB1C0 + 1), qword_3FB1D0, unk_3FB1D8, qword_3FB1E0, word_3FB1E8, SHIBYTE(word_3FB1E8));
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v3 = (void *)qword_3FB490;
  v4 = qword_3FB498;
  v5 = qword_3FB4A0;
  v7 = qword_3FB4B0;
  v6 = qword_3FB4B8;
  v8 = *((_QWORD *)&xmmword_3FB4C0 + 1);
  v52 = HIBYTE(word_3FB4E8);
  v50 = qword_3FB4A8;
  v51 = qword_3FB4D0;
  v45 = *((_QWORD *)&xmmword_3FB4D8 + 1);
  v46 = xmmword_3FB4D8;
  v44 = word_3FB4E8;
  v47 = qword_3FB4B8;
  v48 = qword_3FB4B0;
  v49 = *((_QWORD *)&xmmword_3FB4C0 + 1);
  v53 = (void *)xmmword_3FB4C0;
  if (!v56)
  {
    v39 = v2;
    v36 = v1;
    v33 = v0;
    v20 = qword_3FB4D0;
    v42 = (void *)qword_3FB490;
    v43 = v0;
    v21 = xmmword_3FB4D8;
    v41 = v2;
    v22 = v1;
    v23 = *((_QWORD *)&xmmword_3FB4D8 + 1);
    v24 = qword_3FB4A0;
    v25 = qword_3FB498;
    v26 = word_3FB4E8;
    sub_DDA0(v63, v62, v61, v60, v59, v58, v54, v57, v33, v55, v36, v39, SHIBYTE(v39));
    v40 = v26;
    v4 = v25;
    v5 = v24;
    v34 = v21;
    v37 = v23;
    v1 = v22;
    v2 = v41;
    v3 = v42;
    v0 = v43;
    sub_DDA0(v42, v4, v5, v50, v7, v6, v53, v8, v20, v34, v37, v40, v52);
    if (!v52)
      goto LABEL_7;
LABEL_9:
    sub_DD48(v3, v4, v5, v50, v48, v47);
    v9 = v63;
    v11 = v61;
    v10 = v62;
    v16 = v59;
    v13 = v60;
    v15 = v58;
    sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v1, v2, v56);
    v18 = v45;
    v17 = v46;
    v19 = v44;
    goto LABEL_10;
  }
  sub_DDA0((void *)qword_3FB490, qword_3FB498, qword_3FB4A0, qword_3FB4A8, qword_3FB4B0, qword_3FB4B8, (void *)xmmword_3FB4C0, *((uint64_t *)&xmmword_3FB4C0 + 1), qword_3FB4D0, xmmword_3FB4D8, *((uint64_t *)&xmmword_3FB4D8 + 1), word_3FB4E8, SHIBYTE(word_3FB4E8));
  sub_DE20(v63, v62, v61, v60, v59, v58);
  sub_DE20(v54, v57, v0, v55, v1, v2);
  sub_DD48(v54, v57, v0, v55, v1, v2);
  if (v52)
    goto LABEL_9;
LABEL_7:
  v38 = v2;
  v35 = v1;
  v9 = v63;
  v11 = v61;
  v10 = v62;
  v12 = v4;
  v13 = v60;
  v14 = v5;
  v15 = v58;
  v16 = v59;
  sub_DCC8(v63, v62, v61, v60, v59, v58, v54, v57, v0, v55, v35, v38, v56);
  v53 = v3;
  v49 = v12;
  v51 = v14;
  v17 = v50;
  v18 = v48;
  v19 = v47;
LABEL_10:
  type metadata accessor for DynamicTypeLabel();
  v64[0] = v9;
  v64[1] = v10;
  v64[2] = v11;
  v64[3] = v13;
  v64[4] = v16;
  v64[5] = v15;
  v64[6] = v53;
  v64[7] = v49;
  v64[8] = v51;
  v64[9] = v17;
  v64[10] = v18;
  v65 = v19;
  v66 = 1;
  v27 = sub_A96AC((uint64_t)v64, 3, 4, 0);
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v27;
  v30 = objc_msgSend(v28, "labelColor");
  objc_msgSend(v29, "setTextColor:", v30);

  LODWORD(v31) = 1148846080;
  objc_msgSend(v29, "setContentCompressionResistancePriority:forAxis:", 1, v31);
  return v29;
}

id sub_45F1C()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  _QWORD v7[5];
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = objc_allocWithZone((Class)UIColor);
  v7[4] = sub_4605C;
  v8 = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_EBBFC;
  v7[3] = &block_descriptor_3;
  v2 = _Block_copy(v7);
  v3 = objc_msgSend(v1, "initWithDynamicProvider:", v2);
  _Block_release(v2);
  objc_msgSend(v0, "setBackgroundColor:", v3, swift_release(v8).n128_f64[0]);

  v4 = objc_msgSend(v0, "heightAnchor");
  v5 = objc_msgSend(v4, "constraintEqualToConstant:", 1.0);

  objc_msgSend(v5, "setActive:", 1);
  return v0;
}

id sub_4605C(void *a1)
{
  char *v1;
  void *v2;
  char **v3;
  id v4;
  id v5;

  v1 = (char *)objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  v3 = &selRef_whiteColor;
  if (v1 != (_BYTE *)&dword_0 + 2)
    v3 = &selRef_blackColor;
  v4 = objc_msgSend(v2, *v3);
  v5 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.5);

  return v5;
}

void sub_460E0(id a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  if (a1)
    v3 = objc_msgSend(a1, "userInterfaceStyle");
  else
    v3 = 0;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceStyle");

  if (!a1 || v3 != v5)
  {
    v6 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
    v7 = objc_msgSend(v6, "layer");

    v8 = objc_msgSend(v1, "traitCollection");
    v9 = (id)UITraitCollection.suggestedTextBlendModeFilter.getter();

    objc_msgSend(v7, "setCompositingFilter:", v9);
  }
}

char *sub_46250(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  void *v17;
  void *v18;
  id v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t inited;
  id v28;
  char *v29;
  void *v30;
  id v31;
  void *v32;
  char *v33;
  id v34;
  char *v35;
  id v36;
  char *v37;
  id v38;
  double v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  char *v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  char *v94;
  id v95;
  id v96;
  id v97;
  __C::UILayoutPriority v98;
  Class isa;
  id v100;
  id v101;
  id v102;
  __C::UILayoutPriority v103;
  Class v104;
  char *v105;
  id v106;
  id v107;
  char *v108;
  double v109;
  id v110;
  char *v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  Class v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  id v133;
  char *v134;
  id v135;
  id v136;
  id v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  id v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  id v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  void *v171;
  uint64_t v172;
  Class v173;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char v180[160];
  uint64_t v181;
  char v182[48];
  objc_super v183;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_logoView;
  v12 = type metadata accessor for ArtworkView(0);
  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12));
  v14 = v4;
  v15 = (char *)objc_msgSend(v13, "init");
  v16 = &v15[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v17 = *(void **)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;

  sub_E9020();
  v18 = (void *)objc_opt_self(UIColor);
  v19 = objc_msgSend(v18, "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v19);

  LODWORD(v20) = 1148846080;
  objc_msgSend(v15, "setContentCompressionResistancePriority:forAxis:", 1, v20);
  *(_QWORD *)&v5[v11] = v15;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___leftVerticalStackView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___rightVerticalStackView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_rightView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_lastColumnWidth] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___subscribeButton] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___descriptionLabelContainer] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___subtitleLabel] = 0;
  v21 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_benefitsTextLabel;
  *(_QWORD *)&v14[v21] = sub_45B20();
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_separatorView;
  *(_QWORD *)&v14[v22] = sub_45F1C();
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_blurView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_bannerModel] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_objectGraph] = 0;

  v183.receiver = v14;
  v183.super_class = ObjectType;
  v23 = (char *)objc_msgSendSuper2(&v183, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v23, "setPreservesSuperviewLayoutMargins:", 1);
  type metadata accessor for FadedBlurView();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22D8);
  v25 = swift_allocObject(v24, 48, 7);
  *(_OWORD *)(v25 + 16) = xmmword_2EFA20;
  *(_OWORD *)(v25 + 32) = xmmword_2F1590;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  inited = swift_initStackObject(v26, v182);
  *(_OWORD *)(inited + 16) = xmmword_2EFC90;
  *(_QWORD *)(inited + 32) = objc_msgSend(v18, "clearColor");
  v28 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 1.0);
  *(_QWORD *)(inited + 40) = v28;
  v181 = inited;
  specialized Array._endMutation()(v28);
  v29 = sub_1CD1E4(v25, inited, 50.0);
  objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v23, "addSubview:", v29);
  v30 = *(void **)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_blurView];
  *(_QWORD *)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_blurView] = v29;
  v179 = v29;

  v31 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v32 = *(void **)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_rightView];
  *(_QWORD *)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_rightView] = v31;

  v176 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_separatorView;
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_separatorView]);
  v33 = v23;
  v34 = sub_44C94();
  objc_msgSend(v33, "addSubview:", v34);

  v35 = v33;
  v36 = sub_44D54();
  objc_msgSend(v35, "addSubview:", v36);

  v37 = (char *)sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___descriptionLabelContainer, (uint64_t (*)(uint64_t))sub_45050);
  v38 = *(id *)&v37[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel];

  LODWORD(v39) = 1148846080;
  objc_msgSend(v38, "setContentCompressionResistancePriority:forAxis:", 1, v39);

  v40 = sub_44C94();
  v41 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v40, "addArrangedSubview:", v41);

  v42 = sub_44C94();
  v43 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_logoView;
  objc_msgSend(v42, "addArrangedSubview:", *(_QWORD *)&v35[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_logoView]);

  v44 = sub_44C94();
  v45 = sub_45688();
  objc_msgSend(v44, "addArrangedSubview:", v45);

  v46 = sub_44C94();
  v47 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___descriptionLabelContainer, (uint64_t (*)(uint64_t))sub_45050);
  objc_msgSend(v46, "addArrangedSubview:", v47);

  v48 = sub_44C94();
  v178 = v43;
  objc_msgSend(v48, "setCustomSpacing:afterView:", *(_QWORD *)&v35[v43], 30.0);

  v49 = sub_44C94();
  v50 = sub_45688();
  objc_msgSend(v49, "setCustomSpacing:afterView:", v50, 61.0);

  v51 = sub_44D54();
  v52 = sub_44E14();
  objc_msgSend(v51, "addArrangedSubview:", v52);

  v53 = sub_44D54();
  v54 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
  objc_msgSend(v53, "addArrangedSubview:", v54);

  v55 = sub_44D54();
  v56 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v55, "addArrangedSubview:", v56);

  v57 = sub_44D54();
  v177 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_benefitsTextLabel;
  objc_msgSend(v57, "addArrangedSubview:", *(_QWORD *)&v35[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_benefitsTextLabel]);

  v58 = sub_44D54();
  v59 = sub_44E14();
  objc_msgSend(v58, "setCustomSpacing:afterView:", v59, 23.0);

  v181 = (uint64_t)_swiftEmptyArrayStorage;
  v60 = swift_initStackObject(v26, v180);
  *(_OWORD *)(v60 + 16) = xmmword_2F15A0;
  v61 = sub_44C94();
  v62 = objc_msgSend(v61, "leadingAnchor");

  v63 = objc_msgSend(v35, "layoutMarginsGuide");
  v64 = objc_msgSend(v63, "leadingAnchor");

  v65 = objc_msgSend(v62, "constraintEqualToAnchor:", v64);
  *(_QWORD *)(v60 + 32) = v65;
  v66 = sub_44C94();
  v67 = objc_msgSend(v66, "topAnchor");

  v68 = objc_msgSend(v35, "layoutMarginsGuide");
  v69 = objc_msgSend(v68, "topAnchor");

  v70 = objc_msgSend(v67, "constraintEqualToAnchor:", v69);
  *(_QWORD *)(v60 + 40) = v70;
  v71 = objc_msgSend(*(id *)&v23[v176], "leadingAnchor");
  v72 = objc_msgSend(v35, "layoutMarginsGuide");
  v73 = objc_msgSend(v72, "leadingAnchor");

  v74 = objc_msgSend(v71, "constraintEqualToAnchor:", v73);
  *(_QWORD *)(v60 + 48) = v74;
  v75 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
  v76 = objc_msgSend(v75, "lastBaselineAnchor");

  v77 = sub_45688();
  v78 = objc_msgSend(v77, "lastBaselineAnchor");

  v79 = objc_msgSend(v76, "constraintEqualToAnchor:", v78);
  *(_QWORD *)(v60 + 56) = v79;
  v80 = objc_msgSend(*(id *)&v23[v176], "trailingAnchor");
  v81 = objc_msgSend(v35, "layoutMarginsGuide");
  v82 = objc_msgSend(v81, "trailingAnchor");

  v83 = objc_msgSend(v80, "constraintEqualToAnchor:", v82);
  *(_QWORD *)(v60 + 64) = v83;
  v84 = objc_msgSend(*(id *)&v23[v176], "topAnchor");
  v85 = sub_45688();
  v86 = objc_msgSend(v85, "lastBaselineAnchor");

  v87 = objc_msgSend(v84, "constraintEqualToAnchor:constant:", v86, 23.0);
  *(_QWORD *)(v60 + 72) = v87;
  v88 = sub_44D54();
  v89 = objc_msgSend(v88, "trailingAnchor");

  v90 = objc_msgSend(v35, "layoutMarginsGuide");
  v91 = objc_msgSend(v90, "trailingAnchor");

  v92 = objc_msgSend(v89, "constraintEqualToAnchor:", v91);
  *(_QWORD *)(v60 + 80) = v92;
  v93 = objc_msgSend(v35, "bottomAnchor");
  v94 = (char *)sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___descriptionLabelContainer, (uint64_t (*)(uint64_t))sub_45050);
  v95 = *(id *)&v94[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel];

  v96 = objc_msgSend(v95, "lastBaselineAnchor");
  v97 = objc_msgSend(v93, "constraintGreaterThanOrEqualToAnchor:constant:", v96, 36.0);

  v98.rawValue = static UILayoutPriority.highestBreakable.getter();
  isa = NSLayoutConstraint.withPriority(priority:)(v98).super.isa;

  *(_QWORD *)(v60 + 88) = isa;
  v100 = objc_msgSend(v35, "bottomAnchor");
  v101 = objc_msgSend(*(id *)&v35[v177], "lastBaselineAnchor");
  v102 = objc_msgSend(v100, "constraintGreaterThanOrEqualToAnchor:constant:", v101, 36.0);

  v103.rawValue = static UILayoutPriority.highestBreakable.getter();
  v104 = NSLayoutConstraint.withPriority(priority:)(v103).super.isa;

  *(_QWORD *)(v60 + 96) = v104;
  v105 = sub_44E14();
  v106 = objc_msgSend(v105, "heightAnchor");

  v107 = objc_msgSend(v35, "traitCollection");
  v108 = (char *)objc_msgSend(v107, "userInterfaceIdiom");

  v109 = 48.0;
  if (v108 == (_BYTE *)&dword_4 + 1)
    v109 = 34.0;
  v110 = objc_msgSend(v106, "constraintEqualToConstant:", v109);

  *(_QWORD *)(v60 + 104) = v110;
  v111 = sub_44E14();
  v112 = objc_msgSend(v111, "widthAnchor");

  if (qword_3CF110 != -1)
    swift_once(&qword_3CF110, sub_44C80);
  v113 = objc_msgSend(v112, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_3D2208);

  *(_QWORD *)(v60 + 112) = v113;
  v114 = sub_44C94();
  v115 = objc_msgSend(v114, "widthAnchor");

  v116 = objc_msgSend(v35, "layoutMarginsGuide");
  v117 = objc_msgSend(v116, "widthAnchor");

  v118 = objc_msgSend(v115, "constraintEqualToAnchor:multiplier:", v117, 0.54);
  *(_QWORD *)(v60 + 120) = v118;
  v119 = sub_44D54();
  v120 = objc_msgSend(v119, "widthAnchor");

  v121 = objc_msgSend(v35, "layoutMarginsGuide");
  v122 = objc_msgSend(v121, "widthAnchor");

  v123 = objc_msgSend(v120, "constraintEqualToAnchor:multiplier:", v122, 0.29);
  v124 = NSLayoutConstraint.withPriority(priority:)((__C::UILayoutPriority)1144750080).super.isa;

  *(_QWORD *)(v60 + 128) = v124;
  v125 = objc_msgSend(*(id *)&v35[v178], "widthAnchor");
  if (qword_3CF108 != -1)
    swift_once(&qword_3CF108, sub_44C68);
  v126 = objc_msgSend(v125, "constraintLessThanOrEqualToConstant:", *(double *)&xmmword_3D21F8);

  *(_QWORD *)(v60 + 136) = v126;
  v127 = objc_msgSend(*(id *)&v35[v178], "heightAnchor");
  v128 = objc_retainAutoreleasedReturnValue(objc_msgSend(v127, "constraintEqualToConstant:", *((double *)&xmmword_3D21F8
                                                                                             + 1)));

  *(_QWORD *)(v60 + 144) = v128;
  v129 = objc_msgSend(*(id *)&v35[v178], "topAnchor");
  v130 = objc_msgSend(v35, "topAnchor");
  v131 = objc_msgSend(v129, "constraintEqualToAnchor:constant:", v130, 100.0);

  *(_QWORD *)(v60 + 152) = v131;
  specialized Array._endMutation()(v132);
  sub_1F6D9C(v60);
  v133 = objc_msgSend(*(id *)&v35[v177], "firstBaselineAnchor");
  v134 = (char *)sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___descriptionLabelContainer, (uint64_t (*)(uint64_t))sub_45050);
  v135 = *(id *)&v134[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel];

  v136 = objc_msgSend(v135, "firstBaselineAnchor");
  v137 = objc_msgSend(v133, "constraintEqualToAnchor:", v136);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v138);
  v140 = *(_QWORD *)((char *)&dword_10 + (v181 & 0xFFFFFFFFFFFFFF8));
  v139 = *(_QWORD *)((char *)&dword_18 + (v181 & 0xFFFFFFFFFFFFFF8));
  if (v140 >= v139 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v139 > 1, v140 + 1, 1);
  v141 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v140, v137);
  specialized Array._endMutation()(v141);
  v142 = objc_msgSend(v179, "bottomAnchor");
  v143 = objc_msgSend(v35, "bottomAnchor");
  v144 = objc_msgSend(v142, "constraintEqualToAnchor:", v143);

  v145 = objc_msgSend(v179, "leadingAnchor");
  v146 = objc_msgSend(v35, "leadingAnchor");
  v147 = objc_msgSend(v145, "constraintEqualToAnchor:", v146);

  v148 = objc_msgSend(v179, "trailingAnchor");
  v149 = objc_msgSend(v35, "trailingAnchor");
  v150 = objc_msgSend(v148, "constraintEqualToAnchor:", v149);

  v151 = objc_msgSend(v179, "heightAnchor");
  v152 = objc_msgSend(v151, "constraintEqualToConstant:", 300.0);

  v153 = v181;
  if ((unint64_t)v181 >> 62)
  {
    if (v181 < 0)
      v175 = v181;
    else
      v175 = v181 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v181);
    v155 = _CocoaArrayWrapper.endIndex.getter(v175);
    swift_bridgeObjectRelease(v153);
    v156 = v155 + 4;
    if (!__OFADD__(v155, 4))
    {
LABEL_11:
      v157 = sub_215E80(v156, 1);
      specialized Array._endMutation()(v157);
      v144 = v144;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v144);
      v155 = *(_QWORD *)((char *)&dword_10 + (v181 & 0xFFFFFFFFFFFFFF8));
      v154 = *(_QWORD *)((char *)&dword_18 + (v181 & 0xFFFFFFFFFFFFFF8));
      if (v155 < v154 >> 1)
        goto LABEL_12;
      goto LABEL_25;
    }
  }
  else
  {
    v154 = v181 & 0xFFFFFFFFFFFFF8;
    v155 = *(_QWORD *)((char *)&dword_10 + (v181 & 0xFFFFFFFFFFFFF8));
    v156 = v155 + 4;
    if (!__OFADD__(v155, 4))
      goto LABEL_11;
  }
  __break(1u);
LABEL_25:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v154 > 1, v155 + 1, 1);
LABEL_12:
  v158 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v155, v144);
  specialized Array._endMutation()(v158);
  v159 = v147;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v159);
  v161 = *(_QWORD *)((char *)&dword_10 + (v181 & 0xFFFFFFFFFFFFFF8));
  v160 = *(_QWORD *)((char *)&dword_18 + (v181 & 0xFFFFFFFFFFFFFF8));
  if (v161 >= v160 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v160 > 1, v161 + 1, 1);
  v162 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v161, v159);
  specialized Array._endMutation()(v162);
  v163 = v150;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v163);
  v165 = *(_QWORD *)((char *)&dword_10 + (v181 & 0xFFFFFFFFFFFFFF8));
  v164 = *(_QWORD *)((char *)&dword_18 + (v181 & 0xFFFFFFFFFFFFFF8));
  if (v165 >= v164 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v164 > 1, v165 + 1, 1);
  v166 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v165, v163);
  specialized Array._endMutation()(v166);
  v167 = v152;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v167);
  v169 = *(_QWORD *)((char *)&dword_10 + (v181 & 0xFFFFFFFFFFFFFF8));
  v168 = *(_QWORD *)((char *)&dword_18 + (v181 & 0xFFFFFFFFFFFFFF8));
  if (v169 >= v168 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v168 > 1, v169 + 1, 1);
  v170 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v169, v167);
  specialized Array._endMutation()(v170);

  v171 = (void *)objc_opt_self(NSLayoutConstraint);
  v172 = v181;
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  v173 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v171, "activateConstraints:", v173, swift_bridgeObjectRelease(v172).n128_f64[0]);

  return v35;
}

void sub_4757C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  id v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  id v49;
  id v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  id v72;
  __n128 v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  __n128 v93;
  void *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  id v98;
  __n128 v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  NSString v103;
  id v104;
  uint64_t v105;
  double v106;
  uint64_t v107;
  NSString v108;
  char *v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  uint64_t v114;
  NSString v115;
  id v116;
  __n128 v117;
  NSString v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  double v123;
  uint64_t v124;
  NSString v125;
  __n128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  id v131;
  uint64_t v132;
  uint64_t inited;
  NSString *v134;
  NSString *v135;
  id v136;
  unint64_t v137;
  id v138;
  id v139;
  id v140;
  unint64_t v141;
  unint64_t v142;
  id v143;
  id v144;
  NSString v145;
  Class isa;
  id v147;
  uint64_t v148;
  uint64_t v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  __n128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  char *v164;
  __int128 v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  double v173;
  double v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  double v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  __n128 v186;
  __n128 v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  char *v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  _BYTE v210[40];
  char v211[56];
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  Swift::String v215;

  v1 = v0;
  v2 = type metadata accessor for ArtworkAspectRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v189 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v189 - v7;
  v197 = type metadata accessor for Logger(0);
  v196 = *(_QWORD *)(v197 - 8);
  __chkstk_darwin(v197);
  v195 = (char *)&v189 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v10);
  v198 = (char *)&v189 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = type metadata accessor for ArtworkRequest(0);
  v200 = *(_QWORD *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v13);
  v206 = (char *)&v189 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkModel(0);
  v16 = __chkstk_darwin(v15);
  v204 = (char *)&v189 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v21 = (char *)&v189 - v20;
  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_objectGraph);
  if (!v22)
    return;
  v202 = v19;
  v203 = v18;
  v191 = v3;
  v192 = v2;
  v23 = swift_retain(v22);
  v24 = ChannelHeader.banner.getter(v23);
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_bannerModel);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_bannerModel) = v24;
  swift_release(v25);
  v26 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_blurView);
  if (v26)
  {
    v27 = v26;
    v28 = ChannelHeader.offerType.getter();
    v29 = ChannelOfferType.rawValue.getter(v28);
    v31 = v30;
    v33 = ChannelOfferType.rawValue.getter(3);
    v34 = v32;
    if (v29 == v33 && v31 == v32)
    {
      v35 = 1;
      v34 = v31;
    }
    else
    {
      v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v33, v32, 0);
    }
    swift_bridgeObjectRelease(v31);
    objc_msgSend(v27, "setHidden:", v35 & 1, swift_bridgeObjectRelease(v34).n128_f64[0]);

  }
  v205 = v21;
  v36 = (char *)sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___descriptionLabelContainer, (uint64_t (*)(uint64_t))sub_45050);
  v37 = *(id *)&v36[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_moreButton];

  v38 = sub_4975C();
  v213 = type metadata accessor for FlowAction(0, v39);
  v214 = sub_239FC(&qword_3D22B0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
  v212 = v38;
  v207 = v22;
  UIControl.setAction(_:for:asPartOf:)(&v212, 0x2000, v22);

  __swift_destroy_boxed_opaque_existential_0(&v212);
  v41 = ChannelHeader.banner.getter(v40);
  if (v41)
  {
    v43 = v41;
    v44 = UpsellBanner.appName.getter();
    if (v45)
    {
      v46 = v44;
      v47 = v45;
      v194 = v6;
      v193 = v8;
      v48 = sub_44E14();
      v49 = *(id *)&v48[qword_3D5D10];

      v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v215._object = (void *)0xE000000000000000;
      v51._object = (void *)0x8000000000309580;
      v51._countAndFlagsBits = 0xD000000000000026;
      v52._countAndFlagsBits = 0;
      v52._object = (void *)0xE000000000000000;
      v215._countAndFlagsBits = 0;
      v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v215);

      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
      v55 = swift_allocObject(v54, 72, 7);
      *(_OWORD *)(v55 + 16) = xmmword_2F03C0;
      *(_QWORD *)(v55 + 56) = &type metadata for String;
      *(_QWORD *)(v55 + 64) = sub_49BB8();
      *(_QWORD *)(v55 + 32) = v46;
      *(_QWORD *)(v55 + 40) = v47;
      String.init(format:_:)(v53._countAndFlagsBits, v53._object, v55);
      v57 = v56;
      swift_bridgeObjectRelease(v53._object);
      v58 = String._bridgeToObjectiveC()();
      objc_msgSend(v49, "setTitle:forState:", v58, 0, swift_bridgeObjectRelease(v57).n128_f64[0]);

      v212 = v43;
      v59 = type metadata accessor for UpsellBanner(0);
      v60 = EntitlementsActionProviding.entitlementsAction.getter(v59, &protocol witness table for UpsellBanner);
      if (v60)
      {
        v61 = v60;
        v62 = sub_44E14();
        v213 = type metadata accessor for Action(0);
        v214 = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        v212 = v61;
        v63 = *(void **)&v62[qword_3D5D10];
        swift_retain(v61);
        v64 = v63;
        UIControl.setAction(_:for:asPartOf:)(&v212, 0x2000, v207);

        sub_1D5D4((uint64_t)&v212, (uint64_t)v210);
        v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C0);
        if (swift_dynamicCast(&v208, v210, v65, v66, 6))
        {
          v67 = v209;
          v68 = *v208;
          v190 = v208;
          v69 = swift_allocObject(&unk_37C430, 24, 7);
          swift_unknownObjectWeakInit(v69 + 16, v62);
          v70 = swift_retain(v69);
          dispatch thunk of CompletableAction.addCompletionHandler(_:)(sub_49B78, v69, v68, v67, v70);
          swift_release_n(v69, 2);
          sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
          v71 = swift_allocObject(&unk_37C430, 24, 7);
          swift_unknownObjectWeakInit(v71 + 16, v62);
          v72 = v64;
          v74 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v73, 0, 0, 0, sub_49B98, v71);
          objc_msgSend(v72, "addAction:forControlEvents:", v74, 0x2000);

          swift_release(v61);
          swift_release(v190);

        }
        else
        {

          swift_release(v61);
        }
        __swift_destroy_boxed_opaque_existential_0(&v212);
      }
      v95 = sub_44E14();
      objc_msgSend(v95, "setHidden:", 0);
      swift_release(v43);
      v8 = v193;
      v6 = v194;
      goto LABEL_26;
    }
    v42 = swift_release(v43);
  }
  v75 = ChannelHeader.banner.getter(v42);
  if (v75)
  {
    v76 = v75;
    v77 = UpsellBanner.action.getter();
    swift_release(v76);
    v78 = sub_44E14();
    v213 = type metadata accessor for Action(0);
    v214 = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v212 = v77;
    v79 = *(void **)&v78[qword_3D5D10];
    swift_retain(v77);
    v80 = v79;
    UIControl.setAction(_:for:asPartOf:)(&v212, 0x2000, v207);

    sub_1D5D4((uint64_t)&v212, (uint64_t)v210);
    v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C0);
    if (swift_dynamicCast(&v208, v210, v81, v82, 6))
    {
      v194 = (char *)v77;
      v83 = v209;
      v84 = v6;
      v85 = *v208;
      v193 = (char *)v208;
      v86 = v8;
      v87 = swift_allocObject(&unk_37C430, 24, 7);
      swift_unknownObjectWeakInit(v87 + 16, v78);
      v88 = swift_retain(v87);
      v89 = v85;
      v6 = v84;
      dispatch thunk of CompletableAction.addCompletionHandler(_:)(sub_49B78, v87, v89, v83, v88);
      v90 = v87;
      v8 = v86;
      swift_release_n(v90, 2);
      sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
      v91 = swift_allocObject(&unk_37C430, 24, 7);
      swift_unknownObjectWeakInit(v91 + 16, v78);
      v92 = v80;
      v188 = v91;
      v77 = (uint64_t)v194;
      v94 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v93, 0, 0, 0, sub_49B98, v188);
      objc_msgSend(v92, "addAction:forControlEvents:", v94, 0x2000);

      swift_release(v193);
    }
    else
    {

    }
    v96 = (uint64_t)v205;
    __swift_destroy_boxed_opaque_existential_0(&v212);
    v97 = sub_44E14();
    v98 = *(id *)&v97[qword_3D5D10];

    Action.title.getter(v99);
    if (v100)
    {
      v102 = v100;
      v103 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v101 = swift_bridgeObjectRelease(v102).n128_u64[0];
    }
    else
    {
      v103 = 0;
    }
    objc_msgSend(v98, "setTitle:forState:", v103, 0, v101);

    v95 = sub_44E14();
    objc_msgSend(v95, "setHidden:", 0);
    swift_release(v77);
    goto LABEL_27;
  }
  v95 = sub_44E14();
  objc_msgSend(v95, "setHidden:", 1);
LABEL_26:
  v96 = (uint64_t)v205;
LABEL_27:

  v104 = sub_45688();
  ChannelHeader.subtitle.getter();
  if (v105)
  {
    v107 = v105;
    v108 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v106 = swift_bridgeObjectRelease(v107).n128_u64[0];
  }
  else
  {
    v108 = 0;
  }
  objc_msgSend(v104, "setText:", v108, v106);

  v109 = (char *)sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___descriptionLabelContainer, (uint64_t (*)(uint64_t))sub_45050);
  v110 = *(id *)&v109[OBJC_IVAR____TtC23ShelfKitCollectionViews22FadingDescriptionLabel_descriptionLabel];

  ChannelHeader.channelDescription.getter(v111);
  if (v112)
  {
    v114 = v112;
    v115 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v113 = swift_bridgeObjectRelease(v114).n128_u64[0];
  }
  else
  {
    v115 = 0;
  }
  objc_msgSend(v110, "setText:", v115, v113);

  v116 = objc_retain(*(id *)(v1
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_benefitsTextLabel));
  v118 = (NSString)ChannelHeader.banner.getter(v117);
  if (v118)
  {
    UpsellBanner.longTitle.getter();
    v120 = v119;
    swift_release(v118);
    if (v120)
    {
      v118 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v120);
    }
    else
    {
      v118 = 0;
    }
  }
  objc_msgSend(v116, "setText:", v118);

  v121 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
  ChannelHeader.buttonCaptionLabelText.getter();
  if (v122)
  {
    v124 = v122;
    v125 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v123 = swift_bridgeObjectRelease(v124).n128_u64[0];
  }
  else
  {
    v125 = 0;
  }
  objc_msgSend(v121, "setText:", v125, v123);

  v127 = ChannelHeader.banner.getter(v126);
  if (v127 && (v128 = v127, v129 = UpsellBanner.subtitleAction.getter(), swift_release(v128), v129))
  {
    v194 = v6;
    v193 = v8;
    swift_release(v129);
    v130 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
    v131 = objc_msgSend(v130, "textColor");

    if (!v131)
    {
      __break(1u);
      return;
    }
    v132 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
    inited = swift_initStackObject(v132, v211);
    *(_OWORD *)(inited + 16) = xmmword_2EFA20;
    *(_QWORD *)(inited + 32) = NSUnderlineStyleAttributeName;
    *(_QWORD *)(inited + 40) = 1;
    *(_QWORD *)(inited + 64) = &type metadata for Int;
    *(_QWORD *)(inited + 72) = NSUnderlineColorAttributeName;
    *(_QWORD *)(inited + 104) = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
    *(_QWORD *)(inited + 80) = v131;
    v134 = NSUnderlineStyleAttributeName;
    v135 = NSUnderlineColorAttributeName;
    v136 = v131;
    v137 = sub_D4784(inited);
    v138 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
    v139 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
    v140 = objc_msgSend(v139, "text");

    if (v140)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
      v142 = v141;

    }
    else
    {
      v142 = 0xE000000000000000;
    }
    v8 = v193;
    v144 = objc_allocWithZone((Class)NSAttributedString);
    v145 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v142);
    type metadata accessor for Key(0);
    sub_239FC((unint64_t *)&qword_3D0150, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v147 = objc_msgSend(v144, "initWithString:attributes:", v145, isa, swift_bridgeObjectRelease(v137).n128_f64[0]);

    objc_msgSend(v138, "setAttributedText:", v147);
    v143 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
    objc_msgSend(v143, "setUserInteractionEnabled:", 1);

    v6 = v194;
    v96 = (uint64_t)v205;
  }
  else
  {
    v143 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
    objc_msgSend(v143, "setUserInteractionEnabled:", 0);
  }
  v148 = (uint64_t)v206;

  v149 = ((uint64_t (*)(void))ChannelHeader.primaryArtwork.getter)();
  HeaderModel.PrimaryArtwork.artwork.getter(v149);
  v150 = swift_release(v149);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v202 + 48))(v148, 1, v203, v150) == 1)
  {
    swift_release(v207);
    sub_D1D4(v148, &qword_3D0A58);
    return;
  }
  v151 = sub_2376C(v148, v96);
  v152 = ChannelHeader.primaryArtwork.getter(v151);
  v153 = HeaderModel.PrimaryArtwork.artworkType.getter();
  v154 = swift_release(v152);
  v155 = HeaderModel.PrimaryArtwork.ArtworkType.rawValue.getter(v153 & 1, v154);
  v157 = v156;
  v160 = HeaderModel.PrimaryArtwork.ArtworkType.rawValue.getter(1, v158);
  v161 = v159;
  if (v155 == v160 && v157 == v159)
  {
    swift_bridgeObjectRelease_n(v157, 2);
    v162 = (uint64_t)v204;
  }
  else
  {
    v163 = _stringCompareWithSmolCheck(_:_:expecting:)(v155, v157, v160, v159, 0);
    swift_bridgeObjectRelease(v157);
    swift_bridgeObjectRelease(v161);
    v162 = (uint64_t)v204;
    if ((v163 & 1) == 0)
    {
      sub_239C0(v96);
      swift_release(v207);
      return;
    }
  }
  v164 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_logoView);
  sub_27E84(v96, v162);
  if (qword_3CF108 != -1)
    swift_once(&qword_3CF108, sub_44C68);
  v165 = xmmword_3D21F8;
  v166 = type metadata accessor for CropCode(0);
  v167 = v198;
  v168 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 56))(v198, 1, 1, v166);
  v169 = v195;
  v170 = static Logger.artwork.getter(v168);
  v171 = static os_log_type_t.info.getter(v170);
  SignpostAndLogTrace(domain:level:)(&v212, v169, v171);
  (*(void (**)(char *, uint64_t))(v196 + 8))(v169, v197);
  v172 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v172, "scale");
  v174 = v173;

  v175 = v199;
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v162, 6, 0, v167, 0, _swiftEmptyArrayStorage, &v212, *(double *)&v165, *((double *)&v165 + 1), v174);
  v176 = type metadata accessor for ArtworkView(0);
  v177 = sub_239FC((unint64_t *)&qword_3D22B8, 255, type metadata accessor for ArtworkView, (uint64_t)&unk_2F56E0);
  v178 = v207;
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v175, v207, 0, v176, v177);
  v179 = (*(uint64_t (**)(char *, uint64_t))(v200 + 8))(v175, v201);
  v180 = ArtworkModel.size.getter(v179);
  v181 = &v164[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
  *(double *)v181 = v180;
  *((_QWORD *)v181 + 1) = v182;
  objc_msgSend(v164, "setNeedsLayout");
  v183 = v191;
  v184 = v192;
  (*(void (**)(char *, _QWORD, uint64_t))(v191 + 104))(v8, enum case for ArtworkAspectRule.aspectFit(_:), v192);
  objc_msgSend(v164, "effectiveUserInterfaceLayoutDirection");
  objc_msgSend(v164, "setContentMode:", 6);
  (*(void (**)(char *, char *, uint64_t))(v183 + 16))(v6, v8, v184);
  v185 = &v164[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule];
  v186 = swift_beginAccess(v185, &v212, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v183 + 40))(v185, v6, v184, v186);
  swift_endAccess(&v212);
  v187 = swift_release(v178);
  (*(void (**)(char *, uint64_t, __n128))(v183 + 8))(v8, v184, v187);
  sub_239C0(v96);
}

uint64_t sub_487EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD v28[4];
  _QWORD v29[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v28[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v28[-1] - v9;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_bannerModel);
  if (v11 && (v12 = swift_retain(v11), v13 = UpsellBanner.subtitleAction.getter(v12), swift_release(v11), v13))
  {
    v14 = static Logger.purchases.getter(v8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "Performing OAuth action on channel header subtitle click.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    v29[3] = type metadata accessor for Action(0);
    v29[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v29[0] = v13;
    swift_retain(v13);
    v18 = sub_451F4(&OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel, (uint64_t (*)(uint64_t))sub_45250);
    v28[3] = type metadata accessor for DynamicTypeLabel();
    v28[0] = v18;
    v20 = sub_239FC(&qword_3D22A8, v19, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalPaidChannelHeaderView, (uint64_t)&unk_2F1620);
    v21 = DependencyBindableView.perform(_:from:in:)(v29, v28, v1, ObjectType, v20);
    swift_release(v21);
    swift_release(v13);
    sub_D1D4((uint64_t)v28, &qword_3D1A70);
    return __swift_destroy_boxed_opaque_existential_0(v29);
  }
  else
  {
    v23 = static Logger.purchases.getter(v8);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "User clicked on OAuth but there was no action available.", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
}

uint64_t type metadata accessor for HorizontalPaidChannelHeaderView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView);
}

uint64_t sub_48BE4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_objectGraph));
}

uint64_t sub_48BF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_48C28(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_239FC(&qword_3D22A8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalPaidChannelHeaderView, (uint64_t)&unk_2F1620);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

char *sub_48C64()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  double v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  double v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton_progressView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton_progressView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton_progressView];
  }
  else
  {
    v4 = v0;
    v28 = 0;
    v29 = 0;
    LOBYTE(v30) = 1;
    v31 = xmmword_2F15B0;
    v32 = 0;
    v33 = 0;
    LOBYTE(v34) = 1;
    v35 = 0u;
    v36 = 0u;
    v5 = objc_allocWithZone((Class)type metadata accessor for CircularProgressView());
    v6 = CircularProgressView.init(style:)(&v28);
    v7 = objc_msgSend(v4, "titleLabel", v28, v29, v30, v31, v32, v33, v34, v35, v36);
    v8 = objc_msgSend(v7, "textColor");

    objc_msgSend(v6, "setTintColor:", v8);
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "addSubview:", v6);
    v9 = objc_msgSend(v6, "centerYAnchor");
    v10 = objc_msgSend(v4, "centerYAnchor");
    v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

    objc_msgSend(v11, "setActive:", 1);
    v12 = objc_msgSend(v6, "centerXAnchor");
    v13 = objc_msgSend(v4, "centerXAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

    objc_msgSend(v14, "setActive:", 1);
    v15 = objc_msgSend(v6, "heightAnchor");
    v16 = objc_msgSend(v4, "traitCollection");
    v17 = (char *)objc_msgSend(v16, "userInterfaceIdiom");

    if (v17 == (_BYTE *)&dword_4 + 1)
      v18 = 16.0;
    else
      v18 = 28.0;
    v19 = objc_msgSend(v15, "constraintEqualToConstant:", v18);

    objc_msgSend(v19, "setActive:", 1);
    v20 = objc_msgSend(v6, "widthAnchor");
    v21 = objc_msgSend(v4, "traitCollection");
    v22 = (char *)objc_msgSend(v21, "userInterfaceIdiom");

    if (v22 == (_BYTE *)&dword_4 + 1)
      v23 = 16.0;
    else
      v23 = 28.0;
    v24 = objc_msgSend(v20, "constraintEqualToConstant:", v23);

    objc_msgSend(v24, "setActive:", 1);
    objc_msgSend(v6, "setHidden:", 1);
    v25 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v26 = v2;
  return v3;
}

char *sub_48FB0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  id v5;
  char *v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  char *v23;
  double v24;
  id v25;
  id v26;
  char *v27;
  id v28;
  char *v29;
  double v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;

  v1 = qword_3FCFC8;
  v2 = *(void **)&v0[qword_3FCFC8];
  if (v2)
  {
    v3 = *(char **)&v0[qword_3FCFC8];
  }
  else
  {
    v4 = v0;
    v35 = 0;
    v36 = 0;
    LOBYTE(v37) = 1;
    v38 = xmmword_2F15B0;
    v39 = 0;
    v40 = 0;
    LOBYTE(v41) = 1;
    v42 = 0u;
    v43 = 0u;
    v5 = objc_allocWithZone((Class)type metadata accessor for CircularProgressView());
    v6 = CircularProgressView.init(style:)(&v35);
    v7 = *(void **)&v0[qword_3D5D10];
    v8 = v6;
    v9 = objc_msgSend(v7, "titleLabel", v35, v36, v37, v38, v39, v40, v41, v42, v43);
    v10 = objc_msgSend(v9, "textColor");

    objc_msgSend(v8, "setTintColor:", v10);
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v11 = objc_msgSend(*(id *)&v4[qword_3D5E28], "contentView");
    objc_msgSend(v11, "addSubview:", v8);

    v12 = objc_msgSend(v8, "centerYAnchor");
    v13 = objc_msgSend(v4, "centerYAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

    objc_msgSend(v14, "setActive:", 1);
    v15 = objc_msgSend(v8, "centerXAnchor");
    v16 = objc_msgSend(v4, "centerXAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

    objc_msgSend(v17, "setActive:", 1);
    v18 = objc_msgSend(v8, "heightAnchor");
    v19 = &v4[qword_3DBA20];
    v20 = type metadata accessor for VEVButtonContainer.Style(0);
    v21 = &v19[*(int *)(v20 + 24)];
    if ((v21[16] & 1) != 0)
    {
      v22 = objc_msgSend(v4, "traitCollection");
      v23 = (char *)objc_msgSend(v22, "userInterfaceIdiom");

      v24 = 28.0;
      if (v23 == (_BYTE *)&dword_4 + 1)
        v24 = 16.0;
    }
    else
    {
      v24 = *(double *)v21;
    }
    v25 = objc_msgSend(v18, "constraintEqualToConstant:", v24);

    objc_msgSend(v25, "setActive:", 1);
    v26 = objc_msgSend(v8, "widthAnchor");
    v27 = &v19[*(int *)(v20 + 24)];
    if ((v27[16] & 1) != 0)
    {
      v28 = objc_msgSend(v4, "traitCollection");
      v29 = (char *)objc_msgSend(v28, "userInterfaceIdiom");

      v30 = 28.0;
      if (v29 == (_BYTE *)&dword_4 + 1)
        v30 = 16.0;
    }
    else
    {
      v30 = *(double *)v27;
    }
    v31 = objc_msgSend(v26, "constraintEqualToConstant:", v30);

    objc_msgSend(v31, "setActive:", 1);
    objc_msgSend(v8, "setHidden:", 1);
    v32 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v33 = v2;
  return v3;
}

void sub_49394(unsigned __int8 a1)
{
  void *v1;
  void *v2;
  char *v4;
  char *v5;
  __n128 v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  double v11;
  _BYTE v12[24];

  v2 = v1;
  v4 = sub_48C64();
  v5 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
  v6 = swift_beginAccess(&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState], v12, 1, 0);
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v6.n128_u32[0] = 0;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign], "setOpacity:", v6.n128_f64[0]);
  v7 = *(double *)v5;
  LODWORD(v7) = 1.0;
  if (v5[8] & 1 | (*(double *)v5 == 0.0))
    *(float *)&v7 = 0.0;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_backgroundRing], "setOpacity:", v7);
  v8 = *(double *)v5;
  if (v5[8] & 1 | (*(double *)v5 == 0.0))
    v8 = 0.85;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring], "setStrokeEnd:", v8);
  objc_msgSend(v4, "updateRotationAnimation");
  sub_15370C();
  objc_msgSend(v4, "setHidden:", (a1 ^ 1) & 1);
  v9 = objc_msgSend(v2, "titleLabel");
  if (v9)
  {
    v10 = v9;
    v11 = 1.0;
    if ((a1 & 1) != 0)
      v11 = 0.0;
    objc_msgSend(v9, "setAlpha:", v11);

  }
  objc_msgSend(v2, "setUserInteractionEnabled:", (a1 ^ 1) & 1);

}

void sub_49528(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  char *v5;
  __n128 v6;
  double v7;
  double v8;
  _BYTE v9[24];

  v2 = v1;
  v4 = sub_48FB0();
  v5 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
  v6 = swift_beginAccess(&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState], v9, 1, 0);
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v6.n128_u32[0] = 0;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_stopSign], "setOpacity:", v6.n128_f64[0]);
  v7 = *(double *)v5;
  LODWORD(v7) = 1.0;
  if (v5[8] & 1 | (*(double *)v5 == 0.0))
    *(float *)&v7 = 0.0;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_backgroundRing], "setOpacity:", v7);
  v8 = *(double *)v5;
  if (v5[8] & 1 | (*(double *)v5 == 0.0))
    v8 = 0.85;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_ring], "setStrokeEnd:", v8);
  objc_msgSend(v4, "updateRotationAnimation");
  sub_15370C();
  objc_msgSend(v4, "setHidden:", (a1 & 1) == 0);
  objc_msgSend(*(id *)(v2 + qword_3D5D10), "setHidden:", a1 & 1);

}

void sub_4967C(uint64_t a1, uint64_t a2)
{
  sub_49694(a1, a2, (void (*)(_QWORD))sub_49394);
}

void sub_49688(uint64_t a1, uint64_t a2)
{
  sub_49694(a1, a2, (void (*)(_QWORD))sub_49528);
}

void sub_49694(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3(0);

  }
}

void sub_496EC(uint64_t a1, uint64_t a2)
{
  sub_49704(a1, a2, (void (*)(uint64_t))sub_49394);
}

void sub_496F8(uint64_t a1, uint64_t a2)
{
  sub_49704(a1, a2, (void (*)(uint64_t))sub_49528);
}

void sub_49704(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3(1);

  }
}

uint64_t sub_4975C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  objc_class *v21;
  char Attributed;
  id v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  int v41;
  int v42;
  char *v43;
  uint64_t v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;

  v0 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v0);
  v57 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for FlowDestinationPageHeader(0);
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  __chkstk_darwin(v2);
  v56 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FlowPresentationContext(0);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for FlowDestination(0);
  v7 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v9 = (uint64_t *)((char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3E1EE0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = ChannelHeader.channelDescription.getter(v14);
  if (v18)
    v19 = v17;
  else
    v19 = 0;
  if (v18)
    v20 = v18;
  else
    v20 = 0xE000000000000000;
  v21 = (objc_class *)type metadata accessor for LanguageAwareString(0);
  Attributed = static LanguageAwareString.alwaysGenerateAttributedString.getter();
  v23 = objc_allocWithZone(v21);
  v24 = Attributed & 1;
  v25 = v6;
  v26 = LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(v19, v20, 0, v24);
  v27 = type metadata accessor for ShareSheetContentSource(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v16, 1, 1, v27);
  v28 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 1, 1, v28);
  v29 = type metadata accessor for Paragraph(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v30 = Paragraph.init(text:alignment:style:isCollapsed:isLinkDetectionEnabled:shareSheetContentSource:impressionMetrics:)(v26, 0, 2, 0, 1, v16, v12);
  v31 = ChannelHeader.title.getter();
  v33 = v32;
  v34 = type metadata accessor for LongDescription(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v35 = swift_retain(v30);
  v36 = LongDescription.init(title:subtitle:summary:)(v31, v33, 0, 0, v30, v35);
  *v9 = v36;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for FlowDestination.longDescription(_:), v51);
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v25, enum case for FlowPresentationContext.presentModal(_:), v53);
  v37 = swift_retain(v36);
  v38 = static Link.Presentation.textFollowsTintColor.getter(v37);
  v39 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  v40 = Link.Presentation.init(rawValue:)(0);
  v41 = Link.Presentation.init(rawValue:)(v40);
  if (Link.Presentation.init(rawValue:)(v41 & v38) != v38)
    v40 = Link.Presentation.init(rawValue:)(v40 | v38);
  v42 = Link.Presentation.init(rawValue:)(v40);
  if (Link.Presentation.init(rawValue:)(v42 & v39) != v39)
    v40 = Link.Presentation.init(rawValue:)(v40 | v39);
  v43 = v56;
  v44 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v54 + 104))(v56, enum case for FlowDestinationPageHeader.standard(_:), v55);
  v45 = v57;
  static ActionMetrics.notInstrumented.getter(v44);
  v47 = type metadata accessor for FlowAction(0, v46);
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  v48 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v9, 0, 0, 0, 0, v25, 0, v40, v43, v45);
  swift_release(v36);
  swift_release(v30);
  return v48;
}

uint64_t sub_49B54()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_49B78(uint64_t a1)
{
  uint64_t v1;

  sub_49694(a1, v1, (void (*)(_QWORD))sub_49528);
}

void sub_49B98(uint64_t a1)
{
  uint64_t v1;

  sub_49704(a1, v1, (void (*)(uint64_t))sub_49528);
}

unint64_t sub_49BB8()
{
  unint64_t result;

  result = qword_3D22D0;
  if (!qword_3D22D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_3D22D0);
  }
  return result;
}

void sub_49BFC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  id v7;
  double v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_logoView;
  v3 = type metadata accessor for ArtworkView(0);
  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  v5 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v6 = *(void **)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;

  sub_E9020();
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v7);

  LODWORD(v8) = 1148846080;
  objc_msgSend(v4, "setContentCompressionResistancePriority:forAxis:", 1, v8);
  *(_QWORD *)&v1[v2] = v4;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___leftVerticalStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___rightVerticalStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_rightView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_lastColumnWidth] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___subscribeButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___descriptionLabelContainer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___buttonCaptionLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView____lazy_storage___subtitleLabel] = 0;
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_benefitsTextLabel;
  *(_QWORD *)&v1[v9] = sub_45B20();
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_separatorView;
  *(_QWORD *)&v1[v10] = sub_45F1C();
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_blurView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_bannerModel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31HorizontalPaidChannelHeaderView_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/HorizontalPaidChannelHeaderView.swift", 61, 2, 213, 0);
  __break(1u);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_3(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

char *sub_49DE4(__int128 *a1, void *a2)
{
  _BYTE *v2;
  uint64_t v4;
  __int16 v5;
  int v6;
  char *v7;
  char *v8;
  id v9;
  __int16 v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[5];
  uint64_t v22;
  __int16 v23;
  objc_super v24;

  v19 = a1[1];
  v20 = *a1;
  v17 = a1[3];
  v18 = a1[2];
  v16 = a1[4];
  v4 = *((_QWORD *)a1 + 10);
  v5 = *((unsigned __int8 *)a1 + 88);
  v6 = *((unsigned __int8 *)a1 + 89);
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_maximumFadeWidth] = 0x4059000000000000;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeInPosition] = 0;
  v7 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_touchInsets];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v7[32] = 1;
  v8 = v2;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeLayer] = sub_203A64(a2);

  v24.receiver = v8;
  v24.super_class = (Class)type metadata accessor for FadeInDynamicTypeButton();
  v9 = objc_msgSendSuper2(&v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21[0] = v20;
  v21[1] = v19;
  if (v6)
    v10 = 256;
  else
    v10 = 0;
  v21[2] = v18;
  v21[3] = v17;
  v21[4] = v16;
  v22 = v4;
  v23 = v10 | v5;
  v11 = (char *)v9;
  sub_2D5A30((uint64_t)v21);
  objc_msgSend(v11, "setBackgroundColor:", a2);
  v12 = objc_msgSend(v11, "layer");
  objc_msgSend(v12, "setMasksToBounds:", 0);

  v13 = objc_msgSend(v11, "layer");
  v14 = *(id *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeLayer];
  objc_msgSend(v13, "addSublayer:", v14);

  return v11;
}

id sub_4A048(char a1)
{
  char *v1;
  id result;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  _QWORD *v8;
  _QWORD *v9;
  char *v10;
  double v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v15;
  NSArray v16;
  _OWORD v17[2];

  result = objc_msgSend(v1, "setNeedsLayout");
  if (((((a1 & 1) == 0) ^ v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeInPosition]) & 1) == 0)
  {
    v4 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v4, "begin");
    objc_msgSend(v4, "setValue:forKey:", kCFBooleanTrue, kCATransactionDisableActions);
    v5 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeLayer];
    v6 = objc_msgSend(v5, "colors");
    if (v6)
    {
      v7 = v6;
      v8 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, (char *)&type metadata for Any + 8);

      v9 = (_QWORD *)v8[2];
      if (!v9)
        goto LABEL_16;
      v10 = (char *)v9 - 1;
      if (v9 == (_QWORD *)((char *)&dword_0 + 1))
        goto LABEL_16;
      if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
LABEL_24:
        v8 = sub_E1D0C(v8);
      v12 = v8 + 4;
      v9 = &v8[4 * (_QWORD)v9];
      v13 = 1;
      do
      {
        if ((char *)(v13 - 1) != v10)
        {
          v15 = v8[2];
          if (v13 - 1 >= v15)
          {
            __break(1u);
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          sub_1D66C((uint64_t)v12, (uint64_t)v17);
          if ((unint64_t)v10 >= v15)
            goto LABEL_22;
          __swift_assign_boxed_opaque_existential_0(v12, v9);
          if ((unint64_t)v10 >= v8[2])
            goto LABEL_23;
          __swift_destroy_boxed_opaque_existential_0(v9);
          sub_1D65C(v17, v9);
        }
        --v10;
        v9 -= 4;
        v12 += 4;
      }
      while (v13++ < (uint64_t)v10);
      if (v8)
      {
LABEL_16:
        v16.super.isa = Array._bridgeToObjectiveC()().super.isa;
        *(_QWORD *)&v11 = swift_bridgeObjectRelease(v8).n128_u64[0];
      }
      else
      {
        v16.super.isa = 0;
      }
      objc_msgSend(v5, "setColors:", v16.super.isa, v11);

    }
    else
    {
      objc_msgSend(v5, "setColors:", 0);
    }
    return objc_msgSend(v4, "commit");
  }
  return result;
}

void sub_4A368()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  double v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v23;
  NSArray v24;
  _OWORD v25[2];

  v1 = v0;
  v2 = objc_msgSend(v0, "backgroundColor");
  if (v2)
  {
    v3 = v2;
    v4 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v4, "begin");
    objc_msgSend(v4, "setValue:forKey:", kCFBooleanTrue, kCATransactionDisableActions);
    v5 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeLayer];
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
    v7 = swift_allocObject(v6, 96, 7);
    *(_OWORD *)(v7 + 16) = xmmword_2EFA20;
    v8 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.0);
    v9 = objc_msgSend(v8, "CGColor");

    type metadata accessor for CGColor(0);
    v11 = v10;
    *(_QWORD *)(v7 + 56) = v10;
    *(_QWORD *)(v7 + 32) = v9;
    v12 = objc_msgSend(v3, "CGColor");
    *(_QWORD *)(v7 + 88) = v11;
    *(_QWORD *)(v7 + 64) = v12;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "setColors:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

    if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeInPosition] == 1)
    {
      v14 = objc_msgSend(v5, "colors");
      if (v14)
      {
        v15 = v14;
        v16 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, (char *)&type metadata for Any + 8);

        v17 = (_QWORD *)v16[2];
        if (!v17)
          goto LABEL_17;
        v18 = (char *)v17 - 1;
        if (v17 == (_QWORD *)((char *)&dword_0 + 1))
          goto LABEL_17;
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
LABEL_25:
          v16 = sub_E1D0C(v16);
        v20 = v16 + 4;
        v17 = &v16[4 * (_QWORD)v17];
        v21 = 1;
        do
        {
          if ((char *)(v21 - 1) != v18)
          {
            v23 = v16[2];
            if (v21 - 1 >= v23)
            {
              __break(1u);
LABEL_23:
              __break(1u);
LABEL_24:
              __break(1u);
              goto LABEL_25;
            }
            sub_1D66C((uint64_t)v20, (uint64_t)v25);
            if ((unint64_t)v18 >= v23)
              goto LABEL_23;
            __swift_assign_boxed_opaque_existential_0(v20, v17);
            if ((unint64_t)v18 >= v16[2])
              goto LABEL_24;
            __swift_destroy_boxed_opaque_existential_0(v17);
            sub_1D65C(v25, v17);
          }
          --v18;
          v17 -= 4;
          v20 += 4;
        }
        while (v21++ < (uint64_t)v18);
        if (v16)
        {
LABEL_17:
          v24.super.isa = Array._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)&v19 = swift_bridgeObjectRelease(v16).n128_u64[0];
        }
        else
        {
          v24.super.isa = 0;
        }
        objc_msgSend(v5, "setColors:", v24.super.isa, v19);

      }
      else
      {
        objc_msgSend(v5, "setColors:", 0);
      }
    }
    objc_msgSend(v4, "commit");

  }
}

void sub_4A654()
{
  char *v0;
  char *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  unsigned __int16 v14;
  id v15;
  id v16;
  double v17;
  double v18;
  double v19;
  char v20;
  uint64_t v21;
  double MaxX;
  double MinY;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  _QWORD v34[11];
  __int16 v35;
  objc_super v36;
  CGRect v37;
  CGRect v38;

  v36.receiver = v0;
  v36.super_class = (Class)type metadata accessor for FadeInDynamicTypeButton();
  objc_msgSendSuper2(&v36, "layoutSubviews");
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase];
  v2 = *(unsigned __int16 *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17DynamicTypeButton_fontUseCase + 88];
  if (v2 >> 8 <= 0xFE)
  {
    v3 = *((_QWORD *)v1 + 2);
    v27 = *((_QWORD *)v1 + 1);
    v28 = v3;
    v4 = *((_QWORD *)v1 + 3);
    v31 = *((_QWORD *)v1 + 4);
    v30 = v0;
    v5 = *((_QWORD *)v1 + 5);
    v32 = (void *)*((_QWORD *)v1 + 6);
    v33 = *(void **)v1;
    v7 = *((_QWORD *)v1 + 7);
    v6 = *((_QWORD *)v1 + 8);
    v9 = *((_QWORD *)v1 + 9);
    v8 = *((_QWORD *)v1 + 10);
    v29 = v6;
    v10 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
    sub_DDA0(v33, v27, v3, v4, v31, v5, v32, v7, v6, v9, v8, v2, BYTE1(v2) & 1);
    v11 = objc_msgSend(v10, "system");
    v12 = objc_msgSend(v11, "preferredContentSizeCategory");

    v13 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v12);
    v34[0] = v33;
    v34[1] = v27;
    v34[2] = v28;
    v34[3] = v4;
    v34[4] = v31;
    v34[5] = v5;
    v34[6] = v32;
    v34[7] = v7;
    v34[8] = v6;
    v34[9] = v9;
    v34[10] = v8;
    v14 = v2;
    v35 = v2 & 0x1FF;
    v15 = sub_1D5728((uint64_t)v34, v13);
    v16 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v15, 0.0);

    objc_msgSend(v16, "lineHeight");
    v18 = v17;

    if (v18 + v18 >= *(double *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_maximumFadeWidth])
      v19 = *(double *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_maximumFadeWidth];
    else
      v19 = v18 + v18;
    v20 = v30[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeInPosition];
    objc_msgSend(v30, "bounds");
    if ((v20 & 1) != 0)
      MaxX = CGRectGetMaxX(*(CGRect *)&v21);
    else
      MaxX = CGRectGetMinX(*(CGRect *)&v21) - v19;
    objc_msgSend(v30, "bounds");
    MinY = CGRectGetMinY(v37);
    objc_msgSend(v30, "bounds");
    objc_msgSend(*(id *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton_fadeLayer], "setFrame:", MaxX, MinY, v19, CGRectGetHeight(v38));
    sub_DC94(v33, v27, v28, v4, v31, v5, v32, v7, v29, v9, v8, v14);
  }
}

void sub_4AA6C()
{
  uint64_t v0;

}

id sub_4AA7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FadeInDynamicTypeButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FadeInDynamicTypeButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23FadeInDynamicTypeButton);
}

uint64_t storeEnumTagSinglePayload for FadeInDynamicTypeButton.FadeInPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_4AB28 + 4 * byte_2F1675[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_4AB5C + 4 * byte_2F1670[v4]))();
}

uint64_t sub_4AB5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_4AB64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x4AB6CLL);
  return result;
}

uint64_t sub_4AB78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x4AB80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_4AB84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_4AB8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FadeInDynamicTypeButton.FadeInPosition()
{
  return &type metadata for FadeInDynamicTypeButton.FadeInPosition;
}

unint64_t sub_4ABAC()
{
  unint64_t result;

  result = qword_3D2328;
  if (!qword_3D2328)
  {
    result = swift_getWitnessTable(&unk_2F1718, &type metadata for FadeInDynamicTypeButton.FadeInPosition);
    atomic_store(result, (unint64_t *)&qword_3D2328);
  }
  return result;
}

_QWORD *__swift_assign_boxed_opaque_existential_0(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t FlowController.change(tab:popToRoot:preserveTransientView:userInitiated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  type metadata accessor for BaseObjectGraph(0);
  v12 = BaseObjectGraph.__allocating_init(name:_:)(0x7974706D45, 0xE500000000000000, &_swiftEmptyArrayStorage);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a6 + 40))(a1, 0, a2, a3, a4, 0, v12, a5, a6);
  return swift_release(v12);
}

uint64_t dispatch thunk of ScrollCoordinating.remove<A>(type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of FlowController.show(destination:hints:referrer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of FlowController.change(tab:execute:popToRoot:preserveTransientView:userInitiated:suppressMetrics:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 40))();
}

uint64_t dispatch thunk of ScrollCoordinatorProtocol.willEndDragging(in:with:targetContentOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of SearchSuggestionsController.storeDataProvider.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

double sub_4AE3C(void *a1, uint64_t a2, char a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  uint64_t v13;
  double MinY;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  void *v28;
  double v29;
  double v30;
  BOOL v31;
  double v32;
  __int128 v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int16 v52;
  id v53;
  id v54;
  double v55;
  double v56;
  CGFloat v57;
  double MinX;
  CGFloat v59;
  double Width;
  uint64_t v62;
  uint64_t v63;
  unsigned __int16 v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  CGFloat v71;
  CGFloat v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  double v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  CGFloat v90;
  CGFloat v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int16 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _BYTE v117[28];
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;

  v70 = a1;
  v69 = type metadata accessor for FloatingPointRoundingRule(0);
  v89 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v68 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = a4;
  v118.origin.x = a4;
  v72 = a5;
  v118.origin.y = a5;
  v90 = a6;
  v118.size.width = a6;
  v91 = a7;
  v118.size.height = a7;
  MinY = CGRectGetMinY(v118);
  v15 = *(_QWORD *)(a2 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain(a2);
    v16 = v15 - 1;
    v17 = 32;
    v18 = 0.0;
    v66 = a3 & 1;
    v67 = a2;
    v19 = v72;
    v20 = v90;
    v21 = v91;
    while (1)
    {
      *(_OWORD *)&v117[12] = *(_OWORD *)(a2 + v17 + 108);
      v22 = *(_OWORD *)(a2 + v17 + 16);
      v111 = *(_OWORD *)(a2 + v17);
      v23 = *(_OWORD *)(a2 + v17 + 64);
      v24 = *(_OWORD *)(a2 + v17 + 96);
      v116 = *(_OWORD *)(a2 + v17 + 80);
      *(_OWORD *)v117 = v24;
      v25 = *(_OWORD *)(a2 + v17 + 32);
      v26 = *(_OWORD *)(a2 + v17 + 48);
      v112 = v22;
      v113 = v25;
      v114 = v26;
      v115 = v23;
      v27 = v117[26];
      v28 = (void *)v111;
      sub_14684((uint64_t)&v111);
      objc_msgSend(v28, "sizeThatFits:", v90, v91);
      if (v27 != 1 || (v29 >= COERCE_DOUBLE(1) ? (v31 = v30 < COERCE_DOUBLE(1)) : (v31 = 1), !v31))
      {
        v32 = v30;
        v85 = v18;
        v87 = v17;
        v88 = v16;
        v86 = MinY;
        v77 = *((_QWORD *)&v111 + 1);
        v78 = v112;
        LODWORD(v79) = BYTE8(v112);
        v33 = v113;
        v74 = *((_QWORD *)&v114 + 1);
        v34 = v114;
        v73 = v115;
        v35 = (void *)v116;
        v92 = *((_QWORD *)&v115 + 1);
        v36 = *((_QWORD *)&v116 + 1);
        v37 = *(_QWORD *)v117;
        v38 = *(_QWORD *)&v117[8];
        v39 = *(_QWORD *)&v117[16];
        v40 = *(unsigned __int16 *)&v117[24];
        objc_msgSend(v28, "lastBaselineFromBottom");
        v42 = v41;
        v80 = v40;
        v64 = v40;
        v81 = v39;
        v63 = v39;
        v82 = v38;
        v62 = v38;
        v83 = v37;
        v95 = *((_QWORD *)&v33 + 1);
        v94 = v34;
        v43 = v92;
        v44 = v74;
        v45 = v73;
        v93 = v36;
        sub_1472C((id)v33, *((uint64_t *)&v33 + 1), v34, v74, v73, v92, v35, v36, v37, v62, v63, v64);
        v84 = v28;
        if (qword_3CFAB0 != -1)
          swift_once(&qword_3CFAB0, sub_1DD388);
        v46 = v69;
        v47 = __swift_project_value_buffer(v69, (uint64_t)qword_3FCFB0);
        v48 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v68, v47, v46);
        v96 = v77;
        v97 = v78;
        v98 = (char)v79;
        v76 = (id)v33;
        v99 = v33;
        v100 = v95;
        v101 = v94;
        v102 = v44;
        v103 = v45;
        v104 = v43;
        v105 = v35;
        v106 = v93;
        v49 = v83;
        v107 = v83;
        v50 = v82;
        v108 = v82;
        v51 = v81;
        v109 = v81;
        v52 = v80;
        v110 = v80;
        v53 = objc_msgSend(v70, "traitCollection");
        v79 = v35;
        v54 = v53;
        sub_1DD06C((uint64_t)v53, v48, v66);
        v56 = v55;

        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v48, v46);
        sub_14788(v76, v95, v94, v44, v45, v92, v79, v93, v49, v50, v51, v52);
        v57 = v71;
        v119.origin.x = v71;
        v119.origin.y = v19;
        v119.size.width = v20;
        v119.size.height = v21;
        MinX = CGRectGetMinX(v119);
        v75 = v42;
        v59 = v86 - v85 + v56 - (v32 - v42);
        v120.origin.x = v57;
        v120.origin.y = v19;
        v120.size.width = v20;
        v120.size.height = v21;
        Width = CGRectGetWidth(v120);
        objc_msgSend(v84, "setFrame:", MinX, v59, Width, v32);
        v121.origin.x = MinX;
        v121.origin.y = v59;
        v121.size.width = Width;
        v121.size.height = v32;
        MinY = CGRectGetMaxY(v121);
        v18 = v75;
        a2 = v67;
        v16 = v88;
        v17 = v87;
      }
      sub_147CC((uint64_t)&v111);
      if (!v16)
        break;
      --v16;
      v17 += 128;
    }
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v18 = 0.0;
  }
  return MinY - v18;
}

uint64_t initializeBufferWithCopyOfBuffer for FixedSpaceLabelLayout(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for FixedSpaceLabelLayout(_QWORD *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t *assignWithCopy for FixedSpaceLabelLayout(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t *assignWithTake for FixedSpaceLabelLayout(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FixedSpaceLabelLayout(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FixedSpaceLabelLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FixedSpaceLabelLayout()
{
  return &type metadata for FixedSpaceLabelLayout;
}

void destroy for FixedSpaceLabelLayout.Attributes(uint64_t a1)
{

  sub_14788(*(id *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_WORD *)(a1 + 120));
}

uint64_t initializeWithCopy for FixedSpaceLabelLayout.Attributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 40);
  v18 = *(void **)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(void **)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 104);
  v11 = *(_QWORD *)(a2 + 112);
  v12 = *(_WORD *)(a2 + 120);
  v13 = v4;
  sub_1472C(v18, v17, v16, v5, v6, v7, v8, v15, v10, v9, v11, v12);
  *(_QWORD *)(a1 + 32) = v18;
  *(_QWORD *)(a1 + 40) = v17;
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v11;
  *(_WORD *)(a1 + 120) = v12;
  *(_WORD *)(a1 + 122) = *(_WORD *)(a2 + 122);
  return a1;
}

uint64_t assignWithCopy for FixedSpaceLabelLayout.Attributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  unsigned __int16 v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int16 v31;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v7;
  v8 = *(void **)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(void **)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v28 = *(_QWORD *)(a2 + 96);
  v29 = *(_QWORD *)(a2 + 104);
  v30 = *(_QWORD *)(a2 + 112);
  v31 = *(_WORD *)(a2 + 120);
  sub_1472C(v8, v9, v10, v11, v12, v13, v14, v15, v28, v29, v30, v31);
  v16 = *(void **)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  v22 = *(void **)(a1 + 80);
  v23 = *(_QWORD *)(a1 + 88);
  v24 = *(_OWORD *)(a1 + 96);
  v25 = *(_QWORD *)(a1 + 112);
  v26 = *(_WORD *)(a1 + 120);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v28;
  *(_QWORD *)(a1 + 104) = v29;
  *(_QWORD *)(a1 + 112) = v30;
  *(_WORD *)(a1 + 120) = v31;
  sub_14788(v16, v17, v18, v19, v20, v21, v22, v23, v24, *((uint64_t *)&v24 + 1), v25, v26);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
  *(_BYTE *)(a1 + 123) = *(_BYTE *)(a2 + 123);
  return a1;
}

__n128 __swift_memcpy124_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_OWORD *)(a1 + 108) = *(__int128 *)((char *)a2 + 108);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for FixedSpaceLabelLayout.Attributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  __int16 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unsigned __int16 v17;
  __int128 v18;
  __int128 v19;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 112);
  v6 = *(_WORD *)(a2 + 120);
  v7 = *(void **)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(void **)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 88);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 112);
  v17 = *(_WORD *)(a1 + 120);
  v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v18;
  v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v19;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = v5;
  *(_WORD *)(a1 + 120) = v6;
  sub_14788(v7, v8, v9, v10, v11, v12, v13, v14, v15, *((uint64_t *)&v15 + 1), v16, v17);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
  *(_BYTE *)(a1 + 123) = *(_BYTE *)(a2 + 123);
  return a1;
}

uint64_t getEnumTagSinglePayload for FixedSpaceLabelLayout.Attributes(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 124))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FixedSpaceLabelLayout.Attributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 120) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 124) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 124) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FixedSpaceLabelLayout.Attributes()
{
  return &type metadata for FixedSpaceLabelLayout.Attributes;
}

uint64_t sub_4B9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v1 = type metadata accessor for AccessibilityChildBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CategorySelectionContainerModifier(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2380);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2388);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v10 = static Alignment.top.getter(v12);
  v10[1] = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2390);
  sub_4BB84(v0, (uint64_t)v10 + *(int *)(v16 + 44));
  *v7 = swift_getKeyPath(&unk_2F1930);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0DE0);
  swift_storeEnumTagMultiPayload(v7, v17, 0);
  sub_1B79C((uint64_t)v7, (uint64_t)&v14[*(int *)(v11 + 36)], type metadata accessor for CategorySelectionContainerModifier);
  v18 = sub_D210((uint64_t)v10, (uint64_t)v14, &qword_3D2380);
  static AccessibilityChildBehavior.contain.getter(v18);
  v19 = sub_4F3DC();
  View.accessibilityElement(children:)(v4, v11, v19);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_D1D4((uint64_t)v14, &qword_3D2388);
}

uint64_t sub_4BB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for CategorySelection(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CategorySelectionBodyContent(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v19 - v11;
  sub_19C4C(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for CategorySelection);
  v13 = &v10[*(int *)(v7 + 20)];
  *(_QWORD *)v13 = swift_getKeyPath(&unk_2F1960);
  v13[8] = 0;
  v14 = &v10[*(int *)(v7 + 24)];
  *(_QWORD *)v14 = swift_getKeyPath(&unk_2F1990);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  sub_1B79C((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for CategorySelection);
  sub_1B79C((uint64_t)v10, (uint64_t)v12, type metadata accessor for CategorySelectionBodyContent);
  KeyPath = swift_getKeyPath(&unk_2F1960);
  v16 = swift_getKeyPath(&unk_2F1990);
  sub_19C4C((uint64_t)v12, (uint64_t)v10, type metadata accessor for CategorySelectionBodyContent);
  sub_19C4C((uint64_t)v10, a2, type metadata accessor for CategorySelectionBodyContent);
  v17 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D23B0) + 64);
  *(_QWORD *)v17 = KeyPath;
  *(_BYTE *)(v17 + 8) = 0;
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = 0;
  *(_BYTE *)(v17 + 32) = 0;
  swift_retain(KeyPath);
  sub_4F49C(v16, 0, 0);
  sub_FA4C((uint64_t)v12, type metadata accessor for CategorySelectionBodyContent);
  swift_release(KeyPath);
  sub_19BF4(v16, 0, 0);
  return sub_FA4C((uint64_t)v10, type metadata accessor for CategorySelectionBodyContent);
}

uint64_t sub_4BD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return sub_1B79C(a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CategorySelection);
}

uint64_t sub_4BDD4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_89A0(&qword_3D23B8, type metadata accessor for CategorySelectionCell, (uint64_t)&unk_2F1890);
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

uint64_t sub_4BE14@<X0>(uint64_t a1@<X8>)
{
  _QWORD v3[5];

  static ShelfCell.cellShape(presentation:)(v3);
  return sub_D210((uint64_t)v3, a1, &qword_3D0F58);
}

uint64_t sub_4BE54()
{
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(1.15, 0.0);
}

uint64_t static NSUserDefaults.debugFeaturesEnabledByDefault.getter()
{
  return 0;
}

uint64_t sub_4BE70()
{
  return sub_89A0(&qword_3D2368, type metadata accessor for CategorySelectionCell, (uint64_t)&unk_2F1830);
}

uint64_t type metadata accessor for CategorySelectionCell(uint64_t a1)
{
  return sub_AE00(a1, qword_3D24B0, (uint64_t)&nominal type descriptor for CategorySelectionCell);
}

uint64_t sub_4BEB0()
{
  return sub_89A0(&qword_3D2370, type metadata accessor for CategorySelectionCell, (uint64_t)&unk_2F18E0);
}

uint64_t sub_4BEDC()
{
  return sub_89A0(&qword_3D2378, (uint64_t (*)(uint64_t))&type metadata accessor for CategorySelection, (uint64_t)&protocol conformance descriptor for CategorySelection);
}

uint64_t sub_4BF08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32A0A0, 1);
}

uint64_t sub_4BF18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v28[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2640);
  __chkstk_darwin(v2);
  v4 = (char *)&v28[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2648);
  v6 = swift_allocObject(v5, 48, 7);
  v7 = v6;
  *(_OWORD *)(v6 + 16) = xmmword_2EFA20;
  if (qword_3CF8C8 != -1)
    v6 = swift_once(&qword_3CF8C8, sub_1B02C8);
  v8 = qword_3FCCE0;
  v9 = qword_3FCCE8;
  *(_QWORD *)(v7 + 32) = qword_3FCCE0;
  *(_QWORD *)(v7 + 40) = v9;
  v28[0] = v7;
  specialized Array._endMutation()(v6);
  v10 = v28[0];
  swift_retain(v8);
  v11 = swift_retain(v9);
  v12 = Gradient.init(colors:)(v10, v11);
  v13 = static UnitPoint.top.getter();
  v15 = v14;
  v16 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v28, v12, v13, v15, v16, v17);
  v18 = v28[0];
  v19 = v28[1];
  v20 = v28[2];
  v21 = v28[3];
  v22 = v28[4];
  if (qword_3CF8C0 != -1)
    swift_once(&qword_3CF8C0, sub_1B020C);
  v23 = type metadata accessor for RoundedRectangle(0);
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_3FCCC8);
  sub_19C4C(v24, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v4[*(int *)(v2 + 36)] = 256;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2650);
  sub_D184((uint64_t)v4, a1 + *(int *)(v25 + 36), &qword_3D2640);
  *(_QWORD *)a1 = v18;
  *(_QWORD *)(a1 + 8) = v19;
  *(_QWORD *)(a1 + 16) = v20;
  *(_QWORD *)(a1 + 24) = v21;
  *(_QWORD *)(a1 + 32) = v22;
  *(_WORD *)(a1 + 40) = 256;
  return sub_D1D4((uint64_t)v4, &qword_3D2640);
}

uint64_t sub_4C100@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D24E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D24F0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v8);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D24F8);
  v12 = sub_4C2EC(v2, (uint64_t)&v6[*(int *)(v11 + 44)]);
  v13 = static Edge.Set.top.getter(v12);
  v14 = static Edge.Set.leading.getter();
  v15 = static Edge.Set.trailing.getter();
  v16 = Edge.Set.init(rawValue:)(0);
  v17 = Edge.Set.init(rawValue:)(v16);
  if (Edge.Set.init(rawValue:)(v17 & v13) != v13)
    v16 = Edge.Set.init(rawValue:)(v16 | v13);
  v18 = Edge.Set.init(rawValue:)(v16);
  if (Edge.Set.init(rawValue:)(v18 & v14) != v14)
    v16 = Edge.Set.init(rawValue:)(v16 | v14);
  v19 = Edge.Set.init(rawValue:)(v16);
  if (Edge.Set.init(rawValue:)(v19 & v15) != v15)
    LOBYTE(v16) = Edge.Set.init(rawValue:)(v16 | v15);
  v20 = EdgeInsets.init(_all:)(10.0);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_D184((uint64_t)v6, (uint64_t)v10, &qword_3D24E8);
  v27 = &v10[*(int *)(v7 + 36)];
  *v27 = v16;
  *((double *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  sub_D1D4((uint64_t)v6, &qword_3D24E8);
  return sub_D210((uint64_t)v10, a1, &qword_3D24F0);
}

uint64_t sub_4C2EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  Swift::String v33;
  _OWORD v34[3];
  __int128 v35;
  char v36;
  uint64_t v37;
  char v38;
  Swift::String v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F18);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2500);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2508);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v33 - v15;
  v37 = *a1;
  v38 = *((_BYTE *)a1 + 8);
  v35 = *((_OWORD *)a1 + 1);
  v36 = *((_BYTE *)a1 + 32);
  v17 = swift_allocObject(&unk_37C710, 49, 7);
  v18 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v17 + 32) = v18;
  *(_BYTE *)(v17 + 48) = *((_BYTE *)a1 + 32);
  sub_50988(&v37);
  sub_509B0((uint64_t)&v35);
  v19 = Button.init(action:label:)(sub_50980, v17, sub_4C860, 0, &type metadata for Text, &protocol witness table for Text);
  v21 = static Alignment.center.getter(v19, v20);
  _FrameLayout.init(width:height:alignment:)(v34, 0x403C000000000000, 0, 0x403C000000000000, 0, v21, v22);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  v23 = &v10[*(int *)(v8 + 36)];
  v24 = v34[1];
  *(_OWORD *)v23 = v34[0];
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v34[2];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v26._countAndFlagsBits = 0xD00000000000002ELL;
  v39._object = (void *)0x8000000000309780;
  v26._object = (void *)0x8000000000309750;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v39._countAndFlagsBits = 0xD00000000000002DLL;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v39);

  v33 = v28;
  v29 = sub_509E0();
  v30 = sub_D254();
  View.accessibilityLabel<A>(_:)(&v33, v8, &type metadata for String, v29, v30);
  swift_bridgeObjectRelease(v28._object);
  sub_D1D4((uint64_t)v10, &qword_3D2500);
  sub_D210((uint64_t)v14, (uint64_t)v16, &qword_3D2508);
  sub_D184((uint64_t)v16, (uint64_t)v14, &qword_3D2508);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2518);
  sub_D184((uint64_t)v14, a2 + *(int *)(v31 + 48), &qword_3D2508);
  sub_D1D4((uint64_t)v16, &qword_3D2508);
  return sub_D1D4((uint64_t)v14, &qword_3D2508);
}

uint64_t sub_4C620(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  _QWORD v25[5];

  v2 = type metadata accessor for ActionMetricsBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v10 + 56) = &type metadata for String;
  *(_QWORD *)(v10 + 32) = 0xD000000000000018;
  *(_QWORD *)(v10 + 40) = 0x80000000003097B0;
  print(_:separator:terminator:)();
  swift_bridgeObjectRelease(v10);
  v11 = a1[2];
  v12 = a1[3];
  v13 = *((_BYTE *)a1 + 32);
  sub_4F49C(v11, v12, v13);
  v14 = sub_14ED0(v11, v12, v13);
  v16 = v15;
  sub_19BF4(v11, v12, v13);
  ObjectType = swift_getObjectType();
  static ActionMetrics.notInstrumented.getter(ObjectType);
  v25[3] = type metadata accessor for DismissInlineModuleAction(0);
  v25[4] = sub_89A0(&qword_3D2528, (uint64_t (*)(uint64_t))&type metadata accessor for DismissInlineModuleAction, (uint64_t)&protocol conformance descriptor for DismissInlineModuleAction);
  __swift_allocate_boxed_opaque_existential_0(v25);
  DismissInlineModuleAction.init(actionMetrics:)(v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionMetricsBehavior.notProcessed(_:), v2);
  v18 = *a1;
  LOBYTE(a1) = *((_BYTE *)a1 + 8);
  swift_retain(v18);
  v20 = sub_14A78(v19, (char)a1);
  swift_release(v18);
  v21 = ActionRunner.perform(_:withMetrics:asPartOf:)(v25, v5, v20, ObjectType, v16);
  swift_unknownObjectRelease(v14);
  swift_release(v21);
  v22 = swift_release(v20);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v22);
  return __swift_destroy_boxed_opaque_existential_0(v25);
}

uint64_t sub_4C860@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;

  v45 = a1;
  v1 = type metadata accessor for BlendMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D8);
  __chkstk_darwin(v44);
  v6 = (uint64_t *)((char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v8 = Text.init(_:)(v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v15 = static Font.callout.getter();
  v16 = Font.bold()();
  v17 = swift_release(v15);
  v18 = Text.font(_:)(v17);
  v41 = v19;
  v42 = v18;
  LOBYTE(v15) = v20;
  v43 = v21;
  swift_release(v16);
  v22 = v15 & 1;
  sub_D170(v8, v10, v14);
  v23 = swift_bridgeObjectRelease(v12);
  v24 = static Color.white.getter(v23);
  v25 = Color.opacity(_:)(0.2);
  v26 = swift_release(v24);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v4, enum case for BlendMode.plusLighter(_:), v1, v26);
  v27 = v44;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v6 + *(int *)(v44 + 36), v4, v1);
  *v6 = v25;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v28 = sub_10EDC(&qword_3D2520, &qword_3D07D8, (uint64_t)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
  v30 = v41;
  v29 = v42;
  v31 = v43;
  v32 = Text.foregroundStyle<A>(_:)(v6, v42, v41, v22, v43, v27, v28);
  v34 = v33;
  LOBYTE(v12) = v35;
  v37 = v36;
  sub_D170(v29, v30, v22);
  swift_bridgeObjectRelease(v31);
  result = sub_D1D4((uint64_t)v6, &qword_3D07D8);
  v39 = v45;
  *v45 = v32;
  v39[1] = v34;
  *((_BYTE *)v39 + 16) = v12 & 1;
  v39[3] = v37;
  return result;
}

uint64_t sub_4CA9C@<X0>(uint64_t a1@<X8>)
{
  return sub_4C100(a1);
}

void sub_4CAD4()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4._countAndFlagsBits = 0xD00000000000002DLL;
  v4._object = (void *)0x8000000000309780;
  v1._object = (void *)0x80000000003098F0;
  v1._countAndFlagsBits = 0xD000000000000018;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_3D2338 = (__int128)v3;
}

void sub_4CB88()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1._countAndFlagsBits = 0xD000000000000026;
  v4._object = (void *)0x8000000000309870;
  v1._object = (void *)0x8000000000309840;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000013;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_3D2348 = (__int128)v3;
}

void sub_4CC3C()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4._countAndFlagsBits = 0xD00000000000003CLL;
  v4._object = (void *)0x8000000000309800;
  v1._object = (void *)0x80000000003097D0;
  v1._countAndFlagsBits = 0xD000000000000021;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_3D2358 = (__int128)v3;
}

uint64_t sub_4CCF0@<X0>(uint64_t a1@<X0>, double a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  unsigned int v74;
  uint64_t v75;
  int v76;
  int v77;
  unsigned __int8 v78;
  uint64_t v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  unsigned int v110;
  uint64_t v111;
  int v112;
  int v113;
  unsigned __int8 v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  _OWORD *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  double v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned int v151;
  unsigned int v152;
  uint64_t v153;
  int v154;
  int v155;
  double v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  char v171;
  uint64_t v172;
  __n128 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  char v178;
  char *v179;
  uint64_t v180;
  __n128 v181;
  uint64_t v182;
  uint64_t v183;
  __n128 v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char v194;
  char v195;
  uint64_t v196;
  double v197;
  char *v198;
  char *v199;
  double v200;
  double v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  double v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned int v210;
  unsigned int v211;
  uint64_t v212;
  int v213;
  int v214;
  double v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  double v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  uint64_t v235;
  uint64_t v236;
  int *v237;
  _OWORD *v238;
  uint64_t v239;
  double v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  double v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  double v278;
  char *v279;
  uint64_t KeyPath;
  uint64_t v281;
  int v282;
  double v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  int v293;
  int v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  double v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  double v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  double v308;
  int v309;
  int v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  _BYTE v318[7];
  _BYTE v319[7];
  _BYTE v320[7];
  _BYTE v321[7];
  _BYTE v322[7];
  _BYTE v323[7];
  _DWORD v324[2];
  _DWORD v325[2];
  _DWORD v326[2];
  _DWORD v327[2];
  _DWORD v328[2];
  int v329;
  __int16 v330;
  _DWORD v331[2];
  unsigned __int8 v332;
  unsigned __int8 v333;
  unsigned __int8 v334;
  unsigned __int8 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  char v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  _OWORD v357[2];
  _QWORD v358[2];
  char v359;
  _BYTE v360[7];
  uint64_t v361;
  char v362;
  _BYTE v363[7];
  double v364;
  char *v365;
  double v366;
  uint64_t v367;
  char v368;
  _BYTE v369[7];
  char v370;
  _BYTE v371[7];
  double v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  char v376;
  _BYTE v377[7];
  char v378;
  _BYTE v379[7];
  double v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char v384;
  __int128 v385;
  char v386;
  _BYTE v387[7];
  uint64_t v388;
  __int16 v389;
  int v390;
  __int16 v391;
  char v392;
  _BYTE v393[7];
  double v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  char v398;
  _BYTE v399[7];
  char v400;
  _BYTE v401[7];
  double v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  char v406;
  _BYTE v407[7];
  char v408;
  _BYTE v409[7];
  double v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  char v414;
  unsigned __int8 v415;
  unsigned __int8 v416;
  unsigned __int8 v417;
  unsigned __int8 v418;
  _BYTE v419[7];
  _BYTE v420[7];
  _BYTE v421[7];
  _BYTE v422[7];
  _BYTE v423[7];
  int v424;
  __int16 v425;
  _DWORD v426[7];

  v300 = a1;
  v283 = a2;
  v291 = type metadata accessor for BlendMode(0);
  v289 = *(_QWORD *)(v291 - 8);
  __chkstk_darwin(v291);
  v288 = (char *)&v254 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v292 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D8);
  __chkstk_darwin(v292);
  v290 = (uint64_t *)((char *)&v254 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v268 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v268);
  v284 = (char *)&v254 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContentShapeKinds(0);
  v273 = *(double *)(v5 - 8);
  v274 = v5;
  __chkstk_darwin(v5);
  v272 = (char *)&v254 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CategorySelectionBodyContent(0);
  v263 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v264 = v8;
  v265 = (uint64_t)&v254 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2548);
  v270 = *(_QWORD *)(v9 - 8);
  v271 = v9;
  __chkstk_darwin(v9);
  v269 = (char *)&v254 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2550);
  __chkstk_darwin(v266);
  v287 = (char *)&v254 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v286 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2558);
  v12 = __chkstk_darwin(v286);
  v315 = (uint64_t)&v254 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v285 = (uint64_t)&v254 - v15;
  __chkstk_darwin(v14);
  v317 = (uint64_t)&v254 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2560);
  v258 = *(_QWORD *)(v17 - 8);
  v259 = v17;
  __chkstk_darwin(v17);
  v257 = (uint64_t)&v254 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2568);
  __chkstk_darwin(v255);
  v260 = (char *)&v254 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2570);
  __chkstk_darwin(v256);
  v279 = (char *)&v254 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2578);
  v21 = __chkstk_darwin(v262);
  v314 = (uint64_t)&v254 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v261 = (uint64_t)&v254 - v24;
  __chkstk_darwin(v23);
  v316 = (uint64_t)&v254 - v25;
  if (qword_3CF118 != -1)
    swift_once(&qword_3CF118, sub_4CAD4);
  v26 = *((_QWORD *)&xmmword_3D2338 + 1);
  v385 = xmmword_3D2338;
  v27 = sub_D254();
  swift_bridgeObjectRetain(v26);
  v267 = v27;
  v28 = Text.init<A>(_:)(&v385, &type metadata for String, v27);
  v30 = v29;
  v32 = v31;
  LOBYTE(v27) = v33 & 1;
  v34 = static Font.title3.getter();
  v35 = Font.bold()();
  v36 = swift_release(v34);
  v37 = Text.font(_:)(v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  swift_release(v35);
  v44 = v41 & 1;
  sub_D170(v28, v30, v27);
  v45 = swift_bridgeObjectRelease(v32);
  v46 = static Color.white.getter(v45);
  *(_QWORD *)&v385 = v46;
  v47 = Text.foregroundStyle<A>(_:)(&v385, v37, v39, v44, v43, &type metadata for Color, &protocol witness table for Color);
  v311 = v48;
  v312 = v47;
  v50 = v49;
  v313 = v51;
  sub_D170(v37, v39, v44);
  swift_release(v46);
  swift_bridgeObjectRelease(v43);
  v310 = static Edge.Set.top.getter(v52);
  v53 = EdgeInsets.init(_all:)(35.0);
  v303 = v54;
  v304 = v53;
  v301 = v56;
  v302 = v55;
  v309 = ((uint64_t (*)(void))static Edge.Set.bottom.getter)();
  v57 = EdgeInsets.init(_all:)(18.0);
  v307 = v58;
  v308 = v57;
  v305 = v60;
  v306 = v59;
  v61 = ((uint64_t (*)(void))static Edge.Set.leading.getter)();
  v62 = static Edge.Set.trailing.getter();
  v63 = Edge.Set.init(rawValue:)(0);
  v64 = Edge.Set.init(rawValue:)(v63);
  if (Edge.Set.init(rawValue:)(v64 & v61) != v61)
    v63 = Edge.Set.init(rawValue:)(v63 | v61);
  v65 = Edge.Set.init(rawValue:)(v63);
  if (Edge.Set.init(rawValue:)(v65 & v62) != v62)
    LODWORD(v63) = Edge.Set.init(rawValue:)(v63 | v62);
  v66 = v300;
  v417 = v50 & 1;
  v416 = 0;
  v415 = 0;
  v67 = EdgeInsets.init(_all:)(20.0);
  v298 = v68;
  v299 = v67;
  v296 = v70;
  v297 = v69;
  v293 = v417;
  v294 = v416;
  v295 = v415;
  v418 = 0;
  v71 = *(_QWORD *)(v66 + 16);
  KeyPath = swift_getKeyPath(&unk_2F1960);
  v281 = v71;
  v72 = swift_bridgeObjectRetain(v71);
  v73 = static Edge.Set.leading.getter(v72);
  v74 = static Edge.Set.trailing.getter();
  v75 = Edge.Set.init(rawValue:)(0);
  v76 = Edge.Set.init(rawValue:)(v75);
  if (Edge.Set.init(rawValue:)(v76 & v73) != v73)
    v75 = Edge.Set.init(rawValue:)(v75 | v73);
  v77 = Edge.Set.init(rawValue:)(v75);
  v78 = Edge.Set.init(rawValue:)(v77 & v74);
  LODWORD(v300) = v63;
  if (v78 != v74)
    LODWORD(v75) = Edge.Set.init(rawValue:)(v75 | v74);
  v79 = (uint64_t)v279;
  v80 = EdgeInsets.init(_all:)(12.0);
  v277 = v81;
  v278 = v80;
  v275 = v83;
  v276 = v82;
  v84 = v257;
  v85 = sub_4E064(v257);
  v86 = static Edge.Set.top.getter(v85);
  v87 = EdgeInsets.init(_all:)(16.0);
  v89 = v88;
  v91 = v90;
  v93 = v92;
  v95 = v258;
  v94 = v259;
  v96 = (uint64_t)v260;
  (*(void (**)(char *, uint64_t, uint64_t))(v258 + 16))(v260, v84, v259);
  v97 = v96 + *(int *)(v255 + 36);
  *(_BYTE *)v97 = v86;
  *(double *)(v97 + 8) = v87;
  *(_QWORD *)(v97 + 16) = v89;
  *(_QWORD *)(v97 + 24) = v91;
  *(_QWORD *)(v97 + 32) = v93;
  *(_BYTE *)(v97 + 40) = 0;
  v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v84, v94);
  v99 = static Edge.Set.bottom.getter(v98);
  v100 = EdgeInsets.init(_all:)(18.0);
  v102 = v101;
  v104 = v103;
  v106 = v105;
  sub_D184(v96, v79, &qword_3D2568);
  v107 = v79 + *(int *)(v256 + 36);
  *(_BYTE *)v107 = v99;
  *(double *)(v107 + 8) = v100;
  *(_QWORD *)(v107 + 16) = v102;
  *(_QWORD *)(v107 + 24) = v104;
  *(_QWORD *)(v107 + 32) = v106;
  *(_BYTE *)(v107 + 40) = 0;
  v108 = sub_D1D4(v96, &qword_3D2568);
  v109 = static Edge.Set.leading.getter(v108);
  v110 = static Edge.Set.trailing.getter();
  v111 = Edge.Set.init(rawValue:)(0);
  v112 = Edge.Set.init(rawValue:)(v111);
  if (Edge.Set.init(rawValue:)(v112 & v109) != v109)
    v111 = Edge.Set.init(rawValue:)(v111 | v109);
  v113 = Edge.Set.init(rawValue:)(v111);
  v114 = Edge.Set.init(rawValue:)(v113 & v110);
  v282 = v50;
  LODWORD(v279) = v75;
  if (v114 != v110)
    LOBYTE(v111) = Edge.Set.init(rawValue:)(v111 | v110);
  v115 = EdgeInsets.init(_all:)(20.0);
  v117 = v116;
  v119 = v118;
  v121 = v120;
  v122 = v261;
  sub_D184(v79, v261, &qword_3D2570);
  v123 = v122 + *(int *)(v262 + 36);
  *(_BYTE *)v123 = v111;
  *(double *)(v123 + 8) = v115;
  *(_QWORD *)(v123 + 16) = v117;
  *(_QWORD *)(v123 + 24) = v119;
  *(_QWORD *)(v123 + 32) = v121;
  *(_BYTE *)(v123 + 40) = 0;
  sub_D1D4(v79, &qword_3D2570);
  sub_D210(v122, v316, &qword_3D2578);
  v124 = v66;
  v125 = v265;
  sub_19C4C(v124, v265, type metadata accessor for CategorySelectionBodyContent);
  v126 = *(unsigned __int8 *)(v263 + 80);
  v127 = (v126 + 16) & ~v126;
  v128 = swift_allocObject(&unk_37C738, v127 + v264, v126 | 7);
  sub_1B79C(v125, v128 + v127, type metadata accessor for CategorySelectionBodyContent);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2580);
  v130 = sub_50A7C();
  v131 = v269;
  v132 = Button.init(action:label:)(sub_50A70, v128, sub_4ECF8, 0, v129, v130);
  v133 = v272;
  static ContentShapeKinds.accessibility.getter(v132);
  v134 = v284;
  v135 = &v284[*(int *)(v268 + 20)];
  v136 = enum case for RoundedCornerStyle.continuous(_:);
  v137 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 104))(v135, v136, v137);
  __asm { FMOV            V0.2D, #15.0 }
  *v134 = _Q0;
  v143 = (uint64_t)v287;
  v144 = (uint64_t)&v287[*(int *)(v266 + 36)];
  sub_19C4C((uint64_t)v134, v144, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D25F0);
  v147 = v273;
  v146 = v274;
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)&v273 + 16))(v144 + *(int *)(v145 + 40), v133, v274);
  *(_BYTE *)(v144 + *(int *)(v145 + 36)) = 0;
  v149 = v270;
  v148 = v271;
  (*(void (**)(uint64_t, char *, uint64_t))(v270 + 16))(v143, v131, v271);
  sub_FA4C((uint64_t)v134, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)&v147 + 8))(v133, v146);
  v150 = (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v131, v148);
  v151 = static Edge.Set.leading.getter(v150);
  v152 = static Edge.Set.trailing.getter();
  v153 = Edge.Set.init(rawValue:)(0);
  v154 = Edge.Set.init(rawValue:)(v153);
  if (Edge.Set.init(rawValue:)(v154 & v151) != v151)
    v153 = Edge.Set.init(rawValue:)(v153 | v151);
  v155 = Edge.Set.init(rawValue:)(v153);
  if (Edge.Set.init(rawValue:)(v155 & v152) != v152)
    LOBYTE(v153) = Edge.Set.init(rawValue:)(v153 | v152);
  v156 = EdgeInsets.init(_all:)(20.0);
  v158 = v157;
  v160 = v159;
  v162 = v161;
  v163 = v285;
  sub_D184(v143, v285, &qword_3D2550);
  v164 = v163 + *(int *)(v286 + 36);
  *(_BYTE *)v164 = v153;
  *(double *)(v164 + 8) = v156;
  *(_QWORD *)(v164 + 16) = v158;
  *(_QWORD *)(v164 + 24) = v160;
  *(_QWORD *)(v164 + 32) = v162;
  *(_BYTE *)(v164 + 40) = 0;
  sub_D1D4(v143, &qword_3D2550);
  sub_D210(v163, v317, &qword_3D2558);
  if (qword_3CF128 != -1)
    swift_once(&qword_3CF128, sub_4CC3C);
  v385 = xmmword_3D2358;
  swift_bridgeObjectRetain(*((_QWORD *)&xmmword_3D2358 + 1));
  v165 = Text.init<A>(_:)(&v385, &type metadata for String, v267);
  v167 = v166;
  v169 = v168;
  v171 = v170 & 1;
  v172 = static Font.caption2.getter();
  v174 = Text.font(_:)(v173);
  v176 = v175;
  v178 = v177;
  v287 = v179;
  swift_release(v172);
  v180 = v178 & 1;
  sub_D170(v165, v167, v171);
  v181 = swift_bridgeObjectRelease(v169);
  v182 = static Color.white.getter(v181);
  v183 = Color.opacity(_:)(0.5);
  v184 = swift_release(v182);
  v185 = v288;
  v186 = v289;
  v187 = v291;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v289 + 104))(v288, enum case for BlendMode.plusLighter(_:), v291, v184);
  v188 = v292;
  v189 = v290;
  (*(void (**)(char *, char *, uint64_t))(v186 + 16))((char *)v290 + *(int *)(v292 + 36), v185, v187);
  *v189 = v183;
  (*(void (**)(char *, uint64_t))(v186 + 8))(v185, v187);
  v190 = sub_10EDC(&qword_3D2520, &qword_3D07D8, (uint64_t)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
  v191 = v287;
  v274 = Text.foregroundStyle<A>(_:)(v189, v174, v176, v180, v287, v188, v190);
  v291 = v192;
  v292 = v193;
  v195 = v194;
  sub_D170(v174, v176, v180);
  swift_bridgeObjectRelease(v191);
  v196 = sub_D1D4((uint64_t)v189, &qword_3D07D8);
  LODWORD(v289) = static Edge.Set.top.getter(v196);
  v197 = EdgeInsets.init(_all:)(8.0);
  v199 = v198;
  v201 = v200;
  v203 = v202;
  LODWORD(v290) = static Edge.Set.bottom.getter(v204);
  v205 = EdgeInsets.init(_all:)(12.0);
  v272 = v206;
  v273 = v205;
  v270 = v208;
  v271 = v207;
  v210 = static Edge.Set.leading.getter(v209);
  v211 = static Edge.Set.trailing.getter();
  v212 = Edge.Set.init(rawValue:)(0);
  v213 = Edge.Set.init(rawValue:)(v212);
  if (Edge.Set.init(rawValue:)(v213 & v210) != v210)
    v212 = Edge.Set.init(rawValue:)(v212 | v210);
  v214 = Edge.Set.init(rawValue:)(v212);
  if (Edge.Set.init(rawValue:)(v214 & v211) == v211)
    LODWORD(v288) = v212;
  else
    LODWORD(v288) = Edge.Set.init(rawValue:)(v212 | v211);
  v334 = v195 & 1;
  v333 = 0;
  v332 = 0;
  v215 = EdgeInsets.init(_all:)(16.0);
  v217 = v216;
  v219 = v218;
  v221 = v220;
  LODWORD(v285) = v334;
  LODWORD(v286) = v333;
  LODWORD(v287) = v332;
  v335 = 0;
  v331[0] = v426[0];
  *(_DWORD *)((char *)v331 + 3) = *(_DWORD *)((char *)v426 + 3);
  v329 = v424;
  v330 = v425;
  v328[0] = *(_DWORD *)v423;
  *(_DWORD *)((char *)v328 + 3) = *(_DWORD *)&v423[3];
  *(_DWORD *)((char *)v327 + 3) = *(_DWORD *)&v422[3];
  v327[0] = *(_DWORD *)v422;
  *(_DWORD *)((char *)v326 + 3) = *(_DWORD *)&v421[3];
  v326[0] = *(_DWORD *)v421;
  *(_DWORD *)((char *)v325 + 3) = *(_DWORD *)&v420[3];
  v325[0] = *(_DWORD *)v420;
  *(_DWORD *)((char *)v324 + 3) = *(_DWORD *)&v419[3];
  v324[0] = *(_DWORD *)v419;
  v222 = v418;
  v223 = v314;
  sub_D184(v316, v314, &qword_3D2578);
  v224 = v315;
  sub_D184(v317, v315, &qword_3D2558);
  LODWORD(v284) = v335;
  *(_QWORD *)&v336 = v312;
  *((_QWORD *)&v336 + 1) = v311;
  LOBYTE(v337) = v293;
  *(_DWORD *)((char *)&v337 + 1) = v426[0];
  DWORD1(v337) = *(_DWORD *)((char *)v426 + 3);
  *((_QWORD *)&v337 + 1) = v313;
  LOWORD(v338) = 256;
  WORD3(v338) = v425;
  *(_DWORD *)((char *)&v338 + 2) = v424;
  BYTE8(v338) = v310;
  HIDWORD(v338) = *(_DWORD *)&v423[3];
  *(_DWORD *)((char *)&v338 + 9) = *(_DWORD *)v423;
  *(double *)&v339 = v304;
  *((_QWORD *)&v339 + 1) = v303;
  *(_QWORD *)&v340 = v302;
  *((_QWORD *)&v340 + 1) = v301;
  LOBYTE(v341) = v294;
  DWORD1(v341) = *(_DWORD *)&v422[3];
  *(_DWORD *)((char *)&v341 + 1) = *(_DWORD *)v422;
  BYTE8(v341) = v309;
  HIDWORD(v341) = *(_DWORD *)&v421[3];
  *(_DWORD *)((char *)&v341 + 9) = *(_DWORD *)v421;
  *(double *)&v342 = v308;
  *((_QWORD *)&v342 + 1) = v307;
  *(_QWORD *)&v343 = v306;
  *((_QWORD *)&v343 + 1) = v305;
  LOBYTE(v344) = v295;
  DWORD1(v344) = *(_DWORD *)&v420[3];
  *(_DWORD *)((char *)&v344 + 1) = *(_DWORD *)v420;
  BYTE8(v344) = v300;
  HIDWORD(v344) = *(_DWORD *)&v419[3];
  *(_DWORD *)((char *)&v344 + 9) = *(_DWORD *)v419;
  *(double *)&v345 = v299;
  *((_QWORD *)&v345 + 1) = v298;
  *(_QWORD *)&v346 = v297;
  *((_QWORD *)&v346 + 1) = v296;
  LODWORD(v269) = v222;
  v347 = v222;
  v226 = v344;
  v225 = v345;
  v227 = v346;
  v228 = v283;
  *(_BYTE *)(*(_QWORD *)&v283 + 176) = v222;
  *(_OWORD *)(*(_QWORD *)&v228 + 144) = v225;
  *(_OWORD *)(*(_QWORD *)&v228 + 160) = v227;
  v229 = v336;
  v230 = v337;
  v231 = v339;
  *(_OWORD *)(*(_QWORD *)&v228 + 32) = v338;
  *(_OWORD *)(*(_QWORD *)&v228 + 48) = v231;
  **(_OWORD **)&v228 = v229;
  *(_OWORD *)(*(_QWORD *)&v228 + 16) = v230;
  v232 = v340;
  v233 = v341;
  v234 = v342;
  *(_OWORD *)(*(_QWORD *)&v228 + 112) = v343;
  *(_OWORD *)(*(_QWORD *)&v228 + 128) = v226;
  *(_OWORD *)(*(_QWORD *)&v228 + 80) = v233;
  *(_OWORD *)(*(_QWORD *)&v228 + 96) = v234;
  *(_OWORD *)(*(_QWORD *)&v228 + 64) = v232;
  v236 = KeyPath;
  v235 = v281;
  *(_QWORD *)(*(_QWORD *)&v228 + 184) = v281;
  *(_QWORD *)(*(_QWORD *)&v228 + 192) = v236;
  *(_BYTE *)(*(_QWORD *)&v228 + 200) = 0;
  *(_BYTE *)(*(_QWORD *)&v228 + 208) = (_BYTE)v279;
  *(_QWORD *)&v232 = v277;
  *(double *)(*(_QWORD *)&v228 + 216) = v278;
  *(_QWORD *)(*(_QWORD *)&v228 + 224) = v232;
  *(_QWORD *)&v232 = v275;
  *(_QWORD *)(*(_QWORD *)&v228 + 232) = v276;
  *(_QWORD *)(*(_QWORD *)&v228 + 240) = v232;
  *(_BYTE *)(*(_QWORD *)&v228 + 248) = 0;
  v237 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_3D25F8);
  sub_D184(v223, *(_QWORD *)&v228 + v237[16], &qword_3D2578);
  sub_D184(v224, *(_QWORD *)&v228 + v237[20], &qword_3D2558);
  v238 = (_OWORD *)(*(_QWORD *)&v228 + v237[24]);
  v239 = v274;
  *(_QWORD *)&v348 = v274;
  *((_QWORD *)&v348 + 1) = v291;
  LOBYTE(v349) = v285;
  *((_QWORD *)&v349 + 1) = v292;
  LOBYTE(v350) = v289;
  *((double *)&v350 + 1) = v197;
  *(_QWORD *)&v351 = v199;
  *((double *)&v351 + 1) = v201;
  *(_QWORD *)&v352 = v203;
  BYTE8(v352) = v286;
  LOBYTE(v353) = (_BYTE)v290;
  v283 = v197;
  v240 = v273;
  v278 = v201;
  v279 = v199;
  v242 = v271;
  v241 = v272;
  *((double *)&v353 + 1) = v273;
  *(_QWORD *)&v354 = v272;
  v277 = v203;
  v243 = v270;
  *((_QWORD *)&v354 + 1) = v271;
  *(_QWORD *)&v355 = v270;
  BYTE8(v355) = (_BYTE)v287;
  LOBYTE(v356) = (_BYTE)v288;
  *((double *)&v356 + 1) = v215;
  *(_QWORD *)&v357[0] = v217;
  *((_QWORD *)&v357[0] + 1) = v219;
  *(_QWORD *)&v357[1] = v221;
  BYTE8(v357[1]) = (_BYTE)v284;
  v244 = v350;
  v245 = v349;
  *v238 = v348;
  v238[1] = v245;
  v246 = v357[0];
  v238[8] = v356;
  v238[9] = v246;
  v247 = v355;
  v238[6] = v354;
  v238[7] = v247;
  v248 = v351;
  v249 = v353;
  v238[4] = v352;
  v238[5] = v249;
  v238[2] = v244;
  v238[3] = v248;
  *(_OWORD *)((char *)v238 + 153) = *(_OWORD *)((char *)v357 + 9);
  swift_bridgeObjectRetain(v235);
  sub_50CD8((uint64_t)&v336);
  swift_bridgeObjectRetain(v235);
  swift_retain(v236);
  sub_50CD8((uint64_t)&v348);
  LOBYTE(v237) = v282 & 1;
  v251 = v311;
  v250 = v312;
  sub_D130(v312, v311, v282 & 1);
  v252 = v313;
  swift_bridgeObjectRetain(v313);
  swift_retain(v236);
  sub_D1D4(v317, &qword_3D2558);
  sub_D1D4(v316, &qword_3D2578);
  swift_release(v236);
  swift_bridgeObjectRelease(v235);
  sub_D170(v250, v251, (char)v237);
  swift_bridgeObjectRelease(v252);
  v358[0] = v239;
  v358[1] = v291;
  v359 = v285;
  *(_DWORD *)v360 = *(_DWORD *)v323;
  *(_DWORD *)&v360[3] = *(_DWORD *)&v323[3];
  v361 = v292;
  v362 = v289;
  *(_DWORD *)v363 = *(_DWORD *)v322;
  *(_DWORD *)&v363[3] = *(_DWORD *)&v322[3];
  v364 = v283;
  v365 = v279;
  v366 = v278;
  v367 = v277;
  v368 = v286;
  *(_DWORD *)&v369[3] = *(_DWORD *)&v321[3];
  *(_DWORD *)v369 = *(_DWORD *)v321;
  v370 = (char)v290;
  *(_DWORD *)&v371[3] = *(_DWORD *)&v320[3];
  *(_DWORD *)v371 = *(_DWORD *)v320;
  v372 = v240;
  v373 = v241;
  v374 = v242;
  v375 = v243;
  v376 = (char)v287;
  *(_DWORD *)v377 = *(_DWORD *)v319;
  *(_DWORD *)&v377[3] = *(_DWORD *)&v319[3];
  v378 = (char)v288;
  *(_DWORD *)&v379[3] = *(_DWORD *)&v318[3];
  *(_DWORD *)v379 = *(_DWORD *)v318;
  v380 = v215;
  v381 = v217;
  v382 = v219;
  v383 = v221;
  v384 = (char)v284;
  sub_50D14((uint64_t)v358);
  sub_D1D4(v315, &qword_3D2558);
  sub_D1D4(v314, &qword_3D2578);
  swift_release(v236);
  swift_bridgeObjectRelease(v235);
  *(_QWORD *)&v385 = v250;
  *((_QWORD *)&v385 + 1) = v251;
  v386 = v293;
  *(_DWORD *)v387 = v331[0];
  *(_DWORD *)&v387[3] = *(_DWORD *)((char *)v331 + 3);
  v388 = v252;
  v389 = 256;
  v390 = v329;
  v391 = v330;
  v392 = v310;
  *(_DWORD *)&v393[3] = *(_DWORD *)((char *)v328 + 3);
  *(_DWORD *)v393 = v328[0];
  v394 = v304;
  v395 = v303;
  v396 = v302;
  v397 = v301;
  v398 = v294;
  *(_DWORD *)&v399[3] = *(_DWORD *)((char *)v327 + 3);
  *(_DWORD *)v399 = v327[0];
  v400 = v309;
  *(_DWORD *)&v401[3] = *(_DWORD *)((char *)v326 + 3);
  *(_DWORD *)v401 = v326[0];
  v402 = v308;
  v403 = v307;
  v404 = v306;
  v405 = v305;
  v406 = v295;
  *(_DWORD *)&v407[3] = *(_DWORD *)((char *)v325 + 3);
  *(_DWORD *)v407 = v325[0];
  v408 = v300;
  *(_DWORD *)&v409[3] = *(_DWORD *)((char *)v324 + 3);
  *(_DWORD *)v409 = v324[0];
  v410 = v299;
  v411 = v298;
  v412 = v297;
  v413 = v296;
  v414 = (char)v269;
  return sub_50D14((uint64_t)&v385);
}

uint64_t sub_4E064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64[16];
  uint64_t v65;
  _QWORD v66[3];
  Swift::String v67;

  v62 = a1;
  v63 = type metadata accessor for AccessibilityChildBehavior(0);
  v61 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v60 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AccessibilityTraits(0);
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  __chkstk_darwin(v3);
  v57 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Image.Scale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CategorySelectionBodyContent(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0F18);
  v13 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2610);
  __chkstk_darwin(v51);
  v50 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2618);
  v17 = __chkstk_darwin(v56);
  v54 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v55 = (char *)&v50 - v19;
  v53 = v1;
  sub_19C4C(v1, (uint64_t)v12, type metadata accessor for CategorySelectionBodyContent);
  v20 = *(unsigned __int8 *)(v10 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_37C760, v21 + v11, v20 | 7);
  sub_1B79C((uint64_t)v12, v22 + v21, type metadata accessor for CategorySelectionBodyContent);
  v65 = v1;
  Button.init(action:label:)(sub_50F2C, v22, sub_50F74, v64, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v5);
  KeyPath = swift_getKeyPath(&unk_2F1BD8);
  v25 = (uint64_t)v50;
  v24 = v51;
  v26 = (uint64_t *)&v50[*(int *)(v51 + 36)];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v26 + *(int *)(v27 + 28), v8, v5);
  *v26 = KeyPath;
  v28 = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v25, v15, v52);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  v29 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v67._object = (void *)0xE000000000000000;
  v30._object = (void *)0x80000000003098C0;
  v30._countAndFlagsBits = 0xD000000000000020;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v67._countAndFlagsBits = 0;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v67);

  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
  v34 = swift_allocObject(v33, 72, 7);
  *(_OWORD *)(v34 + 16) = xmmword_2F03C0;
  v35 = *(_QWORD *)(v53 + 24);
  *(_QWORD *)(v34 + 56) = &type metadata for Int;
  *(_QWORD *)(v34 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v34 + 32) = v35;
  v36 = String.init(format:_:)(v32._countAndFlagsBits, v32._object, v34);
  v38 = v37;
  swift_bridgeObjectRelease(v32._object);
  v66[0] = v36;
  v66[1] = v38;
  v39 = sub_50F84();
  v40 = sub_D254();
  v41 = (uint64_t)v54;
  View.accessibilityLabel<A>(_:)(v66, v24, &type metadata for String, v39, v40);
  swift_bridgeObjectRelease(v38);
  v42 = sub_D1D4(v25, &qword_3D2610);
  v43 = v57;
  static AccessibilityTraits.isButton.getter(v42);
  v45 = (uint64_t)v55;
  v44 = v56;
  ModifiedContent<>.accessibilityAddTraits(_:)(v43, v56);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v59);
  v46 = sub_D1D4(v41, &qword_3D2618);
  v47 = v60;
  static AccessibilityChildBehavior.combine.getter(v46);
  v48 = sub_51020();
  View.accessibilityElement(children:)(v47, v44, v48);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v63);
  return sub_D1D4(v45, &qword_3D2618);
}

uint64_t sub_4E53C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD v23[5];

  v2 = type metadata accessor for ActionMetricsBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CategorySelectionBodyContent(0);
  v7 = a1 + *(int *)(v6 + 24);
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = *(_BYTE *)(v7 + 16);
  sub_4F49C(*(_QWORD *)v7, v9, v10);
  v11 = sub_14ED0(v8, v9, v10);
  v13 = v12;
  sub_19BF4(v8, v9, v10);
  ObjectType = swift_getObjectType();
  CategorySelection.seeAllAction.getter(v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionMetricsBehavior.notProcessed(_:), v2);
  v15 = (uint64_t *)(a1 + *(int *)(v6 + 20));
  v16 = *v15;
  LOBYTE(v6) = *((_BYTE *)v15 + 8);
  swift_retain(*v15);
  v18 = sub_14A78(v17, v6);
  swift_release(v16);
  v19 = ActionRunner.perform(_:withMetrics:asPartOf:)(v23, v5, v18, ObjectType, v13);
  swift_unknownObjectRelease(v11);
  swift_release(v19);
  v20 = swift_release(v18);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v20);
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_4E6B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  Swift::String v67;

  v66 = a2;
  v3 = type metadata accessor for BlendMode(0);
  v64 = *(_QWORD *)(v3 - 8);
  v65 = v3;
  __chkstk_darwin(v3);
  v63 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D07D8);
  __chkstk_darwin(v62);
  v6 = (uint64_t *)((char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(1, 2);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v10);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v67._object = (void *)0xE000000000000000;
  v12._object = (void *)0x80000000003098C0;
  v12._countAndFlagsBits = 0xD000000000000020;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v67._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v67);

  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_2F03C0;
  v17 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v16 + 56) = &type metadata for Int;
  *(_QWORD *)(v16 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v16 + 32) = v17;
  v18 = String.init(format:_:)(v14._countAndFlagsBits, v14._object, v16);
  v20 = v19;
  swift_bridgeObjectRelease(v14._object);
  v21._countAndFlagsBits = v18;
  v21._object = v20;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v21);
  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 32;
  v22._object = (void *)0xE100000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v22);
  v23 = Image.init(systemName:)(0x2E6E6F7276656863, 0xED00007468676972);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  swift_release(v23);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
  v25 = LocalizedStringKey.init(stringInterpolation:)(v9);
  v26 = Text.init(_:tableName:bundle:comment:)(v25);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = static Font.footnote.getter();
  v34 = Font.bold()();
  v35 = swift_release(v33);
  v36 = Text.font(_:)(v35);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  swift_release(v34);
  v43 = v40 & 1;
  sub_D170(v26, v28, v32);
  v44 = swift_bridgeObjectRelease(v30);
  v45 = static Color.white.getter(v44);
  v46 = Color.opacity(_:)(0.5);
  v47 = swift_release(v45);
  v49 = v63;
  v48 = v64;
  v50 = v65;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v64 + 104))(v63, enum case for BlendMode.plusLighter(_:), v65, v47);
  v51 = v62;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))((char *)v6 + *(int *)(v62 + 36), v49, v50);
  *v6 = v46;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  v52 = sub_10EDC(&qword_3D2520, &qword_3D07D8, (uint64_t)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
  v53 = Text.foregroundStyle<A>(_:)(v6, v36, v38, v43, v42, v51, v52);
  v55 = v54;
  LOBYTE(v50) = v56;
  v58 = v57;
  sub_D170(v36, v38, v43);
  swift_bridgeObjectRelease(v42);
  result = sub_D1D4((uint64_t)v6, &qword_3D07D8);
  v60 = v66;
  *v66 = v53;
  v60[1] = v55;
  *((_BYTE *)v60 + 16) = v50 & 1;
  v60[3] = v58;
  return result;
}

uint64_t sub_4EA98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v27;
  _QWORD v28[5];

  v27 = type metadata accessor for ActionMetricsBehavior(0);
  v2 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v4 = (char *)&v28[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v28[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  *(_QWORD *)(v9 + 32) = 0xD000000000000026;
  *(_QWORD *)(v9 + 40) = 0x8000000000309890;
  print(_:separator:terminator:)();
  swift_bridgeObjectRelease(v9);
  v10 = type metadata accessor for CategorySelectionBodyContent(0);
  v11 = a1 + *(int *)(v10 + 24);
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(_BYTE *)(v11 + 16);
  sub_4F49C(*(_QWORD *)v11, v13, v14);
  v15 = sub_14ED0(v12, v13, v14);
  v17 = v16;
  sub_19BF4(v12, v13, v14);
  ObjectType = swift_getObjectType();
  static ActionMetrics.notInstrumented.getter(ObjectType);
  v28[3] = type metadata accessor for DismissInlineModuleAction(0);
  v28[4] = sub_89A0(&qword_3D2528, (uint64_t (*)(uint64_t))&type metadata accessor for DismissInlineModuleAction, (uint64_t)&protocol conformance descriptor for DismissInlineModuleAction);
  __swift_allocate_boxed_opaque_existential_0(v28);
  DismissInlineModuleAction.init(actionMetrics:)(v7);
  v19 = v27;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for ActionMetricsBehavior.notProcessed(_:), v27);
  v20 = (uint64_t *)(a1 + *(int *)(v10 + 20));
  v21 = *v20;
  LOBYTE(v7) = *((_BYTE *)v20 + 8);
  swift_retain(*v20);
  v23 = sub_14A78(v22, (char)v7);
  swift_release(v21);
  v24 = ActionRunner.perform(_:withMetrics:asPartOf:)(v28, v4, v23, ObjectType, v17);
  swift_unknownObjectRelease(v15);
  swift_release(v24);
  v25 = swift_release(v23);
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v19, v25);
  return __swift_destroy_boxed_opaque_existential_0(v28);
}

uint64_t sub_4ECF8@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  void *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  _OWORD v72[18];
  _OWORD v73[16];
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char v102;
  __n128 v103;

  v64 = a1;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D25E8);
  __chkstk_darwin(v62);
  v63 = (uint64_t)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for BlendMode(0);
  v60 = *(_QWORD *)(v2 - 8);
  v61 = v2;
  __chkstk_darwin(v2);
  v58 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2600);
  __chkstk_darwin(v57);
  v59 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v55);
  v6 = (_OWORD *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2608);
  __chkstk_darwin(v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CF120 != -1)
    swift_once(&qword_3CF120, sub_4CB88);
  v9 = *((_QWORD *)&xmmword_3D2348 + 1);
  v72[0] = xmmword_3D2348;
  v10 = sub_D254();
  swift_bridgeObjectRetain(v9);
  v11 = Text.init<A>(_:)(v72, &type metadata for String, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v19 = static Alignment.center.getter(v11, v18);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v74, 0, 1, 0, 1, 0, 1, 0x4046800000000000, 0, 0, 1, 0, 1, v19, v20);
  v71 = v17;
  v70 = v75;
  v69 = v77;
  v68 = v79;
  v67 = v81;
  v66 = v83;
  v65 = v85;
  v87 = v11;
  v88 = v13;
  v89 = v17;
  v90 = v15;
  v91 = v74;
  v92 = v75;
  v93 = v76;
  v94 = v77;
  v95 = v78;
  v96 = v79;
  v97 = v80;
  v98 = v81;
  v99 = v82;
  v100 = v83;
  v101 = v84;
  v102 = v85;
  v103 = v86;
  v21 = static Alignment.center.getter(v84, v86);
  sub_1A14C0(0, 1, 0.0, 1, INFINITY, 0, 0, 1, v73, v23, 0.0, 1, 0.0, 1, v21, v22);
  sub_D170(v11, v13, v17);
  swift_bridgeObjectRelease(v15);
  v25 = static Font.body.getter(v24);
  v26 = Font.bold()();
  swift_release(v25);
  KeyPath = swift_getKeyPath(&unk_2F1BA8);
  v29 = static Color.white.getter(v28);
  v72[13] = v73[13];
  v72[14] = v73[14];
  v72[15] = v73[15];
  v72[9] = v73[9];
  v72[10] = v73[10];
  v72[11] = v73[11];
  v72[12] = v73[12];
  v72[5] = v73[5];
  v72[6] = v73[6];
  v72[7] = v73[7];
  v72[8] = v73[8];
  v72[0] = v73[0];
  v72[1] = v73[1];
  v72[2] = v73[2];
  v72[3] = v73[3];
  v72[4] = v73[4];
  *(_QWORD *)&v72[16] = KeyPath;
  *((_QWORD *)&v72[16] + 1) = v26;
  *(_QWORD *)&v72[17] = v29;
  v30 = (char *)v6 + *(int *)(v55 + 20);
  v31 = enum case for RoundedCornerStyle.continuous(_:);
  v32 = type metadata accessor for RoundedCornerStyle(0);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v30, v31, v32);
  __asm { FMOV            V0.2D, #15.0 }
  *v6 = _Q0;
  LODWORD(v30) = static HierarchicalShapeStyle.quaternary.getter(v33);
  v40 = v60;
  v39 = v61;
  v41 = v58;
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v58, enum case for BlendMode.plusDarker(_:), v61);
  v42 = v59;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(&v59[*(int *)(v57 + 36)], v41, v39);
  *v42 = (_DWORD)v30;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v39);
  sub_19C4C((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v43 = v56;
  sub_D184((uint64_t)v42, (uint64_t)&v8[*(int *)(v56 + 52)], &qword_3D2600);
  *(_WORD *)&v8[*(int *)(v43 + 56)] = 256;
  sub_D1D4((uint64_t)v42, &qword_3D2600);
  v44 = sub_FA4C((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v46 = static Alignment.center.getter(v44, v45);
  v48 = v47;
  v49 = v63;
  sub_D184((uint64_t)v8, v63, &qword_3D2608);
  v50 = (uint64_t *)(v49 + *(int *)(v62 + 36));
  *v50 = v46;
  v50[1] = v48;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2580);
  v52 = v64;
  sub_D184(v49, (uint64_t)v64 + *(int *)(v51 + 36), &qword_3D25E8);
  memcpy(v52, v72, 0x118uLL);
  sub_50D58((uint64_t)v72);
  sub_D1D4(v49, &qword_3D25E8);
  sub_D1D4((uint64_t)v8, &qword_3D2608);
  return sub_50DC4((uint64_t)v72);
}

uint64_t sub_4F240@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2530);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v5);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2538);
  sub_4CCF0(v2, COERCE_DOUBLE(&v7[*(int *)(v8 + 44)]));
  KeyPath = swift_getKeyPath(&unk_2F1B78);
  sub_D184((uint64_t)v7, a1, &qword_3D2530);
  v10 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D2540) + 36);
  *(_QWORD *)v10 = KeyPath;
  *(_BYTE *)(v10 + 8) = 1;
  return sub_D1D4((uint64_t)v7, &qword_3D2530);
}

uint64_t sub_4F31C()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_4F33C()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_4F35C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ColorScheme(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.colorScheme.setter(v4);
}

unint64_t sub_4F3DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2398;
  if (!qword_3D2398)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D2388);
    sub_10EDC(&qword_3D23A0, &qword_3D2380, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_89A0(&qword_3D23A8, type metadata accessor for CategorySelectionContainerModifier, (uint64_t)"Ŷ\b");
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D2398);
  }
  return result;
}

uint64_t type metadata accessor for CategorySelectionBodyContent(uint64_t a1)
{
  return sub_AE00(a1, qword_3D2418, (uint64_t)&nominal type descriptor for CategorySelectionBodyContent);
}

uint64_t sub_4F49C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_unknownObjectRetain(a1);
  else
    return swift_retain(a1);
}

uint64_t destroy for CategorySelectionCloseButton(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  return sub_19BF4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for CategorySelectionCloseButton(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = a2[2];
  v6 = a2[3];
  v7 = *((_BYTE *)a2 + 32);
  swift_retain(v3);
  sub_4F49C(v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t *assignWithCopy for CategorySelectionCloseButton(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = a2;
  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v5;
  swift_retain(v4);
  swift_release(v6);
  v7 = v2[2];
  v8 = v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  sub_4F49C(v7, v8, (char)v2);
  v9 = a1[2];
  v10 = a1[3];
  v11 = *((_BYTE *)a1 + 32);
  a1[2] = v7;
  a1[3] = v8;
  *((_BYTE *)a1 + 32) = (_BYTE)v2;
  sub_19BF4(v9, v10, v11);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for CategorySelectionCloseButton(uint64_t *a1, uint64_t *a2)
{
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_release(v5);
  v6 = *((_BYTE *)a2 + 32);
  v7 = a1[2];
  v8 = a1[3];
  v9 = *((_BYTE *)a1 + 32);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_BYTE *)a1 + 32) = v6;
  sub_19BF4(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CategorySelectionCloseButton(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CategorySelectionCloseButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CategorySelectionCloseButton()
{
  return &type metadata for CategorySelectionCloseButton;
}

uint64_t sub_4F6B4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  __int128 v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v20);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v9 = a2[2];
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v8;
    v10 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 56) = v10;
    v11 = v10;
    v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    v12(a1 + 32, (uint64_t)(a2 + 4), v11);
    v13 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 96) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 72, (uint64_t)(a2 + 9));
    v14 = *(int *)(type metadata accessor for CategorySelection(0) + 36);
    v15 = (void *)(a1 + v14);
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for ImpressionMetrics(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v21 = *(int *)(a3 + 20);
    v22 = *(int *)(a3 + 24);
    v23 = a1 + v21;
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = *v24;
    LOBYTE(v24) = *((_BYTE *)v24 + 8);
    *(_QWORD *)v23 = v25;
    *(_BYTE *)(v23 + 8) = (_BYTE)v24;
    v26 = a1 + v22;
    v27 = (uint64_t)a2 + v22;
    v28 = *(uint64_t *)((char *)a2 + v22);
    v29 = *(_QWORD *)(v27 + 8);
    v30 = *(_BYTE *)(v27 + 16);
    swift_retain(v25);
    sub_4F49C(v28, v29, v30);
    *(_QWORD *)v26 = v28;
    *(_QWORD *)(v26 + 8) = v29;
    *(_BYTE *)(v26 + 16) = v30;
  }
  return a1;
}

uint64_t sub_4F85C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  __swift_destroy_boxed_opaque_existential_0(a1 + 4);
  __swift_destroy_boxed_opaque_existential_0(a1 + 9);
  v4 = (char *)a1 + *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20)));
  return sub_19BF4(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24)), *(_QWORD *)((char *)a1 + *(int *)(a2 + 24) + 8), *((_BYTE *)a1 + *(int *)(a2 + 24) + 16));
}

uint64_t sub_4F910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  __int128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v7;
  v9 = a2 + 32;
  v10 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v10;
  v11 = v10;
  v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  v12(a1 + 32, v9, v11);
  v13 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 72, a2 + 72);
  v14 = *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for ImpressionMetrics(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = *(int *)(a3 + 20);
  v21 = *(int *)(a3 + 24);
  v22 = a1 + v20;
  v23 = (uint64_t *)(a2 + v20);
  v24 = *v23;
  LOBYTE(v23) = *((_BYTE *)v23 + 8);
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = (_BYTE)v23;
  v25 = a1 + v21;
  v26 = a2 + v21;
  v27 = *(_QWORD *)(a2 + v21);
  v28 = *(_QWORD *)(v26 + 8);
  v29 = *(_BYTE *)(v26 + 16);
  swift_retain(v24);
  sub_4F49C(v27, v28, v29);
  *(_QWORD *)v25 = v27;
  *(_QWORD *)(v25 + 8) = v28;
  *(_BYTE *)(v25 + 16) = v29;
  return a1;
}

_QWORD *sub_4FA8C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[3] = a2[3];
  __swift_assign_boxed_opaque_existential_1(a1 + 4, a2 + 4);
  __swift_assign_boxed_opaque_existential_1(a1 + 9, a2 + 9);
  v10 = *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(a3 + 20);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)v21;
  LOBYTE(v21) = v21[8];
  v23 = *(_QWORD *)v20;
  *(_QWORD *)v20 = v22;
  v20[8] = (char)v21;
  swift_retain(v22);
  swift_release(v23);
  v24 = *(int *)(a3 + 24);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *((_QWORD *)v26 + 1);
  LOBYTE(v23) = v26[16];
  sub_4F49C(*(_QWORD *)v26, v28, v23);
  v29 = *(_QWORD *)v25;
  v30 = *((_QWORD *)v25 + 1);
  v31 = v25[16];
  *(_QWORD *)v25 = v27;
  *((_QWORD *)v25 + 1) = v28;
  v25[16] = v23;
  sub_19BF4(v29, v30, v31);
  return a1;
}

uint64_t sub_4FC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v8 = *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = *(int *)(a3 + 20);
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  return a1;
}

uint64_t sub_4FD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + 32));
  v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + 72));
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v10 = *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(a3 + 20);
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  LOBYTE(v21) = *((_BYTE *)v21 + 8);
  v23 = *v20;
  *v20 = v22;
  *((_BYTE *)v20 + 8) = (_BYTE)v21;
  swift_release(v23);
  v24 = *(int *)(a3 + 24);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_BYTE *)(v26 + 16);
  v28 = *(_QWORD *)v25;
  v29 = *(_QWORD *)(v25 + 8);
  v30 = *(_BYTE *)(v25 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_BYTE *)(v25 + 16) = v27;
  sub_19BF4(v28, v29, v30);
  return a1;
}

uint64_t sub_4FF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4FF60);
}

uint64_t sub_4FF60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for CategorySelection(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_4FFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4FFE8);
}

uint64_t sub_4FFE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CategorySelection(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

uint64_t sub_50064(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CategorySelection(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\t";
    v4[2] = &unk_2F1A38;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CategorySelectionBackground()
{
  return &type metadata for CategorySelectionBackground;
}

uint64_t sub_500F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  __int128 v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for CategorySelection(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v20);
  }
  else
  {
    v6 = v4;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v9 = a2[2];
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v8;
    v10 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 56) = v10;
    v11 = v10;
    v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    v12(a1 + 32, (uint64_t)(a2 + 4), v11);
    v13 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 96) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 72, (uint64_t)(a2 + 9));
    v14 = *(int *)(v6 + 36);
    v15 = (void *)(a1 + v14);
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for ImpressionMetrics(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t sub_50250(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  __swift_destroy_boxed_opaque_existential_0(a1 + 4);
  __swift_destroy_boxed_opaque_existential_0(a1 + 9);
  v2 = (char *)a1 + *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v3 = type metadata accessor for ImpressionMetrics(0);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

uint64_t sub_502E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = a2 + 32;
  v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  v10(a1 + 32, v7, v9);
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 72, a2 + 72);
  v12 = *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_QWORD *sub_50418(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[3] = a2[3];
  __swift_assign_boxed_opaque_existential_1(a1 + 4, a2 + 4);
  __swift_assign_boxed_opaque_existential_1(a1 + 9, a2 + 9);
  v8 = *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_5057C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v6 = *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_5066C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + 32));
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + 72));
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v8 = *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_507D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_507E4);
}

uint64_t sub_507E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CategorySelection(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_50820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5082C);
}

uint64_t sub_5082C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CategorySelection(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_5086C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CategorySelection(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_508D4()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D2388);
  v1[1] = sub_4F3DC();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_50920(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32A118, 1);
}

uint64_t sub_50930(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32A0F0, 1);
}

uint64_t sub_50940(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32A0C8, 1);
}

uint64_t sub_50950()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_19BF4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_50980()
{
  uint64_t v0;

  return sub_4C620((uint64_t *)(v0 + 16));
}

_QWORD *sub_50988(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

uint64_t sub_509B0(uint64_t a1)
{
  sub_4F49C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

unint64_t sub_509E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2510;
  if (!qword_3D2510)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D2500);
    sub_10EDC(&qword_3D0F30, &qword_3D0F18, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D2510);
  }
  return result;
}

uint64_t sub_50A70()
{
  return sub_50F38(sub_4EA98);
}

unint64_t sub_50A7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2588;
  if (!qword_3D2588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D2580);
    sub_50B00();
    sub_10EDC(&qword_3D25E0, &qword_3D25E8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D2588);
  }
  return result;
}

unint64_t sub_50B00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2590;
  if (!qword_3D2590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D2598);
    sub_50B84();
    sub_10EDC(&qword_3D25D0, &qword_3D25D8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D2590);
  }
  return result;
}

unint64_t sub_50B84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D25A0;
  if (!qword_3D25A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D25A8);
    sub_50C08();
    sub_10EDC(&qword_3D10B0, &qword_3D10B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D25A0);
  }
  return result;
}

unint64_t sub_50C08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D25B0;
  if (!qword_3D25B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D25B8);
    sub_50C74();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D25B0);
  }
  return result;
}

unint64_t sub_50C74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D25C0;
  if (!qword_3D25C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D25C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D25C0);
  }
  return result;
}

uint64_t sub_50CD8(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  sub_D130(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain(v2);
  return a1;
}

uint64_t sub_50D14(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  sub_D170(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_50D58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 256);
  v4 = *(_QWORD *)(a1 + 264);
  v5 = *(_QWORD *)(a1 + 272);
  sub_D130(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return a1;
}

uint64_t sub_50DC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 256);
  v4 = *(_QWORD *)(a1 + 264);
  v5 = *(_QWORD *)(a1 + 272);
  sub_D170(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v5);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  swift_release(v4);
  return a1;
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CategorySelectionBodyContent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + v4 + 32));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + v4 + 72));
  v7 = v0 + v4 + *(int *)(type metadata accessor for CategorySelection(0) + 36);
  v8 = type metadata accessor for ImpressionMetrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_release(*(_QWORD *)(v6 + *(int *)(v1 + 20)));
  sub_19BF4(*(_QWORD *)(v6 + *(int *)(v1 + 24)), *(_QWORD *)(v6 + *(int *)(v1 + 24) + 8), *(_BYTE *)(v6 + *(int *)(v1 + 24) + 16));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_50F2C()
{
  return sub_50F38(sub_4E53C);
}

uint64_t sub_50F38(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CategorySelectionBodyContent(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_50F74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_4E6B8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_50F84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2628;
  if (!qword_3D2628)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D2610);
    sub_10EDC(&qword_3D0F30, &qword_3D0F18, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_10EDC(&qword_3D2630, &qword_3D2620, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D2628);
  }
  return result;
}

unint64_t sub_51020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2638;
  if (!qword_3D2638)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D2618);
    sub_50F84();
    sub_89A0(&qword_3D0D28, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D2638);
  }
  return result;
}

unint64_t sub_510A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2658;
  if (!qword_3D2658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D24F0);
    sub_10EDC(&qword_3D2660, &qword_3D24E8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D2658);
  }
  return result;
}

unint64_t sub_51130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2668;
  if (!qword_3D2668)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D2540);
    sub_10EDC(&qword_3D2670, &qword_3D2530, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_10EDC(&qword_3D0C10, &qword_3D0C18, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D2668);
  }
  return result;
}

unint64_t sub_511D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2678;
  if (!qword_3D2678)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D2650);
    sub_10EDC(&qword_3D2680, &qword_3D2688, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    sub_10EDC(&qword_3D2690, &qword_3D2640, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D2678);
  }
  return result;
}

void GridSpecType.hash(into:)()
{
  Hasher._combine(_:)(0);
}

Swift::Int GridSpecType.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

Swift::Int sub_512D4(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

unint64_t sub_51314()
{
  unint64_t result;

  result = qword_3D2698;
  if (!qword_3D2698)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GridSpecType, &type metadata for GridSpecType);
    atomic_store(result, (unint64_t *)&qword_3D2698);
  }
  return result;
}

uint64_t dispatch thunk of GridSpec.pageColumnMargin(for:traitCollection:axis:gridType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t getEnumTagSinglePayload for GridSpecType(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for GridSpecType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_513F4 + 4 * byte_2F1C10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_51414 + 4 * byte_2F1C15[v4]))();
}

_BYTE *sub_513F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_51414(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_5141C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_51424(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_5142C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_51434(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GridSpecType()
{
  return &type metadata for GridSpecType;
}

void sub_51450(unsigned int a1, int a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  id v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  void *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  double v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  double v100;
  double v101;
  double v102;
  double v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  double v111;
  double v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  double v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  id v141;
  void *v142;
  char **v143;
  id v144;
  id v145;
  __n128 v146;
  void *v147;
  void *v148;
  void *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t (*v175)(char *, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  unsigned int v178;
  uint64_t v179;
  _QWORD v180[2];

  v179 = a4;
  v171 = a3;
  v173 = a2;
  v178 = a1;
  v155 = type metadata accessor for AnalyzedColor(0);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v153 = (char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ArtworkAspectRule(0);
  v169 = *(_QWORD *)(v6 - 8);
  v170 = v6;
  v7 = __chkstk_darwin(v6);
  v152 = (char *)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v158 = (char *)&v150 - v10;
  __chkstk_darwin(v9);
  v168 = (char *)&v150 - v11;
  v12 = type metadata accessor for NetworkTaskPriority(0);
  __chkstk_darwin(v12);
  v157 = (char *)&v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v162 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v161 = (char *)&v150 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v16);
  v164 = (char *)&v150 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for ArtworkRequest(0);
  v166 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v165 = (char *)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CropCode(0);
  v176 = *(_QWORD *)(v19 - 8);
  v177 = v19;
  v20 = __chkstk_darwin(v19);
  v151 = (char *)&v150 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v23 = (char *)&v150 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  v25 = __chkstk_darwin(v24);
  v156 = (char *)&v150 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v150 - v28;
  __chkstk_darwin(v27);
  v31 = (char *)&v150 - v30;
  v32 = type metadata accessor for ArtworkModel(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = __chkstk_darwin(v32);
  v159 = (uint64_t)&v150 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v34);
  v160 = (uint64_t)&v150 - v37;
  v38 = __chkstk_darwin(v36);
  v40 = (char *)&v150 - v39;
  v41 = v4;
  v42 = *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_upsellInformation];
  UpsellInformation.backgroundArtwork.getter(v38);
  v175 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v43 = v175(v31, 1, v32);
  v172 = v32;
  v174 = v42;
  v163 = v14;
  if (v43 == 1)
  {
    v44 = v171;
    v45 = sub_44C28((uint64_t)v31);
  }
  else
  {
    v46 = sub_2376C((uint64_t)v31, (uint64_t)v40);
    v47 = ArtworkCrop.cropCode.getter(v46);
    v48 = UpsellInformation.backgroundArtworkIsFromEditorial.getter(v47);
    v49 = v23;
    v50 = v171;
    if ((v48 & 1) != 0)
    {
      v51 = objc_msgSend(v4, "traitCollection");
      v52 = UITraitCollection.interfaceIdiomIsMac.getter();

      if ((v52 & 1) != 0)
      {
        v54 = v176;
        v53 = v177;
        (*(void (**)(char *, uint64_t))(v176 + 8))(v49, v177);
        (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v49, enum case for CropCode.upsellMac(_:), v53);
      }
      else
      {
        v55 = SizeClass.isWideHorizontal.getter(v178);
        v57 = v176;
        v56 = v177;
        (*(void (**)(char *, uint64_t))(v176 + 8))(v49, v177);
        v58 = (unsigned int *)&enum case for CropCode.upsellWide(_:);
        if ((v55 & 1) == 0)
          v58 = (unsigned int *)&enum case for CropCode.upsellTall(_:);
        v59 = v151;
        (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v151, *v58, v56);
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v49, v59, v56);
      }
    }
    v150 = v40;
    v60 = v160;
    sub_27E84((uint64_t)v40, v160);
    v61 = v41;
    v62 = v179;
    v63 = sub_52738(v178);
    v65 = v64;
    v67 = v176;
    v66 = v177;
    v68 = v164;
    (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v164, v49, v177);
    v69 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v68, 0, 1, v66);
    v70 = v161;
    v71 = static Logger.artwork.getter(v69);
    v72 = static os_log_type_t.info.getter(v71);
    SignpostAndLogTrace(domain:level:)(v180, v70, v72);
    v73 = (*(uint64_t (**)(char *, uint64_t))(v162 + 8))(v70, v163);
    v74 = v157;
    static NetworkTaskPriority.dispatchQueuePriority()(v73);
    v75 = v165;
    ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v60, 0, v68, 0, _swiftEmptyArrayStorage, v74, v180, v63, v65, 3.0);
    v157 = v49;
    v76 = *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8);
    v77 = (void *)v76(v50, v62);
    v78 = *(_QWORD *)&v61[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_objectGraph];
    v79 = type metadata accessor for ArtworkView(0);
    v80 = sub_54A90();
    ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v75, v78, 0, v79, v80);

    v81 = (char *)v76(v50, v62);
    v82 = ArtworkRequest.targetSize.getter();
    v83 = &v81[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
    *(double *)v83 = v82;
    *((_QWORD *)v83 + 1) = v84;
    objc_msgSend(v81, "setNeedsLayout");

    v41 = v61;
    v44 = v50;
    v85 = (char *)v76(v50, v62);
    v87 = v168;
    v86 = v169;
    v88 = v170;
    (*(void (**)(char *, _QWORD, uint64_t))(v169 + 104))(v168, enum case for ArtworkAspectRule.aspectFill(_:), v170);
    objc_msgSend(v85, "effectiveUserInterfaceLayoutDirection");
    objc_msgSend(v85, "setContentMode:", 5);
    v89 = v158;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v158, v87, v88);
    v90 = &v85[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule];
    v91 = swift_beginAccess(&v85[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule], v180, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v86 + 40))(v90, v89, v88, v91);
    swift_endAccess(v180);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
    (*(void (**)(char *, uint64_t))(v166 + 8))(v75, v167);
    (*(void (**)(char *, uint64_t))(v176 + 8))(v157, v177);
    v45 = sub_239C0((uint64_t)v150);
  }
  UpsellInformation.logoArtwork.getter(v45);
  v92 = v172;
  if (v175(v29, 1, v172) == 1)
  {
    v93 = sub_44C28((uint64_t)v29);
    v94 = v41;
    v95 = v44;
  }
  else
  {
    v96 = (uint64_t)v29;
    v97 = v159;
    sub_2376C(v96, v159);
    v94 = v41;
    v95 = v44;
    v98 = (char *)(*(uint64_t (**)(uint64_t))(v179 + 16))(v44);
    if (v98)
    {
      v99 = v98;
      objc_msgSend(v98, "frame");
      v101 = v100;
      v103 = v102;
      v104 = v160;
      sub_27E84(v97, v160);
      v105 = v164;
      v106 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v176 + 56))(v164, 1, 1, v177);
      v107 = v161;
      v108 = static Logger.artwork.getter(v106);
      v109 = static os_log_type_t.info.getter(v108);
      SignpostAndLogTrace(domain:level:)(v180, v107, v109);
      (*(void (**)(char *, uint64_t))(v162 + 8))(v107, v163);
      v110 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v110, "scale");
      v112 = v111;

      v113 = v165;
      ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v104, 1, 0, v105, 0, _swiftEmptyArrayStorage, v180, v101, v103, v112);
      v114 = *(_QWORD *)&v94[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_objectGraph];
      v115 = type metadata accessor for ArtworkView(0);
      v116 = sub_54A90();
      ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v113, v114, 0, v115, v116);
      v117 = (*(uint64_t (**)(char *, uint64_t))(v166 + 8))(v113, v167);
      v118 = ArtworkModel.size.getter(v117);
      v119 = &v99[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
      *(double *)v119 = v118;
      *((_QWORD *)v119 + 1) = v120;
      objc_msgSend(v99, "setNeedsLayout");
      v122 = v169;
      v121 = v170;
      v123 = v152;
      (*(void (**)(char *, _QWORD, uint64_t))(v169 + 104))(v152, enum case for ArtworkAspectRule.aspectFit(_:), v170);
      if (objc_msgSend(v99, "effectiveUserInterfaceLayoutDirection") == (char *)&dword_0 + 1)
        v124 = 12;
      else
        v124 = 11;
      objc_msgSend(v99, "setContentMode:", v124);
      v125 = v97;
      v126 = v168;
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v168, v123, v121);
      v127 = &v99[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule];
      v128 = swift_beginAccess(&v99[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule], v180, 33, 0);
      (*(void (**)(char *, char *, uint64_t, __n128))(v122 + 40))(v127, v126, v121, v128);
      swift_endAccess(v180);

      (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v121);
      v129 = v125;
    }
    else
    {
      v129 = v97;
    }
    v93 = sub_239C0(v129);
  }
  v130 = UpsellInformation.backgroundColor.getter(v93);
  if ((_BYTE)v131 == 0xFF)
  {
    v134 = (uint64_t)v156;
    UpsellInformation.backgroundArtwork.getter(v130);
    if (v175((char *)v134, 1, v92) == 1)
    {
      sub_44C28(v134);
      v132 = 0;
      v133 = 255;
    }
    else
    {
      v135 = v134;
      v132 = *(void **)(v134 + 56);
      v133 = *(unsigned __int8 *)(v135 + 64);
      sub_27F6C(v132, *(_BYTE *)(v135 + 64));
      sub_239C0(v135);
    }
  }
  else
  {
    v132 = (void *)v130;
    v133 = v131;
  }
  v136 = *(_QWORD *)&v94[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar];
  if ((SizeClass.isWideHorizontal.getter(v178) & 1) != 0)
  {
    if ((_BYTE)v133 == 0xFF)
    {
      v139 = 0;
    }
    else
    {
      sub_27F80(v132, v133);
      v137 = v153;
      v138 = AnalyzedColor.init(color:)(v132, v133);
      v139 = AnalyzedColor.isDark.getter(v138);
      (*(void (**)(char *, uint64_t))(v154 + 8))(v137, v155);
    }
  }
  else
  {
    v139 = 1;
  }
  v140 = OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_lightContent;
  *(_BYTE *)(v136 + OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_lightContent) = v139 & 1;
  v141 = sub_122F38();
  LODWORD(v140) = *(unsigned __int8 *)(v136 + v140);
  v142 = (void *)objc_opt_self(UIColor);
  v143 = &selRef_whiteColor;
  if (!(_DWORD)v140)
    v143 = &selRef_secondaryLabelColor;
  v144 = objc_msgSend(v142, *v143);
  objc_msgSend(v141, "setTintColor:", v144);

  v145 = objc_msgSend(v94, "traitCollection");
  LOBYTE(v144) = UITraitCollection.interfaceIdiomIsMac.getter();

  *(_BYTE *)(v136 + OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_style) = (v144 | v173) & 1;
  sub_122D58();
  if ((_BYTE)v133 == 0xFF)
  {
    v148 = 0;
  }
  else
  {
    sub_27F80(v132, v133);
    v147 = (void *)Color.color.getter(v132, v146);
    sub_27F94(v132, v133);
    v148 = (void *)UIColor.clampedBrightness(min:max:)(0.13, 0.95);

  }
  v149 = (void *)(*(uint64_t (**)(uint64_t))(v179 + 8))(v95);
  objc_msgSend(v149, "setBackgroundColor:", v148);

  objc_msgSend(v94, "setBackgroundColor:", v148);
  sub_27F94(v132, v133);
}

double sub_52120()
{
  double result;

  result = 1280.0;
  xmmword_3FA960 = xmmword_2F1CE0;
  return result;
}

double sub_52134()
{
  double result;

  result = 2048.0;
  xmmword_3FA970 = xmmword_2F1CF0;
  return result;
}

double sub_52148()
{
  double result;

  result = 540.0;
  xmmword_3FA980 = xmmword_2F1D00;
  return result;
}

char *sub_5215C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  double v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  double v38;
  Class isa;
  id v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  objc_super v45;

  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar;
  v6 = type metadata accessor for UpsellTitleBar();
  v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6));
  v8 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v7, "init");
  v9 = objc_allocWithZone((Class)type metadata accessor for UpsellShowGridView());
  v10 = a1;
  swift_retain(a2);
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_upsellShowGridView] = sub_16B544(v10, a2);
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_upsellInformation] = v10;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_objectGraph] = a2;
  v41 = v10;
  swift_retain(a2);

  v45.receiver = v8;
  v45.super_class = (Class)type metadata accessor for UpsellArtwork();
  v11 = (char *)objc_msgSendSuper2(&v45, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v11, "setClipsToBounds:", 1);
  objc_msgSend(v11, "setPreservesSuperviewLayoutMargins:", 1);
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar;
  v13 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar];
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_upsellShowGridView;
  v15 = *(void **)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_upsellShowGridView];
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "addSubview:", v13);
  objc_msgSend(v11, "addSubview:", v15);
  objc_msgSend(v11, "layoutMargins");
  v43 = v16;
  v42 = 0x4024000000000000;
  static Platform.preferred<A>(iOS:mac:)(&v44, &v43, &v42, &type metadata for CGFloat);
  v17 = v44;
  v18 = v13;
  UIEdgeInsets.init(topBottom:sides:)(0.0, v17);
  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_containerStackView], "setLayoutMargins:");

  v19 = (void *)objc_opt_self(NSLayoutConstraint);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  *(double *)&v21 = COERCE_DOUBLE(swift_allocObject(v20, 72, 7));
  *(_OWORD *)(v21 + 16) = xmmword_2F1D10;
  v22 = objc_msgSend(*(id *)&v11[v12], "topAnchor");
  v23 = objc_msgSend(v11, "topAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v21 + 32) = v24;
  v25 = objc_msgSend(*(id *)&v11[v14], "leadingAnchor");
  v26 = objc_msgSend(v11, "leadingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v21 + 40) = v27;
  v28 = objc_msgSend(*(id *)&v11[v14], "trailingAnchor");
  v29 = objc_msgSend(v11, "trailingAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v21 + 48) = v30;
  v31 = objc_msgSend(*(id *)&v11[v14], "topAnchor");
  v32 = objc_msgSend(v11, "topAnchor");
  v33 = objc_msgSend(v31, "constraintGreaterThanOrEqualToAnchor:", v32);

  *(_QWORD *)(v21 + 56) = v33;
  v34 = objc_msgSend(*(id *)&v11[v14], "bottomAnchor");
  v35 = objc_msgSend(v11, "bottomAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v21 + 64) = v36;
  v44 = *(double *)&v21;
  specialized Array._endMutation()(v37);
  v38 = v44;
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "activateConstraints:", isa, swift_bridgeObjectRelease(*(_QWORD *)&v38).n128_f64[0]);

  swift_release(a2);
  return v11;
}

id sub_52690()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UpsellArtwork();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UpsellArtwork()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews13UpsellArtwork);
}

double sub_52738(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  char v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((UpsellInformation.backgroundArtworkIsFromEditorial.getter(v4) & 1) != 0)
  {
    v7 = objc_msgSend(v1, "traitCollection");
    v8 = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v8 & 1) != 0)
    {
      if (qword_3CF130 != -1)
        swift_once(&qword_3CF130, sub_52120);
      v9 = &xmmword_3FA960;
    }
    else if ((SizeClass.isWideHorizontal.getter(a1) & 1) != 0)
    {
      if (qword_3CF138 != -1)
        swift_once(&qword_3CF138, sub_52134);
      v9 = &xmmword_3FA970;
    }
    else
    {
      if (qword_3CF140 != -1)
        swift_once(&qword_3CF140, sub_52148);
      v9 = &xmmword_3FA980;
    }
    return *(double *)v9;
  }
  else
  {
    UpsellInformation.backgroundArtwork.getter();
    v10 = type metadata accessor for ArtworkModel(0);
    v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10);
    if ((_DWORD)v11 == 1)
    {
      sub_44C28((uint64_t)v6);
      return 0.0;
    }
    else
    {
      v12 = ArtworkModel.size.getter(v11);
      sub_239C0((uint64_t)v6);
    }
  }
  return v12;
}

char *sub_528F4(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  _BYTE *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  double leading;
  double bottom;
  double trailing;
  char *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  Class isa;
  unsigned __int8 v46;

  v3 = v2;
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_backgroundArtworkView;
  v7 = type metadata accessor for ArtworkView(0);
  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7));
  v9 = v3;
  v10 = objc_msgSend(v8, "init");
  v11 = v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 3;
  v46 = v11;
  sub_EB33C(&v46);
  *(_QWORD *)&v3[v6] = v10;
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_logoArtworkView] = 0;
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_gradientView;
  v13 = type metadata accessor for UpsellTitleBarGradientView();
  *(_QWORD *)&v9[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");

  v14 = a1;
  swift_retain(a2);
  v15 = sub_5215C(v14, a2);
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_backgroundArtworkView;
  v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_backgroundArtworkView];
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar;
  v19 = *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar];
  v20 = v15;
  objc_msgSend(v20, "insertSubview:belowSubview:", v17, v19);
  v21 = *(void **)&v15[v16];
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v25 = v20;
  v26 = v21;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v26, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_gradientView;
  v28 = *(void **)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_gradientView];
  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v25, "insertSubview:belowSubview:", v28, *(_QWORD *)&v15[v18]);
  v29 = (void *)objc_opt_self(NSLayoutConstraint);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v31 = swift_allocObject(v30, 64, 7);
  *(_OWORD *)(v31 + 16) = xmmword_2F0A20;
  v32 = objc_msgSend(v28, "leadingAnchor");
  v33 = objc_msgSend(v25, "leadingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v31 + 32) = v34;
  v35 = objc_msgSend(*(id *)&v25[v27], "trailingAnchor");
  v36 = objc_msgSend(v25, "trailingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v31 + 40) = v37;
  v38 = objc_msgSend(*(id *)&v25[v27], "topAnchor");
  v39 = objc_msgSend(v25, "topAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v31 + 48) = v40;
  v41 = objc_msgSend(*(id *)&v25[v27], "heightAnchor");
  v42 = objc_msgSend(v41, "constraintEqualToConstant:", 100.0);

  *(_QWORD *)(v31 + 56) = v42;
  specialized Array._endMutation()(v43);
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "activateConstraints:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

  swift_release(a2);
  return v25;
}

void sub_52CE0()
{
  sub_5410C(&OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_backgroundArtworkView, &OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_logoArtworkView, &OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_gradientView);
}

uint64_t type metadata accessor for UpsellEditorialHeader()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21UpsellEditorialHeader);
}

id sub_52D3C()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_backgroundArtworkView);
}

void *sub_52D4C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21UpsellEditorialHeader_logoArtworkView);
  v2 = v1;
  return v1;
}

char *sub_52D78(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  double v31;
  Class isa;
  id v34;
  id v35;
  int64x2_t v36;
  int64x2_t v37;
  double v38[2];

  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews26UpsellSquareFallbackHeader_backgroundArtworkView;
  v6 = v2;
  *(_QWORD *)&v2[v5] = sub_54218();
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews26UpsellSquareFallbackHeader_logoArtworkView] = 0;

  v35 = a1;
  swift_retain(a2);
  v7 = sub_5215C(v35, a2);
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews26UpsellSquareFallbackHeader_backgroundArtworkView;
  v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews26UpsellSquareFallbackHeader_backgroundArtworkView];
  v10 = *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar];
  v11 = v7;
  objc_msgSend(v11, "insertSubview:belowSubview:", v9, v10);
  v36 = vdupq_n_s64(0x4065000000000000uLL);
  v37 = vdupq_n_s64(0x4071800000000000uLL);
  type metadata accessor for CGSize(0);
  static Platform.preferred<A>(iOS:mac:)(v38, &v37, &v36, v12);
  v14 = v38[0];
  v13 = v38[1];
  v34 = (id)objc_opt_self(NSLayoutConstraint);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_2F1D10;
  v17 = objc_msgSend(*(id *)&v7[v8], "topAnchor");
  v18 = objc_msgSend(v11, "topAnchor");
  v37.i64[0] = 0x4046800000000000;
  v36.i64[0] = 0x404B000000000000;
  static Platform.preferred<A>(iOS:mac:)(v38, &v37, &v36, &type metadata for CGFloat);
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, v38[0]);

  *(_QWORD *)(v16 + 32) = v19;
  v20 = objc_msgSend(*(id *)&v7[v8], "bottomAnchor");
  v21 = objc_msgSend(v11, "bottomAnchor");
  v37.i64[0] = 0x4041800000000000;
  v36.i64[0] = 0x403E000000000000;
  static Platform.preferred<A>(iOS:mac:)(v38, &v37, &v36, &type metadata for CGFloat);
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, -v38[0]);

  *(_QWORD *)(v16 + 40) = v22;
  v23 = objc_msgSend(*(id *)&v7[v8], "widthAnchor");
  v24 = objc_msgSend(v23, "constraintEqualToConstant:", v14);

  *(_QWORD *)(v16 + 48) = v24;
  v25 = objc_msgSend(*(id *)&v7[v8], "heightAnchor");
  v26 = objc_msgSend(v25, "constraintEqualToConstant:", v13);

  *(_QWORD *)(v16 + 56) = v26;
  v27 = objc_msgSend(*(id *)&v7[v8], "centerXAnchor");
  v28 = objc_msgSend(v11, "centerXAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v16 + 64) = v29;
  *(_QWORD *)&v38[0] = v16;
  specialized Array._endMutation()(v30);
  v31 = v38[0];
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "activateConstraints:", isa, swift_bridgeObjectRelease(*(_QWORD *)&v31).n128_f64[0]);

  swift_release(a2);
  return v11;
}

void sub_5312C()
{
  uint64_t v0;

}

uint64_t type metadata accessor for UpsellSquareFallbackHeader()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews26UpsellSquareFallbackHeader);
}

id sub_531B0()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews26UpsellSquareFallbackHeader_backgroundArtworkView));
}

void *sub_531C0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26UpsellSquareFallbackHeader_logoArtworkView);
  v2 = v1;
  return v1;
}

_BYTE *sub_531EC()
{
  uint64_t v0;
  _BYTE *v1;
  unsigned __int8 v2;
  id v3;
  id v4;
  char *v5;
  void *v6;
  id v7;
  unsigned __int8 v9;

  v0 = type metadata accessor for ArtworkView(0);
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  v2 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 3;
  v9 = v2;
  sub_EB33C(&v9);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.1);

  v5 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v6 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_QWORD *)v5 = v4;
  *(_OWORD *)(v5 + 8) = xmmword_2F1D20;
  *((_QWORD *)v5 + 3) = 0x401C000000000000;
  v7 = v4;

  sub_E9020();
  return v1;
}

char *sub_532E4()
{
  _BYTE *v0;
  unsigned __int8 v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  char *v8;
  unsigned __int8 v10;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
  v10 = v1;
  sub_EB33C(&v10);
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v0, "setBackgroundColor:", v3);

  v4 = v0;
  v5 = objc_msgSend(v2, "clearColor");
  v6 = *(void **)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = v5;
  v7 = v5;

  sub_A2A14();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0;
  v8 = v4;
  sub_A2A14();

  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v8;
}

char *sub_53418(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  double leading;
  double bottom;
  double trailing;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  Class isa;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  double v69;
  Class v70;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double v77;

  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_backgroundArtworkView;
  v6 = v2;
  *(_QWORD *)&v2[v5] = sub_531EC();
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_logoArtworkView;
  *(_QWORD *)&v6[v7] = sub_532E4();
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_gradientView;
  v9 = type metadata accessor for UpsellTitleBarGradientView();
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");

  v10 = a1;
  swift_retain(a2);
  v73 = v10;
  v74 = a2;
  v11 = sub_5215C(v10, a2);
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_backgroundArtworkView;
  v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_backgroundArtworkView];
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar;
  v15 = *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar];
  v16 = v11;
  objc_msgSend(v16, "insertSubview:belowSubview:", v13, v15);
  v17 = *(void **)&v11[v12];
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v21 = v16;
  v22 = v17;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v22, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_gradientView;
  v24 = *(void **)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_gradientView];
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v21, "insertSubview:belowSubview:", v24, *(_QWORD *)&v11[v14]);
  v25 = (void *)objc_opt_self(NSLayoutConstraint);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  *(double *)&v26 = COERCE_DOUBLE(swift_allocObject(v72, 64, 7));
  *(_OWORD *)(v26 + 16) = xmmword_2F0A20;
  v27 = objc_msgSend(v24, "leadingAnchor");
  v28 = objc_msgSend(v21, "leadingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v26 + 32) = v29;
  v30 = objc_msgSend(*(id *)&v21[v23], "trailingAnchor");
  v31 = objc_msgSend(v21, "trailingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v26 + 40) = v32;
  v33 = objc_msgSend(*(id *)&v21[v23], "topAnchor");
  v34 = objc_msgSend(v21, "topAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v26 + 48) = v35;
  v36 = objc_msgSend(*(id *)&v21[v23], "heightAnchor");
  v37 = objc_msgSend(v36, "constraintEqualToConstant:", 100.0);

  *(_QWORD *)(v26 + 56) = v37;
  v77 = *(double *)&v26;
  specialized Array._endMutation()(v38);
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "activateConstraints:", isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v40 = *(void **)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_logoArtworkView];
  if (v40)
  {
    v41 = objc_allocWithZone((Class)UIView);
    v42 = v40;
    v43 = objc_msgSend(v41, "init");
    objc_msgSend(v43, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v44 = *(void **)&v11[v14];
    objc_msgSend(v21, "insertSubview:belowSubview:", v43, v44);
    objc_msgSend(v43, "addSubview:", v42);
    *(double *)&v45 = COERCE_DOUBLE(swift_allocObject(v72, 96, 7));
    *(_OWORD *)(v45 + 16) = xmmword_2F1D30;
    v46 = objc_msgSend(v43, "topAnchor");
    v47 = objc_msgSend(v44, "bottomAnchor");
    v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

    *(_QWORD *)(v45 + 32) = v48;
    v49 = objc_msgSend(v43, "leadingAnchor");
    v50 = objc_msgSend(v21, "leadingAnchor");
    v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

    *(_QWORD *)(v45 + 40) = v51;
    v52 = objc_msgSend(v43, "trailingAnchor");
    v53 = objc_msgSend(v21, "trailingAnchor");
    v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

    *(_QWORD *)(v45 + 48) = v54;
    v55 = objc_msgSend(v43, "bottomAnchor");
    v56 = objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_upsellShowGridView], "topAnchor");
    v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

    *(_QWORD *)(v45 + 56) = v57;
    v58 = objc_msgSend(v42, "heightAnchor");
    v59 = objc_msgSend(v58, "constraintEqualToConstant:", 70.0);

    *(_QWORD *)(v45 + 64) = v59;
    v60 = objc_msgSend(v42, "widthAnchor");
    v76 = 0x4071800000000000;
    v75 = 0x406E000000000000;
    static Platform.preferred<A>(iOS:mac:)(&v77, &v76, &v75, &type metadata for CGFloat);
    v61 = objc_msgSend(v60, "constraintEqualToConstant:", v77);

    *(_QWORD *)(v45 + 72) = v61;
    v62 = objc_msgSend(v42, "centerYAnchor");
    v63 = objc_msgSend(v43, "centerYAnchor");
    v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

    *(_QWORD *)(v45 + 80) = v64;
    v65 = objc_msgSend(v42, "centerXAnchor");
    v66 = objc_msgSend(v43, "centerXAnchor");
    v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

    *(_QWORD *)(v45 + 88) = v67;
    v77 = *(double *)&v45;
    specialized Array._endMutation()(v68);
    v69 = v77;
    v70 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v25, "activateConstraints:", v70, swift_bridgeObjectRelease(*(_QWORD *)&v69).n128_f64[0]);

  }
  swift_release(v74);
  return v21;
}

void sub_53C14()
{
  sub_5410C(&OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_backgroundArtworkView, &OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_logoArtworkView, &OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_gradientView);
}

uint64_t type metadata accessor for UpsellLogoFallbackHeader()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader);
}

id sub_53C6C()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_backgroundArtworkView));
}

void *sub_53C7C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24UpsellLogoFallbackHeader_logoArtworkView);
  v2 = v1;
  return v1;
}

char *sub_53CA8(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  _BYTE *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  double leading;
  double bottom;
  double trailing;
  char *v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  Class isa;
  id v48;
  unsigned __int8 v49;

  v3 = v2;
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_backgroundArtworkView;
  v7 = type metadata accessor for ArtworkView(0);
  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7));
  v9 = v3;
  v10 = objc_msgSend(v8, "init");
  v11 = v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 3;
  v49 = v11;
  sub_EB33C(&v49);
  *(_QWORD *)&v3[v6] = v10;
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_logoArtworkView] = 0;
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_gradientView;
  v13 = type metadata accessor for UpsellTitleBarGradientView();
  *(_QWORD *)&v9[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");

  v14 = a1;
  swift_retain(a2);
  v15 = sub_5215C(v14, a2);
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_backgroundArtworkView;
  v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_backgroundArtworkView];
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar;
  v19 = *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar];
  v20 = v15;
  objc_msgSend(v20, "insertSubview:belowSubview:", v17, v19);
  v21 = *(void **)&v15[v16];
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v25 = v20;
  v26 = v21;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v26, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_gradientView;
  v28 = *(void **)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_gradientView];
  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v25, "insertSubview:belowSubview:", v28, *(_QWORD *)&v15[v18]);
  v48 = (id)objc_opt_self(NSLayoutConstraint);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v30 = swift_allocObject(v29, 72, 7);
  *(_OWORD *)(v30 + 16) = xmmword_2F1D10;
  v31 = objc_msgSend(v25, "heightAnchor");
  v32 = objc_msgSend(v25, "widthAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v30 + 32) = v33;
  v34 = objc_msgSend(*(id *)&v25[v27], "leadingAnchor");
  v35 = objc_msgSend(v25, "leadingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v30 + 40) = v36;
  v37 = objc_msgSend(*(id *)&v25[v27], "trailingAnchor");
  v38 = objc_msgSend(v25, "trailingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v30 + 48) = v39;
  v40 = objc_msgSend(*(id *)&v25[v27], "topAnchor");
  v41 = objc_msgSend(v25, "topAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v30 + 56) = v42;
  v43 = objc_msgSend(*(id *)&v25[v27], "heightAnchor");
  v44 = objc_msgSend(v43, "constraintEqualToConstant:", 100.0);

  *(_QWORD *)(v30 + 64) = v44;
  specialized Array._endMutation()(v45);
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v48, "activateConstraints:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

  swift_release(a2);
  return v25;
}

void sub_540F0()
{
  sub_5410C(&OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_backgroundArtworkView, &OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_logoArtworkView, &OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_gradientView);
}

void sub_5410C(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;

}

void sub_54170(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{

}

uint64_t type metadata accessor for UpsellFallbackCompactHeader()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader);
}

id sub_541DC()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_backgroundArtworkView));
}

void *sub_541EC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews27UpsellFallbackCompactHeader_logoArtworkView);
  v2 = v1;
  return v1;
}

_BYTE *sub_54218()
{
  _BYTE *v0;
  unsigned __int8 v1;
  id v2;
  id v3;
  char *v4;
  void *v5;
  id v6;
  unsigned __int8 v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
  v8 = v1;
  sub_EB33C(&v8);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v3 = objc_msgSend(v2, "colorWithAlphaComponent:", 0.1);

  v4 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v5 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_QWORD *)v4 = v3;
  *(_OWORD *)(v4 + 8) = xmmword_2F1D20;
  *((_QWORD *)v4 + 3) = 0x401C000000000000;
  v6 = v3;

  sub_E9020();
  return v0;
}

char *sub_5432C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  Class isa;
  id v31;
  id v32;

  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews33UpsellSquareFallbackCompactHeader_backgroundArtworkView;
  v6 = v2;
  *(_QWORD *)&v2[v5] = sub_54218();
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews33UpsellSquareFallbackCompactHeader_logoArtworkView] = 0;

  v32 = a1;
  swift_retain(a2);
  v7 = sub_5215C(v32, a2);
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews33UpsellSquareFallbackCompactHeader_backgroundArtworkView;
  v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews33UpsellSquareFallbackCompactHeader_backgroundArtworkView];
  v10 = *(void **)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews13UpsellArtwork_titleBar];
  v11 = v7;
  objc_msgSend(v11, "insertSubview:belowSubview:", v9, v10);
  v31 = (id)objc_opt_self(NSLayoutConstraint);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_2F1D10;
  v14 = objc_msgSend(*(id *)&v7[v8], "topAnchor");
  v15 = objc_msgSend(v10, "bottomAnchor");
  v16 = objc_msgSend(v14, "constraintGreaterThanOrEqualToAnchor:constant:", v15, 20.0);

  *(_QWORD *)(v13 + 32) = v16;
  v17 = objc_msgSend(*(id *)&v7[v8], "heightAnchor");
  v18 = objc_msgSend(v17, "constraintGreaterThanOrEqualToConstant:", 30.0);

  *(_QWORD *)(v13 + 40) = v18;
  v19 = objc_msgSend(*(id *)&v7[v8], "centerXAnchor");
  v20 = objc_msgSend(v11, "centerXAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v13 + 48) = v21;
  v22 = objc_msgSend(*(id *)&v7[v8], "widthAnchor");
  v23 = objc_msgSend(*(id *)&v7[v8], "heightAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v13 + 56) = v24;
  v25 = objc_msgSend(*(id *)&v7[v8], "bottomAnchor");
  v26 = objc_msgSend(v11, "bottomAnchor");
  v27 = objc_msgSend(v25, "constraintLessThanOrEqualToAnchor:constant:", v26, -35.0);

  *(_QWORD *)(v13 + 64) = v27;
  specialized Array._endMutation()(v28);
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v31, "activateConstraints:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  swift_release(a2);
  return v11;
}

void sub_54674(char *a1, uint64_t a2, void *a3, uint64_t *a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v9;
  id v10;

  v9 = *a4;
  v10 = a3;
  *(_QWORD *)&a1[v9] = sub_54218();
  *(_QWORD *)&a1[*a5] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UpsellArtworkHeader.swift", 49, 2, a6, 0);
  __break(1u);
}

void sub_546F8()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews33UpsellSquareFallbackCompactHeader_backgroundArtworkView));

}

uint64_t type metadata accessor for UpsellSquareFallbackCompactHeader()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews33UpsellSquareFallbackCompactHeader);
}

id sub_5477C()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews33UpsellSquareFallbackCompactHeader_backgroundArtworkView));
}

void *sub_5478C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews33UpsellSquareFallbackCompactHeader_logoArtworkView);
  v2 = v1;
  return v1;
}

id sub_547B8(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  NSString *v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  CAGradientLayerType v21;
  objc_super v22;

  v22.receiver = v4;
  v22.super_class = (Class)swift_getObjectType();
  v9 = objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v11 = swift_allocObject(v10, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_2EFC90;
  v12 = objc_allocWithZone((Class)UIColor);
  v13 = v9;
  *(_QWORD *)(v11 + 32) = objc_msgSend(v12, "initWithWhite:alpha:", 0.0, 0.32);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.0);
  *(_QWORD *)(v11 + 40) = v14;
  v17 = (unint64_t)v11;
  specialized Array._endMutation()(v14);
  v18 = 0;
  v19 = xmmword_2F1D40;
  v20 = xmmword_2F1D50;
  v21 = kCAGradientLayerAxial;
  v15 = kCAGradientLayerAxial;
  sub_ECA74(&v17);

  return v13;
}

uint64_t type metadata accessor for UpsellTitleBarGradientView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_7FCF021A7FD6E8703DAE42A81B487C2126UpsellTitleBarGradientView);
}

void sub_549A4(uint64_t *a1, _QWORD *a2, uint64_t *a3, uint64_t a4)
{
  char *v4;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;

  v8 = v4;
  v9 = *a1;
  v10 = type metadata accessor for ArtworkView(0);
  v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10)), "init");
  v12 = v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 3;
  v15 = v12;
  sub_EB33C(&v15);
  *(_QWORD *)&v8[v9] = v11;
  *(_QWORD *)&v8[*a2] = 0;
  v13 = *a3;
  v14 = type metadata accessor for UpsellTitleBarGradientView();
  *(_QWORD *)&v8[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UpsellArtworkHeader.swift", 49, 2, a4, 0);
  __break(1u);
}

unint64_t sub_54A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D22B8;
  if (!qword_3D22B8)
  {
    v1 = type metadata accessor for ArtworkView(255);
    result = swift_getWitnessTable(&unk_2F56E0, v1);
    atomic_store(result, (unint64_t *)&qword_3D22B8);
  }
  return result;
}

double FlowPresentationHints.init(context:animate:)@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  int *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  v6 = (int *)type metadata accessor for FlowPresentationHints(0);
  v7 = (_OWORD *)(a3 + v6[9]);
  *v7 = 0u;
  v7[1] = 0u;
  v8 = a3 + v6[7];
  v9 = enum case for FlowDestinationPageHeader.standard(_:);
  v10 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a3, a1, v11);
  *(_BYTE *)(a3 + v6[5]) = a2;
  v12 = a3 + v6[6];
  *(_QWORD *)(v12 + 32) = 0;
  result = 0.0;
  *(_OWORD *)v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_BYTE *)(v12 + 40) = -1;
  *(_QWORD *)(a3 + v6[8]) = 0;
  return result;
}

uint64_t type metadata accessor for FlowPresentationHints(uint64_t a1)
{
  uint64_t result;

  result = qword_3D28C8;
  if (!qword_3D28C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FlowPresentationHints);
  return result;
}

double sub_54BE4(uint64_t a1)
{
  return sub_54C5C(a1, qword_3D2840);
}

uint64_t static FlowPresentationHints.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_54D5C(&qword_3CF148, (uint64_t)qword_3D2840, (uint64_t)sub_54BE4, a1);
}

uint64_t sub_54C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowPresentationHints(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_54C50(uint64_t a1)
{
  return sub_54C5C(a1, qword_3D2858);
}

double sub_54C5C(uint64_t a1, uint64_t *a2)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  v3 = (int *)type metadata accessor for FlowPresentationHints(0);
  __swift_allocate_value_buffer((uint64_t)v3, a2);
  v4 = __swift_project_value_buffer((uint64_t)v3, (uint64_t)a2);
  v5 = enum case for FlowPresentationContext.infer(_:);
  v6 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = (_OWORD *)(v4 + v3[9]);
  *v7 = 0u;
  v7[1] = 0u;
  v8 = v4 + v3[7];
  v9 = enum case for FlowDestinationPageHeader.standard(_:);
  v10 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  *(_BYTE *)(v4 + v3[5]) = 0;
  v11 = v4 + v3[6];
  *(_QWORD *)(v11 + 32) = 0;
  result = 0.0;
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_BYTE *)(v11 + 40) = -1;
  *(_QWORD *)(v4 + v3[8]) = 0;
  return result;
}

uint64_t static FlowPresentationHints.modalFormSheet.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_54D5C(&qword_3CF150, (uint64_t)qword_3D2858, (uint64_t)sub_54C50, a1);
}

uint64_t sub_54D5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for FlowPresentationHints(0);
  v7 = __swift_project_value_buffer(v6, a2);
  return sub_54C0C(v7, a4);
}

uint64_t sub_54DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  _BYTE v32[4];
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _QWORD v43[4];
  _BYTE v44[24];
  uint64_t v45;

  v36 = a5;
  v37 = a4;
  v40 = a3;
  v41 = type metadata accessor for FlowDestinationPageHeader(0);
  v39 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for FlowPresentationContext(0);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  __chkstk_darwin(v9);
  v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = a2;
  sub_430E8(a2, (uint64_t)v44);
  if (!v45)
    goto LABEL_7;
  sub_430E8((uint64_t)v44, (uint64_t)v43);
  v12 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  if (!swift_dynamicCast(&v42, v43, (char *)&type metadata for Any + 8, v12, 0))
  {
    v23 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    if (swift_dynamicCast(&v42, v43, (char *)&type metadata for Any + 8, v23, 0))
    {
      v13 = v42;
      __swift_destroy_boxed_opaque_existential_0(v43);
      v15 = 0;
      v17 = 0;
      v19 = 0;
      v21 = 0;
      v22 = 1;
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_0(v43);
LABEL_7:
    v13 = 0;
    v15 = 0;
    v17 = 0;
    v19 = 0;
    v21 = 0;
    v22 = -1;
    goto LABEL_8;
  }
  v13 = v42;
  objc_msgSend(v42, "bounds");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  __swift_destroy_boxed_opaque_existential_0(v43);
  v22 = 0;
LABEL_8:
  v24 = sub_1FE78((uint64_t)v44);
  v25 = dispatch thunk of FlowAction.presentationContext.getter(v24);
  v33 = dispatch thunk of FlowAction.animationBehavior.getter(v25);
  v26 = v37;
  sub_430E8(v37, (uint64_t)v44);
  v27 = sub_56AC8(v13, v15, v17, v19, v21, v22);
  FlowAction.destinationPageHeader.getter(v27);
  swift_release(a1);
  sub_56AE0(v13, v15, v17, v19, v21, v22);
  sub_1FE78(v26);
  sub_1FE78(v38);
  v28 = v36;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v34 + 32))(v36, v11, v35);
  v29 = (int *)type metadata accessor for FlowPresentationHints(0);
  *(_BYTE *)(v28 + v29[5]) = v33;
  v30 = v28 + v29[6];
  *(_QWORD *)v30 = v13;
  *(_QWORD *)(v30 + 8) = v15;
  *(_QWORD *)(v30 + 16) = v17;
  *(_QWORD *)(v30 + 24) = v19;
  *(_QWORD *)(v30 + 32) = v21;
  *(_BYTE *)(v30 + 40) = v22;
  *(_QWORD *)(v28 + v29[8]) = v40;
  sub_56AF8((uint64_t)v44, v28 + v29[9]);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v39 + 32))(v28 + v29[7], v8, v41);
}

uint64_t sub_55084@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __n128 v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = type metadata accessor for FlowPresentationContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v7 + 104))(v10, enum case for FlowPresentationContext.infer(_:), v6, v8);
  v11 = sub_89A0((unint64_t *)&unk_3D3840, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext, (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
  dispatch thunk of RawRepresentable.rawValue.getter(&v19, v6, v11);
  dispatch thunk of RawRepresentable.rawValue.getter(&v17, v6, v11);
  v12 = v20;
  v13 = v18;
  if (v19 == v17 && v20 == v18)
  {
    swift_bridgeObjectRelease_n(v20, 2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return FlowDestination.preferredPresentationContext(for:)(a1);
  }
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v17, v18, 0);
  swift_bridgeObjectRelease(v12);
  v15 = swift_bridgeObjectRelease(v13);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v15);
  if ((v14 & 1) != 0)
    return FlowDestination.preferredPresentationContext(for:)(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v3, v6);
}

uint64_t sub_55210(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  void *v7;
  double v8;
  CGFloat v9;
  id v10;
  id v11;
  char v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  void *v23;
  CGFloat v24;
  CGFloat v25;
  CGRect v26;
  CGRect v27;

  v2 = *(void **)a1;
  v3 = *(double *)(a1 + 8);
  v4 = *(double *)(a1 + 16);
  v5 = *(double *)(a1 + 24);
  v6 = *(double *)(a1 + 32);
  v7 = *(void **)a2;
  v8 = *(double *)(a2 + 8);
  v9 = *(double *)(a2 + 16);
  v24 = *(double *)(a2 + 32);
  v25 = *(double *)(a2 + 24);
  v23 = *(void **)a2;
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    {
      sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
      v10 = v7;
      v11 = v2;
      v12 = static NSObject.== infix(_:_:)(v2, v7);
      goto LABEL_8;
    }
LABEL_5:
    v13 = v7;
    v14 = v2;
    v12 = 0;
    goto LABEL_8;
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    goto LABEL_5;
  sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
  v15 = v7;
  v16 = v2;
  v17 = static NSObject.== infix(_:_:)(v2, v7);
  v18 = v8;
  v19 = v5;
  v20 = v4;
  v21 = v3;
  v12 = 0;
  if ((v17 & 1) != 0)
  {
    v26.origin.x = v21;
    v26.origin.y = v20;
    v26.size.width = v19;
    v26.size.height = v6;
    v27.size.height = v24;
    v27.size.width = v25;
    v27.origin.y = v9;
    v27.origin.x = v18;
    v12 = CGRectEqualToRect(v26, v27);
  }
LABEL_8:

  return v12 & 1;
}

uint64_t _s23ShelfKitCollectionViews21FlowPresentationHintsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  void *v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  CGFloat v55;
  double v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  CGFloat v61;
  id v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  id v72;
  id v73;
  uint64_t v74;
  char v75;
  void *v77;
  uint64_t v78;
  CGFloat v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  CGFloat v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;
  unsigned __int8 v100;
  char v101;
  void *v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  CGFloat v124;
  CGFloat v125;
  CGFloat v126;
  CGFloat v127;
  id v128;
  char *v129;
  int v130;
  CGFloat v131;
  char *v132;
  CGFloat v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  double v137;
  id v138;
  CGFloat v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  CGRect v146;
  CGRect v147;

  v4 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v4);
  v141 = (uint64_t)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v140 = (uint64_t)&v123 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v123 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v123 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v123 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v123 - v18;
  v20 = type metadata accessor for FlowPresentationContext(0);
  v21 = sub_89A0((unint64_t *)&unk_3D3840, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext, (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
  dispatch thunk of RawRepresentable.rawValue.getter(&v144, v20, v21);
  dispatch thunk of RawRepresentable.rawValue.getter(&v142, v20, v21);
  v22 = v145;
  v23 = v143;
  if (v144 == v142 && v145 == v143)
  {
    swift_bridgeObjectRelease_n(v145, 2);
    sub_54C0C(a1, (uint64_t)v19);
    sub_54C0C(a2, (uint64_t)v16);
  }
  else
  {
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v144, v145, v142, v143, 0);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v23);
    sub_54C0C(a1, (uint64_t)v19);
    sub_54C0C(a2, (uint64_t)v16);
    if ((v24 & 1) == 0)
    {
      sub_56B40((uint64_t)v16);
      sub_56B40((uint64_t)v19);
      sub_54C0C(a1, (uint64_t)v13);
      sub_54C0C(a2, (uint64_t)v10);
LABEL_18:
      sub_56B40((uint64_t)v10);
      sub_56B40((uint64_t)v13);
      v67 = v140;
      v66 = v141;
LABEL_23:
      sub_54C0C(a1, v67);
      v74 = a2;
LABEL_24:
      sub_54C0C(v74, v66);
LABEL_25:
      v75 = 0;
      goto LABEL_26;
    }
  }
  v25 = *(int *)(v4 + 20);
  v26 = v16[v25];
  v27 = FlowAnimationBehavior.rawValue.getter(v19[v25]);
  v29 = v28;
  v30 = FlowAnimationBehavior.rawValue.getter(v26);
  if (v27 == v30 && v29 == v31)
  {
    swift_bridgeObjectRelease_n(v29, 2);
    sub_56B40((uint64_t)v16);
    sub_56B40((uint64_t)v19);
    sub_54C0C(a1, (uint64_t)v13);
    sub_54C0C(a2, (uint64_t)v10);
  }
  else
  {
    v33 = v31;
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v30, v31, 0);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v33);
    sub_56B40((uint64_t)v16);
    sub_56B40((uint64_t)v19);
    sub_54C0C(a1, (uint64_t)v13);
    sub_54C0C(a2, (uint64_t)v10);
    if ((v34 & 1) == 0)
      goto LABEL_18;
  }
  v135 = a1;
  v136 = a2;
  v132 = (char *)v4;
  v35 = *(int *)(v4 + 24);
  v37 = *(void **)&v13[v35];
  v36 = *(uint64_t *)&v13[v35 + 8];
  v38 = *(uint64_t *)&v13[v35 + 24];
  v137 = *(double *)&v13[v35 + 16];
  v39 = *(_QWORD *)&v13[v35 + 32];
  v40 = v13[v35 + 40];
  v41 = &v10[v35];
  v43 = *(void **)v41;
  v42 = *((uint64_t *)v41 + 1);
  v44 = *((uint64_t *)v41 + 2);
  v45 = *((_QWORD *)v41 + 3);
  v46 = *((uint64_t *)v41 + 4);
  v47 = v41[40];
  v134 = v40;
  v138 = v43;
  v139 = *(double *)&v42;
  if (v40 == 255)
  {
    v68 = (uint64_t)v13;
    v69 = v39;
    v40 = v47;
    sub_56AC8(v43, v42, v44, v45, v46, v47);
    sub_56B40((uint64_t)v10);
    sub_56B40(v68);
    v70 = *(_QWORD *)&v137;
    if (v40 == 255)
    {
      sub_56AE0(v37, v36, *(uint64_t *)&v137, v38, v69, 0xFFu);
      v67 = v140;
      sub_54C0C(v135, v140);
      v66 = v141;
      sub_54C0C(v136, v141);
      goto LABEL_32;
    }
LABEL_22:
    sub_56AE0(v37, v36, v70, v38, v69, v134);
    sub_56AE0(v138, *(uint64_t *)&v139, v44, v45, v46, v40);
    v67 = v140;
    v66 = v141;
    a1 = v135;
    a2 = v136;
    goto LABEL_23;
  }
  v133 = *(double *)&v44;
  if (v47 == 255)
  {
    v132 = v10;
    v129 = v13;
    v69 = v39;
    v70 = *(_QWORD *)&v137;
    v71 = v40;
    LOBYTE(v40) = -1;
    v72 = v37;
    v73 = v37;
    sub_56B40((uint64_t)v132);
    sub_56B40((uint64_t)v129);
    sub_56AE0(v37, v36, v70, v38, v69, v71);
    *(double *)&v44 = v133;
    goto LABEL_22;
  }
  v131 = *(double *)&v46;
  v130 = v47;
  v128 = v37;
  if ((v40 & 1) != 0)
  {
    if ((v47 & 1) != 0)
    {
      v48 = v43;
      v49 = v40;
      v50 = v45;
      v51 = v39;
      v129 = (char *)sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
      v124 = *(double *)&v36;
      v52 = *(_QWORD *)&v137;
      sub_56AC8(v37, v36, *(uint64_t *)&v137, v38, v51, v49);
      v53 = v48;
      v54 = *(_QWORD *)&v139;
      v55 = v133;
      v56 = *(double *)&v50;
      sub_56AC8(v53, *(uint64_t *)&v139, *(uint64_t *)&v133, v50, *(uint64_t *)&v131, v130);
      v57 = v37;
      v58 = *(_QWORD *)&v124;
      LOBYTE(v50) = v134;
      sub_56AC8(v57, *(uint64_t *)&v124, v52, v38, v51, v134);
      v59 = *(_QWORD *)&v55;
      v125 = v56;
      v60 = *(_QWORD *)&v56;
      v61 = *(double *)&v51;
      v62 = v138;
      sub_56AC8(v138, v54, v59, v60, *(uint64_t *)&v131, v130);
      v63 = v58;
      v64 = v128;
      v65 = v52;
      sub_56AC8(v128, v63, v52, v38, v51, v50);
      LODWORD(v123) = static NSObject.== infix(_:_:)(v64, v62);
      goto LABEL_31;
    }
    goto LABEL_28;
  }
  if ((v47 & 1) != 0)
  {
LABEL_28:
    v129 = v13;
    v77 = v37;
    v78 = v42;
    v79 = *(double *)&v36;
    v80 = v36;
    v81 = *(_QWORD *)&v137;
    v82 = v45;
    v83 = v46;
    v84 = v39;
    v85 = v40;
    sub_56AC8(v77, v80, *(uint64_t *)&v137, v38, v39, v40);
    v86 = v128;
    sub_56AC8(v128, *(uint64_t *)&v79, v81, v38, v84, v85);
    sub_56AC8(v138, v78, *(uint64_t *)&v133, v82, v83, v130);
    sub_56AC8(v86, *(uint64_t *)&v79, v81, v38, v84, v85);

    v87 = v86;
    v88 = v38;

LABEL_38:
    v121 = v135;
    v122 = v136;
    sub_56B40((uint64_t)v10);
    sub_56B40((uint64_t)v129);
    sub_56AE0(v87, *(uint64_t *)&v79, v81, v88, v84, v85);
    sub_56AE0(v87, *(uint64_t *)&v79, v81, v88, v84, v85);
    v67 = v140;
    sub_54C0C(v121, v140);
    v74 = v122;
    v66 = v141;
    goto LABEL_24;
  }
  v129 = v13;
  v126 = *(double *)&v38;
  v89 = v45;
  v90 = v40;
  v91 = v39;
  v92 = sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
  v127 = *(double *)&v91;
  v123 = v92;
  v93 = v36;
  v87 = v37;
  v94 = v137;
  sub_56AC8(v37, v93, *(uint64_t *)&v137, *(uint64_t *)&v126, v91, v90);
  v96 = v138;
  v95 = *(_QWORD *)&v139;
  v97 = *(_QWORD *)&v133;
  v98 = v46;
  v99 = v130;
  sub_56AC8(v138, *(uint64_t *)&v139, *(uint64_t *)&v133, v89, v98, v130);
  sub_56AC8(v87, v93, *(uint64_t *)&v94, *(uint64_t *)&v126, *(uint64_t *)&v127, v90);
  v100 = v99;
  v125 = *(double *)&v89;
  v62 = v96;
  sub_56AC8(v96, v95, v97, v89, *(uint64_t *)&v131, v100);
  sub_56AC8(v87, v93, *(uint64_t *)&v94, *(uint64_t *)&v126, *(uint64_t *)&v127, v90);
  v101 = static NSObject.== infix(_:_:)(v87, v96);
  v79 = *(double *)&v93;
  *(double *)&v38 = v126;
  *(double *)&v84 = v127;
  if ((v101 & 1) == 0)
  {
    v88 = *(_QWORD *)&v126;

    v117 = *(_QWORD *)&v139;
    v118 = *(_QWORD *)&v133;
    v119 = *(_QWORD *)&v125;
    v120 = *(_QWORD *)&v131;

    sub_56AE0(v96, v117, v118, v119, v120, v130);
    v81 = *(_QWORD *)&v137;
    v85 = v134;
    goto LABEL_38;
  }
  v124 = v79;
  v146.origin.x = v79;
  v146.origin.y = v94;
  v146.size.width = v126;
  v146.size.height = v127;
  v147.size.height = v131;
  v147.size.width = v125;
  v147.origin.y = v133;
  v147.origin.x = v139;
  LODWORD(v123) = CGRectEqualToRect(v146, v147);
  v61 = *(double *)&v84;
  v64 = v87;
  v65 = *(_QWORD *)&v94;
  v13 = v129;
LABEL_31:
  v126 = *(double *)&v38;
  v127 = v61;
  v102 = v64;
  v103 = *(_QWORD *)&v124;

  v104 = v62;
  v105 = *(_QWORD *)&v139;
  v106 = *(_QWORD *)&v133;
  v107 = *(_QWORD *)&v125;
  v108 = v62;
  v109 = *(_QWORD *)&v131;

  sub_56AE0(v108, v105, v106, v107, v109, v130);
  sub_56B40((uint64_t)v10);
  sub_56B40((uint64_t)v13);
  v111 = *(_QWORD *)&v127;
  v110 = v128;
  v112 = *(_QWORD *)&v126;
  LOBYTE(v109) = v134;
  sub_56AE0(v128, v103, v65, *(uint64_t *)&v126, *(uint64_t *)&v127, v134);
  sub_56AE0(v110, v103, v65, v112, v111, v109);
  v67 = v140;
  sub_54C0C(v135, v140);
  v66 = v141;
  sub_54C0C(v136, v141);
  if ((v123 & 1) == 0)
    goto LABEL_25;
LABEL_32:
  v113 = type metadata accessor for FlowDestinationPageHeader(0);
  v114 = sub_89A0(&qword_3D2910, (uint64_t (*)(uint64_t))&type metadata accessor for FlowDestinationPageHeader, (uint64_t)&protocol conformance descriptor for FlowDestinationPageHeader);
  dispatch thunk of RawRepresentable.rawValue.getter(&v144, v113, v114);
  dispatch thunk of RawRepresentable.rawValue.getter(&v142, v113, v114);
  v115 = v145;
  v116 = v143;
  if (v144 == v142 && v145 == v143)
  {
    v75 = 1;
    v116 = v145;
  }
  else
  {
    v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v144, v145, v142, v143, 0);
  }
  swift_bridgeObjectRelease(v115);
  swift_bridgeObjectRelease(v116);
LABEL_26:
  sub_56B40(v66);
  sub_56B40(v67);
  return v75 & 1;
}

void destroy for PopoverPosition(id *a1)
{

}

uint64_t initializeWithCopy for PopoverPosition(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(id *)a2;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for PopoverPosition(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  void *v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(id *)a2;
  v10 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;

  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PopoverPosition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(void **)a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for PopoverPosition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PopoverPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_560E0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_560E8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PopoverPosition()
{
  return &type metadata for PopoverPosition;
}

_QWORD *initializeBufferWithCopyOfBuffer for FlowPresentationHints(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  __int128 v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = type metadata accessor for FlowPresentationContext(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((unsigned __int8 *)a2 + v8 + 40);
    if (v11 == 255)
    {
      v12 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v12;
      *(_OWORD *)(v9 + 25) = *(_OWORD *)(v10 + 25);
    }
    else
    {
      v14 = v11 & 1;
      v15 = *(_QWORD *)v10;
      v16 = *((_QWORD *)v10 + 1);
      v17 = *((_QWORD *)v10 + 2);
      v18 = *((_QWORD *)v10 + 3);
      v19 = *((_QWORD *)v10 + 4);
      v20 = *(id *)v10;
      *(_QWORD *)v9 = v15;
      *((_QWORD *)v9 + 1) = v16;
      *((_QWORD *)v9 + 2) = v17;
      *((_QWORD *)v9 + 3) = v18;
      *((_QWORD *)v9 + 4) = v19;
      v9[40] = v14;
    }
    v21 = a3[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = type metadata accessor for FlowDestinationPageHeader(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = a3[8];
    v26 = a3[9];
    v27 = *(void **)((char *)a2 + v25);
    *(_QWORD *)((char *)a1 + v25) = v27;
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    v30 = *((_QWORD *)v29 + 3);
    v31 = v27;
    if (v30)
    {
      *((_QWORD *)v28 + 3) = v30;
      (**(void (***)(char *, char *, uint64_t))(v30 - 8))(v28, v29, v30);
    }
    else
    {
      v32 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v32;
    }
  }
  return a1;
}

_QWORD *destroy for FlowPresentationHints(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v4 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[6];
  if (*(unsigned __int8 *)(v5 + 40) != 255)

  v6 = a1 + a2[7];
  v7 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  result = (_QWORD *)(a1 + a2[9]);
  if (result[3])
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_0(result);
  return result;
}

uint64_t initializeWithCopy for FlowPresentationHints(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  __int128 v30;

  v6 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(unsigned __int8 *)(a2 + v7 + 40);
  if (v10 == 255)
  {
    v11 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v11;
    *(_OWORD *)(v8 + 25) = *(_OWORD *)((char *)v9 + 25);
  }
  else
  {
    v12 = v10 & 1;
    v13 = *v9;
    v14 = v9[1];
    v15 = v9[2];
    v16 = v9[3];
    v17 = v9[4];
    v18 = (id)*v9;
    *(_QWORD *)v8 = v13;
    *(_QWORD *)(v8 + 8) = v14;
    *(_QWORD *)(v8 + 16) = v15;
    *(_QWORD *)(v8 + 24) = v16;
    *(_QWORD *)(v8 + 32) = v17;
    *(_BYTE *)(v8 + 40) = v12;
  }
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[8];
  v24 = a3[9];
  v25 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v25;
  v26 = a1 + v24;
  v27 = a2 + v24;
  v28 = *(_QWORD *)(v27 + 24);
  v29 = v25;
  if (v28)
  {
    *(_QWORD *)(v26 + 24) = v28;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v28 - 8))(v26, v27, v28);
  }
  else
  {
    v30 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v30;
  }
  return a1;
}

uint64_t assignWithCopy for FlowPresentationHints(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  int v10;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  char v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;

  v6 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(unsigned __int8 *)(a1 + v7 + 40);
  v11 = *(unsigned __int8 *)(a2 + v7 + 40);
  if (v10 == 255)
  {
    if (v11 == 255)
    {
      v14 = *v9;
      v15 = v9[1];
      *(_OWORD *)(v8 + 25) = *(__int128 *)((char *)v9 + 25);
      *(_OWORD *)v8 = v14;
      *(_OWORD *)(v8 + 16) = v15;
    }
    else
    {
      v24 = v11 & 1;
      v25 = *(void **)v9;
      v26 = *((_QWORD *)v9 + 1);
      v27 = *((_QWORD *)v9 + 2);
      v28 = *((_QWORD *)v9 + 3);
      v29 = *((_QWORD *)v9 + 4);
      v30 = v25;
      *(_QWORD *)v8 = v25;
      *(_QWORD *)(v8 + 8) = v26;
      *(_QWORD *)(v8 + 16) = v27;
      *(_QWORD *)(v8 + 24) = v28;
      *(_QWORD *)(v8 + 32) = v29;
      *(_BYTE *)(v8 + 40) = v24;
    }
  }
  else if (v11 == 255)
  {
    sub_56684((id *)v8);
    v12 = *(__int128 *)((char *)v9 + 25);
    v13 = v9[1];
    *(_OWORD *)v8 = *v9;
    *(_OWORD *)(v8 + 16) = v13;
    *(_OWORD *)(v8 + 25) = v12;
  }
  else
  {
    v16 = v11 & 1;
    v17 = *(void **)v9;
    v18 = *((_QWORD *)v9 + 1);
    v19 = *((_QWORD *)v9 + 2);
    v20 = *((_QWORD *)v9 + 3);
    v21 = *((_QWORD *)v9 + 4);
    v22 = v17;
    v23 = *(id *)v8;
    *(_QWORD *)v8 = v17;
    *(_QWORD *)(v8 + 8) = v18;
    *(_QWORD *)(v8 + 16) = v19;
    *(_QWORD *)(v8 + 24) = v20;
    *(_QWORD *)(v8 + 32) = v21;
    *(_BYTE *)(v8 + 40) = v16;

  }
  v31 = a3[7];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[8];
  v36 = *(void **)(a1 + v35);
  v37 = *(void **)(a2 + v35);
  *(_QWORD *)(a1 + v35) = v37;
  v38 = v37;

  v39 = a3[9];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(v41 + 24);
  if (!*(_QWORD *)(a1 + v39 + 24))
  {
    if (v42)
    {
      *(_QWORD *)(v40 + 24) = v42;
      (**(void (***)(uint64_t, uint64_t))(v42 - 8))(v40, v41);
      return a1;
    }
LABEL_14:
    v43 = *(_OWORD *)(v41 + 16);
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *(_OWORD *)(v40 + 16) = v43;
    return a1;
  }
  if (!v42)
  {
    __swift_destroy_boxed_opaque_existential_0((_QWORD *)v40);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_0((_QWORD *)v40, (_QWORD *)v41);
  return a1;
}

id *sub_56684(id *a1)
{

  return a1;
}

uint64_t initializeWithTake for FlowPresentationHints(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  v6 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  *(_OWORD *)((char *)v8 + 25) = *(_OWORD *)((char *)v9 + 25);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v16 = (_OWORD *)(a1 + v15);
  v17 = (_OWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  return a1;
}

uint64_t assignWithTake for FlowPresentationHints(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _OWORD *v22;
  __int128 v23;

  v6 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(unsigned __int8 *)(a1 + v7 + 40) == 255)
    goto LABEL_4;
  v10 = *(unsigned __int8 *)(v9 + 40);
  if (v10 == 255)
  {
    sub_56684((id *)v8);
LABEL_4:
    v11 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v11;
    *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 + 32);
  v13 = *(id *)v8;
  v14 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v14;
  *(_QWORD *)(v8 + 32) = v12;
  *(_BYTE *)(v8 + 40) = v10 & 1;

LABEL_6:
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);

  v21 = a3[9];
  v22 = (_OWORD *)(a1 + v21);
  if (*(_QWORD *)(a1 + v21 + 24))
    __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + v21));
  v23 = *(_OWORD *)(a2 + v21 + 16);
  *v22 = *(_OWORD *)(a2 + v21);
  v22[1] = v23;
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowPresentationHints(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_568B8);
}

uint64_t sub_568B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = type metadata accessor for FlowPresentationContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for FlowDestinationPageHeader(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowPresentationHints(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_56978);
}

uint64_t sub_56978(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for FlowPresentationContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for FlowDestinationPageHeader(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = a2;
  return result;
}

uint64_t sub_56A1C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  result = type metadata accessor for FlowPresentationContext(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_2F1F68;
    v5[2] = &unk_2F1F80;
    result = type metadata accessor for FlowDestinationPageHeader(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      v5[4] = &unk_2F1F98;
      v5[5] = &unk_2F1FB0;
      swift_initStructMetadata(a1, 256, 6, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

id sub_56AC8(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 255)
    return result;
  return result;
}

void sub_56AE0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 255)

}

uint64_t sub_56AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_56B40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FlowPresentationHints(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_56B7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_3FCFB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

double sub_56BEC()
{
  double result;

  result = 68.0;
  xmmword_3D2918 = xmmword_2F1FD0;
  qword_3D2928 = 0;
  unk_3D2930 = 0;
  byte_3D2938 = 0;
  return result;
}

double sub_56C0C()
{
  double result;

  result = 335.0;
  xmmword_3D2940 = xmmword_2F1FE0;
  qword_3D2950 = 0;
  unk_3D2958 = 0;
  byte_3D2960 = 0;
  return result;
}

__n128 sub_56C2C()
{
  __n128 result;

  __asm { FMOV            V0.2D, #1.0 }
  xmmword_3D2968 = (__int128)result;
  qword_3D2978 = 0;
  unk_3D2980 = 0;
  byte_3D2988 = 0;
  return result;
}

void sub_56C48()
{
  qword_3D2990 = 0x404D000000000000;
}

void sub_56C58()
{
  qword_3D2998 = 0x4008000000000000;
}

uint64_t sub_56C68()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  double v4;
  uint64_t result;
  double v6;

  v0 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v1 = static UITraitCollection.interfaceIdiomIsMac.getter(v0);
  if ((v1 & 1) != 0)
    v2 = 12.0;
  else
    v2 = 16.0;
  v3 = static UITraitCollection.interfaceIdiomIsMac.getter(v1);
  if ((v3 & 1) != 0)
    v4 = 12.0;
  else
    v4 = 16.0;
  result = static UITraitCollection.interfaceIdiomIsMac.getter(v3);
  qword_3D29A0 = 0;
  if ((result & 1) != 0)
    v6 = 12.0;
  else
    v6 = 16.0;
  qword_3D29A8 = *(_QWORD *)&v2;
  qword_3D29B0 = *(_QWORD *)&v4;
  qword_3D29B8 = *(_QWORD *)&v6;
  return result;
}

id sub_56CEC()
{
  __int16 v0;

  if (qword_3CF5F0 != -1)
    swift_once(&qword_3CF5F0, sub_141404);
  if (HIBYTE(word_3FC388))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3FA990 = xmmword_2F1FF0;
  byte_3FA9A0 = 1;
  qword_3FA9A8 = qword_3FC330;
  xmmword_3FA9B0 = xmmword_3FC338;
  xmmword_3FA9C0 = xmmword_3FC348;
  xmmword_3FA9D0 = xmmword_3FC358;
  xmmword_3FA9E0 = xmmword_3FC368;
  xmmword_3FA9F0 = xmmword_3FC378;
  word_3FAA00 = v0 | word_3FC388 | 0x8000;
  return sub_DDA0((void *)qword_3FC330, xmmword_3FC338, *((uint64_t *)&xmmword_3FC338 + 1), xmmword_3FC348, *((uint64_t *)&xmmword_3FC348 + 1), xmmword_3FC358, *((void **)&xmmword_3FC358 + 1), xmmword_3FC368, *((uint64_t *)&xmmword_3FC368 + 1), xmmword_3FC378, *((uint64_t *)&xmmword_3FC378 + 1), word_3FC388, SHIBYTE(word_3FC388));
}

id sub_56DB4()
{
  __int16 v0;

  if (qword_3CF5F8 != -1)
    swift_once(&qword_3CF5F8, sub_141610);
  if (HIBYTE(word_3FC3E8))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3FAA10 = xmmword_2F2000;
  byte_3FAA20 = 1;
  qword_3FAA28 = qword_3FC390;
  xmmword_3FAA30 = xmmword_3FC398;
  xmmword_3FAA40 = xmmword_3FC3A8;
  xmmword_3FAA50 = xmmword_3FC3B8;
  xmmword_3FAA60 = xmmword_3FC3C8;
  xmmword_3FAA70 = xmmword_3FC3D8;
  word_3FAA80 = v0 | word_3FC3E8 | 0x8000;
  return sub_DDA0((void *)qword_3FC390, xmmword_3FC398, *((uint64_t *)&xmmword_3FC398 + 1), xmmword_3FC3A8, *((uint64_t *)&xmmword_3FC3A8 + 1), xmmword_3FC3B8, *((void **)&xmmword_3FC3B8 + 1), xmmword_3FC3C8, *((uint64_t *)&xmmword_3FC3C8 + 1), xmmword_3FC3D8, *((uint64_t *)&xmmword_3FC3D8 + 1), word_3FC3E8, SHIBYTE(word_3FC3E8));
}

id sub_56E7C()
{
  __int16 v0;

  if (qword_3CF600 != -1)
    swift_once(&qword_3CF600, sub_14181C);
  if (HIBYTE(word_3FC448))
    v0 = 256;
  else
    v0 = 0;
  xmmword_3FAA90 = xmmword_2F2000;
  byte_3FAAA0 = 1;
  qword_3FAAA8 = qword_3FC3F0;
  xmmword_3FAAB0 = xmmword_3FC3F8;
  xmmword_3FAAC0 = xmmword_3FC408;
  xmmword_3FAAD0 = xmmword_3FC418;
  xmmword_3FAAE0 = xmmword_3FC428;
  xmmword_3FAAF0 = xmmword_3FC438;
  word_3FAB00 = v0 | word_3FC448 | 0x8000;
  return sub_DDA0((void *)qword_3FC3F0, xmmword_3FC3F8, *((uint64_t *)&xmmword_3FC3F8 + 1), xmmword_3FC408, *((uint64_t *)&xmmword_3FC408 + 1), xmmword_3FC418, *((void **)&xmmword_3FC418 + 1), xmmword_3FC428, *((uint64_t *)&xmmword_3FC428 + 1), xmmword_3FC438, *((uint64_t *)&xmmword_3FC438 + 1), word_3FC448, SHIBYTE(word_3FC448));
}

UIFontTextStyle sub_56F44()
{
  xmmword_3FAB10 = xmmword_2F2010;
  byte_3FAB20 = 1;
  qword_3FAB28 = (uint64_t)UIFontTextStyleBody;
  xmmword_3FAB30 = 0u;
  unk_3FAB40 = 0u;
  xmmword_3FAB50 = 0u;
  unk_3FAB60 = 0u;
  xmmword_3FAB70 = 0u;
  word_3FAB80 = 0;
  return UIFontTextStyleBody;
}

char *sub_56F88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell____lazy_storage___thumbnailArtworkView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell____lazy_storage___thumbnailArtworkView);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell____lazy_storage___thumbnailArtworkView);
  }
  else
  {
    v4 = sub_EC26C();
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_56FF8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell____lazy_storage___hStackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell____lazy_storage___hStackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell____lazy_storage___hStackView);
  }
  else
  {
    v4 = sub_57054();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_57054()
{
  id v0;
  uint64_t v1;
  char v2;
  double v3;
  uint64_t v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v2 = static UITraitCollection.interfaceIdiomIsMac.getter(v1);
  v3 = 16.0;
  if ((v2 & 1) != 0)
    v3 = 12.0;
  objc_msgSend(v0, "setSpacing:", v3);
  objc_msgSend(v0, "setAxis:", 0);
  v4 = qword_3CF180;
  v5 = v0;
  if (v4 != -1)
    swift_once(&qword_3CF180, sub_56C68);
  objc_msgSend(v5, "setLayoutMargins:", *(double *)&qword_3D29A0, *(double *)&qword_3D29A8, *(double *)&qword_3D29B0, *(double *)&qword_3D29B8);

  objc_msgSend(v5, "setDistribution:", 0);
  objc_msgSend(v5, "setAlignment:", 4);
  objc_msgSend(v5, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v5;
}

uint64_t sub_57194(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  CGFloat *v10;
  double left;
  double bottom;
  double right;
  id v14;
  char *v15;
  id v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  char *v22;
  id v23;
  char *v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  char *v40;
  id v41;
  char *v42;
  uint64_t v43;
  void *v44;
  uint64_t result;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  void *v60;
  void *v61;
  Swift::OpaquePointer v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  Class isa;
  id v94;
  uint64_t v95;
  objc_class *v96;
  Class v97;
  objc_super v98;
  void *v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int16 v106;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_labelLayout] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_lineCountLayoutGroup] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_thumbnailArtworkContainer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell____lazy_storage___thumbnailArtworkView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell____lazy_storage___hStackView] = 0;
  v10 = (CGFloat *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_separatorInset];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *v10 = UIEdgeInsetsZero.top;
  v10[1] = left;
  v10[2] = bottom;
  v10[3] = right;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_isHovering] = 0;
  v14 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0));
  v15 = v4;
  v16 = objc_msgSend(v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_E8C48(1, 5.0);
  v17 = qword_3CF308;
  v18 = (char *)v16;
  if (v17 != -1)
    swift_once(&qword_3CF308, sub_E9BE0);
  v19 = (void *)qword_3FAD18;
  v20 = *(void **)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3FAD18;
  v21 = v19;

  sub_A2A14();
  *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0x3FE0000000000000;
  v22 = v18;
  sub_A2A14();

  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_mainArtworkView] = v22;
  v99 = &dword_0 + 1;
  v100 = 0u;
  v101 = 0u;
  v102 = 0u;
  v103 = 0u;
  v104 = 0u;
  v105 = 0u;
  v106 = 0;
  v96 = (objc_class *)type metadata accessor for ArtworkContainer(0);
  objc_allocWithZone(v96);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_mainArtworkContainer] = sub_2633EC(6, v22, (uint64_t *)&v99);
  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF5F0 != -1)
    swift_once(&qword_3CF5F0, sub_141404);
  v99 = (void *)qword_3FC330;
  v100 = xmmword_3FC338;
  v101 = xmmword_3FC348;
  v102 = xmmword_3FC358;
  v103 = xmmword_3FC368;
  v104 = xmmword_3FC378;
  LOWORD(v105) = word_3FC388;
  sub_DDA0((void *)qword_3FC330, xmmword_3FC338, *((uint64_t *)&xmmword_3FC338 + 1), xmmword_3FC348, *((uint64_t *)&xmmword_3FC348 + 1), xmmword_3FC358, *((void **)&xmmword_3FC358 + 1), xmmword_3FC368, *((uint64_t *)&xmmword_3FC368 + 1), xmmword_3FC378, *((uint64_t *)&xmmword_3FC378 + 1), word_3FC388, SHIBYTE(word_3FC388));
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_captionLabel] = sub_A96AC((uint64_t)&v99, 1, 0, 1);
  if (qword_3CF5F8 != -1)
    swift_once(&qword_3CF5F8, sub_141610);
  v99 = (void *)qword_3FC390;
  v100 = xmmword_3FC398;
  v101 = xmmword_3FC3A8;
  v102 = xmmword_3FC3B8;
  v103 = xmmword_3FC3C8;
  v104 = xmmword_3FC3D8;
  LOWORD(v105) = word_3FC3E8;
  sub_DDA0((void *)qword_3FC390, xmmword_3FC398, *((uint64_t *)&xmmword_3FC398 + 1), xmmword_3FC3A8, *((uint64_t *)&xmmword_3FC3A8 + 1), xmmword_3FC3B8, *((void **)&xmmword_3FC3B8 + 1), xmmword_3FC3C8, *((uint64_t *)&xmmword_3FC3C8 + 1), xmmword_3FC3D8, *((uint64_t *)&xmmword_3FC3D8 + 1), word_3FC3E8, SHIBYTE(word_3FC3E8));
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_titleLabel] = sub_A96AC((uint64_t)&v99, 1, 0, 1);
  if (qword_3CF600 != -1)
    swift_once(&qword_3CF600, sub_14181C);
  v99 = (void *)qword_3FC3F0;
  v100 = xmmword_3FC3F8;
  v101 = xmmword_3FC408;
  v102 = xmmword_3FC418;
  v103 = xmmword_3FC428;
  v104 = xmmword_3FC438;
  LOWORD(v105) = word_3FC448;
  sub_DDA0((void *)qword_3FC3F0, xmmword_3FC3F8, *((uint64_t *)&xmmword_3FC3F8 + 1), xmmword_3FC408, *((uint64_t *)&xmmword_3FC408 + 1), xmmword_3FC418, *((void **)&xmmword_3FC418 + 1), xmmword_3FC428, *((uint64_t *)&xmmword_3FC428 + 1), xmmword_3FC438, *((uint64_t *)&xmmword_3FC438 + 1), word_3FC448, SHIBYTE(word_3FC448));
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_subtitleLabel] = sub_A96AC((uint64_t)&v99, 1, 0, 1);
  if (qword_3CF608 != -1)
    swift_once(&qword_3CF608, sub_141A28);
  v99 = (void *)qword_3FC450;
  v100 = xmmword_3FC458;
  v101 = xmmword_3FC468;
  v102 = xmmword_3FC478;
  v103 = xmmword_3FC488;
  v104 = xmmword_3FC498;
  LOWORD(v105) = word_3FC4A8;
  sub_DDA0((void *)qword_3FC450, xmmword_3FC458, *((uint64_t *)&xmmword_3FC458 + 1), xmmword_3FC468, *((uint64_t *)&xmmword_3FC468 + 1), xmmword_3FC478, *((void **)&xmmword_3FC478 + 1), xmmword_3FC488, *((uint64_t *)&xmmword_3FC488 + 1), xmmword_3FC498, *((uint64_t *)&xmmword_3FC498 + 1), word_3FC4A8, SHIBYTE(word_3FC4A8));
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_overlayingCaptionLabel] = sub_A96AC((uint64_t)&v99, 2, 0, 1);
  v23 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_separatorView] = v23;

  v98.receiver = v15;
  v98.super_class = ObjectType;
  v24 = (char *)objc_msgSendSuper2(&v98, "initWithFrame:", a1, a2, a3, a4);
  v25 = objc_msgSend(v24, "contentView");
  objc_msgSend(v25, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_captionLabel;
  v27 = *(void **)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_captionLabel];
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v27;
  v30 = objc_msgSend(v28, "secondaryLabelColor");
  objc_msgSend(v29, "setTextColor:", v30);

  v31 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_subtitleLabel;
  v32 = *(id *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_subtitleLabel];
  v33 = objc_msgSend(v28, "secondaryLabelColor");
  objc_msgSend(v32, "setTextColor:", v33);

  v34 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_separatorView;
  v35 = qword_3CF090;
  v36 = *(id *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_separatorView];
  if (v35 != -1)
    swift_once(&qword_3CF090, sub_1EB44);
  objc_msgSend(v36, "setBackgroundColor:", qword_3FA918);

  v37 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_overlayingCaptionLabel;
  v38 = *(id *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_overlayingCaptionLabel];
  v39 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v38, "setTextColor:", v39);

  v95 = v37;
  objc_msgSend(*(id *)&v24[v37], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v40 = sub_56F88();
  v99 = &dword_0 + 1;
  v100 = 0u;
  v101 = 0u;
  v102 = 0u;
  v103 = 0u;
  v104 = 0u;
  v105 = 0u;
  v106 = 0;
  v41 = objc_allocWithZone(v96);
  v42 = sub_2633EC(4, v40, (uint64_t *)&v99);
  v43 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_thumbnailArtworkContainer;
  v44 = *(void **)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_thumbnailArtworkContainer];
  *(_QWORD *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_thumbnailArtworkContainer] = v42;

  result = *(_QWORD *)&v24[v43];
  if (!result)
  {
    __break(1u);
    goto LABEL_23;
  }
  objc_msgSend((id)result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v46 = *(void **)&v24[v34];
  v47 = *(void **)&v24[v26];
  v48 = *(void **)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_titleLabel];
  v97 = (Class)v34;
  v49 = *(void **)&v24[v31];
  v50 = *(void **)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_mainArtworkContainer];
  v51 = v46;
  v52 = v47;
  v53 = v48;
  v54 = v49;
  v55 = v50;
  v56 = sub_56FF8();
  v57 = objc_msgSend(v24, "contentView");
  objc_msgSend(v57, "addSubview:", v51);
  objc_msgSend(v57, "addSubview:", v52);
  objc_msgSend(v57, "addSubview:", v53);
  objc_msgSend(v57, "addSubview:", v54);
  objc_msgSend(v57, "addSubview:", v55);
  objc_msgSend(v57, "addSubview:", v56);

  objc_msgSend(*(id *)((char *)v97 + (_QWORD)v24), "removeFromSuperview");
  v58 = sub_56FF8();
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  result = swift_allocObject(v59, 48, 7);
  *(_OWORD *)(result + 16) = xmmword_2EFC90;
  v60 = *(void **)&v24[v95];
  *(_QWORD *)(result + 32) = v60;
  v61 = *(void **)&v24[v43];
  if (!v61)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *(_QWORD *)(result + 40) = v61;
  v99 = (void *)result;
  specialized Array._endMutation()(result);
  v62._rawValue = v99;
  v63 = v60;
  v64 = v61;
  UIStackView.addArrangedSubviews(_:)(v62);

  swift_bridgeObjectRelease(v62._rawValue);
  v65 = swift_allocObject(v59, 80, 7);
  *(_OWORD *)(v65 + 16) = xmmword_2EFC70;
  v66 = sub_56FF8();
  v67 = objc_msgSend(v66, "leadingAnchor");

  v68 = objc_msgSend(v24, "contentView");
  v69 = objc_msgSend(v68, "leadingAnchor");

  v70 = objc_msgSend(v67, "constraintEqualToAnchor:", v69);
  *(_QWORD *)(v65 + 32) = v70;
  v71 = sub_56FF8();
  v72 = objc_msgSend(v71, "trailingAnchor");

  v73 = objc_msgSend(v24, "contentView");
  v74 = objc_msgSend(v73, "trailingAnchor");

  v75 = objc_msgSend(v72, "constraintEqualToAnchor:", v74);
  *(_QWORD *)(v65 + 40) = v75;
  v76 = sub_56FF8();
  v77 = objc_msgSend(v76, "bottomAnchor");

  v78 = objc_msgSend(v24, "contentView");
  v79 = objc_msgSend(v78, "bottomAnchor");

  v80 = objc_msgSend(v77, "constraintEqualToAnchor:", v79);
  *(_QWORD *)(v65 + 48) = v80;
  v81 = sub_56FF8();
  v82 = objc_msgSend(v81, "topAnchor");

  v83 = objc_msgSend(v24, "contentView");
  v84 = objc_msgSend(v83, "topAnchor");

  v85 = objc_msgSend(v82, "constraintGreaterThanOrEqualToAnchor:", v84);
  *(_QWORD *)(v65 + 56) = v85;
  result = *(_QWORD *)&v24[v43];
  if (!result)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  v86 = objc_msgSend((id)result, "widthAnchor");
  if (qword_3CF170 != -1)
    swift_once(&qword_3CF170, sub_56C48);
  v87 = objc_msgSend(v86, "constraintEqualToConstant:", *(double *)&qword_3D2990);

  *(_QWORD *)(v65 + 64) = v87;
  result = *(_QWORD *)&v24[v43];
  if (!result)
    goto LABEL_25;
  v88 = objc_msgSend((id)result, "heightAnchor");
  v89 = objc_msgSend(v88, "constraintEqualToConstant:", *(double *)&qword_3D2990);

  *(_QWORD *)(v65 + 72) = v89;
  v99 = (void *)v65;
  specialized Array._endMutation()(v90);
  v91 = (uint64_t)v99;
  v92 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v92, "activateConstraints:", isa, swift_bridgeObjectRelease(v91).n128_f64[0]);

  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.supportsPointerDevice.getter() & 1) != 0)
    sub_B10B8();
  v94 = sub_56FF8();
  objc_msgSend(v94, "setUserInteractionEnabled:", 0);

  objc_msgSend(v24, "setIsAccessibilityElement:", 1);
  objc_msgSend(v24, "setAccessibilityTraits:", UIAccessibilityTraitButton);

  return (uint64_t)v24;
}

uint64_t sub_57E50()
{
  char *v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  double MinY;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  void *v33;
  __int128 v34;
  uint64_t v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  unsigned __int16 v39;
  id v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  double v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  __int128 *v52;
  int v53;
  double v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  double Width;
  double v60;
  double v61;
  double MinX;
  CGFloat v63;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  CGFloat v72;
  CGFloat v73;
  uint64_t v74;
  char *v75;
  double rect;
  _BYTE v77[32];
  _BYTE v78[92];
  _BYTE v79[32];
  _BYTE v80[92];
  _OWORD v81[6];
  _BYTE v82[28];
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _OWORD v89[2];
  objc_super v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;

  v90.receiver = v0;
  v90.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v90, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_separatorInset + 8];
  v10 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_separatorInset + 24];
  v74 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v74) & 1) != 0)
    v11 = 1.0;
  else
    v11 = 0.5;
  v12 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_separatorView];
  v91.origin.x = v2;
  v91.origin.y = v4;
  v91.size.width = v6;
  v91.size.height = v8;
  MinY = CGRectGetMinY(v91);
  v72 = v6;
  v73 = v2;
  v92.origin.x = v2;
  v92.origin.y = v4;
  v92.size.width = v6;
  v92.size.height = v8;
  objc_msgSend(v12, "setFrame:", v9, MinY, CGRectGetWidth(v92) - v9 - v10, v11);
  v14 = objc_msgSend(v0, "contentView");
  objc_msgSend(v14, "bounds");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  objc_msgSend(v14, "layoutMargins");
  v24 = v23;
  v26 = v25;

  rect = UIEdgeInsetsInsetRect(v16, v18, v20, v22, v24, v26);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v75 = v0;
  v67 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_captionLabel];
  if (qword_3CF188 != -1)
    swift_once(&qword_3CF188, sub_56CEC);
  v69 = *((_QWORD *)&xmmword_3FA990 + 1);
  v70 = xmmword_3FA990;
  v68 = byte_3FA9A0;
  v33 = (void *)qword_3FA9A8;
  v34 = xmmword_3FA9B0;
  v35 = xmmword_3FA9C0;
  v65 = xmmword_3FA9D0;
  v66 = *((_QWORD *)&xmmword_3FA9C0 + 1);
  v36 = (void *)*((_QWORD *)&xmmword_3FA9D0 + 1);
  v37 = xmmword_3FA9E0;
  v38 = xmmword_3FA9F0;
  v39 = word_3FAA00;
  sub_1472C((id)qword_3FA9A8, xmmword_3FA9B0, *((uint64_t *)&xmmword_3FA9B0 + 1), xmmword_3FA9C0, *((uint64_t *)&xmmword_3FA9C0 + 1), xmmword_3FA9D0, *((void **)&xmmword_3FA9D0 + 1), xmmword_3FA9E0, *((uint64_t *)&xmmword_3FA9E0 + 1), xmmword_3FA9F0, *((uint64_t *)&xmmword_3FA9F0 + 1), word_3FAA00);
  v71 = v33;
  sub_1472C(v33, v34, *((uint64_t *)&v34 + 1), v35, v66, v65, v36, v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), v39);
  v40 = v67;
  v41 = sub_20F290(0, 1, 1, _swiftEmptyArrayStorage);
  v43 = v41[2];
  v42 = v41[3];
  if (v43 >= v42 >> 1)
    v41 = sub_20F290((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
  v41[2] = v43 + 1;
  v44 = &v41[16 * v43];
  v44[4] = v40;
  v44[5] = v70;
  v44[6] = v69;
  *((_BYTE *)v44 + 56) = v68;
  v44[8] = v71;
  *(_OWORD *)(v44 + 9) = v34;
  v44[11] = v35;
  v44[12] = v66;
  v44[13] = v65;
  v44[14] = v36;
  *(_OWORD *)(v44 + 15) = v37;
  *(_OWORD *)(v44 + 17) = v38;
  *((_WORD *)v44 + 76) = v39;
  *((_WORD *)v44 + 77) = 1;
  sub_14788(v71, v34, *((uint64_t *)&v34 + 1), v35, v66, v65, v36, v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), v39);
  v45 = sub_4AE3C(v0, (uint64_t)v41, 1, v73, v4, v72, v8);
  swift_bridgeObjectRelease(v41);
  v46 = qword_3CF190;
  v47 = *(id *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_titleLabel];
  if (v46 != -1)
    swift_once(&qword_3CF190, sub_56DB4);
  *(_QWORD *)v77 = v47;
  *(_OWORD *)&v77[8] = xmmword_3FAA10;
  v77[24] = byte_3FAA20;
  *(_QWORD *)v78 = qword_3FAA28;
  *(_OWORD *)&v78[8] = xmmword_3FAA30;
  *(_OWORD *)&v78[24] = xmmword_3FAA40;
  *(_OWORD *)&v78[40] = xmmword_3FAA50;
  *(_OWORD *)&v78[56] = xmmword_3FAA60;
  *(_OWORD *)&v78[72] = xmmword_3FAA70;
  *(_WORD *)&v78[88] = word_3FAA80;
  *(_WORD *)&v78[90] = 0;
  v48 = *(void **)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_subtitleLabel];
  sub_1472C((id)qword_3FAA28, xmmword_3FAA30, *((uint64_t *)&xmmword_3FAA30 + 1), xmmword_3FAA40, *((uint64_t *)&xmmword_3FAA40 + 1), xmmword_3FAA50, *((void **)&xmmword_3FAA50 + 1), xmmword_3FAA60, *((uint64_t *)&xmmword_3FAA60 + 1), xmmword_3FAA70, *((uint64_t *)&xmmword_3FAA70 + 1), word_3FAA80);
  v49 = qword_3CF198;
  v50 = v48;
  if (v49 != -1)
    swift_once(&qword_3CF198, sub_56E7C);
  *(_QWORD *)v79 = v50;
  *(_OWORD *)&v79[8] = xmmword_3FAA90;
  v79[24] = byte_3FAAA0;
  *(_QWORD *)v80 = qword_3FAAA8;
  *(_OWORD *)&v80[8] = xmmword_3FAAB0;
  *(_OWORD *)&v80[24] = xmmword_3FAAC0;
  *(_OWORD *)&v80[40] = xmmword_3FAAD0;
  *(_OWORD *)&v80[56] = xmmword_3FAAE0;
  *(_OWORD *)&v80[72] = xmmword_3FAAF0;
  *(_WORD *)&v80[88] = word_3FAB00;
  *(_WORD *)&v80[90] = 0;
  v81[4] = *(_OWORD *)&v78[32];
  v81[5] = *(_OWORD *)&v78[48];
  *(_OWORD *)v82 = *(_OWORD *)&v78[64];
  *(_OWORD *)&v82[12] = *(_OWORD *)&v78[76];
  v81[0] = *(_OWORD *)v77;
  v81[1] = *(_OWORD *)&v77[16];
  v81[2] = *(_OWORD *)v78;
  v81[3] = *(_OWORD *)&v78[16];
  v84 = *(_OWORD *)&v79[16];
  v85 = *(_OWORD *)v80;
  v83 = *(_OWORD *)v79;
  *(_OWORD *)((char *)v89 + 12) = *(_OWORD *)&v80[76];
  v88 = *(_OWORD *)&v80[48];
  v89[0] = *(_OWORD *)&v80[64];
  v86 = *(_OWORD *)&v80[16];
  v87 = *(_OWORD *)&v80[32];
  sub_1472C((id)qword_3FAAA8, xmmword_3FAAB0, *((uint64_t *)&xmmword_3FAAB0 + 1), xmmword_3FAAC0, *((uint64_t *)&xmmword_3FAAC0 + 1), xmmword_3FAAD0, *((void **)&xmmword_3FAAD0 + 1), xmmword_3FAAE0, *((uint64_t *)&xmmword_3FAAE0 + 1), xmmword_3FAAF0, *((uint64_t *)&xmmword_3FAAF0 + 1), word_3FAB00);
  sub_14684((uint64_t)v77);
  sub_14684((uint64_t)v79);
  sub_FB1E8(v75, v73, v45, v72, v8 - v45);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v51) & 1) != 0)
  {
    if (qword_3CF158 != -1)
      swift_once(&qword_3CF158, sub_56BEC);
    v52 = &xmmword_3D2918;
  }
  else
  {
    if (qword_3CF160 != -1)
      swift_once(&qword_3CF160, sub_56C0C);
    v52 = &xmmword_3D2940;
  }
  v53 = *((unsigned __int8 *)v52 + 32);
  v54 = *((double *)v52 + 2);
  v55 = *((double *)v52 + 3);
  v56 = *(double *)v52;
  v57 = *((double *)v52 + 1);
  v93.origin.x = rect;
  v93.origin.y = v28;
  v93.size.width = v30;
  v93.size.height = v32;
  Width = CGRectGetWidth(v93);
  if (v53 == 1 && (static UITraitCollection.interfaceIdiomIsMac.getter(v58) & 1) == 0)
  {
    v56 = v54;
    v57 = v55;
  }
  v60 = v57 / v56;
  if (v56 == 0.0)
    v60 = 0.0;
  v61 = Width * v60;
  v94.origin.x = rect;
  v94.origin.y = v28;
  v94.size.width = v30;
  v94.size.height = v32;
  MinX = CGRectGetMinX(v94);
  v95.origin.x = rect;
  v95.origin.y = v28;
  v95.size.width = v30;
  v95.size.height = v32;
  v63 = CGRectGetMaxY(v95) - v61;
  v96.origin.x = rect;
  v96.origin.y = v28;
  v96.size.width = v30;
  v96.size.height = v32;
  objc_msgSend(*(id *)&v75[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_mainArtworkContainer], "setFrame:", MinX, v63, CGRectGetWidth(v96), v61);
  sub_59D78((uint64_t)v81);
  sub_147CC((uint64_t)v79);
  return sub_147CC((uint64_t)v77);
}

uint64_t type metadata accessor for ShowcaseCollectionViewCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell);
}

id sub_586F0(char a1)
{
  _QWORD *v1;
  double v2;

  v2 = 1.0;
  if ((a1 & 1) != 0)
    v2 = 0.0;
  return objc_msgSend(*(id *)(*v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_separatorView), "setAlpha:", v2);
}

uint64_t sub_58720@<X0>(uint64_t a1@<X8>)
{
  return sub_58748((unsigned int *)&enum case for ContextMenuPreviewMargins.provide(_:), (uint64_t (*)(_QWORD))&type metadata accessor for ContextMenuPreviewMargins, a1);
}

uint64_t sub_58734@<X0>(uint64_t a1@<X8>)
{
  return sub_58748((unsigned int *)&enum case for ContextMenuPreviewBackgroundColor.provide(_:), (uint64_t (*)(_QWORD))&type metadata accessor for ContextMenuPreviewBackgroundColor, a1);
}

uint64_t sub_58748@<X0>(unsigned int *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a3, v4, v5);
}

void sub_58784(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_objectGraph) = a1;
  swift_release(v3);
  swift_retain(a1);
  sub_262730(v4);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_thumbnailArtworkContainer);
  if (v5)
  {
    v6 = v5;
    sub_262730(a1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_58810()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  NSString v6;
  void *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  NSString v11;
  void *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSString v20;
  _BYTE *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  double (**v33)(void *);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  double (**v42)(void *);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  double v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  double v51;
  double v52;
  id v53;
  double v54;
  double v55;
  double v56;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_captionLabel];
  Showcase.displayCaption.getter();
  if (v3)
  {
    v5 = v3;
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v2, "setText:", v6, v4);

  v7 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_titleLabel];
  Showcase.title.getter();
  if (v8)
  {
    v10 = v8;
    v11 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v9 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v7, "setText:", v11, v9);

  v12 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_subtitleLabel];
  Showcase.subtitle.getter();
  if (v13)
  {
    v15 = v13;
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v12, "setText:", v16, v14);

  Showcase.overlayingCaption.getter();
  v18 = v17;
  if (v17)
  {
    v19 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_overlayingCaptionLabel];
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v19, "setText:", v20, swift_bridgeObjectRelease(v18).n128_f64[0]);

  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_overlayingCaptionLabel], "setText:", 0);
  }
  v21 = *(_BYTE **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_mainArtworkContainer];
  v22 = *(void **)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_legibilityGradientView];
  if (v22)
    objc_msgSend(v22, "setHidden:", v18 == 0);
  v23 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v23) & 1) == 0 || (v24 = Showcase.playAction.getter()) == 0)
  {
    v37 = *(void **)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton];
    if (v37)
      objc_msgSend(v37, "setHidden:", 1);
    goto LABEL_32;
  }
  v25 = v24;
  result = Showcase.hasThumbnailArtwork.getter();
  if ((result & 1) == 0)
  {
    v38 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction;
    v39 = *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction];
    *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction] = v25;
    swift_retain_n(v25, 3);
    swift_release(v39);
    v40 = *(char **)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton];
    if (v40)
    {
      v41 = swift_allocObject(&unk_37CAF8, 24, 7);
      swift_unknownObjectWeakInit(v41 + 16, v21);
      v42 = (double (**)(void *))&v40[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
      v43 = *(_QWORD *)&v40[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
      v44 = *(_QWORD *)&v40[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8];
      *v42 = sub_59D70;
      v42[1] = (double (*)(void *))v41;
      v45 = v40;
      sub_1D618(v43, v44);
      objc_msgSend(v45, "setHidden:", *(_QWORD *)&v21[v38] == 0);
      swift_release_n(v25, 2);

    }
    else
    {
      swift_release_n(v25, 2);
    }
    v46 = v21[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style];
    objc_msgSend(v21, "bounds");
    sub_262AE8(v46, v47, v48, v49, v50);
    v52 = v51;
    v53 = sub_56FF8();
    objc_msgSend(v53, "layoutMargins");
    objc_msgSend(v53, "setLayoutMargins:", v54, v55, v56, v52 + 16.0);
    goto LABEL_31;
  }
  v27 = *(char **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_thumbnailArtworkContainer];
  if (v27)
  {
    v28 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction;
    v29 = *(_QWORD *)&v27[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction];
    *(_QWORD *)&v27[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction] = v25;
    swift_retain_n(v25, 3);
    v30 = v27;
    swift_release(v29);
    v31 = *(char **)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playButton];
    if (v31)
    {
      v32 = swift_allocObject(&unk_37CAF8, 24, 7);
      swift_unknownObjectWeakInit(v32 + 16, v30);
      v33 = (double (**)(void *))&v31[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
      v34 = *(_QWORD *)&v31[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
      v35 = *(_QWORD *)&v31[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8];
      *v33 = sub_59D70;
      v33[1] = (double (*)(void *))v32;
      v36 = v31;
      sub_1D618(v34, v35);
      objc_msgSend(v36, "setHidden:", *(_QWORD *)&v27[v28] == 0);

      swift_release_n(v25, 2);
    }
    else
    {

      swift_release_n(v25, 2);
    }
    v53 = sub_56FF8();
    if (qword_3CF180 != -1)
      swift_once(&qword_3CF180, sub_56C68);
    objc_msgSend(v53, "setLayoutMargins:", *(double *)&qword_3D29A0, *(double *)&qword_3D29A8, *(double *)&qword_3D29B0, *(double *)&qword_3D29B8);
LABEL_31:

    swift_release(v25);
LABEL_32:
    sub_58CC0();
    return (uint64_t)objc_msgSend(v1, "setNeedsLayout");
  }
  __break(1u);
  return result;
}

void sub_58CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  void *v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - v5;
  v7 = type metadata accessor for ArtworkModel(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v20 - v13;
  Showcase.artwork.getter(v12);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    sub_44C28((uint64_t)v6);
  }
  else
  {
    sub_2376C((uint64_t)v6, (uint64_t)v14);
    sub_59554(*(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_mainArtworkView), (uint64_t)v14, 1);
    v16 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_thumbnailArtworkContainer);
    if (v16)
    {
      v17 = v16;
      objc_msgSend(v17, "setHidden:", (Showcase.hasThumbnailArtwork.getter() & 1) == 0);

      v18 = sub_56FF8();
      objc_msgSend(v18, "setUserInteractionEnabled:", Showcase.hasThumbnailArtwork.getter() & 1);

      Showcase.thumbnailArtwork.getter();
      if (v15(v3, 1, v7) == 1)
      {
        sub_44C28((uint64_t)v3);
      }
      else
      {
        sub_2376C((uint64_t)v3, (uint64_t)v10);
        v19 = sub_56F88();
        sub_59554(v19, (uint64_t)v10, 0);

        sub_239C0((uint64_t)v10);
      }
      sub_239C0((uint64_t)v14);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_58ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double v4;
  double v5;
  __int128 v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int16 v11;
  double v12;
  double v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unsigned __int16 v18;
  double v19;
  double v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  unsigned __int16 v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  char v36;
  double v37;
  double v38;
  double v39;
  BOOL v40;
  double v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  unsigned __int16 v59;

  if (qword_3CF188 != -1)
    swift_once(&qword_3CF188, sub_56CEC);
  v53 = (void *)qword_3FA9A8;
  v54 = xmmword_3FA9B0;
  v55 = xmmword_3FA9C0;
  v56 = xmmword_3FA9D0;
  v57 = *(_OWORD *)&qword_3FA9E0;
  v58 = *(__int128 *)((char *)&xmmword_3FA9E8 + 8);
  v59 = word_3FAA00;
  sub_1472C((id)qword_3FA9A8, xmmword_3FA9B0, *((uint64_t *)&xmmword_3FA9B0 + 1), xmmword_3FA9C0, *((uint64_t *)&xmmword_3FA9C0 + 1), xmmword_3FA9D0, *((void **)&xmmword_3FA9D0 + 1), qword_3FA9E0, xmmword_3FA9E8, *((uint64_t *)&xmmword_3FA9E8 + 1), unk_3FA9F8, word_3FAA00);
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v52 = __swift_project_value_buffer(v3, (uint64_t)qword_3FCFB0);
  sub_1DD06C(a2, v52, 1);
  v5 = v4;
  sub_14788(v53, v54, *((uint64_t *)&v54 + 1), v55, *((uint64_t *)&v55 + 1), v56, *((void **)&v56 + 1), v57, *((uint64_t *)&v57 + 1), v58, *((uint64_t *)&v58 + 1), v59);
  if (qword_3CF190 != -1)
    swift_once(&qword_3CF190, sub_56DB4);
  v6 = xmmword_3FAA30;
  v7 = xmmword_3FAA40;
  v8 = xmmword_3FAA50;
  v9 = xmmword_3FAA68;
  v10 = *(__int128 *)((char *)&xmmword_3FAA68 + 8);
  v11 = word_3FAA80;
  v46 = (void *)*((_QWORD *)&xmmword_3FAA50 + 1);
  v49 = (void *)qword_3FAA28;
  v43 = qword_3FAA60;
  sub_1472C((id)qword_3FAA28, xmmword_3FAA30, *((uint64_t *)&xmmword_3FAA30 + 1), xmmword_3FAA40, *((uint64_t *)&xmmword_3FAA40 + 1), xmmword_3FAA50, *((void **)&xmmword_3FAA50 + 1), qword_3FAA60, xmmword_3FAA68, *((uint64_t *)&xmmword_3FAA68 + 1), unk_3FAA78, word_3FAA80);
  sub_1DD06C(a2, v52, 1);
  v13 = v12;
  sub_14788(v49, v6, *((uint64_t *)&v6 + 1), v7, *((uint64_t *)&v7 + 1), v8, v46, v43, v9, v10, *((uint64_t *)&v10 + 1), v11);
  if (qword_3CF198 != -1)
    swift_once(&qword_3CF198, sub_56E7C);
  v14 = xmmword_3FAAC0;
  v15 = xmmword_3FAAD0;
  v16 = *(_OWORD *)&qword_3FAAE0;
  v17 = *(__int128 *)((char *)&xmmword_3FAAE8 + 8);
  v18 = word_3FAB00;
  v47 = xmmword_3FAAB0;
  v50 = (void *)qword_3FAAA8;
  v44 = *((_QWORD *)&xmmword_3FAAB0 + 1);
  sub_1472C((id)qword_3FAAA8, xmmword_3FAAB0, *((uint64_t *)&xmmword_3FAAB0 + 1), xmmword_3FAAC0, *((uint64_t *)&xmmword_3FAAC0 + 1), xmmword_3FAAD0, *((void **)&xmmword_3FAAD0 + 1), qword_3FAAE0, xmmword_3FAAE8, *((uint64_t *)&xmmword_3FAAE8 + 1), unk_3FAAF8, word_3FAB00);
  sub_1DD06C(a2, v52, 1);
  v20 = v19;
  sub_14788(v50, v47, v44, v14, *((uint64_t *)&v14 + 1), v15, *((void **)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18);
  if (qword_3CF1A0 != -1)
    swift_once(&qword_3CF1A0, sub_56F44);
  v21 = xmmword_3FAB40;
  v23 = xmmword_3FAB50;
  v22 = qword_3FAB60;
  v24 = xmmword_3FAB68;
  v25 = *(__int128 *)((char *)&xmmword_3FAB68 + 8);
  v26 = word_3FAB80;
  v48 = xmmword_3FAB30;
  v51 = (void *)qword_3FAB28;
  v45 = *((_QWORD *)&xmmword_3FAB30 + 1);
  sub_1472C((id)qword_3FAB28, xmmword_3FAB30, *((uint64_t *)&xmmword_3FAB30 + 1), xmmword_3FAB40, *((uint64_t *)&xmmword_3FAB40 + 1), xmmword_3FAB50, *((void **)&xmmword_3FAB50 + 1), qword_3FAB60, xmmword_3FAB68, *((uint64_t *)&xmmword_3FAB68 + 1), unk_3FAB78, word_3FAB80);
  sub_1DD06C(a2, v52, 1);
  v28 = v27;
  sub_14788(v51, v48, v45, v21, *((uint64_t *)&v21 + 1), v23, *((void **)&v23 + 1), v22, v24, v25, *((uint64_t *)&v25 + 1), v26);
  v29 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v30 = static UITraitCollection.interfaceIdiomIsMac.getter(v29);
  if ((v30 & 1) != 0)
  {
    if (qword_3CF158 != -1)
      v30 = swift_once(&qword_3CF158, sub_56BEC);
    v31 = &xmmword_3D2918;
  }
  else
  {
    if (qword_3CF160 != -1)
      v30 = swift_once(&qword_3CF160, sub_56C0C);
    v31 = &xmmword_3D2940;
  }
  if (*((_BYTE *)v31 + 32) == 1)
  {
    v33 = *((double *)v31 + 2);
    v32 = *((double *)v31 + 3);
    v34 = *(double *)v31;
    v35 = *((double *)v31 + 1);
    v36 = static UITraitCollection.interfaceIdiomIsMac.getter(v30);
    if ((v36 & 1) != 0)
      v37 = v34;
    else
      v37 = v33;
    if ((v36 & 1) != 0)
      v38 = v35;
    else
      v38 = v32;
  }
  else
  {
    v37 = *(double *)v31;
    v38 = *((double *)v31 + 1);
  }
  v39 = v38 / v37;
  v40 = v37 == 0.0;
  v41 = 0.0;
  if (!v40)
    v41 = v39;
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(v41, v5 + v13 + v20 + v28);
}

uint64_t sub_593DC()
{
  return sub_58810();
}

uint64_t sub_593E4()
{
  uint64_t v0;

  return static ShelfCellGridCustomizations.shouldShowSeparatorsInGrid.getter(v0);
}

uint64_t sub_593EC(uint64_t a1)
{
  uint64_t v1;

  return static ShelfCellGridCustomizations.separatorInGridLeadingOffset(presentation:)(a1, v1);
}

uint64_t sub_593F4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_objectGraph));
}

uint64_t sub_59408(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D2A88, v3, (uint64_t (*)(uint64_t))type metadata accessor for ShowcaseCollectionViewCell, (uint64_t)&unk_2F21EC);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_59460(uint64_t a1, uint64_t a2)
{
  return sub_58ED8(a1, a2);
}

void *sub_59474()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_mainArtworkContainer);
  v2 = v1;
  return v1;
}

uint64_t sub_594A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D2A88, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowcaseCollectionViewCell, (uint64_t)&unk_2F21EC);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_594D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for ShelfArtworkPosition.bottom(_:);
  v3 = type metadata accessor for ShelfArtworkPosition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void sub_5951C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = UIEdgeInsets.init(edges:inset:)(1, 10.0);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = 1;
}

void sub_59554(char *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  char v67;

  v58 = a3;
  v6 = type metadata accessor for Logger(0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v9);
  v63 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkModel(0);
  __chkstk_darwin(v11);
  v62 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkRequest(0);
  v57 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CropCode(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v3;
  v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_objectGraph);
  if (v20)
  {
    v55 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_objectGraph);
    v56 = v13;
    v21 = a1;
    v22 = a2;
    swift_retain(v20);
    ArtworkCrop.cropCode.getter(v23);
    if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v19, v16) == enum case for CropCode.boundingBox(_:))
    {
      v24 = 5;
    }
    else
    {
      v25 = ArtworkCrop.preferredContentMode.getter();
      v24 = ContentMode.viewContentMode.getter(v25);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
    v26 = v58;
    v27 = v22;
    if ((v58 & 1) != 0)
    {
      v28 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
      v29 = v21;
      if ((static UITraitCollection.interfaceIdiomIsMac.getter(v28) & 1) != 0)
      {
        v30 = v57;
        if (qword_3CF158 != -1)
          swift_once(&qword_3CF158, sub_56BEC);
        v31 = &xmmword_3D2918;
      }
      else
      {
        v30 = v57;
        if (qword_3CF160 != -1)
          swift_once(&qword_3CF160, sub_56C0C);
        v31 = &xmmword_3D2940;
      }
      v32 = v30;
    }
    else
    {
      v29 = v21;
      if (qword_3CF168 != -1)
        swift_once(&qword_3CF168, sub_56C2C);
      v31 = &xmmword_3D2968;
      v32 = v57;
    }
    v33 = *((_BYTE *)v31 + 32);
    v35 = *((_QWORD *)v31 + 2);
    v34 = *((_QWORD *)v31 + 3);
    v64 = *v31;
    v65 = v35;
    v66 = v34;
    v67 = v33;
    v36 = sub_599D4((uint64_t)&v64, v26 & 1);
    v38 = v37;
    sub_E7A0(v27, v36, v37);
    objc_msgSend(v29, "setContentMode:", v24);
    v39 = v62;
    sub_27E84(v27, v62);
    v40 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v41 = v63;
    v42 = v40(v63, 1, 1, v16);
    v43 = static Logger.artwork.getter(v42);
    v44 = static os_log_type_t.info.getter(v43);
    SignpostAndLogTrace(domain:level:)(&v64, v8, v44);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v61);
    v45 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v45, "scale");
    v47 = v46;

    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v39, v24, 0, v41, 0, _swiftEmptyArrayStorage, &v64, v36, v38, v47);
    v48 = type metadata accessor for ArtworkView(0);
    v49 = sub_239FC((unint64_t *)&qword_3D22B8, 255, type metadata accessor for ArtworkView, (uint64_t)&unk_2F56E0);
    v50 = v55;
    ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v15, v55, 0, v48, v49);
    v51 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v15, v56);
    v52 = ArtworkModel.size.getter(v51);
    v53 = &v29[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
    *(double *)v53 = v52;
    *((_QWORD *)v53 + 1) = v54;
    objc_msgSend(v29, "setNeedsLayout");
    swift_release(v50);
  }
}

double sub_599D4(uint64_t a1, char a2)
{
  void *v2;
  int v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v21;
  uint64_t v22;
  double v23;
  CGRect v25;
  CGRect v26;

  if ((a2 & 1) != 0)
  {
    v3 = *(unsigned __int8 *)(a1 + 32);
    v4 = objc_msgSend(v2, "contentView");
    objc_msgSend(v4, "bounds");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    objc_msgSend(v4, "layoutMargins");
    v14 = v13;
    v16 = v15;

    v25.origin.x = UIEdgeInsetsInsetRect(v6, v8, v10, v12, v14, v16);
    x = v25.origin.x;
    y = v25.origin.y;
    width = v25.size.width;
    height = v25.size.height;
    v21 = CGRectGetWidth(v25);
    v26.origin.x = x;
    v26.origin.y = y;
    v26.size.width = width;
    v26.size.height = height;
    CGRectGetWidth(v26);
    if (v3 == 1)
    {
      v22 = sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
      static UITraitCollection.interfaceIdiomIsMac.getter(v22);
    }
  }
  else
  {
    if (qword_3CF170 != -1)
      swift_once(&qword_3CF170, sub_56C48);
    v23 = *(double *)&qword_3D2990;
    if (qword_3CF178 != -1)
      swift_once(&qword_3CF178, sub_56C58);
    return v23 * *(double *)&qword_3D2998;
  }
  return v21;
}

id sub_59BB8()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_mainArtworkContainer));
}

uint64_t sub_59BC8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_isHovering);
}

void sub_59BD8(char a1)
{
  uint64_t v1;
  void *v2;
  id v4;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_isHovering) = a1;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_thumbnailArtworkContainer);
  if (v2)
  {
    v4 = v2;
    sub_2624F4(a1 & 1, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_59C6C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D2A60, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowcaseCollectionViewCell, (uint64_t)&unk_2F208C);
}

uint64_t sub_59C98(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D2A68, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowcaseCollectionViewCell, (uint64_t)&unk_2F2114);
}

uint64_t sub_59CC4(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D2A70, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowcaseCollectionViewCell, (uint64_t)&unk_2F20EC);
}

uint64_t sub_59CF0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D2A78, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowcaseCollectionViewCell, (uint64_t)&unk_2F2144);
}

uint64_t sub_59D1C()
{
  return sub_239FC(&qword_3D2A80, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Showcase, (uint64_t)&protocol conformance descriptor for Showcase);
}

uint64_t sub_59D4C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_59D70(void *a1)
{
  uint64_t v1;

  return sub_263E84(a1, v1);
}

uint64_t sub_59D78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  uint64_t v9;
  unsigned __int16 v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(void **)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v12 = *(_OWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_WORD *)(a1 + 120);
  v17 = *(void **)(a1 + 128);
  v24 = *(_QWORD *)(a1 + 168);
  v25 = *(void **)(a1 + 160);
  v22 = *(_QWORD *)(a1 + 184);
  v23 = *(_QWORD *)(a1 + 176);
  v20 = *(_QWORD *)(a1 + 200);
  v21 = *(_QWORD *)(a1 + 192);
  v18 = *(_QWORD *)(a1 + 216);
  v19 = *(void **)(a1 + 208);
  v13 = *(_OWORD *)(a1 + 224);
  v9 = *(_QWORD *)(a1 + 240);
  v10 = *(_WORD *)(a1 + 248);

  sub_14788(v16, v15, v14, v2, v3, v4, v5, v6, v12, *((uint64_t *)&v12 + 1), v7, v8);
  sub_14788(v25, v24, v23, v22, v21, v20, v19, v18, v13, *((uint64_t *)&v13 + 1), v9, v10);
  return a1;
}

void sub_59E98()
{
  _BYTE *v0;
  _OWORD *v1;
  __int128 v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_labelLayout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_lineCountLayoutGroup] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_thumbnailArtworkContainer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell____lazy_storage___thumbnailArtworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell____lazy_storage___hStackView] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_separatorInset];
  v2 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *v1 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v1[1] = v2;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_isHovering] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ShowcaseCollectionViewCell.swift", 56, 2, 172, 0);
  __break(1u);
}

uint64_t dispatch thunk of UberCell.offsetChanged(inContainer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_59F8C(uint64_t a1)
{
  return sub_59FB4(a1, qword_3D2A90, (uint64_t (*)(void))&static Glyph.HeaderButtons.favorite.getter);
}

uint64_t sub_59FA0(uint64_t a1)
{
  return sub_59FB4(a1, qword_3D2AA8, (uint64_t (*)(void))&static Glyph.HeaderButtons.favorited.getter);
}

uint64_t sub_59FB4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5;

  v5 = type metadata accessor for Glyph(0);
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  return a3();
}

id sub_5A004(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  __n128 v32;
  id v33;
  NSString v34;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  __int128 v39[2];

  v37 = a3 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v6);
  v8 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Glyph(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v36[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_adamID] = a1;
  v14 = type metadata accessor for InterestRepository(0, v11);
  v15 = v3;
  BaseObjectGraph.inject<A>(_:)(v39, v14, v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_interestRepository] = *(_QWORD *)&v39[0];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2B20);
  BaseObjectGraph.inject<A>(_:)(v39, v16, v16);
  sub_1B738(v39, (uint64_t)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_headerButtonTipProvider]);
  v17 = type metadata accessor for MetricsController(0);
  BaseObjectGraph.inject<A>(_:)(v39, v17, v17);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_metricsController] = *(_QWORD *)&v39[0];
  v18 = type metadata accessor for InterestStateController(0);
  BaseObjectGraph.inject<A>(_:)(v39, v18, v18);
  v38 = *(_QWORD *)&v39[0];
  v19 = InterestStateController.stateMachine(for:)(a1);
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_stateMachine] = v19;
  v20 = swift_retain(v19);
  v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_currentState] = InterestStateMachine.currentState.getter(v20);

  if (qword_3CF1A8 != -1)
    swift_once(&qword_3CF1A8, sub_59F8C);
  v21 = __swift_project_value_buffer(v9, (uint64_t)qword_3D2A90);
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
  v22(v13, v21, v9);
  v23 = type metadata accessor for Glyph.Color(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v13, (uint64_t)v8, 2, 0, v37, 0.0, 0.0, 0.0, 0.0);
  v25 = v24;
  if (*((_BYTE *)v24 + OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_currentState) == 2)
  {
    v26 = qword_3CF1B0;
    v27 = v24;
    if (v26 != -1)
      swift_once(&qword_3CF1B0, sub_59FA0);
    v28 = __swift_project_value_buffer(v9, (uint64_t)qword_3D2AA8);
    v22(v13, v28, v9);
  }
  else
  {
    v22(v13, v21, v9);
    v29 = v25;
  }
  sub_1E2B60(v13);
  v30 = swift_allocObject(&unk_37CC60, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, v25);
  v31 = v25;
  v32 = swift_retain(v30);
  InterestStateMachine.addStateTransitionObserver(_:action:)(v31, sub_5ADE4, v30, v32);

  swift_release_n(v30, 2);
  objc_msgSend(v31, "addTarget:action:forControlEvents:", v31, "primaryActionTriggered", 64);
  v33 = v31;
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setAccessibilityIdentifier:", v34);
  swift_release(v38);
  swift_release(v19);

  swift_release(a2);
  return v33;
}

void sub_5A3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  __n128 v8;
  _BYTE *v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  _BYTE v14[24];

  v3 = type metadata accessor for Glyph(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (_BYTE *)Strong;
    v10 = InterestStateMachine.currentState.getter(v8);
    v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_currentState] = v10;
    if (v10 == 2)
    {
      if (qword_3CF1B0 != -1)
        swift_once(&qword_3CF1B0, sub_59FA0);
      v11 = qword_3D2AA8;
    }
    else
    {
      if (qword_3CF1A8 != -1)
        swift_once(&qword_3CF1A8, sub_59F8C);
      v11 = qword_3D2A90;
    }
    v12 = __swift_project_value_buffer(v3, (uint64_t)v11);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v12, v3);
    sub_1E2B60(v6);

  }
}

void sub_5A544()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - v6;
  static Logger.interests.getter(v8);
  v9 = v0;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = &unk_3FA000;
  if (os_log_type_enabled(v10, v11))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v24 = v4;
    v15 = v14;
    *(_DWORD *)v13 = 136315394;
    v26 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_adamID];
    v27 = v14;
    v16 = sub_5AE80();
    v25 = v1;
    v17 = BinaryInteger.description.getter(&type metadata for UInt64, v16);
    v19 = v18;
    v26 = sub_37E78(v17, v18, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);

    v20 = swift_bridgeObjectRelease(v19);
    *(_WORD *)(v13 + 12) = 2080;
    v21 = InterestState.rawValue.getter(v9[OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_currentState], v20);
    v23 = v22;
    v26 = sub_37E78(v21, v22, &v27);
    v1 = v25;
    v12 = &unk_3FA000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);

    swift_bridgeObjectRelease(v23);
    _os_log_impl(&dword_0, v10, v11, "User tapped on the favorite button for interest with adamID: %s. The current state of the interest when the user tapped: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  __asm { BR              X10 }
}

uint64_t sub_5A79C()
{
  uint64_t v0;

  return ((uint64_t (*)(_QWORD))InterestRepository.favoriteInterest(forAdamID:))(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_adamID));
}

uint64_t sub_5AAC8()
{
  uint64_t v0;
  int v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t countAndFlagsBits;
  unint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_currentState);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v1 == 2)
  {
    v9 = 0xE000000000000000;
    v3 = 0x8000000000309F70;
    v4 = 0xD00000000000001FLL;
  }
  else
  {
    v4 = 0xD000000000000020;
    v9 = 0xE000000000000000;
    v3 = 0x8000000000309F40;
  }
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v6 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, (NSBundle)v2, v5, *(Swift::String *)(&v9 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_5ABAC(void *a1, uint64_t a2, NSString a3, SEL *a4)
{
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(a1);
  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v9 = v8;
    v10 = a1;
    a3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v11 = a1;
  }
  v12.receiver = a1;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, *a4, a3);

}

void sub_5AC44()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.FavoriteNavButton", 41, "init(frame:glyph:color:style:layout:autolayoutMode:)", 52, 0);
  __break(1u);
}

double sub_5AC70()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_interestRepository));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_headerButtonTipProvider));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_metricsController));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0
                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews17FavoriteNavButton_stateMachine)).n128_u64[0];
  return result;
}

uint64_t sub_5AD14()
{
  return type metadata accessor for FavoriteNavButton(0);
}

uint64_t type metadata accessor for FavoriteNavButton(uint64_t a1)
{
  uint64_t result;

  result = qword_3D2B10;
  if (!qword_3D2B10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FavoriteNavButton);
  return result;
}

uint64_t sub_5AD58(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = "(";
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = &unk_2F2320;
  return swift_updateClassMetadata2(a1, 256, 6, v2, a1 + 880);
}

uint64_t sub_5ADC0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_5ADE4(uint64_t a1)
{
  uint64_t v1;

  sub_5A3A8(a1, v1);
}

void *sub_5ADEC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawBufferPointer.copyMemory source has too many elements", 69, 2, "Swift/UnsafeRawBufferPointer.swift", 34, 2, 487, 0);
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

unint64_t sub_5AE80()
{
  unint64_t result;

  result = qword_3D4C70;
  if (!qword_3D4C70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UInt64, &type metadata for UInt64);
    atomic_store(result, (unint64_t *)&qword_3D4C70);
  }
  return result;
}

uint64_t sub_5AEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t *v34;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3090);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3098);
  __chkstk_darwin(v38);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D30A0);
  __chkstk_darwin(v39);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D30A8);
  __chkstk_darwin(v40);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D30B0);
  __chkstk_darwin(v41);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_2F24F0);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  BaseObjectGraph.inject<A>(_:)(&v45, v16, v16);
  v36 = v45;
  sub_19C4C(v37, (uint64_t)v5, type metadata accessor for MultipleSubscriptionConfirmationView);
  v17 = &v5[*(int *)(v3 + 36)];
  *(_QWORD *)v17 = KeyPath;
  *(_OWORD *)(v17 + 8) = v36;
  v18 = swift_getKeyPath(&unk_2F2518);
  v19 = type metadata accessor for InteractionContextAction();
  v20 = swift_allocObject(v19, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_8DB3C;
  *(_QWORD *)(v20 + 24) = a1;
  sub_D184((uint64_t)v5, (uint64_t)v7, &qword_3D3090);
  v21 = (uint64_t *)&v7[*(int *)(v38 + 36)];
  *v21 = v18;
  v21[1] = v20;
  swift_retain(a1);
  sub_D1D4((uint64_t)v5, &qword_3D3090);
  v22 = swift_getKeyPath(&unk_2F2540);
  v23 = type metadata accessor for MetricsController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v45, v23, v23);
  v24 = v45;
  sub_D184((uint64_t)v7, (uint64_t)v9, &qword_3D3098);
  v25 = (uint64_t *)&v9[*(int *)(v39 + 36)];
  *v25 = v22;
  v25[1] = v24;
  sub_D1D4((uint64_t)v7, &qword_3D3098);
  v26 = swift_getKeyPath(&unk_2F2568);
  sub_D184((uint64_t)v9, (uint64_t)v11, &qword_3D30A0);
  v27 = (uint64_t *)&v11[*(int *)(v40 + 36)];
  *v27 = v26;
  v27[1] = v15;
  swift_retain(v15);
  sub_D1D4((uint64_t)v9, &qword_3D30A0);
  v28 = swift_getKeyPath(&unk_2F2598);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D30B8);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v43, v29, v29);
  if (v44)
  {
    sub_1B738(&v43, (uint64_t)&v45);
  }
  else
  {
    v46 = type metadata accessor for UniformBucketingStrategy(0);
    v47 = sub_89A0((unint64_t *)&qword_3D30C0, (uint64_t (*)(uint64_t))&type metadata accessor for UniformBucketingStrategy, (uint64_t)&protocol conformance descriptor for UniformBucketingStrategy);
    __swift_allocate_boxed_opaque_existential_0(&v45);
    static UniformBucketingStrategy.uniform3000MaxStrategy.getter();
    sub_D1D4((uint64_t)&v43, &qword_3D30C8);
  }
  v30 = (uint64_t *)&v13[*(int *)(v41 + 36)];
  sub_1D5D4((uint64_t)&v45, (uint64_t)(v30 + 1));
  *v30 = v28;
  sub_D184((uint64_t)v11, (uint64_t)v13, &qword_3D30A8);
  __swift_destroy_boxed_opaque_existential_0(&v45);
  sub_D1D4((uint64_t)v11, &qword_3D30A8);
  v31 = swift_getKeyPath(&unk_2F25C8);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 32);
  v33 = v42;
  sub_D184((uint64_t)v13, v42, &qword_3D30B0);
  v34 = (uint64_t *)(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DA8) + 36));
  *v34 = v31;
  v34[1] = Strong;
  return sub_D1D4((uint64_t)v13, &qword_3D30B0);
}

uint64_t sub_5B2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t *v34;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3178);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3180);
  __chkstk_darwin(v38);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3188);
  __chkstk_darwin(v39);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3190);
  __chkstk_darwin(v40);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3198);
  __chkstk_darwin(v41);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_2F24F0);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  BaseObjectGraph.inject<A>(_:)(&v45, v16, v16);
  v36 = v45;
  sub_19C4C(v37, (uint64_t)v5, type metadata accessor for ManageCategoriesView);
  v17 = &v5[*(int *)(v3 + 36)];
  *(_QWORD *)v17 = KeyPath;
  *(_OWORD *)(v17 + 8) = v36;
  v18 = swift_getKeyPath(&unk_2F2518);
  v19 = type metadata accessor for InteractionContextAction();
  v20 = swift_allocObject(v19, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_8DB3C;
  *(_QWORD *)(v20 + 24) = a1;
  sub_D184((uint64_t)v5, (uint64_t)v7, &qword_3D3178);
  v21 = (uint64_t *)&v7[*(int *)(v38 + 36)];
  *v21 = v18;
  v21[1] = v20;
  swift_retain(a1);
  sub_D1D4((uint64_t)v5, &qword_3D3178);
  v22 = swift_getKeyPath(&unk_2F2540);
  v23 = type metadata accessor for MetricsController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v45, v23, v23);
  v24 = v45;
  sub_D184((uint64_t)v7, (uint64_t)v9, &qword_3D3180);
  v25 = (uint64_t *)&v9[*(int *)(v39 + 36)];
  *v25 = v22;
  v25[1] = v24;
  sub_D1D4((uint64_t)v7, &qword_3D3180);
  v26 = swift_getKeyPath(&unk_2F2568);
  sub_D184((uint64_t)v9, (uint64_t)v11, &qword_3D3188);
  v27 = (uint64_t *)&v11[*(int *)(v40 + 36)];
  *v27 = v26;
  v27[1] = v15;
  swift_retain(v15);
  sub_D1D4((uint64_t)v9, &qword_3D3188);
  v28 = swift_getKeyPath(&unk_2F2598);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D30B8);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v43, v29, v29);
  if (v44)
  {
    sub_1B738(&v43, (uint64_t)&v45);
  }
  else
  {
    v46 = type metadata accessor for UniformBucketingStrategy(0);
    v47 = sub_89A0((unint64_t *)&qword_3D30C0, (uint64_t (*)(uint64_t))&type metadata accessor for UniformBucketingStrategy, (uint64_t)&protocol conformance descriptor for UniformBucketingStrategy);
    __swift_allocate_boxed_opaque_existential_0(&v45);
    static UniformBucketingStrategy.uniform3000MaxStrategy.getter();
    sub_D1D4((uint64_t)&v43, &qword_3D30C8);
  }
  v30 = (uint64_t *)&v13[*(int *)(v41 + 36)];
  sub_1D5D4((uint64_t)&v45, (uint64_t)(v30 + 1));
  *v30 = v28;
  sub_D184((uint64_t)v11, (uint64_t)v13, &qword_3D3190);
  __swift_destroy_boxed_opaque_existential_0(&v45);
  sub_D1D4((uint64_t)v11, &qword_3D3190);
  v31 = swift_getKeyPath(&unk_2F25C8);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 32);
  v33 = v42;
  sub_D184((uint64_t)v13, v42, &qword_3D3198);
  v34 = (uint64_t *)(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DA0) + 36));
  *v34 = v31;
  v34[1] = Strong;
  return sub_D1D4((uint64_t)v13, &qword_3D3198);
}

uint64_t BaseFlowController.storeDataProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D5D4(v1 + 24, a1);
}

uint64_t BaseFlowController.libraryViewControllerProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D5D4(v1 + 64, a1);
}

uint64_t BaseFlowController.libraryDataProvider.getter()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 104));
}

uint64_t sub_5B750(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  swift_beginAccess(*a2 + 120, v7, 1, 0);
  v5 = *(_QWORD *)(v4 + 120);
  *(_QWORD *)(v4 + 120) = v2;
  *(_QWORD *)(v4 + 128) = v3;
  swift_unknownObjectRetain(v2);
  return swift_unknownObjectRelease(v5);
}

uint64_t sub_5B7AC()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 120, v2, 0, 0);
  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 120));
}

uint64_t sub_5B7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 120, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 120);
  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_unknownObjectRelease(v5);
}

void *sub_5B83C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + 120, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t BaseFlowController.imageProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D5D4(v1 + 136, a1);
}

uint64_t BaseFlowController.episodeController.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D5D4(v1 + 176, a1);
}

uint64_t BaseFlowController.dependencyGraph.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 216));
}

uint64_t sub_5B8B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_metricsPipeline;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for MetricsPipeline(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_5B920(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];

  v4 = type metadata accessor for MetricsPipeline(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_metricsPipeline;
  swift_beginAccess(v8, v11, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess(v11);
}

uint64_t sub_5B9E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_metricsPipeline;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for MetricsPipeline(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_5BA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_metricsPipeline;
  swift_beginAccess(v3, v6, 33, 0);
  v4 = type metadata accessor for MetricsPipeline(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess(v6);
}

uint64_t (*sub_5BAB4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_metricsPipeline, a1, 33, 0);
  return j__swift_endAccess;
}

double sub_5BAF8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *Strong;
  double result;
  id v5;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + 16);
  v5 = objc_msgSend(Strong, "nextResponder");

  if (v5)
  {
    UIResponder.nearestFlowController.getter(a1);

  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

char *sub_5BB78(uint64_t a1, uint64_t a2, char *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for FlowDestination(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  sub_5F7EC(a1, (uint64_t *)((char *)&v34 - v15));
  sub_5FD54((uint64_t)v16, v9);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v11 + 32))(v13, v9, v10);
    v18 = sub_5BE2C((uint64_t)v13, v3, a2, a3);
    v17 = v18;
    if (v18
      && (v35 = v18,
          v19 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr),
          v20 = v17,
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D31C0),
          (swift_dynamicCast(&v36, &v35, v19, v21, 6) & 1) != 0))
    {
      if (*((_QWORD *)&v37 + 1))
      {
        sub_1B738(&v36, (uint64_t)v39);
        v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2B50);
        v23 = *(_QWORD *)(v11 + 72);
        v24 = *(unsigned __int8 *)(v11 + 80);
        v25 = (v24 + 32) & ~v24;
        v26 = swift_allocObject(v22, v25 + 2 * v23, v24 | 7);
        *(_OWORD *)(v26 + 16) = xmmword_2EFA20;
        v27 = v26 + v25;
        v28 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 16);
        v28(v27, v13, v10);
        v28(v27 + v23, (char *)a1, v10);
        v29 = v40;
        v30 = v41;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v26, v29, v30);
        v31 = *(void (**)(char *, uint64_t))(v11 + 8);
        v31(v13, v10);
        v31(v16, v10);
        __swift_destroy_boxed_opaque_existential_0(v39);
        return v17;
      }
    }
    else
    {
      v38 = 0;
      v36 = 0u;
      v37 = 0u;
    }
    v32 = *(void (**)(char *, uint64_t))(v11 + 8);
    v32(v13, v10);
    v32(v16, v10);
    sub_D1D4((uint64_t)&v36, &qword_3D2B38);
    return v17;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  sub_D1D4((uint64_t)v9, &qword_3D2B30);
  return 0;
}

char *sub_5BE2C(uint64_t a1, _QWORD *a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  char *v88;
  int v89;
  char *v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  __n128 v99;
  char v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  char *v103;
  __n128 v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  id v111;
  NSURL *v112;
  void *v113;
  void *v114;
  id v115;
  void (*v116)(char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  __n128 v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __n128 v153;
  uint64_t v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __n128 v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v176;
  uint64_t v177;
  __n128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  __n128 v191;
  uint64_t v192;
  id v193;
  uint64_t v194;
  __n128 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  __n128 v199;
  uint64_t v200;
  id v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  __n128 v205;
  uint64_t v206;
  id v207;
  char *v208;
  uint64_t v209;
  NSURL *v210;
  void *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  __n128 v217;
  id v218;
  void *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  id v223;
  void *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  __n128 v228;
  uint64_t v229;
  id v230;
  uint64_t v231;
  id v232;
  uint64_t v233;
  uint64_t v234;
  id v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  __n128 v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  __n128 v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  __n128 v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  __n128 v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  id v262;
  void *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  __n128 v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char v282;
  unsigned __int8 v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  id v287;
  uint64_t v288;
  char *v289;
  char *v290;
  char *v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  __n128 v295;
  uint64_t v296;
  id v297;
  _QWORD *v298;
  id v299;
  _QWORD *v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  __n128 v304;
  uint64_t v305;
  id v306;
  uint64_t v307;
  uint64_t v308;
  id v309;
  uint64_t v310;
  uint64_t v311;
  id v312;
  uint64_t v313;
  uint64_t v314;
  __n128 v315;
  uint64_t v316;
  id v317;
  uint64_t v318;
  __n128 v319;
  uint64_t v320;
  id v321;
  uint64_t v322;
  uint64_t v323;
  _QWORD *v324;
  uint64_t v325;
  uint64_t ObjectType;
  objc_class *v327;
  id v328;
  id v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  __n128 v333;
  uint64_t v334;
  uint64_t v335;
  id v336;
  objc_class *ObjCClassFromMetadata;
  uint64_t v338;
  uint64_t v339;
  id v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  id v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  char *v351;
  char *v352;
  char *v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  char *v370;
  char *v371;
  char *v372;
  char *v373;
  char *v374;
  char *v375;
  char *v376;
  char *v377;
  uint64_t v378;
  _QWORD *v379;
  char *v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  _QWORD *v388;
  uint64_t v389;
  objc_super v390;
  char v391[8];
  __int128 v392;
  uint64_t v393;
  uint64_t v394;
  __int128 v395;
  uint64_t v396;
  uint64_t v397;
  char v398;

  v386 = a3;
  v387 = a4;
  v388 = a2;
  v389 = a1;
  v4 = type metadata accessor for ManageCategoriesView(0);
  __chkstk_darwin(v4);
  v367 = (uint64_t)&v348 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2DA0);
  __chkstk_darwin(v6);
  v369 = (uint64_t)&v348 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v368 = (uint64_t)&v348 - v10;
  v385 = type metadata accessor for FlowOrigin(0, v9);
  v383 = *(_QWORD *)(v385 - 8);
  __chkstk_darwin(v385);
  v382 = (char *)&v348 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v384 = (char *)&v348 - v14;
  v15 = type metadata accessor for MetricsPageFields(0, v13);
  v16 = __chkstk_darwin(v15);
  v373 = (char *)&v348 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ModernStationDetailPresenter.Configuration(0, v16);
  v19 = __chkstk_darwin(v18);
  v374 = (char *)&v348 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SeeAllEpisodesPresenter.Configuration(0, v19);
  v22 = __chkstk_darwin(v21);
  v377 = (char *)&v348 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ShowListPresenter.Configuration(0, v22);
  v25 = __chkstk_darwin(v24);
  v363 = (char *)&v348 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for LibraryShowPresenter.Configuration(0, v25);
  __chkstk_darwin(v27);
  v372 = (char *)&v348 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for MultipleSubscriptionConfirmationView(0);
  __chkstk_darwin(v29);
  v364 = (uint64_t)&v348 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2DA8);
  __chkstk_darwin(v31);
  v365 = (uint64_t)&v348 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v366 = (uint64_t)&v348 - v34;
  v362 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v361 = *(_QWORD *)(v362 - 8);
  v35 = __chkstk_darwin(v362);
  v360 = (char *)&v348 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v359 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v35);
  v358 = *(_QWORD *)(v359 - 8);
  v37 = __chkstk_darwin(v359);
  v357 = (char *)&v348 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for StorePagePresenter.Configuration(0, v37);
  __chkstk_darwin(v39);
  v380 = (char *)&v348 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v378 = type metadata accessor for MetricsPipeline(0);
  v41 = __chkstk_darwin(v378);
  v379 = (uint64_t *)((char *)&v348 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = type metadata accessor for LongDescriptionPresenter.Configuration(0, v41);
  v44 = __chkstk_darwin(v43);
  v370 = (char *)&v348 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for ModernEpisodesPresenter.Configuration(0, v44);
  __chkstk_darwin(v46);
  v376 = (char *)&v348 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2DB0);
  v49 = __chkstk_darwin(v48);
  v353 = (char *)&v348 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v356 = type metadata accessor for TranscriptRequestInformation(0, v49);
  v355 = *(_QWORD *)(v356 - 8);
  v51 = __chkstk_darwin(v356);
  v354 = (char *)&v348 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for CategoryListPresenter.Configuration(0, v51);
  v54 = __chkstk_darwin(v53);
  v352 = (char *)&v348 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for ChannelListPresenter.Configuration(0, v54);
  v57 = __chkstk_darwin(v56);
  v351 = (char *)&v348 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for ChannelPresenter.Configuration(0, v57);
  v60 = __chkstk_darwin(v59);
  v375 = (char *)&v348 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for CategoryPagePresenter.Configuration(0, v60);
  __chkstk_darwin(v62);
  v350 = (char *)&v348 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for URL(0);
  v65 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v371 = (char *)&v348 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  v69 = (char *)&v348 - v68;
  __chkstk_darwin(v70);
  v72 = (char *)&v348 - v71;
  v73 = type metadata accessor for FlowDestination(0);
  v74 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v76 = (char *)&v348 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v77);
  v79 = (char *)&v348 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v80);
  v82 = (char *)&v348 - v81;
  __chkstk_darwin(v83);
  v381 = (uint64_t)&v348 - v84;
  v86 = __chkstk_darwin(v85);
  v88 = (char *)&v348 - v87;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v74 + 16))(v76, v389, v73, v86);
  v89 = (*(uint64_t (**)(char *, uint64_t))(v74 + 88))(v76, v73);
  if (v89 == enum case for FlowDestination.unknown(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v90 = &v76[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DD0) + 48)];
    v91 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
    v92 = v65;
    v349 = v65;
    v91(v72, v76, v64);
    v93 = v383;
    v95 = v384;
    v94 = v385;
    (*(void (**)(char *, char *, uint64_t))(v383 + 32))(v384, v90, v385);
    v96 = v388[27];
    v97 = (uint64_t)v69;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v69, v72, v64);
    v98 = v382;
    (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v382, enum case for FlowOrigin.external(_:), v94);
    v99 = swift_retain(v96);
    v100 = static FlowOrigin.== infix(_:_:)(v95, v98, v99);
    v101 = *(void (**)(char *, uint64_t))(v93 + 8);
    v101(v98, v94);
    objc_allocWithZone((Class)type metadata accessor for LoadingPageViewController());
    v102 = (uint64_t)v387;
    swift_bridgeObjectRetain(v387);
    v103 = sub_26D454(v96, v97, v100 & 1, v386, v102);
    v104 = swift_release(v96);
    ((void (*)(char *, uint64_t, __n128))v101)(v95, v94, v104);
    (*(void (**)(char *, uint64_t))(v349 + 8))(v72, v64);
    return v103;
  }
  v387 = v69;
  v389 = v64;
  if (v89 == enum case for FlowDestination.searchResults(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v105 = v388[27];
    v106 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DF8));
    swift_retain(v105);
    v103 = sub_63424(v107);
    sub_D1D4((uint64_t)v76, (uint64_t *)&unk_3D2D70);
    return v103;
  }
  if (v89 == enum case for FlowDestination.video(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v108 = (uint64_t)&v76[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2DC0) + 48)];
    v109 = v389;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v72, v76, v389);
    v110 = v387;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v387, v72, v109);
    v111 = objc_allocWithZone((Class)AVPlayer);
    URL._bridgeToObjectiveC()(v112);
    v114 = v113;
    v115 = objc_msgSend(v111, "initWithURL:", v113);

    v103 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PlayerViewController()), "init");
    objc_msgSend(v103, "setPlayer:", v115);

    v103[OBJC_IVAR____TtC23ShelfKitCollectionViews20PlayerViewController_autoplay] = 1;
    v116 = *(void (**)(char *, uint64_t))(v65 + 8);
    v116(v110, v109);
    objc_msgSend(v103, "setAllowsPictureInPicturePlayback:", 0);
    objc_msgSend(v103, "setUpdatesNowPlayingInfoCenter:", 0);
    v116(v72, v109);
    sub_D1D4(v108, &qword_3D0A58);
    return v103;
  }
  if (v89 == enum case for FlowDestination.page(_:)
    || v89 == enum case for FlowDestination.topLevelPage(_:)
    || v89 == enum case for FlowDestination.modernTopCharts(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v117 = *(_QWORD *)v76;
    v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D0220);
    sub_D210((uint64_t)&v76[*(int *)(v118 + 48)], (uint64_t)v88, (uint64_t *)&unk_3D2D70);
    v119 = v379;
    BaseObjectGraph.inject<A>(_:)(v379, v378, v378);
    v120 = type metadata accessor for PageRenderController(0);
    swift_allocObject(v120, *(unsigned int *)(v120 + 48), *(unsigned __int16 *)(v120 + 52));
    v121 = PageRenderController.init(eventName:pipeline:)(0x67615065726F7453, 0xE900000000000065, v119);
    *(_QWORD *)&v392 = v121;
    v122 = BaseObjectGraph.satisfying<A>(_:with:)(v120, &v392, v120);
    v123 = v381;
    sub_D210((uint64_t)v88, v381, (uint64_t *)&unk_3D2D70);
    v124 = (uint64_t)v380;
    StorePagePresenter.Configuration.init(pageURL:page:)(v123, v117);
    v125 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E00));
    v103 = sub_66AB4(v122, v124);
    v126 = v121;
LABEL_13:
    swift_release(v126);
    return v103;
  }
  if (v89 == enum case for FlowDestination.viewController(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    return *(char **)v76;
  }
  if (v89 == enum case for FlowDestination.seeAllEpisodes(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v128 = *(_QWORD *)v76;
    v129 = *((_QWORD *)v76 + 1);
    v130 = *((_QWORD *)v76 + 2);
    v131 = v76[24];
    v132 = *((_QWORD *)v76 + 4);
    v133 = v388[27];
    v134 = v76[40];
    swift_retain(v133);
    sub_8CEEC(v132, v134);
    v135 = (uint64_t)v377;
    SeeAllEpisodesPresenter.Configuration.init(showUUID:showAdamID:filter:showsPageHeader:)(v128, v129, v130, v131, v132, v134, 1);
    v136 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DF0));
    v103 = sub_621C4(v133, v135);
    sub_8CF00(v132, v134);
    return v103;
  }
  if (v89 == enum case for FlowDestination.episodeList(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    sub_8CF64((uint64_t)v76, (uint64_t)&v392);
    v137 = v388[27];
    swift_retain(v137);
    sub_8D048((uint64_t)&v392, sub_8CFA0);
    v138 = (uint64_t)v376;
    ModernEpisodesPresenter.Configuration.init(episodeListType:showsPageHeader:)(&v392, 1, v139);
    v140 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DD8));
    v103 = sub_6C4E4(v137, v138);
    sub_8D048((uint64_t)&v392, sub_8D094);
    return v103;
  }
  if (v89 == enum case for FlowDestination.episodeDetails(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v141 = *(_QWORD *)v76;
    v142 = *((_QWORD *)v76 + 1);
    v143 = *((_QWORD *)v76 + 2);
    v144 = *((_QWORD *)v76 + 3);
    v145 = *((_QWORD *)v76 + 4);
    LODWORD(v389) = v76[40];
    v146 = *((_QWORD *)v76 + 6);
    v147 = v76[56];
    v148 = v388;
    v149 = v388[25];
    v150 = v388[26];
    __swift_project_boxed_opaque_existential_1(v388 + 22, v149);
    v103 = (char *)dispatch thunk of EpisodeControllerProtocol.episodeDetailViewController(graph:uuid:stationUuid:referenceTime:playerTime:)(v148[27], v141, v142, v143, v144, v145, v389, v146, v147, v149, v150);
    swift_bridgeObjectRelease(v142);
    swift_bridgeObjectRelease(v144);
    return v103;
  }
  if (v89 == enum case for FlowDestination.channel(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v151 = *(_QWORD *)v76;
    v152 = v388[27];
    swift_retain(v152);
    v153 = swift_retain(v151);
    v154 = (uint64_t)v375;
    ChannelPresenter.Configuration.init(channelDetail:)(v153);
    v155 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E50));
    v156 = (uint64_t)sub_6FC04(v152, v154);
LABEL_23:
    v103 = (char *)v156;
LABEL_24:
    v126 = v151;
    goto LABEL_13;
  }
  if (v89 == enum case for FlowDestination.podcastSettings(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v157 = *(_QWORD *)v76;
    v158 = *((_QWORD *)v76 + 1);
    v159 = v388[11];
    v160 = v388[12];
    __swift_project_boxed_opaque_existential_1(v388 + 8, v159);
    v161 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 8))(v157, v158, v159, v160);
LABEL_29:
    v103 = (char *)v161;
    swift_bridgeObjectRelease(v158);
    return v103;
  }
  v162 = v388;
  if (v89 == enum case for FlowDestination.notificationSettings(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v163 = *(_QWORD *)v76;
    v158 = *((_QWORD *)v76 + 1);
    v164 = v162[11];
    v165 = v162[12];
    __swift_project_boxed_opaque_existential_1(v162 + 8, v164);
    v161 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v165 + 24))(v163, v158, v164, v165);
    goto LABEL_29;
  }
  if (v89 == enum case for FlowDestination.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v151 = *(_QWORD *)v76;
    v166 = v162[27];
    swift_retain(v166);
    v167 = swift_retain(v151);
    v168 = (uint64_t)v374;
    ModernStationDetailPresenter.Configuration.init(station:isMacIdiom:)(v167);
    v169 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DE0));
    v156 = (uint64_t)sub_60F64(v166, v168);
    goto LABEL_23;
  }
  if (v89 == enum case for FlowDestination.stationSettings(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v170 = *(_QWORD *)v76;
    v171 = *((_QWORD *)v76 + 1);
    v172 = v388[27];
    v173 = v388[11];
    v174 = v388[12];
    __swift_project_boxed_opaque_existential_1(v388 + 8, v173);
    v175 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v174 + 32);
    v176 = swift_retain(v172);
    v177 = v175(v170, v171, v173, v174, v176);
    v178 = swift_bridgeObjectRelease(v171);
    v179 = static MetricsPageID.stationSettings.getter(v178);
    v181 = v180;
    v182 = static MetricsPageType.settings.getter();
    v183 = v373;
    MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)(v179, v181, v182, v184, 0, 0, 0);
    v185 = objc_allocWithZone((Class)type metadata accessor for MetricsPageViewController(0));
    return (char *)MetricsPageViewController.init(asPartOf:wrapping:with:)(v172, v177, v183);
  }
  if (v89 == enum case for FlowDestination.stationShowEpisodes(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v186 = *((_QWORD *)v76 + 2);
    v187 = *((_QWORD *)v76 + 3);
    v188 = *((_QWORD *)v76 + 6);
    v189 = *((_QWORD *)v76 + 7);
    v190 = v388[27];
    v392 = *(_OWORD *)v76;
    v393 = v186;
    v394 = v187;
    v395 = *((_OWORD *)v76 + 2);
    v396 = v188;
    v397 = v189;
    v398 = 4;
    v191 = swift_retain(v190);
    v192 = (uint64_t)v376;
    ModernEpisodesPresenter.Configuration.init(episodeListType:showsPageHeader:)(&v392, 1, v191);
    v193 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DD8));
    return sub_6C4E4(v190, v192);
  }
  if (v89 == enum case for FlowDestination.podcast(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v151 = *(_QWORD *)v76;
    v194 = v388[27];
    swift_retain(v194);
    v195 = swift_retain(v151);
    v196 = Podcast.uuid.getter(v195);
    v198 = v197;
    v199 = swift_release(v151);
    v200 = (uint64_t)v372;
    LibraryShowPresenter.Configuration.init(showUUID:)(v196, v198, v199);
    v201 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E08));
    v156 = (uint64_t)sub_65854(v194, v200);
    goto LABEL_23;
  }
  if (v89 == enum case for FlowDestination.podcastUUID(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v202 = *(_QWORD *)v76;
    v203 = *((_QWORD *)v76 + 1);
    v204 = v388[27];
    v205 = swift_retain(v204);
    v206 = (uint64_t)v372;
    LibraryShowPresenter.Configuration.init(showUUID:)(v202, v203, v205);
    v207 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E08));
    return sub_65854(v204, v206);
  }
  if (v89 == enum case for FlowDestination.writeReview(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v73 = v65;
    v208 = v371;
    v209 = v389;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v371, v76, v389);
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v79, v208, v209);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v79, 0, 1, v209);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v79, 1, v209) == 1)
    {
      v211 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v210);
      v211 = v219;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v79, v389);
    }
    v103 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ComposeReviewViewController()), "initWithCompositionURL:", v211);

    if (v103)
    {
      objc_msgSend(v103, "setDelegate:", *(_QWORD *)((char *)v388 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_composeReviewDelegate));
      objc_msgSend(v103, "prepareWithCompletionBlock:", 0);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v371, v389);
      return v103;
    }
    __break(1u);
LABEL_86:
    if (v89 == enum case for FlowDestination.categories(_:))
    {
      v318 = v388[27];
      v319 = swift_retain(v318);
      v320 = (uint64_t)v352;
      CategoryListPresenter.Configuration.init(showPageHeader:)(1, v319);
      v321 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E40));
      return sub_6D744(v318, v320);
    }
    if (v89 == enum case for FlowDestination.prototypeUpNextSettings(_:))
    {
      v322 = v388[11];
      v323 = v388[12];
      __swift_project_boxed_opaque_existential_1(v388 + 8, v322);
      return (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v323 + 16))(v322, v323);
    }
    if (v89 == enum case for FlowDestination.downloadingEpisodes(_:))
    {
      v324 = v388;
      v325 = v388[14];
      ObjectType = swift_getObjectType();
      dispatch thunk of LibraryDataProviderProtocol.libraryActionController.getter(&v392, ObjectType, v325);
      v327 = (objc_class *)type metadata accessor for DownloadsCVCLibraryActionControllerBridge();
      v328 = objc_allocWithZone(v327);
      sub_1D5D4((uint64_t)&v392, (uint64_t)v328+ OBJC_IVAR____TtC23ShelfKitCollectionViews41DownloadsCVCLibraryActionControllerBridge_libraryActionController);
      v390.receiver = v328;
      v390.super_class = v327;
      v329 = objc_msgSendSuper2(&v390, "init");
      __swift_destroy_boxed_opaque_existential_0(&v392);
      v330 = v324[11];
      v331 = v324[12];
      __swift_project_boxed_opaque_existential_1(v324 + 8, v330);
      v103 = (char *)(*(uint64_t (**)(id, uint64_t, uint64_t))(v331 + 40))(v329, v330, v331);

      return v103;
    }
    if (v89 == enum case for FlowDestination.recentlyAdded(_:))
    {
      v332 = v388[27];
      v333 = swift_retain(v332);
      v334 = (uint64_t)v363;
      v335 = 4;
LABEL_100:
      ShowListPresenter.Configuration.init(kind:showsPageHeader:)(v335, 1, v333);
      v336 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DE8));
      return sub_645F4(v332, v334);
    }
    if (v89 == enum case for FlowDestination.recentlyUpdated(_:))
    {
      v332 = v388[27];
      v333 = swift_retain(v332);
      v334 = (uint64_t)v363;
      v335 = 2;
      goto LABEL_100;
    }
    if (v89 == enum case for FlowDestination.recentlyUnfollowed(_:))
    {
      v332 = v388[27];
      v333 = swift_retain(v332);
      v334 = (uint64_t)v363;
      v335 = 9;
      goto LABEL_100;
    }
    if (v89 == enum case for FlowDestination.shows(_:))
    {
      v332 = v388[27];
      v333 = swift_retain(v332);
      v334 = (uint64_t)v363;
      v335 = 8;
      goto LABEL_100;
    }
    if (v89 != enum case for FlowDestination.stationTab(_:))
    {
      if (v89 == enum case for FlowDestination.migration(_:))
      {
        ObjCClassFromMetadata = (objc_class *)type metadata accessor for MigrationViewController();
        return (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
      }
      if (v89 == enum case for FlowDestination.welcome(_:))
      {
        v338 = type metadata accessor for WelcomeViewController();
        ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v338);
        return (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
      }
      if (v89 == enum case for FlowDestination.account(_:))
      {
        v339 = v388[27];
        v340 = objc_allocWithZone((Class)type metadata accessor for AccountViewController());
        swift_retain(v339);
        return sub_29840C(v341);
      }
      if (v89 == enum case for FlowDestination.manageCategories(_:))
      {
        v342 = v388[27];
        v343 = type metadata accessor for PodcastsUIKitSwiftUIBridge();
        v151 = swift_allocObject(v343, 40, 7);
        swift_unknownObjectWeakInit(v151 + 24, 0);
        swift_unknownObjectWeakInit(v151 + 32, 0);
        *(_QWORD *)(v151 + 16) = v342;
        swift_beginAccess(v151 + 24, &v392, 1, 0);
        swift_unknownObjectWeakAssign(v151 + 24, 0);
        swift_unknownObjectWeakAssign(v151 + 32, 0);
        swift_retain_n(v342, 2);
        v344 = v367;
        sub_29184(v342, v367);
        v345 = v368;
        sub_5B2DC(v151, v368);
        sub_FA4C(v344, type metadata accessor for ManageCategoriesView);
        v346 = v369;
        sub_D184(v345, v369, &qword_3D2DA0);
        v347 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2DB8));
        v103 = (char *)UIHostingController.init(rootView:)(v346);
        sub_D1D4(v345, &qword_3D2DA0);
        swift_unknownObjectWeakAssign(v151 + 24, v103);
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v73);
    }
    return 0;
  }
  if (v89 == enum case for FlowDestination.writeReviewMac(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v212 = *(_QWORD *)v76;
    v213 = *((_QWORD *)v76 + 1);
    v214 = v388[13];
    v215 = v388[14];
    v216 = type metadata accessor for WriteReviewPresenter(0);
    swift_allocObject(v216, *(unsigned int *)(v216 + 48), *(unsigned __int16 *)(v216 + 52));
    v217 = swift_unknownObjectRetain(v214);
    v151 = WriteReviewPresenter.init(adamId:libraryDataProvider:)(v212, v213, v214, v215, v217);
    v218 = objc_allocWithZone((Class)type metadata accessor for WriteReviewViewController(0));
    v156 = sub_12EA4(v151);
    goto LABEL_23;
  }
  if (v89 == enum case for FlowDestination.writeReviewNew(_:))
    return 0;
  if (v89 == enum case for FlowDestination.reviews(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v151 = *(_QWORD *)v76;
    v220 = v388[27];
    v221 = v381;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v381, 1, 1, v389);
    swift_retain(v220);
    swift_retain(v151);
    v222 = (uint64_t)v380;
    StorePagePresenter.Configuration.init(pageURL:page:)(v221, v151);
    v223 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E00));
    v156 = (uint64_t)sub_66AB4(v220, v222);
    goto LABEL_23;
  }
  if (v89 == enum case for FlowDestination.upsell(_:))
    goto LABEL_53;
  if (v89 == enum case for FlowDestination.longDescription(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v151 = *(_QWORD *)v76;
    v227 = v388[27];
    swift_retain(v227);
    v228 = swift_retain(v151);
    v229 = (uint64_t)v370;
    LongDescriptionPresenter.Configuration.init(longDescription:)(v228);
    v230 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E20));
    v156 = (uint64_t)sub_67D14(v227, v229);
    goto LABEL_23;
  }
  if (v89 == enum case for FlowDestination.finance(_:) || v89 == enum case for FlowDestination.financeSubscriptions(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v231 = v381;
    sub_D210((uint64_t)v76, v381, (uint64_t *)&unk_3D2D70);
    sub_D184(v231, (uint64_t)v82, (uint64_t *)&unk_3D2D70);
    v232 = objc_allocWithZone((Class)type metadata accessor for WebViewController(0));
    v103 = (char *)sub_2C162C((uint64_t)v82);
    sub_D1D4(v231, (uint64_t *)&unk_3D2D70);
    return v103;
  }
  if (v89 == enum case for FlowDestination.contextMenuPreview(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v233 = *(_QWORD *)v76;
    v234 = v388[27];
    v235 = objc_allocWithZone((Class)type metadata accessor for ContextMenuPreviewViewController());
    swift_retain(v234);
    v103 = (char *)sub_D9F34(v233, v234);
    swift_release(v234);
    v126 = v233 & 0x3FFFFFFFFFFFFFFFLL;
    goto LABEL_13;
  }
  if (v89 == enum case for FlowDestination.singleSubscriptionConfirmation(_:))
  {
LABEL_53:
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v224 = *(void **)v76;
    v225 = v388[27];
    objc_allocWithZone((Class)type metadata accessor for UpsellViewController());
    swift_retain(v225);
    return (char *)sub_3F930(v226, v224);
  }
  if (v89 == enum case for FlowDestination.multipleSubscriptionConfirmation(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v389 = *(_QWORD *)v76;
    v236 = type metadata accessor for PageContextTracker(0);
    v237 = static PageContextTracker.shared.getter();
    *(_QWORD *)&v392 = v237;
    swift_retain(v237);
    v238 = BaseObjectGraph.satisfying<A>(_:with:)(v236, &v392, v236);
    v239 = swift_retain(v237);
    v240 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8CF14, v237, v239);
    swift_release(v238);
    v241 = swift_release_n(v237, 3);
    v242 = v357;
    static DynamicImpressionsTracker.Configuration.default.getter(v241);
    v243 = BaseObjectGraph.addingImpressionsTracker(with:)(v242);
    v244 = swift_release(v240);
    v245 = (*(uint64_t (**)(char *, uint64_t, __n128))(v358 + 8))(v242, v359, v244);
    v246 = v360;
    static ImpressionsCalculator.Configuration.half.getter(v245);
    v247 = BaseObjectGraph.addingImpressionsCalculator(with:)(v246);
    v248 = swift_release(v243);
    (*(void (**)(char *, uint64_t, __n128))(v361 + 8))(v246, v362, v248);
    v249 = type metadata accessor for MetricsController(0);
    v250 = BaseObjectGraph.satisfying<A>(_:with:)(v249, sub_5E124, 0, v249);
    swift_release(v247);
    BaseObjectGraph.inject<A>(_:)(&v392, v249, v249);
    v251 = (_QWORD *)v392;
    v252 = type metadata accessor for PodcastsUIKitSwiftUIBridge();
    v253 = swift_allocObject(v252, 40, 7);
    swift_unknownObjectWeakInit(v253 + 24, 0);
    swift_unknownObjectWeakInit(v253 + 32, 0);
    *(_QWORD *)(v253 + 16) = v250;
    swift_beginAccess(v253 + 24, &v392, 1, 0);
    swift_unknownObjectWeakAssign(v253 + 24, 0);
    swift_unknownObjectWeakAssign(v253 + 32, 0);
    v254 = swift_allocObject(&unk_37CD48, 24, 7);
    *(_QWORD *)(v254 + 16) = 0;
    v255 = swift_allocObject(&unk_37CD70, 32, 7);
    *(_QWORD *)(v255 + 16) = v254;
    *(_QWORD *)(v255 + 24) = v250;
    v256 = swift_allocObject(&unk_37CD98, 32, 7);
    v388 = v251;
    *(_QWORD *)(v256 + 16) = v251;
    *(_QWORD *)(v256 + 24) = v254;
    v257 = swift_allocObject(&unk_37CDC0, 32, 7);
    *(_QWORD *)(v257 + 16) = v254;
    *(_QWORD *)(v257 + 24) = v250;
    swift_retain_n(v250, 3);
    swift_retain_n(v254, 3);
    v258 = swift_retain(v251);
    v259 = v364;
    sub_22D078(v389, (uint64_t)sub_8CF44, v255, (uint64_t)sub_8CF50, v256, (uint64_t)sub_8CF5C, v257, v364, v258);
    v260 = v366;
    sub_5AEC4(v253, v366);
    sub_FA4C(v259, type metadata accessor for MultipleSubscriptionConfirmationView);
    v261 = v365;
    sub_D184(v260, v365, &qword_3D2DA8);
    v262 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E10));
    v103 = (char *)UIHostingController.init(rootView:)(v261);
    swift_release(v250);
    swift_release(v388);
    sub_D1D4(v260, &qword_3D2DA8);
    swift_beginAccess(v254 + 16, v391, 1, 0);
    v263 = *(void **)(v254 + 16);
    *(_QWORD *)(v254 + 16) = v103;
    v264 = v103;

    swift_unknownObjectWeakAssign(v253 + 24, v264);
    swift_release(v254);
    v126 = v253;
    goto LABEL_13;
  }
  if (v89 == enum case for FlowDestination.episodeDetailTranscript(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    (*(void (**)(char *, char *, uint64_t))(v355 + 32))(v354, v76, v356);
    v265 = v388[27];
    v266 = swift_retain_n(v265, 2);
    v267 = TranscriptRequestInformation.episodeAdamId.getter(v266);
    v269 = v268;
    v389 = static AdamID.parse(_:)(v267);
    v271 = swift_bridgeObjectRelease(v269);
    v272 = v354;
    v388 = (_QWORD *)TranscriptRequestInformation.episodeTitle.getter(v273, v271);
    v275 = v274;
    v276 = TranscriptRequestInformation.ttmlIdentifier.getter();
    v278 = v277;
    v279 = TranscriptRequestInformation.selectedTextTimeInterval.getter();
    v281 = v280;
    v283 = v282 & 1;
    v284 = (uint64_t)v353;
    TranscriptRequestInformation.source.getter();
    v285 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel(0);
    swift_allocObject(v285, *(unsigned int *)(v285 + 48), *(unsigned __int16 *)(v285 + 52));
    v286 = sub_C84A8(v265, v389, (uint64_t)v388, v275, v276, v278, v279, v281, v283, v284);
    swift_release(v265);
    v287 = objc_allocWithZone((Class)type metadata accessor for EpisodeDetailTranscriptViewController());
    v103 = (char *)sub_BB540(v265, v286);
    (*(void (**)(char *, uint64_t))(v355 + 8))(v272, v356);
    return v103;
  }
  if (v89 == enum case for FlowDestination.nowPlaying(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v270 = type metadata accessor for EpisodeOffer(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v270 - 8) + 8))(v76, v270);
    return 0;
  }
  if (v89 == enum case for FlowDestination.inAppProductPage(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    swift_bridgeObjectRelease(*((_QWORD *)v76 + 2));
    return 0;
  }
  if (v89 == enum case for FlowDestination.category(_:))
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v73);
    v288 = *(_QWORD *)v76;
    v289 = &v76[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E58) + 48)];
    v290 = v72;
    v291 = v72;
    v292 = v389;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v291, v289, v389);
    v293 = v387;
    v294 = v388[27];
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v387, v290, v292);
    v295 = swift_retain(v294);
    v296 = (uint64_t)v350;
    CategoryPagePresenter.Configuration.init(categoryAdamID:categoryPageURL:)(v288, v293, v295);
    v297 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E60));
    v103 = sub_70E64(v294, v296);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v290, v292);
    return v103;
  }
  if (v89 == enum case for FlowDestination.debug(_:))
  {
    v298 = sub_28C6F8();
    v299 = objc_allocWithZone((Class)type metadata accessor for DebugSettingsViewController());
    v103 = (char *)sub_28A5EC((uint64_t)v298);
    v300 = v388;
    swift_beginAccess(v388 + 15, &v392, 0, 0);
    v301 = v300[15];
    v302 = v300[16];
    v303 = &v103[OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider];
    swift_beginAccess(&v103[OBJC_IVAR____TtC23ShelfKitCollectionViews27DebugSettingsViewController_debugActionsProvider], v391, 1, 0);
    *((_QWORD *)v303 + 1) = v302;
    swift_unknownObjectWeakAssign(v303, v301);
    v304 = swift_unknownObjectRetain(v301);
    sub_289BE0(v304);
    swift_unknownObjectRelease(v301);
    return v103;
  }
  if (v89 == enum case for FlowDestination.listen(_:))
  {
    v305 = v388[27];
    v306 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E28));
    swift_retain(v305);
    return sub_68F74(v307);
  }
  if (v89 == enum case for FlowDestination.library(_:))
  {
    v308 = v388[27];
    v309 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E30));
    swift_retain(v308);
    return sub_6A144(v310);
  }
  v103 = 0;
  if (v89 != enum case for FlowDestination.libraryTab(_:) && v89 != enum case for FlowDestination.sharedWithYou(_:))
  {
    if (v89 == enum case for FlowDestination.highlights(_:))
    {
      v311 = v388[27];
      v312 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E38));
      swift_retain(v311);
      return sub_6B314(v313);
    }
    if (v89 == enum case for FlowDestination.channels(_:))
    {
      v314 = v388[27];
      v315 = swift_retain(v314);
      v316 = (uint64_t)v351;
      ChannelListPresenter.Configuration.init(showPageHeader:)(1, v315);
      v317 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_3D2E48));
      return sub_6E9A4(v314, v316);
    }
    goto LABEL_86;
  }
  return v103;
}

uint64_t sub_5E124@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = type metadata accessor for MetricsController(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = swift_retain(a1);
  result = MetricsController.init(asPartOf:)(v5);
  *a2 = result;
  return result;
}

void sub_5E180(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD aBlock[5];
  uint64_t v9;
  _BYTE v10[24];

  swift_beginAccess(a1 + 16, v10, 0, 0);
  v4 = *(void **)(a1 + 16);
  if (v4)
  {
    aBlock[4] = sub_8DB9C;
    v9 = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_239;
    v5 = _Block_copy(aBlock);
    v6 = v9;
    v7 = v4;
    swift_retain(a2);
    objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, v5, swift_release(v6).n128_f64[0]);
    _Block_release(v5);

  }
}

void sub_5E250(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  __n128 v46;
  char *v47;
  __n128 v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  __n128 v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  int v74;
  int v75;
  unsigned __int8 v76;
  char *v77;
  char *v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  void (*v94)(char *, uint64_t, __n128);
  uint64_t v95;
  char *v96;
  char *v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  void (*v111)(char *, uint64_t, __n128);
  char *v112;
  void *v113;
  id v114;
  uint64_t v115;
  __n128 v116;
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *ObjectType;
  char *v140;
  uint64_t v141;
  char *v142;
  _BYTE v143[32];
  _QWORD v144[3];
  uint64_t v145;
  uint64_t v146;
  _QWORD v147[4];

  v2 = type metadata accessor for ActionMetricsBehavior(0);
  v128 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v127 = (char *)&v119 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for FlowDestinationPageHeader(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v131 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for FlowPresentationContext(0);
  v134 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v136 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for FlowDestination(0);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v140 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScalarDictionary(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetricsData.Configuration(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v15);
  v17 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for ActionMetrics(0);
  v141 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v137 = (char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  ObjectType = (char *)&v119 - v20;
  __chkstk_darwin(v21);
  v142 = (char *)&v119 - v22;
  v23 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v24 = objc_msgSend(v23, "delegate");

  if (v24)
  {
    if ((objc_msgSend(v24, "respondsToSelector:", "window") & 1) == 0)
    {
      swift_unknownObjectRelease(v24);
      return;
    }
    v25 = objc_msgSend(v24, "window");
    *(_QWORD *)&v26 = swift_unknownObjectRelease(v24).n128_u64[0];
    if (v25)
    {
      v27 = objc_msgSend(v25, "rootViewController", v26);

      if (v27)
      {
        v120 = v2;
        v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D30F0);
        v29 = *(_QWORD *)(type metadata accessor for MetricsData(0) - 8);
        v30 = *(_QWORD *)(v29 + 72);
        v31 = *(unsigned __int8 *)(v29 + 80);
        v125 = v27;
        v32 = (v31 + 32) & ~v31;
        v33 = swift_allocObject(v28, v32 + v30, v31 | 7);
        v121 = xmmword_2F03C0;
        *(_OWORD *)(v33 + 16) = xmmword_2F03C0;
        v124 = v33 + v32;
        v123 = static MetricsTargetID.seeAllMyChannels.getter();
        v35 = v34;
        v122 = static MetricsTargetType.button.getter();
        v37 = v36;
        v38 = static MetricsActionType.navigate.getter();
        v126 = a1;
        v40 = v39;
        v41 = type metadata accessor for URL(0);
        v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v17, 1, 1, v41);
        static MetricsData.Configuration.podcasts.getter(v42);
        static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(v123, v35, v122, v37, v38, v40, 0, 0, 0, 0, v17, &_swiftEmptyDictionarySingleton, v14);
        swift_bridgeObjectRelease(v35);
        swift_bridgeObjectRelease(v37);
        v43 = v40;
        v44 = v126;
        v45 = swift_bridgeObjectRelease(v43);
        (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v45);
        sub_D1D4((uint64_t)v17, (uint64_t *)&unk_3D2D70);
        ScalarDictionary.init()(v46);
        v47 = v142;
        ActionMetrics.init(data:custom:)(v33, v10);
        type metadata accessor for ActionRunnerOptions(0);
        v48 = swift_retain(v44);
        v49 = BaseObjectGraph.__allocating_init(_:)(v48);
        v147[3] = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
        v50 = v125;
        v147[0] = v125;
        sub_D184((uint64_t)v147, (uint64_t)v143, &qword_3D1A70);
        v51 = v50;
        ActionOrigin.init(sender:view:)(v144, v143, 0);
        v52 = ActionRunnerOptions.withActionOrigin(_:)(v144);
        sub_D1D4((uint64_t)v144, (uint64_t *)&unk_3D30E0);
        swift_release(v49);
        sub_D1D4((uint64_t)v147, &qword_3D1A70);
        v53 = (char *)v51;
        v54 = UIResponder.nearestActionRunner.getter();
        v56 = v55;

        v57 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
        LOBYTE(v38) = UITraitCollection.interfaceMode.getter();

        v58 = InterfaceMode.rawValue.getter(v38 & 1);
        v60 = v59;
        v62 = InterfaceMode.rawValue.getter(0);
        v63 = v61;
        if (v58 == v62 && v60 == v61)
        {
          swift_bridgeObjectRelease_n(v60, 2);
        }
        else
        {
          v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v60, v62, v61, 0);
          swift_bridgeObjectRelease(v60);
          v65 = swift_bridgeObjectRelease(v63);
          if ((v64 & 1) == 0)
          {
            v140 = v53;
            v95 = v141;
            v96 = v47;
            v97 = v137;
            v68 = v138;
            (*(void (**)(char *, char *, uint64_t, __n128))(v141 + 16))(v137, v96, v138, v65);
            v98 = Link.Presentation.init(rawValue:)(0);
            v99 = type metadata accessor for TabChangeAction(0);
            swift_allocObject(v99, *(unsigned int *)(v99 + 48), *(unsigned __int16 *)(v99 + 52));
            LOBYTE(v117) = v98;
            v100 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, 2, 0, 0, 0, 0, 0, v117, v97);
            v101 = v100;
            v87 = v54;
            if (v54)
            {
              ObjectType = (char *)swift_getObjectType();
              v145 = v99;
              v146 = sub_89A0((unint64_t *)&unk_3DFFE0, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
              v144[0] = v101;
              v102 = v128;
              v103 = v68;
              v104 = v56;
              v105 = v95;
              v106 = v127;
              v107 = v120;
              (*(void (**)(char *, _QWORD, uint64_t))(v128 + 104))(v127, enum case for ActionMetricsBehavior.fromAction(_:), v120);
              swift_unknownObjectRetain(v54);
              swift_retain(v101);
              v108 = v104;
              v68 = v103;
              v109 = ActionRunner.perform(_:withMetrics:asPartOf:)(v144, v106, v52, ObjectType, v108);
              swift_release(v101);
              swift_release(v109);
              v110 = swift_unknownObjectRelease(v54);
              v111 = *(void (**)(char *, uint64_t, __n128))(v102 + 8);
              v87 = v54;
              v112 = v106;
              v95 = v105;
              v111(v112, v107, v110);
              __swift_destroy_boxed_opaque_existential_0(v144);
            }
            else
            {
              swift_release(v100);
            }
            v77 = v140;
LABEL_22:
            type metadata accessor for TabMenuProvider(0);
            v113 = (void *)objc_opt_self(NSUserDefaults);
            v114 = objc_msgSend(v113, "standardUserDefaults", swift_retain(v44).n128_f64[0]);
            v115 = TabMenuProvider.__allocating_init(asPartOf:userDefaults:interfaceMode:)(v44, v114, 0);
            dispatch thunk of TabMenuProvider.enableNavigationTabIfNeeded(_:)(2);

            swift_release(v52);
            swift_release(v115);
            v116 = swift_unknownObjectRelease(v87);
            (*(void (**)(char *, uint64_t, __n128))(v95 + 8))(v142, v68, v116);
            return;
          }
        }
        v125 = (id)v52;
        v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9E90);
        v67 = swift_allocObject(v66, 72, 7);
        *(_OWORD *)(v67 + 16) = v121;
        (*(void (**)(char *, _QWORD, uint64_t))(v132 + 104))(v140, enum case for FlowDestination.channels(_:), v133);
        v68 = v138;
        (*(void (**)(char *, char *, uint64_t))(v141 + 16))(ObjectType, v47, v138);
        v69 = v136;
        v70.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v134 + 104))(v136, enum case for FlowPresentationContext.infer(_:), v135);
        v71 = static Link.Presentation.textFollowsTintColor.getter(v70);
        v72 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
        v73 = Link.Presentation.init(rawValue:)(0);
        v74 = Link.Presentation.init(rawValue:)(v73);
        if (Link.Presentation.init(rawValue:)(v74 & v71) != v71)
          v73 = Link.Presentation.init(rawValue:)(v73 | v71);
        v75 = Link.Presentation.init(rawValue:)(v73);
        v76 = Link.Presentation.init(rawValue:)(v75 & v72);
        v124 = v56;
        v77 = v53;
        if (v76 != v72)
          v73 = Link.Presentation.init(rawValue:)(v73 | v72);
        v44 = v126;
        v78 = v131;
        v79.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v129 + 104))(v131, enum case for FlowDestinationPageHeader.standard(_:), v130);
        v80 = type metadata accessor for FlowAction(0, v79);
        swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
        v81 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v140, 0, 0, 0, 0, v69, 0, v73, v78, ObjectType);
        *(_QWORD *)(v67 + 56) = v80;
        *(_QWORD *)(v67 + 64) = sub_89A0(&qword_3D22B0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
        *(_QWORD *)(v67 + 32) = v81;
        v82 = Link.Presentation.init(rawValue:)(0);
        LOBYTE(v80) = v82;
        v83 = v137;
        static ActionMetrics.notInstrumented.getter(v82);
        v84 = type metadata accessor for TabChangeAction(0);
        swift_allocObject(v84, *(unsigned int *)(v84 + 48), *(unsigned __int16 *)(v84 + 52));
        LOBYTE(v118) = v80;
        v85 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, 7, v67, 0, 0, 0, 0, v118, v83);
        v86 = v85;
        v87 = v54;
        if (v54)
        {
          v88 = swift_getObjectType();
          v145 = v84;
          v146 = sub_89A0((unint64_t *)&unk_3DFFE0, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
          v144[0] = v86;
          v89 = v128;
          v90 = v127;
          v91 = v120;
          (*(void (**)(char *, _QWORD, uint64_t))(v128 + 104))(v127, enum case for ActionMetricsBehavior.fromAction(_:), v120);
          swift_unknownObjectRetain(v54);
          swift_retain(v86);
          v52 = (uint64_t)v125;
          v92 = ActionRunner.perform(_:withMetrics:asPartOf:)(v144, v90, v125, v88, v124);
          swift_release(v86);
          swift_release(v92);
          v93 = swift_unknownObjectRelease(v54);
          v94 = *(void (**)(char *, uint64_t, __n128))(v89 + 8);
          v87 = v54;
          v94(v90, v91, v93);
          __swift_destroy_boxed_opaque_existential_0(v144);
        }
        else
        {
          swift_release(v85);
          v52 = (uint64_t)v125;
        }
        v95 = v141;
        goto LABEL_22;
      }
    }
  }
}

id sub_5EDA0(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  double v26;
  id result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v31 = a2;
  v34 = a1;
  v4 = type metadata accessor for MetricsData.Configuration(0, a3);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for MetricsData(0);
  v10 = *(_QWORD *)(v30 - 8);
  v11 = __chkstk_darwin(v30);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a2 + 16;
  v14 = static MetricsTargetID.notNow.getter(v11);
  v16 = v15;
  v17 = static MetricsTargetType.button.getter();
  v19 = v18;
  v20 = static MetricsActionType.dismiss.getter();
  v22 = v21;
  v23 = type metadata accessor for URL(0);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
  static MetricsData.Configuration.podcasts.getter(v24);
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(v14, v16, v17, v19, v20, v22, 0, 0, 0, 0, v9, &_swiftEmptyDictionarySingleton, v6);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v19);
  v25 = swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t, __n128))(v32 + 8))(v6, v33, v25);
  sub_D1D4((uint64_t)v9, (uint64_t *)&unk_3D2D70);
  MetricsController.process(_:)(v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v30);
  *(_QWORD *)&v26 = swift_beginAccess(v29, v35, 0, 0).n128_u64[0];
  result = *(id *)(v31 + 16);
  if (result)
    return objc_msgSend(result, "dismissViewControllerAnimated:completion:", 1, 0, v26);
  return result;
}

void sub_5EFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD aBlock[5];
  uint64_t v12;
  char v13[24];

  swift_beginAccess(a2 + 16, v13, 0, 0);
  v6 = *(void **)(a2 + 16);
  if (v6)
  {
    v7 = swift_allocObject(&unk_37D2E8, 32, 7);
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = a3;
    aBlock[4] = sub_8DB94;
    v12 = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_236;
    v8 = _Block_copy(aBlock);
    v9 = v12;
    v10 = v6;
    swift_retain(a1);
    swift_retain(a3);
    objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);

  }
}

void sub_5F0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  double v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  _BYTE v41[32];
  _QWORD v42[4];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[6];

  v40 = a2;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v41[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for ActionMetricsBehavior(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v10);
  v12 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v14 = objc_msgSend(v13, "delegate");

  if (v14)
  {
    if ((objc_msgSend(v14, "respondsToSelector:", "window") & 1) != 0)
    {
      v16 = objc_msgSend(v14, "window");
      *(_QWORD *)&v17 = swift_unknownObjectRelease(v14).n128_u64[0];
      if (v16)
      {
        v18 = objc_msgSend(v16, "rootViewController", v17);

        if (v18)
        {
          dispatch thunk of LegacyLockup.clickAction.getter(&v43);
          if (v44)
          {
            sub_1B738(&v43, (uint64_t)v46);
            v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9E90);
            v20 = swift_allocObject(v19, 72, 7);
            *(_OWORD *)(v20 + 16) = xmmword_2F03C0;
            sub_1D5D4((uint64_t)v46, v20 + 32);
            v21 = Link.Presentation.init(rawValue:)(0);
            v22 = v21;
            static ActionMetrics.notInstrumented.getter(v21);
            v23 = type metadata accessor for TabChangeAction(0);
            swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
            v24 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, 10, v20, 0, 0, 0, 0, v22, v12);
            type metadata accessor for ActionRunnerOptions(0);
            v25 = swift_retain(v40);
            v26 = BaseObjectGraph.__allocating_init(_:)(v25);
            v42[3] = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
            v42[0] = v18;
            sub_D184((uint64_t)v42, (uint64_t)v41, &qword_3D1A70);
            v27 = v18;
            ActionOrigin.init(sender:view:)(&v43, v41, 0);
            v28 = ActionRunnerOptions.withActionOrigin(_:)(&v43);
            sub_D1D4((uint64_t)&v43, (uint64_t *)&unk_3D30E0);
            swift_release(v26);
            sub_D1D4((uint64_t)v42, &qword_3D1A70);
            v29 = v27;
            v30 = UIResponder.nearestActionRunner.getter();
            v32 = v31;

            if (v30)
            {
              ObjectType = swift_getObjectType();
              v44 = v23;
              v45 = sub_89A0((unint64_t *)&unk_3DFFE0, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
              *(_QWORD *)&v43 = v24;
              (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionMetricsBehavior.fromAction(_:), v6);
              swift_unknownObjectRetain(v30);
              swift_retain(v24);
              v34 = ActionRunner.perform(_:withMetrics:asPartOf:)(&v43, v9, v28, ObjectType, v32);

              swift_release(v24);
              swift_release(v28);
              v35 = swift_release(v34);
              swift_unknownObjectRelease_n(v30, 2, v35);
              (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
              __swift_destroy_boxed_opaque_existential_0(v46);
              __swift_destroy_boxed_opaque_existential_0(&v43);
            }
            else
            {
              __swift_destroy_boxed_opaque_existential_0(v46);
              swift_release(v28);
              swift_release(v24);

            }
            return;
          }

          v15 = sub_D1D4((uint64_t)&v43, (uint64_t *)&unk_3D30D0);
        }
      }
    }
    else
    {
      swift_unknownObjectRelease(v14);
    }
  }
  v36 = static Logger.purchases.getter(v15);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.error.getter(v37);
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl(&dword_0, v37, v38, "Cannot go to channel page because either the rootVC was nil or the channel lockup did not have a click action.", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_5F54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v4 + 216))(v12);
  v9 = v13;
  if (!v13)
    return sub_D1D4((uint64_t)v12, &qword_3D31A0);
  v10 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32))(a1, a2, a3, a4, v9, v10);
  return __swift_destroy_boxed_opaque_existential_0(v12);
}

uint64_t sub_5F5FC(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v7 + 216))(v18);
  v15 = v19;
  if (!v19)
    return sub_D1D4((uint64_t)v18, &qword_3D31A0);
  v16 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v16 + 40))(a1, a2, a3 & 1, a4 & 1, a5 & 1, a6 & 1, a7, v15, v16);
  return __swift_destroy_boxed_opaque_existential_0(v18);
}

uint64_t sub_5F6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v2 + 216))(v8);
  v5 = v9;
  if (!v9)
    return sub_D1D4((uint64_t)v8, &qword_3D31A0);
  v6 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, a2, v5, v6);
  return __swift_destroy_boxed_opaque_existential_0(v8);
}

uint64_t sub_5F764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v1 + 216))(v6);
  v3 = v7;
  if (!v7)
    return sub_D1D4((uint64_t)v6, &qword_3D31A0);
  v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_0(v6);
}

void sub_5F7EC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  int v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t *, uint64_t, uint64_t, __n128);
  uint64_t v54;
  uint64_t *v55;

  v55 = a2;
  v3 = type metadata accessor for URL(0);
  v51 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for FlowDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v50 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v50 - v21;
  v53 = *(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v10 + 16);
  v54 = a1;
  v53(v15, a1, v9, v20);
  v23 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v15, v9);
  if (v23 == enum case for FlowDestination.page(_:) || v23 == enum case for FlowDestination.topLevelPage(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v15, v9);
    swift_release(*v15);
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D0220);
    sub_D210((uint64_t)v15 + *(int *)(v25 + 48), (uint64_t)v22, (uint64_t *)&unk_3D2D70);
    sub_D210((uint64_t)v22, (uint64_t)v18, (uint64_t *)&unk_3D2D70);
    v26 = v51;
    v27 = v9;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v18, 1, v3) == 1)
    {
      sub_D1D4((uint64_t)v18, (uint64_t *)&unk_3D2D70);
LABEL_8:
      v28 = v55;
LABEL_19:
      ((void (*)(_QWORD *, uint64_t, uint64_t))v53)(v28, v54, v27);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v5, v18, v3);
    v39 = *(_QWORD *)(v52 + 112);
    v40 = v3;
    ObjectType = swift_getObjectType();
    v42 = dispatch thunk of LibraryDataProviderProtocol.fetchPodcastDetailBlocking(from:)(v5, ObjectType, v39);
    if (v42)
    {
      v43 = v42;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v40);
      *v55 = v43;
    }
    else
    {
      v47 = dispatch thunk of LibraryDataProviderProtocol.fetchChannelDetailBlocking(from:)(v5, ObjectType, v39);
      if (!v47)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v3);
        goto LABEL_8;
      }
      v48 = v47;
      v49 = dispatch thunk of ChannelDetail.isSingleShow.getter();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v40);
      if ((v49 & 1) != 0)
      {
        ((void (*)(uint64_t *, uint64_t, uint64_t))v53)(v55, v54, v27);
        swift_release(v48);
        return;
      }
      *v55 = v48;
    }
    (*(void (**)(void))(v10 + 104))();
    return;
  }
  v29 = (uint64_t)v55;
  if (v23 == enum case for FlowDestination.episodeList(_:))
  {
    v30 = (uint64_t)v55;
    v27 = v9;
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v15, v9);
    v31 = *v15;
    v32 = v15[1];
    v33 = v15[2];
    v34 = v15[3];
    v35 = v15[4];
    v36 = v15[5];
    v37 = v15[6];
    if (*((_BYTE *)v15 + 64) == 8)
    {
      v38 = v15[7];
      swift_bridgeObjectRetain(v15[1]);
      sub_60080(v31, v32, v54, v30);
      sub_8D094(v31, v32, v33, v34, v35, v36, v37, v38, 8);
      sub_8D094(v31, v32, v33, v34, v35, v36, v37, v38, 8);
      return;
    }
    sub_8D094(v31, v32, v33, v34, v35, v36, v37, v15[7], *((_BYTE *)v15 + 64));
    v28 = (_QWORD *)v30;
    goto LABEL_19;
  }
  if (v23 == enum case for FlowDestination.podcast(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v15, v9);
    v44 = *v15;
    sub_60230(*v15, v8);
    v45 = swift_release(v44);
    v53((uint64_t *)v12, v54, v9, v45);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v29, v12, v9);
      sub_D1D4((uint64_t)v8, &qword_3D2B30);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v10 + 32))(v29, v8, v9);
    }
  }
  else if (v23 == enum case for FlowDestination.podcastUUID(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v15, v9);
    v46 = v15[1];
    sub_60080(*v15, v46, v54, v29);
    swift_bridgeObjectRelease(v46);
  }
  else
  {
    ((void (*)(uint64_t *, uint64_t, uint64_t))v53)(v55, v54, v9);
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_5FD54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v12;
  void (*v14)(_QWORD *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  __n128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  void *v24;
  double v25;
  unsigned int v26;
  uint64_t v27;
  __n128 v28;
  char v29;
  uint64_t v30;
  _QWORD v32[5];

  v5 = type metadata accessor for FlowDestination(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (_QWORD *)((char *)&v32[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for Podcasts(0, v7);
  v32[3] = v10;
  v32[4] = sub_89A0(&qword_3D2F80, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(boxed_opaque_existential_0, enum case for Podcasts.preventExplicitNavigation(_:), v10);
  LOBYTE(v10) = isFeatureEnabled(_:)(v32);
  __swift_destroy_boxed_opaque_existential_0(v32);
  if ((v10 & 1) != 0
    && (objc_msgSend((id)objc_opt_self(PFRestrictionsUtil), "isExplicitContentAllowed") & 1) == 0)
  {
    v14 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v6 + 16);
    v14(v9, a1, v5);
    v15 = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 88))(v9, v5);
    if (v15 == enum case for FlowDestination.page(_:))
    {
      (*(void (**)(_QWORD *, uint64_t))(v6 + 96))(v9, v5);
      v16 = *v9;
      if (*v9)
      {
        v17 = swift_retain(*v9);
        v18 = Page.isExplicit.getter(v17);
        swift_release_n(v16, 2);
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D0220);
        sub_D1D4((uint64_t)v9 + *(int *)(v19 + 48), (uint64_t *)&unk_3D2D70);
        if ((v18 & 1) == 0)
          goto LABEL_19;
LABEL_16:
        objc_msgSend((id)objc_opt_self(MTRestrictionsUtil), "presentExplicitRestrictionAlertIfNeededOfType:actionCompletion:", 0, 0);
        v12 = 1;
        return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v12, 1, v5);
      }
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D0220);
      sub_D1D4((uint64_t)v9 + *(int *)(v30 + 48), (uint64_t *)&unk_3D2D70);
    }
    else
    {
      if (v15 == enum case for FlowDestination.episodeDetails(_:))
      {
        (*(void (**)(_QWORD *, uint64_t))(v6 + 96))(v9, v5);
        v20 = *v9;
        v21 = v9[1];
        swift_bridgeObjectRelease(v9[3]);
        v22 = *(_QWORD *)(v2 + 112);
        ObjectType = swift_getObjectType();
        v24 = (void *)dispatch thunk of LibraryDataProviderProtocol.fetchEpisodeBlocking(with:)(v20, v21, ObjectType, v22);
        *(_QWORD *)&v25 = swift_bridgeObjectRelease(v21).n128_u64[0];
        if (!v24)
          goto LABEL_19;
        v26 = objc_msgSend(v24, "isExplicit", v25);

        if (!v26)
          goto LABEL_19;
        goto LABEL_16;
      }
      if (v15 == enum case for FlowDestination.podcast(_:))
      {
        (*(void (**)(_QWORD *, uint64_t))(v6 + 96))(v9, v5);
        v27 = *v9;
        v28 = swift_retain(*v9);
        v29 = Podcast.isExplicit.getter(v28);
        swift_release_n(v27, 2);
        if ((v29 & 1) != 0)
          goto LABEL_16;
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
      }
    }
LABEL_19:
    v14(a2, a1, v5);
    goto LABEL_4;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v6 + 16))(a2, a1, v5);
LABEL_4:
  v12 = 0;
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v12, 1, v5);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_60080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;
  uint64_t v23;

  v5 = v4;
  v23 = a3;
  v9 = type metadata accessor for FlowDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)(v5 + 112);
  ObjectType = swift_getObjectType();
  v18 = dispatch thunk of LibraryDataProviderProtocol.fetchPodcastDetailBlocking(with:)(a1, a2, ObjectType, v16);
  if (!v18)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a4, v23, v9);
  v19 = v18;
  sub_60230(v18, v15);
  v20 = swift_release(v19);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, v23, v9, v20);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a4, v12, v9);
    return sub_D1D4((uint64_t)v15, &qword_3D2B30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v10 + 32))(a4, v15, v9);
  }
}

void sub_60230(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Podcast.storeUrl.getter(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_D1D4((uint64_t)v7, (uint64_t *)&unk_3D2D70);
    v13 = type metadata accessor for FlowDestination(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
    v14 = *(_QWORD *)(v2 + 112);
    ObjectType = swift_getObjectType();
    v16 = dispatch thunk of LibraryDataProviderProtocol.fetchPodcastDetailBlocking(from:)(v12, ObjectType, v14);
    if (v16)
    {
      v17 = swift_release(v16);
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v17);
      *a2 = a1;
      v18 = enum case for FlowDestination.podcast(_:);
      v19 = type metadata accessor for FlowDestination(0);
      v20 = *(_QWORD *)(v19 - 8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 104))(a2, v18, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a2, 0, 1, v19);
      swift_retain(a1);
    }
    else
    {
      static FlowDestination.page(_:)(v12);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      v21 = type metadata accessor for FlowDestination(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 0, 1, v21);
    }
  }
}

_QWORD *BaseFlowController.deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_unknownObjectUnownedDestroy(v0 + 2);
  __swift_destroy_boxed_opaque_existential_0(v0 + 3);
  __swift_destroy_boxed_opaque_existential_0(v0 + 8);
  swift_unknownObjectRelease(v0[13]);
  swift_unknownObjectRelease(v0[15]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 17);
  __swift_destroy_boxed_opaque_existential_0(v0 + 22);
  swift_release(v0[27]);
  v1 = (char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_metricsPipeline;
  v2 = type metadata accessor for MetricsPipeline(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t BaseFlowController.__deallocating_deinit()
{
  uint64_t v0;

  BaseFlowController.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_604D0()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 104));
}

uint64_t sub_604F8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1D5D4(*v1 + 176, a1);
}

char *sub_60518(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_5BB78(a1, a2, a3);
}

uint64_t sub_60538()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 240))();
}

uint64_t sub_60560()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 248))();
}

uint64_t sub_60588()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 256))();
}

uint64_t sub_605B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 264))();
}

uint64_t sub_605D8@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  _BYTE v6[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 120, v6, 0, 0);
  v4 = *(_OWORD *)(v3 + 120);
  *a2 = v4;
  return swift_unknownObjectRetain(v4);
}

uint64_t sub_60630()
{
  return type metadata accessor for BaseFlowController(0);
}

uint64_t type metadata accessor for BaseFlowController(uint64_t a1)
{
  uint64_t result;

  result = qword_3D2B88;
  if (!qword_3D2B88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BaseFlowController);
  return result;
}

uint64_t sub_60674(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_2F2418;
  v4[1] = &unk_2F2430;
  v4[2] = &unk_2F2430;
  v4[3] = &unk_2F2448;
  v4[4] = &unk_2F2460;
  v4[5] = &unk_2F2430;
  v4[6] = &unk_2F2430;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for MetricsPipeline(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(result - 8) + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BaseFlowController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BaseFlowController);
}

uint64_t dispatch thunk of BaseFlowController.debugActionsProvider.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of BaseFlowController.debugActionsProvider.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of BaseFlowController.debugActionsProvider.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of BaseFlowController.metricsPipeline.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of BaseFlowController.metricsPipeline.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of BaseFlowController.metricsPipeline.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of BaseFlowController.viewController(for:referrer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of BaseFlowController.show(destination:hints:referrer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of BaseFlowController.change(tab:execute:popToRoot:preserveTransientView:userInitiated:suppressMetrics:objectGraph:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of BaseFlowController.dismiss(_:animate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of BaseFlowController.pop(animate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

void sub_607B8(char a1)
{
  id v1;
  id v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    v3 = xmmword_2F2340;
    v5 = 0;
    v6 = 0;
    v4 = 0;
    v1 = objc_allocWithZone((Class)type metadata accessor for HUDViewController());
    v2 = HUDViewController.init(type:)(&v3);
    sub_1068BC();

  }
}

id sub_608A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ComposeReviewDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ComposeReviewDelegate()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21ComposeReviewDelegate);
}

void sub_60900(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AppEntityVisualState(0);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = qword_3DDDC8;
  v14 = *(_QWORD *)&v2[qword_3DDDC8];
  if (!v14)
  {
    if (!a1)
      return;
LABEL_6:
    if (!objc_msgSend(v2, "isViewLoaded", v10))
      return;
    v15 = *(void **)&v2[v13];
    if (v15)
    {
      v16 = type metadata accessor for AppEntityViewAnnotation(0);
      v17 = swift_dynamicCastClass(v15, v16);
      if (v17)
      {
        v18 = v17;
        v19 = v15;
        v20 = objc_msgSend(v2, "view");
        if (v20)
        {
          v21 = v20;
          UIView.annotate(with:)(v18);

          v22 = objc_msgSend(v2, "view");
          if (v22)
          {
            v23 = v22;
            static AppEntityVisualState.primary.getter();
            UIView.updateAppEntityAnnotation(with:)(v12);

            (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
LABEL_18:

            return;
          }
LABEL_22:
          __break(1u);
          return;
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      static Logger.appIntents.getter();
      v24 = v2;
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc(12, -1);
        v35 = swift_slowAlloc(32, -1);
        v37 = v35;
        *(_DWORD *)v27 = 136315138;
        v34 = v27 + 4;
        v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F50);
        v29 = _typeName(_:qualified:)(v28, 0);
        v31 = v30;
        v36 = sub_37E78(v29, v30, &v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);

        swift_bridgeObjectRelease(v31);
        _os_log_impl(&dword_0, v25, v26, "entityAnnotation expected AppEntityViewAnnotation but found %s instead.", v27, 0xCu);
        v32 = v35;
        swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v32, -1, -1);
        swift_slowDealloc(v27, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    v33 = objc_msgSend(v2, "view");
    if (v33)
    {
      v19 = v33;
      UIView.removeAnnotation()();
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (!a1 || v14 != a1)
    goto LABEL_6;
}

void sub_60C08(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  char *v3;
  id v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *boxed_opaque_existential_0;
  id v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  _QWORD v18[5];

  v7 = objc_msgSend(v3, "navigationItem");
  v8 = objc_msgSend(v7, "largeTitleDisplayMode");

  v10 = qword_3DDE70;
  if (*(_QWORD *)&v3[qword_3DDE70] != 3)
    goto LABEL_4;
  v11 = type metadata accessor for Podcasts(0, v9);
  v18[3] = v11;
  v18[4] = sub_89A0(&qword_3D2F80, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(boxed_opaque_existential_0, enum case for Podcasts.compactLargeTitles(_:), v11);
  LOBYTE(v11) = isFeatureEnabled(_:)(v18);
  __swift_destroy_boxed_opaque_existential_0(v18);
  if ((v11 & 1) == 0)
    goto LABEL_5;
  v13 = objc_msgSend(v3, "traitCollection");
  v14 = (char *)objc_msgSend(v13, "horizontalSizeClass");

  if (v14 == (_BYTE *)&dword_0 + 1)
  {
LABEL_4:
    v15 = objc_msgSend(v3, "navigationItem");
    objc_msgSend(v15, "setLargeTitleDisplayMode:", *(_QWORD *)&v3[v10]);
  }
  else
  {
LABEL_5:
    v15 = objc_msgSend(v3, "navigationItem");
    objc_msgSend(v15, "setLargeTitleDisplayMode:", 1);
  }

  v16 = objc_msgSend(v3, "navigationItem");
  v17 = objc_msgSend(v16, "largeTitleDisplayMode");

  if (v8 != v17)
    sub_8B248(a1, a2, a3);
}

uint64_t sub_60DD0(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v7 = v3;
  v8 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v21 - v13;
  v15 = *(_QWORD *)(v3 + qword_3DDD70);
  v16 = ((uint64_t (*)(_QWORD, __n128))a1)(0, v12);
  v17 = sub_89A0(a2, a1, a3);
  dispatch thunk of ModernPagePresenter.interactionContextPage.getter(v16, v17);
  sub_1B79C((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 17)
  {
    v18 = 6;
LABEL_6:
    v19 = NavigationTab.description.getter(v18);
    sub_7C28(v18);
    return v19;
  }
  sub_FA4C((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  v18 = *(_QWORD *)(v7 + qword_3DDD78);
  if (v18 != 18)
  {
    sub_3D600(v18);
    goto LABEL_6;
  }
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  v22 = v15;
  _print_unlocked<A, B>(_:_:)(&v22, v23, v16, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  return v23[0];
}

char *sub_60F64(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  objc_class *v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  char *v162;
  id v163;
  char *v164;
  uint64_t v165;
  objc_class *ObjectType;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  _QWORD v182[3];
  objc_super v183;
  __int128 v184;
  uint64_t v185;
  void *v186;

  v180 = a2;
  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v4 = *(_QWORD *)(v3 - 8);
  v173 = v3;
  v174 = v4;
  __chkstk_darwin(v3);
  v172 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v171 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v164 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ModernStationDetailPresenter.Configuration(0, v10);
  v178 = *(_QWORD *)(v12 - 8);
  v179 = v12;
  __chkstk_darwin(v12);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v175 = *(_QWORD *)(v14 - 8);
  v176 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v15);
  v165 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v25 = &v2[qword_3FD5D8];
  v26 = enum case for FlowDestinationPageHeader.standard(_:);
  v27 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  v28 = &v2[qword_3DDD80];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v29 = &v2[qword_3DDE58];
  LOBYTE(v184) = 0;
  v30 = v2;
  Published.init(initialValue:)(&v184, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v30[qword_3DDE00] = 0;
  v31 = &v30[qword_3DDE60];
  v32 = type metadata accessor for InteractionContext.Page(0);
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v30[qword_3DDE68] = 1;
  *(_QWORD *)&v30[qword_3DDE70] = 0;
  *(_QWORD *)&v30[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v30[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v34 = &v30[qword_3DDE78];
  v35 = type metadata accessor for PageID(0, v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v30[qword_3DDDB8];
  v30[qword_3DDDB8] = 0;
  v37 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *(_QWORD *)&v30[qword_3FD5F0] = 0;
  *(_QWORD *)&v30[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v30[qword_3DDE88] = 0;
  v38 = &v30[qword_3FD5E8];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)&v30[qword_3DDE90] = 0;
  v39 = &v30[qword_3DDE98];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v40 = &v30[qword_3DDDC0];
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v43 = type metadata accessor for Header(0, v42);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
  v40[v41] = 1;
  v30[qword_3DDE30] = 0;
  *(_QWORD *)&v30[qword_3DDDA0] = 0;
  v30[qword_3DDDD0] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v184, v44, v44);
  *(_OWORD *)&v30[qword_3DDE28] = v184;
  v45 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v184, v45, v45);
  *(_QWORD *)&v30[qword_3DDD90] = v184;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v184, v46, v46);
  sub_1B738(&v184, (uint64_t)&v30[qword_3DDE48]);
  v47 = type metadata accessor for PageActionRunner();
  v48 = swift_allocObject(v47, 40, 7);
  swift_unknownObjectWeakInit(v48 + 16, 0);
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)&v30[qword_3DDE40] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v50 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v167 = v48;
  *(_QWORD *)&v184 = v48;
  *((_QWORD *)&v184 + 1) = v50;
  swift_retain(v48);
  v51 = BaseObjectGraph.satisfying<A>(_:with:)(v49, &v184, v49);
  v52 = type metadata accessor for FreezableContentSubject(0);
  v163 = (id)objc_opt_self(NSNotificationCenter);
  v53 = objc_msgSend(v163, "defaultCenter");
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = FreezableContentSubject.init(notificationCenter:)(v53);
  *(_QWORD *)&v184 = v54;
  v55 = BaseObjectGraph.satisfying<A>(_:with:)(v52, &v184, v52);
  swift_release(v54);
  swift_release(v51);
  v56 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v58 = ClickLocationTracker.init()(v57);
  *(_QWORD *)&v184 = v58;
  v59 = BaseObjectGraph.satisfying<A>(_:with:)(v56, &v184, v56);
  v60 = swift_retain(v58);
  v61 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v58, v60);
  swift_release(v55);
  swift_release(v59);
  v62 = swift_release_n(v58, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v62);
  v63 = BaseObjectGraph.addingImpressionsTracker(with:)(v20);
  v64 = swift_release(v61);
  v65 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v20, v18, v64);
  static ImpressionsCalculator.Configuration.half.getter(v65);
  v66 = BaseObjectGraph.addingImpressionsCalculator(with:)(v17);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v17, v176, v67);
  v68 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = SearchFiltersSource.init()();
  *(_QWORD *)&v184 = v69;
  v70 = BaseObjectGraph.satisfying<A>(_:with:)(v68, &v184, v68);
  v71 = swift_retain(v69);
  v72 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v69, v71);
  swift_release(v66);
  swift_release(v70);
  swift_release_n(v69, 2);
  v73 = type metadata accessor for MetricsController(0);
  v74 = BaseObjectGraph.satisfying<A>(_:with:)(v73, sub_2356FC, 0, v73);
  swift_release(v72);
  v75 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v184, v75, v75);
  *(_QWORD *)&v30[qword_3DDE38] = v184;
  BaseObjectGraph.inject<A>(_:)(&v184, v73, v73);
  *(_QWORD *)&v30[qword_3DDE08] = v184;
  v76 = v74;
  *(_QWORD *)&v30[qword_3DDD98] = v74;
  v78 = type metadata accessor for ModernStationDetailPresenter(0, v77);
  v79 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v162, v180, v179);
  v80 = sub_89A0(&qword_3D3158, (uint64_t (*)(uint64_t))&type metadata accessor for ModernStationDetailPresenter, (uint64_t)&protocol conformance descriptor for ModernStationDetailPresenter);
  v81 = swift_retain_n(v74, 2);
  v82 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v81, v79, v78, v80);
  *(_QWORD *)&v30[qword_3DDD70] = v82;
  v83 = swift_retain(v82);
  v84 = (uint64_t)v164;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v78, v80, v83);
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  LOBYTE(v79) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v78, v80);
  LOBYTE(v74) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v78, v80);
  v86 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_retain(v76);
  v87 = sub_39E0C(v84, v85, v79 & 1, v74 & 1, v76);
  swift_release(v76);
  swift_release(v85);
  *(_QWORD *)&v30[qword_3DDDA8] = v87;
  v185 = v78;
  v186 = &protocol witness table for ModernStationDetailPresenter;
  *(_QWORD *)&v184 = v82;
  swift_retain(v82);
  v88 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  v89 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v76;
  swift_retain(v76);
  v91 = sub_E2290(v90, (uint64_t)&v184, v88);
  swift_release(v76);
  swift_release(v88);
  *(_QWORD *)&v30[qword_3DDDB0] = v91;

  v92 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v183.receiver = v30;
  v183.super_class = ObjectType;
  v93 = (char *)objc_msgSendSuper2(&v183, "initWithCollectionViewLayout:", v92);

  v94 = *(_QWORD *)&v93[qword_3DDE40];
  swift_unknownObjectWeakAssign(v94 + 16, v93);
  v95 = swift_allocObject(&unk_37D680, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v93);
  v96 = *(_QWORD *)(v94 + 24);
  v97 = *(_QWORD *)(v94 + 32);
  *(_QWORD *)(v94 + 24) = sub_8D14C;
  *(_QWORD *)(v94 + 32) = v95;
  v98 = v93;
  sub_1D618(v96, v97);
  v99 = v78;
  v176 = v78;
  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.pageContent.getter(v78, v80);
  v100 = swift_allocObject(&unk_37D680, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v98);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_8DF78, v100, v101, v102);
  swift_release(v100);
  swift_release(v184);
  v104 = &v98[qword_3DDDF8];
  swift_beginAccess(&v98[qword_3DDDF8], &v184, 33, 0);
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  v107 = swift_release(v103);
  v175 = v80;
  v108 = dispatch thunk of ModernPagePresenter.pageRender.getter(v99, v80, v107);
  v110 = v109;
  v111 = swift_getObjectType();
  *(_QWORD *)&v184 = v108;
  v112 = swift_allocObject(&unk_37D680, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v98);
  v113 = Publisher<>.sink(receiveValue:)(sub_8D18C, v112, v111, *(_QWORD *)(v110 + 8));
  swift_release(v112);
  swift_unknownObjectRelease(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  *(_QWORD *)&v114 = swift_release(v113).n128_u64[0];
  v115 = objc_msgSend(v163, "defaultCenter", v114);
  objc_msgSend(v115, "addObserver:selector:name:object:", v98, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v176, v80);
  v116 = swift_allocObject(&unk_37D680, 24, 7);
  swift_unknownObjectWeakInit(v116 + 16, v98);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v118 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v119 = Publisher<>.sink(receiveValue:)(sub_8DFA0, v116, v117, v118);
  swift_release(v116);
  swift_release(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  swift_release(v119);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v98[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v98[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v184, 0, 0);
  v123 = *v122;
  v182[0] = v123;
  v124 = swift_allocObject(&unk_37D680, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v98);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8DFD4, v124, v125, v126);
  swift_release(v124);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  ObjectType = (objc_class *)v105;
  v128 = v106;
  v164 = (char *)v106;
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(v182);
  swift_release(v127);
  v130 = v175;
  v129 = v176;
  v182[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v176, v175);
  v131 = swift_allocObject(&unk_37D680, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16, v98);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v133 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v134 = Publisher<>.sink(receiveValue:)(sub_8E004, v131, v132, v133);
  swift_release(v131);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v128);
  swift_endAccess(v182);
  v135 = swift_release(v134);
  v182[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v129, v130, v135);
  v136 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v181 = (id)static OS_dispatch_queue.main.getter(v137);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v139 = (uint64_t)v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v168, 1, 1, v138);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v141 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v142 = sub_1E2DC();
  v143 = v169;
  Publisher.receive<A>(on:options:)(&v181, v139, v140, v136, v141, v142);
  sub_D1D4(v139, &qword_3D2E70);

  swift_release(v182[0]);
  v144 = swift_allocObject(&unk_37D680, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v98);
  v145 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v146 = v170;
  v147 = Publisher<>.sink(receiveValue:)(sub_8E358, v144, v170, v145);
  v148 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v143, v146, v148);
  swift_beginAccess(v104, v182, 33, 0);
  v149 = ObjectType;
  v150 = v164;
  AnyCancellable.store<A>(in:)(v104, ObjectType, v164);
  swift_endAccess(v182);
  v151 = swift_release(v147);
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v129, v175, v151);
  v182[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v172;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D680, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v98);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v173;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v173, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v155, v158, v160);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v149, v150);
  swift_endAccess(v182);
  swift_release(v167);
  swift_release(v165);
  swift_release(v82);
  swift_release(v177);
  swift_release(v159);

  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
  return v98;
}

char *sub_621C4(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  objc_class *v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  char *v162;
  id v163;
  char *v164;
  uint64_t v165;
  objc_class *ObjectType;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  _QWORD v182[3];
  objc_super v183;
  __int128 v184;
  uint64_t v185;
  void *v186;

  v180 = a2;
  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v4 = *(_QWORD *)(v3 - 8);
  v173 = v3;
  v174 = v4;
  __chkstk_darwin(v3);
  v172 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v171 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v164 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SeeAllEpisodesPresenter.Configuration(0, v10);
  v178 = *(_QWORD *)(v12 - 8);
  v179 = v12;
  __chkstk_darwin(v12);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v175 = *(_QWORD *)(v14 - 8);
  v176 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v15);
  v165 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v25 = &v2[qword_3FD5D8];
  v26 = enum case for FlowDestinationPageHeader.standard(_:);
  v27 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  v28 = &v2[qword_3DDD80];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v29 = &v2[qword_3DDE58];
  LOBYTE(v184) = 0;
  v30 = v2;
  Published.init(initialValue:)(&v184, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v30[qword_3DDE00] = 0;
  v31 = &v30[qword_3DDE60];
  v32 = type metadata accessor for InteractionContext.Page(0);
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v30[qword_3DDE68] = 1;
  *(_QWORD *)&v30[qword_3DDE70] = 0;
  *(_QWORD *)&v30[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v30[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v34 = &v30[qword_3DDE78];
  v35 = type metadata accessor for PageID(0, v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v30[qword_3DDDB8];
  v30[qword_3DDDB8] = 0;
  v37 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *(_QWORD *)&v30[qword_3FD5F0] = 0;
  *(_QWORD *)&v30[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v30[qword_3DDE88] = 0;
  v38 = &v30[qword_3FD5E8];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)&v30[qword_3DDE90] = 0;
  v39 = &v30[qword_3DDE98];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v40 = &v30[qword_3DDDC0];
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v43 = type metadata accessor for Header(0, v42);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
  v40[v41] = 1;
  v30[qword_3DDE30] = 0;
  *(_QWORD *)&v30[qword_3DDDA0] = 0;
  v30[qword_3DDDD0] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v184, v44, v44);
  *(_OWORD *)&v30[qword_3DDE28] = v184;
  v45 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v184, v45, v45);
  *(_QWORD *)&v30[qword_3DDD90] = v184;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v184, v46, v46);
  sub_1B738(&v184, (uint64_t)&v30[qword_3DDE48]);
  v47 = type metadata accessor for PageActionRunner();
  v48 = swift_allocObject(v47, 40, 7);
  swift_unknownObjectWeakInit(v48 + 16, 0);
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)&v30[qword_3DDE40] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v50 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v167 = v48;
  *(_QWORD *)&v184 = v48;
  *((_QWORD *)&v184 + 1) = v50;
  swift_retain(v48);
  v51 = BaseObjectGraph.satisfying<A>(_:with:)(v49, &v184, v49);
  v52 = type metadata accessor for FreezableContentSubject(0);
  v163 = (id)objc_opt_self(NSNotificationCenter);
  v53 = objc_msgSend(v163, "defaultCenter");
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = FreezableContentSubject.init(notificationCenter:)(v53);
  *(_QWORD *)&v184 = v54;
  v55 = BaseObjectGraph.satisfying<A>(_:with:)(v52, &v184, v52);
  swift_release(v54);
  swift_release(v51);
  v56 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v58 = ClickLocationTracker.init()(v57);
  *(_QWORD *)&v184 = v58;
  v59 = BaseObjectGraph.satisfying<A>(_:with:)(v56, &v184, v56);
  v60 = swift_retain(v58);
  v61 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v58, v60);
  swift_release(v55);
  swift_release(v59);
  v62 = swift_release_n(v58, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v62);
  v63 = BaseObjectGraph.addingImpressionsTracker(with:)(v20);
  v64 = swift_release(v61);
  v65 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v20, v18, v64);
  static ImpressionsCalculator.Configuration.half.getter(v65);
  v66 = BaseObjectGraph.addingImpressionsCalculator(with:)(v17);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v17, v176, v67);
  v68 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = SearchFiltersSource.init()();
  *(_QWORD *)&v184 = v69;
  v70 = BaseObjectGraph.satisfying<A>(_:with:)(v68, &v184, v68);
  v71 = swift_retain(v69);
  v72 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v69, v71);
  swift_release(v66);
  swift_release(v70);
  swift_release_n(v69, 2);
  v73 = type metadata accessor for MetricsController(0);
  v74 = BaseObjectGraph.satisfying<A>(_:with:)(v73, sub_2356FC, 0, v73);
  swift_release(v72);
  v75 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v184, v75, v75);
  *(_QWORD *)&v30[qword_3DDE38] = v184;
  BaseObjectGraph.inject<A>(_:)(&v184, v73, v73);
  *(_QWORD *)&v30[qword_3DDE08] = v184;
  v76 = v74;
  *(_QWORD *)&v30[qword_3DDD98] = v74;
  v78 = type metadata accessor for SeeAllEpisodesPresenter(0, v77);
  v79 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v162, v180, v179);
  v80 = sub_89A0(&qword_3D3138, (uint64_t (*)(uint64_t))&type metadata accessor for SeeAllEpisodesPresenter, (uint64_t)&protocol conformance descriptor for SeeAllEpisodesPresenter);
  v81 = swift_retain_n(v74, 2);
  v82 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v81, v79, v78, v80);
  *(_QWORD *)&v30[qword_3DDD70] = v82;
  v83 = swift_retain(v82);
  v84 = (uint64_t)v164;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v78, v80, v83);
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  LOBYTE(v79) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v78, v80);
  LOBYTE(v74) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v78, v80);
  v86 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_retain(v76);
  v87 = sub_39E0C(v84, v85, v79 & 1, v74 & 1, v76);
  swift_release(v76);
  swift_release(v85);
  *(_QWORD *)&v30[qword_3DDDA8] = v87;
  v185 = v78;
  v186 = &protocol witness table for SeeAllEpisodesPresenter;
  *(_QWORD *)&v184 = v82;
  swift_retain(v82);
  v88 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  v89 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v76;
  swift_retain(v76);
  v91 = sub_E2290(v90, (uint64_t)&v184, v88);
  swift_release(v76);
  swift_release(v88);
  *(_QWORD *)&v30[qword_3DDDB0] = v91;

  v92 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v183.receiver = v30;
  v183.super_class = ObjectType;
  v93 = (char *)objc_msgSendSuper2(&v183, "initWithCollectionViewLayout:", v92);

  v94 = *(_QWORD *)&v93[qword_3DDE40];
  swift_unknownObjectWeakAssign(v94 + 16, v93);
  v95 = swift_allocObject(&unk_37D540, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v93);
  v96 = *(_QWORD *)(v94 + 24);
  v97 = *(_QWORD *)(v94 + 32);
  *(_QWORD *)(v94 + 24) = sub_8D14C;
  *(_QWORD *)(v94 + 32) = v95;
  v98 = v93;
  sub_1D618(v96, v97);
  v99 = v78;
  v176 = v78;
  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.pageContent.getter(v78, v80);
  v100 = swift_allocObject(&unk_37D540, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v98);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_8DDF0, v100, v101, v102);
  swift_release(v100);
  swift_release(v184);
  v104 = &v98[qword_3DDDF8];
  swift_beginAccess(&v98[qword_3DDDF8], &v184, 33, 0);
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  v107 = swift_release(v103);
  v175 = v80;
  v108 = dispatch thunk of ModernPagePresenter.pageRender.getter(v99, v80, v107);
  v110 = v109;
  v111 = swift_getObjectType();
  *(_QWORD *)&v184 = v108;
  v112 = swift_allocObject(&unk_37D540, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v98);
  v113 = Publisher<>.sink(receiveValue:)(sub_8D18C, v112, v111, *(_QWORD *)(v110 + 8));
  swift_release(v112);
  swift_unknownObjectRelease(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  *(_QWORD *)&v114 = swift_release(v113).n128_u64[0];
  v115 = objc_msgSend(v163, "defaultCenter", v114);
  objc_msgSend(v115, "addObserver:selector:name:object:", v98, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v176, v80);
  v116 = swift_allocObject(&unk_37D540, 24, 7);
  swift_unknownObjectWeakInit(v116 + 16, v98);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v118 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v119 = Publisher<>.sink(receiveValue:)(sub_8DE18, v116, v117, v118);
  swift_release(v116);
  swift_release(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  swift_release(v119);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v98[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v98[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v184, 0, 0);
  v123 = *v122;
  v182[0] = v123;
  v124 = swift_allocObject(&unk_37D540, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v98);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8DE4C, v124, v125, v126);
  swift_release(v124);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  ObjectType = (objc_class *)v105;
  v128 = v106;
  v164 = (char *)v106;
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(v182);
  swift_release(v127);
  v130 = v175;
  v129 = v176;
  v182[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v176, v175);
  v131 = swift_allocObject(&unk_37D540, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16, v98);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v133 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v134 = Publisher<>.sink(receiveValue:)(sub_8DE7C, v131, v132, v133);
  swift_release(v131);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v128);
  swift_endAccess(v182);
  v135 = swift_release(v134);
  v182[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v129, v130, v135);
  v136 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v181 = (id)static OS_dispatch_queue.main.getter(v137);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v139 = (uint64_t)v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v168, 1, 1, v138);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v141 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v142 = sub_1E2DC();
  v143 = v169;
  Publisher.receive<A>(on:options:)(&v181, v139, v140, v136, v141, v142);
  sub_D1D4(v139, &qword_3D2E70);

  swift_release(v182[0]);
  v144 = swift_allocObject(&unk_37D540, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v98);
  v145 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v146 = v170;
  v147 = Publisher<>.sink(receiveValue:)(sub_8E358, v144, v170, v145);
  v148 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v143, v146, v148);
  swift_beginAccess(v104, v182, 33, 0);
  v149 = ObjectType;
  v150 = v164;
  AnyCancellable.store<A>(in:)(v104, ObjectType, v164);
  swift_endAccess(v182);
  v151 = swift_release(v147);
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v129, v175, v151);
  v182[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v172;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D540, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v98);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v173;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v173, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v155, v158, v160);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v149, v150);
  swift_endAccess(v182);
  swift_release(v167);
  swift_release(v165);
  swift_release(v82);
  swift_release(v177);
  swift_release(v159);

  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
  return v98;
}

char *sub_63424(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  id v88;
  id v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  objc_class *v112;
  double v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __n128 v147;
  objc_class *v148;
  char *v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  objc_class *ObjectType;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  _QWORD v180[3];
  objc_super v181;
  __int128 v182;
  uint64_t v183;
  void *v184;

  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v3 = *(_QWORD *)(v2 - 8);
  v172 = v2;
  v173 = v3;
  __chkstk_darwin(v2);
  v171 = (char *)&v162 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v5);
  v167 = (char *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v170 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  __chkstk_darwin(v8);
  v174 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v176 = *(_QWORD *)(v178 - 8);
  v10 = __chkstk_darwin(v178);
  v12 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v10);
  v165 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[qword_3DDD68] = 0;
  *(_QWORD *)&v1[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[qword_3DDE20] = 0;
  v20 = &v1[qword_3FD5D8];
  v21 = enum case for FlowDestinationPageHeader.standard(_:);
  v22 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v23 = &v1[qword_3DDD80];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *(_QWORD *)&v1[qword_3DDD78] = 18;
  *(_QWORD *)&v1[qword_3DDDC8] = 0;
  v24 = &v1[qword_3DDE58];
  LOBYTE(v182) = 0;
  v25 = v1;
  Published.init(initialValue:)(&v182, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v19, v16);
  v25[qword_3DDE00] = 0;
  v26 = &v25[qword_3DDE60];
  v27 = type metadata accessor for InteractionContext.Page(0);
  v28.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v25[qword_3DDE68] = 1;
  *(_QWORD *)&v25[qword_3DDE70] = 0;
  *(_QWORD *)&v25[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v25[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v29 = &v25[qword_3DDE78];
  v30 = type metadata accessor for PageID(0, v28);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = &v25[qword_3DDDB8];
  v25[qword_3DDDB8] = 0;
  v32 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  *(_QWORD *)&v25[qword_3FD5F0] = 0;
  *(_QWORD *)&v25[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v25[qword_3DDE88] = 0;
  v33 = &v25[qword_3FD5E8];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  *((_QWORD *)v33 + 2) = 0;
  *(_QWORD *)&v25[qword_3DDE90] = 0;
  v34 = &v25[qword_3DDE98];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 1;
  v35 = &v25[qword_3DDDC0];
  v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v38 = type metadata accessor for Header(0, v37);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
  v35[v36] = 1;
  v25[qword_3DDE30] = 0;
  *(_QWORD *)&v25[qword_3DDDA0] = 0;
  v25[qword_3DDDD0] = 0;
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v182, v39, v39);
  *(_OWORD *)&v25[qword_3DDE28] = v182;
  v40 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v182, v40, v40);
  *(_QWORD *)&v25[qword_3DDD90] = v182;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v182, v41, v41);
  sub_1B738(&v182, (uint64_t)&v25[qword_3DDE48]);
  v42 = type metadata accessor for PageActionRunner();
  v43 = swift_allocObject(v42, 40, 7);
  swift_unknownObjectWeakInit(v43 + 16, 0);
  *(_QWORD *)(v43 + 24) = 0;
  *(_QWORD *)(v43 + 32) = 0;
  *(_QWORD *)&v25[qword_3DDE40] = v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v45 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v166 = v43;
  *(_QWORD *)&v182 = v43;
  *((_QWORD *)&v182 + 1) = v45;
  swift_retain(v43);
  v46 = BaseObjectGraph.satisfying<A>(_:with:)(v44, &v182, v44);
  v47 = type metadata accessor for FreezableContentSubject(0);
  v164 = (id)objc_opt_self(NSNotificationCenter);
  v48 = objc_msgSend(v164, "defaultCenter");
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  v49 = FreezableContentSubject.init(notificationCenter:)(v48);
  *(_QWORD *)&v182 = v49;
  v50 = BaseObjectGraph.satisfying<A>(_:with:)(v47, &v182, v47);
  swift_release(v49);
  swift_release(v46);
  v51 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  v53 = ClickLocationTracker.init()(v52);
  *(_QWORD *)&v182 = v53;
  v54 = BaseObjectGraph.satisfying<A>(_:with:)(v51, &v182, v51);
  v55 = swift_retain(v53);
  v56 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v53, v55);
  swift_release(v50);
  swift_release(v54);
  v57 = swift_release_n(v53, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v57);
  v58 = BaseObjectGraph.addingImpressionsTracker(with:)(v15);
  v59 = swift_release(v56);
  v60 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v15, v13, v59);
  static ImpressionsCalculator.Configuration.half.getter(v60);
  v61 = BaseObjectGraph.addingImpressionsCalculator(with:)(v12);
  v62 = swift_release(v58);
  (*(void (**)(char *, uint64_t, __n128))(v176 + 8))(v12, v178, v62);
  v63 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
  v64 = SearchFiltersSource.init()();
  *(_QWORD *)&v182 = v64;
  v65 = BaseObjectGraph.satisfying<A>(_:with:)(v63, &v182, v63);
  v66 = swift_retain(v64);
  v67 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v64, v66);
  swift_release(v61);
  swift_release(v65);
  swift_release_n(v64, 2);
  v68 = type metadata accessor for MetricsController(0);
  v69 = BaseObjectGraph.satisfying<A>(_:with:)(v68, sub_2356FC, 0, v68);
  swift_release(v67);
  v70 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v182, v70, v70);
  *(_QWORD *)&v25[qword_3DDE38] = v182;
  BaseObjectGraph.inject<A>(_:)(&v182, v68, v68);
  *(_QWORD *)&v25[qword_3DDE08] = v182;
  v71 = v69;
  *(_QWORD *)&v25[qword_3DDD98] = v69;
  v73 = type metadata accessor for SearchPresenter(0, v72);
  v74 = sub_89A0(&qword_3D3128, (uint64_t (*)(uint64_t))&type metadata accessor for SearchPresenter, (uint64_t)&protocol conformance descriptor for SearchPresenter);
  v75 = swift_retain_n(v69, 2);
  v77 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v75, v76, v73, v74);
  *(_QWORD *)&v25[qword_3DDD70] = v77;
  v78 = swift_retain(v77);
  v79 = (uint64_t)v174;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v73, v74, v78);
  v80 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v73, v74);
  LOBYTE(v15) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v73, v74);
  v81 = v77;
  LOBYTE(v77) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v73, v74);
  v82 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
  swift_retain(v71);
  v83 = sub_39E0C(v79, v80, v15 & 1, v77 & 1, v71);
  swift_release(v71);
  swift_release(v80);
  *(_QWORD *)&v25[qword_3DDDA8] = v83;
  v183 = v73;
  v184 = &protocol witness table for SearchPresenter;
  *(_QWORD *)&v182 = v81;
  swift_retain(v81);
  v84 = v74;
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v73, v74);
  v86 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v71;
  swift_retain(v71);
  v88 = sub_E2290(v87, (uint64_t)&v182, v85);
  swift_release(v71);
  swift_release(v85);
  *(_QWORD *)&v25[qword_3DDDB0] = v88;

  v89 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v181.receiver = v25;
  v181.super_class = ObjectType;
  v90 = (char *)objc_msgSendSuper2(&v181, "initWithCollectionViewLayout:", v89);

  v91 = *(_QWORD *)&v90[qword_3DDE40];
  swift_unknownObjectWeakAssign(v91 + 16, v90);
  v92 = swift_allocObject(&unk_37D4A0, 24, 7);
  swift_unknownObjectWeakInit(v92 + 16, v90);
  v93 = *(_QWORD *)(v91 + 24);
  v94 = *(_QWORD *)(v91 + 32);
  *(_QWORD *)(v91 + 24) = sub_8D14C;
  *(_QWORD *)(v91 + 32) = v92;
  v95 = v90;
  sub_1D618(v93, v94);
  v178 = v81;
  *(_QWORD *)&v182 = dispatch thunk of ModernPagePresenter.pageContent.getter(v73, v84);
  v96 = swift_allocObject(&unk_37D4A0, 24, 7);
  swift_unknownObjectWeakInit(v96 + 16, v95);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v98 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v99 = Publisher<>.sink(receiveValue:)(sub_8DD2C, v96, v97, v98);
  swift_release(v96);
  swift_release(v182);
  v100 = &v95[qword_3DDDF8];
  swift_beginAccess(&v95[qword_3DDDF8], &v182, 33, 0);
  v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  ObjectType = (objc_class *)v101;
  v102 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  v103 = v101;
  v104 = v102;
  v174 = (char *)v102;
  AnyCancellable.store<A>(in:)(v100, v103, v102);
  swift_endAccess(&v182);
  v105 = swift_release(v99);
  v163 = v73;
  v176 = v84;
  v106 = dispatch thunk of ModernPagePresenter.pageRender.getter(v73, v84, v105);
  v108 = v107;
  v109 = swift_getObjectType();
  *(_QWORD *)&v182 = v106;
  v110 = swift_allocObject(&unk_37D4A0, 24, 7);
  swift_unknownObjectWeakInit(v110 + 16, v95);
  v111 = Publisher<>.sink(receiveValue:)(sub_8D18C, v110, v109, *(_QWORD *)(v108 + 8));
  swift_release(v110);
  swift_unknownObjectRelease(v182);
  swift_beginAccess(v100, &v182, 33, 0);
  v112 = ObjectType;
  AnyCancellable.store<A>(in:)(v100, ObjectType, v104);
  swift_endAccess(&v182);
  *(_QWORD *)&v113 = swift_release(v111).n128_u64[0];
  v114 = objc_msgSend(v164, "defaultCenter", v113);
  objc_msgSend(v114, "addObserver:selector:name:object:", v95, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v182 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v73, v84);
  v115 = swift_allocObject(&unk_37D4A0, 24, 7);
  swift_unknownObjectWeakInit(v115 + 16, v95);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v117 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v118 = Publisher<>.sink(receiveValue:)(sub_8DD54, v115, v116, v117);
  swift_release(v115);
  swift_release(v182);
  swift_beginAccess(v100, &v182, 33, 0);
  v119 = v174;
  AnyCancellable.store<A>(in:)(v100, v112, v174);
  swift_endAccess(&v182);
  swift_release(v118);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v95[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v95[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v182, 0, 0);
  v123 = *v122;
  v180[0] = v123;
  v124 = swift_allocObject(&unk_37D4A0, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v95);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8DD88, v124, v125, v126);
  swift_release(v124);
  swift_release(v180[0]);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v112, v119);
  swift_endAccess(v180);
  swift_release(v127);
  v128 = v163;
  v129 = v176;
  v180[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v163, v176);
  v130 = swift_allocObject(&unk_37D4A0, 24, 7);
  swift_unknownObjectWeakInit(v130 + 16, v95);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v132 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v133 = Publisher<>.sink(receiveValue:)(sub_8DDB8, v130, v131, v132);
  swift_release(v130);
  swift_release(v180[0]);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v112, v119);
  swift_endAccess(v180);
  v134 = swift_release(v133);
  v180[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v128, v129, v134);
  v135 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v179 = (id)static OS_dispatch_queue.main.getter(v136);
  v137 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v138 = (uint64_t)v167;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v167, 1, 1, v137);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v140 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v141 = sub_1E2DC();
  v142 = v168;
  Publisher.receive<A>(on:options:)(&v179, v138, v139, v135, v140, v141);
  sub_D1D4(v138, &qword_3D2E70);

  swift_release(v180[0]);
  v143 = swift_allocObject(&unk_37D4A0, 24, 7);
  swift_unknownObjectWeakInit(v143 + 16, v95);
  v144 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v145 = v169;
  v146 = Publisher<>.sink(receiveValue:)(sub_8E358, v143, v169, v144);
  v147 = swift_release(v143);
  (*(void (**)(char *, uint64_t, __n128))(v170 + 8))(v142, v145, v147);
  swift_beginAccess(v100, v180, 33, 0);
  v149 = v174;
  v148 = ObjectType;
  AnyCancellable.store<A>(in:)(v100, ObjectType, v174);
  swift_endAccess(v180);
  v150 = swift_release(v146);
  v151 = v178;
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v128, v176, v150);
  v180[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v171;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D4A0, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v95);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v172;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v172, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v173 + 8))(v155, v158, v160);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v148, v149);
  swift_endAccess(v180);
  swift_release(v166);
  swift_release(v165);
  swift_release(v151);
  swift_release(v177);
  swift_release(v159);

  return v95;
}

char *sub_645F4(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  objc_class *v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  char *v162;
  id v163;
  char *v164;
  uint64_t v165;
  objc_class *ObjectType;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  _QWORD v182[3];
  objc_super v183;
  __int128 v184;
  uint64_t v185;
  void *v186;

  v180 = a2;
  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v4 = *(_QWORD *)(v3 - 8);
  v173 = v3;
  v174 = v4;
  __chkstk_darwin(v3);
  v172 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v171 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v164 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ShowListPresenter.Configuration(0, v10);
  v178 = *(_QWORD *)(v12 - 8);
  v179 = v12;
  __chkstk_darwin(v12);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v175 = *(_QWORD *)(v14 - 8);
  v176 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v15);
  v165 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v25 = &v2[qword_3FD5D8];
  v26 = enum case for FlowDestinationPageHeader.standard(_:);
  v27 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  v28 = &v2[qword_3DDD80];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v29 = &v2[qword_3DDE58];
  LOBYTE(v184) = 0;
  v30 = v2;
  Published.init(initialValue:)(&v184, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v30[qword_3DDE00] = 0;
  v31 = &v30[qword_3DDE60];
  v32 = type metadata accessor for InteractionContext.Page(0);
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v30[qword_3DDE68] = 1;
  *(_QWORD *)&v30[qword_3DDE70] = 0;
  *(_QWORD *)&v30[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v30[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v34 = &v30[qword_3DDE78];
  v35 = type metadata accessor for PageID(0, v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v30[qword_3DDDB8];
  v30[qword_3DDDB8] = 0;
  v37 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *(_QWORD *)&v30[qword_3FD5F0] = 0;
  *(_QWORD *)&v30[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v30[qword_3DDE88] = 0;
  v38 = &v30[qword_3FD5E8];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)&v30[qword_3DDE90] = 0;
  v39 = &v30[qword_3DDE98];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v40 = &v30[qword_3DDDC0];
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v43 = type metadata accessor for Header(0, v42);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
  v40[v41] = 1;
  v30[qword_3DDE30] = 0;
  *(_QWORD *)&v30[qword_3DDDA0] = 0;
  v30[qword_3DDDD0] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v184, v44, v44);
  *(_OWORD *)&v30[qword_3DDE28] = v184;
  v45 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v184, v45, v45);
  *(_QWORD *)&v30[qword_3DDD90] = v184;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v184, v46, v46);
  sub_1B738(&v184, (uint64_t)&v30[qword_3DDE48]);
  v47 = type metadata accessor for PageActionRunner();
  v48 = swift_allocObject(v47, 40, 7);
  swift_unknownObjectWeakInit(v48 + 16, 0);
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)&v30[qword_3DDE40] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v50 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v167 = v48;
  *(_QWORD *)&v184 = v48;
  *((_QWORD *)&v184 + 1) = v50;
  swift_retain(v48);
  v51 = BaseObjectGraph.satisfying<A>(_:with:)(v49, &v184, v49);
  v52 = type metadata accessor for FreezableContentSubject(0);
  v163 = (id)objc_opt_self(NSNotificationCenter);
  v53 = objc_msgSend(v163, "defaultCenter");
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = FreezableContentSubject.init(notificationCenter:)(v53);
  *(_QWORD *)&v184 = v54;
  v55 = BaseObjectGraph.satisfying<A>(_:with:)(v52, &v184, v52);
  swift_release(v54);
  swift_release(v51);
  v56 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v58 = ClickLocationTracker.init()(v57);
  *(_QWORD *)&v184 = v58;
  v59 = BaseObjectGraph.satisfying<A>(_:with:)(v56, &v184, v56);
  v60 = swift_retain(v58);
  v61 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v58, v60);
  swift_release(v55);
  swift_release(v59);
  v62 = swift_release_n(v58, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v62);
  v63 = BaseObjectGraph.addingImpressionsTracker(with:)(v20);
  v64 = swift_release(v61);
  v65 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v20, v18, v64);
  static ImpressionsCalculator.Configuration.half.getter(v65);
  v66 = BaseObjectGraph.addingImpressionsCalculator(with:)(v17);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v17, v176, v67);
  v68 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = SearchFiltersSource.init()();
  *(_QWORD *)&v184 = v69;
  v70 = BaseObjectGraph.satisfying<A>(_:with:)(v68, &v184, v68);
  v71 = swift_retain(v69);
  v72 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v69, v71);
  swift_release(v66);
  swift_release(v70);
  swift_release_n(v69, 2);
  v73 = type metadata accessor for MetricsController(0);
  v74 = BaseObjectGraph.satisfying<A>(_:with:)(v73, sub_2356FC, 0, v73);
  swift_release(v72);
  v75 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v184, v75, v75);
  *(_QWORD *)&v30[qword_3DDE38] = v184;
  BaseObjectGraph.inject<A>(_:)(&v184, v73, v73);
  *(_QWORD *)&v30[qword_3DDE08] = v184;
  v76 = v74;
  *(_QWORD *)&v30[qword_3DDD98] = v74;
  v78 = type metadata accessor for ShowListPresenter(0, v77);
  v79 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v162, v180, v179);
  v80 = sub_89A0(&qword_3D3148, (uint64_t (*)(uint64_t))&type metadata accessor for ShowListPresenter, (uint64_t)&protocol conformance descriptor for ShowListPresenter);
  v81 = swift_retain_n(v74, 2);
  v82 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v81, v79, v78, v80);
  *(_QWORD *)&v30[qword_3DDD70] = v82;
  v83 = swift_retain(v82);
  v84 = (uint64_t)v164;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v78, v80, v83);
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  LOBYTE(v79) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v78, v80);
  LOBYTE(v74) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v78, v80);
  v86 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_retain(v76);
  v87 = sub_39E0C(v84, v85, v79 & 1, v74 & 1, v76);
  swift_release(v76);
  swift_release(v85);
  *(_QWORD *)&v30[qword_3DDDA8] = v87;
  v185 = v78;
  v186 = &protocol witness table for ShowListPresenter;
  *(_QWORD *)&v184 = v82;
  swift_retain(v82);
  v88 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  v89 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v76;
  swift_retain(v76);
  v91 = sub_E2290(v90, (uint64_t)&v184, v88);
  swift_release(v76);
  swift_release(v88);
  *(_QWORD *)&v30[qword_3DDDB0] = v91;

  v92 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v183.receiver = v30;
  v183.super_class = ObjectType;
  v93 = (char *)objc_msgSendSuper2(&v183, "initWithCollectionViewLayout:", v92);

  v94 = *(_QWORD *)&v93[qword_3DDE40];
  swift_unknownObjectWeakAssign(v94 + 16, v93);
  v95 = swift_allocObject(&unk_37D5E0, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v93);
  v96 = *(_QWORD *)(v94 + 24);
  v97 = *(_QWORD *)(v94 + 32);
  *(_QWORD *)(v94 + 24) = sub_8D14C;
  *(_QWORD *)(v94 + 32) = v95;
  v98 = v93;
  sub_1D618(v96, v97);
  v99 = v78;
  v176 = v78;
  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.pageContent.getter(v78, v80);
  v100 = swift_allocObject(&unk_37D5E0, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v98);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_8DEB4, v100, v101, v102);
  swift_release(v100);
  swift_release(v184);
  v104 = &v98[qword_3DDDF8];
  swift_beginAccess(&v98[qword_3DDDF8], &v184, 33, 0);
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  v107 = swift_release(v103);
  v175 = v80;
  v108 = dispatch thunk of ModernPagePresenter.pageRender.getter(v99, v80, v107);
  v110 = v109;
  v111 = swift_getObjectType();
  *(_QWORD *)&v184 = v108;
  v112 = swift_allocObject(&unk_37D5E0, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v98);
  v113 = Publisher<>.sink(receiveValue:)(sub_8D18C, v112, v111, *(_QWORD *)(v110 + 8));
  swift_release(v112);
  swift_unknownObjectRelease(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  *(_QWORD *)&v114 = swift_release(v113).n128_u64[0];
  v115 = objc_msgSend(v163, "defaultCenter", v114);
  objc_msgSend(v115, "addObserver:selector:name:object:", v98, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v176, v80);
  v116 = swift_allocObject(&unk_37D5E0, 24, 7);
  swift_unknownObjectWeakInit(v116 + 16, v98);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v118 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v119 = Publisher<>.sink(receiveValue:)(sub_8DEDC, v116, v117, v118);
  swift_release(v116);
  swift_release(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  swift_release(v119);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v98[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v98[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v184, 0, 0);
  v123 = *v122;
  v182[0] = v123;
  v124 = swift_allocObject(&unk_37D5E0, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v98);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8DF10, v124, v125, v126);
  swift_release(v124);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  ObjectType = (objc_class *)v105;
  v128 = v106;
  v164 = (char *)v106;
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(v182);
  swift_release(v127);
  v130 = v175;
  v129 = v176;
  v182[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v176, v175);
  v131 = swift_allocObject(&unk_37D5E0, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16, v98);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v133 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v134 = Publisher<>.sink(receiveValue:)(sub_8DF40, v131, v132, v133);
  swift_release(v131);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v128);
  swift_endAccess(v182);
  v135 = swift_release(v134);
  v182[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v129, v130, v135);
  v136 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v181 = (id)static OS_dispatch_queue.main.getter(v137);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v139 = (uint64_t)v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v168, 1, 1, v138);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v141 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v142 = sub_1E2DC();
  v143 = v169;
  Publisher.receive<A>(on:options:)(&v181, v139, v140, v136, v141, v142);
  sub_D1D4(v139, &qword_3D2E70);

  swift_release(v182[0]);
  v144 = swift_allocObject(&unk_37D5E0, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v98);
  v145 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v146 = v170;
  v147 = Publisher<>.sink(receiveValue:)(sub_8E358, v144, v170, v145);
  v148 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v143, v146, v148);
  swift_beginAccess(v104, v182, 33, 0);
  v149 = ObjectType;
  v150 = v164;
  AnyCancellable.store<A>(in:)(v104, ObjectType, v164);
  swift_endAccess(v182);
  v151 = swift_release(v147);
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v129, v175, v151);
  v182[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v172;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D5E0, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v98);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v173;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v173, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v155, v158, v160);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v149, v150);
  swift_endAccess(v182);
  swift_release(v167);
  swift_release(v165);
  swift_release(v82);
  swift_release(v177);
  swift_release(v159);

  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
  return v98;
}

char *sub_65854(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  objc_class *v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  char *v162;
  id v163;
  char *v164;
  uint64_t v165;
  objc_class *ObjectType;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  _QWORD v182[3];
  objc_super v183;
  __int128 v184;
  uint64_t v185;
  void *v186;

  v180 = a2;
  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v4 = *(_QWORD *)(v3 - 8);
  v173 = v3;
  v174 = v4;
  __chkstk_darwin(v3);
  v172 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v171 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v164 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LibraryShowPresenter.Configuration(0, v10);
  v178 = *(_QWORD *)(v12 - 8);
  v179 = v12;
  __chkstk_darwin(v12);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v175 = *(_QWORD *)(v14 - 8);
  v176 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v15);
  v165 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v25 = &v2[qword_3FD5D8];
  v26 = enum case for FlowDestinationPageHeader.standard(_:);
  v27 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  v28 = &v2[qword_3DDD80];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v29 = &v2[qword_3DDE58];
  LOBYTE(v184) = 0;
  v30 = v2;
  Published.init(initialValue:)(&v184, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v30[qword_3DDE00] = 0;
  v31 = &v30[qword_3DDE60];
  v32 = type metadata accessor for InteractionContext.Page(0);
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v30[qword_3DDE68] = 1;
  *(_QWORD *)&v30[qword_3DDE70] = 0;
  *(_QWORD *)&v30[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v30[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v34 = &v30[qword_3DDE78];
  v35 = type metadata accessor for PageID(0, v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v30[qword_3DDDB8];
  v30[qword_3DDDB8] = 0;
  v37 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *(_QWORD *)&v30[qword_3FD5F0] = 0;
  *(_QWORD *)&v30[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v30[qword_3DDE88] = 0;
  v38 = &v30[qword_3FD5E8];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)&v30[qword_3DDE90] = 0;
  v39 = &v30[qword_3DDE98];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v40 = &v30[qword_3DDDC0];
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v43 = type metadata accessor for Header(0, v42);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
  v40[v41] = 1;
  v30[qword_3DDE30] = 0;
  *(_QWORD *)&v30[qword_3DDDA0] = 0;
  v30[qword_3DDDD0] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v184, v44, v44);
  *(_OWORD *)&v30[qword_3DDE28] = v184;
  v45 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v184, v45, v45);
  *(_QWORD *)&v30[qword_3DDD90] = v184;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v184, v46, v46);
  sub_1B738(&v184, (uint64_t)&v30[qword_3DDE48]);
  v47 = type metadata accessor for PageActionRunner();
  v48 = swift_allocObject(v47, 40, 7);
  swift_unknownObjectWeakInit(v48 + 16, 0);
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)&v30[qword_3DDE40] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v50 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v167 = v48;
  *(_QWORD *)&v184 = v48;
  *((_QWORD *)&v184 + 1) = v50;
  swift_retain(v48);
  v51 = BaseObjectGraph.satisfying<A>(_:with:)(v49, &v184, v49);
  v52 = type metadata accessor for FreezableContentSubject(0);
  v163 = (id)objc_opt_self(NSNotificationCenter);
  v53 = objc_msgSend(v163, "defaultCenter");
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = FreezableContentSubject.init(notificationCenter:)(v53);
  *(_QWORD *)&v184 = v54;
  v55 = BaseObjectGraph.satisfying<A>(_:with:)(v52, &v184, v52);
  swift_release(v54);
  swift_release(v51);
  v56 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v58 = ClickLocationTracker.init()(v57);
  *(_QWORD *)&v184 = v58;
  v59 = BaseObjectGraph.satisfying<A>(_:with:)(v56, &v184, v56);
  v60 = swift_retain(v58);
  v61 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v58, v60);
  swift_release(v55);
  swift_release(v59);
  v62 = swift_release_n(v58, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v62);
  v63 = BaseObjectGraph.addingImpressionsTracker(with:)(v20);
  v64 = swift_release(v61);
  v65 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v20, v18, v64);
  static ImpressionsCalculator.Configuration.half.getter(v65);
  v66 = BaseObjectGraph.addingImpressionsCalculator(with:)(v17);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v17, v176, v67);
  v68 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = SearchFiltersSource.init()();
  *(_QWORD *)&v184 = v69;
  v70 = BaseObjectGraph.satisfying<A>(_:with:)(v68, &v184, v68);
  v71 = swift_retain(v69);
  v72 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v69, v71);
  swift_release(v66);
  swift_release(v70);
  swift_release_n(v69, 2);
  v73 = type metadata accessor for MetricsController(0);
  v74 = BaseObjectGraph.satisfying<A>(_:with:)(v73, sub_2356FC, 0, v73);
  swift_release(v72);
  v75 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v184, v75, v75);
  *(_QWORD *)&v30[qword_3DDE38] = v184;
  BaseObjectGraph.inject<A>(_:)(&v184, v73, v73);
  *(_QWORD *)&v30[qword_3DDE08] = v184;
  v76 = v74;
  *(_QWORD *)&v30[qword_3DDD98] = v74;
  v78 = type metadata accessor for LibraryShowPresenter(0, v77);
  v79 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v162, v180, v179);
  v80 = sub_89A0(&qword_3D3108, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryShowPresenter, (uint64_t)&protocol conformance descriptor for LibraryShowPresenter);
  v81 = swift_retain_n(v74, 2);
  v82 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v81, v79, v78, v80);
  *(_QWORD *)&v30[qword_3DDD70] = v82;
  v83 = swift_retain(v82);
  v84 = (uint64_t)v164;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v78, v80, v83);
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  LOBYTE(v79) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v78, v80);
  LOBYTE(v74) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v78, v80);
  v86 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_retain(v76);
  v87 = sub_39E0C(v84, v85, v79 & 1, v74 & 1, v76);
  swift_release(v76);
  swift_release(v85);
  *(_QWORD *)&v30[qword_3DDDA8] = v87;
  v185 = v78;
  v186 = &protocol witness table for LibraryShowPresenter;
  *(_QWORD *)&v184 = v82;
  swift_retain(v82);
  v88 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  v89 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v76;
  swift_retain(v76);
  v91 = sub_E2290(v90, (uint64_t)&v184, v88);
  swift_release(v76);
  swift_release(v88);
  *(_QWORD *)&v30[qword_3DDDB0] = v91;

  v92 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v183.receiver = v30;
  v183.super_class = ObjectType;
  v93 = (char *)objc_msgSendSuper2(&v183, "initWithCollectionViewLayout:", v92);

  v94 = *(_QWORD *)&v93[qword_3DDE40];
  swift_unknownObjectWeakAssign(v94 + 16, v93);
  v95 = swift_allocObject(&unk_37D360, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v93);
  v96 = *(_QWORD *)(v94 + 24);
  v97 = *(_QWORD *)(v94 + 32);
  *(_QWORD *)(v94 + 24) = sub_8D14C;
  *(_QWORD *)(v94 + 32) = v95;
  v98 = v93;
  sub_1D618(v96, v97);
  v99 = v78;
  v176 = v78;
  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.pageContent.getter(v78, v80);
  v100 = swift_allocObject(&unk_37D360, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v98);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_8DBA4, v100, v101, v102);
  swift_release(v100);
  swift_release(v184);
  v104 = &v98[qword_3DDDF8];
  swift_beginAccess(&v98[qword_3DDDF8], &v184, 33, 0);
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  v107 = swift_release(v103);
  v175 = v80;
  v108 = dispatch thunk of ModernPagePresenter.pageRender.getter(v99, v80, v107);
  v110 = v109;
  v111 = swift_getObjectType();
  *(_QWORD *)&v184 = v108;
  v112 = swift_allocObject(&unk_37D360, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v98);
  v113 = Publisher<>.sink(receiveValue:)(sub_8D18C, v112, v111, *(_QWORD *)(v110 + 8));
  swift_release(v112);
  swift_unknownObjectRelease(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  *(_QWORD *)&v114 = swift_release(v113).n128_u64[0];
  v115 = objc_msgSend(v163, "defaultCenter", v114);
  objc_msgSend(v115, "addObserver:selector:name:object:", v98, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v176, v80);
  v116 = swift_allocObject(&unk_37D360, 24, 7);
  swift_unknownObjectWeakInit(v116 + 16, v98);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v118 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v119 = Publisher<>.sink(receiveValue:)(sub_8DBCC, v116, v117, v118);
  swift_release(v116);
  swift_release(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  swift_release(v119);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v98[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v98[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v184, 0, 0);
  v123 = *v122;
  v182[0] = v123;
  v124 = swift_allocObject(&unk_37D360, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v98);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8DC00, v124, v125, v126);
  swift_release(v124);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  ObjectType = (objc_class *)v105;
  v128 = v106;
  v164 = (char *)v106;
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(v182);
  swift_release(v127);
  v130 = v175;
  v129 = v176;
  v182[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v176, v175);
  v131 = swift_allocObject(&unk_37D360, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16, v98);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v133 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v134 = Publisher<>.sink(receiveValue:)(sub_8DC30, v131, v132, v133);
  swift_release(v131);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v128);
  swift_endAccess(v182);
  v135 = swift_release(v134);
  v182[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v129, v130, v135);
  v136 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v181 = (id)static OS_dispatch_queue.main.getter(v137);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v139 = (uint64_t)v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v168, 1, 1, v138);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v141 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v142 = sub_1E2DC();
  v143 = v169;
  Publisher.receive<A>(on:options:)(&v181, v139, v140, v136, v141, v142);
  sub_D1D4(v139, &qword_3D2E70);

  swift_release(v182[0]);
  v144 = swift_allocObject(&unk_37D360, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v98);
  v145 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v146 = v170;
  v147 = Publisher<>.sink(receiveValue:)(sub_8E358, v144, v170, v145);
  v148 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v143, v146, v148);
  swift_beginAccess(v104, v182, 33, 0);
  v149 = ObjectType;
  v150 = v164;
  AnyCancellable.store<A>(in:)(v104, ObjectType, v164);
  swift_endAccess(v182);
  v151 = swift_release(v147);
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v129, v175, v151);
  v182[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v172;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D360, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v98);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v173;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v173, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v155, v158, v160);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v149, v150);
  swift_endAccess(v182);
  swift_release(v167);
  swift_release(v165);
  swift_release(v82);
  swift_release(v177);
  swift_release(v159);

  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
  return v98;
}

char *sub_66AB4(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  objc_class *v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  char *v162;
  id v163;
  char *v164;
  uint64_t v165;
  objc_class *ObjectType;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  _QWORD v182[3];
  objc_super v183;
  __int128 v184;
  uint64_t v185;
  void *v186;

  v180 = a2;
  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v4 = *(_QWORD *)(v3 - 8);
  v173 = v3;
  v174 = v4;
  __chkstk_darwin(v3);
  v172 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v171 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v164 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StorePagePresenter.Configuration(0, v10);
  v178 = *(_QWORD *)(v12 - 8);
  v179 = v12;
  __chkstk_darwin(v12);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v175 = *(_QWORD *)(v14 - 8);
  v176 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v15);
  v165 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v25 = &v2[qword_3FD5D8];
  v26 = enum case for FlowDestinationPageHeader.standard(_:);
  v27 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  v28 = &v2[qword_3DDD80];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v29 = &v2[qword_3DDE58];
  LOBYTE(v184) = 0;
  v30 = v2;
  Published.init(initialValue:)(&v184, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v30[qword_3DDE00] = 0;
  v31 = &v30[qword_3DDE60];
  v32 = type metadata accessor for InteractionContext.Page(0);
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v30[qword_3DDE68] = 1;
  *(_QWORD *)&v30[qword_3DDE70] = 0;
  *(_QWORD *)&v30[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v30[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v34 = &v30[qword_3DDE78];
  v35 = type metadata accessor for PageID(0, v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v30[qword_3DDDB8];
  v30[qword_3DDDB8] = 0;
  v37 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *(_QWORD *)&v30[qword_3FD5F0] = 0;
  *(_QWORD *)&v30[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v30[qword_3DDE88] = 0;
  v38 = &v30[qword_3FD5E8];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)&v30[qword_3DDE90] = 0;
  v39 = &v30[qword_3DDE98];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v40 = &v30[qword_3DDDC0];
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v43 = type metadata accessor for Header(0, v42);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
  v40[v41] = 1;
  v30[qword_3DDE30] = 0;
  *(_QWORD *)&v30[qword_3DDDA0] = 0;
  v30[qword_3DDDD0] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v184, v44, v44);
  *(_OWORD *)&v30[qword_3DDE28] = v184;
  v45 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v184, v45, v45);
  *(_QWORD *)&v30[qword_3DDD90] = v184;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v184, v46, v46);
  sub_1B738(&v184, (uint64_t)&v30[qword_3DDE48]);
  v47 = type metadata accessor for PageActionRunner();
  v48 = swift_allocObject(v47, 40, 7);
  swift_unknownObjectWeakInit(v48 + 16, 0);
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)&v30[qword_3DDE40] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v50 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v167 = v48;
  *(_QWORD *)&v184 = v48;
  *((_QWORD *)&v184 + 1) = v50;
  swift_retain(v48);
  v51 = BaseObjectGraph.satisfying<A>(_:with:)(v49, &v184, v49);
  v52 = type metadata accessor for FreezableContentSubject(0);
  v163 = (id)objc_opt_self(NSNotificationCenter);
  v53 = objc_msgSend(v163, "defaultCenter");
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = FreezableContentSubject.init(notificationCenter:)(v53);
  *(_QWORD *)&v184 = v54;
  v55 = BaseObjectGraph.satisfying<A>(_:with:)(v52, &v184, v52);
  swift_release(v54);
  swift_release(v51);
  v56 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v58 = ClickLocationTracker.init()(v57);
  *(_QWORD *)&v184 = v58;
  v59 = BaseObjectGraph.satisfying<A>(_:with:)(v56, &v184, v56);
  v60 = swift_retain(v58);
  v61 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v58, v60);
  swift_release(v55);
  swift_release(v59);
  v62 = swift_release_n(v58, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v62);
  v63 = BaseObjectGraph.addingImpressionsTracker(with:)(v20);
  v64 = swift_release(v61);
  v65 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v20, v18, v64);
  static ImpressionsCalculator.Configuration.half.getter(v65);
  v66 = BaseObjectGraph.addingImpressionsCalculator(with:)(v17);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v17, v176, v67);
  v68 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = SearchFiltersSource.init()();
  *(_QWORD *)&v184 = v69;
  v70 = BaseObjectGraph.satisfying<A>(_:with:)(v68, &v184, v68);
  v71 = swift_retain(v69);
  v72 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v69, v71);
  swift_release(v66);
  swift_release(v70);
  swift_release_n(v69, 2);
  v73 = type metadata accessor for MetricsController(0);
  v74 = BaseObjectGraph.satisfying<A>(_:with:)(v73, sub_2356FC, 0, v73);
  swift_release(v72);
  v75 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v184, v75, v75);
  *(_QWORD *)&v30[qword_3DDE38] = v184;
  BaseObjectGraph.inject<A>(_:)(&v184, v73, v73);
  *(_QWORD *)&v30[qword_3DDE08] = v184;
  v76 = v74;
  *(_QWORD *)&v30[qword_3DDD98] = v74;
  v78 = type metadata accessor for StorePagePresenter(0, v77);
  v79 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v162, v180, v179);
  v80 = sub_89A0(&qword_3D3118, (uint64_t (*)(uint64_t))&type metadata accessor for StorePagePresenter, (uint64_t)&protocol conformance descriptor for StorePagePresenter);
  v81 = swift_retain_n(v74, 2);
  v82 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v81, v79, v78, v80);
  *(_QWORD *)&v30[qword_3DDD70] = v82;
  v83 = swift_retain(v82);
  v84 = (uint64_t)v164;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v78, v80, v83);
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  LOBYTE(v79) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v78, v80);
  LOBYTE(v74) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v78, v80);
  v86 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_retain(v76);
  v87 = sub_39E0C(v84, v85, v79 & 1, v74 & 1, v76);
  swift_release(v76);
  swift_release(v85);
  *(_QWORD *)&v30[qword_3DDDA8] = v87;
  v185 = v78;
  v186 = &protocol witness table for StorePagePresenter;
  *(_QWORD *)&v184 = v82;
  swift_retain(v82);
  v88 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  v89 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v76;
  swift_retain(v76);
  v91 = sub_E2290(v90, (uint64_t)&v184, v88);
  swift_release(v76);
  swift_release(v88);
  *(_QWORD *)&v30[qword_3DDDB0] = v91;

  v92 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v183.receiver = v30;
  v183.super_class = ObjectType;
  v93 = (char *)objc_msgSendSuper2(&v183, "initWithCollectionViewLayout:", v92);

  v94 = *(_QWORD *)&v93[qword_3DDE40];
  swift_unknownObjectWeakAssign(v94 + 16, v93);
  v95 = swift_allocObject(&unk_37D400, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v93);
  v96 = *(_QWORD *)(v94 + 24);
  v97 = *(_QWORD *)(v94 + 32);
  *(_QWORD *)(v94 + 24) = sub_8D14C;
  *(_QWORD *)(v94 + 32) = v95;
  v98 = v93;
  sub_1D618(v96, v97);
  v99 = v78;
  v176 = v78;
  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.pageContent.getter(v78, v80);
  v100 = swift_allocObject(&unk_37D400, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v98);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_8DC68, v100, v101, v102);
  swift_release(v100);
  swift_release(v184);
  v104 = &v98[qword_3DDDF8];
  swift_beginAccess(&v98[qword_3DDDF8], &v184, 33, 0);
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  v107 = swift_release(v103);
  v175 = v80;
  v108 = dispatch thunk of ModernPagePresenter.pageRender.getter(v99, v80, v107);
  v110 = v109;
  v111 = swift_getObjectType();
  *(_QWORD *)&v184 = v108;
  v112 = swift_allocObject(&unk_37D400, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v98);
  v113 = Publisher<>.sink(receiveValue:)(sub_8D18C, v112, v111, *(_QWORD *)(v110 + 8));
  swift_release(v112);
  swift_unknownObjectRelease(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  *(_QWORD *)&v114 = swift_release(v113).n128_u64[0];
  v115 = objc_msgSend(v163, "defaultCenter", v114);
  objc_msgSend(v115, "addObserver:selector:name:object:", v98, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v176, v80);
  v116 = swift_allocObject(&unk_37D400, 24, 7);
  swift_unknownObjectWeakInit(v116 + 16, v98);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v118 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v119 = Publisher<>.sink(receiveValue:)(sub_8DC90, v116, v117, v118);
  swift_release(v116);
  swift_release(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  swift_release(v119);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v98[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v98[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v184, 0, 0);
  v123 = *v122;
  v182[0] = v123;
  v124 = swift_allocObject(&unk_37D400, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v98);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8DCC4, v124, v125, v126);
  swift_release(v124);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  ObjectType = (objc_class *)v105;
  v128 = v106;
  v164 = (char *)v106;
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(v182);
  swift_release(v127);
  v130 = v175;
  v129 = v176;
  v182[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v176, v175);
  v131 = swift_allocObject(&unk_37D400, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16, v98);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v133 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v134 = Publisher<>.sink(receiveValue:)(sub_8DCF4, v131, v132, v133);
  swift_release(v131);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v128);
  swift_endAccess(v182);
  v135 = swift_release(v134);
  v182[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v129, v130, v135);
  v136 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v181 = (id)static OS_dispatch_queue.main.getter(v137);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v139 = (uint64_t)v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v168, 1, 1, v138);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v141 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v142 = sub_1E2DC();
  v143 = v169;
  Publisher.receive<A>(on:options:)(&v181, v139, v140, v136, v141, v142);
  sub_D1D4(v139, &qword_3D2E70);

  swift_release(v182[0]);
  v144 = swift_allocObject(&unk_37D400, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v98);
  v145 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v146 = v170;
  v147 = Publisher<>.sink(receiveValue:)(sub_8E358, v144, v170, v145);
  v148 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v143, v146, v148);
  swift_beginAccess(v104, v182, 33, 0);
  v149 = ObjectType;
  v150 = v164;
  AnyCancellable.store<A>(in:)(v104, ObjectType, v164);
  swift_endAccess(v182);
  v151 = swift_release(v147);
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v129, v175, v151);
  v182[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v172;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D400, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v98);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v173;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v173, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v155, v158, v160);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v149, v150);
  swift_endAccess(v182);
  swift_release(v167);
  swift_release(v165);
  swift_release(v82);
  swift_release(v177);
  swift_release(v159);

  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
  return v98;
}

char *sub_67D14(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  objc_class *v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  char *v162;
  id v163;
  char *v164;
  uint64_t v165;
  objc_class *ObjectType;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  _QWORD v182[3];
  objc_super v183;
  __int128 v184;
  uint64_t v185;
  void *v186;

  v180 = a2;
  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v4 = *(_QWORD *)(v3 - 8);
  v173 = v3;
  v174 = v4;
  __chkstk_darwin(v3);
  v172 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v171 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v164 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LongDescriptionPresenter.Configuration(0, v10);
  v178 = *(_QWORD *)(v12 - 8);
  v179 = v12;
  __chkstk_darwin(v12);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v175 = *(_QWORD *)(v14 - 8);
  v176 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v15);
  v165 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v25 = &v2[qword_3FD5D8];
  v26 = enum case for FlowDestinationPageHeader.standard(_:);
  v27 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  v28 = &v2[qword_3DDD80];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v29 = &v2[qword_3DDE58];
  LOBYTE(v184) = 0;
  v30 = v2;
  Published.init(initialValue:)(&v184, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v30[qword_3DDE00] = 0;
  v31 = &v30[qword_3DDE60];
  v32 = type metadata accessor for InteractionContext.Page(0);
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v30[qword_3DDE68] = 1;
  *(_QWORD *)&v30[qword_3DDE70] = 0;
  *(_QWORD *)&v30[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v30[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v34 = &v30[qword_3DDE78];
  v35 = type metadata accessor for PageID(0, v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v30[qword_3DDDB8];
  v30[qword_3DDDB8] = 0;
  v37 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *(_QWORD *)&v30[qword_3FD5F0] = 0;
  *(_QWORD *)&v30[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v30[qword_3DDE88] = 0;
  v38 = &v30[qword_3FD5E8];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)&v30[qword_3DDE90] = 0;
  v39 = &v30[qword_3DDE98];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v40 = &v30[qword_3DDDC0];
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v43 = type metadata accessor for Header(0, v42);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
  v40[v41] = 1;
  v30[qword_3DDE30] = 0;
  *(_QWORD *)&v30[qword_3DDDA0] = 0;
  v30[qword_3DDDD0] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v184, v44, v44);
  *(_OWORD *)&v30[qword_3DDE28] = v184;
  v45 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v184, v45, v45);
  *(_QWORD *)&v30[qword_3DDD90] = v184;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v184, v46, v46);
  sub_1B738(&v184, (uint64_t)&v30[qword_3DDE48]);
  v47 = type metadata accessor for PageActionRunner();
  v48 = swift_allocObject(v47, 40, 7);
  swift_unknownObjectWeakInit(v48 + 16, 0);
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)&v30[qword_3DDE40] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v50 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v167 = v48;
  *(_QWORD *)&v184 = v48;
  *((_QWORD *)&v184 + 1) = v50;
  swift_retain(v48);
  v51 = BaseObjectGraph.satisfying<A>(_:with:)(v49, &v184, v49);
  v52 = type metadata accessor for FreezableContentSubject(0);
  v163 = (id)objc_opt_self(NSNotificationCenter);
  v53 = objc_msgSend(v163, "defaultCenter");
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = FreezableContentSubject.init(notificationCenter:)(v53);
  *(_QWORD *)&v184 = v54;
  v55 = BaseObjectGraph.satisfying<A>(_:with:)(v52, &v184, v52);
  swift_release(v54);
  swift_release(v51);
  v56 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v58 = ClickLocationTracker.init()(v57);
  *(_QWORD *)&v184 = v58;
  v59 = BaseObjectGraph.satisfying<A>(_:with:)(v56, &v184, v56);
  v60 = swift_retain(v58);
  v61 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v58, v60);
  swift_release(v55);
  swift_release(v59);
  v62 = swift_release_n(v58, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v62);
  v63 = BaseObjectGraph.addingImpressionsTracker(with:)(v20);
  v64 = swift_release(v61);
  v65 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v20, v18, v64);
  static ImpressionsCalculator.Configuration.half.getter(v65);
  v66 = BaseObjectGraph.addingImpressionsCalculator(with:)(v17);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v17, v176, v67);
  v68 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = SearchFiltersSource.init()();
  *(_QWORD *)&v184 = v69;
  v70 = BaseObjectGraph.satisfying<A>(_:with:)(v68, &v184, v68);
  v71 = swift_retain(v69);
  v72 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v69, v71);
  swift_release(v66);
  swift_release(v70);
  swift_release_n(v69, 2);
  v73 = type metadata accessor for MetricsController(0);
  v74 = BaseObjectGraph.satisfying<A>(_:with:)(v73, sub_2356FC, 0, v73);
  swift_release(v72);
  v75 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v184, v75, v75);
  *(_QWORD *)&v30[qword_3DDE38] = v184;
  BaseObjectGraph.inject<A>(_:)(&v184, v73, v73);
  *(_QWORD *)&v30[qword_3DDE08] = v184;
  v76 = v74;
  *(_QWORD *)&v30[qword_3DDD98] = v74;
  v78 = type metadata accessor for LongDescriptionPresenter(0, v77);
  v79 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v162, v180, v179);
  v80 = sub_89A0(&qword_3D3080, (uint64_t (*)(uint64_t))&type metadata accessor for LongDescriptionPresenter, (uint64_t)&protocol conformance descriptor for LongDescriptionPresenter);
  v81 = swift_retain_n(v74, 2);
  v82 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v81, v79, v78, v80);
  *(_QWORD *)&v30[qword_3DDD70] = v82;
  v83 = swift_retain(v82);
  v84 = (uint64_t)v164;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v78, v80, v83);
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  LOBYTE(v79) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v78, v80);
  LOBYTE(v74) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v78, v80);
  v86 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_retain(v76);
  v87 = sub_39E0C(v84, v85, v79 & 1, v74 & 1, v76);
  swift_release(v76);
  swift_release(v85);
  *(_QWORD *)&v30[qword_3DDDA8] = v87;
  v185 = v78;
  v186 = &protocol witness table for LongDescriptionPresenter;
  *(_QWORD *)&v184 = v82;
  swift_retain(v82);
  v88 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  v89 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v76;
  swift_retain(v76);
  v91 = sub_E2290(v90, (uint64_t)&v184, v88);
  swift_release(v76);
  swift_release(v88);
  *(_QWORD *)&v30[qword_3DDDB0] = v91;

  v92 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v183.receiver = v30;
  v183.super_class = ObjectType;
  v93 = (char *)objc_msgSendSuper2(&v183, "initWithCollectionViewLayout:", v92);

  v94 = *(_QWORD *)&v93[qword_3DDE40];
  swift_unknownObjectWeakAssign(v94 + 16, v93);
  v95 = swift_allocObject(&unk_37D248, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v93);
  v96 = *(_QWORD *)(v94 + 24);
  v97 = *(_QWORD *)(v94 + 32);
  *(_QWORD *)(v94 + 24) = sub_8D14C;
  *(_QWORD *)(v94 + 32) = v95;
  v98 = v93;
  sub_1D618(v96, v97);
  v99 = v78;
  v176 = v78;
  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.pageContent.getter(v78, v80);
  v100 = swift_allocObject(&unk_37D248, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v98);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_8DA68, v100, v101, v102);
  swift_release(v100);
  swift_release(v184);
  v104 = &v98[qword_3DDDF8];
  swift_beginAccess(&v98[qword_3DDDF8], &v184, 33, 0);
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  v107 = swift_release(v103);
  v175 = v80;
  v108 = dispatch thunk of ModernPagePresenter.pageRender.getter(v99, v80, v107);
  v110 = v109;
  v111 = swift_getObjectType();
  *(_QWORD *)&v184 = v108;
  v112 = swift_allocObject(&unk_37D248, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v98);
  v113 = Publisher<>.sink(receiveValue:)(sub_8D18C, v112, v111, *(_QWORD *)(v110 + 8));
  swift_release(v112);
  swift_unknownObjectRelease(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  *(_QWORD *)&v114 = swift_release(v113).n128_u64[0];
  v115 = objc_msgSend(v163, "defaultCenter", v114);
  objc_msgSend(v115, "addObserver:selector:name:object:", v98, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v176, v80);
  v116 = swift_allocObject(&unk_37D248, 24, 7);
  swift_unknownObjectWeakInit(v116 + 16, v98);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v118 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v119 = Publisher<>.sink(receiveValue:)(sub_8DA90, v116, v117, v118);
  swift_release(v116);
  swift_release(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  swift_release(v119);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v98[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v98[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v184, 0, 0);
  v123 = *v122;
  v182[0] = v123;
  v124 = swift_allocObject(&unk_37D248, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v98);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8DAC4, v124, v125, v126);
  swift_release(v124);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  ObjectType = (objc_class *)v105;
  v128 = v106;
  v164 = (char *)v106;
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(v182);
  swift_release(v127);
  v130 = v175;
  v129 = v176;
  v182[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v176, v175);
  v131 = swift_allocObject(&unk_37D248, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16, v98);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v133 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v134 = Publisher<>.sink(receiveValue:)(sub_8DAF4, v131, v132, v133);
  swift_release(v131);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v128);
  swift_endAccess(v182);
  v135 = swift_release(v134);
  v182[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v129, v130, v135);
  v136 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v181 = (id)static OS_dispatch_queue.main.getter(v137);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v139 = (uint64_t)v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v168, 1, 1, v138);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v141 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v142 = sub_1E2DC();
  v143 = v169;
  Publisher.receive<A>(on:options:)(&v181, v139, v140, v136, v141, v142);
  sub_D1D4(v139, &qword_3D2E70);

  swift_release(v182[0]);
  v144 = swift_allocObject(&unk_37D248, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v98);
  v145 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v146 = v170;
  v147 = Publisher<>.sink(receiveValue:)(sub_8E358, v144, v170, v145);
  v148 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v143, v146, v148);
  swift_beginAccess(v104, v182, 33, 0);
  v149 = ObjectType;
  v150 = v164;
  AnyCancellable.store<A>(in:)(v104, ObjectType, v164);
  swift_endAccess(v182);
  v151 = swift_release(v147);
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v129, v175, v151);
  v182[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v172;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D248, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v98);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v173;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v173, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v155, v158, v160);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v149, v150);
  swift_endAccess(v182);
  swift_release(v167);
  swift_release(v165);
  swift_release(v82);
  swift_release(v177);
  swift_release(v159);

  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
  return v98;
}

char *sub_68F74(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  id v88;
  id v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  objc_class *v112;
  double v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __n128 v147;
  objc_class *v148;
  char *v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  objc_class *ObjectType;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  _QWORD v180[3];
  objc_super v181;
  __int128 v182;
  uint64_t v183;
  void *v184;

  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v3 = *(_QWORD *)(v2 - 8);
  v172 = v2;
  v173 = v3;
  __chkstk_darwin(v2);
  v171 = (char *)&v162 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v5);
  v167 = (char *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v170 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  __chkstk_darwin(v8);
  v174 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v176 = *(_QWORD *)(v178 - 8);
  v10 = __chkstk_darwin(v178);
  v12 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v10);
  v165 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[qword_3DDD68] = 0;
  *(_QWORD *)&v1[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[qword_3DDE20] = 0;
  v20 = &v1[qword_3FD5D8];
  v21 = enum case for FlowDestinationPageHeader.standard(_:);
  v22 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v23 = &v1[qword_3DDD80];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *(_QWORD *)&v1[qword_3DDD78] = 18;
  *(_QWORD *)&v1[qword_3DDDC8] = 0;
  v24 = &v1[qword_3DDE58];
  LOBYTE(v182) = 0;
  v25 = v1;
  Published.init(initialValue:)(&v182, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v19, v16);
  v25[qword_3DDE00] = 0;
  v26 = &v25[qword_3DDE60];
  v27 = type metadata accessor for InteractionContext.Page(0);
  v28.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v25[qword_3DDE68] = 1;
  *(_QWORD *)&v25[qword_3DDE70] = 0;
  *(_QWORD *)&v25[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v25[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v29 = &v25[qword_3DDE78];
  v30 = type metadata accessor for PageID(0, v28);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = &v25[qword_3DDDB8];
  v25[qword_3DDDB8] = 0;
  v32 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  *(_QWORD *)&v25[qword_3FD5F0] = 0;
  *(_QWORD *)&v25[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v25[qword_3DDE88] = 0;
  v33 = &v25[qword_3FD5E8];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  *((_QWORD *)v33 + 2) = 0;
  *(_QWORD *)&v25[qword_3DDE90] = 0;
  v34 = &v25[qword_3DDE98];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 1;
  v35 = &v25[qword_3DDDC0];
  v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v38 = type metadata accessor for Header(0, v37);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
  v35[v36] = 1;
  v25[qword_3DDE30] = 0;
  *(_QWORD *)&v25[qword_3DDDA0] = 0;
  v25[qword_3DDDD0] = 0;
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v182, v39, v39);
  *(_OWORD *)&v25[qword_3DDE28] = v182;
  v40 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v182, v40, v40);
  *(_QWORD *)&v25[qword_3DDD90] = v182;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v182, v41, v41);
  sub_1B738(&v182, (uint64_t)&v25[qword_3DDE48]);
  v42 = type metadata accessor for PageActionRunner();
  v43 = swift_allocObject(v42, 40, 7);
  swift_unknownObjectWeakInit(v43 + 16, 0);
  *(_QWORD *)(v43 + 24) = 0;
  *(_QWORD *)(v43 + 32) = 0;
  *(_QWORD *)&v25[qword_3DDE40] = v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v45 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v166 = v43;
  *(_QWORD *)&v182 = v43;
  *((_QWORD *)&v182 + 1) = v45;
  swift_retain(v43);
  v46 = BaseObjectGraph.satisfying<A>(_:with:)(v44, &v182, v44);
  v47 = type metadata accessor for FreezableContentSubject(0);
  v164 = (id)objc_opt_self(NSNotificationCenter);
  v48 = objc_msgSend(v164, "defaultCenter");
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  v49 = FreezableContentSubject.init(notificationCenter:)(v48);
  *(_QWORD *)&v182 = v49;
  v50 = BaseObjectGraph.satisfying<A>(_:with:)(v47, &v182, v47);
  swift_release(v49);
  swift_release(v46);
  v51 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  v53 = ClickLocationTracker.init()(v52);
  *(_QWORD *)&v182 = v53;
  v54 = BaseObjectGraph.satisfying<A>(_:with:)(v51, &v182, v51);
  v55 = swift_retain(v53);
  v56 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v53, v55);
  swift_release(v50);
  swift_release(v54);
  v57 = swift_release_n(v53, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v57);
  v58 = BaseObjectGraph.addingImpressionsTracker(with:)(v15);
  v59 = swift_release(v56);
  v60 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v15, v13, v59);
  static ImpressionsCalculator.Configuration.half.getter(v60);
  v61 = BaseObjectGraph.addingImpressionsCalculator(with:)(v12);
  v62 = swift_release(v58);
  (*(void (**)(char *, uint64_t, __n128))(v176 + 8))(v12, v178, v62);
  v63 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
  v64 = SearchFiltersSource.init()();
  *(_QWORD *)&v182 = v64;
  v65 = BaseObjectGraph.satisfying<A>(_:with:)(v63, &v182, v63);
  v66 = swift_retain(v64);
  v67 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v64, v66);
  swift_release(v61);
  swift_release(v65);
  swift_release_n(v64, 2);
  v68 = type metadata accessor for MetricsController(0);
  v69 = BaseObjectGraph.satisfying<A>(_:with:)(v68, sub_2356FC, 0, v68);
  swift_release(v67);
  v70 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v182, v70, v70);
  *(_QWORD *)&v25[qword_3DDE38] = v182;
  BaseObjectGraph.inject<A>(_:)(&v182, v68, v68);
  *(_QWORD *)&v25[qword_3DDE08] = v182;
  v71 = v69;
  *(_QWORD *)&v25[qword_3DDD98] = v69;
  v73 = type metadata accessor for HomePagePresenter(0, v72);
  v74 = sub_89A0(&qword_3D3070, (uint64_t (*)(uint64_t))&type metadata accessor for HomePagePresenter, (uint64_t)&protocol conformance descriptor for HomePagePresenter);
  v75 = swift_retain_n(v69, 2);
  v77 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v75, v76, v73, v74);
  *(_QWORD *)&v25[qword_3DDD70] = v77;
  v78 = swift_retain(v77);
  v79 = (uint64_t)v174;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v73, v74, v78);
  v80 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v73, v74);
  LOBYTE(v15) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v73, v74);
  v81 = v77;
  LOBYTE(v77) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v73, v74);
  v82 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
  swift_retain(v71);
  v83 = sub_39E0C(v79, v80, v15 & 1, v77 & 1, v71);
  swift_release(v71);
  swift_release(v80);
  *(_QWORD *)&v25[qword_3DDDA8] = v83;
  v183 = v73;
  v184 = &protocol witness table for HomePagePresenter;
  *(_QWORD *)&v182 = v81;
  swift_retain(v81);
  v84 = v74;
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v73, v74);
  v86 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v71;
  swift_retain(v71);
  v88 = sub_E2290(v87, (uint64_t)&v182, v85);
  swift_release(v71);
  swift_release(v85);
  *(_QWORD *)&v25[qword_3DDDB0] = v88;

  v89 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v181.receiver = v25;
  v181.super_class = ObjectType;
  v90 = (char *)objc_msgSendSuper2(&v181, "initWithCollectionViewLayout:", v89);

  v91 = *(_QWORD *)&v90[qword_3DDE40];
  swift_unknownObjectWeakAssign(v91 + 16, v90);
  v92 = swift_allocObject(&unk_37D1A8, 24, 7);
  swift_unknownObjectWeakInit(v92 + 16, v90);
  v93 = *(_QWORD *)(v91 + 24);
  v94 = *(_QWORD *)(v91 + 32);
  *(_QWORD *)(v91 + 24) = sub_8D14C;
  *(_QWORD *)(v91 + 32) = v92;
  v95 = v90;
  sub_1D618(v93, v94);
  v178 = v81;
  *(_QWORD *)&v182 = dispatch thunk of ModernPagePresenter.pageContent.getter(v73, v84);
  v96 = swift_allocObject(&unk_37D1A8, 24, 7);
  swift_unknownObjectWeakInit(v96 + 16, v95);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v98 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v99 = Publisher<>.sink(receiveValue:)(sub_8D96C, v96, v97, v98);
  swift_release(v96);
  swift_release(v182);
  v100 = &v95[qword_3DDDF8];
  swift_beginAccess(&v95[qword_3DDDF8], &v182, 33, 0);
  v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  ObjectType = (objc_class *)v101;
  v102 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  v103 = v101;
  v104 = v102;
  v174 = (char *)v102;
  AnyCancellable.store<A>(in:)(v100, v103, v102);
  swift_endAccess(&v182);
  v105 = swift_release(v99);
  v163 = v73;
  v176 = v84;
  v106 = dispatch thunk of ModernPagePresenter.pageRender.getter(v73, v84, v105);
  v108 = v107;
  v109 = swift_getObjectType();
  *(_QWORD *)&v182 = v106;
  v110 = swift_allocObject(&unk_37D1A8, 24, 7);
  swift_unknownObjectWeakInit(v110 + 16, v95);
  v111 = Publisher<>.sink(receiveValue:)(sub_8D18C, v110, v109, *(_QWORD *)(v108 + 8));
  swift_release(v110);
  swift_unknownObjectRelease(v182);
  swift_beginAccess(v100, &v182, 33, 0);
  v112 = ObjectType;
  AnyCancellable.store<A>(in:)(v100, ObjectType, v104);
  swift_endAccess(&v182);
  *(_QWORD *)&v113 = swift_release(v111).n128_u64[0];
  v114 = objc_msgSend(v164, "defaultCenter", v113);
  objc_msgSend(v114, "addObserver:selector:name:object:", v95, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v182 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v73, v84);
  v115 = swift_allocObject(&unk_37D1A8, 24, 7);
  swift_unknownObjectWeakInit(v115 + 16, v95);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v117 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v118 = Publisher<>.sink(receiveValue:)(sub_8D994, v115, v116, v117);
  swift_release(v115);
  swift_release(v182);
  swift_beginAccess(v100, &v182, 33, 0);
  v119 = v174;
  AnyCancellable.store<A>(in:)(v100, v112, v174);
  swift_endAccess(&v182);
  swift_release(v118);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v95[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v95[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v182, 0, 0);
  v123 = *v122;
  v180[0] = v123;
  v124 = swift_allocObject(&unk_37D1A8, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v95);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8D9C8, v124, v125, v126);
  swift_release(v124);
  swift_release(v180[0]);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v112, v119);
  swift_endAccess(v180);
  swift_release(v127);
  v128 = v163;
  v129 = v176;
  v180[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v163, v176);
  v130 = swift_allocObject(&unk_37D1A8, 24, 7);
  swift_unknownObjectWeakInit(v130 + 16, v95);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v132 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v133 = Publisher<>.sink(receiveValue:)(sub_8D9F8, v130, v131, v132);
  swift_release(v130);
  swift_release(v180[0]);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v112, v119);
  swift_endAccess(v180);
  v134 = swift_release(v133);
  v180[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v128, v129, v134);
  v135 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v179 = (id)static OS_dispatch_queue.main.getter(v136);
  v137 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v138 = (uint64_t)v167;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v167, 1, 1, v137);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v140 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v141 = sub_1E2DC();
  v142 = v168;
  Publisher.receive<A>(on:options:)(&v179, v138, v139, v135, v140, v141);
  sub_D1D4(v138, &qword_3D2E70);

  swift_release(v180[0]);
  v143 = swift_allocObject(&unk_37D1A8, 24, 7);
  swift_unknownObjectWeakInit(v143 + 16, v95);
  v144 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v145 = v169;
  v146 = Publisher<>.sink(receiveValue:)(sub_8DA28, v143, v169, v144);
  v147 = swift_release(v143);
  (*(void (**)(char *, uint64_t, __n128))(v170 + 8))(v142, v145, v147);
  swift_beginAccess(v100, v180, 33, 0);
  v149 = v174;
  v148 = ObjectType;
  AnyCancellable.store<A>(in:)(v100, ObjectType, v174);
  swift_endAccess(v180);
  v150 = swift_release(v146);
  v151 = v178;
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v128, v176, v150);
  v180[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v171;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D1A8, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v95);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v172;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v172, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v173 + 8))(v155, v158, v160);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v148, v149);
  swift_endAccess(v180);
  swift_release(v166);
  swift_release(v165);
  swift_release(v151);
  swift_release(v177);
  swift_release(v159);

  return v95;
}

char *sub_6A144(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  id v88;
  id v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  objc_class *v112;
  double v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __n128 v147;
  objc_class *v148;
  char *v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  objc_class *ObjectType;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  _QWORD v180[3];
  objc_super v181;
  __int128 v182;
  uint64_t v183;
  void *v184;

  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v3 = *(_QWORD *)(v2 - 8);
  v172 = v2;
  v173 = v3;
  __chkstk_darwin(v2);
  v171 = (char *)&v162 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v5);
  v167 = (char *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v170 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  __chkstk_darwin(v8);
  v174 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v176 = *(_QWORD *)(v178 - 8);
  v10 = __chkstk_darwin(v178);
  v12 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v10);
  v165 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[qword_3DDD68] = 0;
  *(_QWORD *)&v1[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[qword_3DDE20] = 0;
  v20 = &v1[qword_3FD5D8];
  v21 = enum case for FlowDestinationPageHeader.standard(_:);
  v22 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v23 = &v1[qword_3DDD80];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *(_QWORD *)&v1[qword_3DDD78] = 18;
  *(_QWORD *)&v1[qword_3DDDC8] = 0;
  v24 = &v1[qword_3DDE58];
  LOBYTE(v182) = 0;
  v25 = v1;
  Published.init(initialValue:)(&v182, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v19, v16);
  v25[qword_3DDE00] = 0;
  v26 = &v25[qword_3DDE60];
  v27 = type metadata accessor for InteractionContext.Page(0);
  v28.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v25[qword_3DDE68] = 1;
  *(_QWORD *)&v25[qword_3DDE70] = 0;
  *(_QWORD *)&v25[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v25[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v29 = &v25[qword_3DDE78];
  v30 = type metadata accessor for PageID(0, v28);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = &v25[qword_3DDDB8];
  v25[qword_3DDDB8] = 0;
  v32 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  *(_QWORD *)&v25[qword_3FD5F0] = 0;
  *(_QWORD *)&v25[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v25[qword_3DDE88] = 0;
  v33 = &v25[qword_3FD5E8];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  *((_QWORD *)v33 + 2) = 0;
  *(_QWORD *)&v25[qword_3DDE90] = 0;
  v34 = &v25[qword_3DDE98];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 1;
  v35 = &v25[qword_3DDDC0];
  v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v38 = type metadata accessor for Header(0, v37);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
  v35[v36] = 1;
  v25[qword_3DDE30] = 0;
  *(_QWORD *)&v25[qword_3DDDA0] = 0;
  v25[qword_3DDDD0] = 0;
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v182, v39, v39);
  *(_OWORD *)&v25[qword_3DDE28] = v182;
  v40 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v182, v40, v40);
  *(_QWORD *)&v25[qword_3DDD90] = v182;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v182, v41, v41);
  sub_1B738(&v182, (uint64_t)&v25[qword_3DDE48]);
  v42 = type metadata accessor for PageActionRunner();
  v43 = swift_allocObject(v42, 40, 7);
  swift_unknownObjectWeakInit(v43 + 16, 0);
  *(_QWORD *)(v43 + 24) = 0;
  *(_QWORD *)(v43 + 32) = 0;
  *(_QWORD *)&v25[qword_3DDE40] = v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v45 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v166 = v43;
  *(_QWORD *)&v182 = v43;
  *((_QWORD *)&v182 + 1) = v45;
  swift_retain(v43);
  v46 = BaseObjectGraph.satisfying<A>(_:with:)(v44, &v182, v44);
  v47 = type metadata accessor for FreezableContentSubject(0);
  v164 = (id)objc_opt_self(NSNotificationCenter);
  v48 = objc_msgSend(v164, "defaultCenter");
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  v49 = FreezableContentSubject.init(notificationCenter:)(v48);
  *(_QWORD *)&v182 = v49;
  v50 = BaseObjectGraph.satisfying<A>(_:with:)(v47, &v182, v47);
  swift_release(v49);
  swift_release(v46);
  v51 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  v53 = ClickLocationTracker.init()(v52);
  *(_QWORD *)&v182 = v53;
  v54 = BaseObjectGraph.satisfying<A>(_:with:)(v51, &v182, v51);
  v55 = swift_retain(v53);
  v56 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v53, v55);
  swift_release(v50);
  swift_release(v54);
  v57 = swift_release_n(v53, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v57);
  v58 = BaseObjectGraph.addingImpressionsTracker(with:)(v15);
  v59 = swift_release(v56);
  v60 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v15, v13, v59);
  static ImpressionsCalculator.Configuration.half.getter(v60);
  v61 = BaseObjectGraph.addingImpressionsCalculator(with:)(v12);
  v62 = swift_release(v58);
  (*(void (**)(char *, uint64_t, __n128))(v176 + 8))(v12, v178, v62);
  v63 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
  v64 = SearchFiltersSource.init()();
  *(_QWORD *)&v182 = v64;
  v65 = BaseObjectGraph.satisfying<A>(_:with:)(v63, &v182, v63);
  v66 = swift_retain(v64);
  v67 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v64, v66);
  swift_release(v61);
  swift_release(v65);
  swift_release_n(v64, 2);
  v68 = type metadata accessor for MetricsController(0);
  v69 = BaseObjectGraph.satisfying<A>(_:with:)(v68, sub_2356FC, 0, v68);
  swift_release(v67);
  v70 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v182, v70, v70);
  *(_QWORD *)&v25[qword_3DDE38] = v182;
  BaseObjectGraph.inject<A>(_:)(&v182, v68, v68);
  *(_QWORD *)&v25[qword_3DDE08] = v182;
  v71 = v69;
  *(_QWORD *)&v25[qword_3DDD98] = v69;
  v73 = type metadata accessor for LibraryPresenter(0, v72);
  v74 = sub_89A0(&qword_3D3060, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryPresenter, (uint64_t)&protocol conformance descriptor for LibraryPresenter);
  v75 = swift_retain_n(v69, 2);
  v77 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v75, v76, v73, v74);
  *(_QWORD *)&v25[qword_3DDD70] = v77;
  v78 = swift_retain(v77);
  v79 = (uint64_t)v174;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v73, v74, v78);
  v80 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v73, v74);
  LOBYTE(v15) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v73, v74);
  v81 = v77;
  LOBYTE(v77) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v73, v74);
  v82 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
  swift_retain(v71);
  v83 = sub_39E0C(v79, v80, v15 & 1, v77 & 1, v71);
  swift_release(v71);
  swift_release(v80);
  *(_QWORD *)&v25[qword_3DDDA8] = v83;
  v183 = v73;
  v184 = &protocol witness table for LibraryPresenter;
  *(_QWORD *)&v182 = v81;
  swift_retain(v81);
  v84 = v74;
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v73, v74);
  v86 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v71;
  swift_retain(v71);
  v88 = sub_E2290(v87, (uint64_t)&v182, v85);
  swift_release(v71);
  swift_release(v85);
  *(_QWORD *)&v25[qword_3DDDB0] = v88;

  v89 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v181.receiver = v25;
  v181.super_class = ObjectType;
  v90 = (char *)objc_msgSendSuper2(&v181, "initWithCollectionViewLayout:", v89);

  v91 = *(_QWORD *)&v90[qword_3DDE40];
  swift_unknownObjectWeakAssign(v91 + 16, v90);
  v92 = swift_allocObject(&unk_37D108, 24, 7);
  swift_unknownObjectWeakInit(v92 + 16, v90);
  v93 = *(_QWORD *)(v91 + 24);
  v94 = *(_QWORD *)(v91 + 32);
  *(_QWORD *)(v91 + 24) = sub_8D14C;
  *(_QWORD *)(v91 + 32) = v92;
  v95 = v90;
  sub_1D618(v93, v94);
  v178 = v81;
  *(_QWORD *)&v182 = dispatch thunk of ModernPagePresenter.pageContent.getter(v73, v84);
  v96 = swift_allocObject(&unk_37D108, 24, 7);
  swift_unknownObjectWeakInit(v96 + 16, v95);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v98 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v99 = Publisher<>.sink(receiveValue:)(sub_8D8A8, v96, v97, v98);
  swift_release(v96);
  swift_release(v182);
  v100 = &v95[qword_3DDDF8];
  swift_beginAccess(&v95[qword_3DDDF8], &v182, 33, 0);
  v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  ObjectType = (objc_class *)v101;
  v102 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  v103 = v101;
  v104 = v102;
  v174 = (char *)v102;
  AnyCancellable.store<A>(in:)(v100, v103, v102);
  swift_endAccess(&v182);
  v105 = swift_release(v99);
  v163 = v73;
  v176 = v84;
  v106 = dispatch thunk of ModernPagePresenter.pageRender.getter(v73, v84, v105);
  v108 = v107;
  v109 = swift_getObjectType();
  *(_QWORD *)&v182 = v106;
  v110 = swift_allocObject(&unk_37D108, 24, 7);
  swift_unknownObjectWeakInit(v110 + 16, v95);
  v111 = Publisher<>.sink(receiveValue:)(sub_8D18C, v110, v109, *(_QWORD *)(v108 + 8));
  swift_release(v110);
  swift_unknownObjectRelease(v182);
  swift_beginAccess(v100, &v182, 33, 0);
  v112 = ObjectType;
  AnyCancellable.store<A>(in:)(v100, ObjectType, v104);
  swift_endAccess(&v182);
  *(_QWORD *)&v113 = swift_release(v111).n128_u64[0];
  v114 = objc_msgSend(v164, "defaultCenter", v113);
  objc_msgSend(v114, "addObserver:selector:name:object:", v95, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v182 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v73, v84);
  v115 = swift_allocObject(&unk_37D108, 24, 7);
  swift_unknownObjectWeakInit(v115 + 16, v95);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v117 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v118 = Publisher<>.sink(receiveValue:)(sub_8D8D0, v115, v116, v117);
  swift_release(v115);
  swift_release(v182);
  swift_beginAccess(v100, &v182, 33, 0);
  v119 = v174;
  AnyCancellable.store<A>(in:)(v100, v112, v174);
  swift_endAccess(&v182);
  swift_release(v118);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v95[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v95[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v182, 0, 0);
  v123 = *v122;
  v180[0] = v123;
  v124 = swift_allocObject(&unk_37D108, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v95);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8D904, v124, v125, v126);
  swift_release(v124);
  swift_release(v180[0]);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v112, v119);
  swift_endAccess(v180);
  swift_release(v127);
  v128 = v163;
  v129 = v176;
  v180[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v163, v176);
  v130 = swift_allocObject(&unk_37D108, 24, 7);
  swift_unknownObjectWeakInit(v130 + 16, v95);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v132 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v133 = Publisher<>.sink(receiveValue:)(sub_8D934, v130, v131, v132);
  swift_release(v130);
  swift_release(v180[0]);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v112, v119);
  swift_endAccess(v180);
  v134 = swift_release(v133);
  v180[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v128, v129, v134);
  v135 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v179 = (id)static OS_dispatch_queue.main.getter(v136);
  v137 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v138 = (uint64_t)v167;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v167, 1, 1, v137);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v140 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v141 = sub_1E2DC();
  v142 = v168;
  Publisher.receive<A>(on:options:)(&v179, v138, v139, v135, v140, v141);
  sub_D1D4(v138, &qword_3D2E70);

  swift_release(v180[0]);
  v143 = swift_allocObject(&unk_37D108, 24, 7);
  swift_unknownObjectWeakInit(v143 + 16, v95);
  v144 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v145 = v169;
  v146 = Publisher<>.sink(receiveValue:)(sub_8E358, v143, v169, v144);
  v147 = swift_release(v143);
  (*(void (**)(char *, uint64_t, __n128))(v170 + 8))(v142, v145, v147);
  swift_beginAccess(v100, v180, 33, 0);
  v149 = v174;
  v148 = ObjectType;
  AnyCancellable.store<A>(in:)(v100, ObjectType, v174);
  swift_endAccess(v180);
  v150 = swift_release(v146);
  v151 = v178;
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v128, v176, v150);
  v180[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v171;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D108, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v95);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v172;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v172, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v173 + 8))(v155, v158, v160);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v148, v149);
  swift_endAccess(v180);
  swift_release(v166);
  swift_release(v165);
  swift_release(v151);
  swift_release(v177);
  swift_release(v159);

  return v95;
}

char *sub_6B314(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  id v88;
  id v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  objc_class *v112;
  double v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __n128 v147;
  objc_class *v148;
  char *v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  objc_class *ObjectType;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  _QWORD v180[3];
  objc_super v181;
  __int128 v182;
  uint64_t v183;
  void *v184;

  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v3 = *(_QWORD *)(v2 - 8);
  v172 = v2;
  v173 = v3;
  __chkstk_darwin(v2);
  v171 = (char *)&v162 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v5);
  v167 = (char *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v170 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  __chkstk_darwin(v8);
  v174 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v176 = *(_QWORD *)(v178 - 8);
  v10 = __chkstk_darwin(v178);
  v12 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v10);
  v165 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[qword_3DDD68] = 0;
  *(_QWORD *)&v1[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[qword_3DDE20] = 0;
  v20 = &v1[qword_3FD5D8];
  v21 = enum case for FlowDestinationPageHeader.standard(_:);
  v22 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v23 = &v1[qword_3DDD80];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *(_QWORD *)&v1[qword_3DDD78] = 18;
  *(_QWORD *)&v1[qword_3DDDC8] = 0;
  v24 = &v1[qword_3DDE58];
  LOBYTE(v182) = 0;
  v25 = v1;
  Published.init(initialValue:)(&v182, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v19, v16);
  v25[qword_3DDE00] = 0;
  v26 = &v25[qword_3DDE60];
  v27 = type metadata accessor for InteractionContext.Page(0);
  v28.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v25[qword_3DDE68] = 1;
  *(_QWORD *)&v25[qword_3DDE70] = 0;
  *(_QWORD *)&v25[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v25[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v29 = &v25[qword_3DDE78];
  v30 = type metadata accessor for PageID(0, v28);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = &v25[qword_3DDDB8];
  v25[qword_3DDDB8] = 0;
  v32 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  *(_QWORD *)&v25[qword_3FD5F0] = 0;
  *(_QWORD *)&v25[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v25[qword_3DDE88] = 0;
  v33 = &v25[qword_3FD5E8];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  *((_QWORD *)v33 + 2) = 0;
  *(_QWORD *)&v25[qword_3DDE90] = 0;
  v34 = &v25[qword_3DDE98];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 1;
  v35 = &v25[qword_3DDDC0];
  v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v38 = type metadata accessor for Header(0, v37);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
  v35[v36] = 1;
  v25[qword_3DDE30] = 0;
  *(_QWORD *)&v25[qword_3DDDA0] = 0;
  v25[qword_3DDDD0] = 0;
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v182, v39, v39);
  *(_OWORD *)&v25[qword_3DDE28] = v182;
  v40 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v182, v40, v40);
  *(_QWORD *)&v25[qword_3DDD90] = v182;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v182, v41, v41);
  sub_1B738(&v182, (uint64_t)&v25[qword_3DDE48]);
  v42 = type metadata accessor for PageActionRunner();
  v43 = swift_allocObject(v42, 40, 7);
  swift_unknownObjectWeakInit(v43 + 16, 0);
  *(_QWORD *)(v43 + 24) = 0;
  *(_QWORD *)(v43 + 32) = 0;
  *(_QWORD *)&v25[qword_3DDE40] = v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v45 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v166 = v43;
  *(_QWORD *)&v182 = v43;
  *((_QWORD *)&v182 + 1) = v45;
  swift_retain(v43);
  v46 = BaseObjectGraph.satisfying<A>(_:with:)(v44, &v182, v44);
  v47 = type metadata accessor for FreezableContentSubject(0);
  v164 = (id)objc_opt_self(NSNotificationCenter);
  v48 = objc_msgSend(v164, "defaultCenter");
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  v49 = FreezableContentSubject.init(notificationCenter:)(v48);
  *(_QWORD *)&v182 = v49;
  v50 = BaseObjectGraph.satisfying<A>(_:with:)(v47, &v182, v47);
  swift_release(v49);
  swift_release(v46);
  v51 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  v53 = ClickLocationTracker.init()(v52);
  *(_QWORD *)&v182 = v53;
  v54 = BaseObjectGraph.satisfying<A>(_:with:)(v51, &v182, v51);
  v55 = swift_retain(v53);
  v56 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v53, v55);
  swift_release(v50);
  swift_release(v54);
  v57 = swift_release_n(v53, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v57);
  v58 = BaseObjectGraph.addingImpressionsTracker(with:)(v15);
  v59 = swift_release(v56);
  v60 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v15, v13, v59);
  static ImpressionsCalculator.Configuration.half.getter(v60);
  v61 = BaseObjectGraph.addingImpressionsCalculator(with:)(v12);
  v62 = swift_release(v58);
  (*(void (**)(char *, uint64_t, __n128))(v176 + 8))(v12, v178, v62);
  v63 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
  v64 = SearchFiltersSource.init()();
  *(_QWORD *)&v182 = v64;
  v65 = BaseObjectGraph.satisfying<A>(_:with:)(v63, &v182, v63);
  v66 = swift_retain(v64);
  v67 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v64, v66);
  swift_release(v61);
  swift_release(v65);
  swift_release_n(v64, 2);
  v68 = type metadata accessor for MetricsController(0);
  v69 = BaseObjectGraph.satisfying<A>(_:with:)(v68, sub_2356FC, 0, v68);
  swift_release(v67);
  v70 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v182, v70, v70);
  *(_QWORD *)&v25[qword_3DDE38] = v182;
  BaseObjectGraph.inject<A>(_:)(&v182, v68, v68);
  *(_QWORD *)&v25[qword_3DDE08] = v182;
  v71 = v69;
  *(_QWORD *)&v25[qword_3DDD98] = v69;
  v73 = type metadata accessor for HighlightsPresenter(0, v72);
  v74 = sub_89A0(&qword_3D3050, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightsPresenter, (uint64_t)&protocol conformance descriptor for HighlightsPresenter);
  v75 = swift_retain_n(v69, 2);
  v77 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v75, v76, v73, v74);
  *(_QWORD *)&v25[qword_3DDD70] = v77;
  v78 = swift_retain(v77);
  v79 = (uint64_t)v174;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v73, v74, v78);
  v80 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v73, v74);
  LOBYTE(v15) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v73, v74);
  v81 = v77;
  LOBYTE(v77) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v73, v74);
  v82 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
  swift_retain(v71);
  v83 = sub_39E0C(v79, v80, v15 & 1, v77 & 1, v71);
  swift_release(v71);
  swift_release(v80);
  *(_QWORD *)&v25[qword_3DDDA8] = v83;
  v183 = v73;
  v184 = &protocol witness table for HighlightsPresenter;
  *(_QWORD *)&v182 = v81;
  swift_retain(v81);
  v84 = v74;
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v73, v74);
  v86 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v71;
  swift_retain(v71);
  v88 = sub_E2290(v87, (uint64_t)&v182, v85);
  swift_release(v71);
  swift_release(v85);
  *(_QWORD *)&v25[qword_3DDDB0] = v88;

  v89 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v181.receiver = v25;
  v181.super_class = ObjectType;
  v90 = (char *)objc_msgSendSuper2(&v181, "initWithCollectionViewLayout:", v89);

  v91 = *(_QWORD *)&v90[qword_3DDE40];
  swift_unknownObjectWeakAssign(v91 + 16, v90);
  v92 = swift_allocObject(&unk_37D068, 24, 7);
  swift_unknownObjectWeakInit(v92 + 16, v90);
  v93 = *(_QWORD *)(v91 + 24);
  v94 = *(_QWORD *)(v91 + 32);
  *(_QWORD *)(v91 + 24) = sub_8D14C;
  *(_QWORD *)(v91 + 32) = v92;
  v95 = v90;
  sub_1D618(v93, v94);
  v178 = v81;
  *(_QWORD *)&v182 = dispatch thunk of ModernPagePresenter.pageContent.getter(v73, v84);
  v96 = swift_allocObject(&unk_37D068, 24, 7);
  swift_unknownObjectWeakInit(v96 + 16, v95);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v98 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v99 = Publisher<>.sink(receiveValue:)(sub_8D7E4, v96, v97, v98);
  swift_release(v96);
  swift_release(v182);
  v100 = &v95[qword_3DDDF8];
  swift_beginAccess(&v95[qword_3DDDF8], &v182, 33, 0);
  v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  ObjectType = (objc_class *)v101;
  v102 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  v103 = v101;
  v104 = v102;
  v174 = (char *)v102;
  AnyCancellable.store<A>(in:)(v100, v103, v102);
  swift_endAccess(&v182);
  v105 = swift_release(v99);
  v163 = v73;
  v176 = v84;
  v106 = dispatch thunk of ModernPagePresenter.pageRender.getter(v73, v84, v105);
  v108 = v107;
  v109 = swift_getObjectType();
  *(_QWORD *)&v182 = v106;
  v110 = swift_allocObject(&unk_37D068, 24, 7);
  swift_unknownObjectWeakInit(v110 + 16, v95);
  v111 = Publisher<>.sink(receiveValue:)(sub_8D18C, v110, v109, *(_QWORD *)(v108 + 8));
  swift_release(v110);
  swift_unknownObjectRelease(v182);
  swift_beginAccess(v100, &v182, 33, 0);
  v112 = ObjectType;
  AnyCancellable.store<A>(in:)(v100, ObjectType, v104);
  swift_endAccess(&v182);
  *(_QWORD *)&v113 = swift_release(v111).n128_u64[0];
  v114 = objc_msgSend(v164, "defaultCenter", v113);
  objc_msgSend(v114, "addObserver:selector:name:object:", v95, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v182 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v73, v84);
  v115 = swift_allocObject(&unk_37D068, 24, 7);
  swift_unknownObjectWeakInit(v115 + 16, v95);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v117 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v118 = Publisher<>.sink(receiveValue:)(sub_8D80C, v115, v116, v117);
  swift_release(v115);
  swift_release(v182);
  swift_beginAccess(v100, &v182, 33, 0);
  v119 = v174;
  AnyCancellable.store<A>(in:)(v100, v112, v174);
  swift_endAccess(&v182);
  swift_release(v118);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v95[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v95[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v182, 0, 0);
  v123 = *v122;
  v180[0] = v123;
  v124 = swift_allocObject(&unk_37D068, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v95);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8D840, v124, v125, v126);
  swift_release(v124);
  swift_release(v180[0]);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v112, v119);
  swift_endAccess(v180);
  swift_release(v127);
  v128 = v163;
  v129 = v176;
  v180[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v163, v176);
  v130 = swift_allocObject(&unk_37D068, 24, 7);
  swift_unknownObjectWeakInit(v130 + 16, v95);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v132 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v133 = Publisher<>.sink(receiveValue:)(sub_8D870, v130, v131, v132);
  swift_release(v130);
  swift_release(v180[0]);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v112, v119);
  swift_endAccess(v180);
  v134 = swift_release(v133);
  v180[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v128, v129, v134);
  v135 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v179 = (id)static OS_dispatch_queue.main.getter(v136);
  v137 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v138 = (uint64_t)v167;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v167, 1, 1, v137);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v140 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v141 = sub_1E2DC();
  v142 = v168;
  Publisher.receive<A>(on:options:)(&v179, v138, v139, v135, v140, v141);
  sub_D1D4(v138, &qword_3D2E70);

  swift_release(v180[0]);
  v143 = swift_allocObject(&unk_37D068, 24, 7);
  swift_unknownObjectWeakInit(v143 + 16, v95);
  v144 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v145 = v169;
  v146 = Publisher<>.sink(receiveValue:)(sub_8E358, v143, v169, v144);
  v147 = swift_release(v143);
  (*(void (**)(char *, uint64_t, __n128))(v170 + 8))(v142, v145, v147);
  swift_beginAccess(v100, v180, 33, 0);
  v149 = v174;
  v148 = ObjectType;
  AnyCancellable.store<A>(in:)(v100, ObjectType, v174);
  swift_endAccess(v180);
  v150 = swift_release(v146);
  v151 = v178;
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v128, v176, v150);
  v180[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v171;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D068, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v95);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v172;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v172, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v173 + 8))(v155, v158, v160);
  swift_beginAccess(v100, v180, 33, 0);
  AnyCancellable.store<A>(in:)(v100, v148, v149);
  swift_endAccess(v180);
  swift_release(v166);
  swift_release(v165);
  swift_release(v151);
  swift_release(v177);
  swift_release(v159);

  return v95;
}

char *sub_6C4E4(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  objc_class *v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  char *v162;
  id v163;
  char *v164;
  uint64_t v165;
  objc_class *ObjectType;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  _QWORD v182[3];
  objc_super v183;
  __int128 v184;
  uint64_t v185;
  void *v186;

  v180 = a2;
  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v4 = *(_QWORD *)(v3 - 8);
  v173 = v3;
  v174 = v4;
  __chkstk_darwin(v3);
  v172 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v171 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v164 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ModernEpisodesPresenter.Configuration(0, v10);
  v178 = *(_QWORD *)(v12 - 8);
  v179 = v12;
  __chkstk_darwin(v12);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v175 = *(_QWORD *)(v14 - 8);
  v176 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v15);
  v165 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v25 = &v2[qword_3FD5D8];
  v26 = enum case for FlowDestinationPageHeader.standard(_:);
  v27 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  v28 = &v2[qword_3DDD80];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v29 = &v2[qword_3DDE58];
  LOBYTE(v184) = 0;
  v30 = v2;
  Published.init(initialValue:)(&v184, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v30[qword_3DDE00] = 0;
  v31 = &v30[qword_3DDE60];
  v32 = type metadata accessor for InteractionContext.Page(0);
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v30[qword_3DDE68] = 1;
  *(_QWORD *)&v30[qword_3DDE70] = 0;
  *(_QWORD *)&v30[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v30[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v34 = &v30[qword_3DDE78];
  v35 = type metadata accessor for PageID(0, v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v30[qword_3DDDB8];
  v30[qword_3DDDB8] = 0;
  v37 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *(_QWORD *)&v30[qword_3FD5F0] = 0;
  *(_QWORD *)&v30[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v30[qword_3DDE88] = 0;
  v38 = &v30[qword_3FD5E8];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)&v30[qword_3DDE90] = 0;
  v39 = &v30[qword_3DDE98];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v40 = &v30[qword_3DDDC0];
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v43 = type metadata accessor for Header(0, v42);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
  v40[v41] = 1;
  v30[qword_3DDE30] = 0;
  *(_QWORD *)&v30[qword_3DDDA0] = 0;
  v30[qword_3DDDD0] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v184, v44, v44);
  *(_OWORD *)&v30[qword_3DDE28] = v184;
  v45 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v184, v45, v45);
  *(_QWORD *)&v30[qword_3DDD90] = v184;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v184, v46, v46);
  sub_1B738(&v184, (uint64_t)&v30[qword_3DDE48]);
  v47 = type metadata accessor for PageActionRunner();
  v48 = swift_allocObject(v47, 40, 7);
  swift_unknownObjectWeakInit(v48 + 16, 0);
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)&v30[qword_3DDE40] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v50 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v167 = v48;
  *(_QWORD *)&v184 = v48;
  *((_QWORD *)&v184 + 1) = v50;
  swift_retain(v48);
  v51 = BaseObjectGraph.satisfying<A>(_:with:)(v49, &v184, v49);
  v52 = type metadata accessor for FreezableContentSubject(0);
  v163 = (id)objc_opt_self(NSNotificationCenter);
  v53 = objc_msgSend(v163, "defaultCenter");
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = FreezableContentSubject.init(notificationCenter:)(v53);
  *(_QWORD *)&v184 = v54;
  v55 = BaseObjectGraph.satisfying<A>(_:with:)(v52, &v184, v52);
  swift_release(v54);
  swift_release(v51);
  v56 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v58 = ClickLocationTracker.init()(v57);
  *(_QWORD *)&v184 = v58;
  v59 = BaseObjectGraph.satisfying<A>(_:with:)(v56, &v184, v56);
  v60 = swift_retain(v58);
  v61 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v58, v60);
  swift_release(v55);
  swift_release(v59);
  v62 = swift_release_n(v58, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v62);
  v63 = BaseObjectGraph.addingImpressionsTracker(with:)(v20);
  v64 = swift_release(v61);
  v65 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v20, v18, v64);
  static ImpressionsCalculator.Configuration.half.getter(v65);
  v66 = BaseObjectGraph.addingImpressionsCalculator(with:)(v17);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v17, v176, v67);
  v68 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = SearchFiltersSource.init()();
  *(_QWORD *)&v184 = v69;
  v70 = BaseObjectGraph.satisfying<A>(_:with:)(v68, &v184, v68);
  v71 = swift_retain(v69);
  v72 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v69, v71);
  swift_release(v66);
  swift_release(v70);
  swift_release_n(v69, 2);
  v73 = type metadata accessor for MetricsController(0);
  v74 = BaseObjectGraph.satisfying<A>(_:with:)(v73, sub_2356FC, 0, v73);
  swift_release(v72);
  v75 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v184, v75, v75);
  *(_QWORD *)&v30[qword_3DDE38] = v184;
  BaseObjectGraph.inject<A>(_:)(&v184, v73, v73);
  *(_QWORD *)&v30[qword_3DDE08] = v184;
  v76 = v74;
  *(_QWORD *)&v30[qword_3DDD98] = v74;
  v78 = type metadata accessor for ModernEpisodesPresenter(0, v77);
  v79 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v162, v180, v179);
  v80 = sub_89A0(&qword_3D3168, (uint64_t (*)(uint64_t))&type metadata accessor for ModernEpisodesPresenter, (uint64_t)&protocol conformance descriptor for ModernEpisodesPresenter);
  v81 = swift_retain_n(v74, 2);
  v82 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v81, v79, v78, v80);
  *(_QWORD *)&v30[qword_3DDD70] = v82;
  v83 = swift_retain(v82);
  v84 = (uint64_t)v164;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v78, v80, v83);
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  LOBYTE(v79) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v78, v80);
  LOBYTE(v74) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v78, v80);
  v86 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_retain(v76);
  v87 = sub_39E0C(v84, v85, v79 & 1, v74 & 1, v76);
  swift_release(v76);
  swift_release(v85);
  *(_QWORD *)&v30[qword_3DDDA8] = v87;
  v185 = v78;
  v186 = &protocol witness table for ModernEpisodesPresenter;
  *(_QWORD *)&v184 = v82;
  swift_retain(v82);
  v88 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  v89 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v76;
  swift_retain(v76);
  v91 = sub_E2290(v90, (uint64_t)&v184, v88);
  swift_release(v76);
  swift_release(v88);
  *(_QWORD *)&v30[qword_3DDDB0] = v91;

  v92 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v183.receiver = v30;
  v183.super_class = ObjectType;
  v93 = (char *)objc_msgSendSuper2(&v183, "initWithCollectionViewLayout:", v92);

  v94 = *(_QWORD *)&v93[qword_3DDE40];
  swift_unknownObjectWeakAssign(v94 + 16, v93);
  v95 = swift_allocObject(&unk_37D720, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v93);
  v96 = *(_QWORD *)(v94 + 24);
  v97 = *(_QWORD *)(v94 + 32);
  *(_QWORD *)(v94 + 24) = sub_8D14C;
  *(_QWORD *)(v94 + 32) = v95;
  v98 = v93;
  sub_1D618(v96, v97);
  v99 = v78;
  v176 = v78;
  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.pageContent.getter(v78, v80);
  v100 = swift_allocObject(&unk_37D720, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v98);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_8E03C, v100, v101, v102);
  swift_release(v100);
  swift_release(v184);
  v104 = &v98[qword_3DDDF8];
  swift_beginAccess(&v98[qword_3DDDF8], &v184, 33, 0);
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  v107 = swift_release(v103);
  v175 = v80;
  v108 = dispatch thunk of ModernPagePresenter.pageRender.getter(v99, v80, v107);
  v110 = v109;
  v111 = swift_getObjectType();
  *(_QWORD *)&v184 = v108;
  v112 = swift_allocObject(&unk_37D720, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v98);
  v113 = Publisher<>.sink(receiveValue:)(sub_8D18C, v112, v111, *(_QWORD *)(v110 + 8));
  swift_release(v112);
  swift_unknownObjectRelease(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  *(_QWORD *)&v114 = swift_release(v113).n128_u64[0];
  v115 = objc_msgSend(v163, "defaultCenter", v114);
  objc_msgSend(v115, "addObserver:selector:name:object:", v98, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v176, v80);
  v116 = swift_allocObject(&unk_37D720, 24, 7);
  swift_unknownObjectWeakInit(v116 + 16, v98);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v118 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v119 = Publisher<>.sink(receiveValue:)(sub_8E064, v116, v117, v118);
  swift_release(v116);
  swift_release(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  swift_release(v119);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v98[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v98[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v184, 0, 0);
  v123 = *v122;
  v182[0] = v123;
  v124 = swift_allocObject(&unk_37D720, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v98);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8E098, v124, v125, v126);
  swift_release(v124);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  ObjectType = (objc_class *)v105;
  v128 = v106;
  v164 = (char *)v106;
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(v182);
  swift_release(v127);
  v130 = v175;
  v129 = v176;
  v182[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v176, v175);
  v131 = swift_allocObject(&unk_37D720, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16, v98);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v133 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v134 = Publisher<>.sink(receiveValue:)(sub_8E0C8, v131, v132, v133);
  swift_release(v131);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v128);
  swift_endAccess(v182);
  v135 = swift_release(v134);
  v182[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v129, v130, v135);
  v136 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v181 = (id)static OS_dispatch_queue.main.getter(v137);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v139 = (uint64_t)v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v168, 1, 1, v138);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v141 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v142 = sub_1E2DC();
  v143 = v169;
  Publisher.receive<A>(on:options:)(&v181, v139, v140, v136, v141, v142);
  sub_D1D4(v139, &qword_3D2E70);

  swift_release(v182[0]);
  v144 = swift_allocObject(&unk_37D720, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v98);
  v145 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v146 = v170;
  v147 = Publisher<>.sink(receiveValue:)(sub_8E358, v144, v170, v145);
  v148 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v143, v146, v148);
  swift_beginAccess(v104, v182, 33, 0);
  v149 = ObjectType;
  v150 = v164;
  AnyCancellable.store<A>(in:)(v104, ObjectType, v164);
  swift_endAccess(v182);
  v151 = swift_release(v147);
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v129, v175, v151);
  v182[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v172;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37D720, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v98);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v173;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v173, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v155, v158, v160);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v149, v150);
  swift_endAccess(v182);
  swift_release(v167);
  swift_release(v165);
  swift_release(v82);
  swift_release(v177);
  swift_release(v159);

  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
  return v98;
}

char *sub_6D744(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  objc_class *v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  char *v162;
  id v163;
  char *v164;
  uint64_t v165;
  objc_class *ObjectType;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  _QWORD v182[3];
  objc_super v183;
  __int128 v184;
  uint64_t v185;
  void *v186;

  v180 = a2;
  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v4 = *(_QWORD *)(v3 - 8);
  v173 = v3;
  v174 = v4;
  __chkstk_darwin(v3);
  v172 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v171 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v164 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CategoryListPresenter.Configuration(0, v10);
  v178 = *(_QWORD *)(v12 - 8);
  v179 = v12;
  __chkstk_darwin(v12);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v175 = *(_QWORD *)(v14 - 8);
  v176 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v15);
  v165 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v25 = &v2[qword_3FD5D8];
  v26 = enum case for FlowDestinationPageHeader.standard(_:);
  v27 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  v28 = &v2[qword_3DDD80];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v29 = &v2[qword_3DDE58];
  LOBYTE(v184) = 0;
  v30 = v2;
  Published.init(initialValue:)(&v184, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v30[qword_3DDE00] = 0;
  v31 = &v30[qword_3DDE60];
  v32 = type metadata accessor for InteractionContext.Page(0);
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v30[qword_3DDE68] = 1;
  *(_QWORD *)&v30[qword_3DDE70] = 0;
  *(_QWORD *)&v30[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v30[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v34 = &v30[qword_3DDE78];
  v35 = type metadata accessor for PageID(0, v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v30[qword_3DDDB8];
  v30[qword_3DDDB8] = 0;
  v37 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *(_QWORD *)&v30[qword_3FD5F0] = 0;
  *(_QWORD *)&v30[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v30[qword_3DDE88] = 0;
  v38 = &v30[qword_3FD5E8];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)&v30[qword_3DDE90] = 0;
  v39 = &v30[qword_3DDE98];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v40 = &v30[qword_3DDDC0];
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v43 = type metadata accessor for Header(0, v42);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
  v40[v41] = 1;
  v30[qword_3DDE30] = 0;
  *(_QWORD *)&v30[qword_3DDDA0] = 0;
  v30[qword_3DDDD0] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v184, v44, v44);
  *(_OWORD *)&v30[qword_3DDE28] = v184;
  v45 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v184, v45, v45);
  *(_QWORD *)&v30[qword_3DDD90] = v184;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v184, v46, v46);
  sub_1B738(&v184, (uint64_t)&v30[qword_3DDE48]);
  v47 = type metadata accessor for PageActionRunner();
  v48 = swift_allocObject(v47, 40, 7);
  swift_unknownObjectWeakInit(v48 + 16, 0);
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)&v30[qword_3DDE40] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v50 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v167 = v48;
  *(_QWORD *)&v184 = v48;
  *((_QWORD *)&v184 + 1) = v50;
  swift_retain(v48);
  v51 = BaseObjectGraph.satisfying<A>(_:with:)(v49, &v184, v49);
  v52 = type metadata accessor for FreezableContentSubject(0);
  v163 = (id)objc_opt_self(NSNotificationCenter);
  v53 = objc_msgSend(v163, "defaultCenter");
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = FreezableContentSubject.init(notificationCenter:)(v53);
  *(_QWORD *)&v184 = v54;
  v55 = BaseObjectGraph.satisfying<A>(_:with:)(v52, &v184, v52);
  swift_release(v54);
  swift_release(v51);
  v56 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v58 = ClickLocationTracker.init()(v57);
  *(_QWORD *)&v184 = v58;
  v59 = BaseObjectGraph.satisfying<A>(_:with:)(v56, &v184, v56);
  v60 = swift_retain(v58);
  v61 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v58, v60);
  swift_release(v55);
  swift_release(v59);
  v62 = swift_release_n(v58, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v62);
  v63 = BaseObjectGraph.addingImpressionsTracker(with:)(v20);
  v64 = swift_release(v61);
  v65 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v20, v18, v64);
  static ImpressionsCalculator.Configuration.half.getter(v65);
  v66 = BaseObjectGraph.addingImpressionsCalculator(with:)(v17);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v17, v176, v67);
  v68 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = SearchFiltersSource.init()();
  *(_QWORD *)&v184 = v69;
  v70 = BaseObjectGraph.satisfying<A>(_:with:)(v68, &v184, v68);
  v71 = swift_retain(v69);
  v72 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v69, v71);
  swift_release(v66);
  swift_release(v70);
  swift_release_n(v69, 2);
  v73 = type metadata accessor for MetricsController(0);
  v74 = BaseObjectGraph.satisfying<A>(_:with:)(v73, sub_2356FC, 0, v73);
  swift_release(v72);
  v75 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v184, v75, v75);
  *(_QWORD *)&v30[qword_3DDE38] = v184;
  BaseObjectGraph.inject<A>(_:)(&v184, v73, v73);
  *(_QWORD *)&v30[qword_3DDE08] = v184;
  v76 = v74;
  *(_QWORD *)&v30[qword_3DDD98] = v74;
  v78 = type metadata accessor for CategoryListPresenter(0, v77);
  v79 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v162, v180, v179);
  v80 = sub_89A0(&qword_3D3040, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryListPresenter, (uint64_t)&protocol conformance descriptor for CategoryListPresenter);
  v81 = swift_retain_n(v74, 2);
  v82 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v81, v79, v78, v80);
  *(_QWORD *)&v30[qword_3DDD70] = v82;
  v83 = swift_retain(v82);
  v84 = (uint64_t)v164;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v78, v80, v83);
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  LOBYTE(v79) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v78, v80);
  LOBYTE(v74) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v78, v80);
  v86 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_retain(v76);
  v87 = sub_39E0C(v84, v85, v79 & 1, v74 & 1, v76);
  swift_release(v76);
  swift_release(v85);
  *(_QWORD *)&v30[qword_3DDDA8] = v87;
  v185 = v78;
  v186 = &protocol witness table for CategoryListPresenter;
  *(_QWORD *)&v184 = v82;
  swift_retain(v82);
  v88 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  v89 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v76;
  swift_retain(v76);
  v91 = sub_E2290(v90, (uint64_t)&v184, v88);
  swift_release(v76);
  swift_release(v88);
  *(_QWORD *)&v30[qword_3DDDB0] = v91;

  v92 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v183.receiver = v30;
  v183.super_class = ObjectType;
  v93 = (char *)objc_msgSendSuper2(&v183, "initWithCollectionViewLayout:", v92);

  v94 = *(_QWORD *)&v93[qword_3DDE40];
  swift_unknownObjectWeakAssign(v94 + 16, v93);
  v95 = swift_allocObject(&unk_37CFC8, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v93);
  v96 = *(_QWORD *)(v94 + 24);
  v97 = *(_QWORD *)(v94 + 32);
  *(_QWORD *)(v94 + 24) = sub_8D14C;
  *(_QWORD *)(v94 + 32) = v95;
  v98 = v93;
  sub_1D618(v96, v97);
  v99 = v78;
  v176 = v78;
  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.pageContent.getter(v78, v80);
  v100 = swift_allocObject(&unk_37CFC8, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v98);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_8D6FC, v100, v101, v102);
  swift_release(v100);
  swift_release(v184);
  v104 = &v98[qword_3DDDF8];
  swift_beginAccess(&v98[qword_3DDDF8], &v184, 33, 0);
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  v107 = swift_release(v103);
  v175 = v80;
  v108 = dispatch thunk of ModernPagePresenter.pageRender.getter(v99, v80, v107);
  v110 = v109;
  v111 = swift_getObjectType();
  *(_QWORD *)&v184 = v108;
  v112 = swift_allocObject(&unk_37CFC8, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v98);
  v113 = Publisher<>.sink(receiveValue:)(sub_8D18C, v112, v111, *(_QWORD *)(v110 + 8));
  swift_release(v112);
  swift_unknownObjectRelease(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  *(_QWORD *)&v114 = swift_release(v113).n128_u64[0];
  v115 = objc_msgSend(v163, "defaultCenter", v114);
  objc_msgSend(v115, "addObserver:selector:name:object:", v98, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v176, v80);
  v116 = swift_allocObject(&unk_37CFC8, 24, 7);
  swift_unknownObjectWeakInit(v116 + 16, v98);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v118 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v119 = Publisher<>.sink(receiveValue:)(sub_8D724, v116, v117, v118);
  swift_release(v116);
  swift_release(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  swift_release(v119);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v98[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v98[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v184, 0, 0);
  v123 = *v122;
  v182[0] = v123;
  v124 = swift_allocObject(&unk_37CFC8, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v98);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8D758, v124, v125, v126);
  swift_release(v124);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  ObjectType = (objc_class *)v105;
  v128 = v106;
  v164 = (char *)v106;
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(v182);
  swift_release(v127);
  v130 = v175;
  v129 = v176;
  v182[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v176, v175);
  v131 = swift_allocObject(&unk_37CFC8, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16, v98);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v133 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v134 = Publisher<>.sink(receiveValue:)(sub_8D788, v131, v132, v133);
  swift_release(v131);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v128);
  swift_endAccess(v182);
  v135 = swift_release(v134);
  v182[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v129, v130, v135);
  v136 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v181 = (id)static OS_dispatch_queue.main.getter(v137);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v139 = (uint64_t)v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v168, 1, 1, v138);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v141 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v142 = sub_1E2DC();
  v143 = v169;
  Publisher.receive<A>(on:options:)(&v181, v139, v140, v136, v141, v142);
  sub_D1D4(v139, &qword_3D2E70);

  swift_release(v182[0]);
  v144 = swift_allocObject(&unk_37CFC8, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v98);
  v145 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v146 = v170;
  v147 = Publisher<>.sink(receiveValue:)(sub_8E358, v144, v170, v145);
  v148 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v143, v146, v148);
  swift_beginAccess(v104, v182, 33, 0);
  v149 = ObjectType;
  v150 = v164;
  AnyCancellable.store<A>(in:)(v104, ObjectType, v164);
  swift_endAccess(v182);
  v151 = swift_release(v147);
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v129, v175, v151);
  v182[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v172;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37CFC8, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v98);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v173;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v173, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v155, v158, v160);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v149, v150);
  swift_endAccess(v182);
  swift_release(v167);
  swift_release(v165);
  swift_release(v82);
  swift_release(v177);
  swift_release(v159);

  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
  return v98;
}

char *sub_6E9A4(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  objc_class *v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  char *v162;
  id v163;
  char *v164;
  uint64_t v165;
  objc_class *ObjectType;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  _QWORD v182[3];
  objc_super v183;
  __int128 v184;
  uint64_t v185;
  void *v186;

  v180 = a2;
  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v4 = *(_QWORD *)(v3 - 8);
  v173 = v3;
  v174 = v4;
  __chkstk_darwin(v3);
  v172 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v171 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v164 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ChannelListPresenter.Configuration(0, v10);
  v178 = *(_QWORD *)(v12 - 8);
  v179 = v12;
  __chkstk_darwin(v12);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v175 = *(_QWORD *)(v14 - 8);
  v176 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v15);
  v165 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v25 = &v2[qword_3FD5D8];
  v26 = enum case for FlowDestinationPageHeader.standard(_:);
  v27 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  v28 = &v2[qword_3DDD80];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v29 = &v2[qword_3DDE58];
  LOBYTE(v184) = 0;
  v30 = v2;
  Published.init(initialValue:)(&v184, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v30[qword_3DDE00] = 0;
  v31 = &v30[qword_3DDE60];
  v32 = type metadata accessor for InteractionContext.Page(0);
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v30[qword_3DDE68] = 1;
  *(_QWORD *)&v30[qword_3DDE70] = 0;
  *(_QWORD *)&v30[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v30[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v34 = &v30[qword_3DDE78];
  v35 = type metadata accessor for PageID(0, v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v30[qword_3DDDB8];
  v30[qword_3DDDB8] = 0;
  v37 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *(_QWORD *)&v30[qword_3FD5F0] = 0;
  *(_QWORD *)&v30[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v30[qword_3DDE88] = 0;
  v38 = &v30[qword_3FD5E8];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)&v30[qword_3DDE90] = 0;
  v39 = &v30[qword_3DDE98];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v40 = &v30[qword_3DDDC0];
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v43 = type metadata accessor for Header(0, v42);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
  v40[v41] = 1;
  v30[qword_3DDE30] = 0;
  *(_QWORD *)&v30[qword_3DDDA0] = 0;
  v30[qword_3DDDD0] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v184, v44, v44);
  *(_OWORD *)&v30[qword_3DDE28] = v184;
  v45 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v184, v45, v45);
  *(_QWORD *)&v30[qword_3DDD90] = v184;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v184, v46, v46);
  sub_1B738(&v184, (uint64_t)&v30[qword_3DDE48]);
  v47 = type metadata accessor for PageActionRunner();
  v48 = swift_allocObject(v47, 40, 7);
  swift_unknownObjectWeakInit(v48 + 16, 0);
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)&v30[qword_3DDE40] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v50 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v167 = v48;
  *(_QWORD *)&v184 = v48;
  *((_QWORD *)&v184 + 1) = v50;
  swift_retain(v48);
  v51 = BaseObjectGraph.satisfying<A>(_:with:)(v49, &v184, v49);
  v52 = type metadata accessor for FreezableContentSubject(0);
  v163 = (id)objc_opt_self(NSNotificationCenter);
  v53 = objc_msgSend(v163, "defaultCenter");
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = FreezableContentSubject.init(notificationCenter:)(v53);
  *(_QWORD *)&v184 = v54;
  v55 = BaseObjectGraph.satisfying<A>(_:with:)(v52, &v184, v52);
  swift_release(v54);
  swift_release(v51);
  v56 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v58 = ClickLocationTracker.init()(v57);
  *(_QWORD *)&v184 = v58;
  v59 = BaseObjectGraph.satisfying<A>(_:with:)(v56, &v184, v56);
  v60 = swift_retain(v58);
  v61 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v58, v60);
  swift_release(v55);
  swift_release(v59);
  v62 = swift_release_n(v58, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v62);
  v63 = BaseObjectGraph.addingImpressionsTracker(with:)(v20);
  v64 = swift_release(v61);
  v65 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v20, v18, v64);
  static ImpressionsCalculator.Configuration.half.getter(v65);
  v66 = BaseObjectGraph.addingImpressionsCalculator(with:)(v17);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v17, v176, v67);
  v68 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = SearchFiltersSource.init()();
  *(_QWORD *)&v184 = v69;
  v70 = BaseObjectGraph.satisfying<A>(_:with:)(v68, &v184, v68);
  v71 = swift_retain(v69);
  v72 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v69, v71);
  swift_release(v66);
  swift_release(v70);
  swift_release_n(v69, 2);
  v73 = type metadata accessor for MetricsController(0);
  v74 = BaseObjectGraph.satisfying<A>(_:with:)(v73, sub_2356FC, 0, v73);
  swift_release(v72);
  v75 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v184, v75, v75);
  *(_QWORD *)&v30[qword_3DDE38] = v184;
  BaseObjectGraph.inject<A>(_:)(&v184, v73, v73);
  *(_QWORD *)&v30[qword_3DDE08] = v184;
  v76 = v74;
  *(_QWORD *)&v30[qword_3DDD98] = v74;
  v78 = type metadata accessor for ChannelListPresenter(0, v77);
  v79 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v162, v180, v179);
  v80 = sub_89A0(&qword_3D3030, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelListPresenter, (uint64_t)&protocol conformance descriptor for ChannelListPresenter);
  v81 = swift_retain_n(v74, 2);
  v82 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v81, v79, v78, v80);
  *(_QWORD *)&v30[qword_3DDD70] = v82;
  v83 = swift_retain(v82);
  v84 = (uint64_t)v164;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v78, v80, v83);
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  LOBYTE(v79) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v78, v80);
  LOBYTE(v74) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v78, v80);
  v86 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_retain(v76);
  v87 = sub_39E0C(v84, v85, v79 & 1, v74 & 1, v76);
  swift_release(v76);
  swift_release(v85);
  *(_QWORD *)&v30[qword_3DDDA8] = v87;
  v185 = v78;
  v186 = &protocol witness table for ChannelListPresenter;
  *(_QWORD *)&v184 = v82;
  swift_retain(v82);
  v88 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  v89 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v76;
  swift_retain(v76);
  v91 = sub_E2290(v90, (uint64_t)&v184, v88);
  swift_release(v76);
  swift_release(v88);
  *(_QWORD *)&v30[qword_3DDDB0] = v91;

  v92 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v183.receiver = v30;
  v183.super_class = ObjectType;
  v93 = (char *)objc_msgSendSuper2(&v183, "initWithCollectionViewLayout:", v92);

  v94 = *(_QWORD *)&v93[qword_3DDE40];
  swift_unknownObjectWeakAssign(v94 + 16, v93);
  v95 = swift_allocObject(&unk_37CF28, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v93);
  v96 = *(_QWORD *)(v94 + 24);
  v97 = *(_QWORD *)(v94 + 32);
  *(_QWORD *)(v94 + 24) = sub_8D14C;
  *(_QWORD *)(v94 + 32) = v95;
  v98 = v93;
  sub_1D618(v96, v97);
  v99 = v78;
  v176 = v78;
  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.pageContent.getter(v78, v80);
  v100 = swift_allocObject(&unk_37CF28, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v98);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_8D638, v100, v101, v102);
  swift_release(v100);
  swift_release(v184);
  v104 = &v98[qword_3DDDF8];
  swift_beginAccess(&v98[qword_3DDDF8], &v184, 33, 0);
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  v107 = swift_release(v103);
  v175 = v80;
  v108 = dispatch thunk of ModernPagePresenter.pageRender.getter(v99, v80, v107);
  v110 = v109;
  v111 = swift_getObjectType();
  *(_QWORD *)&v184 = v108;
  v112 = swift_allocObject(&unk_37CF28, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v98);
  v113 = Publisher<>.sink(receiveValue:)(sub_8D18C, v112, v111, *(_QWORD *)(v110 + 8));
  swift_release(v112);
  swift_unknownObjectRelease(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  *(_QWORD *)&v114 = swift_release(v113).n128_u64[0];
  v115 = objc_msgSend(v163, "defaultCenter", v114);
  objc_msgSend(v115, "addObserver:selector:name:object:", v98, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v176, v80);
  v116 = swift_allocObject(&unk_37CF28, 24, 7);
  swift_unknownObjectWeakInit(v116 + 16, v98);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v118 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v119 = Publisher<>.sink(receiveValue:)(sub_8D660, v116, v117, v118);
  swift_release(v116);
  swift_release(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  swift_release(v119);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v98[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v98[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v184, 0, 0);
  v123 = *v122;
  v182[0] = v123;
  v124 = swift_allocObject(&unk_37CF28, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v98);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8D694, v124, v125, v126);
  swift_release(v124);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  ObjectType = (objc_class *)v105;
  v128 = v106;
  v164 = (char *)v106;
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(v182);
  swift_release(v127);
  v130 = v175;
  v129 = v176;
  v182[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v176, v175);
  v131 = swift_allocObject(&unk_37CF28, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16, v98);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v133 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v134 = Publisher<>.sink(receiveValue:)(sub_8D6C4, v131, v132, v133);
  swift_release(v131);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v128);
  swift_endAccess(v182);
  v135 = swift_release(v134);
  v182[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v129, v130, v135);
  v136 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v181 = (id)static OS_dispatch_queue.main.getter(v137);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v139 = (uint64_t)v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v168, 1, 1, v138);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v141 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v142 = sub_1E2DC();
  v143 = v169;
  Publisher.receive<A>(on:options:)(&v181, v139, v140, v136, v141, v142);
  sub_D1D4(v139, &qword_3D2E70);

  swift_release(v182[0]);
  v144 = swift_allocObject(&unk_37CF28, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v98);
  v145 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v146 = v170;
  v147 = Publisher<>.sink(receiveValue:)(sub_8E358, v144, v170, v145);
  v148 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v143, v146, v148);
  swift_beginAccess(v104, v182, 33, 0);
  v149 = ObjectType;
  v150 = v164;
  AnyCancellable.store<A>(in:)(v104, ObjectType, v164);
  swift_endAccess(v182);
  v151 = swift_release(v147);
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v129, v175, v151);
  v182[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v172;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37CF28, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v98);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v173;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v173, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v155, v158, v160);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v149, v150);
  swift_endAccess(v182);
  swift_release(v167);
  swift_release(v165);
  swift_release(v82);
  swift_release(v177);
  swift_release(v159);

  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
  return v98;
}

char *sub_6FC04(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  objc_class *v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  char *v162;
  id v163;
  char *v164;
  uint64_t v165;
  objc_class *ObjectType;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  _QWORD v182[3];
  objc_super v183;
  __int128 v184;
  uint64_t v185;
  void *v186;

  v180 = a2;
  v177 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v4 = *(_QWORD *)(v3 - 8);
  v173 = v3;
  v174 = v4;
  __chkstk_darwin(v3);
  v172 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v168 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v171 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v164 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ChannelPresenter.Configuration(0, v10);
  v178 = *(_QWORD *)(v12 - 8);
  v179 = v12;
  __chkstk_darwin(v12);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v175 = *(_QWORD *)(v14 - 8);
  v176 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v15);
  v165 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v25 = &v2[qword_3FD5D8];
  v26 = enum case for FlowDestinationPageHeader.standard(_:);
  v27 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  v28 = &v2[qword_3DDD80];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v29 = &v2[qword_3DDE58];
  LOBYTE(v184) = 0;
  v30 = v2;
  Published.init(initialValue:)(&v184, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v30[qword_3DDE00] = 0;
  v31 = &v30[qword_3DDE60];
  v32 = type metadata accessor for InteractionContext.Page(0);
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v30[qword_3DDE68] = 1;
  *(_QWORD *)&v30[qword_3DDE70] = 0;
  *(_QWORD *)&v30[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v30[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v34 = &v30[qword_3DDE78];
  v35 = type metadata accessor for PageID(0, v33);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v30[qword_3DDDB8];
  v30[qword_3DDDB8] = 0;
  v37 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *(_QWORD *)&v30[qword_3FD5F0] = 0;
  *(_QWORD *)&v30[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v30[qword_3DDE88] = 0;
  v38 = &v30[qword_3FD5E8];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)&v30[qword_3DDE90] = 0;
  v39 = &v30[qword_3DDE98];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v40 = &v30[qword_3DDDC0];
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v43 = type metadata accessor for Header(0, v42);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
  v40[v41] = 1;
  v30[qword_3DDE30] = 0;
  *(_QWORD *)&v30[qword_3DDDA0] = 0;
  v30[qword_3DDDD0] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(&v184, v44, v44);
  *(_OWORD *)&v30[qword_3DDE28] = v184;
  v45 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v184, v45, v45);
  *(_QWORD *)&v30[qword_3DDD90] = v184;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(&v184, v46, v46);
  sub_1B738(&v184, (uint64_t)&v30[qword_3DDE48]);
  v47 = type metadata accessor for PageActionRunner();
  v48 = swift_allocObject(v47, 40, 7);
  swift_unknownObjectWeakInit(v48 + 16, 0);
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)&v30[qword_3DDE40] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v50 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  v167 = v48;
  *(_QWORD *)&v184 = v48;
  *((_QWORD *)&v184 + 1) = v50;
  swift_retain(v48);
  v51 = BaseObjectGraph.satisfying<A>(_:with:)(v49, &v184, v49);
  v52 = type metadata accessor for FreezableContentSubject(0);
  v163 = (id)objc_opt_self(NSNotificationCenter);
  v53 = objc_msgSend(v163, "defaultCenter");
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = FreezableContentSubject.init(notificationCenter:)(v53);
  *(_QWORD *)&v184 = v54;
  v55 = BaseObjectGraph.satisfying<A>(_:with:)(v52, &v184, v52);
  swift_release(v54);
  swift_release(v51);
  v56 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v58 = ClickLocationTracker.init()(v57);
  *(_QWORD *)&v184 = v58;
  v59 = BaseObjectGraph.satisfying<A>(_:with:)(v56, &v184, v56);
  v60 = swift_retain(v58);
  v61 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v58, v60);
  swift_release(v55);
  swift_release(v59);
  v62 = swift_release_n(v58, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v62);
  v63 = BaseObjectGraph.addingImpressionsTracker(with:)(v20);
  v64 = swift_release(v61);
  v65 = (*(uint64_t (**)(char *, uint64_t, __n128))(v165 + 8))(v20, v18, v64);
  static ImpressionsCalculator.Configuration.half.getter(v65);
  v66 = BaseObjectGraph.addingImpressionsCalculator(with:)(v17);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v17, v176, v67);
  v68 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = SearchFiltersSource.init()();
  *(_QWORD *)&v184 = v69;
  v70 = BaseObjectGraph.satisfying<A>(_:with:)(v68, &v184, v68);
  v71 = swift_retain(v69);
  v72 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v69, v71);
  swift_release(v66);
  swift_release(v70);
  swift_release_n(v69, 2);
  v73 = type metadata accessor for MetricsController(0);
  v74 = BaseObjectGraph.satisfying<A>(_:with:)(v73, sub_2356FC, 0, v73);
  swift_release(v72);
  v75 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v184, v75, v75);
  *(_QWORD *)&v30[qword_3DDE38] = v184;
  BaseObjectGraph.inject<A>(_:)(&v184, v73, v73);
  *(_QWORD *)&v30[qword_3DDE08] = v184;
  v76 = v74;
  *(_QWORD *)&v30[qword_3DDD98] = v74;
  v78 = type metadata accessor for ChannelPresenter(0, v77);
  v79 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v162, v180, v179);
  v80 = sub_89A0(&qword_3D3020, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelPresenter, (uint64_t)&protocol conformance descriptor for ChannelPresenter);
  v81 = swift_retain_n(v74, 2);
  v82 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v81, v79, v78, v80);
  *(_QWORD *)&v30[qword_3DDD70] = v82;
  v83 = swift_retain(v82);
  v84 = (uint64_t)v164;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v78, v80, v83);
  v85 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  LOBYTE(v79) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v78, v80);
  LOBYTE(v74) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v78, v80);
  v86 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_retain(v76);
  v87 = sub_39E0C(v84, v85, v79 & 1, v74 & 1, v76);
  swift_release(v76);
  swift_release(v85);
  *(_QWORD *)&v30[qword_3DDDA8] = v87;
  v185 = v78;
  v186 = &protocol witness table for ChannelPresenter;
  *(_QWORD *)&v184 = v82;
  swift_retain(v82);
  v88 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v78, v80);
  v89 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v165 = v76;
  swift_retain(v76);
  v91 = sub_E2290(v90, (uint64_t)&v184, v88);
  swift_release(v76);
  swift_release(v88);
  *(_QWORD *)&v30[qword_3DDDB0] = v91;

  v92 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v183.receiver = v30;
  v183.super_class = ObjectType;
  v93 = (char *)objc_msgSendSuper2(&v183, "initWithCollectionViewLayout:", v92);

  v94 = *(_QWORD *)&v93[qword_3DDE40];
  swift_unknownObjectWeakAssign(v94 + 16, v93);
  v95 = swift_allocObject(&unk_37CE88, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v93);
  v96 = *(_QWORD *)(v94 + 24);
  v97 = *(_QWORD *)(v94 + 32);
  *(_QWORD *)(v94 + 24) = sub_8D14C;
  *(_QWORD *)(v94 + 32) = v95;
  v98 = v93;
  sub_1D618(v96, v97);
  v99 = v78;
  v176 = v78;
  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.pageContent.getter(v78, v80);
  v100 = swift_allocObject(&unk_37CE88, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v98);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v102 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v103 = Publisher<>.sink(receiveValue:)(sub_8D574, v100, v101, v102);
  swift_release(v100);
  swift_release(v184);
  v104 = &v98[qword_3DDDF8];
  swift_beginAccess(&v98[qword_3DDDF8], &v184, 33, 0);
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v106 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  v107 = swift_release(v103);
  v175 = v80;
  v108 = dispatch thunk of ModernPagePresenter.pageRender.getter(v99, v80, v107);
  v110 = v109;
  v111 = swift_getObjectType();
  *(_QWORD *)&v184 = v108;
  v112 = swift_allocObject(&unk_37CE88, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v98);
  v113 = Publisher<>.sink(receiveValue:)(sub_8D18C, v112, v111, *(_QWORD *)(v110 + 8));
  swift_release(v112);
  swift_unknownObjectRelease(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  *(_QWORD *)&v114 = swift_release(v113).n128_u64[0];
  v115 = objc_msgSend(v163, "defaultCenter", v114);
  objc_msgSend(v115, "addObserver:selector:name:object:", v98, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v184 = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v176, v80);
  v116 = swift_allocObject(&unk_37CE88, 24, 7);
  swift_unknownObjectWeakInit(v116 + 16, v98);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v118 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v119 = Publisher<>.sink(receiveValue:)(sub_8D59C, v116, v117, v118);
  swift_release(v116);
  swift_release(v184);
  swift_beginAccess(v104, &v184, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(&v184);
  swift_release(v119);
  v120 = qword_3DDDB0;
  v121 = *(id *)&v98[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v122 = (uint64_t *)(*(_QWORD *)&v98[v120] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v122, &v184, 0, 0);
  v123 = *v122;
  v182[0] = v123;
  v124 = swift_allocObject(&unk_37CE88, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v98);
  swift_retain(v123);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v126 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v127 = Publisher<>.sink(receiveValue:)(sub_8D5D0, v124, v125, v126);
  swift_release(v124);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  ObjectType = (objc_class *)v105;
  v128 = v106;
  v164 = (char *)v106;
  AnyCancellable.store<A>(in:)(v104, v105, v106);
  swift_endAccess(v182);
  swift_release(v127);
  v130 = v175;
  v129 = v176;
  v182[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v176, v175);
  v131 = swift_allocObject(&unk_37CE88, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16, v98);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v133 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v134 = Publisher<>.sink(receiveValue:)(sub_8D600, v131, v132, v133);
  swift_release(v131);
  swift_release(v182[0]);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v105, v128);
  swift_endAccess(v182);
  v135 = swift_release(v134);
  v182[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v129, v130, v135);
  v136 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v181 = (id)static OS_dispatch_queue.main.getter(v137);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v139 = (uint64_t)v168;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v168, 1, 1, v138);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v141 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v142 = sub_1E2DC();
  v143 = v169;
  Publisher.receive<A>(on:options:)(&v181, v139, v140, v136, v141, v142);
  sub_D1D4(v139, &qword_3D2E70);

  swift_release(v182[0]);
  v144 = swift_allocObject(&unk_37CE88, 24, 7);
  swift_unknownObjectWeakInit(v144 + 16, v98);
  v145 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v146 = v170;
  v147 = Publisher<>.sink(receiveValue:)(sub_8E358, v144, v170, v145);
  v148 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v171 + 8))(v143, v146, v148);
  swift_beginAccess(v104, v182, 33, 0);
  v149 = ObjectType;
  v150 = v164;
  AnyCancellable.store<A>(in:)(v104, ObjectType, v164);
  swift_endAccess(v182);
  v151 = swift_release(v147);
  v152 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v129, v175, v151);
  v182[0] = v152;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v154 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v155 = v172;
  Publisher.dropFirst(_:)(1, v153, v154);
  swift_release(v152);
  v156 = swift_allocObject(&unk_37CE88, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v98);
  v157 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v158 = v173;
  v159 = Publisher<>.sink(receiveValue:)(sub_8D238, v156, v173, v157);
  v160 = swift_release(v156);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v155, v158, v160);
  swift_beginAccess(v104, v182, 33, 0);
  AnyCancellable.store<A>(in:)(v104, v149, v150);
  swift_endAccess(v182);
  swift_release(v167);
  swift_release(v165);
  swift_release(v82);
  swift_release(v177);
  swift_release(v159);

  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
  return v98;
}

char *sub_70E64(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  __n128 v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  char *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  id v89;
  id v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  objc_class *v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  objc_class *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __n128 v147;
  objc_class *v148;
  char *v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __n128 v159;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  id v167;
  objc_class *ObjectType;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  _QWORD v183[3];
  objc_super v184;
  __int128 v185[2];
  uint64_t v186;

  v181 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D8FB0);
  v175 = *(_QWORD *)(v4 - 8);
  v176 = v4;
  __chkstk_darwin(v4);
  v174 = (char *)&v161 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v6);
  v170 = (char *)&v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E78);
  v172 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v171 = (char *)&v161 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E80);
  v10 = __chkstk_darwin(v9);
  v166 = (char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CategoryPagePresenter.Configuration(0, v10);
  v179 = *(_QWORD *)(v12 - 8);
  v180 = v12;
  __chkstk_darwin(v12);
  v165 = (char *)&v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v164 = *(_QWORD *)(v178 - 8);
  v14 = __chkstk_darwin(v178);
  v16 = (char *)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v14);
  v162 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v18 = (char *)&v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E88);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v161 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[qword_3DDD68] = 0;
  *(_QWORD *)&v2[qword_3DDE50] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[qword_3DDE20] = 0;
  v23 = &v2[qword_3FD5D8];
  v24 = enum case for FlowDestinationPageHeader.standard(_:);
  v25 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  v26 = &v2[qword_3DDD80];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  *(_QWORD *)&v2[qword_3DDD78] = 18;
  *(_QWORD *)&v2[qword_3DDDC8] = 0;
  v27 = &v2[qword_3DDE58];
  LOBYTE(v185[0]) = 0;
  v28 = v2;
  Published.init(initialValue:)(v185, &type metadata for ViewControllerLifeCycleEvent);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v22, v19);
  v28[qword_3DDE00] = 0;
  v29 = &v28[qword_3DDE60];
  v30 = type metadata accessor for InteractionContext.Page(0);
  v31.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v28[qword_3DDE68] = 1;
  *(_QWORD *)&v28[qword_3DDE70] = 0;
  *(_QWORD *)&v28[qword_3FD5E0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v28[qword_3DDDF8] = _swiftEmptyArrayStorage;
  v32 = &v28[qword_3DDE78];
  v33 = type metadata accessor for PageID(0, v31);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
  v34 = &v28[qword_3DDDB8];
  v28[qword_3DDDB8] = 0;
  v35 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v34, v35, 0);
  *(_QWORD *)&v28[qword_3FD5F0] = 0;
  *(_QWORD *)&v28[qword_3DDE80] = 0x3FE0000000000000;
  *(_QWORD *)&v28[qword_3DDE88] = 0;
  v36 = &v28[qword_3FD5E8];
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  *((_QWORD *)v36 + 2) = 0;
  *(_QWORD *)&v28[qword_3DDE90] = 0;
  v37 = &v28[qword_3DDE98];
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = 0;
  v37[16] = 1;
  v38 = &v28[qword_3DDDC0];
  v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90) + 48);
  v41 = type metadata accessor for Header(0, v40);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v38, 1, 1, v41);
  v38[v39] = 1;
  v28[qword_3DDE30] = 0;
  *(_QWORD *)&v28[qword_3DDDA0] = 0;
  v28[qword_3DDDD0] = 0;
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(v185, v42, v42);
  *(_OWORD *)&v28[qword_3DDE28] = v185[0];
  v43 = type metadata accessor for PageRenderController(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v185, v43, v43);
  *(_QWORD *)&v28[qword_3DDD90] = *(_QWORD *)&v185[0];
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(v185, v44, v44);
  sub_1B738(v185, (uint64_t)&v28[qword_3DDE48]);
  v45 = type metadata accessor for PageActionRunner();
  v46 = swift_allocObject(v45, 40, 7);
  swift_unknownObjectWeakInit(v46 + 16, 0);
  *(_QWORD *)(v46 + 24) = 0;
  *(_QWORD *)(v46 + 32) = 0;
  *(_QWORD *)&v28[qword_3DDE40] = v46;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EA0);
  v48 = sub_89A0(&qword_3D2EA8, (uint64_t (*)(uint64_t))type metadata accessor for PageActionRunner, (uint64_t)&unk_2F0414);
  *(_QWORD *)&v185[0] = v46;
  *((_QWORD *)&v185[0] + 1) = v48;
  v169 = v46;
  swift_retain(v46);
  v177 = a1;
  v49 = BaseObjectGraph.satisfying<A>(_:with:)(v47, v185, v47);
  v50 = type metadata accessor for FreezableContentSubject(0);
  v167 = (id)objc_opt_self(NSNotificationCenter);
  v51 = objc_msgSend(v167, "defaultCenter");
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  v52 = FreezableContentSubject.init(notificationCenter:)(v51);
  *(_QWORD *)&v185[0] = v52;
  v53 = BaseObjectGraph.satisfying<A>(_:with:)(v50, v185, v50);
  swift_release(v52);
  swift_release(v49);
  v54 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  v56 = ClickLocationTracker.init()(v55);
  *(_QWORD *)&v185[0] = v56;
  v57 = BaseObjectGraph.satisfying<A>(_:with:)(v54, v185, v54);
  v58 = swift_retain(v56);
  v59 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D13C, v56, v58);
  swift_release(v53);
  swift_release(v57);
  v60 = swift_release_n(v56, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v60);
  v61 = BaseObjectGraph.addingImpressionsTracker(with:)(v18);
  v62 = swift_release(v59);
  v63 = (*(uint64_t (**)(char *, uint64_t, __n128))(v162 + 8))(v18, v163, v62);
  static ImpressionsCalculator.Configuration.half.getter(v63);
  v64 = BaseObjectGraph.addingImpressionsCalculator(with:)(v16);
  v65 = swift_release(v61);
  (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v16, v178, v65);
  v66 = type metadata accessor for SearchFiltersSource(0);
  swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
  v67 = SearchFiltersSource.init()();
  *(_QWORD *)&v185[0] = v67;
  v68 = BaseObjectGraph.satisfying<A>(_:with:)(v66, v185, v66);
  v69 = swift_retain(v67);
  v70 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_8D144, v67, v69);
  swift_release(v64);
  swift_release(v68);
  swift_release_n(v67, 2);
  v71 = type metadata accessor for MetricsController(0);
  v72 = BaseObjectGraph.satisfying<A>(_:with:)(v71, sub_2356FC, 0, v71);
  swift_release(v70);
  v73 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(v185, v73, v73);
  *(_QWORD *)&v28[qword_3DDE38] = *(_QWORD *)&v185[0];
  BaseObjectGraph.inject<A>(_:)(v185, v71, v71);
  *(_QWORD *)&v28[qword_3DDE08] = *(_QWORD *)&v185[0];
  *(_QWORD *)&v28[qword_3DDD98] = v72;
  v75 = type metadata accessor for CategoryPagePresenter(0, v74);
  v76 = v165;
  (*(void (**)(char *, uint64_t, uint64_t))(v179 + 16))(v165, v181, v180);
  v77 = (void *)sub_89A0(&qword_3D2EB0, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryPagePresenter, (uint64_t)&protocol conformance descriptor for CategoryPagePresenter);
  v78 = swift_retain_n(v72, 2);
  v79 = dispatch thunk of ModernPagePresenter.init(asPartOf:with:)(v78, v76, v75, v77);
  *(_QWORD *)&v28[qword_3DDD70] = v79;
  v80 = swift_retain(v79);
  v81 = (uint64_t)v166;
  dispatch thunk of ModernPagePresenter.deletableExtension.getter(v75, v77, v80);
  v82 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v75, v77);
  LOBYTE(v71) = dispatch thunk of ModernPagePresenter.showsHeaders.getter(v75, v77);
  LOBYTE(v76) = dispatch thunk of ModernPagePresenter.hideAllHeaderSeparators.getter(v75, v77);
  v83 = type metadata accessor for ShelvesViewProvider(0);
  swift_allocObject(v83, *(unsigned int *)(v83 + 48), *(unsigned __int16 *)(v83 + 52));
  swift_retain(v72);
  v84 = sub_39E0C(v81, v82, v71 & 1, v76 & 1, v72);
  swift_release(v72);
  swift_release(v82);
  *(_QWORD *)&v28[qword_3DDDA8] = v84;
  v183[0] = v79;
  swift_retain(v79);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EB8);
  if ((swift_dynamicCast(v185, v183, v75, v85, 6) & 1) == 0)
  {
    v186 = 0;
    memset(v185, 0, sizeof(v185));
  }
  v86 = dispatch thunk of ModernPagePresenter.multiSelectableExtension.getter(v75, v77);
  v87 = objc_allocWithZone((Class)type metadata accessor for ShelvesDelegate(0));
  v164 = v72;
  swift_retain(v72);
  v89 = sub_E2290(v88, (uint64_t)v185, v86);
  swift_release(v72);
  swift_release(v86);
  *(_QWORD *)&v28[qword_3DDDB0] = v89;

  v90 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v184.receiver = v28;
  v184.super_class = ObjectType;
  v91 = (char *)objc_msgSendSuper2(&v184, "initWithCollectionViewLayout:", v90);

  v92 = *(_QWORD *)&v91[qword_3DDE40];
  swift_unknownObjectWeakAssign(v92 + 16, v91);
  v93 = swift_allocObject(&unk_37CDE8, 24, 7);
  swift_unknownObjectWeakInit(v93 + 16, v91);
  v94 = *(_QWORD *)(v92 + 24);
  v95 = *(_QWORD *)(v92 + 32);
  *(_QWORD *)(v92 + 24) = sub_8D14C;
  *(_QWORD *)(v92 + 32) = v93;
  v96 = v91;
  sub_1D618(v94, v95);
  *(_QWORD *)&v185[0] = dispatch thunk of ModernPagePresenter.pageContent.getter(v75, v77);
  v97 = swift_allocObject(&unk_37CDE8, 24, 7);
  swift_unknownObjectWeakInit(v97 + 16, v96);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EC0);
  v99 = sub_10EDC(&qword_3D2EC8, &qword_3D2EC0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v100 = Publisher<>.sink(receiveValue:)(sub_8D164, v97, v98, v99);
  swift_release(v97);
  swift_release(*(_QWORD *)&v185[0]);
  v101 = &v96[qword_3DDDF8];
  swift_beginAccess(&v96[qword_3DDDF8], v185, 33, 0);
  v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v103 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
  v104 = v75;
  v178 = v75;
  v105 = (objc_class *)v102;
  AnyCancellable.store<A>(in:)(v101, v102, v103);
  swift_endAccess(v185);
  v106 = swift_release(v100);
  v107 = dispatch thunk of ModernPagePresenter.pageRender.getter(v104, v77, v106);
  v109 = v108;
  v110 = swift_getObjectType();
  *(_QWORD *)&v185[0] = v107;
  v111 = swift_allocObject(&unk_37CDE8, 24, 7);
  swift_unknownObjectWeakInit(v111 + 16, v96);
  v112 = Publisher<>.sink(receiveValue:)(sub_8D18C, v111, v110, *(_QWORD *)(v109 + 8));
  swift_release(v111);
  swift_unknownObjectRelease(*(_QWORD *)&v185[0]);
  swift_beginAccess(v101, v185, 33, 0);
  AnyCancellable.store<A>(in:)(v101, v105, v103);
  swift_endAccess(v185);
  *(_QWORD *)&v113 = swift_release(v112).n128_u64[0];
  v114 = objc_msgSend(v167, "defaultCenter", v113);
  objc_msgSend(v114, "addObserver:selector:name:object:", v96, "splitControllerChanged", UIViewControllerShowDetailTargetDidChangeNotification, 0);

  *(_QWORD *)&v185[0] = dispatch thunk of ModernPagePresenter.headerButtonItems.getter(v178, v77);
  v115 = swift_allocObject(&unk_37CDE8, 24, 7);
  swift_unknownObjectWeakInit(v115 + 16, v96);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EE0);
  v117 = sub_10EDC(&qword_3D2EE8, &qword_3D2EE0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v118 = Publisher<>.sink(receiveValue:)(sub_8D1A4, v115, v116, v117);
  swift_release(v115);
  swift_release(*(_QWORD *)&v185[0]);
  swift_beginAccess(v101, v185, 33, 0);
  AnyCancellable.store<A>(in:)(v101, v105, v103);
  swift_endAccess(v185);
  swift_release(v118);
  v119 = qword_3DDDB0;
  v120 = *(id *)&v96[qword_3DDDB0];
  ShelvesDelegate.addDefaultScrollCoordinators()();

  v121 = (uint64_t *)(*(_QWORD *)&v96[v119] + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v121, v185, 0, 0);
  v122 = *v121;
  v183[0] = v122;
  v123 = swift_allocObject(&unk_37CDE8, 24, 7);
  swift_unknownObjectWeakInit(v123 + 16, v96);
  swift_retain(v122);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  v125 = sub_10EDC(&qword_3D2EF8, &qword_3D2EF0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v126 = Publisher<>.sink(receiveValue:)(sub_8D1D8, v123, v124, v125);
  swift_release(v123);
  swift_release(v183[0]);
  swift_beginAccess(v101, v183, 33, 0);
  v127 = v105;
  ObjectType = v105;
  v166 = (char *)v103;
  AnyCancellable.store<A>(in:)(v101, v105, v103);
  swift_endAccess(v183);
  swift_release(v126);
  v128 = v178;
  v183[0] = dispatch thunk of ModernPagePresenter.pageHeader.getter(v178, v77);
  v129 = swift_allocObject(&unk_37CDE8, 24, 7);
  swift_unknownObjectWeakInit(v129 + 16, v96);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F00);
  v131 = sub_10EDC(&qword_3D2F08, &qword_3D2F00, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v132 = Publisher<>.sink(receiveValue:)(sub_8D208, v129, v130, v131);
  swift_release(v129);
  swift_release(v183[0]);
  swift_beginAccess(v101, v183, 33, 0);
  AnyCancellable.store<A>(in:)(v101, v127, v103);
  swift_endAccess(v183);
  v133 = swift_release(v132);
  v183[0] = dispatch thunk of ModernPagePresenter.appEntityAnnotation.getter(v128, v77, v133);
  v134 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v182 = (id)static OS_dispatch_queue.main.getter(v135);
  v136 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v137 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56);
  v167 = v77;
  v138 = (uint64_t)v170;
  v137(v170, 1, 1, v136);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F18);
  v140 = sub_10EDC((unint64_t *)&unk_3D2F20, &qword_3D2F18, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v141 = sub_1E2DC();
  v142 = v171;
  Publisher.receive<A>(on:options:)(&v182, v138, v139, v134, v140, v141);
  sub_D1D4(v138, &qword_3D2E70);

  swift_release(v183[0]);
  v143 = swift_allocObject(&unk_37CDE8, 24, 7);
  swift_unknownObjectWeakInit(v143 + 16, v96);
  v144 = sub_10EDC(&qword_3D2F30, &qword_3D2E78, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v145 = v173;
  v146 = Publisher<>.sink(receiveValue:)(sub_8E358, v143, v173, v144);
  v147 = swift_release(v143);
  (*(void (**)(char *, uint64_t, __n128))(v172 + 8))(v142, v145, v147);
  swift_beginAccess(v101, v183, 33, 0);
  v148 = ObjectType;
  v149 = v166;
  AnyCancellable.store<A>(in:)(v101, ObjectType, v166);
  swift_endAccess(v183);
  v150 = swift_release(v146);
  v151 = dispatch thunk of ModernPagePresenter.scrollToTop.getter(v128, v167, v150);
  v183[0] = v151;
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F38);
  v153 = sub_10EDC(&qword_3D2F40, &qword_3D2F38, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v154 = v174;
  Publisher.dropFirst(_:)(1, v152, v153);
  swift_release(v151);
  v155 = swift_allocObject(&unk_37CDE8, 24, 7);
  swift_unknownObjectWeakInit(v155 + 16, v96);
  v156 = sub_10EDC(&qword_3D2F48, &qword_3D8FB0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v157 = v176;
  v158 = Publisher<>.sink(receiveValue:)(sub_8D238, v155, v176, v156);
  v159 = swift_release(v155);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v154, v157, v159);
  swift_beginAccess(v101, v183, 33, 0);
  AnyCancellable.store<A>(in:)(v101, v148, v149);
  swift_endAccess(v183);
  swift_release(v169);
  swift_release(v164);
  swift_release(v79);
  swift_release(v177);
  swift_release(v158);

  (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v181, v180);
  return v96;
}

void sub_72100(_QWORD *a1@<X0>, id (*a2)(uint64_t a1)@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v9 = a4 + 16;
  swift_beginAccess(a4 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    sub_721A8(a1, a3, a2, a5);

  }
  else
  {
    v12 = type metadata accessor for ChildAndParentLocation(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a5, 1, 1, v12);
  }
}

void sub_721A8(_QWORD *a1@<X0>, void *a2@<X1>, id (*a3)(uint64_t a1)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id (*v46)(uint64_t);
  id (*v47)(uint64_t);
  id (*v48)(uint64_t);
  id (*v49)(uint64_t);
  id (*v50)(uint64_t);
  id (*v51)(uint64_t);
  id (*v52)(uint64_t);
  id (*v53)(uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id (*v84)(uint64_t);
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id (*v91)(uint64_t);
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  id (*v98[10])(uint64_t);
  char v99[16];

  v9 = type metadata accessor for ModernShelf(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v86 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for IndexPath(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v87 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3008);
  __chkstk_darwin(v13);
  v93 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v15);
  v90 = (uint64_t)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v96 = (uint64_t)&v78 - v18;
  v19 = type metadata accessor for InteractionContext(0);
  v91 = *(id (**)(uint64_t))(v19 - 8);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for LocationFields(0, v20);
  v92 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v85 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v95 = (char *)&v78 - v25;
  __chkstk_darwin(v26);
  v97 = (char *)&v78 - v27;
  v28 = (_QWORD *)(v4 + qword_3DDD68);
  swift_beginAccess(v4 + qword_3DDD68, v99, 0, 0);
  v29 = *v28;
  if (*v28)
  {
    v83 = v19;
    v82 = v10;
    v30 = *(id *)(v29 + 40);
    v84 = a3;
    v31 = sub_8D2F8(a2, (uint64_t)a3, v30);
    if ((v33 & 0x100) != 0)
    {
      v43 = type metadata accessor for ChildAndParentLocation(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a4, 1, 1, v43);

    }
    else
    {
      v34 = v31;
      v35 = v33;
      v79 = v32;
      v78 = v9;
      v81 = a4;
      v36 = a1;
      v38 = a1[3];
      v37 = a1[4];
      v39 = __swift_project_boxed_opaque_existential_1(v36, v38);
      v80 = v30;
      if (a2)
      {
        v40 = UIView.interactionContext.getter(v39);
        v41 = InteractionContext.view.getter(v40);
        (*((void (**)(char *, uint64_t))v91 + 1))(v22, v83);
      }
      else
      {
        v41 = 7;
      }
      v44 = v97;
      dispatch thunk of NativeClickMetricsItem.generateItemLevelLocationFields(locationPosition:sender:interactionView:)(v34, v84, v41, v38, v37);
      if ((v35 & 1) != 0)
      {
        v57 = v92;
        v58 = v94;
        v59 = v95;
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v95, v44, v94);
        v60 = v93;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v93, 1, 1, v58);
        v61 = v81;
        ChildAndParentLocation.init(childFields:parentFields:)(v59, v60);

        (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v58);
        v62 = type metadata accessor for ChildAndParentLocation(0);
        v63 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
        v64 = v61;
      }
      else
      {
        v45 = *v28;
        if (*v28)
        {
          swift_retain(*v28);
          sub_16F4D0(v98);
          swift_release(v45);
          v46 = v98[0];
          v47 = v98[1];
          v49 = v98[2];
          v48 = v98[3];
          v50 = v98[4];
          v51 = v98[5];
          v52 = v98[7];
          v84 = v98[6];
          v53 = v98[9];
          v91 = v98[8];
          v54 = v34;
          v55 = v87;
          IndexPath.init(row:section:)(v54, v79);
          if (v49)
          {
            v49((uint64_t)v55);
            v56 = v78;
          }
          else
          {
            v56 = v78;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v96, 1, 1, v78);
          }
          (*(void (**)(char *, uint64_t))(v88 + 8))(v55, v89);
          sub_1D618((uint64_t)v46, (uint64_t)v47);
          sub_1D618((uint64_t)v49, (uint64_t)v48);
          sub_1D618((uint64_t)v50, (uint64_t)v51);
          sub_1D618((uint64_t)v84, (uint64_t)v52);
          sub_1D618((uint64_t)v91, (uint64_t)v53);
          v65 = v82;
          v68 = v93;
          v67 = v94;
          v66 = v96;
          v44 = v97;
        }
        else
        {
          v65 = v82;
          v66 = v96;
          v56 = v78;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v96, 1, 1, v78);
          v68 = v93;
          v67 = v94;
        }
        v69 = v92;
        v70 = v90;
        sub_D184(v66, v90, (uint64_t *)&unk_3D3010);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v70, 1, v56) == 1)
        {
          sub_D1D4(v70, (uint64_t *)&unk_3D3010);
          v71 = v95;
          (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v95, v44, v67);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v68, 1, 1, v67);
          v72 = v81;
          ChildAndParentLocation.init(childFields:parentFields:)(v71, v68);

          sub_D1D4(v66, (uint64_t *)&unk_3D3010);
          (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v67);
          v62 = type metadata accessor for ChildAndParentLocation(0);
          v63 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
          v64 = v72;
        }
        else
        {
          v73 = v86;
          (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v86, v70, v56);
          v74 = v95;
          ModernShelf.generateParentLocationFields(locationPosition:)(v79);
          v75 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
          v76 = v85;
          v75(v85, v44, v67);
          v75(v68, v74, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v68, 0, 1, v67);
          ChildAndParentLocation.init(childFields:parentFields:)(v76, v68);

          v77 = *(void (**)(char *, uint64_t))(v69 + 8);
          v77(v74, v67);
          (*(void (**)(char *, uint64_t))(v65 + 8))(v73, v56);
          sub_D1D4(v96, (uint64_t *)&unk_3D3010);
          v77(v44, v67);
          v62 = type metadata accessor for ChildAndParentLocation(0);
          v63 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
          v64 = v81;
        }
      }
      v63(v64, 0, 1, v62);
    }
  }
  else
  {
    v42 = type metadata accessor for ChildAndParentLocation(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(a4, 1, 1, v42);
  }
}

void sub_728CC(uint64_t a1, uint64_t a2, void (*a3)(char *), void (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  _BYTE v14[24];

  v8 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v8);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = (void *)Strong;
    sub_19C4C(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_72994((uint64_t)v10, a3, a4);

  }
}

uint64_t sub_72994(uint64_t a1, void (*a2)(char *), void (*a3)(char *, char *))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  void (*v19)(char *, char *);
  _BYTE v20[24];
  _BYTE v21[24];

  v19 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PageContent(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v18 - v14;
  v16 = v3 + qword_3DDDB8;
  swift_beginAccess(v3 + qword_3DDDB8, v21, 0, 0);
  sub_19C4C(v16, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  swift_beginAccess(v16, v20, 33, 0);
  sub_8D288(a1, v16);
  swift_endAccess(v20);
  sub_19C4C(v16, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  a2(v12);
  sub_FA4C((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  sub_19C4C(v16, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  sub_19C4C((uint64_t)v15, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v19(v12, v8);
  sub_D1D4((uint64_t)v8, &qword_3D2FB8);
  sub_FA4C((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  sub_FA4C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  return sub_FA4C((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
}

void sub_72B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + qword_3DDD90);
    swift_retain(v6);

    if (v6)
    {
      PageRenderController.handle(event:)(a1);
      swift_release(v6);
    }
  }
}

void sub_72BEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v9 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = *(_QWORD *)(Strong + qword_3DDE90);
    *(_QWORD *)(Strong + qword_3DDE90) = a1;
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRelease(v12);
    sub_8B248(a3, a4, a5);

  }
}

void sub_72C88(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  char *v5;
  char *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  double v22;
  _UNKNOWN **v23;
  id v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  unint64_t *v39;
  uint64_t v40;
  char v41[8];

  v9 = v5;
  v12 = qword_3DDE20;
  v13 = *(_QWORD *)&v5[qword_3DDE20];
  if (v13)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v13 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_cell);
    if (Strong)
    {
      v15 = (void *)Strong;
      swift_unknownObjectRelease(Strong);
      if (v15 == a1)
        return;
    }
  }
  v16 = objc_msgSend(v9, "collectionView");
  if (!v16)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17 = v16;
  objc_msgSend(v16, "_setVisibleRectEdgeInsets:", -10000.0, 0.0, 0.0, 0.0);

  v18 = *(_QWORD *)&v9[qword_3DDDB0];
  sub_23483C();
  v19 = objc_msgSend(v9, "navigationController");
  if (v19)
  {
    v20 = v19;
    v39 = a4;
    v40 = a2;
    v37 = a5;
    v38 = a3;
    v21 = objc_msgSend(v19, "navigationBar");

    v23 = &protocol witness table for UINavigationBar;
  }
  else
  {
    v21 = *(id *)&v9[qword_3DDD80];
    if (!v21)
      return;
    v39 = a4;
    v40 = a2;
    v37 = a5;
    v38 = a3;
    v23 = *(_UNKNOWN ***)&v9[qword_3DDD80 + 8];
    *(_QWORD *)&v22 = swift_unknownObjectRetain(v21).n128_u64[0];
  }
  v24 = objc_msgSend(v9, "navigationItem", v22);
  v25 = objc_msgSend(v9, "collectionView");
  swift_unknownObjectWeakInit(v41, v9);
  v26 = objc_allocWithZone((Class)type metadata accessor for ModernUberScrollCoordinator());
  v27 = a1;
  swift_unknownObjectRetain(v21);
  v28 = sub_1F76C4(v27, v40, (uint64_t)v21, (uint64_t)v23, v24, v25, (uint64_t)UINavigationBar.overrideBackButtonStyle.setter, 0);
  swift_unknownObjectWeakDestroy(v41);
  v29 = *(void **)&v9[v12];
  *(_QWORD *)&v9[v12] = v28;

  v30 = *(void **)&v9[v12];
  if (!v30)
    goto LABEL_16;
  v31 = v30;
  sub_E2054(v31, v18);

  v32 = objc_msgSend(v9, "collectionView");
  if (!v32)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "refreshControl");

  if (v34)
  {
    v35 = objc_msgSend(v27, "contentView");
    v36 = objc_msgSend(v35, "overrideUserInterfaceStyle");

    objc_msgSend(v34, "setOverrideUserInterfaceStyle:", v36);
  }
  *(_QWORD *)&v9[qword_3DDE70] = 2;
  sub_60C08(v38, v39, v37);
  swift_unknownObjectRelease(v21);
}

void sub_72F6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v8;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  _QWORD v23[5];
  id v24;

  v23[2] = a5;
  v23[1] = a4;
  v8 = v6;
  v12 = HIDWORD(a3);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E8);
  v14 = __chkstk_darwin(v13);
  v23[3] = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  PageHeader.title.getter(a1, a2, a3 & 0xFFFFFFFFFFLL, v14);
  v16 = objc_msgSend(v8, "navigationController");
  v23[4] = a6;
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "navigationBar");

    v24 = objc_msgSend(v18, "standardAppearance");
  }
  else
  {
    v24 = 0;
  }
  v19 = objc_msgSend(v8, "navigationController");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, "navigationBar");

    v22 = objc_msgSend(v21, "scrollEdgeAppearance");
  }
  __asm { BR              X10 }
}

void sub_73108()
{
  char *v0;
  int v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t inited;
  void *v12;
  NSString *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  Class isa;
  id v20;
  void *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  double v27;
  uint64_t v28;
  NSString v29;
  unint64_t *v30;
  uint64_t (*v31)(uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  id v36;
  id v37;
  id v38;
  id v39;

  v6 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
  objc_msgSend(v6, "configureWithDefaultBackground");
  v7 = objc_allocWithZone((Class)UIColor);
  v8 = v6;
  v9 = objc_msgSend(v7, "initWithRed:green:blue:alpha:", (double)v1 / 255.0, (double)BYTE1(v1) / 255.0, (double)BYTE2(v1) / 255.0, (double)HIBYTE(v1) / 255.0);
  objc_msgSend(v8, "setBackgroundColor:", v9);

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
  inited = swift_initStackObject(v10, v5 - 256);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v12 = (void *)objc_opt_self(UIColor);
  v13 = NSForegroundColorAttributeName;
  v14 = objc_msgSend(v12, "whiteColor");
  v15 = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v14;
  *(_QWORD *)(inited + 64) = v15;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v16 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v17 = ((uint64_t (*)(const NSAttributedStringKey))static UIFont.title1Emph.getter)(NSFontAttributeName);
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 80) = v17;
  v18 = sub_D4784(inited);
  type metadata accessor for Key(0);
  sub_89A0((unint64_t *)&qword_3D0150, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "setTitleTextAttributes:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v20 = v8;
  *(_QWORD *)(v5 - 264) = v8;
  v21 = v8;
  v22 = &v0[qword_3FD5E8];
  swift_beginAccess(&v0[qword_3FD5E8], v5 - 144, 1, 0);
  v23 = *((_QWORD *)v22 + 1);
  v24 = (void *)*((_QWORD *)v22 + 2);
  *(_QWORD *)v22 = v2;
  *((_QWORD *)v22 + 1) = v4;
  *((_QWORD *)v22 + 2) = 0;
  v25 = 0;
  swift_bridgeObjectRelease(v23);

  v26 = objc_msgSend(v0, "navigationItem");
  v28 = *((_QWORD *)v22 + 1);
  if (v28)
  {
    swift_bridgeObjectRetain(v28);
    v29 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v28).n128_u64[0];
  }
  else
  {
    v29 = 0;
  }
  v30 = *(unint64_t **)(v5 - 288);
  v31 = *(uint64_t (**)(uint64_t))(v5 - 296);
  objc_msgSend(v26, "setTitle:", v29, v27);

  v32 = &v0[qword_3DDE98];
  v33 = *(_QWORD *)&v0[qword_3DDE98 + 8];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v32[16] = 1;
  swift_bridgeObjectRelease(v33);
  v34 = *(_QWORD *)(v5 - 280);
  v35 = sub_8BA10(v34, (uint64_t)v0);
  sub_8B7D4(v34, v35 & 1);
  *(_QWORD *)&v0[qword_3DDE70] = 2;
  sub_60C08(v31, v30, *(_QWORD *)(v5 - 272));
  v36 = objc_msgSend(v0, "navigationItem");
  v37 = *(id *)(v5 - 264);
  objc_msgSend(v36, "setStandardAppearance:", v37);

  v38 = objc_msgSend(v0, "navigationItem");
  v39 = v21;
  objc_msgSend(v38, "setScrollEdgeAppearance:", v39);

}

void sub_735A4(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + qword_3DDDC8);
    *(_QWORD *)(Strong + qword_3DDDC8) = a1;
    v7 = a1;
    sub_60900((uint64_t)v6);

  }
}

uint64_t sub_73628(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for ModernStationDetailPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3158, (uint64_t (*)(uint64_t))&type metadata accessor for ModernStationDetailPresenter, (uint64_t)&protocol conformance descriptor for ModernStationDetailPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3160, (uint64_t (*)(uint64_t))&type metadata accessor for ModernStationDetailPresenter, (uint64_t)&protocol conformance descriptor for ModernStationDetailPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for ModernStationDetailPresenter, &qword_3D3158, (uint64_t)&protocol conformance descriptor for ModernStationDetailPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_73D40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for SeeAllEpisodesPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3138, (uint64_t (*)(uint64_t))&type metadata accessor for SeeAllEpisodesPresenter, (uint64_t)&protocol conformance descriptor for SeeAllEpisodesPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3140, (uint64_t (*)(uint64_t))&type metadata accessor for SeeAllEpisodesPresenter, (uint64_t)&protocol conformance descriptor for SeeAllEpisodesPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for SeeAllEpisodesPresenter, &qword_3D3138, (uint64_t)&protocol conformance descriptor for SeeAllEpisodesPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_74458(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for SearchPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3128, (uint64_t (*)(uint64_t))&type metadata accessor for SearchPresenter, (uint64_t)&protocol conformance descriptor for SearchPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3130, (uint64_t (*)(uint64_t))&type metadata accessor for SearchPresenter, (uint64_t)&protocol conformance descriptor for SearchPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for SearchPresenter, &qword_3D3128, (uint64_t)&protocol conformance descriptor for SearchPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_74B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for ShowListPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3148, (uint64_t (*)(uint64_t))&type metadata accessor for ShowListPresenter, (uint64_t)&protocol conformance descriptor for ShowListPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3150, (uint64_t (*)(uint64_t))&type metadata accessor for ShowListPresenter, (uint64_t)&protocol conformance descriptor for ShowListPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for ShowListPresenter, &qword_3D3148, (uint64_t)&protocol conformance descriptor for ShowListPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_75288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for LibraryShowPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3108, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryShowPresenter, (uint64_t)&protocol conformance descriptor for LibraryShowPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3110, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryShowPresenter, (uint64_t)&protocol conformance descriptor for LibraryShowPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryShowPresenter, &qword_3D3108, (uint64_t)&protocol conformance descriptor for LibraryShowPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_759A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for StorePagePresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3118, (uint64_t (*)(uint64_t))&type metadata accessor for StorePagePresenter, (uint64_t)&protocol conformance descriptor for StorePagePresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3120, (uint64_t (*)(uint64_t))&type metadata accessor for StorePagePresenter, (uint64_t)&protocol conformance descriptor for StorePagePresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for StorePagePresenter, &qword_3D3118, (uint64_t)&protocol conformance descriptor for StorePagePresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_760B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for LongDescriptionPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3080, (uint64_t (*)(uint64_t))&type metadata accessor for LongDescriptionPresenter, (uint64_t)&protocol conformance descriptor for LongDescriptionPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3088, (uint64_t (*)(uint64_t))&type metadata accessor for LongDescriptionPresenter, (uint64_t)&protocol conformance descriptor for LongDescriptionPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for LongDescriptionPresenter, &qword_3D3080, (uint64_t)&protocol conformance descriptor for LongDescriptionPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_767D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for HomePagePresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3070, (uint64_t (*)(uint64_t))&type metadata accessor for HomePagePresenter, (uint64_t)&protocol conformance descriptor for HomePagePresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3078, (uint64_t (*)(uint64_t))&type metadata accessor for HomePagePresenter, (uint64_t)&protocol conformance descriptor for HomePagePresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for HomePagePresenter, &qword_3D3070, (uint64_t)&protocol conformance descriptor for HomePagePresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_76EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for LibraryPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3060, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryPresenter, (uint64_t)&protocol conformance descriptor for LibraryPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3068, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryPresenter, (uint64_t)&protocol conformance descriptor for LibraryPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryPresenter, &qword_3D3060, (uint64_t)&protocol conformance descriptor for LibraryPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_77600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for HighlightsPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3050, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightsPresenter, (uint64_t)&protocol conformance descriptor for HighlightsPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3058, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightsPresenter, (uint64_t)&protocol conformance descriptor for HighlightsPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightsPresenter, &qword_3D3050, (uint64_t)&protocol conformance descriptor for HighlightsPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_77D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for ModernEpisodesPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3168, (uint64_t (*)(uint64_t))&type metadata accessor for ModernEpisodesPresenter, (uint64_t)&protocol conformance descriptor for ModernEpisodesPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3170, (uint64_t (*)(uint64_t))&type metadata accessor for ModernEpisodesPresenter, (uint64_t)&protocol conformance descriptor for ModernEpisodesPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for ModernEpisodesPresenter, &qword_3D3168, (uint64_t)&protocol conformance descriptor for ModernEpisodesPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_78430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for CategoryListPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3040, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryListPresenter, (uint64_t)&protocol conformance descriptor for CategoryListPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3048, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryListPresenter, (uint64_t)&protocol conformance descriptor for CategoryListPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryListPresenter, &qword_3D3040, (uint64_t)&protocol conformance descriptor for CategoryListPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_78B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for ChannelListPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3030, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelListPresenter, (uint64_t)&protocol conformance descriptor for ChannelListPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3038, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelListPresenter, (uint64_t)&protocol conformance descriptor for ChannelListPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelListPresenter, &qword_3D3030, (uint64_t)&protocol conformance descriptor for ChannelListPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_79260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for ChannelPresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D3020, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelPresenter, (uint64_t)&protocol conformance descriptor for ChannelPresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3028, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelPresenter, (uint64_t)&protocol conformance descriptor for ChannelPresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelPresenter, &qword_3D3020, (uint64_t)&protocol conformance descriptor for ChannelPresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

uint64_t sub_79978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[3];
  char v87[24];

  v85 = (char *)a1;
  v1 = type metadata accessor for ViewWillDisappearReason(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v81 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  __chkstk_darwin(v3);
  v5 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FF0);
  __chkstk_darwin(v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v75 - v11;
  v13 = type metadata accessor for PageID(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageContent(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ModernPage(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C((uint64_t)v85, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 3)
  {
    v79 = v21;
    v80 = v5;
    v85 = v8;
    v24 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48)];
    sub_1B79C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    v25 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v84;
    v27 = v84 + qword_3DDE78;
    swift_beginAccess(v84 + qword_3DDE78, v87, 0, 0);
    sub_D184(v27, (uint64_t)v12, &qword_3D2FF0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v29 = v23;
    v30 = v14;
    v31 = v13;
    if (v28 == 1)
    {
      sub_D1D4((uint64_t)v12, &qword_3D2FF0);
      v32 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v85, v29, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v13);
      swift_beginAccess(v27, v86, 33, 0);
      sub_1EB00(v32, v27, &qword_3D2FF0);
      swift_endAccess(v86);
      v33 = *(_QWORD *)(v26 + qword_3DDE08);
      v34 = &v29[*(int *)(v79 + 20)];
      v35 = type metadata accessor for PageMetrics(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v80;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v80, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
      swift_retain(v33);
      MetricsController.pageMetrics.setter(v37);
      swift_release(v33);
    }
    else
    {
      v40 = v16;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v12, v13);
      v41 = sub_89A0(&qword_3D2FF8, (uint64_t (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v29, v13, v41);
      if ((v42 & 1) == 0)
      {
        v43 = __chkstk_darwin(v42);
        v44 = type metadata accessor for CategoryPagePresenter(0, v43);
        v75[-2] = v44;
        v45 = sub_89A0(&qword_3D2EB0, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryPagePresenter, (uint64_t)&protocol conformance descriptor for CategoryPagePresenter);
        v75[-1] = v45;
        KeyPath = swift_getKeyPath(&unk_2F2498);
        __chkstk_darwin(KeyPath);
        v78 = v44;
        v75[-2] = v44;
        v75[-1] = v45;
        v47 = swift_getKeyPath(&unk_2F24D0);
        v48 = v84;
        static Published.subscript.getter(v86, v84, KeyPath, v47);
        swift_release(KeyPath);
        swift_release(v47);
        if (LOBYTE(v86[0]) == 2)
        {
          v75[0] = qword_3DDE08;
          v49 = *(_QWORD *)(v48 + qword_3DDE08);
          swift_retain(v49);
          MetricsController.observe(lifecycleEvent:)(2);
          v50 = swift_release(v49);
          v51 = *(_QWORD *)(v48 + qword_3DDD70);
          v77 = v40;
          v52 = v81;
          static ViewWillDisappearReason.unspecified.getter(v50);
          v53 = sub_89A0(&qword_3D3000, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryPagePresenter, (uint64_t)&protocol conformance descriptor for CategoryPagePresenter);
          v75[1] = v51;
          v76 = v53;
          v54 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(v52, v78, v53);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
          v55 = v75[0];
          v56 = *(_QWORD *)(v48 + v75[0]);
          swift_retain(v56);
          MetricsController.observe(lifecycleEvent:)(3);
          v57 = swift_release(v56);
          dispatch thunk of ViewControllerPresenter.viewDidDisappear()(v54, v53, v57);
          sub_8C564((uint64_t)sub_8D13C, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryPagePresenter, &qword_3D2EB0, (uint64_t)&protocol conformance descriptor for CategoryPagePresenter);
          v58 = *(_QWORD *)(v48 + v55);
          v59 = v55;
          v60 = v48;
          v61 = &v29[*(int *)(v79 + 20)];
          v62 = type metadata accessor for PageMetrics(0);
          v63 = *(_QWORD *)(v62 - 8);
          v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v83 = (uint64_t)v29;
          v65 = v80;
          v64(v80, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
          swift_retain(v58);
          MetricsController.pageMetrics.setter(v65);
          swift_release(v58);
          v66 = *(_QWORD *)(v60 + v59);
          swift_retain(v66);
          MetricsController.observe(lifecycleEvent:)(0);
          v67 = swift_release(v66);
          v68 = v76;
          v69 = v78;
          dispatch thunk of ViewControllerPresenter.viewWillAppear()(v78, v76, v67);
          v70 = *(_QWORD *)(v60 + v59);
          swift_retain(v70);
          MetricsController.observe(lifecycleEvent:)(1);
          v71 = swift_release(v70);
          dispatch thunk of ViewControllerPresenter.viewDidAppear()(v69, v68, v71);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v77, v31);
          v72 = (uint64_t)v85;
          v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v85, v83, v31);
          sub_FA4C(v73, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v72, 0, 1, v31);
          swift_beginAccess(v27, v86, 33, 0);
          sub_1EB00(v72, v27, &qword_3D2FF0);
          return swift_endAccess(v86);
        }
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    }
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage;
    v39 = (uint64_t)v29;
  }
  else
  {
    v38 = (uint64_t (*)(_QWORD))&type metadata accessor for PageContent;
    v39 = (uint64_t)v20;
  }
  return sub_FA4C(v39, v38);
}

id sub_7A090(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D6A8, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_7A468 + dword_7B254[swift_getEnumCaseMultiPayload(v35, v24)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_7B1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x7B21CLL);
}

id sub_7B274(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D568, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_7B64C + *((int *)qword_7C438 + swift_getEnumCaseMultiPayload(v35, v24));
    __asm { BR              X10 }
  }
  return result;
}

void sub_7C3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x7C400);
}

id sub_7C458(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D4C8, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_7C830 + dword_7D61C[swift_getEnumCaseMultiPayload(v35, v24)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_7D5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x7D5E4);
}

id sub_7D63C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D608, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_7DA14 + *((int *)qword_7E800 + swift_getEnumCaseMultiPayload(v35, v24));
    __asm { BR              X10 }
  }
  return result;
}

void sub_7E788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x7E7C8);
}

id sub_7E820(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D388, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_7EBF8 + dword_7F9E4[swift_getEnumCaseMultiPayload(v35, v24)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_7F96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x7F9ACLL);
}

id sub_7FA04(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D428, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_7FDDC + *((int *)qword_80BC8 + swift_getEnumCaseMultiPayload(v35, v24));
    __asm { BR              X10 }
  }
  return result;
}

void sub_80B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x80B90);
}

id sub_80BE8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D270, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_80FC0 + dword_81DAC[swift_getEnumCaseMultiPayload(v35, v24)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_81D34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x81D74);
}

id sub_81DCC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D1D0, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_821A4 + *((int *)qword_82F90 + swift_getEnumCaseMultiPayload(v35, v24));
    __asm { BR              X10 }
  }
  return result;
}

void sub_82F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x82F58);
}

id sub_82FB0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D130, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_83388 + dword_84174[swift_getEnumCaseMultiPayload(v35, v24)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_840FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x8413CLL);
}

id sub_84194(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D090, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_8456C + *((int *)qword_85358 + swift_getEnumCaseMultiPayload(v35, v24));
    __asm { BR              X10 }
  }
  return result;
}

void sub_852E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x85320);
}

id sub_85378(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37D748, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_85750 + dword_8653C[swift_getEnumCaseMultiPayload(v35, v24)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_864C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x86504);
}

id sub_8655C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37CFF0, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_86934 + *((int *)qword_87720 + swift_getEnumCaseMultiPayload(v35, v24));
    __asm { BR              X10 }
  }
  return result;
}

void sub_876A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x876E8);
}

id sub_87740(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37CF50, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_87B18 + dword_88904[swift_getEnumCaseMultiPayload(v35, v24)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_8888C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x888CCLL);
}

id sub_88924(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37CEB0, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_88CFC + *((int *)qword_89AE8 + swift_getEnumCaseMultiPayload(v35, v24));
    __asm { BR              X10 }
  }
  return result;
}

void sub_89A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x89AB0);
}

id sub_89B08(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v3 = v2;
  v48 = a2;
  v60 = a1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  v56 = (char *)v42 - v9;
  v45 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v45);
  v46 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v42[5] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[4] = (char *)v42 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FB8);
  __chkstk_darwin(v14);
  v44 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v49 = (char *)v42 - v18;
  v47 = type metadata accessor for ModernPage(0, v17);
  __chkstk_darwin(v47);
  v54 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for InformationViewStyle(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v50 = (char *)v42 - v23;
  v24 = type metadata accessor for PageContent(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  v29 = (char *)v42 - v28;
  v30 = qword_3DDE88;
  v31 = *(_QWORD *)&v2[qword_3DDE88];
  if (v31)
  {
    swift_retain(v31);
    dispatch thunk of DispatchWorkItem.cancel()(v32);
    swift_release(v31);
    v33 = *(_QWORD *)&v3[v30];
  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;
  swift_release(v33);
  sub_8ACEC();
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v42[2] = v21;
    v42[1] = v4;
    v53 = v3;
    v35 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(_QWORD *)&v3[qword_3DDD90];
    v37 = v60;
    sub_19C4C(v60, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v38 = *(unsigned __int8 *)(v25 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_37CE10, v39 + v26, v38 | 7);
    *(_QWORD *)(v40 + 16) = v36;
    v55 = v40;
    sub_1B79C((uint64_t)v29, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    sub_19C4C(v37, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v41 = (char *)&loc_89EE0 + dword_8ACCC[swift_getEnumCaseMultiPayload(v35, v24)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_8AC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48);
  v2 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_FA4C(v0, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  JUMPOUT(0x8AC94);
}

void sub_8ACEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  void (*v15)(char *, uint64_t);
  __n128 v16;
  void *v17;
  uint64_t v18;

  v1 = type metadata accessor for DispatchTimeInterval(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for DispatchTime(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v18 - v11;
  v13 = *(_QWORD *)(v0 + qword_3DDE88);
  if (v13)
  {
    v14 = swift_retain(*(_QWORD *)(v0 + qword_3DDE88));
    static DispatchTime.now()(v14);
    *v5 = 500;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for DispatchTimeInterval.milliseconds(_:), v1);
    + infix(_:_:)(v9, v5);
    (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
    v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v9, v6);
    sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
    v17 = (void *)static OS_dispatch_queue.main.getter(v16);
    OS_dispatch_queue.asyncAfter(deadline:execute:)(v12, v13);
    swift_release(v13);

    v15(v12, v6);
  }
}

void sub_8AE70(uint64_t a1, void (*a2)(__n128), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v41[24];
  _BYTE v42[24];
  _QWORD v43[4];
  char v44;

  v6 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v41[-v11 - 8];
  a1 += 16;
  swift_beginAccess(a1, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (char *)Strong;
    v15 = (uint64_t *)(Strong + qword_3DDD68);
    swift_beginAccess(Strong + qword_3DDD68, v41, 0, 0);
    v17 = *v15;
    if (v17)
    {
      swift_retain(v17);
      sub_172BB8((uint64_t)_swiftEmptyArrayStorage, 1, a2, a3);
      swift_release(v17);
    }
    static JULoadingViewController.PresentationContext.fullCover.getter(v16);
    v18 = *(_QWORD *)&v14[qword_3DDD90];
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    if (v18)
    {
      swift_retain(v18);
      v20 = PageRenderController.presenter.getter(v19);
    }
    else
    {
      v20 = 0;
    }
    type metadata accessor for JULoadingViewController(0);
    v21 = (void *)dispatch thunk of JULoadingViewController.__allocating_init(label:presentationContext:pageRenderMetrics:)(0, 0, v9, v20);
    v22 = swift_release(v18);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v12, v6, v22);
    v23 = qword_3FD5F0;
    v24 = *(void **)&v14[qword_3FD5F0];
    v25 = v24;
    static ViewControllerContainment.remove(_:)(v24);

    v26 = *(void **)&v14[v23];
    *(_QWORD *)&v14[v23] = v21;
    v27 = v21;

    v28 = *(void **)&v14[v23];
    v29 = v28;
    v30 = objc_msgSend(v14, "view");
    if (v30)
    {
      v31 = v30;
      objc_msgSend(v30, "bounds");
      v33 = v32;
      v35 = v34;
      v37 = v36;
      v39 = v38;

      v43[0] = v33;
      v43[1] = v35;
      v43[2] = v37;
      v43[3] = v39;
      v44 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v28, v14, v43);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_8B0CC(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  id v11;
  void *v12;
  id v14;
  void *v15;
  uint64_t v16;

  v3 = type metadata accessor for InformationViewStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19C4C(a1, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload(v9, v7) == 2)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    v11 = objc_msgSend(v1, "collectionView");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "setScrollEnabled:", InformationViewStyle.isScrollEnabledUnderneathInfo.getter() & 1);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    v14 = objc_msgSend(v1, "collectionView");
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, "setScrollEnabled:", 1);

    }
    return sub_FA4C((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
  }
}

void sub_8B248(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  char *v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  char **v14;
  id v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSArray v34;
  uint64_t (*v35)(uint64_t);
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  uint64_t (*v64)(uint64_t);
  void *v65;
  id v66;
  unsigned int v67;
  char v68;

  v63 = a2;
  v64 = a1;
  v5 = v3;
  v6 = type metadata accessor for HeaderButtonItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2F88);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &selRef_accessibilityContextButton;
  v15 = objc_msgSend(v5, "navigationItem", v11);
  objc_msgSend(v15, "_setLargeTitleAccessoryView:", 0);

  v16 = objc_msgSend(v5, "navigationItem");
  v17 = (char *)objc_msgSend(v16, "largeTitleDisplayMode");

  if (v17 != (_BYTE *)&dword_0 + 3)
    goto LABEL_14;
  v18 = qword_3DDE90;
  v19 = *(_QWORD *)&v5[qword_3DDE90];
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
LABEL_13:
    sub_D1D4((uint64_t)v13, &qword_3D2F88);
LABEL_14:
    v29 = (unsigned __int8 *)objc_msgSend(v5, v14[298]);
    v30 = *(_QWORD *)&v5[qword_3DDE90];
    swift_bridgeObjectRetain(v30);
    sub_8BF50(v31);
    v33 = v32;
    swift_bridgeObjectRelease(v30);
    sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
    v34.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v29, "setRightBarButtonItems:", v34.super.isa, swift_bridgeObjectRelease(v33).n128_f64[0]);
    v35 = v64;
    goto LABEL_15;
  }
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v58 = qword_3DDE90;
    v59 = v7;
    v60 = v13;
    v61 = v6;
    v62 = a3;
    v21 = v19 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v22 = *(_QWORD *)(v7 + 72);
    v57 = v19;
    swift_bridgeObjectRetain_n(v19, 2);
    while (1)
    {
      sub_19C4C(v21, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
      v23 = objc_msgSend(v5, "traitCollection");
      v24 = objc_msgSend(v23, "horizontalSizeClass");

      if ((HeaderButtonItem.prefersLargeTitleAccessoryView(horizontalSizeClass:)(v24) & 1) != 0)
        break;
      sub_FA4C((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
      v21 += v22;
      if (!--v20)
      {
        v25 = v57;
        v26 = swift_bridgeObjectRelease(v57);
        v27 = 1;
        v14 = &selRef_accessibilityContextButton;
        v6 = v61;
        a3 = v62;
        v13 = v60;
        goto LABEL_11;
      }
    }
    v25 = v57;
    swift_bridgeObjectRelease(v57);
    v13 = v60;
    sub_1B79C((uint64_t)v9, (uint64_t)v60, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
    v27 = 0;
    v14 = &selRef_accessibilityContextButton;
    v6 = v61;
    a3 = v62;
LABEL_11:
    v18 = v58;
    v7 = v59;
  }
  else
  {
    v25 = *(_QWORD *)&v5[qword_3DDE90];
    v26 = swift_bridgeObjectRetain(v19);
    v27 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v13, v27, 1, v6, v26);
  v28 = swift_bridgeObjectRelease(v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v13, 1, v6, v28) == 1)
    goto LABEL_13;
  sub_D1D4((uint64_t)v13, &qword_3D2F88);
  v52 = objc_msgSend(v5, v14[298]);
  objc_msgSend(v52, "setRightBarButtonItems:", 0);

  v53 = *(_QWORD *)&v5[v18];
  v35 = v64;
  if (!v53 || !*(_QWORD *)(v53 + 16))
    goto LABEL_16;
  v54 = *(_QWORD *)&v5[qword_3DDD98];
  objc_allocWithZone((Class)type metadata accessor for LargeTitleAccessoryView());
  swift_bridgeObjectRetain(v53);
  swift_retain(v54);
  sub_E40CC(v53, v54);
  v29 = v55;
  v34.super.isa = (Class)objc_msgSend(v5, v14[298]);
  -[objc_class _setLargeTitleAccessoryView:alignToBaseline:horizontalAlignment:](v34.super.isa, "_setLargeTitleAccessoryView:alignToBaseline:horizontalAlignment:", v29, v29[OBJC_IVAR____TtC23ShelfKitCollectionViews23LargeTitleAccessoryView_wantsBaselineAlignment], 0);
LABEL_15:

LABEL_16:
  v36 = objc_msgSend(v5, v14[298]);
  v37 = objc_msgSend(v5, "navigationController");
  v38 = v37;
  if (v37)
  {
    v39 = objc_msgSend(v37, "navigationBar");

    v40 = objc_msgSend(v39, "_backdropViewLayerGroupName");
    if (v40)
    {
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v38 = v42;

    }
    else
    {
      v41 = 0;
      v38 = 0;
    }
  }
  else
  {
    v41 = 0;
  }
  sub_244354(v41, (uint64_t)v38);

  v43 = swift_bridgeObjectRelease(v38);
  v44 = ((uint64_t (*)(_QWORD, __n128))v35)(0, v43);
  v45 = sub_89A0(v63, v35, a3);
  v46 = dispatch thunk of ModernPagePresenter.pageHeader.getter(v44, v45);
  CurrentValueSubject.value.getter(&v65);
  swift_release(v46);
  if (v68 == 2)
  {
    sub_8D250(v65, v66, v67, 2);
    v47 = *(void **)&v5[qword_3DDE20];
    if (v47)
    {
      v48 = v47;
      v49 = objc_msgSend(v5, "collectionView");
      if (v49)
      {
        v50 = v49;
        v51 = objc_msgSend(v5, v14[298]);
        sub_1F7A8C(v50, v51);

      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_8D250(v65, v66, v67, v68);
  }
}

uint64_t sub_8B7D4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[24];
  _BYTE v26[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2E90);
  __chkstk_darwin(v5);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v25[-v9];
  __chkstk_darwin(v11);
  v13 = &v25[-v12];
  __chkstk_darwin(v14);
  v16 = &v25[-v15];
  sub_D210(a1, (uint64_t)&v25[-v15], &qword_3D19E8);
  v17 = *(int *)(v5 + 48);
  v16[v17] = a2;
  sub_D184((uint64_t)v16, (uint64_t)v13, &qword_3D19E8);
  v13[v17] = a2;
  v18 = v2 + qword_3DDDC0;
  swift_beginAccess(v2 + qword_3DDDC0, v26, 33, 0);
  sub_1EB00((uint64_t)v13, v18, &qword_3D19E8);
  *(_BYTE *)(v18 + *(int *)(v5 + 48)) = a2;
  swift_endAccess(v26);
  v19 = (uint64_t *)(v2 + qword_3DDD68);
  swift_beginAccess(v19, v26, 0, 0);
  v20 = *v19;
  if (v20)
  {
    v21 = *(int *)(v5 + 48);
    sub_D184(v18, (uint64_t)v13, &qword_3D19E8);
    v13[v21] = a2 & 1;
    sub_D210((uint64_t)v13, (uint64_t)v10, &qword_3D19E8);
    v22 = *(int *)(v5 + 48);
    v10[v22] = a2 & 1;
    sub_D184((uint64_t)v10, (uint64_t)v7, &qword_3D19E8);
    v7[v22] = a2 & 1;
    v23 = v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader;
    swift_beginAccess(v20 + OBJC_IVAR____TtC23ShelfKitCollectionViews20CollectionController_inlineHeader, v25, 33, 0);
    swift_retain(v20);
    sub_1EB00((uint64_t)v7, v23, &qword_3D19E8);
    *(_BYTE *)(v23 + *(int *)(v5 + 48)) = a2 & 1;
    swift_endAccess(v25);
    sub_1725E4();
    sub_D1D4((uint64_t)v10, (uint64_t *)&unk_3D2E90);
    swift_release(v20);
  }
  return sub_D1D4((uint64_t)v16, (uint64_t *)&unk_3D2E90);
}

uint64_t sub_8BA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2FA8);
  __chkstk_darwin(v7);
  v59 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Header.PrimaryAction(0);
  v63 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v64 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v62 = (char *)&v54 - v12;
  v13 = type metadata accessor for HeaderButtonItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v65 = (uint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v54 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1E50);
  __chkstk_darwin(v19);
  v57 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v54 - v22;
  __chkstk_darwin(v24);
  v58 = (char *)&v54 - v25;
  v60 = (uint64_t *)(a2 + qword_3DDE98);
  v66 = *(_OWORD *)(a2 + qword_3DDE98);
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3DBE40);
  v27 = sub_2C298();
  if ((Optional<A>.isEmpty.getter(v26, v27) & 1) != 0)
  {
    v29 = type metadata accessor for Header(0, v28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
    v30 = v60;
  }
  else
  {
    v31 = *(_QWORD *)(a2 + qword_3DDE90);
    if (v31)
    {
      v55 = v6;
      v56 = a1;
      v32 = *(_QWORD *)(v31 + 16);
      if (v32)
      {
        v33 = v31 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
        v34 = *(_QWORD *)(v14 + 72);
        v54 = v31;
        swift_bridgeObjectRetain(v31);
        v35 = _swiftEmptyArrayStorage;
        v61 = v9;
        v36 = v63;
        do
        {
          sub_19C4C(v33, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
          v37 = v65;
          sub_19C4C((uint64_t)v18, v65, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
          Header.PrimaryAction.init(from:)(v37);
          sub_FA4C((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v23, 1, v9) == 1)
          {
            sub_D1D4((uint64_t)v23, &qword_3D1E50);
          }
          else
          {
            v38 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
            v39 = v62;
            v38(v62, v23, v9);
            v38(v64, v39, v9);
            if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
              v35 = (_QWORD *)sub_20EBE0(0, v35[2] + 1, 1, (unint64_t)v35);
            v41 = v35[2];
            v40 = v35[3];
            if (v41 >= v40 >> 1)
              v35 = (_QWORD *)sub_20EBE0(v40 > 1, v41 + 1, 1, (unint64_t)v35);
            v35[2] = v41 + 1;
            v42 = v63;
            v43 = (unint64_t)v35
                + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))
                + *(_QWORD *)(v63 + 72) * v41;
            v9 = v61;
            v38((char *)v43, v64, v61);
            v36 = v42;
          }
          v33 += v34;
          --v32;
        }
        while (v32);
        v28 = swift_bridgeObjectRelease(v54);
      }
      else
      {
        v35 = _swiftEmptyArrayStorage;
      }
      v45 = v59;
      v30 = v60;
      v44 = (uint64_t)v58;
      v6 = v55;
      if (v35[2])
      {
        v46 = v63;
        (*(void (**)(char *, unint64_t, uint64_t, __n128))(v63 + 16))(v58, (unint64_t)v35+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80)), v9, v28);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, v9);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v58, 1, 1, v9);
      }
      swift_bridgeObjectRelease(v35);
    }
    else
    {
      v44 = (uint64_t)v58;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v58, 1, 1, v9);
      v45 = v59;
      v30 = v60;
    }
    v47 = (uint64_t)v57;
    v48 = *v30;
    v49 = v30[1];
    v50 = type metadata accessor for ActionMenu(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v45, 1, 1, v50);
    sub_D184(v44, v47, &qword_3D1E50);
    v51 = type metadata accessor for ArtworkModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v6, 1, 1, v51);
    v52 = swift_bridgeObjectRetain(v49);
    Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)(v48, v49, 0, 0, 0, 0, 0, 0, v52, v45, v47, _swiftEmptyArrayStorage, v6);
    sub_D1D4(v44, &qword_3D1E50);
  }
  return *((unsigned __int8 *)v30 + 16);
}

void sub_8BF50(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  Class isa;
  id v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;

  if (!a1)
    return;
  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  v49 = v4;
  if (v4)
  {
    v5 = *(_QWORD *)(type metadata accessor for HeaderButtonItem(0) - 8);
    v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v7 = qword_3DDD98;
    v8 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain_n(a1, 2);
    v9 = v2;
    v10 = a1 + v6 + v8 * (v4 - 1);
    v11 = -v8;
    v12 = v4;
    do
    {
      v14 = objc_msgSend(v9, "traitCollection");
      v15 = objc_msgSend(v14, "horizontalSizeClass");

      v16 = *(_QWORD *)&v2[v7];
      swift_retain(v16);
      sub_2449C0((uint64_t)v15, v16);
      v18 = v17;
      swift_release(v16);
      if (v18)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        v21 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        v20 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        if (v21 >= v20 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
        v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
        specialized Array._endMutation()(v13);
      }
      v10 += v11;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v47 = v1;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);

  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    v22 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8));
    v23 = v49;
    if (v22)
      goto LABEL_12;
LABEL_30:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return;
  }
  if ((uint64_t)_swiftEmptyArrayStorage < 0)
    v48 = _swiftEmptyArrayStorage;
  else
    v48 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v22 = _CocoaArrayWrapper.endIndex.getter(v48);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v23 = v49;
  if (!v22)
    goto LABEL_30;
LABEL_12:
  if (v22 < 1)
  {
    __break(1u);
  }
  else
  {
    v24 = 0;
    v25 = v23 - 1;
    v26 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
    v50 = v22;
    do
    {
      if (v26)
        v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, _swiftEmptyArrayStorage);
      else
        v28 = (id)_swiftEmptyArrayStorage[v24 + 4];
      v29 = v28;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      v30 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
      specialized Array._endMutation()(v32);
      if (v24 < v25)
      {
        v33 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
        objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v34 = (void *)objc_opt_self(NSLayoutConstraint);
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
        v36 = swift_allocObject(v35, 48, 7);
        *(_OWORD *)(v36 + 16) = xmmword_2EFC90;
        v37 = objc_msgSend(v33, "widthAnchor");
        v38 = objc_msgSend(v37, "constraintEqualToConstant:", 0.0);

        *(_QWORD *)(v36 + 32) = v38;
        v39 = objc_msgSend(v33, "heightAnchor");
        v40 = objc_msgSend(v39, "constraintEqualToConstant:", 1.0);

        *(_QWORD *)(v36 + 40) = v40;
        specialized Array._endMutation()(v41);
        sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v34, "activateConstraints:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

        v43 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v33);
        v44 = v43;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
        v46 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        v45 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        if (v46 >= v45 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
        v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v44);
        specialized Array._endMutation()(v27);

        v26 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
        v22 = v50;
      }
      ++v24;

    }
    while (v22 != v24);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
}

void sub_8C3E0(char a1, char a2)
{
  char *v2;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;

  v5 = objc_msgSend(v2, "navigationController");
  if (v5)
  {
    v6 = v5;
    v16 = objc_msgSend(v5, "navigationBar");

    v7 = objc_msgSend(v2, "navigationItem");
    v8 = *(_QWORD *)&v2[qword_3DDD98];
    swift_retain(v8);
    sub_C81A4(v16, v7, a1 & 1, a2, v8);

    swift_release(v8);
    if ((a1 & 1) != 0)
      goto LABEL_7;
    v9 = qword_3DDE20;
    v10 = *(_QWORD *)&v2[qword_3DDE20];
    if (!v10)
      goto LABEL_7;
    *(_BYTE *)(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews27ModernUberScrollCoordinator_active) = 1;
    v11 = *(void **)&v2[v9];
    if (!v11)
      goto LABEL_7;
    v12 = v11;
    v13 = objc_msgSend(v2, "collectionView");
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v2, "navigationItem");
      sub_1F7A8C(v14, v15);

LABEL_7:
      return;
    }
    __break(1u);
  }
}

void sub_8C564(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  __n128 v55;
  uint64_t v56;
  unint64_t *v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[4];

  v58 = a2;
  v59 = a4;
  v57 = a3;
  v60 = a1;
  v5 = v4;
  v6 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DynamicImpressionsTracker.Configuration(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = qword_3DDD98;
  v15 = *(_QWORD *)&v4[qword_3DDD98];
  v16 = type metadata accessor for ClickLocationTracker(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = swift_retain(v15);
  v18 = ClickLocationTracker.init()(v17);
  v64[0] = v18;
  v56 = v16;
  v19 = BaseObjectGraph.satisfying<A>(_:with:)(v16, v64, v16);
  v20 = swift_retain(v18);
  v21 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(v60, v18, v20);
  swift_release(v15);
  swift_release(v19);
  v22 = swift_release_n(v18, 2);
  static DynamicImpressionsTracker.Configuration.default.getter(v22);
  v23 = BaseObjectGraph.addingImpressionsTracker(with:)(v13);
  v24 = swift_release(v21);
  v25 = (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v24);
  static ImpressionsCalculator.Configuration.half.getter(v25);
  v26 = BaseObjectGraph.addingImpressionsCalculator(with:)(v9);
  v27 = swift_release(v23);
  (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v9, v62, v27);
  v28 = type metadata accessor for MetricsController(0);
  v29 = BaseObjectGraph.satisfying<A>(_:with:)(v28, sub_2356FC, 0, v28);
  swift_release(v26);
  v30 = *(_QWORD *)&v5[v14];
  *(_QWORD *)&v5[v14] = v29;
  swift_release(v30);
  v31 = *(_QWORD *)&v5[v14];
  v32 = type metadata accessor for DynamicImpressionsCalculator(0);
  swift_retain(v31);
  BaseObjectGraph.inject<A>(_:)(v64, v32, v32);
  swift_release(v31);
  v33 = qword_3DDE38;
  v34 = *(_QWORD *)&v5[qword_3DDE38];
  *(_QWORD *)&v5[qword_3DDE38] = v64[0];
  swift_release(v34);
  v35 = *(_QWORD *)&v5[v33];
  v36 = objc_msgSend(v5, "collectionView", swift_retain(v35).n128_f64[0]);
  if (v36)
  {
    v37 = v36;
    objc_msgSend(v36, "bounds");

    DynamicImpressionsCalculator.viewBounds.setter(v38);
    swift_release(v35);
    v39 = *(_QWORD *)&v5[v14];
    swift_retain(v39);
    BaseObjectGraph.inject<A>(_:)(v64, v28, v28);
    swift_release(v39);
    v40 = *(_QWORD *)&v5[qword_3DDE08];
    *(_QWORD *)&v5[qword_3DDE08] = v64[0];
    swift_release(v40);
    v41 = &v5[qword_3DDD68];
    swift_beginAccess(&v5[qword_3DDD68], v64, 0, 0);
    v42 = *(_QWORD **)v41;
    if (v42)
    {
      v43 = *(_QWORD *)&v5[v14];
      v44 = v42[2];
      v42[2] = v43;
      swift_retain_n(v43, 2);
      swift_retain(v42);
      swift_release(v44);
      BaseObjectGraph.inject<A>(_:)(&v63, v56, v56);
      v45 = v42[7];
      v42[7] = v63;
      swift_release(v45);
      BaseObjectGraph.inject<A>(_:)(&v63, v32, v32);
      v46 = v42[6];
      v42[6] = v63;
      swift_release(v42);
      swift_release(v43);
      swift_release(v46);
    }
    v47 = *(_QWORD *)&v5[v14];
    swift_retain(v47);
    ShelvesDelegate.dependenciesDidChange(_:)(v48);
    swift_release(v47);
    v49 = *(_QWORD *)&v5[qword_3DDDA8];
    v50 = *(_QWORD *)&v5[v14];
    v51 = *(_QWORD *)(v49 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph);
    *(_QWORD *)(v49 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelvesViewProvider_objectGraph) = v50;
    swift_retain(v50);
    v52 = swift_release(v51);
    v53 = *(_QWORD *)&v5[v14];
    v54 = v58;
    ((void (*)(_QWORD, __n128))v58)(0, v52);
    sub_89A0(v57, v54, v59);
    v55 = swift_retain(v53);
    dispatch thunk of ModernPagePresenter.dependenciesDidChange(_:)(v55);
    swift_release(v53);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_8C994(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  _QWORD *v11;

  v3 = *a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3100);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2;
  static MetricsFieldsContext.Property<A>.pageContextTracker.getter(v6);
  MetricsFieldsContext.addValue<A>(_:forProperty:)(&v11, v8, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_8CA38(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  id v13;
  _BYTE v14[24];

  v5 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v9 = a2 + 16;
    v10 = *(_QWORD *)(a1 + 8);
    swift_beginAccess(a2 + 16, v14, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v9);
    if (Strong)
    {
      v12 = (void *)Strong;
      v13 = v5;
      sub_72C88(v13, v10, a3, a4, a5);

    }
  }
}

void sub_8CAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  _BYTE v15[24];

  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(unsigned int *)(a1 + 16);
  v11 = *(unsigned __int8 *)(a1 + 20);
  v12 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  if (Strong)
  {
    v14 = (void *)Strong;
    sub_72F6C(v8, v9, v10 | (v11 << 32), a3, a4, a5);

  }
}

void sub_8CB6C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "contentScrollView");
    objc_msgSend(v6, "scrollToTopAnimated:", v2);

  }
}

uint64_t sub_8CBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  __int128 v26[3];
  objc_super v27;

  v3 = v2;
  v6 = type metadata accessor for MetricsPipeline(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (_QWORD *)((char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)(v3 + 128) = 0;
  swift_unknownObjectUnownedInit(v3 + 16, a1, v8);
  v11 = (objc_class *)type metadata accessor for ComposeReviewDelegate();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = swift_unknownObjectWeakInit(&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews21ComposeReviewDelegate_target], 0);
  swift_unknownObjectWeakAssign(v13, a1);
  v27.receiver = v12;
  v27.super_class = v11;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_composeReviewDelegate) = objc_msgSendSuper2(&v27, "init");
  *(_QWORD *)(v3 + 216) = a2;
  v14 = type metadata accessor for BaseObjectGraph(0);
  v15 = swift_retain(a2);
  inject<A, B>(_:from:)(v10, v6, a2, v6, v14, v15);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews18BaseFlowController_metricsPipeline, v10, v6);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B70);
  inject<A, B>(_:from:)(v26, v16, a2, v16, v14, v17);
  sub_1B738(v26, v3 + 24);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D80);
  inject<A, B>(_:from:)(v26, v18, a2, v18, v14, v19);
  *(_OWORD *)(v3 + 104) = v26[0];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1260);
  BaseObjectGraph.inject<A>(_:)(v26, v20, v20);
  sub_1B738(v26, v3 + 136);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  inject<A, B>(_:from:)(v26, v21, a2, v21, v14, v22);
  sub_1B738(v26, v3 + 176);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D98);
  inject<A, B>(_:from:)(v26, v23, a2, v23, v14, v24);
  sub_1B738(v26, v3 + 64);
  return v3;
}

void sub_8CDE8(void *a1, char a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[5];
  uint64_t v8;

  if (a1)
  {
    v3 = objc_msgSend(a1, "presentingViewController");
    if (v3)
    {
      v4 = v3;
      v5 = swift_allocObject(&unk_37CCF8, 17, 7);
      *(_BYTE *)(v5 + 16) = a2 & 1;
      v7[4] = sub_8CECC;
      v8 = v5;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 1107296256;
      v7[2] = sub_24360;
      v7[3] = &block_descriptor_4;
      v6 = _Block_copy(v7);
      objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, v6, swift_release(v8).n128_f64[0]);
      _Block_release(v6);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_8CEBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_8CECC()
{
  uint64_t v0;

  sub_607B8(*(_BYTE *)(v0 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_8CEEC(uint64_t result, char a2)
{
  if (a2 == 1)
    return swift_retain(result);
  return result;
}

uint64_t sub_8CF00(uint64_t result, char a2)
{
  if (a2 == 1)
    return swift_release(result);
  return result;
}

uint64_t sub_8CF14(uint64_t a1)
{
  _QWORD *v1;

  return sub_8C994(a1, v1);
}

uint64_t sub_8CF1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_8CF44()
{
  uint64_t v0;

  sub_5E180(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_8CF50(__n128 a1)
{
  uint64_t v1;

  return sub_5EDA0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_8CF5C(uint64_t a1)
{
  uint64_t v1;

  sub_5EFB4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_8CF64(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for EpisodeListType - 1) + 32))(a2, a1);
  return a2;
}

void sub_8CFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
      goto LABEL_3;
    case 1:
    case 2:
    case 3:
    case 6:
    case 8:
      a1 = a2;
      goto LABEL_3;
    case 4:
      swift_bridgeObjectRetain(a6);
      swift_bridgeObjectRetain(a8);
      swift_bridgeObjectRetain(a2);
      a1 = a4;
LABEL_3:
      swift_bridgeObjectRetain(a1);
      break;
    case 7:
      swift_bridgeObjectRetain(a2);
      sub_8CEEC(a3, a4);
      break;
    default:
      return;
  }
}

uint64_t sub_8D048(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 64);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v4);
  return a1;
}

void sub_8D094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
      goto LABEL_3;
    case 1:
    case 2:
    case 3:
    case 6:
    case 8:
      a1 = a2;
      goto LABEL_3;
    case 4:
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a4);
      swift_bridgeObjectRelease(a8);
      a1 = a6;
LABEL_3:
      swift_bridgeObjectRelease(a1);
      break;
    case 7:
      swift_bridgeObjectRelease(a2);
      sub_8CF00(a3, a4);
      break;
    default:
      return;
  }
}

uint64_t sub_8D13C(uint64_t a1)
{
  _QWORD *v1;

  return sub_23F564(a1, v1);
}

uint64_t sub_8D144(uint64_t a1)
{
  _QWORD *v1;

  return sub_23F578(a1, v1);
}

void sub_8D14C(_QWORD *a1@<X0>, id (*a2)(uint64_t a1)@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_72100(a1, a2, a3, v4, a4);
}

void sub_8D164(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_79978, (void (*)(char *, char *))sub_89B08);
}

void sub_8D18C(uint64_t a1)
{
  uint64_t v1;

  sub_72B6C(a1, v1);
}

void sub_8D1A4(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryPagePresenter, &qword_3D2EB0, (uint64_t)&protocol conformance descriptor for CategoryPagePresenter);
}

void sub_8D1D8(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryPagePresenter, &qword_3D2EB0, (uint64_t)&protocol conformance descriptor for CategoryPagePresenter);
}

void sub_8D208(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for CategoryPagePresenter, (uint64_t)&qword_3D2EB0, (uint64_t)&protocol conformance descriptor for CategoryPagePresenter);
}

void sub_8D238(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_8CB6C(a1, v1);
}

void sub_8D250(void *a1, id a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRelease(a2);
      break;
    case 4:

      break;
    default:
      return;
  }
}

uint64_t sub_8D288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_8D2E0()
{
  return 16;
}

__n128 sub_8D2EC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_8D2F8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  void (*v20)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v26[-v13];
  if (!a1)
    return 0;
  v15 = a1;
  v16 = UIView.firstCollectionViewCell.getter();
  if (!v16)
  {

    return 0;
  }
  v17 = (void *)v16;
  v18 = objc_msgSend(a3, "indexPathForCell:", v16);
  if (!v18)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_12;
  }
  v19 = v18;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v18);

  v20 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32);
  v20(v7, v11, v8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_12:

    sub_D1D4((uint64_t)v7, (uint64_t *)&unk_3D1A00);
    return 0;
  }
  v21 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v20)(v14, v7, v8);
  v22 = IndexPath.count.getter(v21);
  if (v22 > 1)
  {
    v24 = IndexPath.row.getter();
    IndexPath.section.getter(v24);

    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
  }
  else
  {
    v23 = IndexPath.count.getter(v22);
    if (v23 < 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);

    }
    else
    {
      IndexPath.section.getter(v23);

      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
    }
    return 0;
  }
  return v24;
}

void sub_8D574(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_79260, (void (*)(char *, char *))sub_88924);
}

void sub_8D59C(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelPresenter, &qword_3D3020, (uint64_t)&protocol conformance descriptor for ChannelPresenter);
}

void sub_8D5D0(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelPresenter, &qword_3D3020, (uint64_t)&protocol conformance descriptor for ChannelPresenter);
}

void sub_8D600(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for ChannelPresenter, (uint64_t)&qword_3D3020, (uint64_t)&protocol conformance descriptor for ChannelPresenter);
}

void sub_8D638(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_78B48, (void (*)(char *, char *))sub_87740);
}

void sub_8D660(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelListPresenter, &qword_3D3030, (uint64_t)&protocol conformance descriptor for ChannelListPresenter);
}

void sub_8D694(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelListPresenter, &qword_3D3030, (uint64_t)&protocol conformance descriptor for ChannelListPresenter);
}

void sub_8D6C4(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for ChannelListPresenter, (uint64_t)&qword_3D3030, (uint64_t)&protocol conformance descriptor for ChannelListPresenter);
}

void sub_8D6FC(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_78430, (void (*)(char *, char *))sub_8655C);
}

void sub_8D724(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryListPresenter, &qword_3D3040, (uint64_t)&protocol conformance descriptor for CategoryListPresenter);
}

void sub_8D758(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryListPresenter, &qword_3D3040, (uint64_t)&protocol conformance descriptor for CategoryListPresenter);
}

void sub_8D788(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for CategoryListPresenter, (uint64_t)&qword_3D3040, (uint64_t)&protocol conformance descriptor for CategoryListPresenter);
}

uint64_t sub_8D7C0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_8D7E4(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_77600, (void (*)(char *, char *))sub_84194);
}

void sub_8D80C(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightsPresenter, &qword_3D3050, (uint64_t)&protocol conformance descriptor for HighlightsPresenter);
}

void sub_8D840(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightsPresenter, &qword_3D3050, (uint64_t)&protocol conformance descriptor for HighlightsPresenter);
}

void sub_8D870(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for HighlightsPresenter, (uint64_t)&qword_3D3050, (uint64_t)&protocol conformance descriptor for HighlightsPresenter);
}

void sub_8D8A8(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_76EE8, (void (*)(char *, char *))sub_82FB0);
}

void sub_8D8D0(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryPresenter, &qword_3D3060, (uint64_t)&protocol conformance descriptor for LibraryPresenter);
}

void sub_8D904(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryPresenter, &qword_3D3060, (uint64_t)&protocol conformance descriptor for LibraryPresenter);
}

void sub_8D934(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for LibraryPresenter, (uint64_t)&qword_3D3060, (uint64_t)&protocol conformance descriptor for LibraryPresenter);
}

void sub_8D96C(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_767D0, (void (*)(char *, char *))sub_81DCC);
}

void sub_8D994(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for HomePagePresenter, &qword_3D3070, (uint64_t)&protocol conformance descriptor for HomePagePresenter);
}

void sub_8D9C8(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for HomePagePresenter, &qword_3D3070, (uint64_t)&protocol conformance descriptor for HomePagePresenter);
}

void sub_8D9F8(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for HomePagePresenter, (uint64_t)&qword_3D3070, (uint64_t)&protocol conformance descriptor for HomePagePresenter);
}

void sub_8DA28(void **a1)
{
  uint64_t v1;

  sub_735A4(*a1, v1);
}

void sub_8DA4C()
{
  uint64_t v0;

  sub_8AE70(*(_QWORD *)(v0 + 16), *(void (**)(__n128))(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_8DA68(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_760B8, (void (*)(char *, char *))sub_80BE8);
}

void sub_8DA90(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for LongDescriptionPresenter, &qword_3D3080, (uint64_t)&protocol conformance descriptor for LongDescriptionPresenter);
}

void sub_8DAC4(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for LongDescriptionPresenter, &qword_3D3080, (uint64_t)&protocol conformance descriptor for LongDescriptionPresenter);
}

void sub_8DAF4(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for LongDescriptionPresenter, (uint64_t)&qword_3D3080, (uint64_t)&protocol conformance descriptor for LongDescriptionPresenter);
}

uint64_t sub_8DB3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1EF718(v1, a1);
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_8DB94()
{
  uint64_t v0;

  sub_5F0B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_8DB9C()
{
  uint64_t v0;

  sub_5E250(v0);
}

void sub_8DBA4(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_75288, (void (*)(char *, char *))sub_7E820);
}

void sub_8DBCC(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryShowPresenter, &qword_3D3108, (uint64_t)&protocol conformance descriptor for LibraryShowPresenter);
}

void sub_8DC00(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryShowPresenter, &qword_3D3108, (uint64_t)&protocol conformance descriptor for LibraryShowPresenter);
}

void sub_8DC30(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for LibraryShowPresenter, (uint64_t)&qword_3D3108, (uint64_t)&protocol conformance descriptor for LibraryShowPresenter);
}

void sub_8DC68(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_759A0, (void (*)(char *, char *))sub_7FA04);
}

void sub_8DC90(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for StorePagePresenter, &qword_3D3118, (uint64_t)&protocol conformance descriptor for StorePagePresenter);
}

void sub_8DCC4(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for StorePagePresenter, &qword_3D3118, (uint64_t)&protocol conformance descriptor for StorePagePresenter);
}

void sub_8DCF4(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for StorePagePresenter, (uint64_t)&qword_3D3118, (uint64_t)&protocol conformance descriptor for StorePagePresenter);
}

void sub_8DD2C(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_74458, (void (*)(char *, char *))sub_7C458);
}

void sub_8DD54(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for SearchPresenter, &qword_3D3128, (uint64_t)&protocol conformance descriptor for SearchPresenter);
}

void sub_8DD88(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for SearchPresenter, &qword_3D3128, (uint64_t)&protocol conformance descriptor for SearchPresenter);
}

void sub_8DDB8(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for SearchPresenter, (uint64_t)&qword_3D3128, (uint64_t)&protocol conformance descriptor for SearchPresenter);
}

void sub_8DDF0(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_73D40, (void (*)(char *, char *))sub_7B274);
}

void sub_8DE18(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for SeeAllEpisodesPresenter, &qword_3D3138, (uint64_t)&protocol conformance descriptor for SeeAllEpisodesPresenter);
}

void sub_8DE4C(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for SeeAllEpisodesPresenter, &qword_3D3138, (uint64_t)&protocol conformance descriptor for SeeAllEpisodesPresenter);
}

void sub_8DE7C(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for SeeAllEpisodesPresenter, (uint64_t)&qword_3D3138, (uint64_t)&protocol conformance descriptor for SeeAllEpisodesPresenter);
}

void sub_8DEB4(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_74B70, (void (*)(char *, char *))sub_7D63C);
}

void sub_8DEDC(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for ShowListPresenter, &qword_3D3148, (uint64_t)&protocol conformance descriptor for ShowListPresenter);
}

void sub_8DF10(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for ShowListPresenter, &qword_3D3148, (uint64_t)&protocol conformance descriptor for ShowListPresenter);
}

void sub_8DF40(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for ShowListPresenter, (uint64_t)&qword_3D3148, (uint64_t)&protocol conformance descriptor for ShowListPresenter);
}

void sub_8DF78(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_73628, (void (*)(char *, char *))sub_7A090);
}

void sub_8DFA0(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for ModernStationDetailPresenter, &qword_3D3158, (uint64_t)&protocol conformance descriptor for ModernStationDetailPresenter);
}

void sub_8DFD4(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for ModernStationDetailPresenter, &qword_3D3158, (uint64_t)&protocol conformance descriptor for ModernStationDetailPresenter);
}

void sub_8E004(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for ModernStationDetailPresenter, (uint64_t)&qword_3D3158, (uint64_t)&protocol conformance descriptor for ModernStationDetailPresenter);
}

void sub_8E03C(uint64_t a1)
{
  uint64_t v1;

  sub_728CC(a1, v1, (void (*)(char *))sub_77D18, (void (*)(char *, char *))sub_85378);
}

void sub_8E064(uint64_t *a1)
{
  uint64_t v1;

  sub_72BEC(*a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for ModernEpisodesPresenter, &qword_3D3168, (uint64_t)&protocol conformance descriptor for ModernEpisodesPresenter);
}

void sub_8E098(uint64_t a1)
{
  uint64_t v1;

  sub_8CA38(a1, v1, (uint64_t (*)(uint64_t))&type metadata accessor for ModernEpisodesPresenter, &qword_3D3168, (uint64_t)&protocol conformance descriptor for ModernEpisodesPresenter);
}

void sub_8E0C8(uint64_t a1)
{
  uint64_t v1;

  sub_8CAD0(a1, v1, (uint64_t)&type metadata accessor for ModernEpisodesPresenter, (uint64_t)&qword_3D3168, (uint64_t)&protocol conformance descriptor for ModernEpisodesPresenter);
}

uint64_t objectdestroy_27Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int EnumCaseMultiPayload;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for PageContent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = (_QWORD *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v9 = type metadata accessor for PageID(0, v8);
      v10.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
      v11 = type metadata accessor for ModernPage(0, v10);
      v12 = (char *)v6 + *(int *)(v11 + 20);
      v13 = type metadata accessor for PageMetrics(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + *(int *)(v11 + 24)));
      v6 = (_QWORD *)((char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2FC0) + 48));
      v14 = type metadata accessor for PageRenderContentTypes(0);
LABEL_7:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v6, v14);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 2:
      v14 = type metadata accessor for InformationViewStyle(0);
      goto LABEL_7;
    case 1:
      swift_errorRelease(*v6);
      swift_release(v6[2]);
      break;
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_8E230()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PageContent(0) - 8) + 80);
  sub_238130(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t objectdestroy_31Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t NavigationFlowController.__allocating_init(navigationController:asPartOf:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;

  v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  *(_BYTE *)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_pushDisabledForTests) = 0;
  swift_unknownObjectUnownedInit(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController, a1, v6);
  v7 = sub_8CBF0((uint64_t)a1, a2);

  swift_release(a2);
  return v7;
}

uint64_t NavigationFlowController.init(navigationController:asPartOf:)(void *a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v6;

  *(_BYTE *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_pushDisabledForTests) = 0;
  swift_unknownObjectUnownedInit(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController, a1, a3);
  v6 = sub_8CBF0((uint64_t)a1, a2);

  swift_release(a2);
  return v6;
}

uint64_t sub_8E440(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  void *Strong;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t);
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  char v24;
  uint64_t v26;
  uint64_t v27;

  v3 = type metadata accessor for FlowPresentationContext(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v27 - v12;
  if (!*(_BYTE *)(a1 + *(int *)(v11 + 20)))
  {
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController);
    v16 = objc_msgSend(Strong, "viewControllers");

    v17 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v26 = v18;
      else
        v26 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v19 = _CocoaArrayWrapper.endIndex.getter(v26);
      swift_bridgeObjectRelease(v18);
    }
    else
    {
      v19 = *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease(v18);
    sub_54C0C(a1, (uint64_t)v13);
    if (v19)
    {
      v20 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
      v20(v6, enum case for FlowPresentationContext.replace(_:), v3);
      v21 = sub_239FC((unint64_t *)&unk_3D34D0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext, (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v6, v3, v21);
      v23 = *(void (**)(char *, uint64_t))(v4 + 8);
      v23(v6, v3);
      sub_56B40((uint64_t)v13);
      sub_54C0C(a1, (uint64_t)v9);
      if ((v22 & 1) == 0)
      {
        v20(v6, enum case for FlowPresentationContext.replaceTopView(_:), v3);
        v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v6, v3, v21);
        v23(v6, v3);
        sub_56B40((uint64_t)v9);
        v14 = v24 ^ 1;
        return v14 & 1;
      }
    }
    else
    {
      sub_56B40((uint64_t)v13);
      sub_54C0C(a1, (uint64_t)v9);
    }
    sub_56B40((uint64_t)v9);
LABEL_11:
    v14 = 0;
    return v14 & 1;
  }
  if (*(_BYTE *)(a1 + *(int *)(v11 + 20)) == 1)
    goto LABEL_11;
  v14 = 1;
  return v14 & 1;
}

uint64_t sub_8E6CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v15;
  id v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v2 = v1;
  v4 = static Podcasts.isUIPSidebarEnabled.getter();
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController);
  v6 = Strong;
  if ((v4 & 1) != 0)
    v7 = objc_msgSend(Strong, "tabBarController");
  else
    v7 = objc_msgSend(Strong, "splitViewController");
  v8 = v7;

  if (!v8)
    goto LABEL_15;
  ObjectType = swift_getObjectType();
  v10 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FlowControllerProvider);
  if (v10)
    v11 = v10;
  else
    v11 = 0;
  if (v10)
    v12 = v8;
  else
    v12 = 0;
  if (!v12)
  {

LABEL_15:
    v19 = 0;
    v17 = 0u;
    v18 = 0u;
    goto LABEL_16;
  }
  v13 = swift_getObjectType();
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v11 + 16))(&v17, v13, v11);

  if (*((_QWORD *)&v18 + 1))
    return sub_1B738(&v17, a1);
LABEL_16:
  v15 = (void *)swift_unknownObjectUnownedLoadStrong(v2 + 16);
  v16 = objc_msgSend(v15, "nextResponder");

  if (v16)
  {
    UIResponder.nearestFlowController.getter(a1);

  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return sub_D1D4((uint64_t)&v17, &qword_3D31A0);
}

uint64_t sub_8E820(uint64_t a1, char *a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *Strong;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t (*v23)(char *, uint64_t);
  int v24;
  int v25;
  int v26;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  int v72;
  _QWORD *v73;
  void *v74;
  id v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  Class isa;
  void *v84;
  void *v85;
  id v86;
  char v87;
  void *v88;
  __n128 v89;
  uint64_t v90;
  _QWORD *v91;
  id v92;
  id v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  id v98;
  id v99;
  char *v100;
  void *v101;
  id v102;
  void *v103;
  void *v104;
  id v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  char *v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  Class v125;
  int v126;
  int v127;
  int v128;
  int v129;
  uint64_t (*v130)(char *, uint64_t);
  void (*v131)(char *, char *, uint64_t);
  _QWORD *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  __int128 v146[2];
  uint64_t v147;
  _QWORD v148[5];
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;

  v5 = v4;
  v143 = a4;
  v142 = a3;
  v137 = type metadata accessor for FlowDestinationPageHeader(0);
  v136 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v138 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for Logger(0);
  v134 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v133 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowPresentationContext(0);
  v11 = *(_QWORD **)(v10 - 8);
  __chkstk_darwin(v10);
  v140 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v126 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v126 - v17;
  v19 = v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController);
  v21 = objc_msgSend(Strong, "traitCollection");

  v144 = a2;
  sub_55084((uint64_t)v21, (uint64_t)v18);

  v22 = (void (*)(char *, char *, uint64_t))v11[2];
  v145 = v18;
  v22(v15, v18, v10);
  v23 = (uint64_t (*)(char *, uint64_t))v11[11];
  v24 = v23(v15, v10);
  v25 = enum case for FlowPresentationContext.showDetail(_:);
  v26 = enum case for FlowPresentationContext.replaceTopView(_:);
  if (v24 == enum case for FlowPresentationContext.showDetail(_:)
    || v24 == enum case for FlowPresentationContext.push(_:)
    || v24 == enum case for FlowPresentationContext.pushDetail(_:)
    || v24 == enum case for FlowPresentationContext.replace(_:)
    || v24 == enum case for FlowPresentationContext.replaceTopView(_:))
  {
    v129 = enum case for FlowPresentationContext.push(_:);
    v128 = enum case for FlowPresentationContext.pushDetail(_:);
    v130 = v23;
    v127 = enum case for FlowPresentationContext.replace(_:);
    v131 = v22;
    v139 = v5;
    v132 = v11;
    v141 = v10;
    v31 = (void *)swift_unknownObjectUnownedLoadStrong(v19);
    v32 = objc_msgSend(v31, "topViewController");

    v33 = v19;
    v126 = v26;
    if (v32)
    {
      v148[0] = v32;
      v34 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D31C0);
      v36 = swift_dynamicCast(&v149, v148, v34, v35, 6);
      v37 = v144;
      if ((v36 & 1) != 0)
      {
        if (*((_QWORD *)&v150 + 1))
        {
          sub_1B738(&v149, (uint64_t)&v152);
          v38 = v153;
          v39 = v154;
          __swift_project_boxed_opaque_existential_1(&v152, v153);
          v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
          v41 = v40;
          v42 = *(_QWORD *)(v40 + 16);
          if (v42)
          {
            v43 = *(_QWORD *)(type metadata accessor for FlowDestination(0) - 8);
            v44 = v41;
            v45 = v41 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
            v46 = *(_QWORD *)(v43 + 72);
            while ((FlowDestination.representsTheSameContent(other:)(a1) & 1) == 0)
            {
              v45 += v46;
              if (!--v42)
              {
                v40 = v44;
                goto LABEL_60;
              }
            }
            v109 = v35;
            v110 = swift_bridgeObjectRelease(v44);
            v111 = v133;
            v112 = static Logger.navigation.getter(v110);
            v113 = Logger.logObject.getter(v112);
            v114 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v113, v114))
            {
              v115 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v115 = 0;
              _os_log_impl(&dword_0, v113, v114, "Dropping navigation target because we're already showing this page", v115, 2u);
              swift_slowDealloc(v115, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v134 + 8))(v111, v135);
            sub_1D5D4((uint64_t)&v152, (uint64_t)v148);
            v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D31C8);
            if ((swift_dynamicCast(v146, v148, v109, v116, 6) & 1) != 0)
            {
              sub_1B738(v146, (uint64_t)&v149);
              __swift_project_boxed_opaque_existential_1(&v149, *((uint64_t *)&v150 + 1));
              sub_BED3C(a1);
              ((void (*)(char *, uint64_t))v132[1])(v145, v141);
              __swift_destroy_boxed_opaque_existential_0(&v149);
            }
            else
            {
              v147 = 0;
              memset(v146, 0, sizeof(v146));
              ((void (*)(char *, uint64_t))v132[1])(v145, v141);
              sub_D1D4((uint64_t)v146, &qword_3D31D0);
            }
            return __swift_destroy_boxed_opaque_existential_0(&v152);
          }
LABEL_60:
          swift_bridgeObjectRelease(v40);
          __swift_destroy_boxed_opaque_existential_0(&v152);
          v51 = v141;
          v37 = v144;
LABEL_30:
          v52 = sub_5BB78(a1, v142, v143);
          if (!v52)
            return ((uint64_t (*)(char *, uint64_t))v132[1])(v145, v51);
          v53 = v52;
          v54 = sub_19E57C();
          if (v54 != 18)
          {
            v55 = v54;
            ObjectType = swift_getObjectType();
            v57 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NavigationTabIdentifiable);
            if (v57)
              v58 = v57;
            else
              v58 = 0;
            if (v57)
              v59 = v53;
            else
              v59 = 0;
            if (v59)
            {
              v60 = swift_getObjectType();
              v61 = v53;
              sub_91F1C(v55);
              v62 = v60;
              v37 = v144;
              dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.setter(v55, v62, v58);

            }
            sub_91F0C(v55);
          }
          v148[0] = v53;
          v63 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
          v144 = v53;
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D31A8);
          if ((swift_dynamicCast(&v149, v148, v63, v64, 6) & 1) != 0)
          {
            sub_1B738(&v149, (uint64_t)&v152);
            v65 = type metadata accessor for FlowPresentationHints(0);
            v66 = v138;
            (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v138, &v37[*(int *)(v65 + 28)], v137);
            v67 = v153;
            v68 = v154;
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v152, v153);
            (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v66, v67, v68);
            __swift_destroy_boxed_opaque_existential_0(&v152);
          }
          else
          {
            v151 = 0;
            v149 = 0u;
            v150 = 0u;
            sub_D1D4((uint64_t)&v149, &qword_3D31B0);
          }
          v69 = v141;
          v70 = sub_8E440((uint64_t)v37);
          v71 = v140;
          v131(v140, v145, v69);
          v72 = v130(v71, v69);
          if (v72 == v25 || v72 == v129 || v72 == v128)
          {
            v85 = (void *)swift_unknownObjectUnownedLoadStrong(v33);
            v86 = objc_msgSend(v85, "presentedViewController");

            v87 = v70 & 1;
            sub_91B7C(v86, v87);

            v88 = *(void **)&v37[*(int *)(type metadata accessor for FlowPresentationHints(0) + 32)];
            if (v88)
            {
              v90 = type metadata accessor for Podcasts(0, v89);
              v153 = v90;
              v154 = sub_239FC(&qword_3D2F80, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
              v91 = __swift_allocate_boxed_opaque_existential_0(&v152);
              (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v90 - 8) + 104))(v91, enum case for Podcasts.uipTransitions(_:), v90);
              v92 = v88;
              LOBYTE(v90) = isFeatureEnabled(_:)(&v152);
              __swift_destroy_boxed_opaque_existential_0(&v152);
              if ((v90 & 1) != 0)
              {
                v93 = objc_msgSend(objc_allocWithZone((Class)UIZoomTransitionOptions), "init");
                v94 = swift_allocObject(&unk_37D7E8, 24, 7);
                v95 = v144;
                *(_QWORD *)(v94 + 16) = v144;
                v96 = v95;
                UIZoomTransitionOptions.alignmentRectProvider.setter(sub_91EE0, v94);
                sub_E710(0, &qword_3D31B8, UIViewControllerTransition_ptr);
                v97 = swift_allocObject(&unk_37D810, 24, 7);
                *(_QWORD *)(v97 + 16) = v92;
                v98 = v92;
                v99 = v93;
                v92 = (id)static UIViewControllerTransition.zoom(options:sourceViewProvider:)(v93, sub_91EE8, v97);

                objc_msgSend(v96, "setPreferredTransition:", v92, swift_release(v97).n128_f64[0]);
              }

            }
            v100 = v144;
            sub_8F804(v144, v87);

            return ((uint64_t (*)(char *, uint64_t))v132[1])(v145, v141);
          }
          v73 = v132;
          if (v72 == v127)
          {
            v74 = (void *)swift_unknownObjectUnownedLoadStrong(v33);
            v75 = objc_msgSend(v74, "tabBarItem");

            v76 = (void *)swift_unknownObjectUnownedLoadStrong(v33);
            UINavigationController.clearBottomPaletteIfNeeded()();

            v77 = (void *)swift_unknownObjectUnownedLoadStrong(v33);
            v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
            v79 = swift_allocObject(v78, 40, 7);
            *(_OWORD *)(v79 + 16) = xmmword_2F11D0;
            v80 = v144;
            *(_QWORD *)(v79 + 32) = v144;
            v152 = v79;
            specialized Array._endMutation()(v79);
            v81 = v152;
            v82 = v80;
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v77, "setViewControllers:animated:", isa, v70 & 1, swift_bridgeObjectRelease(v81).n128_f64[0]);

            v84 = (void *)swift_unknownObjectUnownedLoadStrong(v33);
            objc_msgSend(v84, "setTabBarItem:", v75);

LABEL_74:
            return ((uint64_t (*)(char *, uint64_t))v73[1])(v145, v141);
          }
          if (v72 != v126)
          {
            v107 = (void (*)(char *, uint64_t))v132[1];
            v108 = v141;
            v107(v145, v141);

            return ((uint64_t (*)(char *, uint64_t))v107)(v71, v108);
          }
          v101 = (void *)swift_unknownObjectUnownedLoadStrong(v33);
          v102 = objc_msgSend(v101, "tabBarItem");

          v103 = (void *)swift_unknownObjectUnownedLoadStrong(v33);
          UINavigationController.clearBottomPaletteIfNeeded()();

          v104 = (void *)swift_unknownObjectUnownedLoadStrong(v33);
          v105 = objc_msgSend(v104, "viewControllers");

          v106 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v105, v63);
          v152 = v106;
          if ((unint64_t)v106 >> 62)
          {
            if (v106 < 0)
              v117 = v106;
            else
              v117 = v106 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v106);
            v118 = _CocoaArrayWrapper.endIndex.getter(v117);
            swift_bridgeObjectRelease(v106);
            if (v118 >= 1)
              goto LABEL_58;
          }
          else if (*(uint64_t *)((char *)&dword_10 + (v106 & 0xFFFFFFFFFFFFF8)) >= 1)
          {
LABEL_58:

LABEL_71:
            v119 = v144;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v119);
            v121 = *(_QWORD *)((char *)&dword_10 + (v152 & 0xFFFFFFFFFFFFFF8));
            v120 = *(_QWORD *)((char *)&dword_18 + (v152 & 0xFFFFFFFFFFFFFF8));
            if (v121 >= v120 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v120 > 1, v121 + 1, 1);
            v122 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v121, v119);
            specialized Array._endMutation()(v122);
            v123 = (void *)swift_unknownObjectUnownedLoadStrong(v33);
            v124 = v152;
            v125 = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v123, "setViewControllers:animated:", v125, 0, swift_bridgeObjectRelease(v124).n128_f64[0]);

            v84 = (void *)swift_unknownObjectUnownedLoadStrong(v33);
            objc_msgSend(v84, "setTabBarItem:", v102);

            goto LABEL_74;
          }
          swift_bridgeObjectRelease(v106);
          v152 = (uint64_t)_swiftEmptyArrayStorage;
          goto LABEL_71;
        }
      }
      else
      {
        v151 = 0;
        v149 = 0u;
        v150 = 0u;
      }
    }
    else
    {
      v151 = 0;
      v149 = 0u;
      v150 = 0u;
      v37 = v144;
    }
    sub_D1D4((uint64_t)&v149, &qword_3D2B38);
    v51 = v141;
    goto LABEL_30;
  }
  v47 = (void (*)(char *, uint64_t))v11[1];
  v47(v15, v10);
  sub_8E6CC((uint64_t)&v152);
  v48 = v153;
  if (v153)
  {
    v49 = v154;
    __swift_project_boxed_opaque_existential_1(&v152, v153);
    (*(void (**)(uint64_t, char *, uint64_t, char *, uint64_t, uint64_t))(v49 + 32))(a1, v144, v142, v143, v48, v49);
    v47(v145, v10);
    return __swift_destroy_boxed_opaque_existential_0(&v152);
  }
  v47(v145, v10);
  return sub_D1D4((uint64_t)&v152, &qword_3D31A0);
}

uint64_t sub_8F55C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)*v0;
  if (!*(_QWORD *)(*v0 + 16))
    return 0;
  result = swift_isUniquelyReferenced_nonNull_native(*v0);
  if ((result & 1) != 0)
  {
    v3 = v1[2];
    if (v3)
    {
LABEL_4:
      v4 = v3 - 1;
      result = v1[2 * v4 + 4];
      v1[2] = v4;
      *v0 = v1;
      return result;
    }
  }
  else
  {
    result = (uint64_t)sub_E1D34(v1);
    v1 = (_QWORD *)result;
    v3 = *(_QWORD *)(result + 16);
    if (v3)
      goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_8F5CC()
{
  return sub_8F5E0(sub_E1D08, (uint64_t (*)(void))sub_E0014);
}

uint64_t sub_8F5E0(uint64_t (*a1)(uint64_t), uint64_t (*a2)(void))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_3;
    return 0;
  }
  if (v5 < 0)
    v9 = *v2;
  else
    v9 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v10 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v5);
  if (!v10)
    return 0;
LABEL_3:
  result = sub_91B04(a1);
  if (!result)
  {
    v7 = *v2;
    if ((unint64_t)*v2 >> 62)
    {
      if (v7 < 0)
        v11 = *v2;
      else
        v11 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v2);
      v12 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v7);
      result = v12 - 1;
      if (!__OFSUB__(v12, 1))
        return a2();
    }
    else
    {
      v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
      result = v8 - 1;
      if (!__OFSUB__(v8, 1))
        return a2();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_8F6BC@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  BOOL v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  __int128 v21[2];
  uint64_t v22;
  void *v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v23 = a1;
  v4 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v5 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3200);
  if ((swift_dynamicCast(v21, &v23, v4, v6, 6) & 1) != 0)
  {
    sub_1B738(v21, (uint64_t)v24);
    v7 = v25;
    v8 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    v10 = v9 == 0;
    if (v9)
    {
      v11 = v9;
      objc_msgSend(v9, "frame");
      v13 = v12;
      v15 = v14;
      v17 = v16;
      v19 = v18;

    }
    else
    {
      v13 = 0;
      v15 = 0;
      v17 = 0;
      v19 = 0;
    }
    result = __swift_destroy_boxed_opaque_existential_0(v24);
  }
  else
  {
    v22 = 0;
    memset(v21, 0, sizeof(v21));
    result = sub_D1D4((uint64_t)v21, (uint64_t *)&unk_3D3208);
    v10 = 1;
    v13 = 0;
    v15 = 0;
    v17 = 0;
    v19 = 0;
  }
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v15;
  *(_QWORD *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 24) = v19;
  *(_BYTE *)(a2 + 32) = v10;
  return result;
}

void sub_8F804(void *a1, char a2)
{
  uint64_t v2;
  int v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  Class isa;
  id Strong;

  v5 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_pushDisabledForTests);
  v6 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController;
  Strong = (id)swift_unknownObjectUnownedLoadStrong(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController);
  if (v5 == 1)
  {
    v7 = (void *)swift_unknownObjectUnownedLoadStrong(v6);
    v8 = objc_msgSend(v7, "viewControllers");

    v9 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    v11 = a1;
    swift_bridgeObjectRetain(v10);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    v14 = *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8));
    v13 = *(_QWORD *)((char *)&dword_18 + (v10 & 0xFFFFFFFFFFFFFF8));
    if (v14 >= v13 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
    specialized Array._endMutation()(v15);
    swift_bridgeObjectRelease(v10);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(Strong, "setViewControllers:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  else
  {
    objc_msgSend(Strong, "pushViewController:animated:", a1, a2 & 1);

  }
}

void sub_8F988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;
  id Strong;

  v1 = ((uint64_t (*)(void))FlowAnimationBehavior.rawValue.getter)();
  v3 = v2;
  v4 = FlowAnimationBehavior.rawValue.getter(1);
  if (v1 == v4 && v3 == v5)
  {
    swift_bridgeObjectRelease_n(v3, 2);
    v9 = 0;
  }
  else
  {
    v7 = v5;
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v4, v5, 0);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v7);
    v9 = v8 ^ 1;
  }
  Strong = (id)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController);

}

void sub_8FA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *Strong;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v5 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController);
  v7 = objc_msgSend(Strong, "viewControllers");

  v8 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  sub_8FCF4(a1, v9, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  if ((v11 & 1) != 0 || (v12 = v10 - 1, v10 < 1))
  {
    swift_bridgeObjectRelease(v9);
    sub_8E6CC((uint64_t)v29);
    v20 = v30;
    if (v30)
    {
      v21 = v31;
      __swift_project_boxed_opaque_existential_1(v29, v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 48))(a1, a2, v20, v21);
      __swift_destroy_boxed_opaque_existential_0(v29);
    }
    else
    {
      sub_D1D4((uint64_t)v29, &qword_3D31A0);
    }
  }
  else
  {
    v13 = FlowAnimationBehavior.rawValue.getter(a2);
    v15 = v14;
    v17 = FlowAnimationBehavior.rawValue.getter(1);
    v18 = v16;
    if (v13 == v17 && v15 == v16)
    {
      swift_bridgeObjectRelease_n(v15, 2);
      v19 = 0;
    }
    else
    {
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v16, 0);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v18);
      v19 = v22 ^ 1;
    }
    if ((v9 & 0xC000000000000001) != 0)
    {
      v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
    }
    else
    {
      if (v12 >= *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8)))
      {
        __break(1u);
        return;
      }
      v23 = *(id *)(v9 + 8 * v12 + 32);
    }
    v28 = v23;
    swift_bridgeObjectRelease(v9);
    v24 = (void *)swift_unknownObjectUnownedLoadStrong(v5);
    v25 = objc_msgSend(v24, "presentedViewController");

    if (v25)
    {
      v26 = (void *)swift_unknownObjectUnownedLoadStrong(v5);
      objc_msgSend(v26, "dismissViewControllerAnimated:completion:", 0, 0);

    }
    v27 = (void *)swift_unknownObjectUnownedLoadStrong(v5);

  }
}

void sub_8FCCC(uint64_t a1, uint64_t a2)
{
  sub_8FCF4(a1, a2, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
}

void sub_8FCE0(uint64_t a1, uint64_t a2)
{
  sub_8FCF4(a1, a2, (unint64_t *)&qword_3D34B0, UIView_ptr);
}

void sub_8FCF4(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v8;
  id v9;
  void *v10;
  char v11;
  uint64_t i;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v8 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  if (v8)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8)))
        {
          __break(1u);
          return;
        }
        v9 = *(id *)(a2 + 32);
      }
      v10 = v9;
      a4 = (_QWORD *)sub_E710(0, a3, a4);
      v11 = static NSObject.== infix(_:_:)(v10, a1);

      if ((v11 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          a3 = (unint64_t *)(i + 1);
          if (__OFADD__(i, 1))
            break;
          if (a3 == (unint64_t *)v8)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if (((unint64_t)a3 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if ((unint64_t)a3 >= *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)))
              goto LABEL_19;
            v13 = *(id *)(a2 + 32 + 8 * (_QWORD)a3);
          }
          v14 = v13;
          v15 = static NSObject.== infix(_:_:)(v13, a1);

          if ((v15 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v16 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v8 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease(a2);
        if (v8)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_8FE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = *(_QWORD *)(a2 + 32);
  sub_3D600(v5);
  v6 = static NavigationTab.== infix(_:_:)(v5, a1);
  sub_7C28(v5);
  v7 = 0;
  if ((v6 & 1) == 0)
  {
    v8 = v2 - 1;
    while (v8 != v7)
    {
      v9 = *(_QWORD *)(a2 + 40 + 8 * v7);
      sub_3D600(v9);
      v10 = static NavigationTab.== infix(_:_:)(v9, a1);
      sub_7C28(v9);
      ++v7;
      if ((v10 & 1) != 0)
        return v7;
    }
    return 0;
  }
  return v7;
}

uint64_t sub_8FF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = type metadata accessor for SearchExtensionScope(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  v9 = sub_239FC((unint64_t *)&unk_3D34C0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for SearchExtensionScope, (uint64_t)&protocol conformance descriptor for SearchExtensionScope);
  v10 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)(v7, a1, v5, v9) & 1) == 0)
  {
    ++v10;
    v7 += v8;
    if (v2 == v10)
      return 0;
  }
  return v10;
}

void sub_9002C(uint64_t a1, uint64_t a2)
{
  sub_8FCF4(a1, a2, (unint64_t *)&qword_3E1860, UIButton_ptr);
}

uint64_t sub_90040()
{
  uint64_t v0;

  return swift_unknownObjectUnownedDestroy(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController);
}

_QWORD *NavigationFlowController.deinit()
{
  _QWORD *v0;

  v0 = BaseFlowController.deinit();
  swift_unknownObjectUnownedDestroy((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController);
  return v0;
}

uint64_t NavigationFlowController.__deallocating_deinit()
{
  _QWORD *v0;

  v0 = BaseFlowController.deinit();
  swift_unknownObjectUnownedDestroy((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

id FlowNavigationController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(a1);
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata(v3);
  return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

char *FlowNavigationController.init(navigationBarClass:toolbarClass:)(uint64_t ObjCClassFromMetadata, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v21;
  char v22[24];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_macNavigationBar];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v8 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  if (ObjCClassFromMetadata)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjCClassFromMetadata);
  if (a2)
    v9 = swift_getObjCClassFromMetadata(a2);
  else
    v9 = 0;
  v23.receiver = v2;
  v23.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v23, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v9);
  v11 = type metadata accessor for FlowActionRunner();
  v12 = swift_allocObject(v11, 32, 7);
  v13 = objc_allocWithZone((Class)type metadata accessor for ModelViewOverflowTransitioning(0));
  v14 = (char *)v10;
  *(_QWORD *)(v12 + 16) = objc_msgSend(v13, "init");
  v15 = swift_unknownObjectWeakInit(v12 + 24, 0);
  swift_beginAccess(v15, v22, 1, 0);
  swift_unknownObjectWeakAssign(v12 + 24, v14);
  v16 = sub_239FC(&qword_3D31F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
  v17 = (uint64_t *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner];
  swift_beginAccess(&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner], &v21, 1, 0);
  v18 = *v17;
  *v17 = v12;
  v17[1] = v16;
  objc_msgSend(v14, "useDefaultRestorationIdentifier", swift_unknownObjectRelease(v18).n128_f64[0]);
  v19 = objc_msgSend(v14, "navigationBar");
  objc_msgSend(v19, "setPrefersLargeTitles:", 1);

  return v14;
}

id ContextMenuPreviewViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

char *FlowNavigationController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v7;
  char *v8;
  double v9;
  char *v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  char v24[24];
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType();
  v7 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_macNavigationBar];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController];
  v9 = 0.0;
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  v10 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  if (a2)
  {
    v11 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v9 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v11 = 0;
  }
  v25.receiver = v3;
  v25.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v25, "initWithNibName:bundle:", v11, a3, v9);

  v13 = type metadata accessor for FlowActionRunner();
  v14 = swift_allocObject(v13, 32, 7);
  v15 = objc_allocWithZone((Class)type metadata accessor for ModelViewOverflowTransitioning(0));
  v16 = (char *)v12;
  *(_QWORD *)(v14 + 16) = objc_msgSend(v15, "init");
  v17 = swift_unknownObjectWeakInit(v14 + 24, 0);
  swift_beginAccess(v17, v24, 1, 0);
  swift_unknownObjectWeakAssign(v14 + 24, v16);
  v18 = sub_239FC(&qword_3D31F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
  v19 = (uint64_t *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner];
  swift_beginAccess(&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner], &v23, 1, 0);
  v20 = *v19;
  *v19 = v14;
  v19[1] = v18;
  objc_msgSend(v16, "useDefaultRestorationIdentifier", swift_unknownObjectRelease(v20).n128_f64[0]);
  v21 = objc_msgSend(v16, "navigationBar");
  objc_msgSend(v21, "setPrefersLargeTitles:", 1);

  return v16;
}

id DownloadsCVCLibraryActionControllerBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

id FlowNavigationController.init()()
{
  void *v0;
  uint64_t v1;

  v1 = sub_E710(0, &qword_3D31F8, &off_378870);
  return objc_msgSend(v0, "initWithNavigationBarClass:toolbarClass:", swift_getObjCClassFromMetadata(v1), 0);
}

Swift::Void __swiftcall FlowNavigationController.viewDidLoad()()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  uint64_t v6;
  double v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "viewDidLoad");
  v1 = objc_msgSend(v0, "navigationBar");
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "bounds");
    v5 = v4;

    v6 = SizeClass.init(width:)(v5);
    v7 = SizeClass.margins(width:)(v6, v5);
    objc_msgSend(v1, "setLayoutMargins:", 0.0, v7, 0.0, v7);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall FlowNavigationController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  id v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  objc_super v10;

  isa = a1.value.super.isa;
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", isa);
  v3 = objc_msgSend(v1, "navigationBar");
  v4 = objc_msgSend(v1, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "bounds");
    v7 = v6;

    v8 = SizeClass.init(width:)(v7);
    v9 = SizeClass.margins(width:)(v8, v7);
    objc_msgSend(v3, "setLayoutMargins:", 0.0, v9, 0.0, v9);

  }
  else
  {
    __break(1u);
  }
}

void FlowNavigationController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  uint64_t v8;
  double v9;
  objc_super v10;

  v10.receiver = v3;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v7 = objc_msgSend(v3, "navigationBar");
  v8 = SizeClass.init(width:)(a2);
  v9 = SizeClass.margins(width:)(v8, a2);
  objc_msgSend(v7, "setLayoutMargins:", 0.0, v9, 0.0, v9);

}

Swift::Void __swiftcall FlowNavigationController.viewWillLayoutSubviews()()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  uint64_t v7;
  double v8;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = objc_msgSend(v0, "navigationBar");
  v3 = objc_msgSend(v0, "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "bounds");
    v6 = v5;

    v7 = SizeClass.init(width:)(v6);
    v8 = SizeClass.margins(width:)(v7, v6);
    objc_msgSend(v2, "setLayoutMargins:", 0.0, v8, 0.0, v8);

    v9.receiver = v0;
    v9.super_class = ObjectType;
    objc_msgSendSuper2(&v9, "viewWillLayoutSubviews");
  }
  else
  {
    __break(1u);
  }
}

uint64_t FlowNavigationController.macNavigationBar.getter()
{
  return sub_90F4C(&OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_macNavigationBar);
}

uint64_t FlowNavigationController.macNavigationBar.setter(uint64_t a1, uint64_t a2)
{
  return sub_90FA0(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_macNavigationBar);
}

uint64_t (*FlowNavigationController.macNavigationBar.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_macNavigationBar, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t FlowNavigationController.flowController.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_91F2C(v3, a1);
}

uint64_t FlowNavigationController.flowController.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController;
  swift_beginAccess(v3, v5, 33, 0);
  sub_91F74(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*FlowNavigationController.flowController.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t FlowNavigationController.actionRunner.getter()
{
  return sub_90F4C(&OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner);
}

uint64_t sub_90F4C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _BYTE v4[24];

  v2 = (_QWORD *)(v1 + *a1);
  swift_beginAccess(v2, v4, 0, 0);
  return swift_unknownObjectRetain(*v2);
}

uint64_t FlowNavigationController.actionRunner.setter(uint64_t a1, uint64_t a2)
{
  return sub_90FA0(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner);
}

uint64_t sub_90FA0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  _BYTE v9[24];

  v6 = (uint64_t *)(v3 + *a3);
  swift_beginAccess(v6, v9, 1, 0);
  v7 = *v6;
  *v6 = a1;
  v6[1] = a2;
  return swift_unknownObjectRelease(v7);
}

uint64_t (*FlowNavigationController.actionRunner.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner, a1, 33, 0);
  return j_j__swift_endAccess;
}

void FlowNavigationController.reconfigureToShow(destination:)(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t ObjectType;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = objc_msgSend(v1, "viewControllers");
  v4 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v5);
    return;
  }
  if (v5 < 0)
    v10 = v5;
  else
    v10 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(v5);
  if (!v11)
    goto LABEL_16;
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      return;
    }
    v6 = *(id *)(v5 + 32);
  }
  v7 = v6;
  swift_bridgeObjectRelease(v5);
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ReusableFlowViewController))
    v9 = v7;
  else
    v9 = 0;
  if (v9)
    FlowNavigationController.reconfigureToShow(destination:)(a1);

}

id FlowNavigationController.childForStatusBarStyle.getter()
{
  void *v0;

  return objc_msgSend(v0, "topViewController");
}

id FlowNavigationController.supportedInterfaceOrientations.getter()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  void *v3;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = objc_msgSend(v0, "topViewController");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "supportedInterfaceOrientations");

    return v4;
  }
  else
  {
    v6.receiver = v0;
    v6.super_class = ObjectType;
    return objc_msgSendSuper2(&v6, "supportedInterfaceOrientations");
  }
}

Swift::OpaquePointer_optional __swiftcall FlowNavigationController.popToRootViewController(animated:)(Swift::Bool animated)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  id v10;
  Swift::Bool v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;
  void *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  Swift::OpaquePointer_optional result;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = objc_msgSend(v1, "viewControllers");
  v6 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v33 = v7;
    else
      v33 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
  }
  *(_QWORD *)&v9 = swift_bridgeObjectRelease(v7).n128_u64[0];
  if (v8 < 2)
  {
    v14 = objc_msgSend(v2, "viewControllers", v9);
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v6);

    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0)
        v34 = v15;
      else
        v34 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v15);
      v35 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v15);
      if (v35)
      {
LABEL_8:
        if ((v15 & 0xC000000000000001) != 0)
        {
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
        }
        else
        {
          if (!*(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
          {
            __break(1u);
            goto LABEL_39;
          }
          v17 = *(id *)(v15 + 32);
        }
        v18 = v17;
        v19 = objc_msgSend(v17, "contentScrollView", swift_bridgeObjectRelease(v15).n128_f64[0]);
        if (!v19)
        {

          goto LABEL_35;
        }
        v20 = v19;
        v37 = v18;
        v21 = v18;
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3200);
        if ((swift_dynamicCast(&v38, &v37, v6, v22, 6) & 1) != 0)
        {
          v23 = *((_QWORD *)&v39 + 1);
          v24 = v40;
          __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
          (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v24 + 8))(&v41, v23, v24);
          __swift_destroy_boxed_opaque_existential_0(&v38);
          if (*((_QWORD *)&v42 + 1))
          {
            v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3220);
            if ((swift_dynamicCast(&v43, &v41, (char *)&type metadata for Any + 8, v25, 6) & 1) != 0)
            {
              if (*((_QWORD *)&v44 + 1))
                goto LABEL_21;
            }
            else
            {
              v45 = 0;
              v43 = 0u;
              v44 = 0u;
            }
LABEL_20:
            sub_D1D4((uint64_t)&v43, &qword_3D3218);
            *(_QWORD *)&v38 = v21;
            v21 = v21;
            v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3220);
            if (!swift_dynamicCast(&v43, &v38, v6, v26, 6))
            {
              v45 = 0;
              v43 = 0u;
              v44 = 0u;
              sub_D1D4((uint64_t)&v43, &qword_3D3218);
              UINavigationController.clearBottomPaletteIfNeeded()();
              objc_msgSend(v20, "scrollToTopAnimated:", animated);

              goto LABEL_35;
            }
LABEL_21:
            v27 = sub_1B738(&v43, (uint64_t)v46);
            v28 = UIScrollView.isScrolledToTop.getter(v27);
            v29 = v47;
            v30 = v48;
            __swift_project_boxed_opaque_existential_1(v46, v47);
            LOBYTE(v29) = dispatch thunk of NavigationHandlingController.shouldScrollToTop(_:)(v28 & 1, v29, v30);
            v31 = v47;
            v32 = v48;
            __swift_project_boxed_opaque_existential_1(v46, v47);
            dispatch thunk of NavigationHandlingController.handleNavigationPop(willScrollToTop:)(v29 & 1, v31, v32);
            if ((v29 & 1) != 0)
            {
              objc_msgSend(v20, "scrollToTopAnimated:", animated);

              __swift_destroy_boxed_opaque_existential_0(v46);
            }
            else
            {
              __swift_destroy_boxed_opaque_existential_0(v46);

            }
            goto LABEL_35;
          }
        }
        else
        {
          v40 = 0;
          v38 = 0u;
          v39 = 0u;
          sub_D1D4((uint64_t)&v38, (uint64_t *)&unk_3D3208);
          v41 = 0u;
          v42 = 0u;
        }
        sub_D1D4((uint64_t)&v41, &qword_3D1A70);
        v43 = 0u;
        v44 = 0u;
        v45 = 0;
        goto LABEL_20;
      }
    }
    else if (*(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
    {
      goto LABEL_8;
    }
    swift_bridgeObjectRelease(v15);
    goto LABEL_35;
  }
  UINavigationController.clearBottomPaletteIfNeeded()();
  v36.receiver = v2;
  v36.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v36, "popToRootViewControllerAnimated:", animated);
  if (!v10)
  {
LABEL_35:
    v13 = 0;
    goto LABEL_36;
  }
  v12 = v10;
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v6);

LABEL_36:
  v16 = (void *)v13;
LABEL_39:
  result.value._rawValue = v16;
  result.is_nil = v11;
  return result;
}

id FlowNavigationController.__allocating_init(rootViewController:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithRootViewController:", a1);

  return v3;
}

void FlowNavigationController.init(rootViewController:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.FlowNavigationController", 48, "init(rootViewController:)", 25, 0);
  __break(1u);
}

uint64_t sub_91854(uint64_t a1, uint64_t a2)
{
  return sub_9186C(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_actionRunner);
}

uint64_t sub_91860(uint64_t a1, uint64_t a2)
{
  return sub_9186C(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_macNavigationBar);
}

uint64_t sub_9186C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;
  _BYTE v6[24];

  v4 = (_QWORD *)(v3 + *a3);
  swift_beginAccess(v4, v6, 0, 0);
  return swift_unknownObjectRetain(*v4);
}

uint64_t sub_918B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_macNavigationBar);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease(v6);
}

uint64_t (*sub_91910(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_macNavigationBar, a1, 33, 0);
  return j_j__swift_endAccess;
}

void (*sub_91954(void (**a1)(id *), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_91A2C(v6, a2, a3);
  return sub_919A8;
}

void (*sub_919AC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_91A98(v6, a2, a3);
  return sub_919A8;
}

void sub_91A00(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_91A2C(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8)) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s23ShelfKitCollectionViews6ShadowVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_91A98(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8)) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for Shadow;
  }
  __break(1u);
  return result;
}

uint64_t sub_91B04(uint64_t (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!(_DWORD)result || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    result = a1(v3);
    v3 = result;
    *v1 = result;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
  if (v6)
  {
    v7 = v6 - 1;
    v8 = *(_QWORD *)((char *)&stru_20.cmd + 8 * v7 + (v3 & 0xFFFFFFFFFFFFFF8));
    *(_QWORD *)(v5 + 16) = v7;
    specialized Array._endMutation()(result);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_91B7C(void *a1, char a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  char v17;
  NSString *v18;
  Class v19;
  uint64_t ObjCClassMetadata;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  char v31;
  NSString *v32;
  Class v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;

  if (a1)
  {
    v4 = objc_opt_self(UINavigationController);
    v5 = (void *)swift_dynamicCastObjCClass(a1, v4);
    v37 = a1;
    if (v5)
    {
      v6 = objc_msgSend(v5, "viewControllers");
      v7 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      if ((unint64_t)v8 >> 62)
      {
        if (v8 < 0)
          v23 = v8;
        else
          v23 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v24 = _CocoaArrayWrapper.endIndex.getter(v23);
        swift_bridgeObjectRelease(v8);
        if (v24)
          goto LABEL_5;
      }
      else if (*(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
      {
LABEL_5:
        if ((v8 & 0xC000000000000001) != 0)
        {
          v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
LABEL_8:
          v10 = v9;
          swift_bridgeObjectRelease(v8);
          ObjectType = swift_getObjectType();
          v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for UserAcknowledgementRequiring);
          if (v12)
            v13 = v12;
          else
            v13 = 0;
          if (v12)
            v14 = v10;
          else
            v14 = 0;
          if (v14)
          {
            v15 = swift_getObjectType();
            v16 = v10;
            v17 = dispatch thunk of UserAcknowledgementRequiring.isAcknowledgementRequired.getter(v15, v13);

            if ((v17 & 1) != 0)
              goto LABEL_35;
            goto LABEL_34;
          }
          v18 = (NSString *)String._bridgeToObjectiveC()();
          v19 = NSClassFromString(v18);

          if (v19)
          {
            ObjCClassMetadata = swift_getObjCClassMetadata(v19);
            v21 = sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
            v22 = swift_dynamicCastMetatypeUnconditional(ObjCClassMetadata, v21, 0, 0, 0);
            LOBYTE(ObjCClassMetadata) = objc_msgSend(v10, "isKindOfClass:", swift_getObjCClassFromMetadata(v22));

            if ((ObjCClassMetadata & 1) != 0)
              goto LABEL_35;
            goto LABEL_34;
          }
          goto LABEL_42;
        }
        if (*(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
        {
          v9 = *(id *)(v8 + 32);
          goto LABEL_8;
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      swift_bridgeObjectRelease(v8);
    }
    v25 = swift_getObjectType();
    v26 = swift_conformsToProtocol2(v25, &protocol descriptor for UserAcknowledgementRequiring);
    if (v26)
      v27 = v26;
    else
      v27 = 0;
    if (v26)
      v28 = v37;
    else
      v28 = 0;
    if (v28)
    {
      v29 = swift_getObjectType();
      v30 = v37;
      v31 = dispatch thunk of UserAcknowledgementRequiring.isAcknowledgementRequired.getter(v29, v27);

      if ((v31 & 1) != 0)
      {
LABEL_35:

        return;
      }
    }
    else
    {
      v32 = (NSString *)String._bridgeToObjectiveC()();
      v33 = NSClassFromString(v32);

      if (!v33)
        goto LABEL_41;
      v34 = swift_getObjCClassMetadata(v33);
      v35 = sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
      v36 = swift_dynamicCastMetatypeUnconditional(v34, v35, 0, 0, 0);
      if ((objc_msgSend(v37, "isKindOfClass:", swift_getObjCClassFromMetadata(v36)) & 1) != 0)
        goto LABEL_35;
    }
LABEL_34:
    objc_msgSend(v37, "dismissViewControllerAnimated:completion:", a2 & 1, 0);
    goto LABEL_35;
  }
}

uint64_t sub_91EBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_91EE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_8F6BC(*(void **)(v1 + 16), a1);
}

void *sub_91EE8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_91F0C(uint64_t result)
{
  if (result != 18)
    return sub_7C28(result);
  return result;
}

uint64_t sub_91F1C(uint64_t result)
{
  if (result != 18)
    return sub_3D600(result);
  return result;
}

uint64_t sub_91F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D31A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_91F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D31A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_91FBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_239FC(&qword_3D3228, a2, (uint64_t (*)(uint64_t))type metadata accessor for FlowNavigationController, (uint64_t)&protocol conformance descriptor for FlowNavigationController);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FlowNavigationController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24FlowNavigationController);
}

uint64_t sub_92018()
{
  return type metadata accessor for NavigationFlowController(0);
}

uint64_t type metadata accessor for NavigationFlowController(uint64_t a1)
{
  uint64_t result;

  result = qword_3D3258;
  if (!qword_3D3258)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NavigationFlowController);
  return result;
}

uint64_t sub_9205C(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_2F26B0;
  v2[1] = &unk_2F26C8;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 304);
}

uint64_t method lookup function for NavigationFlowController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for NavigationFlowController);
}

uint64_t dispatch thunk of NavigationFlowController.__allocating_init(navigationController:asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of NavigationFlowController.nextFlowController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of MacNavigationBarProvider.macNavigationBar.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_920D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_920F4()
{
  qword_3D34E0 = 0x403C000000000000;
}

void sub_92104()
{
  qword_3D34E8 = 0x4014000000000000;
}

void sub_92114()
{
  qword_3D34F0 = 0x4014000000000000;
}

void sub_92124()
{
  qword_3D34F8 = 0x4026000000000000;
}

void sub_92134()
{
  qword_3D3500 = 0x403C000000000000;
}

void sub_92144()
{
  qword_3D3508 = 0x4000000000000000;
}

void sub_92154()
{
  qword_3D3510 = 0x403A000000000000;
}

void sub_92164()
{
  qword_3D3518 = 0x4014000000000000;
}

void sub_92174()
{
  qword_3D3520 = 0x4037000000000000;
}

void sub_92184()
{
  qword_3D3528 = 0x401C000000000000;
}

double sub_92194()
{
  double result;

  if (qword_3CF1D8 != -1)
    swift_once(&qword_3CF1D8, sub_92134);
  result = *(double *)&qword_3D3500;
  qword_3D3530 = qword_3D3500;
  return result;
}

void sub_921DC()
{
  qword_3D3538 = 0x4039000000000000;
}

void sub_921EC()
{
  qword_3D3540 = 0x4014000000000000;
}

void sub_921FC()
{
  qword_3D3548 = 0;
}

uint64_t PlayButton.theme.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a1 = *v3;
  return result;
}

void PlayButton.theme.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  _BYTE *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *a1;
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme, v12, 1, 0);
  v8 = *v7;
  *v7 = v6;
  if (v6 != v8)
  {
    sub_92334();
    v10 = type metadata accessor for PlayButtonPresenter.State(0, v9);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    sub_92598((uint64_t)v5, 1, 0);
    sub_D1D4((uint64_t)v5, &qword_3D3558);
  }
}

uint64_t sub_92334()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  char *v5;
  int v6;
  id v7;
  double v8;
  double v9;
  id v10;
  uint64_t KeyPath;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  id v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  id v22;
  _BYTE v23[24];
  _QWORD v24[5];
  _QWORD v25[5];
  double v26;
  double v27;
  double v28;
  double v29;
  char v30;
  double v31;
  double v32;
  double v33;
  double v34;
  char v35;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_symbolSwapView);
  v3 = sub_97BA8();
  objc_msgSend(v2, "setTintColor:", v3);

  v4 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressView);
  v5 = (char *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme, v23, 0, 0);
  v6 = *v5;
  v7 = sub_97BA8();
  if (v6 == 1)
  {
    UIColor.hsbaComponents.getter(v24);
    sub_D210((uint64_t)v24, (uint64_t)&v31, &qword_3D3708);
    if (v35 != 1)
    {
      if (v32 <= 0.3)
        v8 = v32;
      else
        v8 = 0.3;
      if (v33 <= 0.7)
        v9 = v33;
      else
        v9 = 0.7;
      v10 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithHue:saturation:brightness:alpha:", v31, v8, v9, v34);

      v7 = v10;
    }
  }
  KeyPath = swift_getKeyPath(&unk_2F2958);
  v12 = swift_getKeyPath(&unk_2F2980);
  v26 = *(double *)&v7;
  v13 = v4;
  static UIView.Invalidating.subscript.setter(&v26, v13, KeyPath, v12);
  v14 = *v5;
  v15 = sub_97BA8();
  if ((v14 & 1) != 0
    && (UIColor.hsbaComponents.getter(v25), sub_D210((uint64_t)v25, (uint64_t)&v26, &qword_3D3708), (v30 & 1) == 0))
  {
    if (v27 <= 0.1)
      v17 = v27;
    else
      v17 = 0.1;
    if (v28 > 0.85)
      v18 = v28;
    else
      v18 = 0.85;
    v16 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithHue:saturation:brightness:alpha:", v26, v17, v18, v29);

  }
  else
  {

    v16 = 0;
  }
  v19 = swift_getKeyPath(&unk_2F28C8);
  v20 = swift_getKeyPath(&unk_2F28F0);
  v22 = v16;
  return static UIView.Invalidating.subscript.setter(&v22, v13, v19, v20);
}

void sub_92598(uint64_t a1, uint64_t a2, int a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __n128 v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  id v51;
  char v52;
  void *v53;
  _QWORD *v54;
  void *v55;
  _QWORD *v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64;
  void (*v65)(char *, uint64_t);
  _QWORD *v66;
  _QWORD *v67;
  id v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  char *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  void **aBlock;
  uint64_t v84;
  uint64_t (*v85)(uint64_t);
  void *v86;
  uint64_t (*v87)();
  _QWORD *v88;
  char v89[32];

  v4 = v3;
  v73 = a3;
  v77 = a2;
  v6 = type metadata accessor for PlayButtonPresenter.State(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v72 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36E0);
  __chkstk_darwin(v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  v75 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v75 + 64);
  v14 = __chkstk_darwin(v12);
  v78 = (uint64_t)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v81 = (uint64_t)&v69 - v16;
  v17 = __chkstk_darwin(v15);
  v76 = (uint64_t)&v69 - v18;
  v19 = __chkstk_darwin(v17);
  v82 = (uint64_t)&v69 - v20;
  v21 = __chkstk_darwin(v19);
  v74 = (uint64_t)&v69 - v22;
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v69 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v69 - v26;
  v80 = v4;
  v28 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState];
  v29 = swift_beginAccess(v28, v89, 0, 0);
  v30 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v71 = v28;
  v70 = v30;
  ((void (*)(char *, char *, uint64_t, __n128))v30)(v27, v28, v6, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  v31 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_D184((uint64_t)v27, (uint64_t)v11, &qword_3D3558);
  v32 = a1;
  sub_D184(a1, v31, &qword_3D3558);
  v79 = v7;
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v33((uint64_t)v11, 1, v6) == 1)
  {
    sub_D1D4((uint64_t)v27, &qword_3D3558);
    if (v33(v31, 1, v6) == 1)
    {
      sub_D1D4((uint64_t)v11, &qword_3D3558);
      return;
    }
  }
  else
  {
    sub_D184((uint64_t)v11, (uint64_t)v25, &qword_3D3558);
    if (v33(v31, 1, v6) != 1)
    {
      v61 = v79;
      v62 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v72, v31, v6);
      v63 = sub_89A0(&qword_3D36B8, (uint64_t (*)(uint64_t))&type metadata accessor for PlayButtonPresenter.State, (uint64_t)&protocol conformance descriptor for PlayButtonPresenter.State);
      v64 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v62, v6, v63);
      v65 = *(void (**)(char *, uint64_t))(v61 + 8);
      v65(v62, v6);
      sub_D1D4((uint64_t)v27, &qword_3D3558);
      v65(v25, v6);
      sub_D1D4((uint64_t)v11, &qword_3D3558);
      if ((v64 & 1) != 0)
        return;
      goto LABEL_7;
    }
    sub_D1D4((uint64_t)v27, &qword_3D3558);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v25, v6);
  }
  sub_D1D4((uint64_t)v11, &qword_3D36E0);
LABEL_7:
  v69 = v6;
  if (v73 == 2)
  {
    v34 = objc_msgSend(v80, "window");

    v35 = v82;
    if (v34)
      LODWORD(v34) = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
  }
  else
  {
    LODWORD(v34) = v73 & 1;
    v35 = v82;
  }
  v36 = v32;
  v37 = v74;
  sub_D184(v32, v74, &qword_3D3558);
  sub_D184(v37, v35, &qword_3D3558);
  v38 = *(unsigned __int8 *)(v75 + 80);
  v39 = (v38 + 32) & ~v38;
  v40 = v39 + v13;
  v41 = v38 | 7;
  v42 = swift_allocObject(&unk_37DBD0, v39 + v13, v38 | 7);
  v43 = v77 & 1;
  *(_BYTE *)(v42 + 16) = v77 & 1;
  v44 = v80;
  *(_QWORD *)(v42 + 24) = v80;
  sub_D210(v37, v42 + v39, &qword_3D3558);
  v45 = v76;
  sub_D184(v36, v76, &qword_3D3558);
  sub_D184(v45, v81, &qword_3D3558);
  v46 = swift_allocObject(&unk_37DBF8, v40 + 1, v41);
  *(_BYTE *)(v46 + 16) = v43;
  *(_QWORD *)(v46 + 24) = v44;
  sub_D210(v45, v46 + v39, &qword_3D3558);
  *(_BYTE *)(v46 + v40) = (_BYTE)v34;
  v47 = swift_allocObject(&unk_37DC20, 25, 7);
  *(_QWORD *)(v47 + 16) = v44;
  *(_BYTE *)(v47 + 24) = (_BYTE)v34;
  v48 = v78;
  sub_D184(v36, v78, &qword_3D3558);
  if ((_DWORD)v34)
  {
    v49 = v72;
    v50 = v69;
    v70(v72, v71, v69);
    v51 = v44;
    v52 = sub_97534(v48);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v49, v50);
    sub_D1D4(v48, &qword_3D3558);
    sub_D1D4(v81, &qword_3D3558);
    sub_D1D4(v82, &qword_3D3558);
    v53 = (void *)objc_opt_self(UIView);
    if ((v52 & 1) != 0)
    {
      v54 = (_QWORD *)swift_allocObject(&unk_37DC98, 72, 7);
      v54[2] = v51;
      v54[3] = sub_99C28;
      v54[4] = v42;
      v54[5] = sub_99D04;
      v54[6] = v46;
      v54[7] = sub_99D6C;
      v54[8] = v47;
      v87 = sub_99DC8;
      v88 = v54;
      aBlock = _NSConcreteStackBlock;
      v84 = 1107296256;
      v85 = sub_24360;
      v86 = &block_descriptor_78;
      v55 = _Block_copy(&aBlock);
      v56 = v88;
      v57 = v51;
      swift_retain(v42);
      swift_retain(v46);
      swift_retain(v47);
      swift_release(v56);
      objc_msgSend(v53, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 514, v55, 0, 0.5, 0.0, 0.5, 0.5, v69);
    }
    else
    {
      v66 = (_QWORD *)swift_allocObject(&unk_37DC48, 72, 7);
      v66[2] = v51;
      v66[3] = sub_99C28;
      v66[4] = v42;
      v66[5] = sub_99D04;
      v66[6] = v46;
      v66[7] = sub_99D6C;
      v66[8] = v47;
      v87 = sub_99D7C;
      v88 = v66;
      aBlock = _NSConcreteStackBlock;
      v84 = 1107296256;
      v85 = sub_24360;
      v86 = &block_descriptor_72;
      v55 = _Block_copy(&aBlock);
      v67 = v88;
      v68 = v51;
      swift_retain(v42);
      swift_retain(v46);
      swift_retain(v47);
      swift_release(v67);
      objc_msgSend(v53, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 514, v55, 0, 0.5, 0.0, 0.7, 0.2, v69);
    }
    swift_release(v47);
    swift_release(v46);
    swift_release(v42);
    _Block_release(v55);
  }
  else
  {
    v58 = (char *)v44;
    sub_D1D4(v48, &qword_3D3558);
    v59 = v82;
    sub_95EC4(v43, v58, v82);
    sub_D1D4(v59, &qword_3D3558);
    v60 = v81;
    sub_964D0(v43, v58, v81, 0);
    sub_D1D4(v60, &qword_3D3558);
    sub_96C34(v58, 0);
    swift_release(v47);
    swift_release(v46);
    swift_release(v42);
  }
}

void (*PlayButton.theme.modify(_QWORD *a1))(void ***a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_92E24;
}

void sub_92E24(void ***a1)
{
  void **v1;
  _BYTE *v2;
  void *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *a1;
  v2 = (*a1)[5];
  v3 = (*a1)[3];
  v4 = *((unsigned __int8 *)*a1 + 48);
  v5 = v2[(_QWORD)v3];
  v2[(_QWORD)v3] = v4;
  if (((v4 ^ v5) & 1) != 0)
  {
    v6 = (uint64_t)v1[4];
    sub_92334();
    v8 = type metadata accessor for PlayButtonPresenter.State(0, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    sub_92598(v6, 1, 0);
    sub_D1D4(v6, &qword_3D3558);
  }
  free(v1[4]);
  free(v1);
}

uint64_t PlayButton.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_data;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_D184(v3, a1, (uint64_t *)&unk_3D6D90);
}

void sub_92F18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D184(a1, (uint64_t)v4, (uint64_t *)&unk_3D6D90);
  PlayButton.data.setter((uint64_t)v4);
}

void PlayButton.data.setter(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char isEscapingClosureAtFileLocation;
  _QWORD v11[5];
  uint64_t v12;

  v3 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_data];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_data], v11, 33, 0);
  sub_93120(a1, v3);
  swift_endAccess(v11);
  v4 = (void *)objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_37D8E8, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v6 = swift_allocObject(&unk_37D910, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_933B8;
  *(_QWORD *)(v6 + 24) = v5;
  v11[4] = sub_43920;
  v12 = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_920D4;
  v11[3] = &block_descriptor_5;
  v7 = _Block_copy(v11);
  v8 = v12;
  v9 = v1;
  swift_retain(v6);
  objc_msgSend(v4, "performWithoutAnimation:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v6, "", 122, 144, 44, 1);
  swift_release(v5);
  swift_release(v6);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    sub_D1D4(a1, (uint64_t *)&unk_3D6D90);
}

uint64_t sub_93120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_93168(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v24[24];
  _BYTE v25[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for PlayButtonPresenter.Data(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v24[-v10];
  v12 = a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_data;
  swift_beginAccess(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_data, v25, 0, 0);
  sub_D184(v12, (uint64_t)v4, (uint64_t *)&unk_3D6D90);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_D1D4((uint64_t)v4, (uint64_t *)&unk_3D6D90);
LABEL_8:
    sub_933E8(0);
    return;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v11, v4, v5);
  v13 = (uint64_t *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph);
  v14 = swift_beginAccess(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph, v24, 0, 0);
  v15 = *v13;
  if (!*v13)
  {
    (*(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v11, v5, v14);
    goto LABEL_8;
  }
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_presenter);
  if (v16)
  {
    swift_retain(v15);
    v17 = swift_retain(v16);
    v18 = PlayButtonPresenter.upgradeDataIfPossible(data:)(v11, v17);
    v19 = swift_release(v16);
    if ((v18 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    v19 = swift_retain(v15);
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v6 + 16))(v9, v11, v5, v19);
  v20 = type metadata accessor for PlayButtonPresenter(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = swift_retain(v15);
  v22 = PlayButtonPresenter.init(data:asPartOf:)(v9, v15, v21);
  sub_933E8(v22);
LABEL_11:
  v23 = swift_release(v15);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v11, v5, v23);
}

uint64_t sub_93394()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_933B8()
{
  uint64_t v0;

  sub_93168(*(_QWORD *)(v0 + 16));
}

uint64_t sub_933C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_5(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_933E8(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  double result;

  v2 = v1;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_presenter;
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_presenter];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_presenter] = a1;
  v6 = swift_retain(a1);
  if (v5)
    PlayButtonPresenter.delegate.setter(v6);
  v7 = *(_QWORD *)&v1[v4];
  if (v7)
  {
    sub_89A0(&qword_3D36D8, type metadata accessor for PlayButton, (uint64_t)&protocol conformance descriptor for PlayButton);
    swift_retain(v7);
    v8 = v2;
    PlayButtonPresenter.delegate.setter(v9);
    swift_release(v5);
    swift_release(a1);
    v10 = v7;
  }
  else
  {
    swift_release(v5);
    v10 = a1;
  }
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void (*PlayButton.data.modify(_QWORD *a1))(void ****a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_data, v3, 33, 0);
  return sub_934FC;
}

void sub_934FC(void ****a1, char a2)
{
  void ***v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void **v9;
  void **v10;

  v3 = *a1;
  swift_endAccess(*a1);
  if ((a2 & 1) != 0)
    goto LABEL_3;
  v4 = v3[6];
  v5 = objc_opt_self(UIView);
  v6 = swift_allocObject(&unk_37D960, 24, 7);
  *(_QWORD *)(v6 + 16) = v4;
  v7 = swift_allocObject(&unk_37D988, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_99F88;
  *(_QWORD *)(v7 + 24) = v6;
  v3[4] = (void **)sub_43A64;
  v3[5] = (void **)v7;
  *v3 = _NSConcreteStackBlock;
  v3[1] = (void **)1107296256;
  v3[2] = (void **)sub_920D4;
  v3[3] = (void **)&block_descriptor_14;
  v8 = _Block_copy(v3);
  v9 = v3[5];
  v10 = v4;
  swift_retain(v7);
  objc_msgSend((id)v5, "performWithoutAnimation:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v7, "", 122, 144, 44, 1);
  swift_release(v7);
  swift_release(v6);
  if ((v5 & 1) != 0)
    __break(1u);
  else
LABEL_3:
    free(v3);
}

uint64_t sub_9364C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_9365C(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  __n128 v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  char v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v22[24];
  _BYTE v23[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  __chkstk_darwin(v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for PlayButtonPresenter.State(0, v6);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v22[-v12];
  v14 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState;
  v15 = swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState, v23, 0, 0);
  v16 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v8 + 16);
  v16(v13, v14, v7, v15);
  v17 = swift_beginAccess(v14, v22, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v8 + 24))(v14, a1, v7, v17);
  swift_endAccess(v22);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v16)(v10, v14, v7);
  v18 = sub_89A0(&qword_3D36B8, (uint64_t (*)(uint64_t))&type metadata accessor for PlayButtonPresenter.State, (uint64_t)&protocol conformance descriptor for PlayButtonPresenter.State);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v10, v7, v18);
  v20 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v20(v10, v7);
  if ((v19 & 1) == 0)
  {
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v16)(v5, v13, v7);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    sub_92598((uint64_t)v5, 0, 2);
    sub_D1D4((uint64_t)v5, &qword_3D3558);
  }
  v20(a1, v7);
  return ((uint64_t (*)(_BYTE *, uint64_t))v20)(v13, v7);
}

void PlayButton.__allocating_init(theme:)(unsigned __int8 *a1)
{
  objc_class *v1;
  id v2;
  unsigned __int8 v3;

  v3 = *a1;
  v2 = objc_allocWithZone(v1);
  sub_938F4(&v3, 0);
}

uint64_t PlayButton.bind(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_release(v4);
  return swift_retain(a1);
}

void sub_938F4(unsigned __int8 *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  char *v35;
  __n128 v36;
  void (*v37)(char *, char *, uint64_t, __n128);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  void *v44;
  id v45;
  id v46;
  double v47;
  id v48;
  id v49;
  double v50;
  double v51;
  id v52;
  double v53;
  id v54;
  id v55;
  double v56;
  double v57;
  id v58;
  uint64_t v59;
  void *v60;
  id v61;
  double v62;
  id v63;
  id v64;
  double v65;
  double v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void *v79;
  id v80;
  id v81;
  objc_class *v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  char *v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  Class isa;
  uint64_t v113;
  id v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)();
  void *v125;
  uint64_t v126;
  id v127;
  id v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  objc_class *ObjectType;
  __int128 aBlock;
  __int128 v147;
  uint64_t (*v148)();
  uint64_t v149;
  objc_super v150[2];
  objc_super v151;

  v144 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v132 = type metadata accessor for AutomationSemantics(0);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v130 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36C0);
  __chkstk_darwin(v5);
  v138 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for UIHoverLiftEffect(0);
  __chkstk_darwin(v137);
  v136 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  __chkstk_darwin(v8);
  v135 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlayButtonPresenter.State(0, v10);
  v142 = *(_QWORD *)(v11 - 8);
  v143 = v11;
  v12 = __chkstk_darwin(v11);
  v140 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v130 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v16);
  v18 = (char *)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v141) = *a1;
  v19 = (uint64_t)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_data];
  v20 = type metadata accessor for PlayButtonPresenter.Data(0);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v19, 1, 1, v20);
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_presenter;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_presenter] = 0;
  v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_symbolSwapView;
  v24 = objc_allocWithZone((Class)type metadata accessor for SwapView());
  v25 = v2;
  *(_QWORD *)&v2[v23] = objc_msgSend(v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressView;
  v27 = type metadata accessor for SimpleProgressView(0);
  *(_QWORD *)&v25[v26] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v27)), "init");
  *(_QWORD *)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressLeadingConstraint] = 0;
  *(_QWORD *)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressWidthConstraint] = 0;
  *(_QWORD *)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_subscriptions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_waveformView] = 0;
  *(_QWORD *)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph] = 0;
  v28 = *(_QWORD *)&v2[v22];
  v29 = v144;
  *(_QWORD *)&v2[v22] = v144;
  v30 = v29;
  swift_retain(v29);
  v31 = swift_release(v28);
  if (v30)
  {
    v32 = swift_retain(v30);
    PlayButtonPresenter.data.getter(v32);
    v33 = swift_release(v30);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t, __n128))v21)(v18, 0, 1, v20, v33);
    swift_beginAccess(v19, &aBlock, 33, 0);
    sub_99A6C((uint64_t)v18, v19);
    swift_endAccess(&aBlock);
    v34 = swift_retain(v30);
    v35 = v140;
    PlayButtonPresenter.currentState.getter(v34);
    v36 = swift_release(v30);
    v37 = *(void (**)(char *, char *, uint64_t, __n128))(v142 + 32);
    v38 = v35;
    v39 = v143;
    v37(v15, v38, v143, v36);
    v40 = v39;
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v21)(v18, 1, 1, v20, v31);
    swift_beginAccess(v19, &aBlock, 33, 0);
    sub_99A6C((uint64_t)v18, v19);
    v41 = swift_endAccess(&aBlock);
    static PlayButtonPresenter.State.unknown.getter(v41);
    v40 = v143;
    v37 = *(void (**)(char *, char *, uint64_t, __n128))(v142 + 32);
  }
  ((void (*)(char *, char *, uint64_t))v37)(&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState], v15, v40);
  v25[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme] = (char)v141;

  v151.receiver = v25;
  v151.super_class = ObjectType;
  v42 = objc_msgSendSuper2(&v151, "initWithFrame:", 0.0, 0.0, 100.0, 50.0);
  objc_msgSend(v42, "setMaximumContentSizeCategory:", UIContentSizeCategoryExtraExtraExtraLarge);
  v43 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_symbolSwapView;
  v44 = *(void **)((char *)v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_symbolSwapView);
  objc_msgSend(v44, "setUserInteractionEnabled:", 0);
  objc_msgSend(v44, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v45 = objc_msgSend(v44, "leadingAnchor");
  v46 = objc_msgSend(v42, "leadingAnchor");
  if (qword_3CF1E0 != -1)
    swift_once(&qword_3CF1E0, sub_92144);
  v47 = *(double *)&qword_3D3508;
  v48 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  v49 = objc_msgSend(v42, "traitCollection");
  objc_msgSend(v48, "scaledValueForValue:compatibleWithTraitCollection:", v49, v47);
  v51 = v50;

  v140 = (char *)objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, v51);
  v52 = objc_msgSend(*(id *)&v43[(_QWORD)v42], "widthAnchor");
  if (qword_3CF1E8 != -1)
    swift_once(&qword_3CF1E8, sub_92154);
  v53 = *(double *)&qword_3D3510;
  v54 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  v55 = objc_msgSend(v42, "traitCollection");
  objc_msgSend(v54, "scaledValueForValue:compatibleWithTraitCollection:", v55, v53);
  v57 = v56;

  v58 = objc_msgSend(v52, "constraintEqualToConstant:", v57);
  v141 = v43;
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v43[(_QWORD)v42]);
  v59 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressView;
  v60 = *(void **)((char *)v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressView);
  objc_msgSend(v60, "setUserInteractionEnabled:", 0);
  objc_msgSend(v60, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v61 = objc_msgSend(v60, "heightAnchor");
  if (qword_3CF1F0 != -1)
    swift_once(&qword_3CF1F0, sub_92164);
  v62 = *(double *)&qword_3D3518;
  v63 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  v64 = objc_msgSend(v42, "traitCollection");
  objc_msgSend(v63, "scaledValueForValue:compatibleWithTraitCollection:", v64, v62);
  v66 = v65;

  v67 = objc_msgSend(v61, "constraintEqualToConstant:", v66);
  v68 = objc_msgSend(*(id *)((char *)v42 + v59), "leadingAnchor");
  v69 = objc_msgSend(v42, "leadingAnchor");
  if (qword_3CF1F8 != -1)
    swift_once(&qword_3CF1F8, sub_92174);
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:constant:", v69, *(double *)&qword_3D3520);

  v71 = *(void **)((char *)v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressLeadingConstraint);
  v139 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressLeadingConstraint;
  *(_QWORD *)((char *)v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressLeadingConstraint) = v70;

  v72 = objc_msgSend(*(id *)((char *)v42 + v59), "widthAnchor");
  if (qword_3CF200 != -1)
    swift_once(&qword_3CF200, sub_92184);
  v73 = objc_msgSend(v72, "constraintEqualToConstant:", *(double *)&qword_3D3528);

  v74 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressWidthConstraint;
  v75 = *(void **)((char *)v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressWidthConstraint);
  *(_QWORD *)((char *)v42 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressWidthConstraint) = v73;

  v134 = v59;
  objc_msgSend(v42, "addSubview:", *(_QWORD *)((char *)v42 + v59));
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36C8);
  v77 = swift_allocObject(v76, 48, 7);
  *(_OWORD *)(v77 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v77 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v77 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v78 = (_QWORD *)swift_allocObject(&unk_37DB30, 40, 7);
  v79 = v140;
  v78[2] = v140;
  v78[3] = v58;
  v78[4] = v67;
  v80 = v42;
  v81 = v79;
  v140 = (char *)v58;
  v133 = v67;
  v82 = ObjectType;
  v83 = UIView.registerForTraitChanges<A>(_:handler:)(v77, sub_99AE8, v78, ObjectType);
  swift_unknownObjectRelease(v83);

  swift_bridgeObjectRelease(v77);
  swift_release(v78);
  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v84 = v80;
  v85 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v86 = UIView.registerForTraitChanges<A>(_:handler:)(v85, sub_94AC8, 0, v82);
  swift_unknownObjectRelease(v86);

  swift_bridgeObjectRelease(v85);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v88 = swift_allocObject(v87, 104, 7);
  *(_OWORD *)(v88 + 16) = xmmword_2F2740;
  v89 = objc_msgSend(v84, "heightAnchor");
  if (qword_3CF1B8 != -1)
    swift_once(&qword_3CF1B8, sub_920F4);
  v90 = objc_msgSend(v89, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_3D34E0);

  *(_QWORD *)(v88 + 32) = v90;
  v91 = v141;
  v92 = objc_msgSend(*(id *)&v141[(_QWORD)v42], "topAnchor");
  v93 = objc_msgSend(v84, "topAnchor");
  v94 = objc_msgSend(v92, "constraintEqualToAnchor:", v93);

  *(_QWORD *)(v88 + 40) = v94;
  v95 = objc_msgSend(*(id *)&v91[(_QWORD)v42], "bottomAnchor");
  v96 = objc_msgSend(v84, "bottomAnchor");
  v97 = objc_msgSend(v95, "constraintEqualToAnchor:", v96);

  *(_QWORD *)(v88 + 48) = v97;
  *(_QWORD *)(v88 + 56) = v81;
  v98 = v140;
  *(_QWORD *)(v88 + 64) = v140;
  v99 = *(void **)((char *)v42 + v139);
  if (v99)
  {
    *(_QWORD *)(v88 + 72) = v99;
    v100 = *(void **)((char *)v42 + v74);
    if (v100)
    {
      v101 = (void *)objc_opt_self(NSLayoutConstraint);
      v102 = v133;
      *(_QWORD *)(v88 + 80) = v100;
      *(_QWORD *)(v88 + 88) = v102;
      v103 = *(void **)((char *)v42 + v134);
      ObjectType = (objc_class *)v81;
      v141 = v98;
      v104 = v102;
      v105 = v99;
      v106 = v100;
      v107 = objc_msgSend(v103, "centerYAnchor");
      v108 = objc_msgSend(v84, "centerYAnchor");
      v109 = objc_msgSend(v107, "constraintEqualToAnchor:", v108);

      *(_QWORD *)(v88 + 96) = v109;
      *(_QWORD *)&aBlock = v88;
      specialized Array._endMutation()(v110);
      v111 = aBlock;
      sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v101, "activateConstraints:", isa, swift_bridgeObjectRelease(v111).n128_f64[0]);

      v113 = (uint64_t)v135;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56))(v135, 1, 1, v143);
      sub_92598(v113, 1, 0);
      sub_D1D4(v113, &qword_3D3558);
      objc_msgSend(v84, "addTarget:action:forControlEvents:", v84, "trigger", 0x2000);
      sub_E710(0, (unint64_t *)&qword_3D36D0, UIHoverStyle_ptr);
      v114 = v84;
      v115 = v136;
      v116 = static UIHoverEffect<>.lift.getter();
      v117 = v138;
      static UIShape.capsule.getter(v116);
      v118 = type metadata accessor for UIShape(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v117, 0, 1, v118);
      v119 = (void *)UIHoverStyle.init<A>(effect:shape:)(v115, v117, v137, &protocol witness table for UIHoverLiftEffect);
      objc_msgSend(v114, "setHoverStyle:", v119);

      v120 = v144;
      if (v144)
      {
        v121 = (void *)objc_opt_self(UIView);
        v122 = swift_allocObject(&unk_37DB58, 32, 7);
        *(_QWORD *)(v122 + 16) = v120;
        *(_QWORD *)(v122 + 24) = v114;
        v123 = swift_allocObject(&unk_37DB80, 32, 7);
        v124 = sub_99B20;
        *(_QWORD *)(v123 + 16) = sub_99B20;
        *(_QWORD *)(v123 + 24) = v122;
        v148 = sub_43A64;
        v149 = v123;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v147 = sub_920D4;
        *((_QWORD *)&v147 + 1) = &block_descriptor_57;
        v125 = _Block_copy(&aBlock);
        v126 = v149;
        swift_retain_n(v120, 2);
        v127 = v114;
        swift_retain(v123);
        objc_msgSend(v121, "performWithoutAnimation:", v125, swift_release(v126).n128_f64[0]);
        swift_release(v120);
        _Block_release(v125);
        LOBYTE(v125) = swift_isEscapingClosureAtFileLocation(v123, "", 122, 320, 44, 1);
        swift_release(v123);
        if ((v125 & 1) == 0)
        {
LABEL_22:
          aBlock = 0u;
          v147 = 0u;
          memset(v150, 0, sizeof(v150));
          v128 = v114;
          v129 = v130;
          static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x746E6F4379616C70, 0xEC000000736C6F72, &aBlock, v150);
          sub_D1D4((uint64_t)v150, &qword_3D1A70);
          sub_D1D4((uint64_t)&aBlock, &qword_3D1A70);
          UIView.setAutomationSemantics(_:)(v129);

          swift_release(v120);
          (*(void (**)(char *, uint64_t))(v131 + 8))(v129, v132);
          sub_1D618((uint64_t)v124, v122);
          return;
        }
        __break(1u);
      }
      v124 = 0;
      v122 = 0;
      goto LABEL_22;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_94828(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  id v11;
  id v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  id v21;
  id v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  id v28;
  id v29;

  v28 = a4;
  v29 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3CF1E0 != -1)
    swift_once(&qword_3CF1E0, sub_92144);
  v10 = *(double *)&qword_3D3508;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  v12 = objc_msgSend(a1, "traitCollection");
  objc_msgSend(v11, "scaledValueForValue:compatibleWithTraitCollection:", v12, v10);
  v14 = v13;

  objc_msgSend(a3, "setConstant:", v14);
  if (qword_3CF1E8 != -1)
    swift_once(&qword_3CF1E8, sub_92154);
  v15 = *(double *)&qword_3D3510;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  v17 = objc_msgSend(a1, "traitCollection");
  objc_msgSend(v16, "scaledValueForValue:compatibleWithTraitCollection:", v17, v15);
  v19 = v18;

  objc_msgSend(v28, "setConstant:", v19);
  if (qword_3CF1F0 != -1)
    swift_once(&qword_3CF1F0, sub_92164);
  v20 = *(double *)&qword_3D3518;
  v21 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  v22 = objc_msgSend(a1, "traitCollection");
  objc_msgSend(v21, "scaledValueForValue:compatibleWithTraitCollection:", v22, v20);
  v24 = v23;

  objc_msgSend(v29, "setConstant:", v24);
  v26 = type metadata accessor for PlayButtonPresenter.State(0, v25);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 1, v26);
  sub_92598((uint64_t)v9, 1, 0);
  return sub_D1D4((uint64_t)v9, &qword_3D3558);
}

uint64_t sub_94AC8()
{
  return sub_92334();
}

void sub_94B0C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  Swift::String v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __n128 v55;
  char *v56;
  __n128 v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  __n128 v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t ObjectType;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[32];
  _QWORD v93[4];
  __int128 v94;
  __int128 v95;
  void *v96;
  char v97[32];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSLogger(0);
  v83 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionPerformer(0, v6);
  v90 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v89 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for ClickLocationElement(0);
  v87 = *(_QWORD *)(v88 - 8);
  v11 = *(_QWORD *)(v87 + 64);
  __chkstk_darwin(v88);
  v85 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v86 = (char *)&v78 - v13;
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_presenter];
  if (v18)
  {
    v82 = v9;
    v19 = swift_retain(v18);
    v91 = PlayButtonPresenter.triggerAction.getter(v19);
    swift_release(v18);
    v20 = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 0);
    objc_msgSend(v20, "impactOccurred");

    v21 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph];
    swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph], v97, 0, 0);
    v23 = *(_QWORD *)v21;
    if (!*(_QWORD *)v21)
    {
      static OSLogger.actions.getter(v22);
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1190);
      v39 = type metadata accessor for LogMessage(0);
      v40 = swift_allocObject(v38, ((*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v39 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) | 7);
      *(_OWORD *)(v40 + 16) = xmmword_2F03C0;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(43, 1);
      v41._object = (void *)0x800000000030A650;
      v41._countAndFlagsBits = 0xD000000000000012;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      v42 = swift_allocObject(&unk_37DA90, 24, 7);
      *(_QWORD *)(v42 + 16) = v1;
      v43 = swift_allocObject(&unk_37DAB8, 32, 7);
      *(_QWORD *)(v43 + 16) = sub_99934;
      *(_QWORD *)(v43 + 24) = v42;
      *((_QWORD *)&v95 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36A0);
      *(_QWORD *)&v94 = sub_99960;
      *((_QWORD *)&v94 + 1) = v43;
      v44 = v1;
      LogMessage.StringInterpolation.appendInterpolation(sensitive:)(&v94);
      sub_D1D4((uint64_t)&v94, &qword_3D1A70);
      v45._countAndFlagsBits = 0xD000000000000019;
      v45._object = (void *)0x800000000030A670;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      LogMessage.init(stringInterpolation:)(v4);
      Logger.error(_:)(v40, v5, &protocol witness table for OSLogger);
      swift_release(v91);
      v46 = swift_bridgeObjectRelease(v40);
      (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v8, v5, v46);
      return;
    }
    v24 = v91;
    v93[0] = v91;
    v25 = type metadata accessor for Action(0);
    swift_retain(v23);
    swift_retain(v24);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36A8);
    v27 = swift_dynamicCast(&v94, v93, v25, v26, 6);
    v83 = v25;
    if (v27)
    {
      v28 = *((_QWORD *)&v95 + 1);
      v29 = v96;
      __swift_project_boxed_opaque_existential_1(&v94, *((uint64_t *)&v95 + 1));
      v30 = dispatch thunk of PlayEpisodeActionModel.episodeAdamID.getter(v28, v29);
      v32 = v31;
      v33 = __swift_destroy_boxed_opaque_existential_0(&v94);
      if ((v32 & 1) == 0)
      {
        v35 = static MetricsContentKind.episode.getter(v33);
        v80 = v35;
        v37 = v36;
        v79 = v30;
LABEL_9:
        v47 = UUID.init()(v35);
        v48 = UUID.uuidString.getter(v47);
        v81 = v48;
        v50 = v49;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        type metadata accessor for ActionRunnerOptions(0);
        v51 = swift_retain(v23);
        v52 = BaseObjectGraph.__allocating_init(_:)(v51);
        v93[3] = ObjectType;
        v93[0] = v1;
        sub_D184((uint64_t)v93, (uint64_t)v92, &qword_3D1A70);
        v53 = v1;
        ActionOrigin.init(sender:view:)(&v94, v92, v1);
        v54 = ActionRunnerOptions.withActionOrigin(_:)(&v94);
        sub_D1D4((uint64_t)&v94, (uint64_t *)&unk_3D30E0);
        swift_release(v52);
        sub_D1D4((uint64_t)v93, &qword_3D1A70);
        v55 = swift_bridgeObjectRetain(v50);
        v56 = v86;
        static ClickLocationElement.playButton(adamID:uniqueID:parentUniqueID:position:kind:)(v79, v48, v50, 0, 0, 0, v80, v37, v55);
        swift_bridgeObjectRelease(v50);
        v57 = swift_bridgeObjectRelease(v37);
        v58 = v87;
        v59 = v85;
        v60 = v88;
        (*(void (**)(char *, char *, uint64_t, __n128))(v87 + 16))(v85, v56, v88, v57);
        v61 = *(unsigned __int8 *)(v58 + 80);
        v62 = (v61 + 16) & ~v61;
        v63 = swift_allocObject(&unk_37DAE0, v62 + v11, v61 | 7);
        v64.n128_f64[0] = (*(double (**)(uint64_t, char *, uint64_t))(v58 + 32))(v63 + v62, v59, v60);
        v65 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_999F4, v63, v64);
        swift_release(v54);
        v66 = swift_release(v63);
        (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v56, v60, v66);
        *((_QWORD *)&v95 + 1) = v83;
        v96 = (void *)sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        v67 = v91;
        *(_QWORD *)&v94 = v91;
        swift_retain(v91);
        v68 = swift_retain(v65);
        v69 = v89;
        v70 = ActionPerformer.init(_:asPartOf:)(&v94, v65, v68);
        v71 = ActionPerformer.callAsFunction()(v70);
        v72 = (_QWORD *)swift_allocObject(&unk_37DB08, 40, 7);
        v73 = v81;
        v72[2] = v23;
        v72[3] = v73;
        v72[4] = v50;
        v74 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
        v75 = swift_retain(v23);
        v76 = static OS_dispatch_queue.main.getter(v75);
        *((_QWORD *)&v95 + 1) = v74;
        v96 = &protocol witness table for OS_dispatch_queue;
        *(_QWORD *)&v94 = v76;
        Promise.always(on:perform:)(&v94, sub_99A60, v72);
        swift_release(v67);
        swift_release(v23);
        swift_release(v65);
        swift_release(v71);
        swift_release(v72);
        __swift_destroy_boxed_opaque_existential_0(&v94);
        (*(void (**)(char *, uint64_t, __n128))(v90 + 8))(v69, v82, v77);
        return;
      }
    }
    else
    {
      v96 = 0;
      v94 = 0u;
      v95 = 0u;
      sub_D1D4((uint64_t)&v94, &qword_3D36B0);
    }
    v35 = static AdamID.empty.getter(v34);
    v79 = v35;
    v80 = 0;
    v37 = 0;
    goto LABEL_9;
  }
}

id sub_95250(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6;
  id v7;

  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(a4, "actionForLayer:forKey:", a1, v6);

  return v7;
}

_QWORD *sub_952B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ClickLocationTracker(0);
  result = BaseObjectGraph.injectIfAvailable<A>(_:)(&v13, v9, v9);
  v11 = v13;
  if (v13)
  {
    ClickLocationTracker.removeElement(for:)(a3, a4);
    swift_release(v11);
    return (_QWORD *)sub_D1D4((uint64_t)v8, &qword_3D56E0);
  }
  return result;
}

id PlayButton.isHighlighted.getter()
{
  return sub_95490((SEL *)&selRef_isHighlighted);
}

uint64_t PlayButton.isHighlighted.setter(char a1)
{
  return sub_95548(a1, (SEL *)&selRef_setHighlighted_);
}

void (*PlayButton.isHighlighted.modify(objc_super **a1))(objc_super **a1, char a2)
{
  void *v1;
  objc_super *v3;
  uint64_t ObjectType;

  v3 = (objc_super *)malloc(0x48uLL);
  *a1 = v3;
  v3[3].receiver = v1;
  ObjectType = swift_getObjectType();
  v3[3].super_class = (Class)ObjectType;
  v3->receiver = v1;
  v3->super_class = (Class)ObjectType;
  LOBYTE(v3[4].receiver) = -[objc_super isHighlighted](v3, "isHighlighted");
  return sub_95430;
}

void sub_95430(objc_super **a1, char a2)
{
  sub_9560C(a1, a2, (SEL *)&selRef_setHighlighted_);
}

id sub_95448(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v5, *a3);
}

id PlayButton.isEnabled.getter()
{
  return sub_95490((SEL *)&selRef_isEnabled);
}

id sub_95490(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v4, *a1);
}

void sub_954D8(void *a1, uint64_t a2, uint64_t a3, const char **a4)
{
  const char *v6;
  id v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)swift_getObjectType();
  v6 = *a4;
  v7 = v8.receiver;
  objc_msgSendSuper2(&v8, v6, a3);
  sub_92334();

}

uint64_t PlayButton.isEnabled.setter(char a1)
{
  return sub_95548(a1, (SEL *)&selRef_setEnabled_);
}

uint64_t sub_95548(char a1, SEL *a2)
{
  void *v2;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, *a2, a1 & 1);
  return sub_92334();
}

void (*PlayButton.isEnabled.modify(objc_super **a1))(objc_super **a1, char a2)
{
  void *v1;
  objc_super *v3;
  uint64_t ObjectType;

  v3 = (objc_super *)malloc(0x48uLL);
  *a1 = v3;
  v3[3].receiver = v1;
  ObjectType = swift_getObjectType();
  v3[3].super_class = (Class)ObjectType;
  v3->receiver = v1;
  v3->super_class = (Class)ObjectType;
  LOBYTE(v3[4].receiver) = -[objc_super isEnabled](v3, "isEnabled");
  return sub_95600;
}

void sub_95600(objc_super **a1, char a2)
{
  sub_9560C(a1, a2, (SEL *)&selRef_setEnabled_);
}

void sub_9560C(objc_super **a1, char a2, SEL *a3)
{
  objc_super *v4;
  uint64_t receiver_low;
  objc_class *super_class;
  id receiver;
  objc_super *v8;

  v4 = *a1;
  receiver_low = LOBYTE((*a1)[4].receiver);
  receiver = (*a1)[3].receiver;
  super_class = (*a1)[3].super_class;
  v8 = *a1;
  if ((a2 & 1) != 0)
  {
    v8[1].receiver = receiver;
    v8[1].super_class = super_class;
    objc_msgSendSuper2(v8 + 1, *a3, receiver_low);
  }
  else
  {
    v8[2].receiver = receiver;
    v8[2].super_class = super_class;
    objc_msgSendSuper2(v8 + 2, *a3, receiver_low);
    sub_92334();
  }
  free(v4);
}

Swift::Void __swiftcall PlayButton.tintColorDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "tintColorDidChange");
  sub_92334();
}

double PlayButton.intrinsicContentSize.getter()
{
  void *v0;
  double v1;
  double v2;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, "intrinsicContentSize");
  v2 = v1;
  if (qword_3CF1B8 != -1)
    swift_once(&qword_3CF1B8, sub_920F4);
  return v2;
}

uint64_t PlayButton.accessibilityLabel.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v12[24];

  v3 = type metadata accessor for PlayButtonPresenter.State(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState;
  swift_beginAccess(v7, v12, 0, 0);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v9 = PlayButtonPresenter.State.accessibilityLabel.getter(v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

void PlayButton.accessibilityLabel.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  NSString v5;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  if (a2)
  {
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v5 = 0;
  }
  v6.receiver = v2;
  v6.super_class = ObjectType;
  objc_msgSendSuper2(&v6, "setAccessibilityLabel:", v5);

}

void (*PlayButton.accessibilityLabel.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[9] = v1;
  v3[10] = swift_getObjectType();
  v5 = type metadata accessor for PlayButtonPresenter.State(0, v4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v3[11] = v7;
  v8 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState;
  v9 = swift_beginAccess(v8, v3, 0, 0);
  v10 = (*(uint64_t (**)(void *, uint64_t, uint64_t, __n128))(v6 + 16))(v7, v8, v5, v9);
  v11 = PlayButtonPresenter.State.accessibilityLabel.getter(v10);
  v13 = v12;
  (*(void (**)(void *, uint64_t))(v6 + 8))(v7, v5);
  v3[3] = v11;
  v3[4] = v13;
  return sub_95B98;
}

void sub_95B98(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  NSString v5;
  void *v6;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 32);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(*a1 + 32));
      v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v4 = 0;
    }
    v6 = *(void **)(v2 + 88);
    *(_OWORD *)(v2 + 40) = *(_OWORD *)(v2 + 72);
    objc_msgSendSuper2((objc_super *)(v2 + 40), "setAccessibilityLabel:", v4);

    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 32));
  }
  else
  {
    if (v3)
    {
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v5 = 0;
    }
    v6 = *(void **)(v2 + 88);
    *(_OWORD *)(v2 + 56) = *(_OWORD *)(v2 + 72);
    objc_msgSendSuper2((objc_super *)(v2 + 56), "setAccessibilityLabel:", v5);

  }
  free(v6);
  free((void *)v2);
}

uint64_t PlayButton.objectGraph.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph, v3, 0, 0);
  return swift_retain(*v1);
}

id MacButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

void PlayButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.PlayButton", 34, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t PlayButton.updateState(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = type metadata accessor for PlayButtonPresenter.State(0, a2);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v7 + 16))(v6, a1, v4);
  return sub_9365C(v6);
}

void sub_95EC4(char a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  __int16 v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  char v50;
  void *v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  id v56;
  char *v57;
  void *v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unsigned int *v65;
  unsigned int *v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  id v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  char *v73;
  char v74;
  void *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE v82[24];
  char v83[24];
  char v84[24];

  v6 = type metadata accessor for WaveformState(0);
  v80 = *(_QWORD *)(v6 - 8);
  v81 = v6;
  v7 = __chkstk_darwin(v6);
  v78 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v79 = (char *)&v77 - v9;
  v11 = type metadata accessor for PlayButtonPresenter.State(0, v10);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v77 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v77 - v22;
  sub_D184(a3, (uint64_t)&v77 - v22, &qword_3D3558);
  if ((a1 & 1) == 0)
  {
    v24 = &a2[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState];
    v25 = swift_beginAccess(&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState], v84, 0, 0);
    v26 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v12 + 16))(v17, v24, v11, v25);
    v27 = PlayButtonPresenter.State.icon.getter(v26);
    v28 = *(void (**)(char *, uint64_t))(v12 + 8);
    v28(v17, v11);
    sub_D184((uint64_t)v23, (uint64_t)v21, &qword_3D3558);
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v21, 1, v11);
    if ((_DWORD)v29 != 1)
    {
      v55 = PlayButtonPresenter.State.icon.getter(v29);
      v28(v21, v11);
      LOBYTE(v55) = static PlayButtonPresenter.State.Icon.== infix(_:_:)(v27, v55);
      sub_D1D4((uint64_t)v23, &qword_3D3558);
      if ((v55 & 1) != 0)
        return;
      goto LABEL_5;
    }
    sub_D1D4((uint64_t)v21, &qword_3D3558);
  }
  sub_D1D4((uint64_t)v23, &qword_3D3558);
LABEL_5:
  v30 = a2;
  v31 = &a2[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState];
  v32 = swift_beginAccess(&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState], v83, 0, 0);
  v33 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v12 + 16))(v15, v31, v11, v32);
  v34 = PlayButtonPresenter.State.icon.getter(v33);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if (v34 < 0)
  {
    v52 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_waveformView;
    v53 = *(void **)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_waveformView];
    if (v53)
    {
      v54 = *(char **)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_waveformView];
    }
    else
    {
      v59 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WaveformIndicatorView(0)), "init");
      v60 = *(void **)&a2[v52];
      *(_QWORD *)&a2[v52] = v59;
      v54 = (char *)v59;

    }
    v62 = v80;
    v61 = v81;
    v63 = v78;
    if ((v34 & 1) != 0)
    {
      v66 = (unsigned int *)&enum case for WaveformState.buffering(_:);
    }
    else
    {
      v64 = type metadata accessor for WaveformState.SamplingMode(0);
      v65 = (unsigned int *)&enum case for WaveformState.SamplingMode.live(_:);
      if ((v34 & 0x100) != 0)
        v65 = (unsigned int *)&enum case for WaveformState.SamplingMode.unavailable(_:);
      (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v64 - 8) + 104))(v63, *v65, v64);
      v66 = (unsigned int *)&enum case for WaveformState.playing(_:);
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v63, *v66, v61);
    v67 = &v54[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_state];
    swift_beginAccess(&v54[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_state], v82, 33, 0);
    v68 = *(void (**)(char *, char *, uint64_t))(v62 + 24);
    v69 = v53;
    v68(v67, v63, v61);
    swift_endAccess(v82);
    sub_211F90();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v61);
    v70 = *(_QWORD *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_symbolSwapView];
    v71 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D868SwapView_view;
    v72 = *(void **)(v70 + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D868SwapView_view);
    if (v72)
    {
      sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
      v73 = v54;
      v49 = v72;
      v74 = static NSObject.== infix(_:_:)(v73, v49);

      v75 = *(void **)(v70 + v71);
      if ((v74 & 1) == 0 && v75)
      {
        objc_msgSend(*(id *)(v70 + v71), "removeFromSuperview");
        v75 = *(void **)(v70 + v71);
      }
    }
    else
    {
      v76 = v54;
      v49 = 0;
      v75 = 0;
    }
    *(_QWORD *)(v70 + v71) = v54;
    v57 = v54;

    v58 = v72;
  }
  else
  {
    v35 = *(char **)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_waveformView];
    if (v35)
    {
      v37 = v79;
      v36 = v80;
      v38 = v81;
      (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v79, enum case for WaveformState.hidden(_:), v81);
      v39 = &v35[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_state];
      swift_beginAccess(&v35[OBJC_IVAR____TtC23ShelfKitCollectionViews21WaveformIndicatorView_state], v82, 33, 0);
      v40 = *(void (**)(char *, char *, uint64_t))(v36 + 24);
      v41 = v35;
      v40(v39, v37, v38);
      swift_endAccess(v82);
      sub_211F90();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);

    }
    v42 = objc_msgSend(v30, "traitCollection");
    v43 = (void *)PlayButtonPresenter.State.Symbol.image(traits:)((UITraitCollection)v42);

    v44 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v43);
    objc_msgSend(v44, "setMaximumContentSizeCategory:", UIContentSizeCategoryExtraExtraExtraLarge);
    v45 = *(_QWORD *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_symbolSwapView];
    v46 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D868SwapView_view;
    v47 = *(void **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D868SwapView_view);
    if (v47)
    {
      sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
      v48 = v44;
      v49 = v47;
      v50 = static NSObject.== infix(_:_:)(v48, v49);

      v51 = *(void **)(v45 + v46);
      if ((v50 & 1) == 0)
      {
        if (v51)
        {
          objc_msgSend(*(id *)(v45 + v46), "removeFromSuperview");
          v51 = *(void **)(v45 + v46);
        }
      }
    }
    else
    {
      v56 = v44;
      v49 = 0;
      v51 = 0;
    }
    *(_QWORD *)(v45 + v46) = v44;
    v57 = (char *)v44;

    v58 = v47;
  }
  sub_97C9C(v58);

}

id sub_964D0(int a1, char *a2, uint64_t a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  int v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  float v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  void *v46;
  char *v47;
  __n128 v48;
  char *v49;
  uint64_t v50;
  float v51;
  uint64_t KeyPath;
  uint64_t v53;
  id result;
  float v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  char *v60;
  uint64_t v61;
  int v62;
  float v63;
  char v64[24];
  char v65[24];
  char v66[24];

  v62 = a4;
  v60 = a2;
  v6 = type metadata accessor for PlayButtonPresenter.State(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v58 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v57 = (char *)&v56 - v11;
  __chkstk_darwin(v10);
  v13 = (char *)&v56 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v56 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v56 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v56 - v24;
  v61 = a3;
  sub_D184(a3, (uint64_t)&v56 - v24, &qword_3D3558);
  v26 = &unk_3D3000;
  v59 = a1;
  if ((a1 & 1) != 0)
  {
    v23 = v25;
    v27 = v60;
LABEL_5:
    v34 = sub_D1D4((uint64_t)v23, &qword_3D3558);
    goto LABEL_6;
  }
  v27 = v60;
  v28 = &v60[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState];
  v29 = swift_beginAccess(&v60[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState], v66, 0, 0);
  v30 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v13, v28, v6, v29);
  v31 = PlayButtonPresenter.State.showingProgress.getter(v30);
  v32 = *(void (**)(char *, uint64_t))(v7 + 8);
  v32(v13, v6);
  sub_D184((uint64_t)v25, (uint64_t)v23, &qword_3D3558);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v23, 1, v6);
  if ((_DWORD)v33 == 1)
  {
    sub_D1D4((uint64_t)v25, &qword_3D3558);
    v26 = (_QWORD *)&unk_3D3000;
    goto LABEL_5;
  }
  v36 = PlayButtonPresenter.State.showingProgress.getter(v33);
  sub_D1D4((uint64_t)v25, &qword_3D3558);
  v34 = ((uint64_t (*)(char *, uint64_t))v32)(v23, v6);
  v26 = &unk_3D3000;
  if (((v36 ^ v31) & 1) == 0)
  {
    sub_D184(v61, (uint64_t)v20, &qword_3D3558);
    goto LABEL_10;
  }
LABEL_6:
  sub_9690C(v34, v35);
  sub_D184(v61, (uint64_t)v20, &qword_3D3558);
  if ((v59 & 1) != 0)
  {
    v17 = v20;
LABEL_12:
    sub_D1D4((uint64_t)v17, &qword_3D3558);
    v44 = &unk_3D3000;
LABEL_13:
    v45 = v26;
    v46 = *(void **)&v27[v44[176]];
    v47 = &v27[v45[172]];
    v48 = swift_beginAccess(v47, v64, 0, 0);
    v49 = v58;
    v50 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v58, v47, v6, v48);
    v51 = PlayButtonPresenter.State.progress.getter(v50);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v49, v6);
    KeyPath = swift_getKeyPath(&unk_2F2910);
    v53 = swift_getKeyPath(&unk_2F2938);
    v63 = v51;
    result = (id)static UIView.Invalidating.subscript.setter(&v63, v46, KeyPath, v53);
    goto LABEL_14;
  }
LABEL_10:
  v37 = &v27[v26[172]];
  v38 = swift_beginAccess(v37, v65, 0, 0);
  v39 = v57;
  v40 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v57, v37, v6, v38);
  v41 = PlayButtonPresenter.State.progress.getter(v40);
  v42 = *(void (**)(char *, uint64_t))(v7 + 8);
  v42(v39, v6);
  sub_D184((uint64_t)v20, (uint64_t)v17, &qword_3D3558);
  v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v17, 1, v6);
  if ((_DWORD)v43 == 1)
  {
    sub_D1D4((uint64_t)v20, &qword_3D3558);
    goto LABEL_12;
  }
  v55 = PlayButtonPresenter.State.progress.getter(v43);
  sub_D1D4((uint64_t)v20, &qword_3D3558);
  result = (id)((uint64_t (*)(char *, uint64_t))v42)(v17, v6);
  v44 = (_QWORD *)&unk_3D3000;
  if (v41 != v55)
    goto LABEL_13;
LABEL_14:
  if ((v62 & 1) != 0)
  {
    objc_msgSend(*(id *)&v27[v44[176]], "layoutIfNeeded");
    return objc_msgSend(v27, "layoutIfNeeded");
  }
  return result;
}

void sub_9690C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  UIFontTextStyle v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  double v22;
  double v23;
  void *v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  uint64_t v29;
  id v30;
  double v31;
  id v32;
  id v33;
  double v34;
  char v36[24];

  v3 = v2;
  v4 = type metadata accessor for PlayButtonPresenter.State(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState];
  v9 = swift_beginAccess(v8, v36, 0, 0);
  v10 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v9);
  v11 = PlayButtonPresenter.State.showingProgress.getter(v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressLeadingConstraint];
  if (!v12)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  if ((v11 & 1) != 0)
  {
    v13 = qword_3CF208;
    v14 = v12;
    if (v13 != -1)
      swift_once(&qword_3CF208, sub_92194);
    v15 = qword_3D3530;
    v16 = UIFontTextStyleBody;
    v17 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
    v18 = objc_msgSend(v3, "traitCollection");
  }
  else
  {
    v19 = qword_3CF1F8;
    v20 = v12;
    if (v19 != -1)
      swift_once(&qword_3CF1F8, sub_92174);
    v15 = qword_3D3520;
    v16 = UIFontTextStyleBody;
    v17 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
    v18 = objc_msgSend(v3, "traitCollection");
  }
  v21 = v18;
  objc_msgSend(v17, "scaledValueForValue:compatibleWithTraitCollection:", v21, *(double *)&v15);
  v23 = v22;

  objc_msgSend(v12, "setConstant:", v23);
  v24 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressWidthConstraint];
  if (!v24)
    goto LABEL_19;
  if ((v11 & 1) != 0)
  {
    v25 = qword_3CF210;
    v26 = v24;
    if (v25 != -1)
      swift_once(&qword_3CF210, sub_921DC);
    v27 = *(double *)&qword_3D3538;
    v28 = 1.0;
  }
  else
  {
    v29 = qword_3CF200;
    v30 = v24;
    if (v29 != -1)
      swift_once(&qword_3CF200, sub_92184);
    v31 = *(double *)&qword_3D3528;
    v32 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", v16);
    v33 = objc_msgSend(v3, "traitCollection");
    objc_msgSend(v32, "scaledValueForValue:compatibleWithTraitCollection:", v33, v31);
    v27 = v34;

    v28 = 0.0;
  }
  objc_msgSend(v24, "setConstant:", v27);

  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressView], "setAlpha:", v28);
}

void sub_96C34(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_96D58();
  v7 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  UIButton.configuration.setter(v6);
  v8 = objc_msgSend(a1, "superview");
  objc_msgSend(v8, "invalidateIntrinsicContentSize");

  v9 = objc_msgSend(a1, "superview");
  objc_msgSend(v9, "setNeedsLayout");

  if ((a2 & 1) != 0)
  {
    objc_msgSend(a1, "layoutIfNeeded");
    v10 = objc_msgSend(a1, "superview");
    objc_msgSend(v10, "layoutIfNeeded");

  }
}

uint64_t sub_96D58()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  char *v21;
  __n128 v22;
  uint64_t (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  double v25;
  UIFontTextStyle v26;
  id v27;
  id v28;
  double v29;
  double v30;
  double v31;
  id v32;
  id v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  id v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  id v46;
  double v47;
  double v48;
  double v49;
  id v50;
  id v51;
  double v52;
  double v53;
  double v54;
  id v55;
  id v56;
  double v57;
  double v58;
  double v59;
  id v60;
  id v61;
  double v62;
  double v63;
  double v64;
  id v65;
  id v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t (*v82)(char *, char *, uint64_t);
  char *v83;
  char v84[24];
  char v85[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36F0);
  __chkstk_darwin(v2);
  v83 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PlayButtonPresenter.State(0, v4);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.gray()(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v9);
  UIButton.Configuration.cornerStyle.setter(v13);
  v14 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme], v85, 0, 0);
  LOBYTE(v13) = *v14;
  v15 = (void *)objc_opt_self(UIColor);
  v16 = v15;
  if ((v13 & 1) != 0)
  {
    v17 = objc_msgSend(v15, "whiteColor");
    v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.95);
  }
  else
  {
    v19 = objc_msgSend(v15, "systemGray6Color");
    v17 = objc_msgSend(v16, "systemGray5Color");
    _sSo7UIColorC23ShelfKitCollectionViewsE12dynamicColor7default4darkA2B_ABtFZ_0(v19, v17);
    v18 = v20;

  }
  UIButton.Configuration.baseBackgroundColor.setter(v18);
  v21 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState];
  v22 = swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_buttonState], v84, 0, 0);
  v23 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
  v80 = v21;
  v82 = v23;
  v24 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v23)(v8, v21, v5, v22);
  LOBYTE(v21) = PlayButtonPresenter.State.showingProgress.getter(v24);
  v81 = *(void (**)(char *, uint64_t))(v6 + 8);
  v81(v8, v5);
  v79 = v5;
  if ((v21 & 1) != 0)
  {
    if (qword_3CF208 != -1)
      swift_once(&qword_3CF208, sub_92194);
    v25 = *(double *)&qword_3D3530;
    v26 = UIFontTextStyleBody;
    v27 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
    v28 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v27, "scaledValueForValue:compatibleWithTraitCollection:", v28, v25);
    v30 = v29;

    if (qword_3CF220 != -1)
      swift_once(&qword_3CF220, sub_921FC);
    v31 = *(double *)&qword_3D3548;
    v32 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
    v33 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v32, "scaledValueForValue:compatibleWithTraitCollection:", v33, v31);
    v35 = v34;

    v36 = v30 + v35;
    if (qword_3CF210 != -1)
      swift_once(&qword_3CF210, sub_921DC);
    v37 = v36 + *(double *)&qword_3D3538;
    if (qword_3CF218 != -1)
      swift_once(&qword_3CF218, sub_921EC);
    v38 = *(double *)&qword_3D3540;
    v39 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
    v40 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v39, "scaledValueForValue:compatibleWithTraitCollection:", v40, v38);
    v42 = v41;

    v43 = v37 + v42;
  }
  else
  {
    if (qword_3CF1D8 != -1)
      swift_once(&qword_3CF1D8, sub_92134);
    v44 = *(double *)&qword_3D3500;
    v26 = UIFontTextStyleBody;
    v45 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
    v46 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v45, "scaledValueForValue:compatibleWithTraitCollection:", v46, v44);
    v48 = v47;

    if (qword_3CF220 != -1)
      swift_once(&qword_3CF220, sub_921FC);
    v49 = *(double *)&qword_3D3548;
    v50 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
    v51 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v50, "scaledValueForValue:compatibleWithTraitCollection:", v51, v49);
    v53 = v52;

    v43 = v48 + v53;
  }
  if (qword_3CF1C0 != -1)
    swift_once(&qword_3CF1C0, sub_92104);
  v54 = *(double *)&qword_3D34E8;
  v55 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", v26);
  v56 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v55, "scaledValueForValue:compatibleWithTraitCollection:", v56, v54);
  v58 = v57;

  if (qword_3CF1C8 != -1)
    swift_once(&qword_3CF1C8, sub_92114);
  v59 = *(double *)&qword_3D34F0;
  v60 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", v26);
  v61 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v60, "scaledValueForValue:compatibleWithTraitCollection:", v61, v59);
  v63 = v62;

  if (qword_3CF1D0 != -1)
    swift_once(&qword_3CF1D0, sub_92124);
  v64 = *(double *)&qword_3D34F8;
  v65 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", v26);
  v66 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v65, "scaledValueForValue:compatibleWithTraitCollection:", v66, v64);
  v68 = v67;

  UIButton.Configuration.contentInsets.setter(v58, v43, v63, v68);
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v1, "tintColor"));
  v69 = v79;
  v70 = v82(v8, v80, v79);
  v71 = PlayButtonPresenter.State.text.getter(v70);
  v73 = v72;
  v81(v8, v69);
  UIButton.Configuration.title.setter(v71, v73);
  UIButton.Configuration.titleLineBreakMode.setter(4);
  v74 = swift_allocObject(&unk_37DDD8, 24, 7);
  swift_unknownObjectWeakInit(v74 + 16, v1);
  v75 = v83;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_99E10, v74);
  v76 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 0, 1, v76);
  return UIButton.Configuration.titleTextAttributesTransformer.setter(v75);
}

uint64_t sub_97534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3558);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlayButtonPresenter.State(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v22 - v13;
  sub_D184(a1, (uint64_t)v6, &qword_3D3558);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_D1D4((uint64_t)v6, &qword_3D3558);
  }
  else
  {
    v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v14, v6, v8);
    v16 = PlayButtonPresenter.State.showingProgress.getter(v15);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v2, v8);
    if ((v16 & 1) == 0)
    {
      v19 = PlayButtonPresenter.State.showingProgress.getter(v17);
      v20 = *(void (**)(char *, uint64_t))(v9 + 8);
      v20(v12, v8);
      v20(v14, v8);
      return v19 & 1;
    }
    v18 = *(void (**)(char *, uint64_t))(v9 + 8);
    v18(v12, v8);
    v18(v14, v8);
  }
  v19 = 0;
  return v19 & 1;
}

uint64_t sub_976C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void **aBlock;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  uint64_t (*v24)();
  uint64_t v25;

  v11 = (void *)objc_opt_self(UIView);
  v12 = swift_allocObject(&unk_37DCE8, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  v24 = sub_43A64;
  v25 = v12;
  aBlock = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_24360;
  v23 = &block_descriptor_84;
  v13 = _Block_copy(&aBlock);
  v14 = v25;
  swift_retain(a3);
  swift_release(v14);
  objc_msgSend(v11, "transitionWithView:duration:options:animations:completion:", a1, 5242914, v13, 0, 0.1);
  _Block_release(v13);
  v15 = swift_allocObject(&unk_37DD38, 32, 7);
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  v24 = sub_43920;
  v25 = v15;
  aBlock = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_24360;
  v23 = &block_descriptor_90;
  v16 = _Block_copy(&aBlock);
  v17 = v25;
  swift_retain(a5);
  swift_release(v17);
  objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 550, v16, 0, 0.15, 0.02);
  _Block_release(v16);
  return a6();
}

uint64_t sub_97878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t))
{
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[5];
  uint64_t v18;

  v11 = (void *)objc_opt_self(UIView);
  v12 = swift_allocObject(&unk_37DD88, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  v17[4] = sub_43A64;
  v18 = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_24360;
  v17[3] = &block_descriptor_96;
  v13 = _Block_copy(v17);
  v14 = v18;
  swift_retain(a3);
  swift_release(v14);
  objc_msgSend(v11, "transitionWithView:duration:options:animations:completion:", a1, 5242914, v13, 0, 0.1);
  _Block_release(v13);
  v15 = a4();
  return a6(v15);
}

void sub_97994(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *Strong;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t KeyPath;
  id v22;
  _QWORD v23[3];
  _BYTE v24[24];

  v5 = a2 + 16;
  v6 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  KeyPath = swift_getKeyPath(&unk_2F29A8);
  v7 = swift_getKeyPath(&unk_2F29D8);
  swift_beginAccess(v5, v24, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v9 = Strong;
    v10 = objc_msgSend(Strong, "traitCollection", KeyPath);

  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", UIFontTextStyleFootnote, v10);

  v12 = objc_msgSend(v11, "fontDescriptorWithSymbolicTraits:", 2);
  if (v12)
  {
    v13 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v12, 0.0);

    v23[0] = v13;
    v14 = sub_99E20();
    AttributeContainer.subscript.setter(v23, v7, v14);
    v15 = swift_getKeyPath(&unk_2F2A18);
    __chkstk_darwin(v15);
    v16 = swift_getKeyPath(&unk_2F2A48);
    swift_beginAccess(v5, v23, 0, 0);
    v17 = swift_unknownObjectWeakLoadStrong(v5);
    if (v17)
    {
      v18 = (void *)v17;
      v19 = sub_97BA8();

    }
    else
    {
      v19 = 0;
    }
    v22 = v19;
    v20 = sub_99EA4();
    AttributeContainer.subscript.setter(&v22, v16, v20);
  }
  else
  {
    __break(1u);
  }
}

id sub_97BA8()
{
  void *v0;
  objc_class *ObjectType;
  unsigned int v2;
  id result;
  void *v4;
  id v5;
  objc_super v6;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v7.receiver = v0;
  v7.super_class = ObjectType;
  if ((objc_msgSendSuper2(&v7, "isEnabled") & 1) == 0)
    return objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v6.receiver = v0;
  v6.super_class = ObjectType;
  v2 = objc_msgSendSuper2(&v6, "isHighlighted");
  result = objc_msgSend(v0, "tintColor");
  v4 = result;
  if (v2)
  {
    if (result)
    {
      v5 = objc_msgSend(result, "colorWithAlphaComponent:", 0.5);

      return v5;
    }
    __break(1u);
    goto LABEL_9;
  }
  if (!result)
LABEL_9:
    __break(1u);
  return result;
}

void sub_97C9C(void *a1)
{
  char *v1;
  void *v2;
  void *v3;
  id v5;
  char v6;
  id v7;
  id v8;
  unsigned __int8 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  char isEscapingClosureAtFileLocation;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D868SwapView_view];
  if (v3)
  {
    if (a1)
    {
      sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
      v18 = v3;
      v5 = a1;
      v6 = static NSObject.== infix(_:_:)(v18, v5);

      if ((v6 & 1) != 0)
      {

        return;
      }
    }
    else
    {
      v7 = v3;
    }
    v8 = objc_msgSend(v2, "window");

    if (v8)
      v9 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
    else
      v9 = 0;
    v10 = (void *)objc_opt_self(UIView);
    v11 = swift_allocObject(&unk_37DE40, 33, 7);
    *(_QWORD *)(v11 + 16) = v3;
    *(_QWORD *)(v11 + 24) = v2;
    *(_BYTE *)(v11 + 32) = v9;
    v12 = swift_allocObject(&unk_37DE68, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_99F2C;
    *(_QWORD *)(v12 + 24) = v11;
    aBlock[4] = sub_43A64;
    v20 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_920D4;
    aBlock[3] = &block_descriptor_128;
    v13 = _Block_copy(aBlock);
    v14 = v20;
    v15 = v3;
    v16 = v2;
    swift_retain(v12);
    objc_msgSend(v10, "performWithoutAnimation:", v13, swift_release(v14).n128_f64[0]);

    _Block_release(v13);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 122, 733, 44, 1);
    swift_release(v11);
    swift_release(v12);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_97EC0(void *a1, void *a2, char a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  Class isa;

  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(a2, "addSubview:", a1);
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_2EFC90;
  v9 = objc_msgSend(a1, "centerXAnchor");
  v10 = objc_msgSend(a2, "centerXAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(a1, "centerYAnchor");
  v13 = objc_msgSend(a2, "centerYAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v8 + 40) = v14;
  specialized Array._endMutation()(v15);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  if ((a3 & 1) != 0)
    objc_msgSend(a2, "layoutIfNeeded");
}

float sub_98184()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2F2910);
  v2 = swift_getKeyPath(&unk_2F2938);
  static UIView.Invalidating.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return *(float *)&v4;
}

float sub_981F4@<S0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  float result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2F2910);
  v5 = swift_getKeyPath(&unk_2F2938);
  static UIView.Invalidating.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(float *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_98270(int *a1, void **a2)
{
  int v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  int v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_2F2910);
  v5 = swift_getKeyPath(&unk_2F2938);
  v7 = v2;
  return static UIView.Invalidating.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_982E4()
{
  return sub_9830C((uint64_t)&unk_2F2958, (uint64_t)&unk_2F2980);
}

uint64_t sub_982F8()
{
  return sub_9830C((uint64_t)&unk_2F28C8, (uint64_t)&unk_2F28F0);
}

uint64_t sub_9830C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static UIView.Invalidating.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_98374@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static UIView.Invalidating.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  result = swift_release(v8);
  *a4 = v10;
  return result;
}

uint64_t sub_983EC(void **a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  void *v13;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v13 = v7;
  v11 = v7;
  return static UIView.Invalidating.subscript.setter(&v13, v8, KeyPath, v10);
}

id sub_98458(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  objc_class *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  objc_class *ObjectType;
  objc_super v38;
  uint64_t v39;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3690);
  v36 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UIView.Invalidations.Display(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3698);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D8618SimpleProgressView__progress];
  LODWORD(v39) = 0;
  v21 = v5;
  ((void (*)(void))UIView.Invalidations.Display.init())();
  UIView.Invalidating.init(wrappedValue:_:)(&v39, v15, &type metadata for Float, v13, &protocol witness table for Float, &protocol witness table for UIView.Invalidations.Display);
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  v23 = &v21[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D8618SimpleProgressView__progressTintColor];
  v39 = 0;
  UIView.Invalidations.Display.init()(v22);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3678);
  v25 = sub_99450();
  UIView.Invalidating.init(wrappedValue:_:)(&v39, v15, v24, v13, v25, &protocol witness table for UIView.Invalidations.Display);
  v26 = *(uint64_t (**)(char *, char *, uint64_t))(v36 + 32);
  v27 = v26(v23, v12, v10);
  v28 = &v21[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D8618SimpleProgressView__trackTintColor];
  v39 = 0;
  UIView.Invalidations.Display.init()(v27);
  UIView.Invalidating.init(wrappedValue:_:)(&v39, v15, v24, v13, v25, &protocol witness table for UIView.Invalidations.Display);
  v26(v28, v12, v10);

  v29 = ObjectType;
  v38.receiver = v21;
  v38.super_class = ObjectType;
  v30 = objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v30, "setSemanticContentAttribute:", 1);
  objc_msgSend(v30, "setOpaque:", 0);
  objc_msgSend(v30, "setContentMode:", 3);
  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  v31 = v30;
  v32 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v33 = UIView.registerForTraitChanges<A>(_:handler:)(v32, sub_98D3C, 0, v29);
  swift_unknownObjectRelease(v33);
  swift_bridgeObjectRelease(v32);

  return v31;
}

CGContext *sub_98800(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  CGContext *result;
  double v14;
  uint64_t KeyPath;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  float v22;
  float v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  char *v30;
  uint64_t v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  double v36;
  double Height;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void (*v45)(char *, uint64_t, uint64_t);
  const CGPath *v46;
  void (*v47)(char *, uint64_t);
  CGContextRef v48;
  uint64_t v49;
  id v50;
  id v51;
  CGContextRef v52;
  uint64_t v53;
  void *v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v9 = type metadata accessor for CGPathFillRule(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UIGraphicsGetCurrentContext();
  if (result)
  {
    v52 = result;
    v53 = v10;
    v55.origin.x = a1;
    v55.origin.y = a2;
    v55.size.width = a3;
    v55.size.height = a4;
    v14 = CGRectGetHeight(v55) * 0.5;
    KeyPath = swift_getKeyPath(&unk_2F28C8);
    v16 = swift_getKeyPath(&unk_2F28F0);
    static UIView.Invalidating.subscript.getter(&v54, v4, KeyPath, v16);
    swift_release(KeyPath);
    swift_release(v16);
    v17 = v54;
    if (!v54)
      v17 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray3Color");
    v18 = (void *)objc_opt_self(UIBezierPath);
    v19 = objc_msgSend(v18, "bezierPathWithRoundedRect:cornerRadius:", a1, a2, a3, a4, v14);
    objc_msgSend(v17, "setFill");
    objc_msgSend(v19, "fill");
    v20 = swift_getKeyPath(&unk_2F2910);
    v21 = swift_getKeyPath(&unk_2F2938);
    static UIView.Invalidating.subscript.getter(&v54, v4, v20, v21);
    swift_release(v20);
    swift_release(v21);
    v22 = fminf(*(float *)&v54, 1.0);
    if (*(float *)&v54 < 0.0)
      v23 = 0.0;
    else
      v23 = v22;
    v56.origin.x = a1;
    v56.origin.y = a2;
    v56.size.width = a3;
    v56.size.height = a4;
    v24 = CGRectGetWidth(v56) * v23;
    if (v24 > 2.0)
      v25 = v24;
    else
      v25 = 2.0;
    v26 = swift_getKeyPath(&unk_2F2958);
    v27 = swift_getKeyPath(&unk_2F2980);
    static UIView.Invalidating.subscript.getter(&v54, v4, v26, v27);
    swift_release(v26);
    swift_release(v27);
    v28 = v54;
    if (!v54)
    {
      v28 = objc_msgSend(v4, "tintColor");
      if (!v28)
        v28 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    }
    v29 = v12;
    v30 = (char *)objc_msgSend(v4, "effectiveUserInterfaceLayoutDirection");
    v51 = v17;
    v31 = v9;
    v32 = a1;
    v33 = a2;
    v34 = a3;
    v35 = a4;
    if (v30 == (_BYTE *)&dword_0 + 1)
    {
      v36 = CGRectGetWidth(*(CGRect *)&v32) - v25;
      v57.origin.x = a1;
      v57.origin.y = a2;
      v57.size.width = a3;
      v57.size.height = a4;
      Height = CGRectGetHeight(v57);
    }
    else
    {
      Height = CGRectGetHeight(*(CGRect *)&v32);
      v36 = 0.0;
    }
    v38 = objc_msgSend(v18, "bezierPathWithRect:", v36, 0.0, v25, Height);
    objc_msgSend(v28, "setFill");
    v39 = objc_msgSend(v38, "CGPath");
    v40 = objc_msgSend(v19, "CGPath");
    v50 = v28;
    v41 = v40;
    v42 = enum case for CGPathFillRule.winding(_:);
    v43 = v53;
    v44 = v19;
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 104);
    v45(v29, enum case for CGPathFillRule.winding(_:), v31);
    v46 = (const CGPath *)CGPathRef.intersection(_:using:)(v41, v29);

    v47 = *(void (**)(char *, uint64_t))(v43 + 8);
    v47(v29, v31);
    v48 = v52;
    CGContextAddPath(v52, v46);

    v45(v29, v42, v31);
    CGContextRef.fillPath(using:)(v29);

    return (CGContext *)((uint64_t (*)(char *, uint64_t))v47)(v29, v31);
  }
  return result;
}

id sub_98D3C(void *a1)
{
  return objc_msgSend(a1, "setNeedsDisplay");
}

uint64_t _s23ShelfKitCollectionViews10PlayButtonC8asPartOf4data5themeAC9JetEngine15BaseObjectGraphC_0aB00eF9PresenterC4DataVSgAC5ThemeOtcfC_0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unsigned __int8 v27[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for PlayButtonPresenter.Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  v15 = &v27[-v14 - 8];
  v16 = *a3;
  sub_D184(a2, (uint64_t)v8, (uint64_t *)&unk_3D6D90);
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_D1D4((uint64_t)v8, (uint64_t *)&unk_3D6D90);
    v17 = 0;
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(v12, v15, v9);
    v18 = type metadata accessor for PlayButtonPresenter(0);
    swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
    v19 = swift_retain(a1);
    v17 = PlayButtonPresenter.init(data:asPartOf:)(v12, a1, v19);
    (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v15, v9);
  }
  v27[0] = v16;
  v20 = objc_allocWithZone((Class)type metadata accessor for PlayButton(0));
  swift_retain(v17);
  sub_938F4(v27, v17);
  v22 = v21;
  v23 = (uint64_t *)(v21 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph);
  swift_beginAccess(v21 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph, v27, 1, 0);
  v24 = *v23;
  *v23 = a1;
  swift_release(v17);
  swift_release(v24);
  sub_D1D4(a2, (uint64_t *)&unk_3D6D90);
  return v22;
}

unint64_t sub_98F54()
{
  unint64_t result;

  result = qword_3D3568;
  if (!qword_3D3568)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayButton.Theme, &type metadata for PlayButton.Theme);
    atomic_store(result, (unint64_t *)&qword_3D3568);
  }
  return result;
}

uint64_t sub_98F98@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_theme);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

void sub_98FE8(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  PlayButton.theme.setter(&v1);
}

uint64_t sub_9901C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_data;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_D184(v3, a2, (uint64_t *)&unk_3D6D90);
}

uint64_t sub_9907C()
{
  return type metadata accessor for PlayButton(0);
}

uint64_t type metadata accessor for PlayButton(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D35D0, (uint64_t)&nominal type descriptor for PlayButton);
}

void sub_99098(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[11];

  v6[0] = &unk_2F2858;
  sub_99164(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_2F2870;
    v4 = type metadata accessor for PlayButtonPresenter.State(319, v3);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[6] = &unk_2F2870;
      v6[7] = &unk_2F2870;
      v6[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[9] = &unk_2F2870;
      v6[10] = &unk_2F2870;
      swift_updateClassMetadata2(a1, 256, 11, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for PlayButton(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PlayButton);
}

void sub_99164(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D35E0)
  {
    v2 = type metadata accessor for PlayButtonPresenter.Data(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D35E0);
  }
}

uint64_t storeEnumTagSinglePayload for PlayButton.Theme(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_99204 + 4 * byte_2F2755[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_99238 + 4 * byte_2F2750[v4]))();
}

uint64_t sub_99238(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_99240(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x99248);
  return result;
}

uint64_t sub_99254(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x9925CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_99260(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_99268(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayButton.Theme()
{
  return &type metadata for PlayButton.Theme;
}

uint64_t type metadata accessor for SwapView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D868SwapView);
}

uint64_t sub_992A4()
{
  return type metadata accessor for SimpleProgressView(0);
}

uint64_t type metadata accessor for SimpleProgressView(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D3658, (uint64_t)&nominal type descriptor for SimpleProgressView);
}

void sub_992C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_99348(319);
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(v2 - 8) + 64;
    sub_993C4(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_updateClassMetadata2(a1, 256, 3, &v6, a1 + 80);
    }
  }
}

void sub_99348(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  if (!qword_3D3668)
  {
    v4[0] = &type metadata for Float;
    v4[1] = type metadata accessor for UIView.Invalidations.Display(255);
    v4[2] = &protocol witness table for Float;
    v4[3] = &protocol witness table for UIView.Invalidations.Display;
    v2 = type metadata accessor for UIView.Invalidating(a1, v4);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_3D3668);
  }
}

void sub_993C4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  if (!qword_3D3670)
  {
    v4[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D3678);
    v4[1] = type metadata accessor for UIView.Invalidations.Display(255);
    v4[2] = sub_99450();
    v4[3] = &protocol witness table for UIView.Invalidations.Display;
    v2 = type metadata accessor for UIView.Invalidating(a1, v4);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_3D3670);
  }
}

unint64_t sub_99450()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D3680;
  if (!qword_3D3680)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D3678);
    sub_994B4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_3D3680);
  }
  return result;
}

unint64_t sub_994B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D3688;
  if (!qword_3D3688)
  {
    v1 = sub_E710(255, (unint64_t *)&qword_3E1830, UIColor_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_3D3688);
  }
  return result;
}

uint64_t sub_9950C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_98374(a1, (uint64_t)&unk_2F28C8, (uint64_t)&unk_2F28F0, a2);
}

uint64_t sub_99530(void **a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_983EC(a1, a2, a3, a4, (uint64_t)&unk_2F28C8, (uint64_t)&unk_2F28F0);
}

uint64_t sub_9955C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_98374(a1, (uint64_t)&unk_2F2958, (uint64_t)&unk_2F2980, a2);
}

uint64_t sub_99580(void **a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_983EC(a1, a2, a3, a4, (uint64_t)&unk_2F2958, (uint64_t)&unk_2F2980);
}

void sub_995A4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_data];
  v2 = type metadata accessor for PlayButtonPresenter.Data(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_presenter] = 0;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_symbolSwapView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SwapView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressView;
  v5 = type metadata accessor for SimpleProgressView(0);
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressLeadingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_progressWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_subscriptions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_waveformView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/PlayButton.swift", 40, 2, 371, 0);
  __break(1u);
}

void sub_996FC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3690);
  v20 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIView.Invalidations.Display(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3698);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D8618SimpleProgressView__progress];
  LODWORD(v21) = 0;
  UIView.Invalidations.Display.init()(v12);
  UIView.Invalidating.init(wrappedValue:_:)(&v21, v6, &type metadata for Float, v4, &protocol witness table for Float, &protocol witness table for UIView.Invalidations.Display);
  v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  v14 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D8618SimpleProgressView__progressTintColor];
  v21 = 0;
  UIView.Invalidations.Display.init()(v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3678);
  v16 = sub_99450();
  UIView.Invalidating.init(wrappedValue:_:)(&v21, v6, v15, v4, v16, &protocol witness table for UIView.Invalidations.Display);
  v17 = *(uint64_t (**)(char *, char *, uint64_t))(v20 + 32);
  v18 = v17(v14, v3, v1);
  v19 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_73EE084195E4C536378CD521A3E22D8618SimpleProgressView__trackTintColor];
  v21 = 0;
  UIView.Invalidations.Display.init()(v18);
  UIView.Invalidating.init(wrappedValue:_:)(&v21, v6, v15, v4, v16, &protocol witness table for UIView.Invalidations.Display);
  v17(v19, v3, v1);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/PlayButton.swift", 40, 2, 782, 0);
  __break(1u);
}

id sub_99934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_95250(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_9993C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_99960@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v3 + 16))(*a1, *a2, a2[1]);
  *a3 = result;
  return result;
}

uint64_t sub_99994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ClickLocationElement(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_999F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClickLocationElement(0) - 8) + 80);
  return MetricsFieldsContext.replacingClickLocation(with:)(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_99A34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

_QWORD *sub_99A60(uint64_t a1)
{
  uint64_t *v1;

  return sub_952B4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_99A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_99AB4()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_99AE8(void *a1, uint64_t a2)
{
  void **v2;

  return sub_94828(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_99AF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_99B20()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 24);
  sub_89A0(&qword_3D36D8, type metadata accessor for PlayButton, (uint64_t)&protocol conformance descriptor for PlayButton);
  v2 = swift_unknownObjectRetain(v1);
  return PlayButtonPresenter.delegate.setter(v2);
}

uint64_t sub_99B78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_99B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D3558) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v6 = type metadata accessor for PlayButtonPresenter.State(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_99C28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D3558) - 8) + 80);
  sub_95EC4(*(_BYTE *)(v0 + 16), *(char **)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_99C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D3558) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v6 = type metadata accessor for PlayButtonPresenter.State(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

id sub_99D04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D3558) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_964D0(*(unsigned __int8 *)(v0 + 16), *(char **)(v0 + 24), v0 + v2, *(unsigned __int8 *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_99D48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_99D6C()
{
  uint64_t v0;

  sub_96C34(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_99D7C()
{
  return sub_99DD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_97878);
}

uint64_t objectdestroy_68Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_99DC8()
{
  return sub_99DD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_976C8);
}

uint64_t sub_99DD4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_99DEC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_99E10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_97994(a1, v2, a2);
}

unint64_t sub_99E20()
{
  unint64_t result;

  result = qword_3D36F8;
  if (!qword_3D36F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_3D36F8);
  }
  return result;
}

uint64_t sub_99E68()
{
  return 8;
}

uint64_t sub_99E74(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_99E7C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_99E90(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_99EA4()
{
  unint64_t result;

  result = qword_3D3700;
  if (!qword_3D3700)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.ForegroundColorAttribute, &type metadata for AttributeScopes.UIKitAttributes.ForegroundColorAttribute);
    atomic_store(result, (unint64_t *)&qword_3D3700);
  }
  return result;
}

uint64_t sub_99EEC()
{
  return 8;
}

uint64_t sub_99F00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_99F2C()
{
  uint64_t v0;

  sub_97EC0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_99F38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_99FAC()
{
  return sub_89A0(&qword_3D3710, type metadata accessor for TranscriptSnippetCell, (uint64_t)&unk_2F2AC0);
}

uint64_t type metadata accessor for TranscriptSnippetCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3D3790;
  if (!qword_3D3790)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TranscriptSnippetCell);
  return result;
}

uint64_t sub_9A014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  _OWORD v89[12];
  char v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E88);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1;
  v66 = a1;
  *(_QWORD *)&v91 = TranscriptSnippet.text.getter(v5);
  *((_QWORD *)&v91 + 1) = v9;
  v10 = sub_D254();
  v11 = Text.init<A>(_:)(&v91, &type metadata for String, v10);
  v13 = v12;
  v64 = v14;
  v63 = v15 & 1;
  v65 = type metadata accessor for TranscriptSnippetCell(0);
  v16 = v8 + *(int *)(v65 + 24);
  v17 = enum case for Font.Design.serif (_:);
  v18 = type metadata accessor for Font.Design(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 104))(v7, v17, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
  v20 = static Font.system(_:design:weight:)(v16, v7, 0, 1);
  sub_9A794(v7);
  v21 = v13;
  LOBYTE(v17) = v63;
  v22 = v64;
  v62 = Text.font(_:)(v23);
  v25 = v24;
  LOBYTE(v7) = v26;
  v28 = v27;
  swift_release(v20);
  LOBYTE(v20) = v7 & 1;
  sub_D170(v11, v21, v17);
  swift_bridgeObjectRelease(v22);
  KeyPath = swift_getKeyPath(&unk_2F2BF0);
  v30 = swift_getKeyPath(&unk_2F2C20);
  v31 = v62;
  v79 = v62;
  v80 = v25;
  v81 = v20;
  v82 = v28;
  v83 = 0x3FEB333333333333;
  v32 = v28;
  v84 = KeyPath;
  v85 = 8;
  v86 = 0;
  v87 = v30;
  v88 = 0;
  v33 = *(double *)(v66 + *(int *)(v65 + 20));
  v34 = static Alignment.leading.getter();
  sub_1A1678(0, 1, 0.0, 1, v33, 0, 0, 1, &v91, v36, 0.0, 1, 0.0, 1, v34, v35);
  sub_D170(v31, v25, v20);
  swift_release(v30);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v32);
  v75 = v99;
  v76 = v100;
  v77 = v101;
  v78 = v102;
  v71 = v95;
  v72 = v96;
  v73 = v97;
  v74 = v98;
  v67 = v91;
  v68 = v92;
  v69 = v93;
  v70 = v94;
  v37 = v99;
  v89[8] = v99;
  v89[9] = v100;
  v38 = v101;
  v39 = v101;
  v89[10] = v101;
  v89[11] = v102;
  v40 = v95;
  v41 = v95;
  v89[4] = v95;
  v89[5] = v96;
  v42 = v97;
  v43 = v97;
  v89[6] = v97;
  v89[7] = v98;
  v44 = v91;
  v45 = v91;
  v89[0] = v91;
  v89[1] = v92;
  v89[2] = v93;
  v89[3] = v94;
  v46 = v100;
  v47 = v100;
  *(_OWORD *)(a2 + 128) = v99;
  *(_OWORD *)(a2 + 144) = v46;
  v48 = v78;
  v49 = v78;
  *(_OWORD *)(a2 + 160) = v38;
  *(_OWORD *)(a2 + 176) = v48;
  v50 = v72;
  v51 = v72;
  *(_OWORD *)(a2 + 64) = v40;
  *(_OWORD *)(a2 + 80) = v50;
  v52 = v74;
  v53 = v74;
  *(_OWORD *)(a2 + 96) = v42;
  *(_OWORD *)(a2 + 112) = v52;
  v54 = v68;
  v55 = v69;
  v56 = v68;
  v57 = v69;
  *(_OWORD *)a2 = v44;
  *(_OWORD *)(a2 + 16) = v54;
  v58 = v70;
  v59 = v70;
  *(_OWORD *)(a2 + 32) = v55;
  *(_OWORD *)(a2 + 48) = v58;
  v99 = v37;
  v100 = v47;
  v101 = v39;
  v102 = v49;
  v95 = v41;
  v96 = v51;
  v97 = v43;
  v98 = v53;
  v91 = v45;
  v92 = v56;
  v90 = 1;
  *(_QWORD *)(a2 + 192) = 0;
  *(_BYTE *)(a2 + 200) = 1;
  v93 = v57;
  v94 = v59;
  sub_9A894((uint64_t)v89);
  return sub_9A8F0((uint64_t)&v91);
}

uint64_t sub_9A38C@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[11];
  _OWORD v14[2];
  _BYTE v15[208];
  char v16;
  _QWORD v17[2];
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[29];

  v3 = v2;
  v5 = TranscriptSnippet.text.getter(a2);
  v7 = v6;
  v32[0] = v5;
  v32[1] = v6;
  v8 = sub_2C298();
  v9 = Collection.isNotEmpty.getter(&type metadata for String, v8);
  swift_bridgeObjectRelease(v7);
  if ((v9 & 1) != 0)
  {
    v11 = static VerticalAlignment.center.getter(v10);
    sub_9A014(v3, (uint64_t)v13);
    *(_OWORD *)&v15[151] = v13[9];
    *(_OWORD *)&v15[167] = v13[10];
    *(_OWORD *)&v15[183] = v14[0];
    *(_OWORD *)&v15[192] = *(_OWORD *)((char *)v14 + 9);
    *(_OWORD *)&v15[87] = v13[5];
    *(_OWORD *)&v15[103] = v13[6];
    *(_OWORD *)&v15[119] = v13[7];
    *(_OWORD *)&v15[135] = v13[8];
    *(_OWORD *)&v15[23] = v13[1];
    *(_OWORD *)&v15[39] = v13[2];
    *(_OWORD *)&v15[55] = v13[3];
    *(_OWORD *)&v15[71] = v13[4];
    *(_OWORD *)&v15[7] = v13[0];
    v28 = *(_OWORD *)&v15[144];
    v29 = *(_OWORD *)&v15[160];
    v30 = *(_OWORD *)&v15[176];
    v31 = *(_OWORD *)((char *)v14 + 9);
    v24 = *(_OWORD *)&v15[80];
    v25 = *(_OWORD *)&v15[96];
    v26 = *(_OWORD *)&v15[112];
    v27 = *(_OWORD *)&v15[128];
    v20 = *(_OWORD *)&v15[16];
    v21 = *(_OWORD *)&v15[32];
    v22 = *(_OWORD *)&v15[48];
    v23 = *(_OWORD *)&v15[64];
    v16 = 1;
    v17[0] = v11;
    v17[1] = 0;
    v18 = 1;
    v19 = *(_OWORD *)v15;
    UINavigationBar.overrideBackButtonStyle.setter(v17);
  }
  else
  {
    sub_9A76C((uint64_t)v17);
  }
  sub_D210((uint64_t)v17, (uint64_t)v32, &qword_3D3728);
  return sub_D210((uint64_t)v32, a1, &qword_3D3728);
}

uint64_t sub_9A564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  id v7;
  char *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;

  v6 = (void *)objc_opt_self(UIDevice);
  v7 = objc_msgSend(v6, "currentDevice");
  v8 = (char *)objc_msgSend(v7, "userInterfaceIdiom");

  if (v8 == (_BYTE *)&dword_4 + 1)
    v9 = 520.0;
  else
    v9 = INFINITY;
  v10 = type metadata accessor for TranscriptSnippetCell(0);
  *(double *)(a3 + *(int *)(v10 + 20)) = v9;
  v11 = a3 + *(int *)(v10 + 24);
  v12 = objc_msgSend(v6, "currentDevice");
  v13 = (char *)objc_msgSend(v12, "userInterfaceIdiom");

  v14 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
  v15 = type metadata accessor for Font.TextStyle(0);
  v16 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  if (v13 != (_BYTE *)&dword_4 + 1)
    v16 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v11, *v16, v15);
  v17 = type metadata accessor for TranscriptSnippet(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a3, a2, v17);
}

uint64_t sub_9A6B4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_89A0(&qword_3D3730, type metadata accessor for TranscriptSnippetCell, (uint64_t)&unk_2F2B50);
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

uint64_t sub_9A6F4()
{
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 100.0);
}

uint64_t sub_9A704()
{
  return sub_89A0(&qword_3D3718, type metadata accessor for TranscriptSnippetCell, (uint64_t)&unk_2F2BA0);
}

uint64_t sub_9A730()
{
  return sub_89A0(&qword_3D3720, (uint64_t (*)(uint64_t))&type metadata accessor for TranscriptSnippet, (uint64_t)&protocol conformance descriptor for TranscriptSnippet);
}

uint64_t sub_9A75C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32A7CC, 1);
}

double sub_9A76C(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 224) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_9A794(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_9A7D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_9A804@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_9A834(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_9A860(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_9A894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 64);
  sub_D130(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_9A8F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 64);
  sub_D170(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t *sub_9A94C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for TranscriptSnippet(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_9A9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for TranscriptSnippet(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_9AA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for TranscriptSnippet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_9AADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for TranscriptSnippet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_9AB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for TranscriptSnippet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_9ABE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for TranscriptSnippet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_9AC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9AC78);
}

uint64_t sub_9AC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for TranscriptSnippet(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for Font.TextStyle(0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_9ACEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9ACF8);
}

uint64_t sub_9ACF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for TranscriptSnippet(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for Font.TextStyle(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_9AD74(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for TranscriptSnippet(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.Int64 + 64;
    result = type metadata accessor for Font.TextStyle(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

unint64_t sub_9AE08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D37D0;
  if (!qword_3D37D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D3728);
    sub_9AE6C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_3D37D0);
  }
  return result;
}

unint64_t sub_9AE6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D37D8;
  if (!qword_3D37D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_3D37E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3D37D8);
  }
  return result;
}

void sub_9AEB8(void *a1)
{
  void *v1;
  id v2;

  v2 = objc_msgSend(v1, "imageView");
  objc_msgSend(v2, "setImage:", a1);

}

void *sub_9AF10()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeDelegate);
  v2 = v1;
  return v1;
}

uint64_t sub_9AF3C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, unsigned __int8 *);
  _BYTE v9[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler);
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject(&unk_37E110, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_9E888;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_2C690(v4, v5);
}

uint64_t sub_9AFD0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, char);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject(&unk_37E0E8, 32, 7);
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_9E880;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_2C690(v1, v2);
  sub_9E180((uint64_t)v4, v3, &OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler, (void (*)(void))sub_9E890, (void (*)(uint64_t, uint64_t))sub_9E894, &OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_navigationStackUpdateHandler);
  return sub_1D618((uint64_t)v4, v3);
}

uint64_t sub_9B078()
{
  return sub_9B2A4(&OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler, (void (*)(_QWORD, _QWORD))sub_9E890);
}

uint64_t sub_9B08C(uint64_t a1, uint64_t a2)
{
  sub_9E180(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler, (void (*)(void))sub_9E890, (void (*)(uint64_t, uint64_t))sub_9E894, &OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_navigationStackUpdateHandler);
  return sub_1D618(a1, a2);
}

void (*sub_9B0E0(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_9B138;
}

void sub_9B138(_QWORD *a1, char a2)
{
  sub_9B3CC(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_navigationStackUpdateHandler, (void (*)(void))sub_9E890, (void (*)(uint64_t, uint64_t))sub_9E894);
}

uint64_t sub_9B154@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, _QWORD *);
  _BYTE v9[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler);
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject(&unk_37E0C0, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_9E858;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_2C690(v4, v5);
}

uint64_t sub_9B1E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject(&unk_37E098, 32, 7);
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_9E824;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_2C690(v1, v2);
  sub_9E180((uint64_t)v4, v3, &OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler, (void (*)(void))sub_2C690, (void (*)(uint64_t, uint64_t))sub_1D618, &OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_tabChangeUpdateHandler);
  return sub_1D618((uint64_t)v4, v3);
}

uint64_t sub_9B290()
{
  return sub_9B2A4(&OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler, (void (*)(_QWORD, _QWORD))sub_2C690);
}

uint64_t sub_9B2A4(_QWORD *a1, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (_QWORD *)(v2 + *a1);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t sub_9B304(uint64_t a1, uint64_t a2)
{
  sub_9E180(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler, (void (*)(void))sub_2C690, (void (*)(uint64_t, uint64_t))sub_1D618, &OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_tabChangeUpdateHandler);
  return sub_1D618(a1, a2);
}

void (*sub_9B358(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_9B3B0;
}

void sub_9B3B0(_QWORD *a1, char a2)
{
  sub_9B3CC(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_tabChangeUpdateHandler, (void (*)(void))sub_2C690, (void (*)(uint64_t, uint64_t))sub_1D618);
}

void sub_9B3CC(_QWORD *a1, char a2, _QWORD *a3, void (*a4)(void), void (*a5)(uint64_t, uint64_t))
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v9 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v10 = v9[3];
    v11 = (uint64_t *)(v10 + v9[4]);
    v12 = *v11;
    v13 = v11[1];
    v14 = (uint64_t *)(*(_QWORD *)(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeDelegate)
                    + *a3);
    v15 = *v14;
    v16 = v14[1];
    *v14 = v12;
    v14[1] = v13;
    a4();
    a5(v15, v16);
  }
  free(v9);
}

void sub_9B450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *Strong;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void (*v16)(uint64_t, _QWORD *, __n128);
  uint64_t v17;
  __n128 v18;
  uint64_t v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D37F8);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController);
  v7 = UITabBarController.currentNavigationTab.getter();

  if (v7 != 18)
  {
    v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeDelegate);
    v9 = (void *)swift_unknownObjectUnownedLoadStrong(v5);
    v10 = NavigationTab.metricsPageContext.getter(v7);
    if (v11)
    {
      v12 = v10;
      v13 = v11;
      type metadata accessor for PageContextTracker(0);
      v14 = static PageContextTracker.shared.getter();
      PageContextTracker.push(_:)(v12, v13);
      swift_bridgeObjectRelease(v13);
      swift_release(v14);
    }
    v15 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    sub_3D600(v7);
    StoreTab.Identifier.init(navigationTab:)(v7);
    NSUserDefaults.mostRecentTabIdentifier.setter((uint64_t)v4);

    v16 = *(void (**)(uint64_t, _QWORD *, __n128))(v8
                                                           + OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_tabChangeUpdateHandler);
    if (v16)
    {
      v17 = *(_QWORD *)(v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_tabChangeUpdateHandler + 8);
      v18 = swift_retain(v17);
      v16(v7, _swiftEmptyArrayStorage, v18);
      sub_1D618((uint64_t)v16, v17);
    }

    sub_91F0C(v7);
  }
}

uint64_t UITabBarController.currentNavigationTab.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;

  v1 = objc_msgSend(v0, "selectedIndex");
  if (v1 == (id)NavigationTab.intValue.getter(13))
  {
    v2 = static os_log_type_t.debug.getter();
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
    v4 = swift_allocObject(v3, 72, 7);
    *(_OWORD *)(v4 + 16) = xmmword_2F03C0;
    v5 = objc_msgSend(v0, "selectedIndex");
    *(_QWORD *)(v4 + 56) = &type metadata for Int;
    *(_QWORD *)(v4 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v4 + 32) = v5;
    sub_E710(0, &qword_3D3810, OS_os_log_ptr);
    v6 = (id)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v2, &dword_0, v6, "Requested currentNavigationTab while selectedIndex = %{public}d", 63, 2, v4);
    swift_bridgeObjectRelease(v4);
    v7 = 13;
LABEL_8:

    return v7;
  }
  v8 = objc_msgSend(v0, "selectedViewController");
  if (v8)
  {
    v6 = v8;
    v9 = objc_msgSend(v6, "tabBarItem");
    if (v9)
    {
      v10 = v9;
      v7 = NavigationTab.init(intValue:)(objc_msgSend(v9, "tag"));

    }
    else
    {

      v7 = 18;
    }
    goto LABEL_8;
  }
  return 18;
}

id TabBarFlowController.__allocating_init(tabBarController:loadingNavigationController:asPartOf:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  objc_class *v10;
  id v11;
  id v12;
  __n128 v13;
  id v14;
  id result;
  void *v16;
  id v17;
  uint64_t v18;

  v7 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v8 = (_QWORD *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler);
  v10 = (objc_class *)type metadata accessor for TabChangeDelegate(0);
  *v9 = 0;
  v9[1] = 0;
  v11 = objc_allocWithZone(v10);
  swift_retain(v7);
  v12 = sub_9E240(a3);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeDelegate) = v12;
  swift_unknownObjectUnownedInit(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController, a1, v13);
  objc_msgSend(a1, "setDelegate:", v12);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_loadingNavigationController) = a2;
  v14 = a2;
  result = objc_msgSend(v14, "tabBarItem");
  if (result)
  {
    v16 = result;
    objc_msgSend(result, "setTag:", NavigationTab.intValue.getter(13));

    swift_release(v7);
    v17 = a1;
    v18 = sub_8CBF0((uint64_t)v17, a3);

    swift_release(a3);
    return (id)v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id TabBarFlowController.init(tabBarController:loadingNavigationController:asPartOf:)(void *a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = sub_9E38C(a1, a2, a3);

  return v5;
}

uint64_t sub_9B8D0(void **a1, uint64_t a2)
{
  void *v3;
  uint64_t ObjectType;
  void *v5;
  id v6;
  char v7;
  char v8;

  v3 = *a1;
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ReusableFlowViewController))
    v5 = v3;
  else
    v5 = 0;
  if (!v5)
    return 0;
  v6 = v3;
  FlowNavigationController.reconfigureToShow(destination:)(a2);
  v8 = v7;

  return v8 & 1;
}

void *sub_9B944(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  id v15;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a3);
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v8 = 4;
    while (1)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a3)
         : *(id *)(a3 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v15 = v9;
      v12 = a1(&v15);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v10;
      }
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        return v10;
      }

      ++v8;
      if (v11 == v7)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  return 0;
}

uint64_t sub_9BA64(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController);
  v4 = objc_msgSend(Strong, "selectedViewController");

  if (!v4
    || (v21[0] = v4,
        v5 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr),
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3830),
        (swift_dynamicCast(&v18, v21, v5, v6, 6) & 1) == 0))
  {
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
    return sub_D1D4((uint64_t)&v18, (uint64_t *)&unk_3D3820);
  }
  if (!*((_QWORD *)&v19 + 1))
    return sub_D1D4((uint64_t)&v18, (uint64_t *)&unk_3D3820);
  sub_1B738(&v18, (uint64_t)v21);
  v7 = FlowAnimationBehavior.rawValue.getter(a1);
  v9 = v8;
  v11 = FlowAnimationBehavior.rawValue.getter(1);
  v12 = v10;
  if (v7 == v11 && v9 == v10)
  {
    swift_bridgeObjectRelease_n(v9, 2);
    v13 = 0;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v11, v10, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v12);
    v13 = v15 ^ 1;
  }
  v16 = v22;
  v17 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v17 + 16))(v13 & 1, v16, v17);
  return __swift_destroy_boxed_opaque_existential_0(v21);
}

uint64_t sub_9BBE0(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *Strong;
  id v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  void (*v21)(char *, uint64_t);
  char v22;
  __n128 v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  char *v47;
  void *v48;
  char *v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;

  v54 = a3;
  v55 = a4;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3838);
  __chkstk_darwin(v53);
  v56 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowPresentationContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v52 - v13;
  v57 = v4;
  v15 = v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController);
  v17 = objc_msgSend(Strong, "traitCollection");

  v58 = a1;
  sub_55084((uint64_t)v17, (uint64_t)v14);

  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for FlowPresentationContext.select(_:), v8);
  v18 = sub_89A0((unint64_t *)&unk_3D3840, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext, (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
  dispatch thunk of RawRepresentable.rawValue.getter(&v59, v8, v18);
  dispatch thunk of RawRepresentable.rawValue.getter(&v62, v8, v18);
  v19 = *((_QWORD *)&v59 + 1);
  v20 = v62;
  if (v59 == v62)
  {
    swift_bridgeObjectRelease_n(*((_QWORD *)&v59 + 1), 2);
    v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v11, v8);
LABEL_4:
    v24 = (void *)swift_unknownObjectUnownedLoadStrong(v15);
    v25 = objc_msgSend(v24, "viewControllers");

    if (v25)
    {
      v26 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
      v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

      __chkstk_darwin(v28);
      *(&v52 - 2) = v58;
      v29 = (char *)sub_9B944(sub_9E4D0, (uint64_t)(&v52 - 4), v27);
      swift_bridgeObjectRelease(v27);
      if (v29)
      {
        v30 = (void *)swift_unknownObjectUnownedLoadStrong(v15);
        objc_msgSend(v30, "setSelectedViewController:", v29);
LABEL_23:

        return ((uint64_t (*)(char *, uint64_t))v21)(v14, v8);
      }
    }
    v31 = a2;
    v32 = v15;
    v33 = *(unsigned __int8 *)(v31 + *(int *)(type metadata accessor for FlowPresentationHints(0) + 20));
    v34 = &v56[*(int *)(v53 + 48)];
    *v56 = v33;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v34, v14, v8);
    if (v33)
    {
      v36 = v54;
      v35 = v55;
      if (v33 != 1)
      {
        v21(v34, v8);
LABEL_14:
        v44 = 1;
LABEL_16:
        v45 = v32;
        v29 = sub_5BB78(v58, v36, v35);
        if (v29)
        {
          ObjectType = swift_getObjectType();
          if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ResetsSelectedTab))
            v47 = v29;
          else
            v47 = 0;
          if (v47)
          {
            v48 = (void *)swift_unknownObjectUnownedLoadStrong(v32);
            v49 = v29;
            v50 = objc_msgSend(v48, "selectedIndex");

            v51 = &v47[OBJC_IVAR____TtC23ShelfKitCollectionViews19ErrorViewController_previouslySelectedTab];
            *(_QWORD *)v51 = v50;
            v51[8] = 0;

          }
        }
        v30 = (void *)swift_unknownObjectUnownedLoadStrong(v45);
        objc_msgSend(v30, "setTransientViewController:animated:", v29, v44);
        goto LABEL_23;
      }
    }
    else
    {
      v43 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v34, v8);
      v36 = v54;
      v35 = v55;
      if (v43 == enum case for FlowPresentationContext.presentModal(_:))
        goto LABEL_14;
    }
    sub_D1D4((uint64_t)v56, &qword_3D3838);
    v44 = 0;
    goto LABEL_16;
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, *((_QWORD *)&v59 + 1), v62, *((_QWORD *)&v62 + 1), 0);
  swift_bridgeObjectRelease(v19);
  v23 = swift_bridgeObjectRelease(*((_QWORD *)&v20 + 1));
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  ((void (*)(char *, uint64_t, __n128))v21)(v11, v8, v23);
  if ((v22 & 1) != 0)
    goto LABEL_4;
  v37 = (void *)swift_unknownObjectUnownedLoadStrong(v57 + 16);
  v38 = objc_msgSend(v37, "nextResponder");

  if (v38)
  {
    UIResponder.nearestFlowController.getter((uint64_t)&v59);

    v39 = *((_QWORD *)&v60 + 1);
    if (*((_QWORD *)&v60 + 1))
    {
      v40 = a2;
      v41 = v61;
      __swift_project_boxed_opaque_existential_1(&v59, *((uint64_t *)&v60 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v41 + 32))(v58, v40, v54, v55, v39, v41);
      v21(v14, v8);
      return __swift_destroy_boxed_opaque_existential_0(&v59);
    }
  }
  else
  {
    v61 = 0;
    v59 = 0u;
    v60 = 0u;
  }
  v21(v14, v8);
  return sub_D1D4((uint64_t)&v59, &qword_3D31A0);
}

void sub_9C0DC(uint64_t a1, _QWORD *a2, int a3, int a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  void *Strong;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  char v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void (*v48)(uint64_t, _QWORD *, __n128);
  uint64_t v49;
  __n128 v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  NSArray v56;
  _QWORD *v57;
  void *v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  double v73;
  void *v74;
  void *v75;
  id v76;
  uint64_t ObjectType;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t v91;
  unsigned int *v92;
  __n128 v93;
  uint64_t v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  __n128 v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, _QWORD, __n128);
  uint64_t v111;
  __n128 v112;
  void *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE v119[12];
  int v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _BYTE v130[32];
  char v131[24];
  id v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  _QWORD v136[3];
  uint64_t v137;
  uint64_t v138;

  v8 = v7;
  v121 = a7;
  v120 = a6;
  v126 = a4;
  v129 = a2;
  v125 = type metadata accessor for ActionMetricsBehavior(0);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v12 = &v119[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D37F8);
  __chkstk_darwin(v13);
  v15 = &v119[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController);
  v18 = objc_msgSend(Strong, "viewControllers");
  if (v18)
  {
    v19 = v18;
    v20 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

    if ((unint64_t)v21 >> 62)
    {
      if (v21 < 0)
        v24 = v21;
      else
        v24 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v21);
      v25 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(v21);
      if (v25)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFF8)))
    {
LABEL_4:
      v22 = Strong;
      v23 = sub_9DF34(v21);
      swift_bridgeObjectRelease(v21);

      goto LABEL_11;
    }
    swift_bridgeObjectRelease(v21);
  }

  v23 = _swiftEmptyArrayStorage;
LABEL_11:
  v26 = v23[2];
  swift_bridgeObjectRelease(v23);
  if (!v26)
    return;
  v27 = (void *)swift_unknownObjectUnownedLoadStrong(v16);
  v28 = UITabBarController.currentNavigationTab.getter();

  if (a1 == 11)
  {
    if (v28 == 18)
      a1 = 9;
    else
      a1 = v28;
    sub_91F1C(v28);
    v29 = v129;
  }
  else
  {
    v29 = v129;
    if (a1 == 10)
    {
      if (v28 != 18
        && ((sub_3D600(v28), v30 = static NavigationTab.== infix(_:_:)(v28, 12), sub_91F0C(v28), (v30 & 1) != 0)
         || (sub_3D600(v28), v31 = static NavigationTab.== infix(_:_:)(v28, 13), sub_91F0C(v28), (v31 & 1) != 0)))
      {
        a1 = 9;
      }
      else
      {
        a1 = 11;
      }
    }
    else
    {
      sub_3D600(a1);
    }
  }
  v128 = v16;
  v123 = a3;
  v122 = v28;
  if (!v29)
  {
    v32 = _swiftEmptyArrayStorage;
    goto LABEL_35;
  }
  if (v28 == 18)
  {
    swift_bridgeObjectRetain(v29);
    goto LABEL_29;
  }
  sub_91F1C(v28);
  swift_bridgeObjectRetain(v29);
  sub_3D600(a1);
  v33 = static NavigationTab.== infix(_:_:)(a1, v28);
  sub_91F0C(v28);
  sub_7C28(a1);
  if ((v33 & 1) == 0)
  {
LABEL_29:
    v34 = v29[2];
    if (v34)
    {
      v35 = (uint64_t)(v29 + 4);
      do
      {
        sub_1D5D4(v35, (uint64_t)v136);
        v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
        v38 = type metadata accessor for FlowAction(0, v37);
        if ((swift_dynamicCast(&v133, v136, v36, v38, 6) & 1) != 0)
        {
          v39 = v133;
          dispatch thunk of FlowAction.animationBehavior.setter(1);
          swift_release(v39);
        }
        v35 += 40;
        --v34;
      }
      while (v34);
    }
  }
  v29 = v129;
  swift_bridgeObjectRelease(v129);
  v32 = v29;
LABEL_35:
  v127 = v8;
  v40 = *(_QWORD *)(v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeDelegate);
  v41 = (void *)swift_unknownObjectUnownedLoadStrong(v128);
  swift_bridgeObjectRetain(v29);
  v42 = NavigationTab.metricsPageContext.getter(a1);
  if (v43)
  {
    v44 = v42;
    v45 = v43;
    type metadata accessor for PageContextTracker(0);
    v46 = static PageContextTracker.shared.getter();
    PageContextTracker.push(_:)(v44, v45);
    swift_bridgeObjectRelease(v45);
    swift_release(v46);
  }
  v47 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_3D600(a1);
  StoreTab.Identifier.init(navigationTab:)(a1);
  NSUserDefaults.mostRecentTabIdentifier.setter((uint64_t)v15);

  v48 = *(void (**)(uint64_t, _QWORD *, __n128))(v40
                                                         + OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_tabChangeUpdateHandler);
  if (v48)
  {
    v49 = *(_QWORD *)(v40 + OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_tabChangeUpdateHandler + 8);
    v50 = swift_retain(v49);
    v48(a1, v32, v50);
    sub_1D618((uint64_t)v48, v49);
  }
  swift_bridgeObjectRelease(v32);

  v51 = static NavigationTab.== infix(_:_:)(a1, 13);
  v52 = v127;
  if ((v51 & 1) != 0)
  {
    v53 = v128;
    v54 = (void *)swift_unknownObjectUnownedLoadStrong(v128);
    v55 = *(void **)(v52 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_loadingNavigationController);
    objc_msgSend(v54, "setTransientViewController:animated:", v55, 0);

    sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
    v56.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v55, "setViewControllers:", v56.super.isa);
    v57 = v129;
    goto LABEL_62;
  }
  v53 = v128;
  if ((v126 & 1) != 0)
  {
    v58 = (void *)swift_unknownObjectUnownedLoadStrong(v128);
    v56.super.isa = (Class)objc_msgSend(v58, "transientViewController");

  }
  else
  {
    v56.super.isa = 0;
  }
  v59 = (void *)swift_unknownObjectUnownedLoadStrong(v53);
  objc_msgSend(v59, "setTransientViewController:animated:", 0, 0);

  v60 = (void *)swift_unknownObjectUnownedLoadStrong(v53);
  if (UITabBarController.canSelect(navigationTab:)(a1))
  {
    v61 = objc_msgSend(v60, "transientViewController");
    if (v61)
    {

      objc_msgSend(v60, "setTransientViewController:animated:", 0, 0);
    }
    v62 = objc_msgSend(v60, "viewControllers");
    if (v62)
    {
      v63 = v62;
      v64 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
      v65 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v63, v64);

      if ((unint64_t)v65 >> 62)
      {
        if (v65 < 0)
          v68 = v65;
        else
          v68 = v65 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v65);
        v69 = _CocoaArrayWrapper.endIndex.getter(v68);
        swift_bridgeObjectRelease(v65);
        if (v69)
          goto LABEL_50;
      }
      else if (*(_QWORD *)((char *)&dword_10 + (v65 & 0xFFFFFFFFFFFFF8)))
      {
LABEL_50:
        v66 = v60;
        v67 = sub_9DF34(v65);
        swift_bridgeObjectRelease(v65);

        goto LABEL_57;
      }
      swift_bridgeObjectRelease(v65);
    }
    v67 = _swiftEmptyArrayStorage;
LABEL_57:
    sub_3D600(a1);
    v70 = sub_9E0C8((uint64_t)v67, a1);
    v72 = v71;
    sub_7C28(a1);
    *(_QWORD *)&v73 = swift_bridgeObjectRelease(v67).n128_u64[0];
    v53 = v128;
    if ((v72 & 1) == 0)
      objc_msgSend(v60, "setSelectedIndex:", v70, v73);
  }

  v57 = v129;
  if (!v56.super.isa)
    goto LABEL_63;
  if ((v126 & 1) != 0)
  {
    v74 = (void *)swift_unknownObjectUnownedLoadStrong(v53);
    objc_msgSend(v74, "setTransientViewController:animated:", v56.super.isa, 0);

  }
LABEL_62:

LABEL_63:
  v75 = (void *)swift_unknownObjectUnownedLoadStrong(v53);
  v76 = objc_msgSend(v75, "selectedViewController");

  if (!v76)
    goto LABEL_83;
  if (!v57)
  {

    goto LABEL_83;
  }
  ObjectType = swift_getObjectType();
  v78 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ActionRunnerProvider);
  if (v78)
    v79 = v78;
  else
    v79 = 0;
  if (v78)
    v80 = v76;
  else
    v80 = 0;
  if (!v80)
  {
    swift_bridgeObjectRetain(v129);
    v86 = v121;
    v87 = v120;
LABEL_76:
    v88 = type metadata accessor for FlowActionRunner();
    v83 = swift_allocObject(v88, 32, 7);
    v89 = objc_allocWithZone((Class)type metadata accessor for ModelViewOverflowTransitioning(0));
    v90 = v76;
    *(_QWORD *)(v83 + 16) = objc_msgSend(v89, "init");
    v91 = swift_unknownObjectWeakInit(v83 + 24, 0);
    swift_beginAccess(v91, v131, 1, 0);
    swift_unknownObjectWeakAssign(v83 + 24, v90);

    v85 = sub_89A0(&qword_3D31F0, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
    goto LABEL_77;
  }
  v81 = swift_getObjectType();
  swift_bridgeObjectRetain(v129);
  v82 = v76;
  v83 = dispatch thunk of ActionRunnerProvider.actionRunner.getter(v81, v79);
  v85 = v84;

  v86 = v121;
  v87 = v120;
  if (!v83)
    goto LABEL_76;
LABEL_77:
  v92 = (unsigned int *)&enum case for ActionMetricsBehavior.notProcessed(_:);
  if ((v87 & 1) == 0)
    v92 = (unsigned int *)&enum case for ActionMetricsBehavior.fromAction(_:);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v124 + 104))(v12, *v92, v125);
  type metadata accessor for ActionRunnerOptions(0);
  v93 = swift_retain(v86);
  v94 = BaseObjectGraph.__allocating_init(_:)(v93);
  v133 = 0u;
  v134 = 0u;
  v95 = objc_msgSend(v76, "view");
  sub_430E8((uint64_t)&v133, (uint64_t)v130);
  v96 = v95;
  ActionOrigin.init(sender:view:)(v136, v130, v95);
  v97 = ActionRunnerOptions.withActionOrigin(_:)(v136);
  sub_D1D4((uint64_t)v136, (uint64_t *)&unk_3D30E0);
  swift_release(v94);

  sub_D1D4((uint64_t)&v133, &qword_3D1A70);
  v98 = v129[2];
  if (v98)
  {
    v99 = swift_getObjectType();
    v100 = v129 + 4;
    do
    {
      swift_unknownObjectRetain(v83);
      v101 = ActionRunner.perform(_:withMetrics:asPartOf:)(v100, v12, v97, v99, v85);
      swift_unknownObjectRelease(v83);
      swift_release(v101);
      v100 += 5;
      --v98;
    }
    while (v98);
  }

  swift_release(v97);
  swift_bridgeObjectRelease(v129);
  v102 = swift_unknownObjectRelease(v83);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v124 + 8))(v12, v125, v102);
  v53 = v128;
LABEL_83:
  v103 = (void *)swift_unknownObjectUnownedLoadStrong(v53);
  v104 = objc_msgSend(v103, "selectedViewController");

  v105 = v127;
  if (v104)
  {
    v106 = objc_opt_self(UINavigationController);
    v107 = swift_dynamicCastObjCClass(v104, v106);
    if (v107)
    {
      v108 = v107;
      v109 = v105 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler;
      swift_beginAccess(v105 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler, v130, 0, 0);
      v110 = *(void (**)(uint64_t, _QWORD, __n128))v109;
      if (*(_QWORD *)v109)
      {
        v111 = *(_QWORD *)(v109 + 8);
        v112 = swift_retain(v111);
        v110(v108, 0, v112);
        sub_1D618((uint64_t)v110, v111);
      }
    }

  }
  if ((v123 & 1) == 0)
    goto LABEL_95;
  v113 = (void *)swift_unknownObjectUnownedLoadStrong(v53);
  v114 = objc_msgSend(v113, "selectedViewController");

  if (!v114
    || (v132 = v114,
        v115 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr),
        v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3830),
        (swift_dynamicCast(&v133, &v132, v115, v116, 6) & 1) == 0))
  {
    v135 = 0;
    v133 = 0u;
    v134 = 0u;
    goto LABEL_94;
  }
  if (!*((_QWORD *)&v134 + 1))
  {
LABEL_94:
    sub_D1D4((uint64_t)&v133, (uint64_t *)&unk_3D3820);
    goto LABEL_95;
  }
  sub_1B738(&v133, (uint64_t)v136);
  v117 = v137;
  v118 = v138;
  __swift_project_boxed_opaque_existential_1(v136, v137);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 8))(1, v117, v118);
  __swift_destroy_boxed_opaque_existential_0(v136);
LABEL_95:
  sub_9CCB0(v105, a1);
  sub_91F0C(v122);
  sub_7C28(a1);
}

void sub_9CCB0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController);
  v3 = objc_msgSend(Strong, "selectedViewController");
  if (!v3)
  {
LABEL_8:
    v11 = Strong;
LABEL_10:

    return;
  }
  v4 = v3;
  v5 = type metadata accessor for FlowNavigationController();
  v6 = (void *)swift_dynamicCastClass(v4, v5);

  if (!v6)
  {
    v11 = v4;
    goto LABEL_10;
  }
  v7 = objc_msgSend(v6, "view");

  if (v7)
  {
    v8 = objc_msgSend(v7, "window");

    if (v8)
    {
      sub_E710(0, (unint64_t *)&unk_3DFFF0, NSUserActivity_ptr);
      Strong = (id)static NSUserActivity.stateRestorationActivity(for:)(a2);
      v9 = objc_msgSend(v8, "windowScene");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, "setUserActivity:", Strong);

      }
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
}

void UITabBarController.selectTabIfPossible(_:)(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  double v14;

  if (UITabBarController.canSelect(navigationTab:)(a1))
  {
    v3 = objc_msgSend(v1, "transientViewController");
    if (v3)
    {

      objc_msgSend(v1, "setTransientViewController:animated:", 0, 0);
    }
    v4 = objc_msgSend(v1, "viewControllers");
    if (v4)
    {
      v5 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
      v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

      if ((unint64_t)v6 >> 62)
      {
        if (v6 < 0)
          v9 = v6;
        else
          v9 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v6);
        v10 = _CocoaArrayWrapper.endIndex.getter(v9);
        swift_bridgeObjectRelease(v6);
        if (v10)
          goto LABEL_7;
      }
      else if (*(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8)))
      {
LABEL_7:
        v7 = v1;
        v8 = sub_9DF34(v6);
        swift_bridgeObjectRelease(v6);

        goto LABEL_14;
      }
      swift_bridgeObjectRelease(v6);
    }
    v8 = _swiftEmptyArrayStorage;
LABEL_14:
    sub_3D600(a1);
    v11 = sub_9E0C8((uint64_t)v8, a1);
    v13 = v12;
    sub_7C28(a1);
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v8).n128_u64[0];
    if ((v13 & 1) == 0)
      objc_msgSend(v1, "setSelectedIndex:", v11, v14);
  }
}

uint64_t sub_9CF7C()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController);

  sub_1D618(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler + 8));
  return sub_1D618(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler + 8));
}

_QWORD *TabBarFlowController.deinit()
{
  _QWORD *v0;

  v0 = BaseFlowController.deinit();
  swift_unknownObjectUnownedDestroy((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController);
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_loadingNavigationController));

  sub_1D618(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler), *(_QWORD *)((char *)v0+ OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler+ 8));
  sub_1D618(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler + 8));
  return v0;
}

uint64_t TabBarFlowController.__deallocating_deinit()
{
  _QWORD *v0;

  v0 = BaseFlowController.deinit();
  swift_unknownObjectUnownedDestroy((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController);
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_loadingNavigationController));

  sub_1D618(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler), *(_QWORD *)((char *)v0+ OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler+ 8));
  sub_1D618(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

BOOL UITabBarController.canSelect(navigationTab:)(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  _BOOL8 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v3 = objc_msgSend(v1, "viewControllers");
  if (v3)
  {
    v4 = v3;
    v5 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v9 = v6;
      else
        v9 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v10 = _CocoaArrayWrapper.endIndex.getter(v9);
      swift_bridgeObjectRelease(v6);
      if (v10)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8)))
    {
LABEL_4:
      v7 = v1;
      v8 = sub_9DF34(v6);
      swift_bridgeObjectRelease(v6);

      goto LABEL_11;
    }
    swift_bridgeObjectRelease(v6);
  }
  v8 = _swiftEmptyArrayStorage;
LABEL_11:
  sub_3D600(a1);
  v11 = sub_9DDD8((uint64_t)v8, a1);
  sub_7C28(a1);
  swift_bridgeObjectRelease(v8);
  v12 = *(_QWORD *)(v11 + 16);
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v11).n128_u64[0];
  if (v12 == 1)
  {
    v14 = objc_msgSend(v1, "viewControllers", v13);
    if (v14)
    {
      v15 = v14;
      v16 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
      v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

      if ((unint64_t)v17 >> 62)
      {
        if (v17 < 0)
          v21 = v17;
        else
          v21 = v17 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v17);
        v22 = _CocoaArrayWrapper.endIndex.getter(v21);
        swift_bridgeObjectRelease(v17);
        if (v22)
          goto LABEL_15;
      }
      else if (*(_QWORD *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFF8)))
      {
LABEL_15:
        v18 = v1;
        v19 = sub_9DF34(v17);
        swift_bridgeObjectRelease(v17);

LABEL_23:
        sub_3D600(a1);
        sub_9E0C8((uint64_t)v19, a1);
        v20 = (v23 & 1) == 0;
        sub_7C28(a1);
        swift_bridgeObjectRelease(v19);
        return v20;
      }
      swift_bridgeObjectRelease(v17);
    }
    v19 = _swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  return 0;
}

uint64_t sub_9D31C(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  char *v37;
  __n128 v38;
  void (*v39)(char *, uint64_t, __n128);
  uint64_t v40;
  void (*v41)(char *, uint64_t, __n128);
  void *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  char v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  id v82;
  __int128 v83[2];
  uint64_t v84;
  id v85;
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;

  v82 = a1;
  v3 = type metadata accessor for MetricsData(0);
  v81 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v80 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetricsPipeline(0);
  v78 = *(_QWORD *)(v5 - 8);
  v79 = v5;
  __chkstk_darwin(v5);
  v77 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B50);
  v72 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v71 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3100);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for MetricsFieldsContext(0);
  v12 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v65 - v16;
  __chkstk_darwin(v18);
  v74 = (char *)&v65 - v19;
  v20 = a2;
  v21 = objc_msgSend(v20, "tabBarItem");
  if (v21)
  {
    v22 = v21;
    v70 = v17;
    v23 = NavigationTab.init(intValue:)(objc_msgSend(v21, "tag"));

    if (v23 != 18)
    {
      v24 = v23;
      v25 = UITabBarController.currentNavigationTab.getter();
      if (v25 == 18)
      {
        sub_91F0C(v23);
      }
      else
      {
        v26 = v25;
        v66 = type metadata accessor for ClickMetricsEvent(0);
        v68 = v24;
        v27 = NavigationTab.pageContext.getter(v24);
        v69 = v3;
        v29 = v28;
        v30 = objc_msgSend(v82, "selectedIndex");
        v31 = NavigationTab.pageContext.getter(v26);
        v67 = v26;
        v33 = v32;
        v66 = static ClickMetricsEvent.tabClickEvent(named:at:from:)(v27, v29, v30, v31, v32);
        swift_bridgeObjectRelease(v29);
        v34 = swift_bridgeObjectRelease(v33);
        MetricsFieldsContext.init()(v34);
        v35 = type metadata accessor for PageContextTracker(0);
        v86[0] = static PageContextTracker.shared.getter();
        static MetricsFieldsContext.Property<A>.pageContextTracker.getter(v36);
        v37 = v70;
        MetricsFieldsContext.addingValue<A>(_:forProperty:)(v86, v11, v35);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v38 = swift_release(v86[0]);
        v39 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
        v40 = v75;
        v39(v14, v75, v38);
        v41 = v39;
        v65 = (void (*)(char *, uint64_t))v39;
        type metadata accessor for MetricsActivity(0);
        v42 = (void *)static MetricsActivity.shared.getter();
        v43 = MetricsActivity.currentPageFields.getter();

        v86[0] = v43;
        v44 = v71;
        static MetricsFieldsContext.Property<A>.pageFields.getter();
        v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B60);
        v46 = v74;
        MetricsFieldsContext.addingValue<A>(_:forProperty:)(v86, v44, v45);
        (*(void (**)(char *, uint64_t))(v72 + 8))(v44, v73);
        v47 = swift_bridgeObjectRelease(v86[0]);
        v41(v37, v40, v47);
        v48 = v77;
        v50 = v78;
        v49 = v79;
        v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v76 + OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_metricsPipeline, v79);
        v52 = v80;
        v53 = v66;
        dispatch thunk of MetricsEvent.metricsData.getter(v51);
        v54 = MetricsPipeline.process(_:using:)(v52, v46);
        sub_91F0C(v68);
        swift_release(v53);
        swift_release(v54);
        sub_91F0C(v67);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v69);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v49);
        v65(v46, v40);
      }
    }
  }
  else
  {

  }
  v55 = objc_msgSend(v82, "selectedViewController");
  if (v55)
  {
    v56 = v55;
    v57 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
    v58 = v20;
    v59 = static NSObject.== infix(_:_:)(v58, v56);

    if ((v59 & 1) != 0)
    {
      v85 = v58;
      v60 = v58;
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3830);
      if ((swift_dynamicCast(v83, &v85, v57, v61, 6) & 1) != 0)
      {
        sub_1B738(v83, (uint64_t)v86);
        v62 = v87;
        v63 = v88;
        __swift_project_boxed_opaque_existential_1(v86, v87);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 8))(1, v62, v63);
        __swift_destroy_boxed_opaque_existential_0(v86);
      }
      else
      {
        v84 = 0;
        memset(v83, 0, sizeof(v83));
        sub_D1D4((uint64_t)v83, (uint64_t *)&unk_3D3820);
      }
    }
  }
  return 1;
}

id sub_9DA3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TabChangeDelegate(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Void __swiftcall UINavigationController.popToRoot(animated:)(Swift::Bool animated)
{
  void *v1;

}

Swift::Void __swiftcall UINavigationController.pop(animated:)(Swift::Bool animated)
{
  void *v1;

}

void sub_9DB50(char a1)
{
  id *v1;

}

void sub_9DB80(char a1)
{
  id *v1;

}

Swift::Void __swiftcall UITabBarController.popToRoot(animated:)(Swift::Bool animated)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v3 = objc_msgSend(v1, "selectedViewController");
  if (v3
    && (v11[0] = v3,
        v4 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr),
        v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3830),
        (swift_dynamicCast(&v8, v11, v4, v5, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v9 + 1))
    {
      sub_1B738(&v8, (uint64_t)v11);
      v6 = v12;
      v7 = v13;
      __swift_project_boxed_opaque_existential_1(v11, v12);
      (*(void (**)(Swift::Bool, uint64_t, uint64_t))(v7 + 8))(animated, v6, v7);
      __swift_destroy_boxed_opaque_existential_0(v11);
      return;
    }
  }
  else
  {
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
  }
  sub_D1D4((uint64_t)&v8, (uint64_t *)&unk_3D3820);
}

Swift::Void __swiftcall UITabBarController.pop(animated:)(Swift::Bool animated)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v3 = objc_msgSend(v1, "selectedViewController");
  if (v3
    && (v11[0] = v3,
        v4 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr),
        v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3830),
        (swift_dynamicCast(&v8, v11, v4, v5, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v9 + 1))
    {
      sub_1B738(&v8, (uint64_t)v11);
      v6 = v12;
      v7 = v13;
      __swift_project_boxed_opaque_existential_1(v11, v12);
      (*(void (**)(Swift::Bool, uint64_t, uint64_t))(v7 + 16))(animated, v6, v7);
      __swift_destroy_boxed_opaque_existential_0(v11);
      return;
    }
  }
  else
  {
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
  }
  sub_D1D4((uint64_t)&v8, (uint64_t *)&unk_3D3820);
}

void sub_9DD98(Swift::Bool a1)
{
  UITabBarController.popToRoot(animated:)(a1);
}

void sub_9DDB8(Swift::Bool a1)
{
  UITabBarController.pop(animated:)(a1);
}

uint64_t sub_9DDD8(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    v5 = result + 32;
    do
    {
      if (v4 <= v2)
        v6 = v2;
      else
        v6 = v4;
      v7 = v4;
      while (1)
      {
        if (v6 == v7)
        {
          __break(1u);
          return result;
        }
        v8 = *(_QWORD *)(v5 + 8 * v7);
        if (v8 != 18)
          break;
        NavigationTab.intValue.getter(a2);
LABEL_8:
        ++v7;
        result = sub_91F0C(v8);
        if (v2 == v7)
          return (uint64_t)_swiftEmptyArrayStorage;
      }
      sub_3D600(*(_QWORD *)(v5 + 8 * v7));
      v9 = NavigationTab.intValue.getter(v8);
      if (v9 != NavigationTab.intValue.getter(a2))
        goto LABEL_8;
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = sub_F348C(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1)
        result = sub_F348C(v10 > 1, v11 + 1, 1);
      v4 = v7 + 1;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      _swiftEmptyArrayStorage[v11 + 4] = v8;
    }
    while (v2 - 1 != v7);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

_QWORD *sub_9DF34(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_F348C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v6, "tabBarItem");
      if (v7)
      {
        v8 = v7;
        v9 = NavigationTab.init(intValue:)(objc_msgSend(v7, "tag"));

      }
      else
      {
        v9 = 18;
      }

      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1)
        sub_F348C(v10 > 1, v11 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      _swiftEmptyArrayStorage[v11 + 4] = v9;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_9E0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = 0;
  v5 = a1 + 32;
  while (1)
  {
    v6 = *(_QWORD *)(v5 + 8 * v4);
    if (v6 == 18)
    {
      v7 = 0;
    }
    else
    {
      sub_3D600(*(_QWORD *)(v5 + 8 * v4));
      v7 = NavigationTab.intValue.getter(v6);
    }
    v8 = NavigationTab.intValue.getter(a2);
    sub_91F0C(v6);
    if (v6 != 18 && v7 == v8)
      break;
    if (v2 == ++v4)
      return 0;
  }
  return v4;
}

uint64_t sub_9E180(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(void), void (*a5)(uint64_t, uint64_t), _QWORD *a6)
{
  uint64_t v6;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  v12 = (uint64_t *)(v6 + *a3);
  swift_beginAccess(v12, v20, 1, 0);
  v13 = *v12;
  v14 = v12[1];
  *v12 = a1;
  v12[1] = a2;
  ((void (*)(uint64_t, uint64_t))a4)(a1, a2);
  a5(v13, v14);
  v15 = v12[1];
  v16 = (uint64_t *)(*(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeDelegate)
                  + *a6);
  v17 = *v16;
  v18 = v16[1];
  *v16 = *v12;
  v16[1] = v15;
  a4();
  return ((uint64_t (*)(uint64_t, uint64_t))a5)(v17, v18);
}

id sub_9E240(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  __n128 v13;
  objc_class *v14;
  uint64_t v16;
  objc_super v17;
  __int128 v18[2];

  v3 = type metadata accessor for MetricsPipeline(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_navigationItem], 0);
  v7 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_navigationStackUpdateHandler];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_tabChangeUpdateHandler];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B70);
  v10 = type metadata accessor for BaseObjectGraph(0);
  v11 = v1;
  inject<A, B>(_:from:)(v18, v9, a1, v9, v10, v12);
  sub_1B738(v18, (uint64_t)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_storeDataProvider]);
  inject<A, B>(_:from:)(v6, v3, a1, v3, v10, v13);
  (*(void (**)(char *, _QWORD *, uint64_t))(v4 + 32))(&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_metricsPipeline], v6, v3);

  v14 = (objc_class *)type metadata accessor for TabChangeDelegate(0);
  v17.receiver = v11;
  v17.super_class = v14;
  return objc_msgSendSuper2(&v17, "init");
}

id sub_9E38C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  _QWORD *v9;
  objc_class *v10;
  id v11;
  id v12;
  __n128 v13;
  id result;
  void *v15;
  id v16;
  uint64_t v17;

  v4 = v3;
  v8 = (_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_navigationStackUpdateHandler);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeUpdateHandler);
  v10 = (objc_class *)type metadata accessor for TabChangeDelegate(0);
  *v9 = 0;
  v9[1] = 0;
  v11 = objc_allocWithZone(v10);
  swift_retain(v4);
  v12 = sub_9E240(a3);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabChangeDelegate) = v12;
  swift_unknownObjectUnownedInit(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_tabBarController, a1, v13);
  objc_msgSend(a1, "setDelegate:", v12);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews20TabBarFlowController_loadingNavigationController) = a2;
  result = objc_msgSend(a2, "tabBarItem");
  if (result)
  {
    v15 = result;
    objc_msgSend(result, "setTag:", NavigationTab.intValue.getter(13));

    swift_release(v4);
    v16 = a1;
    v17 = sub_8CBF0((uint64_t)v16, a3);

    swift_release(a3);
    return (id)v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for TabChangeDelegate(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D3B40, (uint64_t)&nominal type descriptor for TabChangeDelegate);
}

uint64_t sub_9E4D0(void **a1)
{
  uint64_t v1;

  return sub_9B8D0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_9E4FC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_9E520(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 16))(a1, a2 & 1);
}

uint64_t sub_9E52C()
{
  return type metadata accessor for TabBarFlowController(0);
}

uint64_t type metadata accessor for TabBarFlowController(uint64_t a1)
{
  return sub_AE00(a1, qword_3D3878, (uint64_t)&nominal type descriptor for TabBarFlowController);
}

uint64_t sub_9E548(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = &unk_2F2DA8;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = &unk_2F2DC0;
  v2[4] = &unk_2F2DC0;
  return swift_updateClassMetadata2(a1, 256, 5, v2, a1 + 304);
}

uint64_t method lookup function for TabBarFlowController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TabBarFlowController);
}

uint64_t dispatch thunk of TabBarFlowController.navigationControllerDelegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of TabBarFlowController.navigationStackUpdateHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of TabBarFlowController.navigationStackUpdateHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of SmartPlayButtonController.apply(model:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of TabBarFlowController.tabChangeUpdateHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of TabBarFlowController.tabChangeUpdateHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of TabBarFlowController.tabChangeUpdateHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of TabBarFlowController.initializePageContextForMetrics()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of TabBarFlowController.__allocating_init(tabBarController:loadingNavigationController:asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 408))();
}

uint64_t sub_9E618()
{
  return type metadata accessor for TabChangeDelegate(0);
}

uint64_t sub_9E620(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for MetricsPipeline(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "(";
    v4[2] = &unk_2F2E10;
    v4[3] = &unk_2F2DC0;
    v4[4] = &unk_2F2DC0;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t dispatch thunk of LibraryViewControllerProviderProtocol.stationSettings(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of LibraryViewControllerProviderProtocol.downloadingEpisodesViewController(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_9E6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void (*v14)(uint64_t, _QWORD *, __n128);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D37F8);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UITabBarController.currentNavigationTab.getter();
  if (result != 18)
  {
    v6 = result;
    v7 = NavigationTab.metricsPageContext.getter(result);
    if (v8)
    {
      v9 = v7;
      v10 = v8;
      type metadata accessor for PageContextTracker(0);
      v11 = static PageContextTracker.shared.getter();
      PageContextTracker.push(_:)(v9, v10);
      swift_bridgeObjectRelease(v10);
      swift_release(v11);
    }
    v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    sub_3D600(v6);
    StoreTab.Identifier.init(navigationTab:)(v6);
    NSUserDefaults.mostRecentTabIdentifier.setter((uint64_t)v4);

    v13 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_tabChangeUpdateHandler;
    v14 = *(void (**)(uint64_t, _QWORD *, __n128))(v1
                                                           + OBJC_IVAR____TtC23ShelfKitCollectionViews17TabChangeDelegate_tabChangeUpdateHandler);
    if (v14)
    {
      v15 = *(_QWORD *)(v13 + 8);
      v16 = swift_retain(v15);
      v14(v6, _swiftEmptyArrayStorage, v16);
      sub_1D618((uint64_t)v14, v15);
    }
    return sub_91F0C(v6);
  }
  return result;
}

uint64_t sub_9E800()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_9E824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *, uint64_t *);
  uint64_t v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *, uint64_t *))(v2 + 16);
  v5 = a2;
  v6 = a1;
  return v3(&v6, &v5);
}

uint64_t sub_9E858(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
}

uint64_t sub_9E880(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_295520(a1, a2, *(uint64_t (**)(uint64_t *, char *))(v2 + 16));
}

uint64_t sub_9E888(_QWORD *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return sub_2954F8(a1, a2, *(uint64_t (**)(_QWORD, _QWORD))(v2 + 16));
}

void sub_9E8A8(uint64_t a1)
{
  sub_9E8E0(0.55, a1, (SEL *)&selRef_blackColor, &qword_3D3B80);
}

void sub_9E8C4(uint64_t a1)
{
  sub_9E8E0(0.14, a1, (SEL *)&selRef_whiteColor, &qword_3D3B88);
}

void sub_9E8E0(double a1, uint64_t a2, SEL *a3, _QWORD *a4)
{
  id v6;
  id v7;

  v6 = objc_msgSend((id)objc_opt_self(UIColor), *a3);
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", a1);

  *a4 = v7;
}

char *sub_9E958(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  char *v10;
  id v11;
  char *v12;
  objc_super v14;

  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20VideoControlBackdrop_primaryBackgroundView] = 0;
  v9 = objc_allocWithZone((Class)UIView);
  v10 = v4;
  v11 = objc_msgSend(v9, "initWithFrame:", a1, a2, a3, a4);
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews20VideoControlBackdrop_contentView] = v11;

  v14.receiver = v10;
  v14.super_class = (Class)type metadata accessor for VideoControlBackdrop();
  v12 = (char *)objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v12, "setClipsToBounds:", 1);
  objc_msgSend(v12, "addSubview:", *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews20VideoControlBackdrop_contentView]);

  return v12;
}

void sub_9EAE8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  void *v21;
  objc_super v22;

  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for VideoControlBackdrop();
  objc_msgSendSuper2(&v22, "layoutSubviews");
  sub_9ED40();
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20VideoControlBackdrop_primaryBackgroundView];
  if (!v1)
    goto LABEL_15;
  v2 = v1;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");
  v3 = objc_msgSend(v2, "contentView");
  v4 = objc_msgSend(v3, "subviews");

  v5 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
    if (v7)
      goto LABEL_4;
LABEL_14:

    swift_bridgeObjectRelease(v6);
LABEL_15:
    v21 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20VideoControlBackdrop_contentView];
    objc_msgSend(v0, "bounds");
    objc_msgSend(v21, "setFrame:");
    return;
  }
  if (v6 < 0)
    v20 = v6;
  else
    v20 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v7 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v6);
  if (!v7)
    goto LABEL_14;
LABEL_4:
  if (v7 >= 1)
  {
    v8 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
      else
        v9 = *(id *)(v6 + 8 * v8 + 32);
      v10 = v9;
      ++v8;
      v11 = objc_msgSend(v2, "contentView");
      objc_msgSend(v11, "bounds");
      v13 = v12;
      v15 = v14;
      v17 = v16;
      v19 = v18;

      objc_msgSend(v10, "setFrame:", v13, v15, v17, v19);
    }
    while (v7 != v8);
    goto LABEL_14;
  }
  __break(1u);
}

void sub_9ED40()
{
  char *v0;
  uint64_t v1;
  char *v2;
  id v3;
  id v4;
  double v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  Class isa;
  id v11;
  id v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews20VideoControlBackdrop_primaryBackgroundView;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20VideoControlBackdrop_primaryBackgroundView])
    return;
  v2 = v0;
  v3 = objc_msgSend((id)objc_opt_self(UIColorEffect), "colorEffectSaturate:", 1.8);
  v4 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v5 = UIRoundToScreenScale(17.5);

  v6 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", v5);
  if (!v6)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  v7 = v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_2EFC90;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v3;
  v40 = v9;
  specialized Array._endMutation()(v9);
  sub_E710(0, (unint64_t *)&qword_3D1648, UIVisualEffect_ptr);
  v39 = v3;
  v38 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v40);
  v11 = objc_msgSend((id)objc_opt_self(UIVisualEffect), "effectCombiningEffects:", isa);

  v12 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v11);
  v13 = *(void **)&v2[v1];
  *(_QWORD *)&v2[v1] = v12;

  v14 = *(void **)&v2[v1];
  if (v14)
    objc_msgSend(v14, "setUserInteractionEnabled:", 0);
  objc_msgSend(v2, "bounds");
  v19 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v15, v16, v17, v18);
  objc_msgSend(v19, "setUserInteractionEnabled:", 0);
  if (qword_3CF228 != -1)
    swift_once(&qword_3CF228, sub_9E8A8);
  v20 = qword_3D3B80;
  v21 = kCAFilterNormalBlendMode;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterNormalBlendMode);
  v23 = v22;
  sub_9F1DC((uint64_t)v19, v20, 1.0);
  objc_msgSend(v2, "bounds", swift_bridgeObjectRelease(v23).n128_f64[0]);
  v28 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v24, v25, v26, v27);
  objc_msgSend(v28, "setUserInteractionEnabled:", 0);
  if (qword_3CF230 != -1)
    swift_once(&qword_3CF230, sub_9E8C4);
  v29 = qword_3D3B88;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v31 = v30;
  sub_9F1DC((uint64_t)v28, v29, 1.0);
  *(_QWORD *)&v32 = swift_bridgeObjectRelease(v31).n128_u64[0];
  v33 = *(_QWORD *)&v2[v1];
  if (!v33)
    goto LABEL_15;
  objc_msgSend(v2, "insertSubview:atIndex:", v33, 0, v32);
  v34 = *(void **)&v2[v1];
  if (v34)
  {
    v35 = objc_msgSend(v34, "contentView");
    objc_msgSend(v35, "addSubview:", v19);

    v36 = *(void **)&v2[v1];
    if (v36)
    {
      v37 = objc_msgSend(v36, "contentView");
      objc_msgSend(v37, "addSubview:", v28);

    }
  }

}

id sub_9F154()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoControlBackdrop();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VideoControlBackdrop()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews20VideoControlBackdrop);
}

void sub_9F1DC(uint64_t a1, uint64_t a2, double a3)
{
  void *v6;
  NSString v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v6 = (void *)objc_opt_self(_UIVisualEffectLayerConfig);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "layerWithFillColor:opacity:filterType:", a2, v7, a3);

  v9 = objc_msgSend((id)objc_opt_self(_UIVisualEffectConfig), "configWithContentConfig:", v8);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "contentConfig");

    if (v11)
    {
      objc_msgSend(v11, "configureLayerView:", a1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_9F2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of UberCell.fadeOut.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_9F2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_9F300(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t result;
  Swift::Int v29;
  void (*v30)(_BYTE *, _QWORD);
  void (*v31)(char *);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *);
  uint64_t v48;
  char *v49;
  Swift::Int v50;
  uint64_t v51;
  _BYTE v52[32];
  uint64_t v53;

  v39 = a5;
  v40 = a8;
  v47 = a1;
  v48 = a2;
  v38 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v49 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v13 + 8));
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = __chkstk_darwin(AssociatedTypeWitness);
  v18 = (char *)&v38 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_getAssociatedTypeWitness(0, a6);
  v41 = *(_QWORD *)(v21 - 8);
  v42 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v38 - v22;
  v24 = dispatch thunk of Collection.count.getter(a3, a6);
  if (!v24)
    return static Array._allocateUninitialized(_:)(0, a4);
  v45 = AssociatedTypeWitness;
  v25 = v8;
  v26 = a4;
  v27 = v24;
  v53 = ContiguousArray.init()(v26);
  v43 = type metadata accessor for ContiguousArray(0, v26);
  ContiguousArray.reserveCapacity(_:)(v27);
  v46 = v25;
  result = dispatch thunk of Collection.startIndex.getter(a3, a6);
  if ((v27 & 0x8000000000000000) == 0)
  {
    v29 = v27;
    v44 = v20;
    while (v29)
    {
      v50 = v29;
      v30 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v52, v23, a3, a6);
      v31 = *(void (**)(char *))(v15 + 16);
      v32 = v15;
      v33 = v45;
      v31(v18);
      v30(v52, 0);
      v34 = v23;
      v35 = v18;
      v36 = v44;
      v37 = v51;
      v47(v35, v49);
      if (v37)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v33);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v42);
        swift_release(v53);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(v40, v49, v39);
      }
      v51 = 0;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v33);
      ContiguousArray.append(_:)(v36, v43);
      result = dispatch thunk of Collection.formIndex(after:)(v34, a3, a6);
      v29 = v50 - 1;
      v15 = v32;
      v18 = v35;
      v23 = v34;
      if (v50 == 1)
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v42);
        return v53;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_9F5F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_A06C4(a1, a2, a3, &qword_3D3DA0);
}

uint64_t sub_9F5FC()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3DA0);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_9F640(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_99E20();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_9F664()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

double sub_9F67C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double result;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FilterablePresenterRedirectContainer(0, v9, v10, v11);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a1, a2, v13);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v15, v8, a2);
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_3D3DB8);
  if ((swift_dynamicCast(a3, v15, v12, v16, 6) & 1) == 0)
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_9F778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of FilterablePresenter.filteringEnabled.getter(a2, a3);
}

uint64_t sub_9F7A0@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  return sub_9F7C8(a1, a2, a3, a4);
}

uint64_t sub_9F7C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t result;

  v9 = type metadata accessor for NavigationItemFilterablePresenterHelper();
  swift_allocObject(v9, 48, 7);
  swift_unknownObjectRetain(v4);
  result = sub_A078C(v4, a1, a2, a3);
  a4[3] = v9;
  a4[4] = (uint64_t)&off_37E160;
  *a4 = result;
  return result;
}

_QWORD *sub_9F858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  return sub_9F880(a1, a2, a3, a4, a5, a6, a7);
}

_QWORD *sub_9F880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *result;
  uint64_t v20;

  v8 = v7;
  v16 = dispatch thunk of FilterablePresenter.filteringEnabled.getter(a5, a6);
  CurrentValueSubject.value.getter(&v20);
  swift_release(v16);
  if (v20 == 1)
  {
    v17 = type metadata accessor for FadableNavigationBarFilterablePresenterHelper();
    swift_allocObject(v17, 48, 7);
    swift_retain(a4);
    v18 = a3;
    swift_unknownObjectRetain(v8);
    swift_unknownObjectRetain(a1);
    result = sub_9FAAC(a4, v18, v8, a1, a2, a5, a6);
    *(_QWORD *)(a7 + 24) = v17;
    *(_QWORD *)(a7 + 32) = &off_37E178;
  }
  else
  {
    result = 0;
    *(_OWORD *)(a7 + 24) = 0u;
    *(_OWORD *)(a7 + 8) = 0u;
  }
  *(_QWORD *)a7 = result;
  return result;
}

uint64_t sub_9F98C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_9F778(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8));
}

uint64_t sub_9F9A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_9F7A0(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

_QWORD *sub_9F9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_9F858(a1, a2, a3, a4, *(_QWORD *)(a5 + 16), *(_QWORD *)(a6 - 8), a7);
}

uint64_t sub_9F9CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  swift_allocObject(v4, 48, 7);
  return sub_A078C(a1, a2, a3, a4);
}

_QWORD *sub_9FA2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  swift_allocObject(v7, 48, 7);
  return sub_9FAAC(a1, a2, a3, a4, a5, a6, a7);
}

_QWORD *sub_9FAAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[4];

  v39 = a5;
  v46 = a3;
  v43 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a7);
  v13 = type metadata accessor for Array(255, AssociatedTypeWitness);
  v14 = type metadata accessor for CurrentValueSubject(255, v13, &type metadata for Never, &protocol witness table for Never);
  v15 = type metadata accessor for CurrentValueSubject(255, AssociatedTypeWitness, &type metadata for Never, &protocol witness table for Never);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v14);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v15);
  v48[0] = v14;
  v48[1] = v15;
  v48[2] = WitnessTable;
  v48[3] = v17;
  v40 = type metadata accessor for Publishers.CombineLatest(0, v48);
  v42 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v19 = (char *)&v38 - v18;
  v38 = v7;
  v7[3] = _swiftEmptyArrayStorage;
  v41 = v7 + 3;
  v44 = a1;
  v45 = a4;
  v7[2] = a1;
  v20 = v39;
  v7[4] = a4;
  v7[5] = v20;
  swift_retain(a1);
  swift_unknownObjectRetain(a4);
  v21 = dispatch thunk of FilterablePresenter.filters.getter(a6, a7);
  v48[0] = v21;
  v22 = dispatch thunk of FilterablePresenter.selectedFilter.getter(a6, a7);
  v47 = v22;
  Publisher.combineLatest<A>(_:)(&v47, v14, v15, WitnessTable, v17);
  swift_release(v21);
  swift_release(v22);
  v23 = swift_allocObject(&unk_37E288, 24, 7);
  v24 = v38;
  swift_weakInit(v23 + 16, v38);
  v25 = (_QWORD *)swift_allocObject(&unk_37E2B0, 56, 7);
  v25[2] = a6;
  v25[3] = a7;
  v26 = v46;
  v25[4] = v46;
  v25[5] = v23;
  v27 = v43;
  v25[6] = v43;
  v28 = (_QWORD *)swift_allocObject(&unk_37E2D8, 48, 7);
  v28[2] = a6;
  v28[3] = a7;
  v28[4] = sub_A1EAC;
  v28[5] = v25;
  swift_unknownObjectRetain(v26);
  v29 = v27;
  v30 = v40;
  v31 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.CombineLatest<A, B>, v40);
  v32 = Publisher<>.sink(receiveValue:)(sub_A1EE0, v28, v30, v31);
  v33 = swift_release(v28);
  (*(void (**)(char *, uint64_t, __n128))(v42 + 8))(v19, v30, v33);
  v34 = v41;
  swift_beginAccess(v41, v48, 33, 0);
  v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v36 = sub_A1BBC();
  AnyCancellable.store<A>(in:)(v34, v35, v36);
  swift_endAccess(v48);
  swift_release(v32);
  swift_release(v44);

  swift_unknownObjectRelease(v26);
  swift_unknownObjectRelease(v45);
  return v24;
}

void sub_9FDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD v22[3];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a7);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v15 = (_QWORD *)((char *)&v22[-1] - v14);
  v16 = dispatch thunk of FilterablePresenter.filteringEnabled.getter(a6, a7);
  CurrentValueSubject.value.getter(v22);
  swift_release(v16);
  if (LOBYTE(v22[0]) == 1)
  {
    swift_beginAccess(a4 + 16, v22, 0, 0);
    Strong = swift_weakLoadStrong(a4 + 16);
    if (Strong)
    {
      v18 = Strong;
      v19 = dispatch thunk of FilterablePresenter.selectedFilter.getter(a6, a7);
      CurrentValueSubject.value.getter(v15);
      swift_release(v19);
      sub_A1EEC(a3, a1, (uint64_t)v15, a6, a7);
      v20 = swift_release(v18);
      (*(void (**)(_QWORD *, uint64_t, __n128))(v13 + 8))(v15, AssociatedTypeWitness, v20);
    }
  }
}

uint64_t sub_9FF10(char *a1, uint64_t (*a2)(uint64_t, char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;

  v7 = *(_QWORD *)a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a5);
  v9 = type metadata accessor for Array(255, AssociatedTypeWitness);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v9, AssociatedTypeWitness, 0, 0);
  return a2(v7, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_9FFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _BYTE v58[40];
  _QWORD v59[5];

  v50 = a3;
  v51 = a2;
  v57 = a6;
  v9 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v9);
  v53 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a5);
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  v15 = (char *)&v48 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v16);
  v55 = (uint64_t)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v48 - v19;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a5, a4, AssociatedTypeWitness, &protocol requirements base descriptor for FilterablePresenter, &associated conformance descriptor for FilterablePresenter.FilterablePresenter.Filter: FilterablePresenterFilter);
  v52 = dispatch thunk of FilterablePresenterFilter.title.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  v54 = v22;
  v23 = type metadata accessor for ArtworkModel(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v56 = v20;
  v24(v20, 1, 1, v23);
  LODWORD(v51) = dispatch thunk of static Equatable.== infix(_:_:)(a1, v51, AssociatedTypeWitness, *(_QWORD *)(*(_QWORD *)(AssociatedConformanceWitness + 8) + 8));
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, AssociatedTypeWitness);
  v25 = *(unsigned __int8 *)(v12 + 80);
  v26 = (v25 + 40) & ~v25;
  v27 = (char *)swift_allocObject(&unk_37E300, v26 + v13, v25 | 7);
  v28 = v49;
  *((_QWORD *)v27 + 2) = a4;
  *((_QWORD *)v27 + 3) = v28;
  v29 = v50;
  *((_QWORD *)v27 + 4) = v50;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v27[v26], v15, AssociatedTypeWitness);
  v30 = swift_unknownObjectRetain(v29);
  v31 = static Link.Presentation.textFollowsTintColor.getter(v30);
  v32 = Link.Presentation.init(rawValue:)(0);
  v33 = Link.Presentation.init(rawValue:)(v32);
  v34 = Link.Presentation.init(rawValue:)(v33 & v31);
  if (v34 != v31)
  {
    v34 = Link.Presentation.init(rawValue:)(v32 | v31);
    v32 = v34;
  }
  v35 = v53;
  static ActionMetrics.notInstrumented.getter(v34);
  v36 = type metadata accessor for ClosureAction(0);
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  v37 = ClosureAction.init(title:presentationStyle:actionMetrics:closure:)(0, 0, v32, v35, sub_A240C, v27);
  v59[3] = v36;
  v59[4] = sub_A2470();
  v59[0] = v37;
  v38 = ActionMenu.ID.init()();
  v40 = v39;
  v42 = v55;
  v41 = (uint64_t)v56;
  sub_D184((uint64_t)v56, v55, &qword_3D0A58);
  sub_D184((uint64_t)v59, (uint64_t)v58, (uint64_t *)&unk_3D30D0);
  swift_bridgeObjectRetain(v40);
  v43 = v54;
  v44 = swift_bridgeObjectRetain(v54);
  v45 = v57;
  ActionMenu.Item.init(id:title:icon:role:state:action:)(v38, v40, v52, v43, v42, 2, (v51 & 1) == 0, v58, v44);
  v46 = type metadata accessor for ActionMenu.Child(0);
  swift_storeEnumTagMultiPayload(v45, v46, 0);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v40);
  sub_D1D4(v41, &qword_3D0A58);
  return sub_D1D4((uint64_t)v59, (uint64_t *)&unk_3D30D0);
}

uint64_t sub_A0330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a4);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v10 = (char *)&v13 - v9;
  v11 = dispatch thunk of FilterablePresenter.selectedFilter.getter(a3, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, AssociatedTypeWitness);
  CurrentValueSubject.value.setter(v10);
  return swift_release(v11);
}

uint64_t sub_A03F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  __n128 v22;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  Swift::String v42;
  Swift::String v43;

  v38 = a1;
  v39 = a4;
  v6 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - v14;
  v16 = (void *)objc_opt_self(NSBundle);
  v17 = objc_msgSend(v16, "mainBundle", v38, v39);
  v43._countAndFlagsBits = 0xD000000000000040;
  v43._object = (void *)0x800000000030AA30;
  v18._object = (void *)0x800000000030AA00;
  v18._countAndFlagsBits = 0xD000000000000020;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v43);

  v42 = v20;
  swift_bridgeObjectRetain(v20._object);
  v21._countAndFlagsBits = 32;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  v22 = swift_bridgeObjectRelease(v20._object);
  v25 = v42;
  object = v25._object;
  countAndFlagsBits = v25._countAndFlagsBits;
  AttributeContainer.init()(v22);
  AttributedString.init(_:attributes:)(countAndFlagsBits, object, v8);
  KeyPath = swift_getKeyPath(&unk_2F3020);
  v26 = swift_getKeyPath(&unk_2F3050);
  v42._countAndFlagsBits = static Font.body.getter(v26);
  v27 = sub_A1CA0();
  AttributedString.subscript.setter(&v42, v26, v27);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, AssociatedTypeWitness, &protocol requirements base descriptor for FilterablePresenter, &associated conformance descriptor for FilterablePresenter.FilterablePresenter.Filter: FilterablePresenterFilter);
  v30 = dispatch thunk of FilterablePresenterFilter.title.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  v32 = v31;
  AttributeContainer.init()(v33);
  AttributedString.init(_:attributes:)(v30, v32, v8);
  v40 = swift_getKeyPath(&off_2F3090);
  v34 = swift_getKeyPath(&unk_2F30C0);
  sub_A1E18();
  v42._countAndFlagsBits = static UIFont.bodyEmph.getter();
  v35 = sub_99E20();
  AttributedString.subscript.setter(&v42, v34, v35);
  static AttributedString.+ infix(_:_:)(v15, v12);
  v36 = *(void (**)(char *, uint64_t))(v10 + 8);
  v36(v12, v9);
  return ((uint64_t (*)(char *, uint64_t))v36)(v15, v9);
}

uint64_t sub_A06C4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v7 = *a1;
  v8 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a4);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v8, &v7, v5, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_A0718()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for FadableNavigationBarFilterablePresenterHelper()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_EBA3641CCF5A79299249B1AA3CA1981645FadableNavigationBarFilterablePresenterHelper);
}

void sub_A076C()
{
  qword_3D3BC8 = 0x4042000000000000;
}

void sub_A077C()
{
  qword_3D3BD0 = 0x4028000000000000;
}

uint64_t sub_A078C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __n128 v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v41;
  _QWORD v42[6];

  v4[2] = _swiftEmptyArrayStorage;
  v8 = v4 + 2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a4);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &protocol requirements base descriptor for FilterablePresenter, &associated conformance descriptor for FilterablePresenter.FilterablePresenter.Filter: FilterablePresenterFilter);
  v12 = type metadata accessor for NavigationItemFilterablePresenterHelper.FilterWrapper(255, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  WitnessTable = swift_getWitnessTable(&unk_2F31C0, v12);
  type metadata accessor for ScopeBar(0, v12, WitnessTable);
  v14 = (void *)ScopeBar.__allocating_init()();
  objc_msgSend(v14, "setContentInsetAdjustmentBehavior:", 2);
  objc_msgSend(v14, "setContentOffset:", 0.0, 0.0);
  objc_msgSend(v14, "layoutSubviews");
  v4[4] = v14;
  v4[5] = &off_37E158;
  v15 = v14;
  v42[0] = dispatch thunk of FilterablePresenter.filters.getter(a3, a4);
  v16 = dispatch thunk of FilterablePresenter.selectedFilter.getter(a3, a4);
  v17 = (_QWORD *)swift_allocObject(&unk_37E1D0, 48, 7);
  v17[2] = a3;
  v17[3] = a4;
  v17[4] = v15;
  v17[5] = v16;
  v18 = type metadata accessor for Array(255, AssociatedTypeWitness);
  v19 = type metadata accessor for CurrentValueSubject(0, v18, &type metadata for Never, &protocol witness table for Never);
  v20 = v15;
  v21 = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v19);
  v22 = Publisher<>.sink(receiveValue:)(sub_A1BB0, v17, v19, v21);
  swift_release(v17);
  swift_release(v42[0]);
  swift_beginAccess(v8, v42, 33, 0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
  v24 = sub_A1BBC();
  AnyCancellable.store<A>(in:)(v8, v23, v24);
  swift_endAccess(v42);
  swift_release(v22);
  v25 = (_QWORD *)swift_allocObject(&unk_37E1F8, 40, 7);
  v25[2] = a3;
  v25[3] = a4;
  v25[4] = a1;
  v26 = swift_unknownObjectRetain(a1);
  dispatch thunk of ScopeBar.selectionHandler.setter(sub_A1C2C, v25, v26);
  v42[0] = dispatch thunk of FilterablePresenter.selectedFilter.getter(a3, a4);
  v27 = (_QWORD *)swift_allocObject(&unk_37E220, 40, 7);
  v27[2] = a3;
  v27[3] = a4;
  v27[4] = v20;
  v28 = type metadata accessor for CurrentValueSubject(0, AssociatedTypeWitness, &type metadata for Never, &protocol witness table for Never);
  v29 = v20;
  v30 = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v28);
  v31 = Publisher<>.sink(receiveValue:)(sub_A1C5C, v27, v28, v30);
  swift_release(v27);
  swift_release(v42[0]);
  swift_beginAccess(v8, v42, 33, 0);
  AnyCancellable.store<A>(in:)(v8, v23, v24);
  swift_endAccess(v42);
  v32 = objc_msgSend(a2, "_bottomPalette", swift_release(v31).n128_f64[0]);
  if (v32)
  {
    v33 = v32;
    v34 = type metadata accessor for MultiViewHostingPalette();
    v35 = (id)swift_dynamicCastClass(v33, v34);
    if (v35)
      goto LABEL_5;

  }
  v35 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MultiViewHostingPalette()), "init");
  objc_msgSend(a2, "_setBottomPalette:", v35);
LABEL_5:
  *(_QWORD *)(v41 + 24) = v35;
  v36 = qword_3CF238;
  v37 = v35;
  if (v36 != -1)
    swift_once(&qword_3CF238, sub_A076C);
  v38 = qword_3D3BC8;
  if (qword_3CF240 != -1)
    swift_once(&qword_3CF240, sub_A077C);
  v42[0] = v38;
  v42[1] = 0;
  v42[2] = 0;
  v42[3] = qword_3D3BD0;
  v42[4] = 0;
  v42[5] = 0;
  sub_1ECBD4(v29, (uint64_t)v42);

  swift_unknownObjectRelease(a1);
  return v41;
}

uint64_t sub_A0BE8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t WitnessTable;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  int v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t AssociatedConformanceWitness;
  char v59;
  uint64_t (*v60)(uint64_t *, uint64_t);
  void (*v61)(char *, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t *, uint64_t);
  char *v75;
  char *v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t TupleTypeMetadata2;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  char v90[16];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v82 = a3;
  v89 = a1;
  v8 = *(_QWORD *)((swift_isaMask & *a2) + class metadata base offset for ScopeBar);
  v88 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(a1);
  v76 = (char *)&v70 - v9;
  v11 = *(_QWORD *)(v10 + class metadata base offset for CurrentValueSubject);
  v12 = type metadata accessor for Optional(255, v11);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v12, v12, 0, 0);
  v73 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  v81 = (char *)&v70 - v13;
  v83 = type metadata accessor for Optional(0, v8);
  v87 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v75 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v70 - v16;
  v85 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v18);
  v80 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v84 = (char *)&v70 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v70 - v23;
  v25 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v26);
  v78 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (uint64_t *)((char *)&v70 - v29);
  v93 = *v89;
  v72 = a4;
  v91 = a4;
  v92 = a5;
  v71 = a5;
  v31 = type metadata accessor for Array(0, v11);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v31);
  v34 = sub_9F300((void (*)(char *, char *))sub_A1C68, (uint64_t)v90, v31, v8, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v33);
  dispatch thunk of ScopeBar.scopes.setter(v34);
  v89 = v30;
  v35 = CurrentValueSubject.value.getter(v30);
  v77 = a2;
  dispatch thunk of ScopeBar.selectedScope.getter(v35);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
  v82 = v8;
  if (v36(v17, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v87 + 8))(v17, v83);
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v37(v24, 1, 1, v11);
    v38 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  }
  else
  {
    v38 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v38(v24, v17, v11);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v17, v82);
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v37(v24, 0, 1, v11);
  }
  v39 = v25;
  v40 = v24;
  v41 = v84;
  v74 = (void (*)(char *, uint64_t *, uint64_t))v38;
  v38(v84, (char *)v89, v11);
  v37(v41, 0, 1, v11);
  v42 = v85;
  v43 = v81;
  v44 = &v81[*(int *)(TupleTypeMetadata2 + 48)];
  v45 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  v45(v81, v40, v12);
  v45(v44, v41, v12);
  v79 = v39;
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v47 = v46(v43, 1, v11);
  v48 = v80;
  if (v47 == 1)
  {
    v49 = *(void (**)(char *, uint64_t))(v42 + 8);
    v49(v41, v12);
    v49(v40, v12);
    v50 = v46(v44, 1, v11);
    v51 = v87;
    v52 = v79;
    if (v50 == 1)
    {
      v49(v43, v12);
LABEL_12:
      v60 = *(uint64_t (**)(uint64_t *, uint64_t))(v52 + 8);
      return v60(v89, v11);
    }
    goto LABEL_9;
  }
  v53 = v40;
  v45(v80, v43, v12);
  v54 = v46(v44, 1, v11);
  v55 = v48;
  v51 = v87;
  if (v54 == 1)
  {
    v56 = *(void (**)(char *, uint64_t))(v85 + 8);
    v56(v84, v12);
    v56(v53, v12);
    v52 = v79;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v55, v11);
LABEL_9:
    (*(void (**)(char *, uint64_t))(v73 + 8))(v43, TupleTypeMetadata2);
LABEL_11:
    v62 = v78;
    v74(v78, v89, v11);
    v63 = v76;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v76, v62, v11);
    v64 = v88;
    v65 = v52;
    v66 = v75;
    v67 = v82;
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v75, v63, v82);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v66, 0, 1, v67);
    dispatch thunk of ScopeBar.selectScope(_:animated:)(v66, 1);
    v68 = v66;
    v52 = v65;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v68, v83);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v67);
    goto LABEL_12;
  }
  v57 = v78;
  v52 = v79;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v44, v11);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v71, v72, v11, &protocol requirements base descriptor for FilterablePresenter, &associated conformance descriptor for FilterablePresenter.FilterablePresenter.Filter: FilterablePresenterFilter);
  v59 = dispatch thunk of static Equatable.== infix(_:_:)(v55, v57, v11, *(_QWORD *)(*(_QWORD *)(AssociatedConformanceWitness + 8) + 8));
  v60 = *(uint64_t (**)(uint64_t *, uint64_t))(v52 + 8);
  v60((uint64_t *)v57, v11);
  v61 = *(void (**)(char *, uint64_t))(v85 + 8);
  v61(v84, v12);
  v61(v53, v12);
  v60((uint64_t *)v55, v11);
  v61(v43, v12);
  if ((v59 & 1) == 0)
    goto LABEL_11;
  return v60(v89, v11);
}

